//
// This file was generated by the Retargetable Decompiler
// Website: https://retdec.com
//

#include <math.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <windows.h>

// ---------------- Integer Types Definitions -----------------

typedef int64_t int128_t;

// ----------------- Float Types Definitions ------------------

typedef float float32_t;
typedef double float64_t;

// ------------------------ Structures ------------------------

struct _EXCEPTION_POINTERS {
    struct _EXCEPTION_RECORD * e0;
    struct _CONTEXT * e1;
};

struct _EXCEPTION_RECORD {
    int32_t e0;
    int32_t e1;
    struct _EXCEPTION_RECORD * e2;
    int64_t * e3;
    int32_t e4;
    int32_t e5[1];
};

struct _IO_FILE {
    int32_t e0;
};

struct _M128A {
    int64_t e0;
    int64_t e1;
};

struct _CONTEXT {
    int64_t e0;
    int64_t e1;
    int64_t e2;
    int64_t e3;
    int64_t e4;
    int64_t e5;
    int32_t e6;
    int32_t e7;
    int16_t e8;
    int16_t e9;
    int16_t e10;
    int16_t e11;
    int16_t e12;
    int16_t e13;
    int32_t e14;
    int64_t e15;
    int64_t e16;
    int64_t e17;
    int64_t e18;
    int64_t e19;
    int64_t e20;
    int64_t e21;
    int64_t e22;
    int64_t e23;
    int64_t e24;
    int64_t e25;
    int64_t e26;
    int64_t e27;
    int64_t e28;
    int64_t e29;
    int64_t e30;
    int64_t e31;
    int64_t e32;
    int64_t e33;
    int64_t e34;
    int64_t e35;
    int64_t e36;
    int64_t e37;
    int64_t e38;
    struct _M128A e39[26];
    int64_t e40;
    int64_t e41;
    int64_t e42;
    int64_t e43;
    int64_t e44;
    int64_t e45;
};

struct _onexit_table_t {
    void (**e0)();
    void (**e1)();
    void (**e2)();
};

struct tagRECT {
    int32_t e0;
    int32_t e1;
    int32_t e2;
    int32_t e3;
};

// ------------------- Function Prototypes --------------------

int64_t entry_point(int64_t a1, int64_t a2, int64_t a3);
int64_t function_180001000(void);
int64_t function_180001010(void);
int64_t function_180001020(void);
int64_t function_180001030(int64_t a1, char * a2, int64_t a3, int64_t a4);
int64_t function_180001090(int64_t result);
int64_t function_1800010b0(int64_t a1);
int64_t function_1800010c0(int64_t result);
int64_t function_1800011c0(int64_t a1);
int64_t function_1800011f0(int64_t result);
int64_t function_180001200(int64_t a1);
int64_t function_180001240(int64_t result);
int64_t function_180001250(int64_t result);
int64_t function_1800012a0(int64_t result, int64_t a2);
int64_t function_180001440(int64_t result);
int64_t function_180001460(int64_t result);
int64_t function_180001520(int64_t a1);
int64_t function_180001550(int64_t result);
int64_t function_180001570(int64_t result);
int64_t function_1800015d0(int64_t a1);
int64_t function_180001600(int64_t a1, int64_t a2);
int64_t function_180001620(int64_t a1, int64_t a2);
int64_t function_180001690(int64_t a1);
int64_t function_180001760(int32_t * a1, int64_t a2);
int64_t function_180001810(int32_t * a1, int32_t * a2);
int64_t function_180001960(int64_t * a1);
int64_t function_180001a00(int64_t * a1);
int64_t function_180001b00(int64_t a1);
int64_t function_180001b50(int64_t * a1, int64_t a2);
int64_t function_180001c00(int64_t a1);
int64_t function_180001cb0(int64_t a1);
int64_t function_180001d60(int64_t a1);
int64_t function_180001dd0(int64_t a1, int64_t a2);
int64_t function_180001e80(int64_t a1, int64_t a2);
int64_t function_180001ed0(int64_t a1, int64_t a2);
int64_t function_180001fd0(int64_t * a1, int64_t a2);
int64_t function_1800020d0(int64_t * a1, int64_t a2);
int64_t function_180002220(void);
int64_t function_1800022d0(int64_t a1);
int64_t function_180002390(int64_t a1);
int64_t function_180002450(int64_t a1);
int64_t function_1800024d0(void);
int64_t function_1800025e0(int64_t a1);
int64_t function_1800028b0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_180002920(int64_t * a1, int16_t * a2, int32_t a3, int64_t a4);
int64_t function_180002980(int64_t a1, int64_t hInstance);
int64_t function_180002a70(void);
int64_t function_180002d40(void);
int64_t function_1800035c0(int64_t a1);
int64_t function_180003990(int64_t hDlg2, int64_t a2, int64_t a3, int64_t a4);
int64_t function_180003a30(void);
int64_t function_180003a40(int64_t * a1, char * a2, int32_t * a3, int32_t * a4);
int64_t function_180003a90(int64_t a1, int64_t * a2);
int64_t function_180003af0(int64_t a1);
int64_t function_180003b40(int64_t a1, int64_t a2, int64_t a3);
int64_t function_180003ba0(int64_t a1);
int64_t function_180003be0(int64_t a1);
int64_t function_180003c30(int64_t a1);
int64_t function_180003c80(int64_t a1);
int64_t function_180003e10(int64_t * a1, int64_t a2, int64_t a3);
int64_t function_180003f40(int64_t a1, int64_t a2, int64_t a3);
int64_t function_180004f90(int64_t a1, int64_t * a2);
int64_t function_180005050(int64_t a1, int64_t a2, int64_t * a3);
int64_t function_180005100(int64_t a1, int64_t a2, uint32_t a3, int32_t a4, int64_t a5, int64_t * a6);
int64_t function_180005c80(int64_t a1, int64_t a2, uint32_t a3, int32_t a4, int64_t a5, int64_t * a6, int64_t a7);
int64_t function_180006250(int64_t a1, int64_t a2, int64_t a3);
int64_t function_180006420(int64_t a1, int64_t a2, int64_t a3);
int64_t function_1800067d0(int64_t * a1, int64_t a2);
int64_t function_1800068e0(int64_t * a1);
int64_t function_180006b30(int64_t * a1);
int64_t function_180006f20(int64_t a1, int64_t a2);
int64_t function_180006f90(int64_t a1, int32_t * a2);
int64_t function_1800077e0(int64_t a1, uint32_t a2, int32_t a3);
int64_t function_180007a40(int64_t a1, uint32_t a2, int32_t a3);
int64_t function_180007d40(int64_t a1, int64_t a2);
int64_t function_180008650(int64_t a1, uint32_t a2, int64_t a3, int64_t a4);
int64_t function_180008870(int64_t a1, int64_t a2);
int64_t function_180008dc0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_180008fc0(int64_t a1, int32_t a2, int64_t a3, int64_t a4);
int64_t function_180009420(int64_t a1, int64_t a2);
int64_t function_180009500(int64_t a1, int64_t a2);
int64_t function_180009870(int64_t a1, int64_t a2);
int64_t function_180009990(int64_t a1, int32_t * a2);
int64_t function_18000a190(int64_t a1, uint32_t a2, int32_t a3);
int64_t function_18000a5e0(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_18000a7f0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_18000aa90(int64_t a1, int64_t a2);
int64_t function_18000b0f0(int64_t a1, int64_t a2);
int64_t function_18000b390(int64_t a1, int64_t a2);
int64_t function_18000b660(int64_t a1, int64_t a2, int64_t a3);
int64_t function_18000b870(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_18000ba90(int64_t a1, int64_t a2);
int64_t function_18000c020(int64_t a1, uint32_t a2, int32_t a3);
int64_t function_18000c0c0(int64_t a1, uint32_t a2, int32_t a3);
int64_t function_18000c1b0(int64_t a1, int32_t * a2);
int64_t function_18000c5f0(int64_t a1, uint32_t a2, int64_t * a3);
int64_t function_18000cb20(int64_t a1, uint32_t a2, int64_t * a3);
int64_t function_18000d030(int64_t a1, uint32_t a2, int64_t * a3);
int64_t function_18000d570(int64_t a1, int64_t a2, int32_t a3);
int64_t function_18000d9f0(int64_t a1, int64_t a2, int32_t a3, int64_t a4);
int64_t function_18000dc10(int64_t a1);
int64_t function_18000dd30(int64_t a1);
int64_t function_18000de40(int64_t a1);
int64_t function_18000e400(int64_t a1, int64_t a2, int32_t a3);
int64_t function_18000e710(int64_t a1, int64_t a2);
int64_t function_18000e860(int64_t a1, int64_t a2);
int64_t function_18000f210(int64_t a1, int64_t a2);
int64_t function_18000fbf0(int64_t a1, int32_t * a2, int64_t a3);
int64_t function_18000ffa0(int64_t a1, uint32_t a2, int64_t * a3);
int64_t function_180010560(int64_t result);
int64_t function_180010580(int64_t a1, int32_t * a2);
int64_t function_180010b10(int64_t a1, uint32_t a2, int64_t * a3);
int64_t function_180011140(int64_t a1, uint32_t a2, int64_t * a3);
int64_t function_180011770(int64_t a1, uint32_t a2, int64_t * a3);
int64_t function_180011d40(int64_t a1, uint32_t a2, int64_t * a3);
int64_t function_180012300(int64_t a1, int64_t a2, int32_t a3);
int64_t function_180012640(int64_t a1, int64_t a2, int32_t a3);
int64_t function_180012b60(int64_t a1, int64_t a2, int64_t a3, int32_t a4);
int64_t function_180012dd0(int64_t a1, int64_t a2);
int64_t function_180012ed0(int64_t a1, int64_t a2);
int64_t function_180013c40(int64_t a1, int64_t a2);
int64_t function_180014610(int64_t a1, int64_t a2, uint32_t a3);
int64_t function_180014820(int64_t a1, int32_t a2, int64_t a3, int64_t a4);
int64_t function_180014c60(int64_t a1, int64_t a2);
int64_t function_180014d40(int64_t a1, int64_t a2);
int64_t function_180014f10(int64_t a1, int64_t a2, int32_t a3, int64_t a4);
int64_t function_1800150f0(int64_t a1);
int64_t function_1800156a0(int64_t result);
int64_t function_1800156b0(int64_t a1, int32_t * a2);
int64_t function_1800160e0(int64_t a1, int32_t a2, int64_t * a3);
int64_t function_1800166c0(int64_t a1, int32_t a2, int64_t * a3);
int64_t function_180016cf0(int64_t a1, int32_t a2, int64_t * a3);
int64_t function_1800172f0(int64_t a1, int32_t a2, int64_t * a3);
int64_t function_180017ab0(int64_t a1, int32_t a2, int64_t * a3);
int64_t function_180018190(int64_t a1, uint32_t a2, int64_t * a3);
int64_t function_1800188d0(int64_t a1, int32_t a2, int64_t * a3);
int64_t function_1800190d0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_1800196f0(int64_t a1, int64_t a2, int64_t a3, int32_t a4);
int64_t function_1800198f0(int64_t a1, int64_t a2, int32_t a3);
int64_t function_180019c40(int64_t a1, int64_t a2, int64_t a3);
int64_t function_180019f30(int64_t a1, int64_t a2, int32_t a3);
int64_t function_18001a2f0(int64_t a1, int64_t a2);
int64_t function_18001a460(int64_t a1, int64_t a2);
int64_t function_18001ac20(int64_t a1, int64_t a2, uint32_t a3);
int64_t function_18001ae80(int64_t a1, int32_t a2, int64_t a3, int64_t a4);
int64_t function_18001b340(int64_t a1, int64_t a2);
int64_t function_18001b420(int64_t a1, int64_t a2);
int64_t function_18001b660(int64_t a1, int64_t a2);
int64_t function_18001b7d0(int64_t a1, int64_t a2);
int64_t function_18001c9d0(int64_t a1, int64_t a2, int32_t a3);
int64_t function_18001cd00(int64_t a1);
int64_t function_18001ce80(int64_t a1);
int64_t function_18001d1f0(int64_t * a1, int64_t * a2);
int64_t function_18001d360(int64_t a1, int64_t hWnd2);
int64_t function_18001d4e0(int64_t a1, int64_t * a2);
int64_t function_18001d5c0(int64_t a1, int64_t * a2);
int64_t function_18001d710(int64_t a1, int64_t * a2);
int64_t function_18001d8d0(int64_t a1, int128_t * a2);
int64_t function_18001dbf0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_18001dd00(int64_t a1, int64_t a2);
int128_t function_18001de90(uint64_t a1);
int64_t function_18001df30(void);
int64_t function_18001dff0(void);
int64_t function_18001e410(void);
int64_t function_18001e550(int64_t a1, int32_t * a2, int64_t a3, int32_t * a4);
int64_t function_18001e750(int64_t a1);
int64_t function_18001e810(int64_t * a1, int64_t a2);
int64_t function_18001e940(int64_t a1, int64_t a2, char * a3, int64_t a4);
int64_t function_18001ea30(int64_t a1, int64_t a2, uint32_t a3);
int64_t function_18001eb30(int64_t * a1, int32_t a2, int64_t a3, int64_t a4);
int64_t function_1800202f0(int64_t a1);
int64_t * function_180020360(int32_t size);
void function_180020370(int64_t * ptr);
int64_t function_180020380(uint32_t a1, int64_t a2, uint64_t a3);
int64_t function_180020660(int32_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6);
int64_t function_180020b70(int64_t a1, int32_t a2);
int64_t function_180021060(int32_t a1, int64_t a2, int64_t a3);
int64_t function_180021570(int32_t a1, int64_t a2, int64_t a3);
int64_t function_180021580(int64_t a1, uint64_t a2, int64_t a3, int64_t a4);
int64_t function_180021870(int64_t a1, int64_t * a2, int64_t * a3, int64_t * a4, int64_t a5, int64_t a6);
int64_t function_180021a90(uint64_t a1, int64_t * a2);
int64_t function_180021af0(int64_t a1, int64_t a2, int32_t a3, int64_t a4, int64_t a5);
int64_t function_180022040(int64_t * a1, int64_t a2, int64_t a3);
int64_t function_1800221c0(int64_t * a1, int64_t a2, int64_t a3);
int64_t function_1800223e0(int64_t a1, int64_t a2, int32_t * a3);
int64_t function_180022450(int64_t a1, int64_t a2, int64_t * a3);
int64_t function_180022520(int64_t a1, int64_t a2, int64_t * a3);
int64_t function_1800226a0(int64_t a1, int64_t a2, int64_t * a3);
int64_t function_180022720(int64_t a1);
int64_t function_180022770(int64_t a1);
int64_t function_180022830(int64_t a1, int64_t * a2, int64_t * a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7, int64_t a8);
int64_t function_180022880(int64_t a1);
int64_t function_1800228a0(int64_t a1);
int64_t function_180022920(int64_t a1);
int64_t function_1800229e0(int64_t * a1);
int64_t function_1800229f0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_180022a10(int64_t a1, int32_t a2, int32_t a3, int32_t a4, int64_t a5);
int64_t function_180022c90(int64_t a1, int32_t a2, int64_t a3, int64_t a4);
int64_t function_1800230a0(int64_t a1, int64_t a2, int64_t a3);
int64_t function_180023360(int64_t * a1);
int64_t function_180023380(int64_t a1);
int64_t function_1800233b0(int64_t result);
int32_t function_1800233f0(struct _IO_FILE * stream);
int32_t function_180023400(struct _IO_FILE * stream);
int64_t function_180023410(int64_t * a1);
int64_t function_180023470(int64_t a1, int64_t file_path, int64_t a3);
int64_t function_1800234c0(void);
int64_t function_1800234e0(void);
int64_t function_180023540(struct _IO_FILE * Stream);
int64_t function_180023550(void);
int64_t function_1800235a4(int64_t a1, int64_t a2);
int64_t function_18002367c(int64_t a1);
int64_t function_180023684(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_180023738(void);
int64_t function_18002376c(int64_t a1);
int64_t function_180023784(void);
int64_t function_1800237ac(void);
int64_t function_180023828(void);
int64_t function_180023858(int64_t a1);
int64_t function_18002386c(int32_t a1);
int64_t function_180023984(int64_t a1);
int64_t function_180023a16(void);
int64_t function_180023a18(void);
int64_t function_180023a44(int64_t a1, int32_t a2);
int64_t function_180023ac0(int64_t a1);
int64_t function_180023ad8(int64_t a1, int64_t a2, int64_t a3);
int64_t function_180023cd8(int64_t a1, uint64_t a2, int64_t a3);
int64_t function_180023f6c(void);
int64_t function_180024100(void);
int64_t function_180024120(int64_t a1, int64_t a2, int64_t a3);
int64_t function_18002417c(int64_t a1);
int64_t function_180024184(int64_t a1);
int64_t function_18002418c(int64_t a1);
int64_t function_180024390(void);
int64_t function_180024398(void);
void function_1800245bc(int64_t * ListHead);
int64_t function_1800245cc(void);
int64_t function_1800245d8(void);
int64_t function_1800245f4(void);
int64_t function_1800247e4(void);
int64_t function_180024804(void);
int64_t function_18002486c(void);
int64_t function_180024872(void);
int64_t * function_180024878(int64_t * s, int32_t c, int32_t n);
int64_t function_18002487e(int64_t * a1);
int64_t function_180024884(void);
int64_t function_18002488a(void);
void function_180024890(int64_t * pExceptionObject, int64_t * pThrowInfo);
void function_180024896(int64_t * ptr);
int64_t * function_18002489c(int32_t size);
int64_t function_1800248a2(void);
int32_t function_1800248a8(int32_t ExceptionNum, struct _EXCEPTION_POINTERS * ExceptionPtr);
int32_t function_1800248ae(int64_t a1);
int32_t function_1800248b4(void);
int32_t function_1800248ba(struct _onexit_table_t * Table);
int32_t function_1800248c0(struct _onexit_table_t * Table, int32_t (*Function)());
int32_t function_1800248c6(struct _onexit_table_t * Table);
int64_t function_1800248cc(void);
void function_1800248d2(void);
void function_1800248d8(void (**First)(), void (**Last)());
int32_t function_1800248de(int32_t (**First)(), int32_t (**Last)());
int32_t function_1800248e4(int32_t Size);
bool function_1800248ea(int32_t ProcessorFeature);
int64_t function_1800248f0(void);
int64_t function_1800248f4(void);
int64_t function_1800248f8(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t function_180024978(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t * function_18002497e(int64_t * dest, int64_t * src, int32_t n);
float64_t function_180024984(float64_t a1);
int64_t function_1800249a0(void);
int64_t function_1800249b0(void);
int64_t function_1800249d0(void);
int64_t function_180024a0e(void);
int64_t function_180024a30(void);
int64_t function_180024a70(void);
int64_t function_180024aae(void);
int64_t function_180024ad0(void);
int64_t function_180024b0e(void);
int64_t function_180024b30(void);
int64_t function_180024b6e(void);
int64_t function_180024b90(void);
int64_t function_180024bce(void);
int64_t function_180024bf0(void);
int64_t function_180024c34(void);
int64_t function_180024c50(void);
int64_t function_180024c60(void);
int64_t function_180024c6c(void);
int64_t function_180024c80(void);
int64_t function_180024c8c(void);
int64_t function_180024ca0(void);
int64_t function_180024cac(void);
int64_t function_180024cb8(void);
int64_t function_180024cc4(void);
int64_t function_180024cd0(void);
int64_t function_180024cdc(void);
int64_t function_180024cf0(void);
int64_t function_180024d00(void);
int64_t function_180024d10(void);
int64_t function_180024d20(void);
int64_t function_180024d30(void);
int64_t function_180024d40(void);
int64_t function_180024d4c(void);
int64_t function_180024d90(void);
int64_t function_180024da0(void);
int64_t function_180024dac(void);
int64_t function_180024de0(void);
int64_t function_180024df0(void);
int64_t function_180024e15(void);
int64_t function_180024e41(int64_t a1, int64_t a2);
int64_t function_180024e82(void);
int64_t function_180024eae(int64_t a1, int64_t a2);
int64_t function_180024ec6(int64_t a1, int64_t a2);
int64_t function_180024edd(int64_t a1, int64_t a2);
int64_t function_180024ef9(int64_t a1, int64_t a2);
int64_t function_180024f30(void);
int64_t function_180024f80(void);
int64_t PluginProc(int64_t a1, int64_t a2);
int64_t PluginVersion(void);

// --------------------- Global Variables ---------------------

void (**g1)() = NULL; // 0x1800252b0
void (**g2)() = NULL; // 0x1800252c8
int32_t (**g3)() = NULL; // 0x1800252d0
int32_t (**g4)() = NULL; // 0x1800252d8
int128_t g5; // 0x1800254d0
int64_t g6 = 0x10001000100010; // 0x180025d90
int64_t g7 = 0x10001000100010; // 0x180025dd0
int128_t g8; // 0x180028e60
int128_t g9; // 0x180028e70
int128_t g10; // 0x180028e80
int128_t g11; // 0x180028e90
int128_t g12; // 0x180028ea0
int128_t g13; // 0x180028eb0
int128_t g14; // 0x180028ec0
int64_t g15 = 0x2478c00000000; // 0x18002ee08
int64_t g16 = 0x2478c00000000; // 0x18002ee90
int64_t g17 = 0x2b992ddfa232; // 0x180030008
int32_t g18 = 1; // 0x180030030
int32_t g19 = 1; // 0x180030034
int32_t g20 = 0; // 0x1800300e0
struct _onexit_table_t * g21 = NULL; // 0x1800300f0
int32_t g22 = 0; // 0x180030120
int32_t g23 = 0; // 0x180030124
int32_t g24 = 0; // 0x18003032c
int32_t g25 = 0; // 0x180030361
int64_t g26 = 0; // 0x1800306b0
int64_t g27 = 0; // 0x1800306c0
int64_t g28 = 0; // 0x1800306d0
int64_t g29 = 0; // 0x1800306d8
int64_t g30 = 0; // 0x1800306e0
int64_t g31 = 0; // 0x1800306f0
int32_t g32 = 0; // 0x1800306f4
int32_t g33 = 0; // 0x1800306f8
int32_t g34 = 0; // 0x180030700
int32_t g35 = 0; // 0x180030708
int64_t g36 = 0; // 0x180030710
int32_t g37 = 0; // 0x180030718
int32_t * g38 = NULL; // 0x180030720
int32_t g39 = 0; // 0x180030728
int64_t g40 = 0; // 0x180030730
int32_t g41 = 0; // 0x180030738
int64_t g42 = 0; // 0x180030740
int32_t g43 = 0; // 0x180030748
int64_t g44 = 0; // 0x18003074c
int64_t g45 = 0; // 0x180030958
int64_t g46 = 0; // 0x180030960
int32_t g47;

// ------- Dynamically Linked Functions Without Header --------

int64_t __C_specific_handler(void);
int64_t __CxxFrameHandler3(int64_t a1, int64_t a2, int64_t a3, int64_t a4);
int64_t __std_exception_copy(void);
int64_t __std_exception_destroy(void);
int64_t __std_terminate(void);
int64_t __std_type_info_destroy_list(int64_t * a1);
int32_t __stdio_common_vsprintf(int64_t a1, char * a2, int32_t a3, char * a4, int64_t a5, int64_t a6);
int32_t __stdio_common_vsscanf(int64_t a1, char * a2, int32_t a3, char * a4, int64_t a5, int64_t a6);
int32_t __stdio_common_vswprintf(int64_t a1, int16_t * a2, int32_t a3, int16_t * a4, int64_t a5, int64_t a6);
int32_t _callnewh(int32_t a1);
void _cexit(void);
int32_t _configure_narrow_argv(int64_t a1);
int64_t _crt_atexit(void);
void _CxxThrowException(int64_t * a1, int64_t * a2);
int32_t _execute_onexit_table(struct _onexit_table_t * a1);
int32_t _fseeki64(struct _IO_FILE * a1, int64_t a2, int32_t a3);
int64_t _ftelli64(struct _IO_FILE * a1);
int32_t _initialize_narrow_environment(void);
int32_t _initialize_onexit_table(struct _onexit_table_t * a1);
void _initterm(void (**a1)(), void (**a2)());
int32_t _initterm_e(int32_t (**a1)(), int32_t (**a2)());
int32_t _register_onexit_function(struct _onexit_table_t * a1, int32_t (*a2)());
int32_t _seh_filter_dll(int32_t a1, struct _EXCEPTION_POINTERS * a2);
struct _IO_FILE * _wfopen(int16_t * a1, int16_t * a2);
void InitializeSListHead(int64_t * a1);
int64_t terminate(void);

// ------------------------ Functions -------------------------

// Address range: 0x180001000 - 0x18000100c
int64_t function_180001000(void) {
    // 0x180001000
    return function_180023ac0(0x180024f30);
}

// Address range: 0x180001010 - 0x18000101c
int64_t function_180001010(void) {
    // 0x180001010
    return function_180023ac0(0x180024f80);
}

// Address range: 0x180001020 - 0x180001028
int64_t function_180001020(void) {
    // 0x180001020
    return &g27;
}

// Address range: 0x180001030 - 0x18000108b
int64_t function_180001030(int64_t a1, char * a2, int64_t a3, int64_t a4) {
    int64_t v1 = a3; // bp+24, 0x180001035
    int64_t v2 = *(int64_t *)function_180001020(); // 0x180001071
    int32_t v3 = __stdio_common_vsprintf(v2 | 1, (char *)a1, -1, a2, 0, (int64_t)&v1); // 0x180001078
    return v3 > -1 ? v3 : -1;
}

// Address range: 0x180001090 - 0x1800010a3
int64_t function_180001090(int64_t result) {
    // 0x180001090
    *(int64_t *)result = -1;
    *(int64_t *)(result + 8) = -1;
    return result;
}

// Address range: 0x1800010b0 - 0x1800010b3
int64_t function_1800010b0(int64_t a1) {
    // 0x1800010b0
    int64_t result; // 0x1800010b0
    return result;
}

// Address range: 0x1800010c0 - 0x1800011b6
int64_t function_1800010c0(int64_t result) {
    // 0x1800010c0
    int64_t v1; // 0x1800010c0
    _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x1800010b0, v1, v1, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
    *(int64_t *)result = 10;
    *(int64_t *)(result + 8) = -1;
    *(int64_t *)(result + 16) = -1;
    *(int64_t *)(result + 24) = -1;
    *(int64_t *)(result + 32) = -1;
    *(int64_t *)(result + 40) = -1;
    *(int64_t *)(result + 48) = -1;
    *(int64_t *)(result + 56) = -1;
    *(int64_t *)(result + 64) = -1;
    *(int64_t *)(result + 72) = -1;
    *(int64_t *)(result + 80) = -1;
    *(int64_t *)(result + 88) = -1;
    *(int64_t *)(result + 96) = -1;
    *(int64_t *)(result + 104) = -1;
    *(int64_t *)(result + 112) = -1;
    *(int64_t *)(result + 120) = -1;
    *(int64_t *)(result + 128) = -1;
    *(int64_t *)(result + 136) = -1;
    *(int64_t *)(result + 144) = -1;
    *(int64_t *)(result + 152) = -1;
    *(int64_t *)(result + 160) = -1;
    return result;
}

// Address range: 0x1800011c0 - 0x1800011ec
int64_t function_1800011c0(int64_t a1) {
    // 0x1800011c0
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    return &g47;
}

// Address range: 0x1800011f0 - 0x180001200
int64_t function_1800011f0(int64_t result) {
    // 0x1800011f0
    *(int64_t *)result = 0;
    *(int32_t *)(result + 8) = 0;
    *(int64_t *)(result + 16) = 0;
    return result;
}

// Address range: 0x180001200 - 0x180001231
int64_t function_180001200(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 16); // 0x180001209
    int64_t v2 = *v1; // 0x180001209
    if (v2 == 0) {
        // 0x180001226
        *(int32_t *)(a1 + 8) = 0;
        return 0;
    }
    // 0x180001212
    free((int64_t *)v2);
    *v1 = (int64_t)((int32_t)&g47 ^ (int32_t)&g47);
    *(int32_t *)(a1 + 8) = (int32_t)&g47 ^ (int32_t)&g47;
    return (int32_t)&g47 ^ (int32_t)&g47;
}

// Address range: 0x180001240 - 0x180001249
int64_t function_180001240(int64_t result) {
    // 0x180001240
    *(int16_t *)result = 0;
    return result;
}

// Address range: 0x180001250 - 0x18000129a
int64_t function_180001250(int64_t result) {
    int128_t v1 = __asm_movups(g13); // 0x180001250
    *(int64_t *)(result + 12) = 0x3f800000;
    *(int32_t *)(result + 28) = 0x3f800000;
    int64_t v2; // 0x180001250
    __asm_movups_4(*(int128_t *)&v2, v1);
    *(int32_t *)(result + 32) = 0x43000000;
    int128_t v3 = __asm_movups(g12); // 0x180001272
    *(int32_t *)(result + 36) = 0x3f800000;
    *(int64_t *)(result + 40) = -1;
    __asm_movups_4(*(int128_t *)(result + 16), v3);
    *(int32_t *)(result + 48) = -1;
    *(char *)(result + 52) = 0;
    return result;
}

// Address range: 0x1800012a0 - 0x180001438
int64_t function_1800012a0(int64_t result, int64_t a2) {
    // 0x1800012a0
    int128_t v1; // 0x1800012a0
    int128_t v2 = v1;
    int128_t v3 = __asm_xorps(v2, v2); // 0x1800012a6
    *(int64_t *)(result + 1316) = 0;
    int128_t v4 = __asm_movaps(v3); // 0x1800012b0
    *(int64_t *)(result + 1328) = 0;
    int64_t * v5 = (int64_t *)(result + 1352); // 0x1800012bc
    *v5 = 0x3f800000;
    int64_t * v6 = (int64_t *)(result + 1372); // 0x1800012c7
    *v6 = 0x3f800000;
    int64_t * v7 = (int64_t *)(result + 1392); // 0x1800012d2
    *v7 = 0x3f800000;
    int32_t * v8 = (int32_t *)(result + 1412); // 0x1800012dd
    *v8 = 0x3f800000;
    int64_t * v9 = (int64_t *)(result + 1416); // 0x1800012e7
    *v9 = 0x3f800000;
    int64_t * v10 = (int64_t *)(result + 1436); // 0x1800012f2
    *v10 = 0x3f800000;
    int64_t * v11 = (int64_t *)(result + 1456); // 0x1800012fd
    *v11 = 0x3f800000;
    int32_t * v12 = (int32_t *)(result + 1476); // 0x180001308
    *v12 = 0x3f800000;
    *(char *)result = 0;
    *(char *)(result + 260) = 0;
    *(char *)(result + 520) = 0;
    *(char *)(result + 780) = 0;
    *(char *)(result + 1040) = 0;
    *(int64_t *)(result + 1300) = -1;
    *(int32_t *)(result + 1308) = -1;
    int128_t v13 = __asm_unpcklps(v4, v3); // 0x180001341
    int128_t v14 = __asm_movss(0x3f800000); // 0x180001344
    *(int64_t *)(result + 1312) = __asm_movsd_5(v13);
    int128_t v15 = __asm_movaps(v14); // 0x180001354
    *(int32_t *)(result + 1320) = 0;
    *(int64_t *)(result + 1324) = __asm_movsd_5(__asm_unpcklps(v15, v14));
    int128_t v16 = __asm_movups(g12); // 0x180001368
    *(int32_t *)(result + 1332) = 0x3f800000;
    __asm_movups_4(*(int128_t *)(result + 1336), v16);
    *v5 = 0x3f800000;
    *(int64_t *)(result + 1360) = 0;
    *(int32_t *)(result + 1368) = 0;
    *v6 = 0x3f800000;
    *(int64_t *)(result + 1380) = 0;
    *(int32_t *)(result + 1388) = 0;
    *v7 = 0x3f800000;
    *(int64_t *)(result + 1400) = 0;
    *(int32_t *)(result + 1408) = 0;
    *v8 = 0x3f800000;
    *v9 = 0x3f800000;
    *(int64_t *)(result + 1424) = 0;
    *(int32_t *)(result + 1432) = 0;
    *v10 = 0x3f800000;
    *(int64_t *)(result + 1444) = 0;
    *(int32_t *)(result + 1452) = 0;
    *v11 = 0x3f800000;
    *(int64_t *)(result + 1464) = 0;
    *(int32_t *)(result + 1472) = 0;
    *v12 = 0x3f800000;
    return result;
}

// Address range: 0x180001440 - 0x180001451
int64_t function_180001440(int64_t result) {
    // 0x180001440
    *(int32_t *)result = 0;
    *(int32_t *)(result + 4) = -1;
    return result;
}

// Address range: 0x180001460 - 0x180001516
int64_t function_180001460(int64_t result) {
    // 0x180001460
    int128_t v1; // 0x180001460
    int128_t v2 = v1;
    int64_t v3 = result + 24; // 0x180001471
    *(int64_t *)(result + 4) = 0;
    *(int32_t *)result = 0;
    *(int64_t *)(result + 16) = 0;
    int64_t v4 = result + 12; // 0x180001487
    *(int32_t *)v4 = 0;
    int64_t v5 = v3; // 0x18000148a
    int64_t v6 = 2; // 0x18000148a
    *(int64_t *)v5 = 0;
    v6--;
    v5 += 8;
    while (v6 != 0) {
        // 0x180001490
        *(int64_t *)v5 = 0;
        v6--;
        v5 += 8;
    }
    // 0x18000149d
    _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x1800010b0, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
    int128_t v7 = __asm_xorps(v2, v2); // 0x1800014c2
    *(int64_t *)result = __asm_movsd_5(__asm_unpcklps(__asm_movaps(v7), v7));
    *(int64_t *)v4 = __asm_movsd_5(__asm_unpcklps(__asm_movaps(v7), v7));
    int128_t v8 = __asm_movaps(v7); // 0x1800014e4
    *(int32_t *)(result + 8) = 0;
    *(int32_t *)(result + 20) = 0;
    *(int64_t *)v3 = __asm_movsd_5(__asm_unpcklps(v8, v7));
    *(int64_t *)(result + 32) = __asm_movsd_5(__asm_unpcklps(__asm_movaps(v7), v7));
    *(int32_t *)(result + 40) = 0;
    return result;
}

// Address range: 0x180001520 - 0x18000154c
int64_t function_180001520(int64_t a1) {
    // 0x180001520
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    return &g47;
}

// Address range: 0x180001550 - 0x18000156a
int64_t function_180001550(int64_t result) {
    // 0x180001550
    *(int32_t *)result = 3;
    *(int64_t *)(result + 4) = -1;
    *(int64_t *)(result + 12) = -1;
    return result;
}

// Address range: 0x180001570 - 0x1800015c3
int64_t function_180001570(int64_t result) {
    // 0x180001570
    function_1800010c0(result + 56);
    *(int32_t *)result = 0;
    *(int64_t *)(result + 8) = 0;
    *(int32_t *)(result + 16) = 0;
    *(int64_t *)(result + 24) = 0;
    *(int64_t *)(result + 32) = 0;
    *(int64_t *)(result + 40) = 0;
    *(int64_t *)(result + 48) = 0;
    *(int64_t *)(result + 224) = 0;
    *(char *)(result + 232) = 0;
    *(char *)(result + 492) = 0;
    *(int32_t *)(result + 752) = -1;
    return result;
}

// Address range: 0x1800015d0 - 0x1800015fc
int64_t function_1800015d0(int64_t a1) {
    // 0x1800015d0
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    return &g47;
}

// Address range: 0x180001600 - 0x18000161d
int64_t function_180001600(int64_t a1, int64_t a2) {
    uint32_t v1 = *(int32_t *)(a1 + 4); // 0x180001600
    uint32_t v2 = *(int32_t *)(a2 + 4); // 0x180001604
    if (v1 > v2) {
        // 0x18000160c
        return 1;
    }
    int32_t v3 = v1 - v2; // 0x180001614
    return v3 < 0 == ((v3 ^ v1) & (v2 ^ v1)) < 0 ? 0 : 0xffffffff;
}

// Address range: 0x180001620 - 0x180001683
int64_t function_180001620(int64_t a1, int64_t a2) {
    // 0x180001620
    if ((int32_t)a2 < 1) {
        // 0x180001678
        return 0;
    }
    int64_t * v1 = (int64_t *)(a1 + 16); // 0x18000163e
    int64_t v2 = *v1; // 0x18000163e
    if (v2 != 0) {
        // 0x180001647
        free((int64_t *)v2);
        *v1 = 0;
    }
    int64_t v3 = 0x100000000 * a2 >> 32; // 0x180001634
    int32_t * v4 = (int32_t *)(a1 + 8); // 0x180001654
    *v4 = 0;
    int64_t v5; // 0x180001620
    int64_t v6 = function_180023684(v3, a2, v5, v5); // 0x18000165e
    *v1 = v6;
    int64_t result = 0; // 0x18000166a
    if (v6 != 0) {
        // 0x18000166c
        *v4 = (int32_t)v3;
        result = 1;
    }
    // 0x180001678
    return result;
}

// Address range: 0x180001690 - 0x180001755
int64_t function_180001690(int64_t a1) {
    int64_t v1 = a1;
    int64_t * v2 = (int64_t *)(a1 + 8); // 0x1800016b8
    int64_t v3 = *v2; // 0x1800016b8
    if (v3 == 0) {
        // 0x180001738
        *(int32_t *)a1 = 0;
        // 0x18000173a
        int64_t result; // 0x180001690
        return result;
    }
    int64_t v4 = 0; // 0x1800016c2
    int64_t v5; // 0x180001690
    int64_t result2; // 0x180001690
    if ((int32_t)a1 > 0) {
        int64_t v6 = v4 + v3;
        int64_t * v7 = (int64_t *)(v6 + 16); // 0x1800016d4
        int64_t v8 = *v7; // 0x1800016d4
        v1 = v8;
        int64_t v9; // 0x180001690
        int64_t v10 = v9; // 0x1800016dc
        if (v8 != 0) {
            // 0x1800016de
            free((int64_t *)v8);
            *v7 = 0;
            v10 = &g47;
        }
        int64_t v11 = v10;
        *(int32_t *)(v6 + 8) = 0;
        int64_t v12 = 1; // 0x1800016ed
        while (*(int32_t *)&v1 > (int32_t)v12) {
            // 0x1800016e8
            v4 += 24;
            v6 = v4 + *v2;
            v7 = (int64_t *)(v6 + 16);
            v8 = *v7;
            v1 = v8;
            v10 = v11;
            if (v8 != 0) {
                // 0x1800016de
                free((int64_t *)v8);
                *v7 = 0;
                v10 = &g47;
            }
            // 0x1800016e8
            v11 = v10;
            *(int32_t *)(v6 + 8) = 0;
            v12 = (v12 & 0xffffffff) + 1;
        }
        int64_t v13 = *v2;
        v1 = v13;
        v5 = v13;
        result2 = v11;
        if (v13 == 0) {
            goto lab_0x180001730;
        } else {
            goto lab_0x180001700;
        }
    } else {
        // 0x1800016f7
        v1 = v3;
        v5 = v3;
        goto lab_0x180001700;
    }
  lab_0x180001730:
    // 0x180001730
    *v2 = 0;
    *(int32_t *)a1 = 0;
    // 0x18000173a
    return result2;
  lab_0x180001700:;
    int64_t v14 = v5 - 8; // 0x180001700
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    result2 = function_1800235a4(v14, 24 * *(int64_t *)v14 + 8);
    goto lab_0x180001730;
}

// Address range: 0x180001760 - 0x18000180d
int64_t function_180001760(int32_t * a1, int64_t a2) {
    // 0x180001760
    if ((int32_t)a2 < 1) {
        // 0x1800017ff
        return 0;
    }
    int64_t v1 = (int64_t)a1;
    function_180001690(v1);
    int64_t v2; // 0x180001760
    int64_t v3 = function_180023684(0, 0, v2, v2); // 0x1800017aa
    if (v3 == 0) {
        // 0x1800017e7
        *(int64_t *)(v1 + 8) = 0;
        // 0x1800017ff
        return 0;
    }
    int64_t v4 = 0x100000000 * a2 >> 32; // 0x180001777
    *(int64_t *)v3 = v4;
    int64_t v5 = v3 + 8; // 0x1800017bc
    _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x180001200, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
    *(int64_t *)(v1 + 8) = v5;
    int64_t result = 0; // 0x1800017ee
    if (v5 != 0) {
        // 0x1800017f4
        *a1 = (int32_t)v4;
        result = 1;
    }
    // 0x1800017ff
    return result;
}

// Address range: 0x180001810 - 0x18000195f
int64_t function_180001810(int32_t * a1, int32_t * a2) {
    int64_t v1 = (int64_t)a1;
    *a2 = 0;
    if ((int32_t)v1 < 1) {
        // 0x180001945
        return 0;
    }
    int64_t v2 = (int64_t)a2;
    int64_t * v3 = (int64_t *)(v1 + 8);
    int64_t v4 = *v3 + 4; // 0x180001836
    int32_t v5 = 0; // 0x180001836
    int64_t v6 = 0x100000000 * v1 >> 32; // 0x180001836
    v5 += *(int32_t *)v4;
    v6--;
    v4 += 24;
    while (v6 != 0) {
        // 0x180001840
        v5 += *(int32_t *)v4;
        v6--;
        v4 += 24;
    }
    // 0x18000184d
    *a2 = v5;
    if (v5 == 0) {
        // 0x180001945
        return 0;
    }
    int64_t v7 = v5; // 0x180001840
    int64_t result = function_180023684(v7, v2, v7, v6); // 0x18000185c
    if (result == 0) {
        // 0x180001945
        return 0;
    }
    uint32_t v8 = (int32_t)result;
    int64_t v9 = 0; // 0x18000187c
    int64_t v10 = 0; // 0x18000187c
    if (v8 <= 0) {
        // 0x180001945
        return result;
    }
    int64_t v11 = 0;
    int64_t v12 = *v3 + v9;
    uint32_t v13 = *(int32_t *)(v12 + 4); // 0x1800018a4
    int64_t v14 = v2; // 0x1800018aa
    int64_t v15 = v11; // 0x1800018aa
    int64_t v16 = v7; // 0x1800018aa
    int64_t v17 = v6; // 0x1800018aa
    int64_t v18; // 0x180001810
    int64_t v19; // 0x180001810
    int64_t v20; // 0x180001810
    uint32_t v21; // 0x1800018ac
    int64_t v22; // 0x1800018a4
    int64_t v23; // 0x1800018b5
    int64_t v24; // 0x1800018cf
    int64_t * v25; // 0x1800018e4
    if (v13 != 0) {
        // 0x1800018ac
        v21 = *(int32_t *)v12;
        v14 = v2;
        v15 = v11;
        v16 = v7;
        v17 = v6;
        if (v21 != 0) {
            // 0x1800018b5
            v22 = v13;
            v23 = *(int64_t *)(v12 + 16);
            v20 = v2;
            v18 = v7;
            v19 = v6;
            if (v23 != 0) {
                // 0x1800018cd
                v24 = function_180023684(v22, v2, v7, v6);
                v20 = v2;
                v18 = v7;
                v19 = v6;
                if (v24 != 0) {
                    // 0x1800018dc
                    v25 = (int64_t *)v24;
                    memset(v25, 0, v13);
                    function_180021580(v23, v24, (int64_t)v21, v22);
                    memcpy((int64_t *)((v11 & 0xffffffff) + result), v25, v13);
                    free(v25);
                    v20 = v24;
                    v18 = v22;
                    v19 = v22;
                }
            }
            // 0x180001916
            v14 = v20;
            v15 = v11 + v22 & 0xffffffff;
            v16 = v18;
            v17 = v19;
        }
    }
    // 0x180001918
    v9 += 24;
    while (v8 > (int32_t)v10) {
        // 0x1800018a0
        v10 &= 0xffffffff;
        int64_t v26 = v17;
        int64_t v27 = v16;
        v11 = v15;
        int64_t v28 = v14;
        v12 = *v3 + v9;
        v13 = *(int32_t *)(v12 + 4);
        v14 = v28;
        v15 = v11;
        v16 = v27;
        v17 = v26;
        if (v13 != 0) {
            // 0x1800018ac
            v21 = *(int32_t *)v12;
            v14 = v28;
            v15 = v11;
            v16 = v27;
            v17 = v26;
            if (v21 != 0) {
                // 0x1800018b5
                v22 = v13;
                v23 = *(int64_t *)(v12 + 16);
                v20 = v28;
                v18 = v27;
                v19 = v26;
                if (v23 != 0) {
                    // 0x1800018cd
                    v24 = function_180023684(v22, v28, v27, v26);
                    v20 = v28;
                    v18 = v27;
                    v19 = v26;
                    if (v24 != 0) {
                        // 0x1800018dc
                        v25 = (int64_t *)v24;
                        memset(v25, 0, v13);
                        function_180021580(v23, v24, (int64_t)v21, v22);
                        memcpy((int64_t *)((v11 & 0xffffffff) + result), v25, v13);
                        free(v25);
                        v20 = v24;
                        v18 = v22;
                        v19 = v22;
                    }
                }
                // 0x180001916
                v14 = v20;
                v15 = v11 + v22 & 0xffffffff;
                v16 = v18;
                v17 = v19;
            }
        }
        // 0x180001918
        v9 += 24;
    }
    // 0x180001945
    return result;
}

// Address range: 0x180001960 - 0x1800019f3
int64_t function_180001960(int64_t * a1) {
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 48); // 0x180001960
    int64_t result = *v2; // 0x180001960
    if (result == 0) {
        // 0x1800019f2
        return 0;
    }
    int32_t * v3 = (int32_t *)(v1 + 40); // 0x180001973
    if (*v3 < 1) {
        // 0x1800019f2
        return result;
    }
    int128_t v4 = __asm_movss(0x3f800000); // 0x180001979
    int64_t v5 = 0;
    int64_t v6 = v5 + 24; // 0x180001984
    int64_t v7 = result; // 0x18000198a
    int64_t v8; // 0x180001960
    int64_t v9; // 0x180001960
    int64_t v10; // 0x18000198f
    int128_t v11; // 0x1800019a4
    int64_t v12; // 0x1800019a7
    int32_t * v13; // 0x1800019af
    int128_t v14; // 0x1800019bb
    int32_t * v15; // 0x1800019c7
    int64_t v16; // 0x1800019d7
    if (*(int64_t *)(v6 + result) != 0) {
        // 0x18000198c
        v10 = v5 + 16;
        v9 = 0;
        v7 = result;
        if (*(int32_t *)(v10 + result) >= 1) {
            v11 = __asm_movaps(v4);
            v12 = 1;
            v13 = (int32_t *)(v9 + 28 + *(int64_t *)(*v2 + v6));
            *v13 = (int32_t)__asm_movss_8(__asm_subss(v11, *v13));
            v14 = __asm_movaps(v4);
            v15 = (int32_t *)(v9 + 36 + *(int64_t *)(*v2 + v6));
            *v15 = (int32_t)__asm_movss_8(__asm_subss(v14, *v15));
            v16 = *v2;
            v9 += 76;
            v8 = v12 & 0xffffffff;
            v7 = v16;
            while (*(int32_t *)(v16 + v10) > (int32_t)v12) {
                // 0x1800019a0
                v11 = __asm_movaps(v4);
                v12 = v8 + 1;
                v13 = (int32_t *)(v9 + 28 + *(int64_t *)(*v2 + v6));
                *v13 = (int32_t)__asm_movss_8(__asm_subss(v11, *v13));
                v14 = __asm_movaps(v4);
                v15 = (int32_t *)(v9 + 36 + *(int64_t *)(*v2 + v6));
                *v15 = (int32_t)__asm_movss_8(__asm_subss(v14, *v15));
                v16 = *v2;
                v9 += 76;
                v8 = v12 & 0xffffffff;
                v7 = v16;
            }
        }
    }
    int64_t result2 = v7;
    int64_t v17 = 1; // 0x1800019e2
    int64_t v18 = v5 + 760; // 0x1800019f0
    int64_t v19 = v17 & 0xffffffff; // 0x1800019f0
    while (*v3 > (int32_t)v17) {
        // 0x180001984
        v5 = v18;
        int64_t v20 = result2;
        v6 = v5 + 24;
        v7 = v20;
        if (*(int64_t *)(v6 + v20) != 0) {
            // 0x18000198c
            v10 = v5 + 16;
            v9 = 0;
            v7 = v20;
            if (*(int32_t *)(v10 + v20) >= 1) {
                v11 = __asm_movaps(v4);
                v12 = 1;
                v13 = (int32_t *)(v9 + 28 + *(int64_t *)(*v2 + v6));
                *v13 = (int32_t)__asm_movss_8(__asm_subss(v11, *v13));
                v14 = __asm_movaps(v4);
                v15 = (int32_t *)(v9 + 36 + *(int64_t *)(*v2 + v6));
                *v15 = (int32_t)__asm_movss_8(__asm_subss(v14, *v15));
                v16 = *v2;
                v9 += 76;
                v8 = v12 & 0xffffffff;
                v7 = v16;
                while (*(int32_t *)(v16 + v10) > (int32_t)v12) {
                    // 0x1800019a0
                    v11 = __asm_movaps(v4);
                    v12 = v8 + 1;
                    v13 = (int32_t *)(v9 + 28 + *(int64_t *)(*v2 + v6));
                    *v13 = (int32_t)__asm_movss_8(__asm_subss(v11, *v13));
                    v14 = __asm_movaps(v4);
                    v15 = (int32_t *)(v9 + 36 + *(int64_t *)(*v2 + v6));
                    *v15 = (int32_t)__asm_movss_8(__asm_subss(v14, *v15));
                    v16 = *v2;
                    v9 += 76;
                    v8 = v12 & 0xffffffff;
                    v7 = v16;
                }
            }
        }
        // 0x1800019e2
        result2 = v7;
        v17 = v19 + 1;
        v18 = v5 + 760;
        v19 = v17 & 0xffffffff;
    }
    // 0x1800019f2
    return result2;
}

// Address range: 0x180001a00 - 0x180001afa
int64_t function_180001a00(int64_t * a1) {
    int64_t v1 = (int64_t)a1;
    int32_t * v2 = (int32_t *)(v1 + 56); // 0x180001a19
    uint32_t v3 = *v2; // 0x180001a19
    int64_t v4; // 0x180001a00
    int64_t v5 = function_180023684(0, 0, v4, v4); // 0x180001a44
    if (v5 == 0) {
        // 0x180001aed
        return 0;
    }
    int32_t v6 = v3 + 1; // 0x180001a1c
    *(int64_t *)v5 = (int64_t)v6;
    int64_t v7 = v5 + 8; // 0x180001a56
    _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x1800010b0, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
    if (v7 == 0) {
        // 0x180001aed
        return 0;
    }
    uint32_t v8 = *v2; // 0x180001a8a
    int64_t * v9 = (int64_t *)(v1 + 64);
    if (v8 >= 1) {
        // 0x180001a92
        memcpy((int64_t *)v7, (int64_t *)*v9, 1480 * v8);
    }
    int64_t v10 = *v9; // 0x180001aa5
    if (v10 != 0) {
        // 0x180001aae
        function_180001b00(v10);
        *v9 = 0;
    }
    // 0x180001abb
    *v9 = v7;
    *v2 = v6;
    int64_t v11 = 1480 * (0x100000000 * (int64_t)v6 - 0x100000000 >> 32);
    function_180001030(v5 + 268 + v11, "Blank%d", (int64_t)v3, 0x1800012a0);
    // 0x180001aed
    return *v9 + v11;
}

// Address range: 0x180001b00 - 0x180001b45
int64_t function_180001b00(int64_t a1) {
    int64_t result = a1 - 8; // 0x180001b0f
    int64_t v1; // 0x180001b00
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, v1, (int64_t)&g47, (void (*)(int64_t *))&g47);
    function_1800235a4(result, 1480 * *(int64_t *)result + 8);
    return result;
}

// Address range: 0x180001b50 - 0x180001bfe
int64_t function_180001b50(int64_t * a1, int64_t a2) {
    // 0x180001b50
    if ((int32_t)a2 < 1) {
        // 0x180001bf0
        return 0;
    }
    int64_t v1 = (int64_t)a1;
    function_180001c00(v1);
    int64_t v2; // 0x180001b50
    int64_t v3 = function_180023684(0, 0, v2, v2); // 0x180001b9a
    if (v3 == 0) {
        // 0x180001bd7
        *(int64_t *)(v1 + 48) = 0;
        // 0x180001bf0
        return 0;
    }
    int64_t v4 = 0x100000000 * a2 >> 32; // 0x180001b67
    *(int64_t *)v3 = v4;
    int64_t v5 = v3 + 8; // 0x180001bac
    _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x1800015d0, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
    *(int64_t *)(v1 + 48) = v5;
    int64_t result = 0; // 0x180001bde
    if (v5 != 0) {
        // 0x180001be4
        *(int32_t *)(v1 + 40) = (int32_t)v4;
        result = 1;
    }
    // 0x180001bf0
    return result;
}

// Address range: 0x180001c00 - 0x180001ca2
int64_t function_180001c00(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 48); // 0x180001c17
    int64_t v2 = *v1; // 0x180001c17
    int32_t * v3 = (int32_t *)(a1 + 40);
    if (v2 == 0) {
        // 0x180001c97
        *v3 = 0;
        int64_t result; // 0x180001c00
        return result;
    }
    int64_t v4 = v2; // 0x180001c23
    int64_t result2; // 0x180001c00
    if (*v3 < 1) {
        goto lab_0x180001c53;
    } else {
        int64_t v5 = 1; // 0x180001c48
        int64_t v6 = function_180001cb0(v2); // 0x180001c48
        if (*v3 > 1) {
            int64_t v7 = function_180001cb0(760 * (0x100000000 * v5 >> 32) + *v1); // 0x180001c3e
            int64_t v8 = (v5 & 0xffffffff) + 1; // 0x180001c43
            v5 = v8;
            v6 = v7;
            while (*v3 > (int32_t)v8) {
                // 0x180001c30
                v7 = function_180001cb0(760 * (0x100000000 * v5 >> 32) + *v1);
                v8 = (v5 & 0xffffffff) + 1;
                v5 = v8;
                v6 = v7;
            }
        }
        // 0x180001c4a
        v4 = *v1;
        result2 = v6;
        if (v4 == 0) {
            goto lab_0x180001c7f;
        } else {
            goto lab_0x180001c53;
        }
    }
  lab_0x180001c53:;
    int64_t v9 = v4 - 8; // 0x180001c53
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    result2 = function_1800235a4(v9, 760 * *(int64_t *)v9 + 8);
    goto lab_0x180001c7f;
  lab_0x180001c7f:
    // 0x180001c7f
    *v1 = 0;
    // 0x180001c97
    *v3 = 0;
    return result2;
}

// Address range: 0x180001cb0 - 0x180001d54
int64_t function_180001cb0(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 8); // 0x180001ccc
    int64_t v2 = *v1; // 0x180001ccc
    int64_t v3; // 0x180001cb0
    if (v2 != 0) {
        int64_t v4 = v2 - 8; // 0x180001cd7
        int64_t v5; // 0x180001cb0
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, v5, v5, (void (*)(int64_t *))v5);
        int64_t v6 = function_1800235a4(v4, 20 * *(int64_t *)v4 + 8); // 0x180001cff
        *v1 = 0;
        v3 = v6;
    }
    // 0x180001d09
    *(int32_t *)a1 = 0;
    int64_t * v7 = (int64_t *)(a1 + 24); // 0x180001d0b
    int64_t v8 = *v7; // 0x180001d0b
    int64_t result = v3; // 0x180001d12
    if (v8 != 0) {
        int64_t v9 = v8 - 8; // 0x180001d14
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        result = function_1800235a4(v9, 76 * *(int64_t *)v9 + 8);
        *v7 = 0;
    }
    // 0x180001d41
    *(int32_t *)(a1 + 16) = 0;
    return result;
}

// Address range: 0x180001d60 - 0x180001dc7
int64_t function_180001d60(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 8); // 0x180001d77
    int64_t v2 = *v1; // 0x180001d77
    if (v2 != 0) {
        int64_t v3 = v2 - 8; // 0x180001d80
        int64_t v4; // 0x180001d60
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, v4, v4, (void (*)(int64_t *))&g47);
        function_1800235a4(v3, 20 * *(int64_t *)v3 + 8);
        *v1 = 0;
    }
    // 0x180001dba
    *(int32_t *)a1 = 0;
    return 0;
}

// Address range: 0x180001dd0 - 0x180001e7d
int64_t function_180001dd0(int64_t a1, int64_t a2) {
    // 0x180001dd0
    if ((int32_t)a2 < 1) {
        // 0x180001e6f
        return 0;
    }
    // 0x180001df1
    function_180001d60(a1);
    int64_t v1; // 0x180001dd0
    int64_t v2 = function_180023684(0, 0, v1, v1); // 0x180001e1a
    if (v2 == 0) {
        // 0x180001e57
        *(int64_t *)(a1 + 8) = 0;
        // 0x180001e6f
        return 0;
    }
    int64_t v3 = 0x100000000 * a2 >> 32; // 0x180001de7
    *(int64_t *)v2 = v3;
    int64_t v4 = v2 + 8; // 0x180001e2c
    _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x1800010b0, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
    *(int64_t *)(a1 + 8) = v4;
    int64_t result = 0; // 0x180001e5e
    if (v4 != 0) {
        // 0x180001e64
        *(int32_t *)a1 = (int32_t)v3;
        result = 1;
    }
    // 0x180001e6f
    return result;
}

// Address range: 0x180001e80 - 0x180001ec7
int64_t function_180001e80(int64_t a1, int64_t a2) {
    int32_t v1 = a2; // 0x180001e89
    if (v1 >= 0 == (v1 != 0)) {
        // 0x180001e95
        return (int32_t)function_180001dd0(a1, a2) != 0;
    }
    // 0x180001e8d
    return 0;
}

// Address range: 0x180001ed0 - 0x180001fc7
int64_t function_180001ed0(int64_t a1, int64_t a2) {
    // 0x180001ed0
    if ((int32_t)a2 < 1) {
        // 0x180001fb3
        return 0;
    }
    int64_t * v1 = (int64_t *)(a1 + 24); // 0x180001efb
    int64_t v2 = *v1; // 0x180001efb
    int64_t v3; // 0x180001ed0
    int64_t v4; // 0x180001ed0
    if (v2 != 0) {
        int64_t v5 = v2 - 8; // 0x180001f04
        int64_t * v6 = (int64_t *)v5; // 0x180001f12
        int64_t v7; // 0x180001ed0
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, v7, v7, (void (*)(int64_t *))v7);
        function_1800235a4(v5, 76 * *v6 + 8);
        *v1 = 0;
        v3 = *v6;
        v4 = 0x180001520;
    }
    int32_t * v8 = (int32_t *)(a1 + 16); // 0x180001f41
    *v8 = 0;
    int64_t v9 = function_180023684(0, 0, v3, v4); // 0x180001f67
    if (v9 == 0) {
        // 0x180001f9a
        *v1 = 0;
        // 0x180001fb3
        return 0;
    }
    int64_t v10 = 0x100000000 * a2 >> 32; // 0x180001eed
    *(int64_t *)v9 = v10;
    int64_t v11 = v9 + 8; // 0x180001f79
    _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x180001520, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
    *v1 = v11;
    int64_t result = 0; // 0x180001fa1
    if (v11 != 0) {
        // 0x180001fa7
        *v8 = (int32_t)v10;
        result = 1;
    }
    // 0x180001fb3
    return result;
}

// Address range: 0x180001fd0 - 0x1800020ca
int64_t function_180001fd0(int64_t * a1, int64_t a2) {
    // 0x180001fd0
    if ((int32_t)a2 < 1) {
        // 0x1800020b6
        return 0;
    }
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 16); // 0x180001ffb
    int64_t v3 = *v2; // 0x180001ffb
    int64_t v4; // 0x180001fd0
    int64_t v5; // 0x180001fd0
    if (v3 != 0) {
        int64_t v6 = v3 - 8; // 0x180002004
        int64_t * v7 = (int64_t *)v6; // 0x180002012
        int64_t v8; // 0x180001fd0
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, v8, v8, (void (*)(int64_t *))v8);
        function_1800235a4(v6, 520 * *v7 + 8);
        *v2 = 0;
        v4 = *v7;
        v5 = 0x1800010b0;
    }
    int32_t * v9 = (int32_t *)(v1 + 8); // 0x180002044
    *v9 = 0;
    int64_t v10 = function_180023684(0, 0, v4, v5); // 0x18000206a
    if (v10 == 0) {
        // 0x18000209d
        *v2 = 0;
        // 0x1800020b6
        return 0;
    }
    int64_t v11 = 0x100000000 * a2 >> 32; // 0x180001fed
    *(int64_t *)v10 = v11;
    int64_t v12 = v10 + 8; // 0x18000207c
    _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x1800010b0, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
    *v2 = v12;
    int64_t result = 0; // 0x1800020a4
    if (v12 != 0) {
        // 0x1800020aa
        *v9 = (int32_t)v11;
        result = 1;
    }
    // 0x1800020b6
    return result;
}

// Address range: 0x1800020d0 - 0x180002219
int64_t function_1800020d0(int64_t * a1, int64_t a2) {
    // 0x1800020d0
    if ((int32_t)a2 < 1) {
        // 0x180002207
        return 0;
    }
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 32); // 0x1800020f9
    int64_t v3 = *v2; // 0x1800020f9
    int64_t v4; // 0x1800020d0
    int64_t v5; // 0x1800020d0
    if (v3 != 0) {
        int64_t v6 = v3 - 8; // 0x180002102
        int64_t * v7 = (int64_t *)v6; // 0x180002110
        int64_t v8; // 0x1800020d0
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, v8, v8, (void (*)(int64_t *))v8);
        function_1800235a4(v6, 312 * *v7 + 8);
        *v2 = 0;
        v4 = *v7;
        v5 = 0x1800010b0;
    }
    int32_t * v9 = (int32_t *)(v1 + 24); // 0x180002142
    *v9 = 0;
    int64_t v10 = function_180023684(0, 0, v4, v5); // 0x18000216b
    if (v10 == 0) {
        // 0x1800021a5
        *v2 = 0;
        // 0x180002207
        return 0;
    }
    int64_t v11 = 0x100000000 * a2 >> 32; // 0x1800020eb
    *(int64_t *)v10 = v11;
    int64_t v12 = v10 + 8; // 0x180002180
    _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x1800010b0, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
    *v2 = v12;
    if (v12 == 0) {
        // 0x180002207
        return 0;
    }
    int32_t v13 = v11; // 0x1800021b2
    *v9 = v13;
    if (v13 < 1) {
        // 0x180002207
        return 1;
    }
    int128_t v14 = __asm_movaps(g13); // 0x1800021bb
    int64_t v15 = 0; // 0x1800021c5
    int64_t v16 = 0; // 0x1800021c5
    __asm_movups_4(*(int128_t *)(*v2 + v15), v14);
    *(int32_t *)(v15 + 32 + *v2) = 0x43000000;
    *(int32_t *)(v15 + 36 + *v2) = 0x3f800000;
    v15 += 312;
    while (*v9 > (int32_t)v16) {
        // 0x1800021d0
        v16 &= 0xffffffff;
        __asm_movups_4(*(int128_t *)(*v2 + v15), v14);
        *(int32_t *)(v15 + 32 + *v2) = 0x43000000;
        *(int32_t *)(v15 + 36 + *v2) = 0x3f800000;
        v15 += 312;
    }
    // 0x180002207
    return 1;
}

// Address range: 0x180002220 - 0x1800022c2
int64_t function_180002220(void) {
    // 0x180002220
    if (g42 == 0) {
        // 0x1800022b2
        g41 = 0;
        int64_t result; // 0x180002220
        return result;
    }
    int64_t v1 = 0; // 0x180002243
    int64_t v2 = g42; // 0x180002243
    int64_t result2; // 0x180002220
    if (g41 < 1) {
        goto lab_0x180002278;
    } else {
        int64_t v3 = function_1800022d0(280 * (0x100000000 * v1 >> 32) + v2); // 0x18000225d
        int64_t v4 = v1 + 1; // 0x180002262
        v2 = g42;
        v1 = v4 & 0xffffffff;
        while (g41 > (int32_t)v4) {
            // 0x180002250
            v3 = function_1800022d0(280 * (0x100000000 * v1 >> 32) + v2);
            v4 = v1 + 1;
            v2 = g42;
            v1 = v4 & 0xffffffff;
        }
        // 0x180002273
        result2 = v3;
        if (v2 == 0) {
            goto lab_0x1800022a7;
        } else {
            goto lab_0x180002278;
        }
    }
  lab_0x180002278:;
    int64_t v5 = v2 - 8; // 0x180002278
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    result2 = function_1800235a4(v5, 280 * *(int64_t *)v5 + 8);
    goto lab_0x1800022a7;
  lab_0x1800022a7:
    // 0x1800022a7
    g42 = 0;
    // 0x1800022b2
    g41 = 0;
    return result2;
}

// Address range: 0x1800022d0 - 0x180002384
int64_t function_1800022d0(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 272); // 0x1800022e7
    int64_t v2 = *v1; // 0x1800022e7
    int32_t * v3 = (int32_t *)(a1 + 264);
    if (v2 == 0) {
        // 0x180002379
        *v3 = 0;
        int64_t result; // 0x1800022d0
        return result;
    }
    int64_t v4 = v2; // 0x1800022f9
    int64_t result2; // 0x1800022d0
    if (*v3 < 1) {
        goto lab_0x18000232c;
    } else {
        int64_t v5 = 1; // 0x18000231e
        int64_t v6 = function_180002390(v2); // 0x18000231e
        if (*v3 > 1) {
            int64_t v7 = function_180002390(312 * (0x100000000 * v5 >> 32) + *v1); // 0x180002311
            int64_t v8 = (v5 & 0xffffffff) + 1; // 0x180002316
            v5 = v8;
            v6 = v7;
            while (*v3 > (int32_t)v8) {
                // 0x180002300
                v7 = function_180002390(312 * (0x100000000 * v5 >> 32) + *v1);
                v8 = (v5 & 0xffffffff) + 1;
                v5 = v8;
                v6 = v7;
            }
        }
        // 0x180002320
        v4 = *v1;
        result2 = v6;
        if (v4 == 0) {
            goto lab_0x180002358;
        } else {
            goto lab_0x18000232c;
        }
    }
  lab_0x18000232c:;
    int64_t v9 = v4 - 8; // 0x18000232c
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    result2 = function_1800235a4(v9, 312 * *(int64_t *)v9 + 8);
    goto lab_0x180002358;
  lab_0x180002358:
    // 0x180002358
    *v1 = 0;
    // 0x180002379
    *v3 = 0;
    return result2;
}

// Address range: 0x180002390 - 0x18000244e
int64_t function_180002390(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 272); // 0x1800023ac
    int64_t v2 = *v1; // 0x1800023ac
    if (v2 != 0) {
        int64_t v3 = v2 - 8; // 0x1800023ba
        int64_t v4; // 0x180002390
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, v4, v4, (void (*)(int64_t *))v4);
        function_1800235a4(v3, 16 * *(int64_t *)v3 | 8);
        *v1 = 0;
    }
    // 0x1800023eb
    *(int32_t *)(a1 + 264) = 0;
    int64_t v5 = function_180002450(a1); // 0x1800023f4
    int64_t * v6 = (int64_t *)(a1 + 288); // 0x1800023f9
    int64_t v7 = *v6; // 0x1800023f9
    int64_t result = v5; // 0x180002403
    if (v7 != 0) {
        int64_t v8 = v7 - 8; // 0x180002405
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        result = function_1800235a4(v8, 16 * *(int64_t *)v8 | 8);
        *v6 = 0;
    }
    // 0x180002438
    *(int32_t *)(a1 + 280) = 0;
    return result;
}

// Address range: 0x180002450 - 0x1800024c1
int64_t function_180002450(int64_t a1) {
    int64_t * v1 = (int64_t *)(a1 + 304); // 0x180002467
    int64_t v2 = *v1; // 0x180002467
    if (v2 != 0) {
        int64_t v3 = v2 - 8; // 0x180002473
        int64_t v4; // 0x180002450
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, v4, v4, (void (*)(int64_t *))&g47);
        function_1800235a4(v3, 20 * *(int64_t *)v3 + 8);
        *v1 = 0;
    }
    // 0x1800024b0
    *(int32_t *)(a1 + 296) = 0;
    return 0;
}

// Address range: 0x1800024d0 - 0x1800025df
int64_t function_1800024d0(void) {
    // 0x1800024d0
    if (g34 != 0) {
        int64_t v1 = (int64_t)g34 - 8; // 0x1800024f2
        int64_t v2; // 0x1800024d0
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)-2, v2, v2, (void (*)(int64_t *))&g47);
        function_1800235a4(v1, 520 * *(int64_t *)v1 + 8);
        g34 = 0;
    }
    // 0x180002525
    g33 = 0;
    if (g36 != 0) {
        int64_t v3 = g36 - 8; // 0x180002537
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        function_1800235a4(v3, 312 * *(int64_t *)v3 + 8);
        g36 = 0;
    }
    // 0x18000256a
    g35 = 0;
    function_180001c00((int64_t)&g31);
    if (g40 != 0) {
        int64_t v4 = g40 - 8; // 0x180002588
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        function_1800235a4(v4, 1480 * *(int64_t *)v4 + 8);
        g40 = 0;
    }
    // 0x1800025bb
    g39 = 0;
    int64_t result = function_180002220(); // 0x1800025c1
    g31 = 0;
    *(int16_t *)&g44 = 0;
    return result;
}

// Address range: 0x1800025e0 - 0x1800025ec
int64_t function_1800025e0(int64_t a1) {
    // 0x1800025e0
    *(int16_t *)a1 = 0;
    *(char *)(a1 + 520) = 0;
    return 0;
}

// Address range: 0x1800025f0 - 0x1800025f6
int64_t PluginVersion(void) {
    // 0x1800025f0
    return 3606;
}

// Address range: 0x180002600 - 0x1800028a7
int64_t PluginProc(int64_t a1, int64_t a2) {
    // 0x180002600
    if ((int32_t)a1 != 0x10016 || a2 == 0) {
        // 0x180002883
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180002661
    *(int32_t *)(a2 + 24) = 1;
    *(int32_t *)(a2 + 28) = 2;
    *(int64_t *)(a2 + 40) = 0x1800028b0;
    __asm_movups_4(*(int128_t *)(a2 + 8), __asm_movups(g5));
    int64_t v1; // bp-856, 0x180002600
    int64_t v2 = (int64_t)&v1 + 48; // 0x180002694
    int64_t v3 = 0; // 0x180002689
    int16_t v4 = *(int16_t *)(v3 + (int64_t)L"GameLoft BDAE Importer\r\n"); // 0x180002690
    *(int16_t *)(v3 + v2) = v4;
    v3 += 2;
    while (v4 != 0) {
        // 0x180002690
        v4 = *(int16_t *)(v3 + (int64_t)L"GameLoft BDAE Importer\r\n");
        *(int16_t *)(v3 + v2) = v4;
        v3 += 2;
    }
    // 0x1800026a2
    int64_t dest; // bp-288, 0x180002600
    wcstombs((char *)&dest, L"GameLoft BDAE Importer\r\n", 260);
    int64_t v5 = a2 + 48; // 0x1800026b5
    int64_t v6; // bp-808, 0x180002600
    int64_t v7 = &v6; // 0x1800026b9
    if (v5 != v7) {
        int64_t v8 = &dest; // 0x1800026c3
        int64_t v9 = v8; // 0x1800026de
        char v10 = *(char *)v9; // 0x1800026e0
        *(char *)(a2 + 568 - v8 + v9) = v10;
        v9++;
        while (v10 != 0) {
            // 0x1800026e0
            v10 = *(char *)v9;
            *(char *)(a2 + 568 - v8 + v9) = v10;
            v9++;
        }
        int64_t v11 = v7; // 0x1800026fc
        int16_t v12 = *(int16_t *)v11; // 0x180002700
        *(int16_t *)(v5 - v7 + v11) = v12;
        v11 += 2;
        while (v12 != 0) {
            // 0x180002700
            v12 = *(int16_t *)v11;
            *(int16_t *)(v5 - v7 + v11) = v12;
            v11 += 2;
        }
    }
    int64_t v13 = 0; // 0x18000271a
    int16_t v14 = *(int16_t *)(v13 + (int64_t)L"3.50.77b"); // 0x180002720
    *(int16_t *)(v13 + v2) = v14;
    v13 += 2;
    while (v14 != 0) {
        // 0x180002720
        v14 = *(int16_t *)(v13 + (int64_t)L"3.50.77b");
        *(int16_t *)(v13 + v2) = v14;
        v13 += 2;
    }
    // 0x180002732
    wcstombs((char *)&dest, L"3.50.77b", 260);
    int64_t v15 = a2 + 828; // 0x180002745
    if (v15 != v7) {
        int64_t v16 = &dest; // 0x180002756
        int64_t v17 = v16; // 0x18000276a
        char v18 = *(char *)v17; // 0x180002771
        *(char *)(a2 + 1348 - v16 + v17) = v18;
        v17++;
        while (v18 != 0) {
            // 0x180002771
            v18 = *(char *)v17;
            *(char *)(a2 + 1348 - v16 + v17) = v18;
            v17++;
        }
        int64_t v19 = v7; // 0x18000278d
        int16_t v20 = *(int16_t *)v19; // 0x180002790
        *(int16_t *)(v15 - v7 + v19) = v20;
        v19 += 2;
        while (v20 != 0) {
            // 0x180002790
            v20 = *(int16_t *)v19;
            *(int16_t *)(v15 - v7 + v19) = v20;
            v19 += 2;
        }
    }
    int64_t v21 = 0; // 0x1800027aa
    int16_t v22 = *(int16_t *)(v21 + (int64_t)L"GameLoft BDAE files (*.bdae)"); // 0x1800027b0
    *(int16_t *)(v21 + v2) = v22;
    v21 += 2;
    while (v22 != 0) {
        // 0x1800027b0
        v22 = *(int16_t *)(v21 + (int64_t)L"GameLoft BDAE files (*.bdae)");
        *(int16_t *)(v21 + v2) = v22;
        v21 += 2;
    }
    // 0x1800027c2
    wcstombs((char *)&dest, L"GameLoft BDAE files (*.bdae)", 260);
    int64_t v23 = a2 + 1608; // 0x1800027d5
    if (v23 != v7) {
        int64_t v24 = &dest; // 0x1800027e6
        int64_t v25 = v24; // 0x1800027fa
        char v26 = *(char *)v25; // 0x180002801
        *(char *)(a2 + 2128 - v24 + v25) = v26;
        v25++;
        while (v26 != 0) {
            // 0x180002801
            v26 = *(char *)v25;
            *(char *)(a2 + 2128 - v24 + v25) = v26;
            v25++;
        }
        int64_t v27 = v7; // 0x18000281d
        int16_t v28 = *(int16_t *)v27; // 0x180002820
        *(int16_t *)(v23 - v7 + v27) = v28;
        v27 += 2;
        while (v28 != 0) {
            // 0x180002820
            v28 = *(int16_t *)v27;
            *(int16_t *)(v23 - v7 + v27) = v28;
            v27 += 2;
        }
    }
    int64_t v29 = 0; // 0x18000283a
    int16_t v30 = *(int16_t *)(v29 + (int64_t)L"bdae"); // 0x180002840
    *(int16_t *)(v29 + v2) = v30;
    v29 += 2;
    while (v30 != 0) {
        // 0x180002840
        v30 = *(int16_t *)(v29 + (int64_t)L"bdae");
        *(int16_t *)(v29 + v2) = v30;
        v29 += 2;
    }
    // 0x180002854
    wcstombs((char *)&dest, L"bdae", 260);
    // 0x180002883
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x1800028b0 - 0x180002913
int64_t function_1800028b0(int64_t a1, int64_t a2, int64_t a3) {
    int32_t v1 = a1; // 0x1800028b3
    int64_t v2 = a2; // 0x1800028b0
    switch (v1) {
        case 0x10018: {
            if (a2 == 0) {
                // 0x1800028db
                return 0;
            }
            // 0x180002904
            g28 = a2;
            return function_180003c80(a2);
        }
        default: {
            int32_t v3 = v1 - 0x1001f; // 0x1800028c0
            if (v3 == 0) {
                if (a2 == 0 || a3 == 0) {
                    // 0x1800028db
                    return 0;
                }
                // 0x1800028e8
                g28 = a2;
                return function_180002980(a2, a3);
            }
            // 0x1800028c5
            v2 = a3;
            if (a2 == 0 || v3 != 1) {
                // 0x1800028db
                return 0;
            }
        }
        case 0x10019: {
            // 0x1800028d2
            if (v2 != 0) {
                // 0x1800028d4
                g28 = a2;
            }
            // 0x1800028db
            return 0;
        }
    }
}

// Address range: 0x180002920 - 0x180002977
int64_t function_180002920(int64_t * a1, int16_t * a2, int32_t a3, int64_t a4) {
    int32_t v1 = a3; // bp+24, 0x180002925
    int64_t v2 = *(int64_t *)function_180001020(); // 0x180002961
    int32_t v3 = __stdio_common_vswprintf(v2, (int16_t *)a1, -1, a2, 0, (int64_t)&v1); // 0x180002964
    return v3 > -1 ? v3 : -1;
}

// Address range: 0x180002980 - 0x180002a64
int64_t function_180002980(int64_t a1, int64_t hInstance) {
    if (a1 == 0 || hInstance == 0) {
        // 0x180002a52
        function_1800024d0();
        return 0;
    }
    int32_t v1 = *(int32_t *)&g31; // 0x1800029a2
    int64_t v2 = a1; // 0x180002980
    int64_t hWndParent; // 0x180002980
    int32_t v3; // 0x180002980
    switch (v1) {
        case 779: {
            goto lab_0x1800029d6;
        }
        case 811: {
            goto lab_0x1800029d6;
        }
        default: {
            // 0x1800029b6
            hWndParent = a1;
            v3 = 1;
            if (v1 < 912) {
                // 0x1800029c0
                v2 = 0x8000201;
                hWndParent = 0x8000201;
                v3 = 1;
                if ((1 << (v1 + 12 & 31) & 0x8000201) == 0) {
                    goto lab_0x1800029e0;
                } else {
                    goto lab_0x1800029d6;
                }
            } else {
                goto lab_0x1800029e0;
            }
        }
    }
  lab_0x1800029d6:
    // 0x1800029d6
    hWndParent = v2;
    v3 = 0;
    goto lab_0x1800029e0;
  lab_0x1800029e0:
    // 0x1800029e0
    g19 = v3;
    int32_t v4 = DialogBoxParamW((int64_t *)hInstance, (int16_t *)101, (int64_t *)hWndParent, (int32_t (*)(int64_t *, int32_t, int32_t, int32_t))0x180003990, 0); // 0x180002a07
    if (v4 == 2) {
        // 0x180002a3d
        function_1800024d0();
        return 2;
    }
    if ((int64_t)v4 < 1) {
        // 0x180002a3d
        function_1800024d0();
        return 2;
    }
    // 0x180002a1c
    if ((int32_t)function_180002d40() == 0) {
        // 0x180002a52
        function_1800024d0();
        return 0;
    }
    // 0x180002a28
    function_1800024d0();
    return 1;
}

// Address range: 0x180002a70 - 0x180002d3b
int64_t function_180002a70(void) {
    // 0x180002a70
    int64_t v1; // 0x180002a70
    if (v1 == 0) {
        // 0x180002d10
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180002aba
    int64_t lpPathName; // bp-584, 0x180002a70
    memset(&lpPathName, 0, 520);
    function_18001d1f0(&g44, &lpPathName);
    SetCurrentDirectoryW((int16_t *)&lpPathName);
    if (g35 < 1) {
        // 0x180002d10
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180002b01
    int64_t v2; // bp-2472, 0x180002a70
    int64_t v3 = &v2; // 0x180002a7b
    int64_t v4; // bp-1376, 0x180002a70
    int64_t v5 = &v4;
    int64_t src2; // bp-1112, 0x180002a70
    int64_t v6 = &src2;
    int32_t * v7 = (int32_t *)(v6 + 8);
    int64_t v8 = &lpPathName; // 0x180002b01
    int64_t v9 = 0; // 0x180002b01
    int64_t v10 = 0; // 0x180002b01
    int64_t v11; // 0x180002a70
    int64_t v12; // 0x180002a70
    int16_t v13; // bp-2680, 0x180002a70
    int64_t v14; // 0x180002bc7
    int64_t v15; // 0x180002cca
    while (true) {
      lab_0x180002b04:;
        int64_t v16 = g36 + 52 + 312 * (0x100000000 * v9 >> 32); // 0x180002b19
        int64_t v17 = v8; // 0x180002b1c
        int64_t dest; // bp-1896, 0x180002a70
        if (v16 != 0) {
            int64_t v18 = v16; // 0x180002b2b
            char v19 = *(char *)v18; // 0x180002b30
            *(char *)(v5 - v16 + v18) = v19;
            v18++;
            while (v19 != 0) {
                // 0x180002b30
                v19 = *(char *)v18;
                *(char *)(v5 - v16 + v18) = v19;
                v18++;
            }
            char * src = (char *)v16; // 0x180002b47
            mbstowcs((int16_t *)&dest, src, mbstowcs(NULL, src, 0) + 1);
            v17 = v16;
        }
        // 0x180002b62
        dest = 0;
        v4 = 0;
        if (v17 == 0) {
            // break -> 0x180002d10
            break;
        }
        int32_t v20 = *(int32_t *)(v10 + 40 + g36); // 0x180002b97
        int64_t v21 = v20; // 0x180002b97
        v8 = v21;
        if (v20 > -1 == (g34 != 0) == g33 > v20) {
            // 0x180002bc0
            v14 = 520 * v21 + (int64_t)g34;
            v8 = v21;
            if (*(int16_t *)v14 == 0) {
                goto lab_0x180002cf6;
            } else {
                // 0x180002bd4
                memset(&src2, 0, 520);
                int64_t v22 = 0; // 0x180002beb
                while (true) {
                    int16_t v23 = *(int16_t *)(v3 + 1888 + v22); // 0x180002bf0
                    *(int16_t *)(v22 + v3 + 1360) = v23;
                    v22 += 2;
                    int64_t v24; // bp-1114, 0x180002a70
                    v11 = &v24;
                    if (v23 == 0) {
                        goto lab_0x180002c14;
                    }
                }
                // 0x180002c56
                int64_t dest2; // bp-2160, 0x180002a70
                wcstombs((char *)&dest2, (int16_t *)&src2, 260);
                int16_t v25 = v13; // 0x180002c88
                v8 = 0;
                if (v25 == 0) {
                    goto lab_0x180002cf6;
                } else {
                    // 0x180002c90
                    int64_t v26; // 0x180002a70
                    int64_t v27 = v26; // 0x180002c9c
                    int64_t v28; // 0x180002a70
                    int64_t v29; // 0x180002a70
                    if (v28 != v29) {
                        while (true) {
                            int64_t v30 = v27;
                            char v31 = *(char *)v30; // 0x180002cc0
                            int64_t v32; // 0x180002a70
                            *(char *)(v32 + v30) = v31;
                            v15 = v30 + 1;
                            v27 = v15;
                            v12 = v29;
                            if (v31 == 0) {
                                goto lab_0x180002ce0;
                            }
                        }
                    }
                    goto lab_0x180002cf1;
                }
            }
        } else {
            goto lab_0x180002cf6;
        }
    }
  lab_0x180002d10:
    // 0x180002d10
    __security_check_cookie(g17);
    return &g47;
  lab_0x180002c14:;
    int64_t v33 = v11 + 2; // 0x180002c14
    v11 = v33;
    if (*(int16_t *)v33 != 0) {
        goto lab_0x180002c14;
    } else {
        int64_t v34 = 0; // 0x180002c20
        *(int16_t *)(v34 + v33) = *(int16_t *)(v34 + v14);
    }
  lab_0x180002ce0:;
    int16_t v35 = *(int16_t *)v12; // 0x180002ce0
    *(int16_t *)(v6 + 48 - (int64_t)&v13 + v12) = v35;
    v12 += 2;
    if (v35 != 0) {
        goto lab_0x180002ce0;
    } else {
        goto lab_0x180002cf1;
    }
  lab_0x180002cf6:;
    int64_t v36 = v9 + 1; // 0x180002cf6
    v9 = v36 & 0xffffffff;
    v10 += 312;
    if (g35 <= (int32_t)v36) {
        // break -> 0x180002d10
        goto lab_0x180002d10;
    }
    goto lab_0x180002b04;
  lab_0x180002cf1:
    // 0x180002cf1
    *v7 = *v7 | 1;
    v8 = v15;
    goto lab_0x180002cf6;
}

// Address range: 0x180002d40 - 0x1800035b3
int64_t function_180002d40(void) {
    // 0x180002d40
    int128_t v1; // 0x180002d40
    int128_t v2 = v1;
    int64_t v3 = __asm_movaps_9(v1); // 0x180002d6f
    int64_t v4 = __asm_movaps_9(v1); // 0x180002d73
    int64_t v5 = __asm_movaps_9(v1); // 0x180002d77
    int64_t v6 = __asm_movaps_9(v1); // 0x180002d7c
    int64_t v7 = __asm_movaps_9(v2); // 0x180002d81
    int128_t v8; // 0x180002d40
    int64_t v9; // 0x180002d40
    int64_t v10; // 0x180002d40
    int64_t dest; // bp-1192, 0x180002d40
    int64_t v11; // bp-672, 0x180002d40
    int64_t v12; // 0x180002d40
    uint64_t v13; // 0x180003080
    int128_t v14; // 0x1800030a6
    if (v12 != 0) {
        // 0x180002da6
        function_180002a70();
        int64_t v15 = g37;
        int64_t v16 = v15; // 0x180002db9
        int64_t v17 = 0; // 0x180002db9
        if (g37 >= 1) {
            int64_t v18 = v15 - 1; // 0x180002dd4
            int64_t v19 = v18; // 0x180002dd8
            while (v18 != 0) {
                // 0x180002dc5
                v18 = v19 - 1;
                v19 = v18;
            }
            int64_t v20 = 0; // 0x180002d40
            int64_t v21 = 0;
            int64_t v22 = 0;
            int64_t v23 = 0;
            int64_t v24 = 0;
            int32_t v25 = 0;
            int64_t v26 = v20 + (int64_t)g38;
            int32_t v27 = v25; // 0x180002e2b
            int64_t v28 = v24; // 0x180002e2b
            int64_t v29 = v15; // 0x180002e2b
            int64_t v30 = v23; // 0x180002e2b
            int64_t v31 = v22; // 0x180002e2b
            int64_t v32 = v21; // 0x180002e2b
            int64_t v33; // 0x180002d40
            int64_t v34; // 0x180002d40
            int64_t v35; // 0x180002d40
            int64_t v36; // 0x180002d40
            int64_t v37; // 0x180002d40
            int64_t v38; // 0x180002d40
            int64_t v39; // 0x180002d40
            int64_t v40; // 0x180002d40
            int32_t v41; // 0x180002d40
            int64_t v42; // 0x180002f5f
            int64_t v43; // 0x180002f71
            int64_t v44; // 0x180002f71
            int64_t v45; // 0x180002f9c
            int32_t * v46; // 0x180002e34
            int64_t * v47; // 0x180002e50
            int64_t v48; // 0x180002d40
            int64_t v49; // 0x180002e61
            int64_t v50; // 0x180002d40
            int64_t v51; // 0x180002e71
            int32_t v52; // 0x180002e76
            int32_t v53; // 0x180002fa4
            int64_t v54; // 0x180002fad
            int64_t v55; // 0x180002fb9
            int64_t v56; // 0x180002fc5
            int64_t v57; // 0x180002e76
            int64_t * v58; // 0x180002eb9
            int64_t * v59; // 0x180002f7a
            int64_t v60; // 0x180002eb0
            int64_t v61; // 0x180002eb0
            if (*(int32_t *)v26 != 0) {
                // 0x180002e31
                v46 = (int32_t *)(v26 + 16);
                v27 = v25;
                v28 = v24;
                v29 = v15;
                v30 = v23;
                v31 = v22;
                v32 = v21;
                if (*v46 >= 1) {
                    // 0x180002e3f
                    v47 = (int64_t *)(v26 + 24);
                    v33 = 88 * v23;
                    v38 = 0;
                    v39 = v22;
                    v48 = *v47 + v38;
                    v49 = __asm_movsd_5(__asm_movsd(*(int64_t *)v48));
                    v50 = *(int64_t *)(v12 + 0x1ec8) + v33;
                    *(int64_t *)(v50 + 12) = v49;
                    *(int32_t *)(v50 + 20) = *(int32_t *)(v48 + 8);
                    v51 = *v47;
                    v52 = *(int32_t *)(v38 + 40 + v51);
                    if (v39 != 0 && v52 >= 1) {
                        // 0x180002e9f
                        v57 = v52;
                        v35 = 0;
                        if (v52 >= 4) {
                            // 0x180002eac
                            v58 = (int64_t *)(v39 + 80);
                            v42 = 0;
                            v60 = 8 * v42;
                            v61 = v60 + v38;
                            *(int32_t *)((v60 | 4) + *v58) = *(int32_t *)(v51 + 44 + v61);
                            *(int32_t *)(*v58 + v60) = *(int32_t *)(v61 + 48 + *v47);
                            *(int32_t *)(*v58 + (v60 | 12)) = *(int32_t *)(v61 + 52 + *v47);
                            *(int32_t *)(*v58 + (v60 | 8)) = *(int32_t *)(v61 + 56 + *v47);
                            *(int32_t *)(*v58 + (v60 | 20)) = *(int32_t *)(v61 + 60 + *v47);
                            *(int32_t *)(*v58 + (v60 | 16)) = *(int32_t *)(v61 + 64 + *v47);
                            *(int32_t *)(*v58 + (v60 | 28)) = *(int32_t *)(v61 + 68 + *v47);
                            *(int32_t *)(*v58 + (v60 | 24)) = *(int32_t *)(v61 + 72 + *v47);
                            v42 += 4;
                            v35 = v42;
                            while (v42 < v57 - 3) {
                                // 0x180002eb0
                                v60 = 8 * v42;
                                v61 = v60 + v38;
                                *(int32_t *)((v60 | 4) + *v58) = *(int32_t *)(*v47 + 44 + v61);
                                *(int32_t *)(*v58 + v60) = *(int32_t *)(v61 + 48 + *v47);
                                *(int32_t *)(*v58 + (v60 | 12)) = *(int32_t *)(v61 + 52 + *v47);
                                *(int32_t *)(*v58 + (v60 | 8)) = *(int32_t *)(v61 + 56 + *v47);
                                *(int32_t *)(*v58 + (v60 | 20)) = *(int32_t *)(v61 + 60 + *v47);
                                *(int32_t *)(*v58 + (v60 | 16)) = *(int32_t *)(v61 + 64 + *v47);
                                *(int32_t *)(*v58 + (v60 | 28)) = *(int32_t *)(v61 + 68 + *v47);
                                *(int32_t *)(*v58 + (v60 | 24)) = *(int32_t *)(v61 + 72 + *v47);
                                v42 += 4;
                                v35 = v42;
                            }
                        }
                        // 0x180002f6c
                        v36 = v35;
                        if (v36 < v57) {
                            // 0x180002f71
                            v59 = (int64_t *)(v39 + 80);
                            v45 = v36;
                            v43 = 8 * v45;
                            v44 = v43 + v38;
                            *(int32_t *)((v43 | 4) + *v59) = *(int32_t *)(*v47 + 44 + v44);
                            *(int32_t *)(*v59 + v43) = *(int32_t *)(v44 + 48 + *v47);
                            v45++;
                            while (v45 != v57) {
                                // 0x180002f71
                                v43 = 8 * v45;
                                v44 = v43 + v38;
                                *(int32_t *)((v43 | 4) + *v59) = *(int32_t *)(*v47 + 44 + v44);
                                *(int32_t *)(*v59 + v43) = *(int32_t *)(v44 + 48 + *v47);
                                v45++;
                            }
                        }
                    }
                    // 0x180002fa4
                    v53 = v25 + 1;
                    v54 = v24 + 1;
                    v55 = 1;
                    v56 = v53;
                    v41 = v53;
                    v40 = v54;
                    v37 = v38 + 76;
                    v33 += 88;
                    v34 = v55 & 0xffffffff;
                    while (*v46 > (int32_t)v55) {
                        // 0x180002e50
                        v38 = v37;
                        v39 = v56;
                        v48 = *v47 + v38;
                        v49 = __asm_movsd_5(__asm_movsd(*(int64_t *)v48));
                        v50 = *(int64_t *)(v12 + 0x1ec8) + v33;
                        *(int64_t *)(v50 + 12) = v49;
                        *(int32_t *)(v50 + 20) = *(int32_t *)(v48 + 8);
                        v51 = *v47;
                        v52 = *(int32_t *)(v38 + 40 + v51);
                        if (v39 != 0 && v52 >= 1) {
                            // 0x180002e9f
                            v57 = v52;
                            v35 = 0;
                            if (v52 >= 4) {
                                // 0x180002eac
                                v58 = (int64_t *)(v39 + 80);
                                v42 = 0;
                                v60 = 8 * v42;
                                v61 = v60 + v38;
                                *(int32_t *)((v60 | 4) + *v58) = *(int32_t *)(v51 + 44 + v61);
                                *(int32_t *)(*v58 + v60) = *(int32_t *)(v61 + 48 + *v47);
                                *(int32_t *)(*v58 + (v60 | 12)) = *(int32_t *)(v61 + 52 + *v47);
                                *(int32_t *)(*v58 + (v60 | 8)) = *(int32_t *)(v61 + 56 + *v47);
                                *(int32_t *)(*v58 + (v60 | 20)) = *(int32_t *)(v61 + 60 + *v47);
                                *(int32_t *)(*v58 + (v60 | 16)) = *(int32_t *)(v61 + 64 + *v47);
                                *(int32_t *)(*v58 + (v60 | 28)) = *(int32_t *)(v61 + 68 + *v47);
                                *(int32_t *)(*v58 + (v60 | 24)) = *(int32_t *)(v61 + 72 + *v47);
                                v42 += 4;
                                v35 = v42;
                                while (v42 < v57 - 3) {
                                    // 0x180002eb0
                                    v60 = 8 * v42;
                                    v61 = v60 + v38;
                                    *(int32_t *)((v60 | 4) + *v58) = *(int32_t *)(*v47 + 44 + v61);
                                    *(int32_t *)(*v58 + v60) = *(int32_t *)(v61 + 48 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 12)) = *(int32_t *)(v61 + 52 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 8)) = *(int32_t *)(v61 + 56 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 20)) = *(int32_t *)(v61 + 60 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 16)) = *(int32_t *)(v61 + 64 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 28)) = *(int32_t *)(v61 + 68 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 24)) = *(int32_t *)(v61 + 72 + *v47);
                                    v42 += 4;
                                    v35 = v42;
                                }
                            }
                            // 0x180002f6c
                            v36 = v35;
                            if (v36 < v57) {
                                // 0x180002f71
                                v59 = (int64_t *)(v39 + 80);
                                v45 = v36;
                                v43 = 8 * v45;
                                v44 = v43 + v38;
                                *(int32_t *)((v43 | 4) + *v59) = *(int32_t *)(*v47 + 44 + v44);
                                *(int32_t *)(*v59 + v43) = *(int32_t *)(v44 + 48 + *v47);
                                v45++;
                                while (v45 != v57) {
                                    // 0x180002f71
                                    v43 = 8 * v45;
                                    v44 = v43 + v38;
                                    *(int32_t *)((v43 | 4) + *v59) = *(int32_t *)(*v47 + 44 + v44);
                                    *(int32_t *)(*v59 + v43) = *(int32_t *)(v44 + 48 + *v47);
                                    v45++;
                                }
                            }
                        }
                        // 0x180002fa4
                        v53 = v41 + 1;
                        v54 = v40 + 1;
                        v55 = v34 + 1;
                        v56 = v53;
                        v41 = v53;
                        v40 = v54;
                        v37 = v38 + 76;
                        v33 += 88;
                        v34 = v55 & 0xffffffff;
                    }
                    // 0x180002fcf
                    v27 = v53;
                    v28 = v54;
                    v29 = g37;
                    v30 = v54;
                    v31 = v56;
                    v32 = 0;
                }
            }
            int64_t v62 = v31;
            int64_t v63 = v29;
            int64_t v64 = v32 + 1; // 0x180002fdd
            int64_t v65 = v64 & 0xffffffff; // 0x180002fdd
            int64_t v66 = v64; // 0x180002fef
            v20 += 760;
            v16 = v63;
            v17 = v62;
            while (v65 < v63) {
                // 0x180002e20
                v21 = v65;
                v22 = v62;
                v23 = v30;
                int64_t v67 = v63;
                v24 = v28;
                v25 = v27;
                v26 = v20 + (int64_t)g38;
                v27 = v25;
                v28 = v24;
                v29 = v67;
                v30 = v23;
                v31 = v22;
                v32 = v21;
                if (*(int32_t *)v26 != 0) {
                    // 0x180002e31
                    v46 = (int32_t *)(v26 + 16);
                    v27 = v25;
                    v28 = v24;
                    v29 = v67;
                    v30 = v23;
                    v31 = v22;
                    v32 = v21;
                    if (*v46 >= 1) {
                        // 0x180002e3f
                        v47 = (int64_t *)(v26 + 24);
                        v33 = 88 * v23;
                        v38 = 0;
                        v39 = v22;
                        v48 = *v47 + v38;
                        v49 = __asm_movsd_5(__asm_movsd(*(int64_t *)v48));
                        v50 = *(int64_t *)(v12 + 0x1ec8) + v33;
                        *(int64_t *)(v50 + 12) = v49;
                        *(int32_t *)(v50 + 20) = *(int32_t *)(v48 + 8);
                        v51 = *v47;
                        v52 = *(int32_t *)(v38 + 40 + v51);
                        if (v39 != 0 && v52 >= 1) {
                            // 0x180002e9f
                            v57 = v52;
                            v35 = 0;
                            if (v52 >= 4) {
                                // 0x180002eac
                                v58 = (int64_t *)(v39 + 80);
                                v42 = 0;
                                v60 = 8 * v42;
                                v61 = v60 + v38;
                                *(int32_t *)((v60 | 4) + *v58) = *(int32_t *)(v51 + 44 + v61);
                                *(int32_t *)(*v58 + v60) = *(int32_t *)(v61 + 48 + *v47);
                                *(int32_t *)(*v58 + (v60 | 12)) = *(int32_t *)(v61 + 52 + *v47);
                                *(int32_t *)(*v58 + (v60 | 8)) = *(int32_t *)(v61 + 56 + *v47);
                                *(int32_t *)(*v58 + (v60 | 20)) = *(int32_t *)(v61 + 60 + *v47);
                                *(int32_t *)(*v58 + (v60 | 16)) = *(int32_t *)(v61 + 64 + *v47);
                                *(int32_t *)(*v58 + (v60 | 28)) = *(int32_t *)(v61 + 68 + *v47);
                                *(int32_t *)(*v58 + (v60 | 24)) = *(int32_t *)(v61 + 72 + *v47);
                                v42 += 4;
                                v35 = v42;
                                while (v42 < v57 - 3) {
                                    // 0x180002eb0
                                    v60 = 8 * v42;
                                    v61 = v60 + v38;
                                    *(int32_t *)((v60 | 4) + *v58) = *(int32_t *)(*v47 + 44 + v61);
                                    *(int32_t *)(*v58 + v60) = *(int32_t *)(v61 + 48 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 12)) = *(int32_t *)(v61 + 52 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 8)) = *(int32_t *)(v61 + 56 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 20)) = *(int32_t *)(v61 + 60 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 16)) = *(int32_t *)(v61 + 64 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 28)) = *(int32_t *)(v61 + 68 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 24)) = *(int32_t *)(v61 + 72 + *v47);
                                    v42 += 4;
                                    v35 = v42;
                                }
                            }
                            // 0x180002f6c
                            v36 = v35;
                            if (v36 < v57) {
                                // 0x180002f71
                                v59 = (int64_t *)(v39 + 80);
                                v45 = v36;
                                v43 = 8 * v45;
                                v44 = v43 + v38;
                                *(int32_t *)((v43 | 4) + *v59) = *(int32_t *)(*v47 + 44 + v44);
                                *(int32_t *)(*v59 + v43) = *(int32_t *)(v44 + 48 + *v47);
                                v45++;
                                while (v45 != v57) {
                                    // 0x180002f71
                                    v43 = 8 * v45;
                                    v44 = v43 + v38;
                                    *(int32_t *)((v43 | 4) + *v59) = *(int32_t *)(*v47 + 44 + v44);
                                    *(int32_t *)(*v59 + v43) = *(int32_t *)(v44 + 48 + *v47);
                                    v45++;
                                }
                            }
                        }
                        // 0x180002fa4
                        v53 = v25 + 1;
                        v54 = v24 + 1;
                        v55 = 1;
                        v56 = v53;
                        v41 = v53;
                        v40 = v54;
                        v37 = v38 + 76;
                        v33 += 88;
                        v34 = v55 & 0xffffffff;
                        while (*v46 > (int32_t)v55) {
                            // 0x180002e50
                            v38 = v37;
                            v39 = v56;
                            v48 = *v47 + v38;
                            v49 = __asm_movsd_5(__asm_movsd(*(int64_t *)v48));
                            v50 = *(int64_t *)(v12 + 0x1ec8) + v33;
                            *(int64_t *)(v50 + 12) = v49;
                            *(int32_t *)(v50 + 20) = *(int32_t *)(v48 + 8);
                            v51 = *v47;
                            v52 = *(int32_t *)(v38 + 40 + v51);
                            if (v39 != 0 && v52 >= 1) {
                                // 0x180002e9f
                                v57 = v52;
                                v35 = 0;
                                if (v52 >= 4) {
                                    // 0x180002eac
                                    v58 = (int64_t *)(v39 + 80);
                                    v42 = 0;
                                    v60 = 8 * v42;
                                    v61 = v60 + v38;
                                    *(int32_t *)((v60 | 4) + *v58) = *(int32_t *)(v51 + 44 + v61);
                                    *(int32_t *)(*v58 + v60) = *(int32_t *)(v61 + 48 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 12)) = *(int32_t *)(v61 + 52 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 8)) = *(int32_t *)(v61 + 56 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 20)) = *(int32_t *)(v61 + 60 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 16)) = *(int32_t *)(v61 + 64 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 28)) = *(int32_t *)(v61 + 68 + *v47);
                                    *(int32_t *)(*v58 + (v60 | 24)) = *(int32_t *)(v61 + 72 + *v47);
                                    v42 += 4;
                                    v35 = v42;
                                    while (v42 < v57 - 3) {
                                        // 0x180002eb0
                                        v60 = 8 * v42;
                                        v61 = v60 + v38;
                                        *(int32_t *)((v60 | 4) + *v58) = *(int32_t *)(*v47 + 44 + v61);
                                        *(int32_t *)(*v58 + v60) = *(int32_t *)(v61 + 48 + *v47);
                                        *(int32_t *)(*v58 + (v60 | 12)) = *(int32_t *)(v61 + 52 + *v47);
                                        *(int32_t *)(*v58 + (v60 | 8)) = *(int32_t *)(v61 + 56 + *v47);
                                        *(int32_t *)(*v58 + (v60 | 20)) = *(int32_t *)(v61 + 60 + *v47);
                                        *(int32_t *)(*v58 + (v60 | 16)) = *(int32_t *)(v61 + 64 + *v47);
                                        *(int32_t *)(*v58 + (v60 | 28)) = *(int32_t *)(v61 + 68 + *v47);
                                        *(int32_t *)(*v58 + (v60 | 24)) = *(int32_t *)(v61 + 72 + *v47);
                                        v42 += 4;
                                        v35 = v42;
                                    }
                                }
                                // 0x180002f6c
                                v36 = v35;
                                if (v36 < v57) {
                                    // 0x180002f71
                                    v59 = (int64_t *)(v39 + 80);
                                    v45 = v36;
                                    v43 = 8 * v45;
                                    v44 = v43 + v38;
                                    *(int32_t *)((v43 | 4) + *v59) = *(int32_t *)(*v47 + 44 + v44);
                                    *(int32_t *)(*v59 + v43) = *(int32_t *)(v44 + 48 + *v47);
                                    v45++;
                                    while (v45 != v57) {
                                        // 0x180002f71
                                        v43 = 8 * v45;
                                        v44 = v43 + v38;
                                        *(int32_t *)((v43 | 4) + *v59) = *(int32_t *)(*v47 + 44 + v44);
                                        *(int32_t *)(*v59 + v43) = *(int32_t *)(v44 + 48 + *v47);
                                        v45++;
                                    }
                                }
                            }
                            // 0x180002fa4
                            v53 = v41 + 1;
                            v54 = v40 + 1;
                            v55 = v34 + 1;
                            v56 = v53;
                            v41 = v53;
                            v40 = v54;
                            v37 = v38 + 76;
                            v33 += 88;
                            v34 = v55 & 0xffffffff;
                        }
                        // 0x180002fcf
                        v27 = v53;
                        v28 = v54;
                        v29 = g37;
                        v30 = v54;
                        v31 = v56;
                        v32 = v66 & 0xffffffff;
                    }
                }
                // 0x180002fdd
                v62 = v31;
                v63 = v29;
                v64 = v32 + 1;
                v65 = v64 & 0xffffffff;
                v66 = v64;
                v20 += 760;
                v16 = v63;
                v17 = v62;
            }
        }
        // 0x180002ff5
        if ((int32_t)v16 < 1) {
            // 0x180003091
            v8 = __asm_movss(0x3f800000);
            goto lab_0x1800032ff;
        } else {
            int64_t v68 = &v11;
            int64_t v69 = 0; // 0x18000307e
            int64_t v70 = (int64_t)g38 + 492 + 760 * (0x100000000 * v69 >> 32); // 0x180003011
            int64_t v71 = v17; // 0x180003018
            int64_t v72; // 0x180002d40
            char v73; // 0x180003030
            char * src; // 0x180003047
            if (v70 != 0) {
                // 0x18000301a
                v72 = v70;
                v73 = *(char *)v72;
                *(char *)(v68 - v70 + v72) = v73;
                v72++;
                while (v73 != 0) {
                    // 0x180003030
                    v73 = *(char *)v72;
                    *(char *)(v68 - v70 + v72) = v73;
                    v72++;
                }
                // 0x18000303f
                src = (char *)v70;
                mbstowcs((int16_t *)&dest, src, mbstowcs(NULL, src, 0) + 1);
                v71 = v70;
            }
            while (v71 != 0) {
                // 0x18000307e
                v69 = v69 + 1 & 0xffffffff;
                v13 = (int64_t)g37;
                int64_t v74 = &dest; // 0x180003088
                if (v69 >= v13) {
                    // 0x180003091
                    v14 = __asm_movss(0x3f800000);
                    v8 = v14;
                    if (g37 < 1) {
                        goto lab_0x1800032ff;
                    } else {
                        // 0x1800030c0
                        v10 = 0;
                        v9 = 0;
                        goto lab_0x1800030c0_2;
                    }
                }
                v70 = (int64_t)g38 + 492 + 760 * (0x100000000 * v69 >> 32);
                v71 = v74;
                if (v70 != 0) {
                    // 0x18000301a
                    v72 = v70;
                    v73 = *(char *)v72;
                    *(char *)(v68 - v70 + v72) = v73;
                    v72++;
                    while (v73 != 0) {
                        // 0x180003030
                        v73 = *(char *)v72;
                        *(char *)(v68 - v70 + v72) = v73;
                        v72++;
                    }
                    // 0x18000303f
                    src = (char *)v70;
                    mbstowcs((int16_t *)&dest, src, mbstowcs(NULL, src, 0) + 1);
                    v71 = v70;
                }
            }
            goto lab_0x18000356a;
        }
    } else {
        goto lab_0x18000356a;
    }
  lab_0x18000356a:
    // 0x18000356a
    __security_check_cookie(g17);
    __asm_movaps((int128_t)v3);
    __asm_movaps((int128_t)v4);
    __asm_movaps((int128_t)v5);
    __asm_movaps((int128_t)v6);
    __asm_movaps((int128_t)v7);
    return &g47;
  lab_0x1800032ff:
    // 0x1800032ff
    if (g39 >= 1) {
        int128_t v75 = __asm_xorps(v2, v2); // 0x180003326
        int128_t v76 = __asm_movss(0x38d1b717); // 0x18000332a
        int64_t src2; // bp-408, 0x180002d40
        int64_t v77 = &src2;
        int64_t v78 = v77 + 920;
        int128_t * v79 = (int128_t *)v78;
        int32_t * v80 = (int32_t *)(v77 + 924);
        int32_t * v81 = (int32_t *)v78;
        int64_t v82 = 0; // 0x180003337
        int64_t v83 = 0; // 0x180003337
        memset(&src2, 0, 260);
        int64_t v84 = 1480 * (0x100000000 * v82 >> 32) + g40; // 0x180003365
        int64_t v85 = v84 + 260; // 0x180003379
        char v86 = *(char *)v85; // 0x180003380
        *(char *)(v77 - 260 - v84 + v85) = v86;
        v85++;
        while (v86 != 0) {
            // 0x180003380
            v86 = *(char *)v85;
            *(char *)(v77 - 260 - v84 + v85) = v86;
            v85++;
        }
        // 0x18000338f
        int64_t v87; // 0x180002d40
        char v88; // 0x1800033b0
        if (*(char *)(v83 + 260 + g40) == v86) {
            // 0x180003399
            v87 = v84;
            v88 = *(char *)v87;
            *(char *)(v77 - v84 + v87) = v88;
            v87++;
            while (v88 != 0) {
                // 0x1800033b0
                v88 = *(char *)v87;
                *(char *)(v77 - v84 + v87) = v88;
                v87++;
            }
        }
        int64_t v89 = 0; // 0x1800033be
        int64_t v90; // bp-1016, 0x180002d40
        int64_t v91 = v89 + (int64_t)&v90;
        char v92 = *(char *)(v91 + 608); // 0x1800033c1
        *(char *)(v91 + 344) = v92;
        v89++;
        while (v92 != 0) {
            // 0x1800033c1
            v91 = v89 + (int64_t)&v90;
            v92 = *(char *)(v91 + 608);
            *(char *)(v91 + 344) = v92;
            v89++;
        }
        int32_t v93 = mbstowcs(NULL, (char *)&src2, 0); // 0x1800033e4
        mbstowcs((int16_t *)&dest, (char *)&src2, v93 + 1);
        dest = 0;
        v11 = 0;
        *(int32_t *)(v77 + 792) = *(int32_t *)(v83 + 1300 + g40);
        int64_t v94 = g40 + v83;
        *(int64_t *)(v77 + 832) = __asm_movsd_5(__asm_movsd(*(int64_t *)(v94 + 1312)));
        *(int32_t *)(v77 + 840) = *(int32_t *)(v94 + 1320);
        __asm_movups_4(*v79, __asm_movups(*(int128_t *)(v83 + 1336 + g40)));
        int128_t v95 = __asm_movss(*v80); // 0x18000347e
        int128_t v96 = __asm_movss(*v81); // 0x180003486
        int128_t v97 = __asm_movss(*(int32_t *)(v77 + 928)); // 0x18000348e
        int128_t v98 = __asm_movss(*(int32_t *)(v77 + 932)); // 0x180003496
        int128_t v99 = __asm_addss(__asm_mulss(v96, v96), __asm_mulss(v95, v95)); // 0x1800034a6
        int128_t v100 = __asm_addss(v99, __asm_mulss(__asm_movaps(v97), v97)); // 0x1800034b1
        int128_t v101 = __asm_addss(v100, __asm_mulss(__asm_movaps(v98), v98)); // 0x1800034bc
        __asm_ucomiss(v101, v75);
        float64_t v102 = sqrt((float64_t)(int64_t)__asm_cvtps2pd(v101)); // 0x1800034cb
        __asm_xorps(v101, v101);
        int128_t v103 = __asm_cvtsd2ss((int128_t)(int32_t)(float32_t)v102); // 0x1800034d3
        __asm_comiss(v103, v76);
        int128_t v104 = __asm_divss(__asm_movaps(v8), v103); // 0x1800034e1
        int64_t v105 = __asm_movss_8(__asm_mulss_10(__asm_movaps(v104), *v81)); // 0x1800034f0
        __asm_movss_8(__asm_mulss_10(__asm_movaps(v104), *v80));
        __asm_movss_8(__asm_mulss(v97, v104));
        __asm_movss_8(__asm_mulss(v98, v104));
        __asm_movups_4(*v79, __asm_movups((int128_t)(0x100000000 * v105 >> 32)));
        int64_t v106 = v82 + 1; // 0x180003535
        v82 = v106 & 0xffffffff;
        v83 += 1480;
        while (g39 > (int32_t)v106) {
            // 0x180003340
            memset(&src2, 0, 260);
            v84 = 1480 * (0x100000000 * v82 >> 32) + g40;
            v85 = v84 + 260;
            v86 = *(char *)v85;
            *(char *)(v77 - 260 - v84 + v85) = v86;
            v85++;
            while (v86 != 0) {
                // 0x180003380
                v86 = *(char *)v85;
                *(char *)(v77 - 260 - v84 + v85) = v86;
                v85++;
            }
            // 0x18000338f
            if (*(char *)(v83 + 260 + g40) == v86) {
                // 0x180003399
                v87 = v84;
                v88 = *(char *)v87;
                *(char *)(v77 - v84 + v87) = v88;
                v87++;
                while (v88 != 0) {
                    // 0x1800033b0
                    v88 = *(char *)v87;
                    *(char *)(v77 - v84 + v87) = v88;
                    v87++;
                }
            }
            // 0x1800033be
            v89 = 0;
            v91 = v89 + (int64_t)&v90;
            v92 = *(char *)(v91 + 608);
            *(char *)(v91 + 344) = v92;
            v89++;
            while (v92 != 0) {
                // 0x1800033c1
                v91 = v89 + (int64_t)&v90;
                v92 = *(char *)(v91 + 608);
                *(char *)(v91 + 344) = v92;
                v89++;
            }
            // 0x1800033d8
            v93 = mbstowcs(NULL, (char *)&src2, 0);
            mbstowcs((int16_t *)&dest, (char *)&src2, v93 + 1);
            dest = 0;
            v11 = 0;
            *(int32_t *)(v77 + 792) = *(int32_t *)(v83 + 1300 + g40);
            v94 = g40 + v83;
            *(int64_t *)(v77 + 832) = __asm_movsd_5(__asm_movsd(*(int64_t *)(v94 + 1312)));
            *(int32_t *)(v77 + 840) = *(int32_t *)(v94 + 1320);
            __asm_movups_4(*v79, __asm_movups(*(int128_t *)(v83 + 1336 + g40)));
            v95 = __asm_movss(*v80);
            v96 = __asm_movss(*v81);
            v97 = __asm_movss(*(int32_t *)(v77 + 928));
            v98 = __asm_movss(*(int32_t *)(v77 + 932));
            v99 = __asm_addss(__asm_mulss(v96, v96), __asm_mulss(v95, v95));
            v100 = __asm_addss(v99, __asm_mulss(__asm_movaps(v97), v97));
            v101 = __asm_addss(v100, __asm_mulss(__asm_movaps(v98), v98));
            __asm_ucomiss(v101, v75);
            v102 = sqrt((float64_t)(int64_t)__asm_cvtps2pd(v101));
            __asm_xorps(v101, v101);
            v103 = __asm_cvtsd2ss((int128_t)(int32_t)(float32_t)v102);
            __asm_comiss(v103, v76);
            v104 = __asm_divss(__asm_movaps(v8), v103);
            v105 = __asm_movss_8(__asm_mulss_10(__asm_movaps(v104), *v81));
            __asm_movss_8(__asm_mulss_10(__asm_movaps(v104), *v80));
            __asm_movss_8(__asm_mulss(v97, v104));
            __asm_movss_8(__asm_mulss(v98, v104));
            __asm_movups_4(*v79, __asm_movups((int128_t)(0x100000000 * v105 >> 32)));
            v106 = v82 + 1;
            v82 = v106 & 0xffffffff;
            v83 += 1480;
        }
    }
    goto lab_0x18000356a;
  lab_0x1800030c0_2:
    // 0x1800030c0
    if (*(int32_t *)(v10 + (int64_t)g38) < 1) {
        int64_t v107 = v9 + 1 & 0xffffffff; // 0x1800032e7
        v10 += 760;
        v9 = v107;
        v8 = v14;
        if (v107 < v13) {
            goto lab_0x1800030c0_2;
        } else {
            goto lab_0x1800032ff;
        }
    } else {
        goto lab_0x18000356a;
    }
}

// Address range: 0x1800035c0 - 0x180003988
int64_t function_1800035c0(int64_t a1) {
    // 0x1800035c0
    int128_t v1; // 0x1800035c0
    int128_t v2 = v1;
    if (a1 == 0) {
        // 0x18000396f
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v3 = g37; // 0x1800035f5
    int64_t v4 = v3; // 0x1800035f5
    int64_t v5 = (int64_t)g38; // 0x180003617
    int64_t v6 = 0; // 0x18000362f
    int64_t v7 = 0; // 0x18000362f
    int64_t v8 = 0; // 0x18000362f
    if (v3 >= 1 && v3 >= 8) {
        int64_t v9 = __asm_movaps_9(v2); // 0x18000363e
        int64_t v10 = __asm_movaps_9(v1); // 0x180003648
        int128_t v11 = __asm_xorps(v2, v2); // 0x180003650
        int128_t v12 = __asm_movdqa(v11); // 0x180003653
        int128_t v13 = __asm_movdqa(v11); // 0x180003657
        int128_t v14 = __asm_movdqa(v11); // 0x18000365b
        int32_t v15 = v3 & -0x7ffffff9; // 0x18000365f
        int64_t v16 = v15; // 0x18000365f
        int64_t v17 = v16; // 0x180003665
        if (v15 < 0) {
            // 0x180003667
            v17 = (v16 + 7 | 0xfffffff8) + 1 & 0xffffffff;
        }
        int64_t v18 = v5 + 1520; // 0x18000367e
        int64_t v19 = 0; // 0x18000367e
        int128_t v20 = __asm_movd(*(int32_t *)(v18 + 760)); // 0x180003680
        v8 = 8;
        int128_t v21 = __asm_movd(*(int32_t *)v18); // 0x18000368c
        v19 += 8;
        int128_t v22 = __asm_movd(*(int32_t *)(v18 - 760)); // 0x180003694
        int128_t v23 = __asm_punpckldq(__asm_movd(*(int32_t *)(v18 - 1520)), v21); // 0x1800036ab
        int128_t v24 = __asm_movd(*(int32_t *)(v18 + 16)); // 0x1800036af
        int128_t v25 = __asm_punpckldq(v22, v20); // 0x1800036b7
        int128_t v26 = __asm_movd(*(int32_t *)(v18 + 776)); // 0x1800036bb
        int128_t v27 = __asm_punpckldq(v23, v25); // 0x1800036c3
        int128_t v28 = __asm_movd(*(int32_t *)(v18 - 744)); // 0x1800036c7
        int128_t v29 = __asm_paddd(v27, v11); // 0x1800036cf
        int128_t v30 = __asm_punpckldq(v28, v26); // 0x1800036d3
        int128_t v31 = __asm_movdqa(v29); // 0x1800036d7
        int128_t v32 = __asm_movd(*(int32_t *)(v18 + 3800)); // 0x1800036db
        int128_t v33 = __asm_punpckldq(__asm_movd(*(int32_t *)(v18 - 1504)), v24); // 0x1800036eb
        int128_t v34 = __asm_movd(*(int32_t *)(v18 + 3040)); // 0x1800036ef
        int128_t v35 = __asm_punpckldq(v33, v30); // 0x1800036f7
        int128_t v36 = __asm_movd(*(int32_t *)(v18 + 2280)); // 0x1800036fb
        int128_t v37 = __asm_paddd(v35, v13); // 0x180003703
        int128_t v38 = __asm_punpckldq(v36, v32); // 0x180003707
        int128_t v39 = __asm_movdqa(v37); // 0x18000370b
        int128_t v40 = __asm_movd(*(int32_t *)(v18 + 1520)); // 0x18000370f
        int128_t v41 = __asm_movd(*(int32_t *)(v18 + 3816)); // 0x180003717
        int128_t v42 = __asm_punpckldq(v40, v34); // 0x18000371f
        int128_t v43 = __asm_movd(*(int32_t *)(v18 + 3056)); // 0x180003723
        int128_t v44 = __asm_punpckldq(v42, v38); // 0x18000372b
        int128_t v45 = __asm_movd(*(int32_t *)(v18 + 2296)); // 0x18000372f
        int128_t v46 = __asm_paddd(v44, v12); // 0x180003737
        int128_t v47 = __asm_punpckldq(v45, v41); // 0x18000373b
        int128_t v48 = __asm_movdqa(v46); // 0x18000373f
        int128_t v49 = __asm_movd(*(int32_t *)(v18 + 1536)); // 0x180003743
        int128_t v50 = __asm_movdqa(__asm_paddd(__asm_punpckldq(__asm_punpckldq(v49, v43), v47), v14)); // 0x180003757
        int128_t v51 = v50; // 0x18000375e
        int128_t v52 = v48; // 0x18000375e
        int128_t v53 = v31; // 0x18000375e
        int128_t v54 = v39; // 0x18000375e
        v18 += 0x17c0;
        int64_t v55 = v8; // 0x18000375e
        while (v19 < 0x100000000 * (v4 - v17) >> 32) {
            // 0x180003680
            v20 = __asm_movd(*(int32_t *)(v18 + 760));
            v8 = v55 + 8 & 0xffffffff;
            v21 = __asm_movd(*(int32_t *)v18);
            v19 += 8;
            v22 = __asm_movd(*(int32_t *)(v18 - 760));
            v23 = __asm_punpckldq(__asm_movd(*(int32_t *)(v18 - 1520)), v21);
            v24 = __asm_movd(*(int32_t *)(v18 + 16));
            v25 = __asm_punpckldq(v22, v20);
            v26 = __asm_movd(*(int32_t *)(v18 + 776));
            v27 = __asm_punpckldq(v23, v25);
            v28 = __asm_movd(*(int32_t *)(v18 - 744));
            v29 = __asm_paddd(v27, v53);
            v30 = __asm_punpckldq(v28, v26);
            v31 = __asm_movdqa(v29);
            v32 = __asm_movd(*(int32_t *)(v18 + 3800));
            v33 = __asm_punpckldq(__asm_movd(*(int32_t *)(v18 - 1504)), v24);
            v34 = __asm_movd(*(int32_t *)(v18 + 3040));
            v35 = __asm_punpckldq(v33, v30);
            v36 = __asm_movd(*(int32_t *)(v18 + 2280));
            v37 = __asm_paddd(v35, v54);
            v38 = __asm_punpckldq(v36, v32);
            v39 = __asm_movdqa(v37);
            v40 = __asm_movd(*(int32_t *)(v18 + 1520));
            v41 = __asm_movd(*(int32_t *)(v18 + 3816));
            v42 = __asm_punpckldq(v40, v34);
            v43 = __asm_movd(*(int32_t *)(v18 + 3056));
            v44 = __asm_punpckldq(v42, v38);
            v45 = __asm_movd(*(int32_t *)(v18 + 2296));
            v46 = __asm_paddd(v44, v52);
            v47 = __asm_punpckldq(v45, v41);
            v48 = __asm_movdqa(v46);
            v49 = __asm_movd(*(int32_t *)(v18 + 1536));
            v50 = __asm_movdqa(__asm_paddd(__asm_punpckldq(__asm_punpckldq(v49, v43), v47), v51));
            v51 = v50;
            v52 = v48;
            v53 = v31;
            v54 = v39;
            v18 += 0x17c0;
            v55 = v8;
        }
        int128_t v56 = __asm_paddd(v50, v39); // 0x180003764
        int128_t v57 = __asm_paddd(v48, v31); // 0x180003768
        __asm_movaps((int128_t)v10);
        int128_t v58 = __asm_movdqa(v56); // 0x180003774
        __asm_movaps((int128_t)v9);
        int128_t v59 = __asm_paddd(v56, __asm_psrldq(v58, 8)); // 0x180003785
        int128_t v60 = __asm_paddd(v59, __asm_psrldq(__asm_movdqa(v59), 4)); // 0x180003792
        int128_t v61 = __asm_paddd(v57, __asm_psrldq(__asm_movdqa(v57), 8)); // 0x18000379f
        int32_t v62 = __asm_movd_12(v60); // 0x1800037a3
        int128_t v63 = __asm_paddd(v61, __asm_psrldq(__asm_movdqa(v61), 4)); // 0x1800037b0
        v6 = v62;
        v7 = __asm_movd_12(v63);
    }
    int64_t v64 = v6; // 0x1800037c6
    int64_t v65 = v7; // 0x1800037c6
    int64_t v66 = 0; // 0x1800037c6
    if (v8 < v4) {
        uint32_t v67 = v3 - (int32_t)v8; // 0x1800037ca
        int64_t v68 = 0; // 0x1800037d0
        int64_t v69 = 0; // 0x1800037d0
        int64_t v70 = 0; // 0x1800037d0
        int64_t v71 = 0; // 0x1800037d0
        int64_t v72 = v8; // 0x1800037d0
        if (v67 >= 2) {
            int64_t v73 = (v67 - 2) / 2 + 1; // 0x1800037ec
            int64_t v74 = v5 + 760 + 760 * (0x100000000 * v8 >> 32); // 0x1800037f6
            int64_t v75 = v73; // 0x1800037f6
            int32_t v76 = *(int32_t *)(v74 - 760); // 0x180003800
            int32_t v77 = *(int32_t *)(v74 - 744); // 0x180003806
            int32_t v78 = *(int32_t *)v74; // 0x18000380d
            int32_t v79 = *(int32_t *)(v74 + 16); // 0x180003810
            v75--;
            v74 += 1520;
            int32_t v80 = v76; // 0x18000381f
            int32_t v81 = v78; // 0x18000381f
            int32_t v82 = v77; // 0x18000381f
            int32_t v83 = v79; // 0x18000381f
            while (v75 != 0) {
                // 0x180003800
                v76 = *(int32_t *)(v74 - 760) + v80;
                v77 = *(int32_t *)(v74 - 744) + v82;
                v78 = *(int32_t *)v74 + v81;
                v79 = *(int32_t *)(v74 + 16) + v83;
                v75--;
                v74 += 1520;
                v80 = v76;
                v81 = v78;
                v82 = v77;
                v83 = v79;
            }
            // 0x180003821
            v68 = v76;
            v69 = v78;
            v70 = v77;
            v71 = v79;
            v72 = 2 * v73 + v8 & 0xffffffff;
        }
        // 0x180003821
        v66 = v70;
        int64_t v84 = v6; // 0x180003824
        int64_t v85 = v7; // 0x180003824
        if (v72 < v4) {
            int64_t v86 = 760 * (0x100000000 * v72 >> 32) + v5;
            v84 = (int64_t)(*(int32_t *)(v86 + 16) + (int32_t)v6);
            v85 = (int64_t)(*(int32_t *)v86 + (int32_t)v7);
        }
        // 0x180003839
        v64 = v71 + v66 + v84 & 0xffffffff;
        v65 = v69 + v68 + v85 & 0xffffffff;
    }
    // 0x180003845
    int64_t lpString; // bp-584, 0x1800035c0
    memset(&lpString, 0, 512);
    function_180002920(&lpString, L"%d", g33, v66);
    int64_t * hDlg = (int64_t *)a1; // 0x18000387c
    SetDlgItemTextW(hDlg, 1002, (int16_t *)&lpString);
    function_180002920(&lpString, L"%d", g39, v66);
    SetDlgItemTextW(hDlg, 1008, (int16_t *)&lpString);
    function_180002920(&lpString, L"%d", v3, v66);
    SetDlgItemTextW(hDlg, 1003, (int16_t *)&lpString);
    function_180002920(&lpString, L"%d", (int32_t)v64, v66);
    SetDlgItemTextW(hDlg, 1004, (int16_t *)&lpString);
    function_180002920(&lpString, L"%d", (int32_t)v65, v66);
    SetDlgItemTextW(hDlg, 1005, (int16_t *)&lpString);
    SendDlgItemMessageW(hDlg, 2003, 241, g19, 0);
    // 0x18000396f
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180003990 - 0x180003a2c
int64_t function_180003990(int64_t hDlg2, int64_t a2, int64_t a3, int64_t a4) {
    int32_t v1 = (int32_t)a2 - 272; // 0x180003999
    if (v1 == 0) {
        // 0x180003a0b
        function_1800035c0(hDlg2);
        function_18001d360(hDlg2, (int64_t)GetDesktopWindow());
        return 1;
    }
    if (v1 != 1) {
        // 0x180003a03
        return 0;
    }
    int32_t v2 = ((int32_t)a3 & 0xffff) - 1; // 0x1800039aa
    if (v2 == 0) {
        int64_t * hDlg = (int64_t *)hDlg2; // 0x1800039de
        g19 = SendDlgItemMessageW(hDlg, 2003, 242, 0, 0);
        EndDialog(hDlg, 1);
        return 1;
    }
    if (v2 != 1) {
        // 0x180003a03
        return 0;
    }
    // 0x1800039b4
    EndDialog((int64_t *)hDlg2, 0);
    return 1;
}

// Address range: 0x180003a30 - 0x180003a38
int64_t function_180003a30(void) {
    // 0x180003a30
    return &g45;
}

// Address range: 0x180003a40 - 0x180003a8f
int64_t function_180003a40(int64_t * a1, char * a2, int32_t * a3, int32_t * a4) {
    int32_t * v1 = a3; // bp+24, 0x180003a45
    int64_t v2 = *(int64_t *)function_180003a30(); // 0x180003a7e
    int32_t result = __stdio_common_vsscanf(v2, (char *)a1, -1, a2, 0, (int64_t)&v1); // 0x180003a81
    return result;
}

// Address range: 0x180003a90 - 0x180003ae4
int64_t function_180003a90(int64_t a1, int64_t * a2) {
    int64_t result = (int64_t)a2;
    int64_t v1 = a1 + 12; // 0x180003a90
    if (v1 == result) {
        // 0x180003ae0
        return result;
    }
    int64_t v2 = -12 - a1 + result;
    int64_t v3 = a1 + 532; // 0x180003aad
    char v4 = *(char *)v3; // 0x180003ab0
    *(char *)(v2 + v3) = v4;
    v3++;
    while (v4 != 0) {
        // 0x180003ab0
        v4 = *(char *)v3;
        *(char *)(v2 + v3) = v4;
        v3++;
    }
    int16_t v5 = *(int16_t *)v1; // 0x180003ad0
    *(int16_t *)(v2 + v1) = v5;
    int64_t v6 = v1 + 2; // 0x180003ade
    while (v5 != 0) {
        // 0x180003ad0
        v5 = *(int16_t *)v6;
        *(int16_t *)(v2 + v6) = v5;
        v6 += 2;
    }
    // 0x180003ae0
    return result;
}

// Address range: 0x180003af0 - 0x180003b39
int64_t function_180003af0(int64_t a1) {
    int64_t v1 = function_180001690(a1); // 0x180003afd
    int64_t * v2 = (int64_t *)(a1 + 32); // 0x180003b02
    int64_t v3 = *v2; // 0x180003b02
    int64_t v4 = v1; // 0x180003b0b
    if (v3 != 0) {
        // 0x180003b0d
        free((int64_t *)v3);
        *v2 = 0;
        v4 = &g47;
    }
    int32_t * v5 = (int32_t *)(a1 + 24); // 0x180003b16
    *v5 = 0;
    int64_t v6 = *v2; // 0x180003b19
    int64_t result = v4; // 0x180003b20
    if (v6 != 0) {
        // 0x180003b22
        free((int64_t *)v6);
        *v2 = 0;
        result = &g47;
    }
    // 0x180003b2b
    *v5 = 0;
    return result;
}

// Address range: 0x180003b40 - 0x180003b9a
int64_t function_180003b40(int64_t a1, int64_t a2, int64_t a3) {
    if (a1 == 0 || a2 == 0) {
        // 0x180003b5b
        return 0;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180003b6d
    uint32_t v2 = *v1; // 0x180003b6d
    int32_t v3 = a3;
    if (v2 + v3 > *(int32_t *)(a1 + 12)) {
        // 0x180003b5b
        return 0;
    }
    // 0x180003b78
    memcpy((int64_t *)a2, (int64_t *)((int64_t)v2 + a1), v3);
    *v1 = *v1 + v3;
    return 1;
}

// Address range: 0x180003ba0 - 0x180003bd1
int64_t function_180003ba0(int64_t a1) {
    if (a1 == 0) {
        // 0x180003bc5
        *(int64_t *)8 = 0;
        return 0;
    }
    int64_t * v1 = (int64_t *)a1; // 0x180003bb1
    free(v1);
    *v1 = (int64_t)((int32_t)&g47 ^ (int32_t)&g47);
    *(int64_t *)(a1 + 8) = (int64_t)((int32_t)&g47 ^ (int32_t)&g47);
    return (int32_t)&g47 ^ (int32_t)&g47;
}

// Address range: 0x180003be0 - 0x180003c26
int64_t function_180003be0(int64_t a1) {
    // 0x180003be0
    *(int64_t *)(a1 + 24) = 0;
    int64_t * v1; // 0x180003be0
    int64_t result; // 0x180003be0
    if (a1 == 0) {
        // 0x180003c03
        *(int64_t *)8 = 0;
        v1 = (int64_t *)8;
    } else {
        int64_t * v2 = (int64_t *)a1;
        free(v2);
        *v2 = 0;
        int64_t * v3 = (int64_t *)(a1 + 8); // 0x180003c06
        *v3 = 0;
        free(v2);
        *v2 = 0;
        v1 = v3;
        result = &g47;
    }
    // 0x180003c17
    *v1 = 0;
    return result;
}

// Address range: 0x180003c30 - 0x180003c72
int64_t function_180003c30(int64_t a1) {
    int64_t * v1; // 0x180003c30
    int64_t result; // 0x180003c30
    if (a1 == 0) {
        // 0x180003c4f
        *(int64_t *)8 = 0;
        v1 = (int64_t *)8;
    } else {
        int64_t * v2 = (int64_t *)a1;
        free(v2);
        *v2 = 0;
        int64_t * v3 = (int64_t *)(a1 + 8); // 0x180003c52
        *v3 = 0;
        free(v2);
        *v2 = 0;
        v1 = v3;
        result = &g47;
    }
    // 0x180003c63
    *v1 = 0;
    return result;
}

// Address range: 0x180003c80 - 0x180003e01
int64_t function_180003c80(int64_t a1) {
    // 0x180003c80
    int64_t v1; // bp-808, 0x180003c80
    int64_t v2 = function_180003a90(a1, &v1); // 0x180003cbf
    int64_t v3 = v2; // 0x180003cce
    int16_t v4 = *(int16_t *)v3; // 0x180003cd0
    *(int16_t *)((int64_t)&g44 - v2 + v3) = v4;
    v3 += 2;
    while (v4 != 0) {
        // 0x180003cd0
        v4 = *(int16_t *)v3;
        *(int16_t *)((int64_t)&g44 - v2 + v3) = v4;
        v3 += 2;
    }
    int64_t v5 = 0; // bp-880, 0x180003ce4
    int64_t v6 = function_180003a90(a1, &v1); // 0x180003cf9
    int64_t v7 = 0; // 0x180003d02
    int64_t v8; // 0x180003c80
    if (v6 != 0) {
        int64_t v9 = function_1800067d0(&v5, v6); // 0x180003d10
        v7 = v5;
        if ((int32_t)v9 == 0) {
            goto lab_0x180003d6d;
        } else {
            int64_t v10 = function_180003a90(a1, &v1); // 0x180003d38
            v8 = v7;
            if (v10 != 0) {
                // 0x180003d47
                function_18001df30();
                v8 = v7;
            }
            goto lab_0x180003dca;
        }
    } else {
        goto lab_0x180003d6d;
    }
  lab_0x180003d6d:;
    int64_t v11 = 0; // bp-904, 0x180003d6d
    int64_t v12 = function_180003a90(a1, &v1); // 0x180003d82
    function_180003e10(&v11, a1, v12);
    v8 = v7;
    if (v11 != 0) {
        // 0x180003da4
        free((int64_t *)v11);
        v11 = 0;
        v8 = v7;
    }
    goto lab_0x180003dca;
  lab_0x180003dca:
    // 0x180003dca
    if (v8 != 0) {
        // 0x180003dcf
        free((int64_t *)v8);
    }
    // 0x180003dd7
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180003e10 - 0x180003f35
int64_t function_180003e10(int64_t * a1, int64_t a2, int64_t a3) {
    // 0x180003e10
    if (a3 == 0) {
        // 0x180003e2e
        return 0;
    }
    if (a1 != NULL) {
        // 0x180003e55
        free(a1);
        *a1 = 0;
    }
    int64_t v1 = (int64_t)a1;
    *(int64_t *)(v1 + 8) = 0;
    struct _IO_FILE * stream = _wfopen((int16_t *)a3, L"rb"); // 0x180003e6b
    if (stream == NULL) {
        // 0x180003e2e
        return 0;
    }
    // 0x180003e79
    fseek(stream, 0, SEEK_END);
    uint32_t curr_file_offset = ftell(stream); // 0x180003e8b
    int32_t * v2 = (int32_t *)(v1 + 12); // 0x180003e91
    *v2 = curr_file_offset;
    if (curr_file_offset == 0) {
        // 0x180003edb
        fclose(stream);
        // 0x180003e2e
        return 0;
    }
    // 0x180003e98
    int64_t v3; // 0x180003e10
    int64_t v4 = function_180023684((int64_t)curr_file_offset, 0, 2, v3); // 0x180003e9a
    *a1 = v4;
    if (v4 == 0) {
        // 0x180003edb
        fclose(stream);
        // 0x180003e2e
        return 0;
    }
    // 0x180003eaa
    fseek(stream, 0, SEEK_SET);
    int32_t nmemb = *v2; // 0x180003eb5
    if (fread((int64_t *)stream, 1, nmemb, stream) != nmemb) {
        // 0x180003ed0
        function_180003ba0(v1);
        // 0x180003edb
        fclose(stream);
        // 0x180003e2e
        return 0;
    }
    // 0x180003ee5
    fclose(stream);
    int64_t v5 = function_180003f40(v1, a2, a3); // 0x180003ef7
    function_180003ba0(v1);
    if ((v5 & 0xfffffffc) == 0) {
        // 0x180003f0e
        if ((int32_t)v5 != 1) {
            // 0x180003e2e
            return v5 & 0xffffffff;
        }
    }
    // 0x180003e2e
    return 1;
}

// Address range: 0x180003f40 - 0x180004f85
int64_t function_180003f40(int64_t a1, int64_t a2, int64_t a3) {
    // 0x180003f40
    if (a1 == 0 || a2 == 0 || a3 == 0) {
        // 0x180004f63
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180003fb3
    uint32_t v2 = *v1; // 0x180003fb3
    uint32_t v3 = v2 + 4; // 0x180003fb7
    int32_t * v4 = (int32_t *)(a1 + 12); // 0x180003fbb
    uint32_t v5 = *v4; // 0x180003fbb
    if (v3 > v5) {
        // 0x180004f63
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180003fc8
    *v1 = v3;
    int32_t v6 = *(int32_t *)((int64_t)v2 + a1); // 0x180003fd0
    int32_t v7 = v6; // bp-2000, 0x180003fd4
    int32_t * v8 = (int32_t *)(a1 + 16); // 0x180003fd9
    int32_t v9 = *v8; // 0x180003fd9
    int32_t v10 = v6; // 0x180003fde
    if (v9 != 0) {
        // 0x180003fe0
        v10 = llvm_bswap_i32(v6);
        v7 = v10;
    }
    if (v2 + 6 > v5) {
        // 0x180004f63
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v11 = *v1; // 0x18000401c
    *v1 = v11 + 2;
    uint32_t v12 = v11 + 4; // 0x18000404c
    if (v12 > v5) {
        // 0x180004f63
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180004058
    int64_t v13; // bp-1800, 0x180003f40
    int64_t v14 = &v13; // 0x180003f44
    int16_t v15 = *(int16_t *)((int64_t)v11 + a1); // 0x180004026
    *v1 = v12;
    int64_t v16; // 0x180003f40
    int64_t v17; // 0x180003f40
    int32_t v18; // 0x180003f40
    int16_t v19; // 0x180003f40
    uint32_t v20; // 0x180003f40
    int64_t dest; // bp-1360, 0x180003f40
    int64_t src; // bp-1880, 0x180003f40
    int64_t v21; // 0x180003f40
    int64_t v22; // 0x180003f40
    int64_t v23; // 0x18000414d
    int32_t v24; // 0x18000499a
    if (v10 != 0x46424347) {
        if (v10 != 0x53455242) {
            int64_t v25 = v14 - 80;
            int64_t v26 = 0; // 0x180004536
            int64_t v27 = 0; // 0x180004536
            if (v10 != 0x4034b50) {
                int16_t v28 = *(int16_t *)(v27 + (int64_t)L"BRES file header ID not found."); // 0x1800045f0
                *(int16_t *)(v27 + v25) = v28;
                v27 += 2;
                while (v28 != 0) {
                    // 0x1800045f0
                    v28 = *(int16_t *)(v27 + (int64_t)L"BRES file header ID not found.");
                    *(int16_t *)(v27 + v25) = v28;
                    v27 += 2;
                }
                // 0x180004602
                wcstombs((char *)&dest, L"BRES file header ID not found.", 260);
                int64_t v29 = a2 + 3912; // 0x18000461a
                int64_t v30 = &src; // 0x180004621
                if (v29 == v30) {
                    // 0x180004f63
                    __security_check_cookie(g17);
                    return &g47;
                }
                int64_t v31 = &dest; // 0x18000462e
                int64_t v32 = v31; // 0x180004646
                char v33 = *(char *)v32; // 0x180004650
                *(char *)(a2 + 0x1150 - v31 + v32) = v33;
                v32++;
                while (v33 != 0) {
                    // 0x180004650
                    v33 = *(char *)v32;
                    *(char *)(a2 + 0x1150 - v31 + v32) = v33;
                    v32++;
                }
                int64_t v34 = v30; // 0x18000466e
                int16_t v35 = *(int16_t *)v34; // 0x180004670
                *(int16_t *)(v29 - v30 + v34) = v35;
                v34 += 2;
                while (v35 != 0) {
                    // 0x180004670
                    v35 = *(int16_t *)v34;
                    *(int16_t *)(v29 - v30 + v34) = v35;
                    v34 += 2;
                }
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            int16_t v36 = *(int16_t *)(v26 + (int64_t)L"BRES file header ID not found.\r\nThis appears to be a PKZip compressed file."); // 0x180004550
            *(int16_t *)(v26 + v25) = v36;
            v26 += 2;
            while (v36 != 0) {
                // 0x180004550
                v36 = *(int16_t *)(v26 + (int64_t)L"BRES file header ID not found.\r\nThis appears to be a PKZip compressed file.");
                *(int16_t *)(v26 + v25) = v36;
                v26 += 2;
            }
            // 0x180004562
            wcstombs((char *)&dest, L"BRES file header ID not found.\r\nThis appears to be a PKZip compressed file.", 260);
            int64_t v37 = a2 + 3912; // 0x18000457a
            int64_t v38 = &src; // 0x180004581
            if (v37 == v38) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            int64_t v39 = &dest; // 0x18000458e
            int64_t v40 = v39; // 0x1800045a6
            char v41 = *(char *)v40; // 0x1800045b0
            *(char *)(a2 + 0x1150 - v39 + v40) = v41;
            v40++;
            while (v41 != 0) {
                // 0x1800045b0
                v41 = *(char *)v40;
                *(char *)(a2 + 0x1150 - v39 + v40) = v41;
                v40++;
            }
            int64_t v42 = v38; // 0x1800045ce
            int16_t v43 = *(int16_t *)v42; // 0x1800045d0
            *(int16_t *)(v37 - v38 + v42) = v43;
            v42 += 2;
            while (v43 != 0) {
                // 0x1800045d0
                v43 = *(int16_t *)v42;
                *(int16_t *)(v37 - v38 + v42) = v43;
                v42 += 2;
            }
            // 0x180004f63
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x180004685
        v19 = v9 == 0 ? v15 : llvm_bswap_i16(v15);
        *v8 = (int32_t)(v19 != -2);
        uint32_t v44 = *v1; // 0x18000469a
        uint32_t v45 = v44 + 4; // 0x18000469d
        if (v45 > v5) {
            // 0x180004f63
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x1800046a9
        *v1 = v45;
        uint32_t v46 = v44 + 8; // 0x1800046fe
        if (v46 > v5) {
            // 0x180004f63
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v47 = *(int32_t *)((int64_t)v44 + a1); // 0x1800046b5
        *v1 = v46;
        uint32_t v48 = v44 + 12; // 0x18000474f
        if (v48 > v5) {
            // 0x180004f63
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000475b
        *v1 = v48;
        uint32_t v49 = v44 + 16; // 0x18000479f
        if (v49 > v5) {
            // 0x180004f63
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x1800047ab
        v20 = v19 == -2 ? v47 : llvm_bswap_i32(v47);
        *v1 = v49;
        uint32_t v50 = v44 + 20;
        if (v20 < 33) {
            if (v50 > v5) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            // 0x180004801
            *v1 = v50;
            v24 = v50;
            if (v44 + 24 > v5) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            goto lab_0x1800049fa;
        } else {
            if (v20 < 64) {
                if (v50 > v5) {
                    // 0x180004f63
                    __security_check_cookie(g17);
                    return &g47;
                }
                // 0x180004954
                *v1 = v50;
                v24 = v44 + 24;
                if (v24 > v5) {
                    // 0x180004f63
                    __security_check_cookie(g17);
                    return &g47;
                }
                // 0x1800049a7
                *v1 = v24;
                if (v44 + 28 > v5) {
                    // 0x180004f63
                    __security_check_cookie(g17);
                    return &g47;
                }
                goto lab_0x1800049fa;
            } else {
                if (v50 > v5) {
                    // 0x180004f63
                    __security_check_cookie(g17);
                    return &g47;
                }
                // 0x18000486c
                *v1 = v50;
                uint32_t v51 = v44 + 24; // 0x180004883
                if (v51 > v5) {
                    // 0x180004f63
                    __security_check_cookie(g17);
                    return &g47;
                }
                // 0x180004890
                *v1 = v51;
                uint32_t v52 = v44 + 28; // 0x1800048af
                if (v52 > v5) {
                    // 0x180004f63
                    __security_check_cookie(g17);
                    return &g47;
                }
                // 0x1800048bc
                *v1 = v52;
                uint32_t v53 = v44 + 32; // 0x1800048d3
                if (v53 > v5) {
                    // 0x180004f63
                    __security_check_cookie(g17);
                    return &g47;
                }
                // 0x1800048e0
                *v1 = v53;
                uint32_t v54 = v44 + 36; // 0x1800048ff
                if (v54 > v5) {
                    // 0x180004f63
                    __security_check_cookie(g17);
                    return &g47;
                }
                // 0x18000490c
                *v1 = v54;
                uint32_t v55 = v44 + 40; // 0x180004922
                if (v55 > v5) {
                    // 0x180004f63
                    __security_check_cookie(g17);
                    return &g47;
                }
                int32_t v56 = *(int32_t *)((int64_t)v53 + a1); // 0x180004918
                int32_t v57 = v19 == -2 ? v56 : llvm_bswap_i32(v56);
                *v1 = v55;
                int32_t v58 = *(int32_t *)((int64_t)v54 + a1); // 0x180004939
                v18 = v19 != -2 ? v19 == -2 ? v58 : llvm_bswap_i32(v58) : v57;
                goto lab_0x180004a3a;
            }
        }
    } else {
        // 0x180004090
        *v1 = 4;
        if (v5 < 8) {
            // 0x180004f63
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x1800040a1
        *v1 = 8;
        int32_t v59 = *(int32_t *)(a1 + 4); // 0x1800040a8
        uint32_t v60 = v9 == 0 ? v59 : llvm_bswap_i32(v59);
        int32_t v61 = 8; // 0x1800040df
        int64_t v62 = 0; // 0x1800040df
        if (v60 != 0) {
            while ((v61 || 4) <= v5) {
                // 0x1800040f0
                *v1 = v61 | 4;
                int32_t v63 = v61 + 8; // 0x1800040f7
                if (v63 > v5) {
                    // break -> 0x180004f63
                    break;
                }
                // 0x180004103
                *v1 = v63;
                int64_t v64 = v62 + 1; // 0x180004107
                v61 = v63;
                v62 = v64 & 0xffffffff;
                if (v60 <= (int32_t)v64) {
                    int32_t v65 = v60 - 1; // 0x18000410e
                    v7 = 0;
                    if (v65 < 1) {
                        goto lab_0x18000444a;
                    } else {
                        // 0x180004130
                        if ((int32_t)function_180001760(&v7, (int64_t)v65) == 0) {
                            // 0x180004130
                            v16 = &v7;
                            goto lab_0x180004500;
                        } else {
                            // 0x180004149
                            v23 = v65;
                            v21 = 0;
                            v22 = 16;
                            v17 = v23;
                            goto lab_0x180004170;
                        }
                    }
                }
            }
            // 0x180004f63
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000410e
        v7 = 0;
        goto lab_0x18000444a;
    }
  lab_0x18000444a:;
    int64_t v66 = &v7;
    function_180001690(v66);
    int64_t v67 = 0; // 0x180004477
    int16_t v68 = *(int16_t *)(v67 + (int64_t)L"Unknown file header: GCBF"); // 0x180004480
    *(int16_t *)(v14 - 80 + v67) = v68;
    v67 += 2;
    while (v68 != 0) {
        // 0x180004480
        v68 = *(int16_t *)(v67 + (int64_t)L"Unknown file header: GCBF");
        *(int16_t *)(v14 - 80 + v67) = v68;
        v67 += 2;
    }
    // 0x180004492
    wcstombs((char *)&dest, L"Unknown file header: GCBF", 260);
    int64_t v69 = a2 + 3912; // 0x1800044aa
    int64_t v70 = &src; // 0x1800044b1
    v16 = v66;
    if (v69 == v70) {
      lab_0x180004500:
        // 0x180004500
        function_180001690(v16);
        // 0x180004f63
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v71 = &dest; // 0x1800044ba
    int64_t v72 = v71; // 0x1800044ce
    char v73 = *(char *)v72; // 0x1800044d0
    *(char *)(a2 + 0x1150 - v71 + v72) = v73;
    v72++;
    while (v73 != 0) {
        // 0x1800044d0
        v73 = *(char *)v72;
        *(char *)(a2 + 0x1150 - v71 + v72) = v73;
        v72++;
    }
    int64_t v74 = v70; // 0x1800044ee
    int16_t v75 = *(int16_t *)v74; // 0x1800044f0
    *(int16_t *)(v69 - v70 + v74) = v75;
    v74 += 2;
    while (v75 != 0) {
        // 0x1800044f0
        v75 = *(int16_t *)v74;
        *(int16_t *)(v69 - v70 + v74) = v75;
        v74 += 2;
    }
    // 0x180004500
    function_180001690(v66);
    // 0x180004f63
    __security_check_cookie(g17);
    return &g47;
  lab_0x1800049fa:
    // 0x1800049fa
    *v1 = v24 + 4;
    int32_t v76 = *(int32_t *)((int64_t)v24 + a1); // 0x180004a04
    v18 = v19 == -2 ? v76 : llvm_bswap_i32(v76);
    goto lab_0x180004a3a;
  lab_0x180004a3a:;
    // 0x180004a3a
    int64_t v77; // bp-312, 0x180003f40
    memset(&v77, 0, 260);
    if (v18 != 0) {
        int64_t v78 = &v77; // 0x180004a42
        int64_t v79 = v18;
        *v1 = v18;
        int64_t v80 = v79 + 4;
        uint32_t v81 = v18 + 4;
        int32_t v82; // 0x180003f40
        if (v20 != 64) {
            // 0x180004ab5
            if (*v4 < (int32_t)v80) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            // 0x180004ac1
            *v1 = v81;
            int32_t v83 = *(int32_t *)(v79 + v78); // 0x180004aca
            v82 = v19 == -2 ? v83 : llvm_bswap_i32(v83);
        } else {
            uint32_t v84 = *v4; // 0x180004a6a
            if (v84 < (int32_t)v80) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            // 0x180004a75
            *v1 = v81;
            uint32_t v85 = v18 + 8;
            if (v85 > v84) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            int32_t v86 = *(int32_t *)(v79 + v78); // 0x180004a7e
            int32_t v87 = v19 == -2 ? v86 : llvm_bswap_i32(v86);
            *v1 = v85;
            int32_t v88 = *(int32_t *)((int64_t)v81 + v78); // 0x180004aa4
            v82 = v19 != -2 ? v19 == -2 ? v88 : llvm_bswap_i32(v88) : v87;
        }
        // 0x180004adb
        function_180005050(a1, (int64_t)v82, &v77);
    }
    int32_t v89 = 0; // bp-1928, 0x180004af4
    int32_t v90 = 0; // bp-1932, 0x180004af7
    int64_t v91 = function_180003a40(&v77, "%d,%d,%d,%d", &v89, &v90); // 0x180004b2e
    int32_t v92 = (int32_t)v91 == 4 ? 0 : *(int32_t *)&g31; // 0x180004b3c
    *(int32_t *)&g31 = v92;
    switch (v92) {
        case 324: {
            goto lab_0x180004c95;
        }
        case 323: {
            goto lab_0x180004c95;
        }
        case 257: {
            goto lab_0x180004c95;
        }
        default: {
            if (v92 < 919) {
                if ((1 << (int64_t)(v92 + 37 & 63) & 0x810080402040281) == 0) {
                    goto lab_0x180004bcd;
                } else {
                    goto lab_0x180004c95;
                }
            } else {
                if (v92 < 812) {
                    if ((1 << (int64_t)(v92 + 4 & 63) & 0x80000001a001) == 0) {
                        goto lab_0x180004bcd;
                    } else {
                        goto lab_0x180004c95;
                    }
                } else {
                    if (v92 == 844) {
                        goto lab_0x180004c95;
                    } else {
                        if (v92 < 991) {
                            if ((1 << (int64_t)(v92 + 30 & 63) & 0x1080481c01014011) == 0) {
                                goto lab_0x180004bcd;
                            } else {
                                goto lab_0x180004c95;
                            }
                        } else {
                            goto lab_0x180004bcd;
                        }
                    }
                }
            }
        }
    }
  lab_0x180004c95:;
    int64_t v93; // 0x180003f40
    if (v20 != 32) {
        if (v20 != 44) {
            if (v20 != 60) {
                if (v20 != 64) {
                    if (v20 != 80) {
                        // 0x180004f63
                        __security_check_cookie(g17);
                        return &g47;
                    }
                    if (v92 != 779 == (v92 != 866)) {
                        // 0x180004f63
                        __security_check_cookie(g17);
                        return &g47;
                    }
                } else {
                    if (v92 < 919) {
                        if ((1 << (int64_t)(v92 + 19 & 63) & 0x20400000001) == 0) {
                            // 0x180004f63
                            __security_check_cookie(g17);
                            return &g47;
                        }
                    } else {
                        if (v92 >= 991) {
                            // 0x180004f63
                            __security_check_cookie(g17);
                            return &g47;
                        }
                        if ((1 << (int64_t)(v92 + 30 & 63) & 0x1080481c01014011) == 0) {
                            // 0x180004f63
                            __security_check_cookie(g17);
                            return &g47;
                        }
                    }
                }
                // 0x180004dfe
                v93 = function_1800156b0(a1, &v7);
                goto lab_0x180004e0f;
            } else {
                if (v92 < 781) {
                    if ((1 << (v92 + 4 & 31) & 0x12001) == 0) {
                        goto lab_0x180004d39;
                    } else {
                        // 0x180004d23
                        v93 = function_180009990(a1, &v7);
                        goto lab_0x180004e0f;
                    }
                } else {
                    goto lab_0x180004d39;
                }
            }
        } else {
            if (v92 >= 903) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            if ((1 << (int64_t)(v92 + 28 & 63) & 0x402010001) == 0) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            // 0x180004cf3
            v93 = function_180010580(a1, &v7);
            goto lab_0x180004e0f;
        }
    } else {
        if (v92 > 324 == (v92 != 257)) {
            // 0x180004f63
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x180004cb5
        v93 = function_180006f90(a1, &v7);
        goto lab_0x180004e0f;
    }
  lab_0x180004bcd:
    // 0x180004bcd
    memset(&src, 0, 520);
    function_180002920(&src, L"BDAE file version not supported: %d.\n", v92, (int64_t)&v90);
    int64_t v94 = 0; // 0x180004bec
    int16_t v95 = *(int16_t *)(v14 - 80 + v94); // 0x180004bf1
    *(int16_t *)(v94 + v14 + 704) = v95;
    v94 += 2;
    while (v95 != 0) {
        // 0x180004bf1
        v95 = *(int16_t *)(v14 - 80 + v94);
        *(int16_t *)(v94 + v14 + 704) = v95;
        v94 += 2;
    }
    // 0x180004c07
    int64_t dest2; // bp-576, 0x180003f40
    wcstombs((char *)&dest2, (int16_t *)&src, 260);
    int64_t v96 = a2 + 3912; // 0x180004c23
    int64_t v97; // bp-1096, 0x180003f40
    int64_t v98 = &v97; // 0x180004c2a
    if (v96 == v98) {
        // 0x180004f63
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v99 = &dest2; // 0x180004c3a
    int64_t v100 = v99; // 0x180004c4e
    char v101 = *(char *)v100; // 0x180004c50
    *(char *)(a2 + 0x1150 - v99 + v100) = v101;
    v100++;
    while (v101 != 0) {
        // 0x180004c50
        v101 = *(char *)v100;
        *(char *)(a2 + 0x1150 - v99 + v100) = v101;
        v100++;
    }
    int64_t v102 = v98; // 0x180004c78
    int16_t v103 = *(int16_t *)v102; // 0x180004c80
    *(int16_t *)(v96 - v98 + v102) = v103;
    v102 += 2;
    while (v103 != 0) {
        // 0x180004c80
        v103 = *(int16_t *)v102;
        *(int16_t *)(v96 - v98 + v102) = v103;
        v102 += 2;
    }
    // 0x180004f63
    __security_check_cookie(g17);
    return &g47;
  lab_0x180004e0f:
    // 0x180004e0f
    if ((int32_t)v93 == 0) {
        // 0x180004f63
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180004e17
    function_1800068e0(&g31);
    function_180006b30(&g31);
    if (v20 == 60) {
        // 0x180004e38
        if (*(int32_t *)&g31 == 859) {
            // 0x180004e48
            if (g38 == NULL) {
                // 0x180004f63
                int64_t v104; // 0x180003f63
                __security_check_cookie(v104);
                return &g47;
            }
            int64_t v105 = (int64_t)g38; // 0x180004e48
            if (*(int32_t *)(v105 + 16) != 0x2bf6 || g37 < 1) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            int128_t v106 = __asm_movss(0x40400000); // 0x180004e7c
            int128_t v107 = __asm_movss(0x3f800000); // 0x180004e84
            int64_t v108 = 0; // 0x180004e8c
            int64_t v109 = 16;
            int64_t v110 = v105; // 0x180004e97
            int64_t v111; // 0x180003f40
            int64_t v112; // 0x180003f40
            int64_t v113; // 0x180004ea0
            int32_t * v114; // 0x180004ea5
            int64_t v115; // 0x180004ebc
            int32_t * v116; // 0x180004ec1
            int64_t v117; // 0x180004ed8
            int128_t v118; // 0x180004edd
            int32_t * v119; // 0x180004ee0
            int64_t v120; // 0x180004ef3
            int128_t v121; // 0x180004ef8
            int32_t * v122; // 0x180004efb
            int64_t v123; // 0x180004f07
            int64_t v124; // 0x180003f40
            if (*(int32_t *)(v109 + v105) > 0) {
                // 0x180004ea0
                v113 = v109 + 8;
                v112 = 0;
                v114 = (int32_t *)(v112 + 24 + *(int64_t *)(v105 + v113));
                *v114 = (int32_t)__asm_movss_8(__asm_mulss(__asm_movss(*v114), v106));
                v115 = *(int64_t *)(v113 + (int64_t)g38);
                v116 = (int32_t *)(v112 + 32 + v115);
                *v116 = (int32_t)__asm_movss_8(__asm_mulss(__asm_movss(*v116), v106));
                v117 = *(int64_t *)(v113 + (int64_t)g38);
                v118 = __asm_movaps(v107);
                v119 = (int32_t *)(v112 + 28 + v117);
                *v119 = (int32_t)__asm_movss_8(__asm_subss(v118, *v119));
                v120 = *(int64_t *)(v113 + (int64_t)g38);
                v121 = __asm_movaps(v107);
                v122 = (int32_t *)(v112 + 36 + v120);
                *v122 = (int32_t)__asm_movss_8(__asm_subss(v121, *v122));
                v123 = 1;
                v124 = (int64_t)g38;
                v112 += 76;
                v111 = v123 & 0xffffffff;
                while (*(int32_t *)(v109 + v124) > (int32_t)v123) {
                    // 0x180004ea0
                    v114 = (int32_t *)(v112 + 24 + *(int64_t *)(v124 + v113));
                    *v114 = (int32_t)__asm_movss_8(__asm_mulss(__asm_movss(*v114), v106));
                    v115 = *(int64_t *)(v113 + (int64_t)g38);
                    v116 = (int32_t *)(v112 + 32 + v115);
                    *v116 = (int32_t)__asm_movss_8(__asm_mulss(__asm_movss(*v116), v106));
                    v117 = *(int64_t *)(v113 + (int64_t)g38);
                    v118 = __asm_movaps(v107);
                    v119 = (int32_t *)(v112 + 28 + v117);
                    *v119 = (int32_t)__asm_movss_8(__asm_subss(v118, *v119));
                    v120 = *(int64_t *)(v113 + (int64_t)g38);
                    v121 = __asm_movaps(v107);
                    v122 = (int32_t *)(v112 + 36 + v120);
                    *v122 = (int32_t)__asm_movss_8(__asm_subss(v121, *v122));
                    v123 = v111 + 1;
                    v124 = (int64_t)g38;
                    v112 += 76;
                    v111 = v123 & 0xffffffff;
                }
                // 0x180004f1b
                v110 = v124;
            }
            int64_t v125 = g37;
            v108 = v108 + 1 & 0xffffffff;
            int64_t v126 = v109 + 760; // 0x180004f2e
            while (v108 < v125) {
                // 0x180004e90
                v109 = v126;
                int64_t v127 = v110;
                v110 = v127;
                int64_t v128 = v125; // 0x180004e97
                if (*(int32_t *)(v109 + v127) > 0) {
                    // 0x180004ea0
                    v113 = v109 + 8;
                    v112 = 0;
                    v114 = (int32_t *)(v112 + 24 + *(int64_t *)(v127 + v113));
                    *v114 = (int32_t)__asm_movss_8(__asm_mulss(__asm_movss(*v114), v106));
                    v115 = *(int64_t *)(v113 + (int64_t)g38);
                    v116 = (int32_t *)(v112 + 32 + v115);
                    *v116 = (int32_t)__asm_movss_8(__asm_mulss(__asm_movss(*v116), v106));
                    v117 = *(int64_t *)(v113 + (int64_t)g38);
                    v118 = __asm_movaps(v107);
                    v119 = (int32_t *)(v112 + 28 + v117);
                    *v119 = (int32_t)__asm_movss_8(__asm_subss(v118, *v119));
                    v120 = *(int64_t *)(v113 + (int64_t)g38);
                    v121 = __asm_movaps(v107);
                    v122 = (int32_t *)(v112 + 36 + v120);
                    *v122 = (int32_t)__asm_movss_8(__asm_subss(v121, *v122));
                    v123 = 1;
                    v124 = (int64_t)g38;
                    v112 += 76;
                    v111 = v123 & 0xffffffff;
                    while (*(int32_t *)(v109 + v124) > (int32_t)v123) {
                        // 0x180004ea0
                        v114 = (int32_t *)(v112 + 24 + *(int64_t *)(v124 + v113));
                        *v114 = (int32_t)__asm_movss_8(__asm_mulss(__asm_movss(*v114), v106));
                        v115 = *(int64_t *)(v113 + (int64_t)g38);
                        v116 = (int32_t *)(v112 + 32 + v115);
                        *v116 = (int32_t)__asm_movss_8(__asm_mulss(__asm_movss(*v116), v106));
                        v117 = *(int64_t *)(v113 + (int64_t)g38);
                        v118 = __asm_movaps(v107);
                        v119 = (int32_t *)(v112 + 28 + v117);
                        *v119 = (int32_t)__asm_movss_8(__asm_subss(v118, *v119));
                        v120 = *(int64_t *)(v113 + (int64_t)g38);
                        v121 = __asm_movaps(v107);
                        v122 = (int32_t *)(v112 + 36 + v120);
                        *v122 = (int32_t)__asm_movss_8(__asm_subss(v121, *v122));
                        v123 = v111 + 1;
                        v124 = (int64_t)g38;
                        v112 += 76;
                        v111 = v123 & 0xffffffff;
                    }
                    // 0x180004f1b
                    v110 = v124;
                    v128 = g37;
                }
                // 0x180004f21
                v125 = v128;
                v108 = v108 + 1 & 0xffffffff;
                v126 = v109 + 760;
            }
        }
    }
    uint32_t v129 = *(int32_t *)&g31 - 764; // 0x180004f3a
    if (v129 >= 17) {
        // 0x180004f63
        __security_check_cookie(g17);
        return &g47;
    }
    if ((1 << (v129 & 31) & 0x1a001) != 0) {
        // 0x180004f4e
        function_180001960(&g31);
    }
    // 0x180004f63
    __security_check_cookie(g17);
    return &g47;
  lab_0x180004d39:
    if (v92 != 779) {
        if (v92 < 860) {
            if ((1 << (int64_t)(v92 + 21 & 63) & 0x1000200000001) == 0) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            // 0x180004d72
            v93 = function_18000c1b0(a1, &v7);
        } else {
            if (v92 != 866) {
                // 0x180004f63
                __security_check_cookie(g17);
                return &g47;
            }
            // 0x180004d90
            v93 = function_18000fbf0(a1, &v7, a3);
        }
    } else {
        // 0x180004d41
        v93 = function_180009990(a1, &v7);
    }
    goto lab_0x180004e0f;
  lab_0x180004170:;
    // 0x180004170
    int64_t v130; // 0x180003f40
    int64_t v131; // 0x180003f40
    uint32_t v132; // 0x18000417c
    uint32_t v133; // 0x180004180
    uint32_t v134; // 0x1800041d3
    int32_t v135; // 0x18000419b
    int32_t v136; // 0x18000419f
    int32_t v137; // 0x18000421e
    int32_t v138; // 0x180004226
    if (v17 == 0) {
        goto lab_0x18000444a;
    } else {
        // 0x18000417c
        v132 = *v4;
        v133 = *v1;
        uint32_t v139 = v133 + 4; // 0x180004183
        if (v139 > v132) {
            goto lab_0x18000444a;
        } else {
            // 0x18000418f
            v131 = v22;
            v130 = v21;
            *v1 = v139;
            v134 = v133 + 8;
            if (v134 > v132) {
                goto lab_0x18000444a;
            } else {
                // 0x1800041e0
                v135 = *(int32_t *)(v17 + (int64_t)v133);
                v136 = *v8;
                *v1 = v134;
                int32_t v140 = *(int32_t *)(v17 + (int64_t)v139); // 0x1800041ea
                v137 = v140;
                v138 = 0;
                if (v136 == 0) {
                    goto lab_0x180004229;
                } else {
                    // 0x1800041f7
                    v137 = llvm_bswap_i32(v140);
                    v138 = *v8;
                    goto lab_0x180004229;
                }
            }
        }
    }
  lab_0x180004229:;
    int32_t v141; // 0x18000426a
    int32_t v142; // 0x18000426c
    uint32_t v143; // 0x180004235
    if (v133 + 12 > v132) {
        goto lab_0x18000444a;
    } else {
        // 0x180004235
        v143 = v133 + 12;
        *v1 = v143;
        int32_t v144 = *(int32_t *)(v17 + (int64_t)v134); // 0x180004241
        v142 = 0;
        v141 = v144;
        if (v138 == 0) {
            goto lab_0x18000426f;
        } else {
            // 0x180004249
            v141 = llvm_bswap_i32(v144);
            v142 = *v8;
            goto lab_0x18000426f;
        }
    }
  lab_0x18000426f:;
    uint32_t v145 = v133 + 16; // 0x18000426f
    if (v145 > v132) {
        goto lab_0x18000444a;
    } else {
        uint32_t v146 = v141;
        *v1 = v145;
        uint32_t v147 = v133 + 20; // 0x1800042bb
        if (v147 > v132) {
            goto lab_0x18000444a;
        } else {
            int32_t v148 = *(int32_t *)(v17 + (int64_t)v143); // 0x180004286
            *v1 = v147;
            uint32_t v149 = v133 + 24; // 0x1800042ce
            if (v149 > v132) {
                goto lab_0x18000444a;
            } else {
                // 0x1800042da
                *v1 = v149;
                uint32_t v150 = v133 + 28; // 0x1800042e1
                if (v150 > v132) {
                    goto lab_0x18000444a;
                } else {
                    // 0x1800042ed
                    *v1 = v150;
                    uint32_t v151 = v133 + 32; // 0x1800042f4
                    if (v151 > v132) {
                        goto lab_0x18000444a;
                    } else {
                        // 0x180004300
                        *v1 = v151;
                        uint32_t v152 = v133 + 36; // 0x180004307
                        if (v152 > v132) {
                            goto lab_0x18000444a;
                        } else {
                            int32_t v153 = v136 == 0 ? v135 : llvm_bswap_i32(v135);
                            *v1 = v152;
                            if (v153 == 0x41646170 == v137 == 0x4c7a3420) {
                                int32_t v154 = v142 == 0 ? v148 : llvm_bswap_i32(v148);
                                *(int32_t *)(v131 - 16) = v146;
                                *(int32_t *)(v131 - 12) = v154;
                                if (v146 == 0) {
                                    goto lab_0x18000436a;
                                } else {
                                    int64_t v155 = v146;
                                    if ((int32_t)function_180001620(24 * v130, v155) == 0) {
                                        goto lab_0x18000444a;
                                    } else {
                                        int64_t v156 = *(int64_t *)v131; // 0x180004356
                                        if ((int32_t)function_180003b40(a1, v156, v155) == 0) {
                                            goto lab_0x18000444a;
                                        } else {
                                            goto lab_0x18000436a;
                                        }
                                    }
                                }
                            } else {
                                goto lab_0x18000444a;
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18000436a:;
    int64_t v157 = v130 + 1; // 0x180004372
    v21 = v157;
    v22 = v131 + 24;
    v17 = v157;
    if (v157 < v23) {
        goto lab_0x180004170;
    } else {
        goto lab_0x18000444a;
    }
}

// Address range: 0x180004f90 - 0x18000504b
int64_t function_180004f90(int64_t a1, int64_t * a2) {
    if (a1 == 0) {
        // 0x180005043
        return 0;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180004fa7
    uint32_t v2 = *v1; // 0x180004fa7
    int32_t v3 = v2 + 4; // 0x180004faa
    int32_t * v4 = (int32_t *)(a1 + 12); // 0x180004fad
    if (v3 > *v4) {
        // 0x180005043
        return 0;
    }
    int64_t v5 = (int64_t)a2;
    *v1 = v3;
    int32_t v6 = *(int32_t *)((int64_t)v2 + a1); // 0x180004fc0
    uint32_t v7 = *(int32_t *)(a1 + 16) == 0 ? v6 : llvm_bswap_i32(v6);
    int64_t v8 = 0; // 0x180004fce
    int32_t v9; // 0x180005025
    int32_t v10; // 0x18000502a
    if (v7 != 0) {
        int32_t v11 = v2 + 5; // 0x180004fde
        int64_t v12 = 0; // 0x180004fe3
        if (v11 > *v4) {
            // 0x180005043
            return 0;
        }
        uint64_t v13 = 0;
        *v1 = v11;
        char v14 = *(char *)((int64_t)v3 + a1); // 0x180004fed
        if (v13 <= 259) {
            // 0x180004ffb
            *(char *)(v13 + v5) = v14;
        }
        while (v14 != 0) {
            int64_t v15 = v12 + 1; // 0x180005003
            v12 = v15 & 0xffffffff;
            if (v7 <= (int32_t)v15) {
                // break -> 0x18000500d
                break;
            }
            int32_t v16 = *v1;
            int32_t v17 = v16 + 1; // 0x180004fde
            if (v17 > *v4) {
                // 0x180005043
                return 0;
            }
            v13++;
            *v1 = v17;
            v14 = *(char *)((int64_t)v16 + a1);
            if (v13 <= 259) {
                // 0x180004ffb
                *(char *)(v13 + v5) = v14;
            }
        }
        // 0x18000500d
        v8 = v12;
        if ((int32_t)v8 >= 260) {
            // 0x180005015
            *(char *)(v5 + 259) = 0;
            // 0x180005025
            v9 = *v1;
            v10 = v9 & -4;
            *v1 = (v9 & 3) == 0 ? v10 : v10 + 4;
            return 1;
        }
    }
    // 0x18000501e
    *(char *)((0x100000000 * v8 >> 32) + v5) = 0;
    // 0x180005025
    v9 = *v1;
    v10 = v9 & -4;
    *v1 = (v9 & 3) == 0 ? v10 : v10 + 4;
    return 1;
}

// Address range: 0x180005050 - 0x1800050fe
int64_t function_180005050(int64_t a1, int64_t a2, int64_t * a3) {
    // 0x180005050
    if (a3 == NULL) {
        // 0x18000505c
        return 0;
    }
    uint32_t v1 = (int32_t)a2; // 0x180005066
    if (v1 <= 100) {
        // 0x18000505c
        return 1;
    }
    int64_t v2 = (int64_t)a3;
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x180005079
    int32_t v4 = *v3; // 0x180005079
    *v3 = v1;
    int64_t v5 = 0; // 0x18000507f
    int64_t v6 = 0; // 0x18000507f
    while (a1 != 0) {
        uint32_t v7 = *v3; // 0x18000508a
        uint32_t v8 = v7 + 1; // 0x18000508d
        if (v8 > *(int32_t *)(a1 + 12)) {
            // break -> 0x18000505c
            break;
        }
        uint64_t v9 = v5;
        *v3 = v8;
        char v10 = *(char *)((int64_t)v7 + a1); // 0x18000509c
        if (v9 <= 259) {
            // 0x1800050aa
            *(char *)(v9 + v2) = v10;
        }
        int64_t v11 = v6 + 1; // 0x1800050ae
        v5 = v9 + 1;
        v6 = v11 & 0xffffffff;
        if (v10 == 0) {
            if ((int32_t)v11 > 259) {
                // 0x1800050da
                *(char *)(v2 + 259) = 0;
                *v3 = v4;
                return 1;
            }
            // 0x1800050c1
            *(char *)((0x100000000 * v11 >> 32) + v2) = 0;
            *v3 = v4;
            return 1;
        }
    }
    // 0x18000505c
    return 0;
}

// Address range: 0x180005100 - 0x180005c76
int64_t function_180005100(int64_t a1, int64_t a2, uint32_t a3, int32_t a4, int64_t a5, int64_t * a6) {
    uint32_t v1 = (int32_t)a5; // 0x180005132
    if (a3 == 0 || v1 == 0) {
        // 0x180005123
        return 1;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x180005138
    *v2 = a4;
    if (a2 != 0) {
        int64_t result = function_180001ed0(a2, (int64_t)a3); // 0x180005147
        if ((int32_t)result == 0) {
            // 0x180005123
            return result;
        }
    }
    int64_t v3 = (int64_t)a6;
    uint32_t v4 = *(int32_t *)a6; // 0x180005176
    int64_t v5 = 0xffffffff; // 0x1800051bc
    int64_t v6 = 0xffffffff; // 0x1800051bc
    int32_t v7 = 0; // 0x1800051bc
    int32_t v8 = 0; // 0x1800051bc
    int32_t v9 = -1; // 0x1800051bc
    int64_t v10 = 0xffffffff; // 0x1800051bc
    int32_t v11 = 0; // 0x1800051bc
    int32_t v12 = -1; // 0x1800051bc
    int32_t v13 = -1; // 0x1800051bc
    int32_t v14 = 0; // 0x1800051bc
    int32_t v15 = 0; // 0x1800051bc
    int64_t v16 = -1; // 0x1800051bc
    int64_t v17 = 0xffffffff; // 0x1800051bc
    int64_t v18 = 0xffffffff; // 0x1800051bc
    int64_t v19 = 0xffffffff; // 0x1800051bc
    int64_t v20 = 0xffffffff; // 0x1800051bc
    if (v4 >= 2) {
        int64_t v21 = v3 + 28;
        int64_t v22 = (int64_t)v4 - 1;
        int64_t v23 = v22; // 0x1800051c2
        int64_t v24 = 0xffffffff;
        int64_t v25 = 0xffffffff;
        int64_t v26 = 0xffffffff;
        int64_t v27 = 0xffffffff;
        int32_t v28 = 0;
        int32_t v29 = 0;
        int32_t v30 = v29; // 0x1800051ca
        int32_t v31 = v28; // 0x1800051ca
        int64_t v32 = v27; // 0x1800051ca
        int64_t v33 = v26; // 0x1800051ca
        int64_t v34 = v25; // 0x1800051ca
        int64_t v35 = v24; // 0x1800051ca
        uint32_t v36; // 0x1800051cc
        int64_t v37; // 0x1800051cc
        if (*(int32_t *)(v21 + 8) == 2) {
            // 0x1800051cc
            v36 = *(int32_t *)v21;
            v30 = v29;
            v31 = v28;
            v32 = v27;
            v33 = v26;
            v34 = v25;
            v35 = v24;
            if (v36 >= 12) {
                // 0x1800051d3
                v37 = v36;
                if ((int32_t)v26 != -1) {
                    // 0x1800051e8
                    v30 = v29;
                    v31 = v28;
                    v32 = v27;
                    v33 = v26;
                    v34 = v25;
                    v35 = v24;
                    if ((int32_t)v25 == -1) {
                        // 0x1800051ee
                        v30 = v29;
                        v31 = *(int32_t *)(v21 - 4);
                        v32 = v27;
                        v33 = v26;
                        v34 = v37;
                        v35 = (int64_t)*(int32_t *)(v21 + 4);
                    }
                } else {
                    // 0x1800051d9
                    v30 = *(int32_t *)(v21 - 4);
                    v31 = v28;
                    v32 = (int64_t)*(int32_t *)(v21 + 4);
                    v33 = v37;
                    v34 = v25;
                    v35 = v24;
                }
            }
        }
        // 0x1800051fc
        v5 = v35;
        int64_t v38 = v34;
        int64_t v39 = v33;
        v6 = v32;
        v7 = v31;
        v8 = v30;
        v23--;
        int64_t v40 = v21 + 16; // 0x180005204
        while (v23 != 0) {
            // 0x1800051c6
            v24 = v5;
            v25 = v38;
            v26 = v39;
            v27 = v6;
            int64_t v41 = v40;
            v28 = v7;
            v29 = v8;
            v30 = v29;
            v31 = v28;
            v32 = v27;
            v33 = v26;
            v34 = v25;
            v35 = v24;
            if (*(int32_t *)(v41 + 8) == 2) {
                // 0x1800051cc
                v36 = *(int32_t *)v41;
                v30 = v29;
                v31 = v28;
                v32 = v27;
                v33 = v26;
                v34 = v25;
                v35 = v24;
                if (v36 >= 12) {
                    // 0x1800051d3
                    v37 = v36;
                    if ((int32_t)v26 != -1) {
                        // 0x1800051e8
                        v30 = v29;
                        v31 = v28;
                        v32 = v27;
                        v33 = v26;
                        v34 = v25;
                        v35 = v24;
                        if ((int32_t)v25 == -1) {
                            // 0x1800051ee
                            v30 = v29;
                            v31 = *(int32_t *)(v41 - 4);
                            v32 = v27;
                            v33 = v26;
                            v34 = v37;
                            v35 = (int64_t)*(int32_t *)(v41 + 4);
                        }
                    } else {
                        // 0x1800051d9
                        v30 = *(int32_t *)(v41 - 4);
                        v31 = v28;
                        v32 = (int64_t)*(int32_t *)(v41 + 4);
                        v33 = v37;
                        v34 = v25;
                        v35 = v24;
                    }
                }
            }
            // 0x1800051fc
            v5 = v35;
            v38 = v34;
            v39 = v33;
            v6 = v32;
            v7 = v31;
            v8 = v30;
            v23--;
            v40 = v41 + 16;
        }
        // 0x18000523b
        v9 = v38;
        int64_t v42 = v22; // 0x180005242
        int64_t v43 = 0xffffffff;
        int64_t v44 = 0xffffffff;
        int64_t v45 = 0xffffffff;
        int64_t v46 = 0xffffffff;
        int64_t v47 = 0xffffffff;
        int64_t v48 = 0xffffffff;
        int32_t v49 = 0;
        int32_t v50 = 0;
        int32_t v51 = -1;
        int32_t v52 = 0;
        int32_t v53 = v52; // 0x18000524a
        int32_t v54 = v51; // 0x18000524a
        int32_t v55 = v50; // 0x18000524a
        int32_t v56 = v49; // 0x18000524a
        int64_t v57 = v48; // 0x18000524a
        int64_t v58 = v47; // 0x18000524a
        int64_t v59 = v46; // 0x18000524a
        int64_t v60 = v45; // 0x18000524a
        int64_t v61 = v44; // 0x18000524a
        int64_t v62 = v43; // 0x18000524a
        uint32_t v63; // 0x18000524c
        int64_t v64; // 0x18000524c
        if (*(int32_t *)(v21 + 8) == 3) {
            // 0x18000524c
            v63 = *(int32_t *)v21;
            v53 = v52;
            v54 = v51;
            v55 = v50;
            v56 = v49;
            v57 = v48;
            v58 = v47;
            v59 = v46;
            v60 = v45;
            v61 = v44;
            v62 = v43;
            if (v63 >= 12) {
                // 0x180005253
                v64 = v63;
                if ((int32_t)v43 != -1) {
                    if ((int32_t)v44 != -1) {
                        // 0x18000527e
                        v53 = v52;
                        v54 = v51;
                        v55 = v50;
                        v56 = v49;
                        v57 = v48;
                        v58 = v47;
                        v59 = v46;
                        v60 = v45;
                        v61 = v44;
                        v62 = v43;
                        if ((int32_t)v47 == -1) {
                            // 0x180005284
                            v53 = v52;
                            v54 = v63;
                            v55 = v50;
                            v56 = *(int32_t *)(v21 - 4);
                            v57 = (int64_t)*(int32_t *)(v21 + 4);
                            v58 = v64;
                            v59 = v46;
                            v60 = v45;
                            v61 = v44;
                            v62 = v43;
                        }
                    } else {
                        // 0x18000526f
                        v53 = v52;
                        v54 = v51;
                        v55 = *(int32_t *)(v21 - 4);
                        v56 = v49;
                        v57 = v48;
                        v58 = v47;
                        v59 = v46;
                        v60 = (int64_t)*(int32_t *)(v21 + 4);
                        v61 = v64;
                        v62 = v43;
                    }
                } else {
                    // 0x180005259
                    v53 = *(int32_t *)(v21 - 4);
                    v54 = v51;
                    v55 = v50;
                    v56 = v49;
                    v57 = v48;
                    v58 = v47;
                    v59 = (int64_t)*(int32_t *)(v21 + 4);
                    v60 = v45;
                    v61 = v44;
                    v62 = v64;
                }
            }
        }
        // 0x180005296
        v20 = v62;
        int64_t v65 = v61;
        v19 = v60;
        v18 = v59;
        v17 = v57;
        v15 = v56;
        v14 = v55;
        v12 = v54;
        v11 = v53;
        v42--;
        int64_t v66 = v21 + 16; // 0x18000529e
        while (v42 != 0) {
            // 0x180005246
            v43 = v20;
            v44 = v65;
            v45 = v19;
            v46 = v18;
            v47 = v58;
            v48 = v17;
            int64_t v67 = v66;
            v49 = v15;
            v50 = v14;
            v51 = v12;
            v52 = v11;
            v53 = v52;
            v54 = v51;
            v55 = v50;
            v56 = v49;
            v57 = v48;
            v58 = v47;
            v59 = v46;
            v60 = v45;
            v61 = v44;
            v62 = v43;
            if (*(int32_t *)(v67 + 8) == 3) {
                // 0x18000524c
                v63 = *(int32_t *)v67;
                v53 = v52;
                v54 = v51;
                v55 = v50;
                v56 = v49;
                v57 = v48;
                v58 = v47;
                v59 = v46;
                v60 = v45;
                v61 = v44;
                v62 = v43;
                if (v63 >= 12) {
                    // 0x180005253
                    v64 = v63;
                    if ((int32_t)v43 != -1) {
                        if ((int32_t)v44 != -1) {
                            // 0x18000527e
                            v53 = v52;
                            v54 = v51;
                            v55 = v50;
                            v56 = v49;
                            v57 = v48;
                            v58 = v47;
                            v59 = v46;
                            v60 = v45;
                            v61 = v44;
                            v62 = v43;
                            if ((int32_t)v47 == -1) {
                                // 0x180005284
                                v53 = v52;
                                v54 = v63;
                                v55 = v50;
                                v56 = *(int32_t *)(v67 - 4);
                                v57 = (int64_t)*(int32_t *)(v67 + 4);
                                v58 = v64;
                                v59 = v46;
                                v60 = v45;
                                v61 = v44;
                                v62 = v43;
                            }
                        } else {
                            // 0x18000526f
                            v53 = v52;
                            v54 = v51;
                            v55 = *(int32_t *)(v67 - 4);
                            v56 = v49;
                            v57 = v48;
                            v58 = v47;
                            v59 = v46;
                            v60 = (int64_t)*(int32_t *)(v67 + 4);
                            v61 = v64;
                            v62 = v43;
                        }
                    } else {
                        // 0x180005259
                        v53 = *(int32_t *)(v67 - 4);
                        v54 = v51;
                        v55 = v50;
                        v56 = v49;
                        v57 = v48;
                        v58 = v47;
                        v59 = (int64_t)*(int32_t *)(v67 + 4);
                        v60 = v45;
                        v61 = v44;
                        v62 = v64;
                    }
                }
            }
            // 0x180005296
            v20 = v62;
            v65 = v61;
            v19 = v60;
            v18 = v59;
            v17 = v57;
            v15 = v56;
            v14 = v55;
            v12 = v54;
            v11 = v53;
            v42--;
            v66 = v67 + 16;
        }
        // 0x1800052a0
        v10 = v39 & 0xffffffff;
        v13 = v65;
        v16 = v12;
    }
    uint32_t v68 = *v2; // 0x1800052af
    uint32_t v69 = *(int32_t *)&g31 - 976; // 0x1800052b2
    bool v70; // 0x180005100
    if (v69 < 15) {
        // 0x1800052c0
        v70 = false;
        if ((1 << (v69 & 31) & 0x4201) == 0) {
            // 0x1800052d1
            v70 = true;
            goto lab_0x1800052de;
        } else {
            goto lab_0x1800052de;
        }
    } else {
        // 0x1800052d1
        v70 = true;
        goto lab_0x1800052de;
    }
  lab_0x180005c21:;
    // 0x180005c21
    uint32_t v71; // 0x180005333
    int32_t v72 = v71 + v1; // 0x180005c25
    int64_t v73; // 0x180005100
    int64_t v74 = v73 + 1; // 0x180005c27
    *v2 = v72;
    int64_t result2 = 1; // 0x180005c31
    int32_t v75 = v72; // 0x180005c31
    int64_t v76; // 0x180005100
    int64_t v77 = v76 + 1; // 0x180005c31
    int64_t v78; // 0x180005100
    int64_t v79 = v78; // 0x180005c31
    int64_t v80 = v74 & 0xffffffff; // 0x180005c31
    if ((int32_t)v74 >= a3) {
        return result2;
    }
    goto lab_0x180005330;
  lab_0x180005692:;
    int64_t v167; // 0x180005100
    int64_t v195; // 0x180005100
    int64_t v131; // bp-240, 0x180005100
    int128_t v120; // 0x1800052e2
    int128_t v123; // 0x1800052ea
    int32_t * v99; // 0x180005100
    int32_t * v102; // 0x180005100
    int32_t v196; // 0x180005100
    int32_t v197; // 0x180005100
    if (v9 < 0) {
        goto lab_0x1800057f8;
    } else {
        int64_t v198 = v167;
        uint32_t v199 = v70 ? v71 + v9 : v7 * (int32_t)v73 + v196;
        *v2 = v199;
        if (v195 != 0x600000000) {
            if (v195 != 0x200000000) {
                if (v195 != 0x700000000) {
                    goto lab_0x1800057f8;
                } else {
                    // 0x18000577d
                    result2 = 0;
                    if (v198 == 0) {
                        // break -> 0x180005123
                        goto lab_0x180005123_15;
                    }
                    uint32_t v200 = *v99; // 0x18000578c
                    uint32_t v201 = v199 + 2; // 0x180005790
                    result2 = 0;
                    if (v201 > v200) {
                        // break -> 0x180005123
                        goto lab_0x180005123_15;
                    }
                    // 0x18000579c
                    *v2 = v201;
                    int32_t v202 = *v102; // 0x1800057a3
                    int16_t v203 = *(int16_t *)(v198 + (int64_t)v199); // 0x1800057ac
                    uint32_t v204 = v199 + 4; // 0x1800057ba
                    result2 = 0;
                    if (v204 > v200) {
                        // break -> 0x180005123
                        goto lab_0x180005123_15;
                    }
                    uint16_t v205 = v202 == 0 ? v203 : llvm_bswap_i16(v203);
                    *v2 = v204;
                    int16_t v206 = *(int16_t *)(v198 + (int64_t)v201); // 0x1800057cf
                    uint16_t v207 = v202 == 0 ? v206 : llvm_bswap_i16(v206);
                    int128_t v208 = function_18001de90((int64_t)v205); // 0x1800057de
                    v131 = 0x100000000 * __asm_movss_8(v208) >> 32;
                    int128_t v209 = function_18001de90((int64_t)v207);
                    __asm_movss_8(v209);
                    goto lab_0x1800057f8;
                }
            } else {
                // 0x1800056e8
                result2 = 0;
                if (v198 == 0) {
                    // break -> 0x180005123
                    goto lab_0x180005123_15;
                }
                uint32_t v210 = *v99; // 0x1800056f7
                uint32_t v211 = v199 + v197; // 0x1800056fb
                result2 = 0;
                if (v211 > v210) {
                    // break -> 0x180005123
                    goto lab_0x180005123_15;
                }
                // 0x180005707
                *v2 = v211;
                int32_t v212 = *v102; // 0x18000570f
                int16_t v213 = *(int16_t *)(v198 + (int64_t)(v211 - 2)); // 0x180005717
                uint32_t v214 = v211 + 2; // 0x180005726
                result2 = 0;
                if (v214 > v210) {
                    // break -> 0x180005123
                    goto lab_0x180005123_15;
                }
                int16_t v215 = v212 == 0 ? v213 : llvm_bswap_i16(v213);
                *v2 = v214;
                int16_t v216 = *(int16_t *)(v198 + (int64_t)v211); // 0x18000573d
                int16_t v217 = v212 == 0 ? v216 : llvm_bswap_i16(v216);
                int128_t v218 = __asm_cvtdq2ps(__asm_movd((int32_t)v215)); // 0x180005752
                int128_t v219 = __asm_cvtdq2ps(__asm_movd((int32_t)v217)); // 0x18000575c
                int128_t v220 = __asm_mulss(v218, v120); // 0x18000575f
                int128_t v221 = __asm_mulss(v219, v120); // 0x180005763
                int128_t v222 = __asm_addss(v220, v123); // 0x180005767
                int128_t v223 = __asm_addss(v221, v123); // 0x18000576b
                v131 = 0x100000000 * __asm_movss_8(v222) >> 32;
                // 0x1800057f2
                __asm_movss_8(v223);
                goto lab_0x1800057f8;
            }
        } else {
            int64_t v224 = function_18001d4e0(a1, &v131); // 0x1800056cc
            result2 = 0;
            if ((int32_t)v224 == 0) {
                // break -> 0x180005123
                goto lab_0x180005123_15;
            }
            goto lab_0x1800057f8;
        }
    }
  lab_0x180005a47:;
    int64_t v93; // 0x180005100
    int64_t v86; // bp-224, 0x180005100
    if (v9 < 0) {
        goto lab_0x180005bad;
    } else {
        int64_t v225 = v93;
        uint32_t v226 = v70 ? v71 + v9 : v7 * (int32_t)v73 + v196;
        *v2 = v226;
        if (v195 != 0x600000000) {
            if (v195 != 0x200000000) {
                if (v195 != 0x700000000) {
                    goto lab_0x180005bad;
                } else {
                    // 0x180005b32
                    result2 = 0;
                    if (v225 == 0) {
                        // break -> 0x180005123
                        goto lab_0x180005123_15;
                    }
                    uint32_t v227 = *v99; // 0x180005b41
                    uint32_t v228 = v226 + 2; // 0x180005b45
                    result2 = 0;
                    if (v228 > v227) {
                        // break -> 0x180005123
                        goto lab_0x180005123_15;
                    }
                    // 0x180005b51
                    *v2 = v228;
                    int32_t v229 = *v102; // 0x180005b58
                    int16_t v230 = *(int16_t *)(v225 + (int64_t)v226); // 0x180005b61
                    uint32_t v231 = v226 + 4; // 0x180005b6f
                    result2 = 0;
                    if (v231 > v227) {
                        // break -> 0x180005123
                        goto lab_0x180005123_15;
                    }
                    uint16_t v232 = v229 == 0 ? v230 : llvm_bswap_i16(v230);
                    *v2 = v231;
                    int16_t v233 = *(int16_t *)(v225 + (int64_t)v228); // 0x180005b84
                    uint16_t v234 = v229 == 0 ? v233 : llvm_bswap_i16(v233);
                    v86 = 0x100000000 * __asm_movss_8(function_18001de90((int64_t)v232)) >> 32;
                    // 0x180005ba7
                    __asm_movss_8(function_18001de90((int64_t)v234));
                    goto lab_0x180005bad;
                }
            } else {
                // 0x180005a9d
                result2 = 0;
                if (v225 == 0) {
                    // break -> 0x180005123
                    goto lab_0x180005123_15;
                }
                uint32_t v235 = *v99; // 0x180005aac
                uint32_t v236 = v226 + v197; // 0x180005ab0
                result2 = 0;
                if (v236 > v235) {
                    // break -> 0x180005123
                    goto lab_0x180005123_15;
                }
                // 0x180005abc
                *v2 = v236;
                int32_t v237 = *v102; // 0x180005ac4
                int16_t v238 = *(int16_t *)(v225 + (int64_t)(v236 - 2)); // 0x180005acc
                uint32_t v239 = v236 + 2; // 0x180005adb
                result2 = 0;
                if (v239 > v235) {
                    // break -> 0x180005123
                    goto lab_0x180005123_15;
                }
                int16_t v240 = v237 == 0 ? v238 : llvm_bswap_i16(v238);
                *v2 = v239;
                int16_t v241 = *(int16_t *)(v225 + (int64_t)v236); // 0x180005af2
                int16_t v242 = v237 == 0 ? v241 : llvm_bswap_i16(v241);
                int128_t v243 = __asm_cvtdq2ps(__asm_movd((int32_t)v240)); // 0x180005b07
                int128_t v244 = __asm_cvtdq2ps(__asm_movd((int32_t)v242)); // 0x180005b11
                int128_t v245 = __asm_mulss(v243, v120); // 0x180005b14
                int128_t v246 = __asm_mulss(v244, v120); // 0x180005b18
                int128_t v247 = __asm_addss(v245, v123); // 0x180005b1c
                int128_t v248 = __asm_addss(v246, v123); // 0x180005b20
                v86 = 0x100000000 * __asm_movss_8(v247) >> 32;
                // 0x180005ba7
                __asm_movss_8(v248);
                goto lab_0x180005bad;
            }
        } else {
            int64_t v249 = function_18001d4e0(a1, &v86); // 0x180005a81
            result2 = 0;
            if ((int32_t)v249 == 0) {
                // break -> 0x180005123
                goto lab_0x180005123_15;
            }
            goto lab_0x180005bad;
        }
    }
  lab_0x1800057f8:
    // 0x1800057f8
    v78 = v10;
    int32_t v151; // 0x180005100
    int64_t v126; // bp-192, 0x180005100
    int64_t v130; // bp-248, 0x180005100
    int64_t * v250; // 0x180005100
    if (a2 != 0) {
        int64_t v251 = *v250; // 0x180005805
        v78 = v10;
        if (v251 != 0) {
            int64_t v252 = 76 * v76; // 0x180005821
            int128_t v253 = __asm_movsd(v126); // 0x180005826
            int128_t v254 = __asm_movsd(v131); // 0x18000582b
            int64_t v255 = __asm_movsd_5(v253); // 0x180005834
            int64_t v256 = v251 + v252;
            *(int64_t *)v256 = v255;
            int128_t v257 = __asm_movsd(v130); // 0x180005839
            *(int32_t *)(v256 + 8) = v151;
            *(int64_t *)(v252 + 24 + *v250) = __asm_movsd_5(v257);
            *(int64_t *)(v252 + 32 + *v250) = __asm_movsd_5(v254);
            v78 = v10;
        }
    }
    goto lab_0x180005c21;
  lab_0x180005bad:
    // 0x180005bad
    v78 = v10;
    int64_t v83; // bp-168, 0x180005100
    int64_t v85; // bp-232, 0x180005100
    if (a2 != 0) {
        int64_t v258 = *v250; // 0x180005bb6
        v78 = v10;
        if (v258 != 0) {
            int64_t v259 = 76 * v76; // 0x180005bce
            int128_t v260 = __asm_movsd(v83); // 0x180005bd3
            int128_t v261 = __asm_movsd(v86); // 0x180005bd8
            int64_t v262 = __asm_movsd_5(v260); // 0x180005be1
            int64_t v263 = v258 + v259;
            *(int64_t *)v263 = v262;
            int128_t v264 = __asm_movsd(v85); // 0x180005be6
            *(int32_t *)(v263 + 8) = 0;
            *(int64_t *)(v259 + 24 + *v250) = __asm_movsd_5(v264);
            *(int64_t *)(v259 + 32 + *v250) = __asm_movsd_5(v261);
            v78 = v10;
        }
    }
    goto lab_0x180005c21;
  lab_0x18000568c:;
    // 0x18000568c
    int128_t v179; // 0x180005100
    __asm_movss_8(v179);
    int64_t v178; // 0x180005100
    v167 = v178;
    goto lab_0x180005692;
  lab_0x180005a41:;
    // 0x180005a41
    int128_t v108; // 0x180005100
    __asm_movss_8(v108);
    int64_t v107; // 0x180005100
    v93 = v107;
    goto lab_0x180005a47;
  lab_0x1800052de:;
    int64_t v140 = v68; // 0x1800052af
    int32_t v134 = *(int32_t *)(v3 + 16); // 0x1800052de
    v120 = __asm_movss(0x37800080);
    v123 = __asm_movss(0x3f000000);
    int64_t v97 = 0x100000000 * v6;
    v195 = 0x100000000 * v5;
    v99 = (int32_t *)(a1 + 12);
    v102 = (int32_t *)(a1 + 16);
    uint32_t v88 = (int32_t)v20;
    int32_t v90 = v68 + v88;
    int32_t v158 = v68 + v13;
    int32_t v163 = v68 + v12;
    v196 = v68 + v9;
    v197 = v5;
    v250 = (int64_t *)(a2 + 24);
    v75 = *v2;
    v77 = 0;
    v79 = v10;
    v80 = 0;
    while (true) {
      lab_0x180005330:
        // 0x180005330
        v73 = v80;
        int64_t v81 = v79;
        v76 = v77;
        v71 = v75;
        int64_t v82 = v71; // 0x180005333
        if (v1 != 8) {
            // 0x18000585c
            v78 = v81;
            if (v1 < 12) {
                goto lab_0x180005c21;
            } else {
                // 0x180005865
                v83 = 0;
                int64_t v84 = 0; // bp-104, 0x18000587b
                v85 = 0;
                v86 = 0;
                int64_t v87 = function_18001d5c0(a1, &v83); // 0x18000589c
                result2 = 0;
                if ((int32_t)v87 == 0) {
                    // break -> 0x180005123
                    break;
                }
                if (v88 >= 0) {
                    int64_t v89; // 0x180005100
                    if (v70) {
                        // 0x1800058c6
                        v89 = v20 + v82 & 0xffffffff;
                    } else {
                        // 0x1800058b7
                        v89 = v11 * (int32_t)v73 + v90;
                    }
                    // 0x1800058ca
                    *v2 = (int32_t)v89;
                    if ((v18 & 0xffffffff) == 6) {
                        int64_t v91 = function_18001d5c0(a1, &v84); // 0x1800058dc
                        result2 = 0;
                        if ((int32_t)v91 == 0) {
                            // break -> 0x180005123
                            break;
                        }
                    }
                }
                int32_t v92 = v81; // 0x1800058e9
                v93 = a1;
                if (v92 < 0) {
                    goto lab_0x180005a47;
                } else {
                    int64_t v94; // 0x180005100
                    if (v70) {
                        // 0x180005906
                        v94 = v81 + v82 & 0xffffffff;
                    } else {
                        // 0x1800058f7
                        v94 = v68 + v92 + v8 * (int32_t)v73;
                    }
                    int64_t v95 = v94;
                    int32_t v96 = v95; // 0x18000590a
                    *v2 = v96;
                    if (v97 != 0x600000000) {
                        if (v97 != 0x200000000) {
                            // 0x1800059c6
                            v93 = a1;
                            if (v97 != 0x700000000) {
                                goto lab_0x180005a47;
                            } else {
                                // 0x1800059cc
                                result2 = 0;
                                if (a1 == 0) {
                                    // break -> 0x180005123
                                    break;
                                }
                                uint32_t v98 = *v99; // 0x1800059db
                                uint32_t v100 = v96 + 2; // 0x1800059df
                                result2 = 0;
                                if (v100 > v98) {
                                    // break -> 0x180005123
                                    break;
                                }
                                // 0x1800059eb
                                *v2 = v100;
                                int32_t v101 = *v102; // 0x1800059f2
                                int16_t v103 = *(int16_t *)(v95 + a1); // 0x1800059fb
                                uint32_t v104 = v96 + 4; // 0x180005a09
                                result2 = 0;
                                if (v104 > v98) {
                                    // break -> 0x180005123
                                    break;
                                }
                                uint16_t v105 = v101 == 0 ? v103 : llvm_bswap_i16(v103);
                                *v2 = v104;
                                int16_t v106 = *(int16_t *)((int64_t)v100 + a1); // 0x180005a1e
                                v107 = v101 == 0 ? v106 : llvm_bswap_i16(v106);
                                v85 = 0x100000000 * __asm_movss_8(function_18001de90((int64_t)v105)) >> 32;
                                v108 = function_18001de90(v107);
                                goto lab_0x180005a41;
                            }
                        } else {
                            // 0x180005937
                            result2 = 0;
                            if (a1 == 0) {
                                // break -> 0x180005123
                                break;
                            }
                            uint32_t v109 = *v99; // 0x180005946
                            uint32_t v110 = v96 + 2; // 0x18000594a
                            result2 = 0;
                            if (v110 > v109) {
                                // break -> 0x180005123
                                break;
                            }
                            // 0x180005956
                            *v2 = v110;
                            int32_t v111 = *v102; // 0x18000595e
                            int16_t v112 = *(int16_t *)(v95 + a1); // 0x180005966
                            uint32_t v113 = v96 + 4; // 0x180005975
                            result2 = 0;
                            if (v113 > v109) {
                                // break -> 0x180005123
                                break;
                            }
                            int16_t v114 = v111 == 0 ? v112 : llvm_bswap_i16(v112);
                            *v2 = v113;
                            int16_t v115 = *(int16_t *)((int64_t)v110 + a1); // 0x18000598c
                            int16_t v116 = v111 == 0 ? v115 : llvm_bswap_i16(v115);
                            int128_t v117 = __asm_cvtdq2ps(__asm_movd((int32_t)v114)); // 0x1800059a1
                            int128_t v118 = __asm_cvtdq2ps(__asm_movd((int32_t)v116)); // 0x1800059ab
                            int128_t v119 = __asm_mulss(v117, v120); // 0x1800059ae
                            int128_t v121 = __asm_mulss(v118, v120); // 0x1800059b2
                            int128_t v122 = __asm_addss(v119, v123); // 0x1800059b6
                            int128_t v124 = __asm_addss(v121, v123); // 0x1800059ba
                            v85 = 0x100000000 * __asm_movss_8(v122) >> 32;
                            v108 = v124;
                            v107 = a1;
                            goto lab_0x180005a41;
                        }
                    } else {
                        int64_t v125 = function_18001d4e0(a1, &v85); // 0x18000591b
                        result2 = 0;
                        v93 = a1;
                        if ((int32_t)v125 == 0) {
                            // break -> 0x180005123
                            break;
                        }
                        goto lab_0x180005a47;
                    }
                }
            }
        } else {
            // 0x18000533f
            v126 = 0;
            int64_t v127 = 0; // bp-152, 0x18000534e
            int64_t v128 = 0; // bp-136, 0x18000535d
            int64_t v129 = 0; // bp-120, 0x18000536c
            v130 = 0;
            v131 = 0;
            int64_t v132; // 0x180005100
            int32_t v133; // 0x180005100
            if (v134 != 6) {
                // 0x1800053ae
                v133 = 0;
                v132 = v81;
                if (v134 == 7) {
                    // 0x1800053b8
                    result2 = 0;
                    if (v68 == 0) {
                        // break -> 0x180005123
                        break;
                    }
                    uint32_t v135 = *v99; // 0x1800053c0
                    result2 = 0;
                    if (v135 < v71 + 2) {
                        // break -> 0x180005123
                        break;
                    }
                    uint32_t v136 = *v2; // 0x1800053cc
                    uint32_t v137 = v136 + 2; // 0x1800053cc
                    *v2 = v137;
                    int32_t v138 = *v102; // 0x1800053d3
                    int16_t v139 = *(int16_t *)((int64_t)v136 + v140); // 0x1800053d9
                    uint32_t v141 = v136 + 4; // 0x1800053e7
                    result2 = 0;
                    if (v141 > v135) {
                        // break -> 0x180005123
                        break;
                    }
                    // 0x1800053ef
                    *v2 = v141;
                    int16_t v142 = *(int16_t *)((int64_t)v137 + v140); // 0x1800053f8
                    uint32_t v143 = v136 + 6;
                    result2 = 0;
                    if (v143 > v135) {
                        // break -> 0x180005123
                        break;
                    }
                    // 0x18000540e
                    *v2 = v143;
                    int16_t v144 = *(int16_t *)((int64_t)v141 + v140); // 0x180005418
                    uint32_t v145 = v136 + 8; // 0x180005426
                    result2 = 0;
                    if (v145 > v135) {
                        // break -> 0x180005123
                        break;
                    }
                    uint16_t v146 = v138 == 0 ? v139 : llvm_bswap_i16(v139);
                    uint16_t v147 = v138 == 0 ? v142 : llvm_bswap_i16(v142);
                    uint16_t v148 = v138 == 0 ? v144 : llvm_bswap_i16(v144);
                    *v2 = v145;
                    v126 = 0x100000000 * __asm_movss_8(function_18001de90((int64_t)v146)) >> 32;
                    __asm_movss_8(function_18001de90((int64_t)v147));
                    v133 = __asm_movss_8(function_18001de90((int64_t)v148));
                    v132 = v10;
                }
            } else {
                int64_t v149 = function_18001d5c0(a1, &v126); // 0x18000539a
                result2 = 0;
                v133 = 0;
                v132 = v81;
                if ((int32_t)v149 == 0) {
                    // break -> 0x180005123
                    break;
                }
            }
            int64_t v150 = v132;
            v151 = v133;
            int64_t v152 = v140; // 0x180005478
            if (v88 >= 0) {
                int64_t v153; // 0x180005100
                if (v70) {
                    // 0x18000548e
                    v153 = v20 + v82 & 0xffffffff;
                } else {
                    // 0x18000547f
                    v153 = v11 * (int32_t)v73 + v90;
                }
                // 0x180005492
                *v2 = (int32_t)v153;
                v152 = v140;
                if ((v18 & 0xffffffff) == 6) {
                    int64_t v154 = function_18001d5c0(a1, &v127); // 0x1800054a2
                    result2 = 0;
                    v152 = a1;
                    if ((int32_t)v154 == 0) {
                        // break -> 0x180005123
                        break;
                    }
                }
            }
            int64_t v155 = v152;
            int64_t v156 = v155; // 0x1800054bb
            if (v13 >= 0) {
                int32_t v157 = v70 ? v71 + v13 : v158 + v14 * (int32_t)v73;
                *v2 = v157;
                v156 = v155;
                if ((v19 & 0xffffffff) == 6) {
                    int64_t v159 = function_18001d5c0(a1, &v128); // 0x1800054e8
                    result2 = 0;
                    v156 = a1;
                    if ((int32_t)v159 == 0) {
                        // break -> 0x180005123
                        break;
                    }
                }
            }
            int64_t v160 = v156;
            int64_t v161 = v160; // 0x1800054fa
            if (v16 >= 0) {
                int32_t v162 = v70 ? v71 + v12 : v163 + v15 * (int32_t)v73;
                *v2 = v162;
                v161 = v160;
                if ((v17 & 0xffffffff) == 6) {
                    int64_t v164 = function_18001d5c0(a1, &v129); // 0x180005527
                    result2 = 0;
                    v161 = a1;
                    if ((int32_t)v164 == 0) {
                        // break -> 0x180005123
                        break;
                    }
                }
            }
            int64_t v165 = v161;
            int32_t v166 = v150; // 0x180005534
            v167 = v165;
            if (v166 < 0) {
                goto lab_0x180005692;
            } else {
                int64_t v168; // 0x180005100
                if (v70) {
                    // 0x180005551
                    v168 = v150 + v82 & 0xffffffff;
                } else {
                    // 0x180005542
                    v168 = v8 * (int32_t)v73 + v68 + v166;
                }
                int64_t v169 = v168;
                int32_t v170 = v169; // 0x180005555
                *v2 = v170;
                if (v97 != 0x600000000) {
                    if (v97 != 0x200000000) {
                        // 0x180005611
                        v167 = v165;
                        if (v97 != 0x700000000) {
                            goto lab_0x180005692;
                        } else {
                            // 0x180005617
                            result2 = 0;
                            if (v165 == 0) {
                                // break -> 0x180005123
                                break;
                            }
                            uint32_t v171 = *v99; // 0x180005626
                            uint32_t v172 = v170 + 2; // 0x18000562a
                            result2 = 0;
                            if (v172 > v171) {
                                // break -> 0x180005123
                                break;
                            }
                            // 0x180005636
                            *v2 = v172;
                            int32_t v173 = *v102; // 0x18000563d
                            int16_t v174 = *(int16_t *)(v169 + v165); // 0x180005646
                            uint32_t v175 = v170 + 4; // 0x180005654
                            result2 = 0;
                            if (v175 > v171) {
                                // break -> 0x180005123
                                break;
                            }
                            uint16_t v176 = v173 == 0 ? v174 : llvm_bswap_i16(v174);
                            *v2 = v175;
                            int16_t v177 = *(int16_t *)(v165 + (int64_t)v172); // 0x180005669
                            v178 = v173 == 0 ? v177 : llvm_bswap_i16(v177);
                            v130 = 0x100000000 * __asm_movss_8(function_18001de90((int64_t)v176)) >> 32;
                            v179 = function_18001de90(v178);
                            goto lab_0x18000568c;
                        }
                    } else {
                        // 0x180005582
                        result2 = 0;
                        if (v165 == 0) {
                            // break -> 0x180005123
                            break;
                        }
                        uint32_t v180 = *v99; // 0x180005591
                        uint32_t v181 = v170 + 2; // 0x180005595
                        result2 = 0;
                        if (v181 > v180) {
                            // break -> 0x180005123
                            break;
                        }
                        // 0x1800055a1
                        *v2 = v181;
                        int32_t v182 = *v102; // 0x1800055a9
                        int16_t v183 = *(int16_t *)(v169 + v165); // 0x1800055b1
                        uint32_t v184 = v170 + 4; // 0x1800055c0
                        result2 = 0;
                        if (v184 > v180) {
                            // break -> 0x180005123
                            break;
                        }
                        int16_t v185 = v182 == 0 ? v183 : llvm_bswap_i16(v183);
                        *v2 = v184;
                        int16_t v186 = *(int16_t *)(v165 + (int64_t)v181); // 0x1800055d7
                        int16_t v187 = v182 == 0 ? v186 : llvm_bswap_i16(v186);
                        int128_t v188 = __asm_cvtdq2ps(__asm_movd((int32_t)v185)); // 0x1800055ec
                        int128_t v189 = __asm_cvtdq2ps(__asm_movd((int32_t)v187)); // 0x1800055f6
                        int128_t v190 = __asm_mulss(v188, v120); // 0x1800055f9
                        int128_t v191 = __asm_mulss(v189, v120); // 0x1800055fd
                        int128_t v192 = __asm_addss(v190, v123); // 0x180005601
                        int128_t v193 = __asm_addss(v191, v123); // 0x180005605
                        v130 = 0x100000000 * __asm_movss_8(v192) >> 32;
                        v179 = v193;
                        v178 = v165;
                        goto lab_0x18000568c;
                    }
                } else {
                    int64_t v194 = function_18001d4e0(a1, &v130); // 0x180005566
                    result2 = 0;
                    v167 = a1;
                    if ((int32_t)v194 == 0) {
                        // break -> 0x180005123
                        break;
                    }
                    goto lab_0x180005692;
                }
            }
        }
    }
  lab_0x180005123_15:
    // 0x180005123
    return result2;
}

// Address range: 0x180005c80 - 0x18000624a
int64_t function_180005c80(int64_t a1, int64_t a2, uint32_t a3, int32_t a4, int64_t a5, int64_t * a6, int64_t a7) {
    int64_t v1 = 0x100000000 * a5 >> 32;
    int64_t v2 = 0x100000000 * a7 >> 32;
    int64_t v3 = v2;
    uint32_t v4 = (int32_t)v1;
    if (v4 == 0 || a3 == 0 || a4 == 0 || (int32_t)v2 == 0) {
        // 0x18000622f
        return 1;
    }
    int32_t * v5 = (int32_t *)(a1 + 8); // 0x180005cde
    *v5 = a4;
    if (a1 == 0) {
        // 0x18000622f
        return 0;
    }
    uint32_t v6 = *(int32_t *)(a1 + 12); // 0x180005cee
    if (v6 < a4 + 4) {
        // 0x18000622f
        return 0;
    }
    int64_t v7 = a4;
    uint32_t v8 = *(int32_t *)((v7 & 0xffffffff) + a1); // 0x180005d02
    int64_t v9 = v8; // 0x180005d02
    int32_t v10 = *(int32_t *)(a1 + 16); // 0x180005d06
    int64_t v11 = a2; // 0x180005d0b
    int64_t v12 = v9; // 0x180005d0b
    if (v10 != 0) {
        int64_t v13 = 0x1000000 * v9; // 0x180005d0f
        v11 = v13 & 0xff000000;
        v12 = v8 / 256 & 0xff00 | v8 / 0x1000000 | 256 * v8 & 0xff0000 | (int32_t)v13;
    }
    int64_t v14 = v11; // 0x180005d36
    int64_t v15 = v2 & 0xffffffff; // 0x180005d36
    if (v12 == 0x41646170) {
        // 0x180005d3c
        *v5 = a4 + 8;
        int64_t v16 = v7 + 12; // 0x180005d45
        uint32_t v17 = (int32_t)v16; // 0x180005d49
        if (v6 < v17) {
            // 0x18000622f
            return 0;
        }
        // 0x180005d52
        *v5 = v17;
        uint32_t v18 = *(int32_t *)((v7 + 8 & 0xffffffff) + a1); // 0x180005d5b
        int64_t v19 = v18; // 0x180005d5b
        v14 = v11;
        v15 = v19;
        if (v10 != 0) {
            int64_t v20 = 0x1000000 * v19; // 0x180005d65
            v14 = v20 & 0xff000000;
            v15 = v18 / 256 & 0xff00 | v18 / 0x1000000 | 256 * v18 & 0xff0000 | (int32_t)v20;
        }
        int32_t v21 = v16;
        uint32_t v22 = v21 + 4;
        if (v6 < v22) {
            // 0x18000622f
            return 0;
        }
        // 0x180005d93
        *v5 = v22;
        uint32_t v23 = v21 + 8; // 0x180005d9c
        if (v6 < v23) {
            // 0x18000622f
            return 0;
        }
        // 0x180005da5
        *v5 = v23;
        uint32_t v24 = v21 + 12; // 0x180005dae
        if (v6 < v24) {
            // 0x18000622f
            return 0;
        }
        // 0x180005db7
        *v5 = v24;
        uint32_t v25 = v21 + 16;
        if (v6 < v25) {
            // 0x18000622f
            return 0;
        }
        // 0x180005dc9
        *v5 = v25;
        uint32_t v26 = v21 + 20; // 0x180005dd2
        if (v6 < v26) {
            // 0x18000622f
            return 0;
        }
        // 0x180005ddb
        *v5 = v26;
        if (v21 + 24 > v6) {
            // 0x18000622f
            return 0;
        }
        // 0x180005ded
        *v5 = a4 + 36;
    }
    int64_t v27 = v15 & 0xffffffff;
    int64_t v28 = 0; // 0x180005e02
    if ((int32_t)v15 != 0) {
        // 0x180005e04
        v28 = function_180023684(v27, v14, (int64_t)v6, v7);
        if (v28 == 0) {
            // 0x18000622f
            return 0;
        }
    }
    // 0x180005e1b
    if ((int32_t)function_180003b40(a1, v28, v27) == 0) {
        // 0x180006225
        free((int64_t *)v28);
        // 0x18000622f
        return 0;
    }
    int32_t v29 = v4 * a3; // 0x180005e34
    int64_t v30 = v29; // 0x180005e34
    v3 = v29;
    int64_t v31; // 0x180005c80
    int64_t v32; // 0x180005c80
    int64_t v33; // bp-152, 0x180005c80
    if (v12 != 0x41646170) {
        // 0x180005e92
        if (v28 == 0) {
            // 0x18000622f
            return 0;
        }
        if (v29 == 0 || (int32_t)v15 == 0) {
            // 0x180006225
            free((int64_t *)v28);
            // 0x18000622f
            return 0;
        }
        int64_t v34 = function_180023684(v30, v28, v27, v7); // 0x180005eae
        if (v34 == 0) {
            // 0x180006225
            free((int64_t *)v28);
            // 0x18000622f
            return 0;
        }
        int64_t * v35 = (int64_t *)v34; // 0x180005ec7
        memset(v35, 0, v29);
        v33 = 0x100000000 * v15 >> 32;
        int64_t v36 = function_18001e550(v34, (int32_t *)&v3, v28, (int32_t *)&v33); // 0x180005edd
        if ((int32_t)v3 == 0) {
            // 0x18000621d
            free(v35);
            // 0x180006225
            free((int64_t *)v28);
            // 0x18000622f
            return 0;
        }
        // 0x180005eed
        v32 = v34;
        v31 = v3 & 0xffffffff;
        if ((int32_t)v36 != 0) {
            // 0x18000621d
            free(v35);
            // 0x180006225
            free((int64_t *)v28);
            // 0x18000622f
            return 0;
        }
    } else {
        // 0x180005e43
        if (v28 == 0) {
            // 0x18000622f
            return 0;
        }
        if (v29 == 0 || (int32_t)v15 == 0) {
            // 0x180006225
            free((int64_t *)v28);
            // 0x18000622f
            return 0;
        }
        int64_t v37 = function_180023684(v30, v28, v27, v7); // 0x180005e61
        if (v37 == 0) {
            // 0x180006225
            free((int64_t *)v28);
            // 0x18000622f
            return 0;
        }
        // 0x180005e72
        memset((int64_t *)v37, 0, v29);
        function_180021580(v28, v37, v27, v30);
        v32 = v37;
        v31 = v30;
    }
    int64_t v38 = v32; // bp-144, 0x180005f02
    if (a2 != 0) {
        // 0x180005f19
        if ((int32_t)function_180001ed0(a2, (int64_t)a3) == 0) {
          lab_0x18000620d_4:
            // 0x18000620d
            free((int64_t *)v28);
            // 0x18000622f
            return 1;
        }
    }
    uint32_t v39 = *(int32_t *)a6; // 0x180005f3b
    int64_t v40 = 0xffffffff; // 0x180005f3f
    int64_t v41 = 0xffffffff; // 0x180005f3f
    int64_t v42 = 0xffffffff; // 0x180005f3f
    int64_t v43 = 0xffffffff; // 0x180005f3f
    if (v39 >= 1) {
        int64_t v44 = v39; // 0x180005f45
        int64_t v45 = 0xffffffff;
        int64_t v46 = 0xffffffff;
        int64_t v47 = 0xffffffff;
        int64_t v48 = 0xffffffff;
        int64_t v49 = (int64_t)a6 + 12;
        int64_t v50 = v48; // 0x180005f4b
        int64_t v51 = v47; // 0x180005f4b
        int64_t v52 = v46; // 0x180005f4b
        int64_t v53 = v45; // 0x180005f4b
        uint32_t v54; // 0x180005f4d
        int64_t v55; // 0x180005f4d
        if (*(int32_t *)(v49 + 8) == 2) {
            // 0x180005f4d
            v54 = *(int32_t *)v49;
            v50 = v48;
            v51 = v47;
            v52 = v46;
            v53 = v45;
            if (v54 >= 12) {
                // 0x180005f54
                v55 = v54;
                if ((int32_t)v48 != -1) {
                    // 0x180005f61
                    v50 = v48;
                    v51 = v47;
                    v52 = v46;
                    v53 = v45;
                    if ((int32_t)v45 == -1) {
                        // 0x180005f67
                        v50 = v48;
                        v51 = v47;
                        v52 = (int64_t)*(int32_t *)(v49 + 4);
                        v53 = v55;
                    }
                } else {
                    // 0x180005f59
                    v50 = v55;
                    v51 = (int64_t)*(int32_t *)(v49 + 4);
                    v52 = v46;
                    v53 = v45;
                }
            }
        }
        int64_t v56 = v53;
        int64_t v57 = v52;
        int64_t v58 = v51;
        int64_t v59 = v50;
        v44--;
        int64_t v60 = v49 + 16; // 0x180005f76
        v40 = v59;
        v41 = v58;
        v42 = v57;
        v43 = v56;
        while (v44 != 0) {
            // 0x180005f47
            v45 = v56;
            v46 = v57;
            v47 = v58;
            v48 = v59;
            v49 = v60;
            v50 = v48;
            v51 = v47;
            v52 = v46;
            v53 = v45;
            if (*(int32_t *)(v49 + 8) == 2) {
                // 0x180005f4d
                v54 = *(int32_t *)v49;
                v50 = v48;
                v51 = v47;
                v52 = v46;
                v53 = v45;
                if (v54 >= 12) {
                    // 0x180005f54
                    v55 = v54;
                    if ((int32_t)v48 != -1) {
                        // 0x180005f61
                        v50 = v48;
                        v51 = v47;
                        v52 = v46;
                        v53 = v45;
                        if ((int32_t)v45 == -1) {
                            // 0x180005f67
                            v50 = v48;
                            v51 = v47;
                            v52 = (int64_t)*(int32_t *)(v49 + 4);
                            v53 = v55;
                        }
                    } else {
                        // 0x180005f59
                        v50 = v55;
                        v51 = (int64_t)*(int32_t *)(v49 + 4);
                        v52 = v46;
                        v53 = v45;
                    }
                }
            }
            // 0x180005f6e
            v56 = v53;
            v57 = v52;
            v58 = v51;
            v59 = v50;
            v44--;
            v60 = v49 + 16;
            v40 = v59;
            v41 = v58;
            v42 = v57;
            v43 = v56;
        }
    }
    int64_t v61 = 0x100000000 * v41;
    int64_t v62 = 0x100000000 * v42;
    int128_t v63 = __asm_movss(0x37800080); // 0x180005f97
    int128_t v64 = __asm_movss(0x3f000000); // 0x180005f9f
    int64_t v65 = &v38;
    uint32_t v66 = (int32_t)v31;
    int64_t * v67 = (int64_t *)(a2 + 24);
    int32_t v68 = 0; // 0x180005fad
    int64_t v69 = 0; // 0x180005fad
    int64_t v70 = 0; // 0x180005fad
    int64_t v71 = 0; // 0x180005fad
    int64_t v72; // 0x180005c80
    int32_t v73; // 0x180005c80
    int64_t v74; // 0x180005c80
    int64_t v75; // bp-120, 0x180005c80
    int32_t v76; // 0x180005c80
    int64_t v77; // bp-96, 0x180005c80
    while (true) {
      lab_0x180005fb0:
        // 0x180005fb0
        v72 = v71;
        v74 = v69;
        if (v4 < 12) {
            goto lab_0x1800061f2;
        } else {
            // 0x180005fb9
            v77 = 0;
            v33 = 0;
            v75 = 0;
            if ((int32_t)function_18001d5c0(v65, &v77) == 0) {
                // break -> 0x18000620d
                break;
            }
            // 0x180005fed
            v76 = v68;
            if ((int32_t)v40 < 0) {
                goto lab_0x1800060d0;
            } else {
                // 0x180005ff6
                *v5 = (int32_t)(v72 + v40);
                if (v61 != 0x600000000) {
                    if (v61 != 0x200000000) {
                        goto lab_0x1800060d0;
                    } else {
                        // 0x180006029
                        if (v38 == 0) {
                            // break -> 0x18000620d
                            break;
                        }
                        uint32_t v78 = v76 + (int32_t)v41; // 0x18000603a
                        if (v78 > v66) {
                            // break -> 0x18000620d
                            break;
                        }
                        int32_t v79 = v78 + 2; // 0x18000606b
                        if (v79 > v66) {
                            // break -> 0x18000620d
                            break;
                        }
                        int128_t v80 = __asm_movd((int32_t)*(int16_t *)(v38 + (int64_t)(v78 - 2))); // 0x18000609e
                        int128_t v81 = __asm_mulss(__asm_cvtdq2ps(v80), v63); // 0x1800060a5
                        int128_t v82 = __asm_movd((int32_t)*(int16_t *)(v38 + (int64_t)v78)); // 0x1800060ad
                        int128_t v83 = __asm_mulss(__asm_cvtdq2ps(v82), v63); // 0x1800060b4
                        v33 = 0x100000000 * __asm_movss_8(__asm_addss(v81, v64)) >> 32;
                        __asm_movss_8(__asm_addss(v83, v64));
                        v73 = v79;
                        goto lab_0x1800060df;
                    }
                } else {
                    // 0x180006005
                    if ((int32_t)function_18001d4e0(v65, &v33) == 0) {
                        // break -> 0x18000620d
                        break;
                    }
                    goto lab_0x1800060d0;
                }
            }
        }
    }
    // 0x18000620d
    free((int64_t *)v28);
    // 0x18000622f
    return 1;
  lab_0x1800061f2:;
    int64_t v84 = v72 + (v1 & 0xffffffff); // 0x1800061f2
    int64_t v85 = v70 + 1; // 0x1800061f9
    v68 = v84;
    v69 = v74 + 76;
    v70 = v85 & 0xffffffff;
    v71 = v84 & 0xffffffff;
    if ((int32_t)v85 >= a3) {
        // break -> 0x18000620d
        goto lab_0x18000620d_4;
    }
    goto lab_0x180005fb0;
  lab_0x1800060d0:
    // 0x1800060d0
    v73 = v76;
    goto lab_0x1800060df;
  lab_0x1800060df:
    if ((int32_t)v43 >= 0) {
        uint32_t v86 = v73;
        *v5 = (int32_t)(v72 + v43);
        if (v62 != 0x600000000) {
            if (v62 == 0x200000000) {
                if (v38 == 0) {
                    // break -> 0x18000620d
                    goto lab_0x18000620d_4;
                }
                uint32_t v87 = v86 + 2; // 0x180006124
                if (v87 > v66 || v86 + 4 > v66) {
                    // break -> 0x18000620d
                    goto lab_0x18000620d_4;
                }
                int128_t v88 = __asm_movd((int32_t)*(int16_t *)(v38 + (int64_t)v86)); // 0x180006179
                int128_t v89 = __asm_mulss(__asm_cvtdq2ps(v88), v63); // 0x180006180
                int128_t v90 = __asm_movd((int32_t)*(int16_t *)(v38 + (int64_t)v87)); // 0x180006187
                int128_t v91 = __asm_mulss(__asm_cvtdq2ps(v90), v63); // 0x18000618e
                v75 = 0x100000000 * __asm_movss_8(__asm_addss(v89, v64)) >> 32;
                __asm_movss_8(__asm_addss(v91, v64));
            }
        } else {
            // 0x1800060f7
            if ((int32_t)function_18001d4e0(v65, &v75) == 0) {
                // break -> 0x18000620d
                goto lab_0x18000620d_4;
            }
        }
    }
    if (a2 != 0) {
        int64_t v92 = *v67; // 0x1800061b0
        if (v92 != 0) {
            int64_t v93 = __asm_movsd_5(__asm_movsd(v77)); // 0x1800061be
            int64_t v94 = v92 + v74;
            *(int64_t *)v94 = v93;
            *(int32_t *)(v94 + 8) = 0;
            int64_t v95 = __asm_movsd_5(__asm_movsd(0x100000000 * v33 >> 32)); // 0x1800061d3
            *(int64_t *)(v74 + 24 + *v67) = v95;
            *(int64_t *)(v74 + 32 + *v67) = __asm_movsd_5(__asm_movsd(v75));
        }
    }
    goto lab_0x1800061f2;
}

// Address range: 0x180006250 - 0x180006414
int64_t function_180006250(int64_t a1, int64_t a2, int64_t a3) {
    int64_t v1 = a3;
    if (a2 == 0 || a3 == 0) {
        // 0x180006267
        return 0;
    }
    // 0x180006277
    if ((int32_t)a3 == 0) {
        // 0x180006267
        return 1;
    }
    int32_t v2 = *(int32_t *)(a3 + 4); // 0x18000628b
    if (v2 == 0) {
        // 0x180006267
        return 1;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x180006293
    *v3 = v2;
    uint64_t v4 = 0xaaaaaaab * (int64_t)*(int32_t *)&v1; // 0x18000629b
    int32_t v5 = v2; // 0x1800062a9
    if (v4 < 0x200000000) {
        goto lab_0x1800063d6_2;
      lab_0x1800063d6_2:;
        int32_t v6 = v5 & -4; // 0x1800063db
        *v3 = (v5 & 3) == 0 ? v6 : v6 + 4;
        // 0x180006267
        return 1;
    }
    uint64_t v7 = v4 / 0x200000000; // 0x18000629b
    int64_t * v8 = (int64_t *)(a2 + 8);
    int64_t v9 = a1; // 0x1800062b0
    if (*v8 == 0) {
        int64_t result = function_180001e80(a2, v7); // 0x1800062b8
        v9 = a2;
        if ((int32_t)result == 0) {
            // 0x180006267
            return result;
        }
    }
    int64_t v10 = (int64_t)*(int32_t *)(a2 + 224); // 0x1800062db
    int32_t * v11 = (int32_t *)(a3 + 16);
    int64_t v12 = v9; // 0x1800062fd
    int64_t v13 = 0; // 0x1800062fd
    int64_t v14 = v10; // 0x1800062fd
    int64_t v15 = 20 * v10; // 0x1800062fd
    while (v12 != 0) {
        uint32_t v16 = *(int32_t *)(a1 + 12); // 0x18000630f
        v1 = v16;
        if (*v3 + 2 > v16) {
            // break -> 0x180006267
            break;
        }
        int64_t v17 = v15;
        int64_t v18 = v14;
        uint32_t v19 = *v3; // 0x18000631f
        uint32_t v20 = v19 + 2; // 0x18000631f
        *v3 = v20;
        int32_t v21 = *(int32_t *)(a1 + 16); // 0x180006327
        int16_t v22 = *(int16_t *)(v12 + (int64_t)v19); // 0x18000632f
        uint32_t v23 = v19 + 4; // 0x18000633e
        if (v23 > (int32_t)v1) {
            // break -> 0x180006267
            break;
        }
        // 0x18000634b
        *v3 = v23;
        int16_t v24 = *(int16_t *)(v12 + (int64_t)v20); // 0x180006357
        uint32_t v25 = v19 + 6; // 0x180006366
        if (v25 > (int32_t)v1) {
            // break -> 0x180006267
            break;
        }
        // 0x180006373
        *v3 = v25;
        int16_t v26 = *(int16_t *)(v12 + (int64_t)v23); // 0x18000637d
        int64_t v27 = *v8; // 0x18000638a
        v12 = 0;
        if (v27 != 0) {
            int32_t v28 = v21 == 0 ? v26 : llvm_bswap_i16(v26);
            v12 = v27;
            if (v28 > (int32_t)v18) {
                uint16_t v29 = v21 == 0 ? v22 : llvm_bswap_i16(v22);
                uint16_t v30 = v21 == 0 ? v24 : llvm_bswap_i16(v24);
                *(int32_t *)(v17 + 4 + v27) = *v11 + (int32_t)v29;
                *(int32_t *)(v17 + 8 + *v8) = *v11 + (int32_t)v30;
                uint32_t v31 = *v11 + v28; // 0x1800063bc
                *(int32_t *)(v17 + 12 + *v8) = v31;
                v12 = v31;
            }
        }
        int64_t v32 = v13 + 1; // 0x1800063cb
        v13 = v32 & 0xffffffff;
        v14 = v18 + 1 & 0xffffffff;
        v15 = v17 + 20;
        if ((int32_t)v32 >= (int32_t)v7) {
            // 0x1800063d6
            v5 = *v3;
            goto lab_0x1800063d6_2;
        }
    }
    // 0x180006267
    return 0;
}

// Address range: 0x180006420 - 0x1800067c9
int64_t function_180006420(int64_t a1, int64_t a2, int64_t a3) {
    int64_t v1 = a3;
    if (a2 == 0 || v1 == 0) {
        // 0x1800067b1
        return 0;
    }
    uint32_t v2 = *(int32_t *)(v1 + 12); // 0x18000645c
    int32_t v3 = *(int32_t *)(v1 + 8); // 0x180006460
    if (v2 == 0 || v3 == 0 || (int32_t)v1 == 0) {
        // 0x1800067b1
        return 1;
    }
    uint32_t v4 = *(int32_t *)(v1 + 4); // 0x18000647e
    if (v4 == 0) {
        // 0x1800067b1
        return 1;
    }
    int32_t * v5 = (int32_t *)(a1 + 8); // 0x18000648b
    *v5 = v4;
    if (a1 == 0) {
        // 0x1800067b1
        return 0;
    }
    uint32_t v6 = *(int32_t *)(a1 + 12); // 0x18000649b
    v1 = v6;
    if (v6 < v4 + 4) {
        // 0x1800067b1
        return 0;
    }
    int64_t v7 = v4; // 0x18000647e
    uint32_t v8 = *(int32_t *)(v7 + a1); // 0x1800064ac
    int64_t v9 = v8; // 0x1800064ac
    int32_t v10 = *(int32_t *)(a1 + 16); // 0x1800064b0
    int64_t v11 = a2; // 0x1800064b5
    int64_t v12 = v9; // 0x1800064b5
    if (v10 != 0) {
        int64_t v13 = 0x1000000 * v9; // 0x1800064ba
        v11 = v13 & 0xff000000;
        v12 = v8 / 256 & 0xff00 | v8 / 0x1000000 | 256 * v8 & 0xff0000 | (int32_t)v13;
    }
    int64_t v14 = v11; // 0x1800064e8
    int64_t v15 = v2; // 0x1800064e8
    if (v12 == 0x41646170) {
        uint32_t v16 = v4 + 8; // 0x1800064ee
        *v5 = v16;
        uint32_t v17 = v4 + 12; // 0x1800064f5
        if (v17 > (int32_t)v1) {
            // 0x1800067b1
            return 0;
        }
        // 0x180006502
        *v5 = v17;
        uint32_t v18 = *(int32_t *)((int64_t)v16 + a1); // 0x18000650a
        int64_t v19 = v18; // 0x18000650a
        v14 = v11;
        v15 = v19;
        if (v10 != 0) {
            int64_t v20 = 0x1000000 * v19; // 0x180006514
            v14 = v20 & 0xff000000;
            v15 = v18 / 256 & 0xff00 | v18 / 0x1000000 | 256 * v18 & 0xff0000 | (int32_t)v20;
        }
        uint32_t v21 = v4 + 16; // 0x180006535
        if (v21 > (int32_t)v1) {
            // 0x1800067b1
            return 0;
        }
        // 0x180006542
        *v5 = v21;
        uint32_t v22 = v4 + 20; // 0x180006546
        if (v22 > (int32_t)v1) {
            // 0x1800067b1
            return 0;
        }
        // 0x180006553
        *v5 = v22;
        uint32_t v23 = v4 + 24; // 0x180006557
        if (v23 > (int32_t)v1) {
            // 0x1800067b1
            return 0;
        }
        // 0x180006564
        *v5 = v23;
        uint32_t v24 = v4 + 28; // 0x180006568
        if (v24 > (int32_t)v1) {
            // 0x1800067b1
            return 0;
        }
        // 0x180006575
        *v5 = v24;
        uint32_t v25 = v4 + 32; // 0x180006579
        if (v25 > (int32_t)v1) {
            // 0x1800067b1
            return 0;
        }
        // 0x180006586
        *v5 = v25;
        uint32_t v26 = v4 + 36; // 0x18000658a
        if (v26 > (int32_t)v1) {
            // 0x1800067b1
            return 0;
        }
        // 0x180006597
        *v5 = v26;
    }
    int32_t v27 = v15; // 0x1800065a3
    int64_t v28 = v15 & 0xffffffff;
    int64_t v29 = 0; // 0x1800065a5
    if (v27 != 0) {
        // 0x1800065a7
        v29 = function_180023684(v28, v14, v1, v7);
        if (v29 == 0) {
            // 0x1800067b1
            return 0;
        }
    }
    // 0x1800065ba
    v1 = v28;
    if ((int32_t)function_180003b40(a1, v29, v28) == 0) {
        // 0x1800067a7
        free((int64_t *)v29);
        // 0x1800067b1
        return 0;
    }
    int64_t v30 = v3; // 0x180006460
    int32_t v31 = v3; // bp+16, 0x1800065d0
    int32_t v32; // 0x180006420
    int64_t v33; // 0x180006420
    if (v12 != 0x41646170) {
        // 0x180006630
        if (v29 == 0) {
            // 0x1800067b1
            return 0;
        }
        if (v27 == 0) {
            // 0x1800067a7
            free((int64_t *)v29);
            // 0x1800067b1
            return 0;
        }
        int64_t v34 = function_180023684(v30, v29, v1, v7); // 0x18000664c
        if (v34 == 0) {
            // 0x1800067a7
            free((int64_t *)v29);
            // 0x1800067b1
            return 0;
        }
        int64_t * v35 = (int64_t *)v34; // 0x180006665
        memset(v35, 0, v3);
        int32_t v36 = v27; // bp+32, 0x18000666a
        int64_t v37 = function_18001e550(v34, &v31, v29, &v36); // 0x180006687
        if (v31 == 0) {
            // 0x18000679f
            free(v35);
            // 0x1800067a7
            free((int64_t *)v29);
            // 0x1800067b1
            return 0;
        }
        // 0x18000669b
        v33 = v34;
        v32 = v31;
        if ((int32_t)v37 != 0) {
            // 0x18000679f
            free(v35);
            // 0x1800067a7
            free((int64_t *)v29);
            // 0x1800067b1
            return 0;
        }
    } else {
        // 0x1800065e0
        if (v29 == 0) {
            // 0x1800067b1
            return 0;
        }
        if (v27 == 0) {
            // 0x1800067a7
            free((int64_t *)v29);
            // 0x1800067b1
            return 0;
        }
        int64_t v38 = function_180023684(v30, v29, v1, v7); // 0x1800065ff
        if (v38 == 0) {
            // 0x1800067a7
            free((int64_t *)v29);
            // 0x1800067b1
            return 0;
        }
        // 0x180006610
        memset((int64_t *)v38, 0, v3);
        function_180021580(v29, v38, v28, v30);
        v33 = v38;
        v32 = v3;
    }
    uint64_t v39 = 0xaaaaaaab * (int64_t)*(int32_t *)&v1; // 0x1800066c2
    if (v39 < 0x200000000) {
        // 0x18000678f
        free((int64_t *)v29);
        // 0x1800067b1
        return 1;
    }
    uint64_t v40 = v39 / 0x200000000; // 0x1800066c2
    int64_t * v41 = (int64_t *)(a2 + 8);
    if (*v41 == 0) {
        // 0x1800066d2
        if ((int32_t)function_180001e80(a2, v40) == 0) {
            // 0x18000678f
            free((int64_t *)v29);
            // 0x1800067b1
            return 1;
        }
    }
    int64_t v42 = (int64_t)*(int32_t *)(a2 + 224); // 0x1800066e4
    int64_t v43 = 20 * v42; // 0x1800066fa
    v1 = v43;
    int32_t * v44 = (int32_t *)(a3 + 16);
    int64_t v45 = 0; // 0x180006705
    int64_t v46 = v42; // 0x180006705
    int64_t v47 = 0; // 0x180006705
    int64_t v48 = 2; // 0x180006705
    int64_t v49 = v43; // 0x180006705
    if (v32 < 2) {
        // 0x18000678f
        free((int64_t *)v29);
        // 0x1800067b1
        return 1;
    }
    int32_t v50 = (int32_t)*(int16_t *)(v47 + v33); // 0x180006712
    v31 = v50;
    int32_t v51 = v48;
    while (v32 >= v51 + 2) {
        if (v32 < v51 + 4) {
            // break -> 0x18000678f
            break;
        }
        int64_t v52 = v49;
        int64_t v53 = v46;
        uint16_t v54 = *(int16_t *)((v47 + 2 & 0xffffffff) + v33); // 0x180006724
        int64_t v55 = v48 + 6; // 0x180006730
        uint16_t v56 = *(int16_t *)((v47 + 4 & 0xffffffff) + v33); // 0x180006736
        int64_t v57 = *v41; // 0x18000673b
        int64_t v58 = v52; // 0x180006742
        if (v57 != 0) {
            // 0x180006744
            v58 = v52;
            if ((int32_t)v55 > (int32_t)v53) {
                // 0x180006749
                *(int32_t *)(v52 + 4 + v57) = *v44 + (v50 & 0xffff);
                *(int32_t *)(*v41 + 8 + v1) = *v44 + (int32_t)v54;
                *(int32_t *)(*v41 + 12 + v1) = *v44 + (int32_t)v56;
                v58 = v1;
            }
        }
        // 0x18000677c
        v49 = v58 + 20;
        v1 = v49;
        int64_t v59 = v45 + 1; // 0x180006783
        if ((int32_t)v59 >= (int32_t)v40) {
            // break -> 0x18000678f
            break;
        }
        // 0x18000677c
        v45 = v59 & 0xffffffff;
        v46 = v53 + 1 & 0xffffffff;
        v47 = v47 + 6 & 0xffffffff;
        v48 = v55 & 0xffffffff;
        if (v32 < (int32_t)v55) {
            // break -> 0x18000678f
            break;
        }
        v50 = (int32_t)*(int16_t *)(v47 + v33);
        v31 = v50;
        v51 = v48;
    }
    // 0x18000678f
    free((int64_t *)v29);
    // 0x1800067b1
    return 1;
}

// Address range: 0x1800067d0 - 0x1800068d8
int64_t function_1800067d0(int64_t * a1, int64_t a2) {
    // 0x1800067d0
    if (a1 != NULL) {
        // 0x1800067f4
        free(a1);
        *a1 = 0;
    }
    int64_t v1 = (int64_t)a1;
    int64_t v2 = v1 + 8; // 0x180006803
    *(int64_t *)v2 = 0;
    struct _IO_FILE * stream = _wfopen((int16_t *)a2, L"rb"); // 0x18000680a
    if (stream == NULL) {
        // 0x1800068c3
        return 0;
    }
    // 0x180006818
    fseek(stream, 0, SEEK_END);
    uint32_t curr_file_offset = ftell(stream); // 0x18000682a
    int32_t * v3 = (int32_t *)(v1 + 12); // 0x180006830
    *v3 = curr_file_offset;
    if (curr_file_offset == 0) {
        // 0x18000687a
        fclose(stream);
        // 0x1800068c3
        return 0;
    }
    // 0x180006837
    int64_t v4; // 0x1800067d0
    int64_t v5 = function_180023684((int64_t)curr_file_offset, 0, 2, v4); // 0x180006839
    *a1 = v5;
    if (v5 == 0) {
        // 0x18000687a
        fclose(stream);
        // 0x1800068c3
        return 0;
    }
    // 0x180006849
    fseek(stream, 0, SEEK_SET);
    int32_t nmemb = *v3; // 0x180006854
    if (fread((int64_t *)stream, 1, nmemb, stream) != nmemb) {
        // 0x18000686f
        function_180003ba0(v1);
        // 0x18000687a
        fclose(stream);
        // 0x1800068c3
        return 0;
    }
    // 0x180006884
    fclose(stream);
    int32_t * v6 = (int32_t *)v2; // 0x180006895
    uint32_t v7 = *v6; // 0x180006895
    uint32_t v8 = v7 + 4; // 0x180006898
    int64_t result = 0; // 0x18000689e
    if (v8 <= *v3) {
        // 0x1800068a0
        *v6 = v8;
        int32_t v9 = *(int32_t *)((int64_t)v7 + (int64_t)stream); // 0x1800068a6
        int32_t v10 = *(int32_t *)(v1 + 16); // 0x1800068a9
        result = (v10 == 0 ? v9 : llvm_bswap_i32(v9)) == 0x4034b50;
    }
    // 0x1800068b9
    function_180003ba0(v1);
    // 0x1800068c3
    return result;
}

// Address range: 0x1800068e0 - 0x180006b23
int64_t function_1800068e0(int64_t * a1) {
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 64); // 0x1800068e6
    int64_t v3 = *v2; // 0x1800068e6
    if (v3 == 0) {
        // 0x180006b1d
        int64_t result; // 0x1800068e0
        return result;
    }
    int32_t * v4 = (int32_t *)(v1 + 56); // 0x1800068fe
    uint32_t result2 = *v4;
    int64_t v5 = 0; // 0x180006901
    if (result2 < 1) {
        // 0x180006b1d
        return result2;
    }
    int64_t v6 = 0; // 0x180006901
    int64_t v7 = v5 + v3;
    *(int64_t *)(v7 + 1352) = 0x3f800000;
    *(int64_t *)(v7 + 1360) = 0;
    *(int32_t *)(v7 + 1368) = 0;
    *(int64_t *)(v7 + 1372) = 0x3f800000;
    int64_t v8 = v5 + 1380; // 0x18000693c
    *(int64_t *)(v8 + v3) = 0;
    *(int32_t *)(v7 + 1388) = 0;
    *(int64_t *)(v7 + 1392) = 0x3f800000;
    *(int64_t *)(v7 + 1400) = 0;
    *(int32_t *)(v7 + 1408) = 0;
    *(int32_t *)(v7 + 1412) = 0x3f800000;
    int64_t v9 = *v2 + v5;
    *(int64_t *)(v9 + 1416) = 0x3f800000;
    *(int64_t *)(v9 + 1424) = 0;
    *(int32_t *)(v9 + 1432) = 0;
    *(int64_t *)(v9 + 1436) = 0x3f800000;
    *(int64_t *)(v9 + 1444) = 0;
    *(int32_t *)(v9 + 1452) = 0;
    *(int64_t *)(v9 + 1456) = 0x3f800000;
    *(int64_t *)(v9 + 1464) = 0;
    *(int32_t *)(v9 + 1472) = 0;
    *(int32_t *)(v9 + 1476) = 0x3f800000;
    int64_t v10 = *v2 + 1480 * (0x100000000 * v6 >> 32);
    function_18001dd00(v10 + 1336, v10 + 1352);
    int64_t v11 = v6 + 1; // 0x180006a0c
    int64_t v12 = g40 + v5;
    *(int32_t *)(v12 + 1364) = *(int32_t *)(v12 + 1312);
    int64_t v13 = g40; // 0x180006a1c
    *(int32_t *)(v13 + v8) = *(int32_t *)(v5 + 1316 + v13);
    int64_t v14 = g40 + v5;
    *(int32_t *)(v14 + 1396) = *(int32_t *)(v14 + 1320);
    uint32_t v15 = *v4;
    while (v15 > (int32_t)v11) {
        int64_t v16 = *v2; // 0x1800068e0
        v5 += 1480;
        v6 = v11 & 0xffffffff;
        v7 = v5 + v16;
        *(int64_t *)(v7 + 1352) = 0x3f800000;
        *(int64_t *)(v7 + 1360) = 0;
        *(int32_t *)(v7 + 1368) = 0;
        *(int64_t *)(v7 + 1372) = 0x3f800000;
        v8 = v5 + 1380;
        *(int64_t *)(v8 + v16) = 0;
        *(int32_t *)(v7 + 1388) = 0;
        *(int64_t *)(v7 + 1392) = 0x3f800000;
        *(int64_t *)(v7 + 1400) = 0;
        *(int32_t *)(v7 + 1408) = 0;
        *(int32_t *)(v7 + 1412) = 0x3f800000;
        v9 = *v2 + v5;
        *(int64_t *)(v9 + 1416) = 0x3f800000;
        *(int64_t *)(v9 + 1424) = 0;
        *(int32_t *)(v9 + 1432) = 0;
        *(int64_t *)(v9 + 1436) = 0x3f800000;
        *(int64_t *)(v9 + 1444) = 0;
        *(int32_t *)(v9 + 1452) = 0;
        *(int64_t *)(v9 + 1456) = 0x3f800000;
        *(int64_t *)(v9 + 1464) = 0;
        *(int32_t *)(v9 + 1472) = 0;
        *(int32_t *)(v9 + 1476) = 0x3f800000;
        v10 = *v2 + 1480 * (0x100000000 * v6 >> 32);
        function_18001dd00(v10 + 1336, v10 + 1352);
        v11 = v6 + 1;
        v12 = g40 + v5;
        *(int32_t *)(v12 + 1364) = *(int32_t *)(v12 + 1312);
        v13 = g40;
        *(int32_t *)(v13 + v8) = *(int32_t *)(v5 + 1316 + v13);
        v14 = g40 + v5;
        *(int32_t *)(v14 + 1396) = *(int32_t *)(v14 + 1320);
        v15 = *v4;
    }
    int64_t result3 = v15; // 0x180006a4e
    if (v15 < 1) {
        // 0x180006b1d
        return result3;
    }
    int64_t v17 = 0; // 0x180006a53
    int64_t v18 = 0;
    int64_t v19 = *v2; // 0x180006a61
    int64_t v20 = v19 + v17;
    int32_t v21 = *(int32_t *)(v20 + 1300); // 0x180006a65
    int64_t v22 = v21; // 0x180006a65
    int64_t v23; // 0x1800068e0
    int64_t v24; // 0x180006ad5
    if (v21 != (int32_t)v18 == result3 > v22) {
        if (v21 >= 0) {
            // 0x180006acb
            v24 = v19 + 1416;
            v23 = 1480 * (0x100000000 * v18 >> 32);
            function_18001dbf0(v24 + v23, 1480 * v22 + v24, v19 + 1352 + v23);
        } else {
            // 0x180006a81
            __asm_movups_4(*(int128_t *)(v20 + 1416), __asm_movups(*(int128_t *)(v20 + 1352)));
            __asm_movups_4(*(int128_t *)(v20 + 1432), __asm_movups(*(int128_t *)(v20 + 1368)));
            __asm_movups_4(*(int128_t *)(v20 + 1448), __asm_movups(*(int128_t *)(v20 + 1384)));
            __asm_movups_4(*(int128_t *)(v20 + 1464), __asm_movups(*(int128_t *)(v20 + 1400)));
        }
    }
    int64_t result4 = (int64_t)*v4; // 0x180006aff
    int64_t v25 = v18 + 1 & 0xffffffff; // 0x180006b02
    v17 += 1480;
    while (v25 < result4) {
        // 0x180006a61
        v18 = v25;
        v19 = *v2;
        v20 = v19 + v17;
        v21 = *(int32_t *)(v20 + 1300);
        v22 = v21;
        if (v21 != (int32_t)v18 == result4 > v22) {
            if (v21 >= 0) {
                // 0x180006acb
                v24 = v19 + 1416;
                v23 = 1480 * (0x100000000 * v18 >> 32);
                function_18001dbf0(v24 + v23, 1480 * v22 + v24, v19 + 1352 + v23);
            } else {
                // 0x180006a81
                __asm_movups_4(*(int128_t *)(v20 + 1416), __asm_movups(*(int128_t *)(v20 + 1352)));
                __asm_movups_4(*(int128_t *)(v20 + 1432), __asm_movups(*(int128_t *)(v20 + 1368)));
                __asm_movups_4(*(int128_t *)(v20 + 1448), __asm_movups(*(int128_t *)(v20 + 1384)));
                __asm_movups_4(*(int128_t *)(v20 + 1464), __asm_movups(*(int128_t *)(v20 + 1400)));
            }
        }
        // 0x180006aff
        result4 = (int64_t)*v4;
        v25 = v18 + 1 & 0xffffffff;
        v17 += 1480;
    }
    // 0x180006b1d
    return result4;
}

// Address range: 0x180006b30 - 0x180006f14
int64_t function_180006b30(int64_t * a1) {
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 64); // 0x180006b54
    if (*v2 == 0) {
        // 0x180006efb
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t * v3 = (int64_t *)(v1 + 48); // 0x180006b62
    if (*v3 == 0) {
        // 0x180006efb
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v4 = (int32_t *)(v1 + 56); // 0x180006b73
    int32_t v5 = *v4; // 0x180006b73
    int32_t * v6; // 0x180006b30
    int32_t v7; // 0x180006b30
    if (v5 < 1) {
        // 0x180006b6d
        v6 = (int32_t *)(v1 + 40);
        v7 = v5;
    } else {
        int32_t * v8 = (int32_t *)(v1 + 40);
        int64_t v9 = 0; // 0x180006b30
        int64_t v10 = 0; // 0x180006b30
        int64_t v11; // bp-472, 0x180006b30
        memset(&v11, 0, 260);
        int64_t v12 = *v2 + 780 + 1480 * (0x100000000 * v9 >> 32); // 0x180006bb7
        int64_t v13 = v12; // 0x180006bbf
        char v14 = *(char *)v13; // 0x180006bc2
        *(char *)((int64_t)&v11 - v12 + v13) = v14;
        v13++;
        while (v14 != 0) {
            // 0x180006bc2
            v14 = *(char *)v13;
            *(char *)((int64_t)&v11 - v12 + v13) = v14;
            v13++;
        }
        char v15 = v11;
        int64_t v16; // bp-471, 0x180006b30
        int64_t v17 = &v16; // 0x180006bd7
        char v18 = v15; // 0x180006bd7
        char v19; // 0x180006be0
        if (v15 == 35) {
            v19 = *(char *)v17;
            *(char *)(v17 - 1) = v19;
            v17++;
            while (v19 != 0) {
                // 0x180006be0
                v19 = *(char *)v17;
                *(char *)(v17 - 1) = v19;
                v17++;
            }
            // 0x180006bee
            v18 = v11;
        }
        int64_t v20 = 0xffffffff; // 0x180006bf5
        int64_t v21; // 0x180006b30
        int64_t v22; // 0x180006b30
        int64_t v23; // 0x180006c0f
        int32_t v24; // 0x180006c1c
        int64_t v25; // 0x180006c26
        if (v18 != 0) {
            // 0x180006bf7
            v20 = 0xffffffff;
            if (*v8 >= 1) {
                v22 = 0;
                v23 = *v3;
                v24 = _stricmp((char *)(v23 + 232 + 760 * (0x100000000 * v22 >> 32)), (char *)&v11);
                v20 = v22;
                while (v24 != 0) {
                    // 0x180006c26
                    v25 = v22 + 1;
                    v21 = v25 & 0xffffffff;
                    v20 = 0xffffffff;
                    if (*v8 <= (int32_t)v25) {
                        // break -> 0x180006c30
                        break;
                    }
                    v22 = v21;
                    v23 = *v3;
                    v24 = _stricmp((char *)(v23 + 232 + 760 * (0x100000000 * v22 >> 32)), (char *)&v11);
                    v20 = v22;
                }
            }
        }
        int64_t v26 = v9 + 1; // 0x180006c34
        *(int32_t *)(v10 + 1308 + *v2) = (int32_t)v20;
        uint32_t v27 = *v4; // 0x180006c45
        v9 = v26 & 0xffffffff;
        v10 += 1480;
        v6 = v8;
        v7 = v27;
        while (v27 > (int32_t)v26) {
            // 0x180006b90
            memset(&v11, 0, 260);
            v12 = *v2 + 780 + 1480 * (0x100000000 * v9 >> 32);
            v13 = v12;
            v14 = *(char *)v13;
            *(char *)((int64_t)&v11 - v12 + v13) = v14;
            v13++;
            while (v14 != 0) {
                // 0x180006bc2
                v14 = *(char *)v13;
                *(char *)((int64_t)&v11 - v12 + v13) = v14;
                v13++;
            }
            // 0x180006bd0
            v15 = v11;
            v17 = &v16;
            v18 = v15;
            if (v15 == 35) {
                v19 = *(char *)v17;
                *(char *)(v17 - 1) = v19;
                v17++;
                while (v19 != 0) {
                    // 0x180006be0
                    v19 = *(char *)v17;
                    *(char *)(v17 - 1) = v19;
                    v17++;
                }
                // 0x180006bee
                v18 = v11;
            }
            // 0x180006bf3
            v20 = 0xffffffff;
            if (v18 != 0) {
                // 0x180006bf7
                v20 = 0xffffffff;
                if (*v8 >= 1) {
                    v22 = 0;
                    v23 = *v3;
                    v24 = _stricmp((char *)(v23 + 232 + 760 * (0x100000000 * v22 >> 32)), (char *)&v11);
                    v20 = v22;
                    while (v24 != 0) {
                        // 0x180006c26
                        v25 = v22 + 1;
                        v21 = v25 & 0xffffffff;
                        v20 = 0xffffffff;
                        if (*v8 <= (int32_t)v25) {
                            // break -> 0x180006c30
                            break;
                        }
                        v22 = v21;
                        v23 = *v3;
                        v24 = _stricmp((char *)(v23 + 232 + 760 * (0x100000000 * v22 >> 32)), (char *)&v11);
                        v20 = v22;
                    }
                }
            }
            // 0x180006c30
            v26 = v9 + 1;
            *(int32_t *)(v10 + 1308 + *v2) = (int32_t)v20;
            v27 = *v4;
            v9 = v26 & 0xffffffff;
            v10 += 1480;
            v6 = v8;
            v7 = v27;
        }
    }
    int32_t v28 = *v6;
    int32_t v29 = v28; // 0x180006c6d
    int32_t v30 = v7; // 0x180006c6d
    int64_t v31 = 0; // 0x180006c6d
    int64_t v32 = 0; // 0x180006c6d
    if (v28 < 1) {
        // 0x180006efb
        __security_check_cookie(g17);
        return &g47;
    }
    while (true) {
        int64_t v33 = v32;
        int64_t v34 = v31;
        int32_t v35 = v30; // 0x180006c72
        int32_t v36 = v29;
        int32_t v37 = v36; // 0x180006c7c
        if (v35 >= 1) {
            uint64_t v38 = (int64_t)v35; // 0x180006c72
            int64_t v39 = 0; // 0x180006c8b
            int64_t v40 = 0;
            int64_t v41 = *v2 + 1308; // 0x180006b30
            while (*(int32_t *)v41 != (int32_t)v34) {
                // 0x180006c95
                v39++;
                v41 += 1480;
                int64_t v42 = v40 + 1 & 0xffffffff; // 0x180006ca3
                v37 = v36;
                if (v39 >= v38) {
                    goto lab_0x180006cb3;
                }
                v40 = v42;
            }
            // 0x180006ca7
            *(int32_t *)(v33 + 752 + *v3) = (int32_t)v40;
            v37 = *v6;
        }
      lab_0x180006cb3:
        // 0x180006cb3
        v29 = v37;
        int64_t v43 = v34 + 1; // 0x180006cb3
        if (v29 <= (int32_t)v43) {
            // break -> 0x180006cc3
            break;
        }
        // 0x180006cb3
        v30 = *v4;
        v31 = v43 & 0xffffffff;
        v32 = v33 + 760;
    }
    if (v29 < 1) {
        // 0x180006efb
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180006cd0
    int128_t v44; // 0x180006b30
    int64_t v45 = __asm_movaps_9(v44); // 0x180006cd6
    int64_t v46 = __asm_movaps_9(v44); // 0x180006cde
    int64_t v47 = __asm_movaps_9(v44); // 0x180006ce6
    int64_t v48 = __asm_movaps_9(v44); // 0x180006cef
    int64_t v49 = __asm_movaps_9(v44); // 0x180006cf8
    int64_t v50 = __asm_movaps_9(v44); // 0x180006d01
    int64_t v51 = __asm_movaps_9(v44); // 0x180006d0a
    int64_t v52 = __asm_movaps_9(v44); // 0x180006d13
    int64_t v53 = __asm_movaps_9(v44); // 0x180006d1c
    int64_t v54 = __asm_movaps_9(v44); // 0x180006d25
    int64_t v55 = 0; // 0x180006d2e
    int64_t v56 = *v3;
    int64_t v57 = 0;
    uint32_t v58 = *(int32_t *)(v57 + 752 + v56); // 0x180006d30
    int64_t v59 = v56; // 0x180006d3a
    int64_t v60; // 0x180006b30
    int64_t v61; // 0x180006b30
    int64_t v62; // 0x180006b30
    int128_t v63; // 0x180006ddd
    int32_t * v64; // 0x180006de3
    int64_t v65; // 0x180006de8
    int128_t v66; // 0x180006dee
    int128_t v67; // 0x180006df4
    int128_t v68; // 0x180006dfa
    int128_t v69; // 0x180006e00
    int128_t v70; // 0x180006e08
    int128_t v71; // 0x180006e0e
    int128_t v72; // 0x180006e12
    int128_t v73; // 0x180006e16
    int128_t v74; // 0x180006e1a
    int128_t v75; // 0x180006e22
    int128_t v76; // 0x180006e26
    int128_t v77; // 0x180006e2e
    int128_t v78; // 0x180006e45
    int128_t v79; // 0x180006e4d
    int128_t v80; // 0x180006e51
    int128_t v81; // 0x180006e55
    int128_t v82; // 0x180006e59
    int128_t v83; // 0x180006e5d
    int128_t v84; // 0x180006e61
    int128_t v85; // 0x180006e66
    int64_t v86; // 0x180006e80
    int32_t v87; // 0x180006b30
    int64_t v88; // 0x180006b30
    int128_t v89; // 0x180006d4e
    int128_t v90; // 0x180006d56
    int64_t v91; // 0x180006d5e
    int128_t v92; // 0x180006d63
    int64_t v93; // 0x180006d6b
    int64_t v94; // 0x180006d70
    int64_t v95; // 0x180006d75
    int128_t v96; // 0x180006d80
    int128_t v97; // 0x180006d89
    int128_t v98; // 0x180006d90
    int128_t v99; // 0x180006d97
    int128_t v100; // 0x180006d9e
    int128_t v101; // 0x180006da5
    int128_t v102; // 0x180006dac
    int128_t v103; // 0x180006db3
    int128_t v104; // 0x180006dba
    int128_t v105; // 0x180006dc5
    int128_t v106; // 0x180006dc9
    int64_t v107; // 0x180006dcf
    int128_t v108; // 0x180006dd2
    if (v58 >= 0) {
        // 0x180006d40
        v88 = *v2 + 1480 * (int64_t)v58;
        v89 = __asm_movups(*(int128_t *)(v88 + 1416));
        v90 = __asm_movups(*(int128_t *)(v88 + 1432));
        v91 = __asm_movaps_9(v89);
        v92 = __asm_movups(*(int128_t *)(v88 + 1448));
        v93 = __asm_movaps_9(v90);
        v94 = __asm_movaps_9(v92);
        v95 = v57 + 16;
        v59 = v56;
        if (*(int32_t *)(v95 + v56) >= 1) {
            // 0x180006d80
            v96 = __asm_movss(v87);
            v97 = __asm_movss(v87);
            v98 = __asm_movss(v87);
            v99 = __asm_movss((int32_t)v94);
            v100 = __asm_movss(v87);
            v101 = __asm_movss(v87);
            v102 = __asm_movss(v87);
            v103 = __asm_movss((int32_t)v93);
            v104 = __asm_movss(v87);
            v61 = 0;
            v105 = __asm_movaps(v98);
            v106 = __asm_movss(v87);
            v107 = 1;
            v108 = __asm_movss(v87);
            v62 = *(int64_t *)(v57 + 24 + *v3) + v61;
            v63 = __asm_movsd(*(int64_t *)v62);
            v64 = (int32_t *)(v62 + 8);
            v65 = __asm_movsd_5(v63);
            v66 = __asm_movss(v87);
            v67 = __asm_movss((int32_t)v65);
            v68 = __asm_movss((int32_t)v91);
            v69 = __asm_mulss(v106, v66);
            v70 = __asm_movss(*v64);
            v71 = __asm_mulss(v68, v67);
            v72 = __asm_mulss(v108, v70);
            v73 = __asm_addss(v69, v71);
            v74 = __asm_mulss(v105, v66);
            v75 = __asm_mulss(__asm_movaps(v103), v67);
            v76 = __asm_addss(v73, v72);
            v77 = __asm_mulss(__asm_movaps(v101), v70);
            *(int32_t *)v62 = (int32_t)__asm_movss_8(__asm_addss(v76, v104));
            v78 = __asm_addss(__asm_mulss(__asm_movaps(v102), v66), v75);
            v79 = __asm_mulss(__asm_movaps(v99), v67);
            v80 = __asm_addss(v78, v77);
            v81 = __asm_movaps(v97);
            v82 = __asm_addss(v74, v79);
            v83 = __asm_mulss(v81, v70);
            v84 = __asm_addss(v80, v100);
            v85 = __asm_addss(v82, v83);
            *(int32_t *)(v62 + 4) = (int32_t)__asm_movss_8(v84);
            *v64 = (int32_t)__asm_movss_8(__asm_addss(v85, v96));
            v86 = *v3;
            v61 += 76;
            v60 = v107 & 0xffffffff;
            v59 = v86;
            while (*(int32_t *)(v86 + v95) > (int32_t)v107) {
                // 0x180006dc1
                v105 = __asm_movaps(v98);
                v106 = __asm_movss(v87);
                v107 = v60 + 1;
                v108 = __asm_movss(v87);
                v62 = *(int64_t *)(v57 + 24 + v86) + v61;
                v63 = __asm_movsd(*(int64_t *)v62);
                v64 = (int32_t *)(v62 + 8);
                v65 = __asm_movsd_5(v63);
                v66 = __asm_movss(v87);
                v67 = __asm_movss((int32_t)v65);
                v68 = __asm_movss((int32_t)v91);
                v69 = __asm_mulss(v106, v66);
                v70 = __asm_movss(*v64);
                v71 = __asm_mulss(v68, v67);
                v72 = __asm_mulss(v108, v70);
                v73 = __asm_addss(v69, v71);
                v74 = __asm_mulss(v105, v66);
                v75 = __asm_mulss(__asm_movaps(v103), v67);
                v76 = __asm_addss(v73, v72);
                v77 = __asm_mulss(__asm_movaps(v101), v70);
                *(int32_t *)v62 = (int32_t)__asm_movss_8(__asm_addss(v76, v104));
                v78 = __asm_addss(__asm_mulss(__asm_movaps(v102), v66), v75);
                v79 = __asm_mulss(__asm_movaps(v99), v67);
                v80 = __asm_addss(v78, v77);
                v81 = __asm_movaps(v97);
                v82 = __asm_addss(v74, v79);
                v83 = __asm_mulss(v81, v70);
                v84 = __asm_addss(v80, v100);
                v85 = __asm_addss(v82, v83);
                *(int32_t *)(v62 + 4) = (int32_t)__asm_movss_8(v84);
                *v64 = (int32_t)__asm_movss_8(__asm_addss(v85, v96));
                v86 = *v3;
                v61 += 76;
                v60 = v107 & 0xffffffff;
                v59 = v86;
            }
        }
    }
    int64_t v109 = v57 + 760; // 0x180006e9d
    while (*v6 > (int32_t)v55) {
        // 0x180006d30
        v55 &= 0xffffffff;
        v56 = v59;
        v57 = v109;
        v58 = *(int32_t *)(v57 + 752 + v56);
        v59 = v56;
        if (v58 >= 0) {
            // 0x180006d40
            v88 = *v2 + 1480 * (int64_t)v58;
            v89 = __asm_movups(*(int128_t *)(v88 + 1416));
            v90 = __asm_movups(*(int128_t *)(v88 + 1432));
            v91 = __asm_movaps_9(v89);
            v92 = __asm_movups(*(int128_t *)(v88 + 1448));
            v93 = __asm_movaps_9(v90);
            v94 = __asm_movaps_9(v92);
            v95 = v57 + 16;
            v59 = v56;
            if (*(int32_t *)(v95 + v56) >= 1) {
                // 0x180006d80
                v96 = __asm_movss(v87);
                v97 = __asm_movss(v87);
                v98 = __asm_movss(v87);
                v99 = __asm_movss((int32_t)v94);
                v100 = __asm_movss(v87);
                v101 = __asm_movss(v87);
                v102 = __asm_movss(v87);
                v103 = __asm_movss((int32_t)v93);
                v104 = __asm_movss(v87);
                v61 = 0;
                v105 = __asm_movaps(v98);
                v106 = __asm_movss(v87);
                v107 = 1;
                v108 = __asm_movss(v87);
                v62 = *(int64_t *)(v57 + 24 + *v3) + v61;
                v63 = __asm_movsd(*(int64_t *)v62);
                v64 = (int32_t *)(v62 + 8);
                v65 = __asm_movsd_5(v63);
                v66 = __asm_movss(v87);
                v67 = __asm_movss((int32_t)v65);
                v68 = __asm_movss((int32_t)v91);
                v69 = __asm_mulss(v106, v66);
                v70 = __asm_movss(*v64);
                v71 = __asm_mulss(v68, v67);
                v72 = __asm_mulss(v108, v70);
                v73 = __asm_addss(v69, v71);
                v74 = __asm_mulss(v105, v66);
                v75 = __asm_mulss(__asm_movaps(v103), v67);
                v76 = __asm_addss(v73, v72);
                v77 = __asm_mulss(__asm_movaps(v101), v70);
                *(int32_t *)v62 = (int32_t)__asm_movss_8(__asm_addss(v76, v104));
                v78 = __asm_addss(__asm_mulss(__asm_movaps(v102), v66), v75);
                v79 = __asm_mulss(__asm_movaps(v99), v67);
                v80 = __asm_addss(v78, v77);
                v81 = __asm_movaps(v97);
                v82 = __asm_addss(v74, v79);
                v83 = __asm_mulss(v81, v70);
                v84 = __asm_addss(v80, v100);
                v85 = __asm_addss(v82, v83);
                *(int32_t *)(v62 + 4) = (int32_t)__asm_movss_8(v84);
                *v64 = (int32_t)__asm_movss_8(__asm_addss(v85, v96));
                v86 = *v3;
                v61 += 76;
                v60 = v107 & 0xffffffff;
                v59 = v86;
                while (*(int32_t *)(v86 + v95) > (int32_t)v107) {
                    // 0x180006dc1
                    v105 = __asm_movaps(v98);
                    v106 = __asm_movss(v87);
                    v107 = v60 + 1;
                    v108 = __asm_movss(v87);
                    v62 = *(int64_t *)(v57 + 24 + v86) + v61;
                    v63 = __asm_movsd(*(int64_t *)v62);
                    v64 = (int32_t *)(v62 + 8);
                    v65 = __asm_movsd_5(v63);
                    v66 = __asm_movss(v87);
                    v67 = __asm_movss((int32_t)v65);
                    v68 = __asm_movss((int32_t)v91);
                    v69 = __asm_mulss(v106, v66);
                    v70 = __asm_movss(*v64);
                    v71 = __asm_mulss(v68, v67);
                    v72 = __asm_mulss(v108, v70);
                    v73 = __asm_addss(v69, v71);
                    v74 = __asm_mulss(v105, v66);
                    v75 = __asm_mulss(__asm_movaps(v103), v67);
                    v76 = __asm_addss(v73, v72);
                    v77 = __asm_mulss(__asm_movaps(v101), v70);
                    *(int32_t *)v62 = (int32_t)__asm_movss_8(__asm_addss(v76, v104));
                    v78 = __asm_addss(__asm_mulss(__asm_movaps(v102), v66), v75);
                    v79 = __asm_mulss(__asm_movaps(v99), v67);
                    v80 = __asm_addss(v78, v77);
                    v81 = __asm_movaps(v97);
                    v82 = __asm_addss(v74, v79);
                    v83 = __asm_mulss(v81, v70);
                    v84 = __asm_addss(v80, v100);
                    v85 = __asm_addss(v82, v83);
                    *(int32_t *)(v62 + 4) = (int32_t)__asm_movss_8(v84);
                    *v64 = (int32_t)__asm_movss_8(__asm_addss(v85, v96));
                    v86 = *v3;
                    v61 += 76;
                    v60 = v107 & 0xffffffff;
                    v59 = v86;
                }
            }
        }
        // 0x180006e8f
        v109 = v57 + 760;
    }
    // 0x180006ea3
    __asm_movaps((int128_t)v54);
    __asm_movaps((int128_t)v53);
    __asm_movaps((int128_t)v52);
    __asm_movaps((int128_t)v51);
    __asm_movaps((int128_t)v50);
    __asm_movaps((int128_t)v49);
    __asm_movaps((int128_t)v48);
    __asm_movaps((int128_t)v47);
    __asm_movaps((int128_t)v46);
    __asm_movaps((int128_t)v45);
    // 0x180006efb
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180006f20 - 0x180006f8d
int64_t function_180006f20(int64_t a1, int64_t a2) {
    if (a1 == 0) {
        // 0x180006f2e
        *(int32_t *)a2 = 0;
        return 0;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180006f38
    uint32_t v2 = *v1; // 0x180006f38
    uint32_t v3 = v2 + 4; // 0x180006f3b
    if (v3 > *(int32_t *)(a1 + 12)) {
        // 0x180006f2e
        *(int32_t *)a2 = 0;
        return 0;
    }
    // 0x180006f43
    *v1 = v3;
    int32_t * v4 = (int32_t *)a2; // 0x180006f4c
    *v4 = *(int32_t *)((int64_t)v2 + a1);
    if (*(int32_t *)(a1 + 16) != 0) {
        uint32_t v5 = *v1; // 0x180006f55
        *v4 = llvm_bswap_i32(*(int32_t *)((int64_t)(v5 - 4) + (int64_t)v5));
    }
    // 0x180006f87
    return 1;
}

// Address range: 0x180006f90 - 0x1800077db
int64_t function_180006f90(int64_t a1, int32_t * a2) {
    int64_t v1 = (int64_t)a2;
    int32_t v2 = *(int32_t *)(v1 + 8); // 0x180006fac
    if (v2 == 0) {
        // 0x1800077a9
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x180006fc3
    *v3 = v2;
    if (a1 == 0) {
        // 0x1800077a9
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v4 = (int32_t *)(a1 + 12); // 0x180006fce
    uint32_t v5 = *v4; // 0x180006fce
    uint32_t v6 = v2 + 4; // 0x180006fd2
    if (v5 < v6) {
        // 0x1800077a9
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180006fda
    *v3 = v6;
    uint32_t v7 = v2 + 8; // 0x180006fdd
    if (v7 > v5) {
        // 0x1800077a9
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180006fe5
    *v3 = v7;
    int32_t v8 = v2 + 12; // 0x180006fe8
    if (v8 > v5) {
        // 0x1800077a9
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v9 = *(int32_t *)(v1 + 16) - 3; // 0x180006ff8
    *v3 = v8;
    int32_t v10 = v8; // 0x180007006
    int64_t v11 = 0; // 0x180007006
    int32_t v12 = v8; // 0x180007006
    if (v9 >= 1) {
        v10 += 4;
        while (v10 <= v5) {
            // 0x18000701f
            *v3 = v10;
            v11 = v11 + 1 & 0xffffffff;
            v12 = v10;
            if (v11 >= (int64_t)v9) {
                goto lab_0x180007029;
            }
            v10 += 4;
        }
        // 0x1800077a9
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x180007029:;
    int32_t * v13 = (int32_t *)(v1 + 28); // 0x180007031
    uint32_t v14 = *v13; // 0x180007031
    int32_t v15 = v12; // 0x180007037
    int32_t v16 = v14; // 0x180007037
    int32_t v17; // 0x180006f90
    if (v12 < v14) {
        // 0x180007040
        int64_t v18; // bp-1496, 0x180006f90
        int64_t v19 = (int64_t)&v18 + 80;
        v17 = v12;
        while (true) {
          lab_0x180007040:;
            uint32_t v20 = v17; // 0x18000704e
            int32_t v21 = v20 + 4; // 0x180007051
            if (v21 > v5) {
                // break -> 0x1800077a9
                break;
            }
            // 0x18000705d
            *v3 = v21;
            int32_t v22 = *(int32_t *)((int64_t)v20 + a1); // 0x180007067
            uint32_t v23 = *(int32_t *)(a1 + 16) == 0 ? v22 : llvm_bswap_i32(v22);
            if (v23 == 0) {
                // 0x1800070c0
                *(char *)v19 = 0;
                goto lab_0x1800070c5;
            } else {
                int32_t v24 = v20 + 5; // 0x180007083
                if (v24 > v5) {
                    // break -> 0x1800077a9
                    break;
                }
                int64_t v25 = 0;
                int64_t v26 = 0;
                *v3 = v24;
                char v27 = *(char *)((int64_t)v21 + a1); // 0x180007096
                if (v25 <= 259) {
                    // 0x1800070a4
                    *(char *)(v25 + v19) = v27;
                }
                int64_t v28 = v25; // 0x1800070aa
                while (v27 != 0) {
                    int64_t v29 = v26 + 1; // 0x1800070ac
                    int64_t v30 = v25 + 1; // 0x1800070af
                    v28 = v30;
                    if (v23 <= (int32_t)v29) {
                        // break -> 0x1800070b7
                        break;
                    }
                    int32_t v31 = *v3;
                    int32_t v32 = v31 + 1; // 0x180007083
                    if (v32 > v5) {
                        // break (via goto) -> 0x1800077a9
                        goto lab_0x1800077a9;
                    }
                    v25 = v30;
                    v26 = v29 & 0xffffffff;
                    *v3 = v32;
                    v27 = *(char *)((int64_t)v31 + a1);
                    if (v25 <= 259) {
                        // 0x1800070a4
                        *(char *)(v25 + v19) = v27;
                    }
                    // 0x1800070a8
                    v28 = v25;
                }
                int64_t v33 = v28; // 0x1800070be
                if (v28 > 259) {
                    goto lab_0x1800070c5;
                } else {
                    // 0x1800070c0
                    *(char *)(v33 + v19) = 0;
                    goto lab_0x1800070c5;
                }
            }
        }
      lab_0x1800077a9:
        // 0x1800077a9
        __security_check_cookie(g17);
        return &g47;
    }
    goto lab_0x1800070df_2;
  lab_0x1800070c5:;
    int32_t v154 = *v3; // 0x1800070c5
    int32_t v155 = v154 & -4; // 0x1800070ca
    int32_t v156 = (v154 & 3) == 0 ? v155 : v155 + 4;
    *v3 = v156;
    v17 = v156;
    if (v156 >= v14) {
        // 0x1800070df
        v15 = v156;
        v16 = *v13;
        goto lab_0x1800070df_2;
    }
    goto lab_0x180007040;
  lab_0x1800070df_2:;
    int32_t v34 = v16; // 0x1800070df
    uint32_t v35 = v34 != 0 ? v34 : v15; // 0x1800070e7
    *v3 = v35;
    uint32_t v36 = v35 + 4; // 0x1800070ed
    if (v36 > v5) {
        // 0x1800077a9
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800070f9
    *v3 = v36;
    int32_t v37 = *(int32_t *)((int64_t)v35 + a1); // 0x180007103
    int32_t * v38 = (int32_t *)(a1 + 16); // 0x180007107
    uint32_t v39 = *v38 == 0 ? v37 : llvm_bswap_i32(v37);
    int64_t lpMultiByteStr; // bp-1416, 0x180006f90
    function_180005050(a1, (int64_t)v39, &lpMultiByteStr);
    int64_t v40 = 0; // 0x18000711f
    int32_t v41 = *v3; // 0x18000712b
    int32_t v42 = v41 + 4; // 0x18000712e
    int64_t v43; // 0x180006f90
    int64_t v44; // 0x180006f90
    int64_t v45; // 0x180006f90
    uint32_t v46; // 0x180006f90
    uint32_t v47; // 0x1800071cf
    int32_t v48; // 0x18000722f
    int32_t v49; // 0x180007262
    int32_t v50; // 0x180007286
    int32_t v51; // 0x1800072b1
    int32_t v52; // 0x1800072dc
    int32_t v53; // 0x180007307
    int32_t v54; // 0x180007332
    int32_t v55; // 0x180007365
    int32_t v56; // 0x1800073f5
    int64_t v57; // 0x180007463
    while (v42 <= *v4) {
        // 0x18000713a
        *v3 = v42;
        int64_t v58 = v40 + 1; // 0x18000713e
        v40 = v58 & 0xffffffff;
        if ((int32_t)v58 >= 6) {
            uint32_t v59 = *v4; // 0x180007152
            uint32_t v60 = v41 + 8; // 0x180007155
            if (v59 < v60) {
                goto lab_0x1800077a9;
            } else {
                // 0x180007161
                *v3 = v60;
                uint32_t v61 = v41 + 12;
                if (v61 > v59) {
                    goto lab_0x1800077a9;
                } else {
                    // 0x180007175
                    *v3 = v61;
                    uint32_t v62 = v41 + 16; // 0x18000717c
                    if (v62 > v59) {
                        goto lab_0x1800077a9;
                    } else {
                        // 0x180007187
                        *v3 = v62;
                        uint32_t v63 = v41 + 20;
                        if (v63 > v59) {
                            goto lab_0x1800077a9;
                        } else {
                            // 0x180007198
                            *v3 = v63;
                            uint32_t v64 = v41 + 24; // 0x18000719f
                            if (v64 > v59) {
                                goto lab_0x1800077a9;
                            } else {
                                // 0x1800071aa
                                *v3 = v64;
                                uint32_t v65 = v41 + 28;
                                if (v65 > v59) {
                                    goto lab_0x1800077a9;
                                } else {
                                    // 0x1800071bb
                                    *v3 = v65;
                                    uint32_t v66 = v41 + 32; // 0x1800071c3
                                    if (v66 > v59) {
                                        goto lab_0x1800077a9;
                                    } else {
                                        // 0x1800071cf
                                        v47 = *v38;
                                        *v3 = v66;
                                        uint32_t v67 = v41 + 36;
                                        if (v67 > v59) {
                                            goto lab_0x1800077a9;
                                        } else {
                                            int32_t v68 = *(int32_t *)((int64_t)v65 + a1); // 0x1800071e7
                                            *v3 = v67;
                                            uint32_t v69 = v41 + 40; // 0x180007217
                                            if (v69 > v59) {
                                                goto lab_0x1800077a9;
                                            } else {
                                                int32_t v70 = *(int32_t *)((int64_t)v66 + a1); // 0x18000720b
                                                *v3 = v69;
                                                uint32_t v71 = v41 + 44;
                                                if (v71 > v59) {
                                                    goto lab_0x1800077a9;
                                                } else {
                                                    // 0x18000724e
                                                    v48 = *(int32_t *)((int64_t)v67 + a1);
                                                    *v3 = v71;
                                                    uint32_t v72 = v41 + 48; // 0x18000726e
                                                    if (v72 > v59) {
                                                        goto lab_0x1800077a9;
                                                    } else {
                                                        // 0x18000727a
                                                        v49 = *(int32_t *)((int64_t)v69 + a1);
                                                        *v3 = v72;
                                                        uint32_t v73 = v41 + 52;
                                                        if (v73 > v59) {
                                                            goto lab_0x1800077a9;
                                                        } else {
                                                            // 0x1800072a5
                                                            v50 = *(int32_t *)((int64_t)v71 + a1);
                                                            *v3 = v73;
                                                            uint32_t v74 = v41 + 56; // 0x1800072c4
                                                            if (v74 > v59) {
                                                                goto lab_0x1800077a9;
                                                            } else {
                                                                // 0x1800072d0
                                                                v51 = *(int32_t *)((int64_t)v72 + a1);
                                                                *v3 = v74;
                                                                uint32_t v75 = v41 + 60;
                                                                if (v75 > v59) {
                                                                    goto lab_0x1800077a9;
                                                                } else {
                                                                    // 0x1800072fb
                                                                    v52 = *(int32_t *)((int64_t)v73 + a1);
                                                                    *v3 = v75;
                                                                    uint32_t v76 = v41 + 64; // 0x18000731a
                                                                    if (v76 > v59) {
                                                                        goto lab_0x1800077a9;
                                                                    } else {
                                                                        // 0x180007326
                                                                        v53 = *(int32_t *)((int64_t)v74 + a1);
                                                                        *v3 = v76;
                                                                        uint32_t v77 = v41 + 68;
                                                                        if (v77 > v59) {
                                                                            goto lab_0x1800077a9;
                                                                        } else {
                                                                            // 0x180007351
                                                                            v54 = *(int32_t *)((int64_t)v75 + a1);
                                                                            *v3 = v77;
                                                                            uint32_t v78 = v41 + 72; // 0x18000737b
                                                                            if (v78 > v59) {
                                                                                goto lab_0x1800077a9;
                                                                            } else {
                                                                                // 0x180007387
                                                                                v55 = *(int32_t *)((int64_t)v76 + a1);
                                                                                *v3 = v78;
                                                                                uint32_t v79 = v41 + 76;
                                                                                if (v79 > v59) {
                                                                                    goto lab_0x1800077a9;
                                                                                } else {
                                                                                    // 0x18000739b
                                                                                    *v3 = v79;
                                                                                    uint32_t v80 = v41 + 80; // 0x1800073a2
                                                                                    if (v80 > v59) {
                                                                                        goto lab_0x1800077a9;
                                                                                    } else {
                                                                                        // 0x1800073ad
                                                                                        *v3 = v80;
                                                                                        uint32_t v81 = v41 + 84;
                                                                                        if (v81 > v59) {
                                                                                            goto lab_0x1800077a9;
                                                                                        } else {
                                                                                            // 0x1800073be
                                                                                            *v3 = v81;
                                                                                            uint32_t v82 = v41 + 88; // 0x1800073c5
                                                                                            if (v82 > v59) {
                                                                                                goto lab_0x1800077a9;
                                                                                            } else {
                                                                                                // 0x1800073d0
                                                                                                *v3 = v82;
                                                                                                uint32_t v83 = v41 + 92;
                                                                                                if (v83 > v59) {
                                                                                                    goto lab_0x1800077a9;
                                                                                                } else {
                                                                                                    // 0x1800073e1
                                                                                                    *v3 = v83;
                                                                                                    uint32_t v84 = v41 + 96; // 0x180007408
                                                                                                    if (v84 > v59) {
                                                                                                        goto lab_0x1800077a9;
                                                                                                    } else {
                                                                                                        int64_t v85 = v82; // 0x1800073d0
                                                                                                        v56 = *(int32_t *)(v85 + a1);
                                                                                                        *v3 = v84;
                                                                                                        uint32_t v86 = v41 + 100;
                                                                                                        if (v86 > v59) {
                                                                                                            goto lab_0x1800077a9;
                                                                                                        } else {
                                                                                                            int64_t v87 = v47; // 0x1800071cf
                                                                                                            int32_t v88 = v47 == 0 ? v70 : llvm_bswap_i32(v70);
                                                                                                            *v3 = v86;
                                                                                                            v45 = v85;
                                                                                                            v44 = v87;
                                                                                                            if (v88 == 0) {
                                                                                                                goto lab_0x1800075d2;
                                                                                                            } else {
                                                                                                                // 0x180007435
                                                                                                                v46 = v47 == 0 ? v68 : llvm_bswap_i32(v68);
                                                                                                                *v3 = v88;
                                                                                                                v45 = v85;
                                                                                                                v44 = v87;
                                                                                                                if (v46 == 0) {
                                                                                                                    goto lab_0x1800075d2;
                                                                                                                } else {
                                                                                                                    // 0x18000743e
                                                                                                                    if ((int32_t)function_180001fd0(&g31, (int64_t)v46) == 0) {
                                                                                                                        goto lab_0x1800077a9;
                                                                                                                    } else {
                                                                                                                        // 0x180007461
                                                                                                                        v57 = &lpMultiByteStr;
                                                                                                                        v43 = 0;
                                                                                                                        goto lab_0x180007461_2;
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        v41 = v42;
        v42 = v41 + 4;
    }
    // 0x1800077a9
    __security_check_cookie(g17);
    return &g47;
  lab_0x1800075d2:;
    int32_t v89 = v47 == 0 ? v49 : llvm_bswap_i32(v49);
    int64_t v90 = v44; // 0x1800075d5
    int32_t v91; // 0x180006f90
    int64_t v92; // 0x180006f90
    int64_t v93; // 0x180006f90
    uint32_t v94; // 0x180006f90
    if (v89 == 0) {
        goto lab_0x180007724;
    } else {
        // 0x1800075db
        v94 = v47 == 0 ? v48 : llvm_bswap_i32(v48);
        *v3 = v89;
        v91 = v89;
        v93 = 0;
        v92 = v45;
        v90 = v44;
        if (v94 == 0) {
            goto lab_0x180007724;
        } else {
            goto lab_0x1800075f0;
        }
    }
  lab_0x180007724:;
    int32_t v95 = v47 == 0 ? v50 : llvm_bswap_i32(v50);
    int32_t v96 = v47 == 0 ? v51 : llvm_bswap_i32(v51);
    if ((int32_t)function_1800077e0(a1, v95, v96) == 0) {
        goto lab_0x1800077a9;
    } else {
        int32_t v97 = v47 == 0 ? v52 : llvm_bswap_i32(v52);
        int32_t v98 = v47 == 0 ? v53 : llvm_bswap_i32(v53);
        if ((int32_t)function_180007a40(a1, v97, v98) == 0) {
            goto lab_0x1800077a9;
        } else {
            uint32_t v99 = v47 == 0 ? v54 : llvm_bswap_i32(v54);
            uint32_t v100 = v47 == 0 ? v55 : llvm_bswap_i32(v55);
            if ((int32_t)function_180008650(a1, v99, (int64_t)v100, v90) == 0) {
                goto lab_0x1800077a9;
            } else {
                uint32_t v101 = v47 == 0 ? v56 : llvm_bswap_i32(v56);
                function_180008dc0(a1, (int64_t)v99, (int64_t)v101);
                goto lab_0x1800077a9;
            }
        }
    }
  lab_0x1800075f0:;
    // 0x1800075f0
    int32_t v102; // 0x180006f90
    int64_t v103; // 0x180006f90
    int64_t v104; // 0x180006f90
    int64_t v105; // bp-1144, 0x180006f90
    int64_t v106; // bp-872, 0x180006f90
    if (v92 == 0) {
        goto lab_0x1800077a9;
    } else {
        uint32_t v107 = *v4; // 0x1800075fc
        uint32_t v108 = v91 + 4; // 0x180007600
        if (v108 > v107) {
            goto lab_0x1800077a9;
        } else {
            // 0x18000760c
            *v3 = v108;
            uint32_t v109 = v91 + 8; // 0x180007627
            if (v109 > v107) {
                goto lab_0x1800077a9;
            } else {
                int32_t v110 = *v38; // 0x180007614
                int32_t v111 = *(int32_t *)(v92 + (int64_t)v91); // 0x18000761c
                uint32_t v112 = v110 == 0 ? v111 : llvm_bswap_i32(v111);
                *v3 = v109;
                int32_t v113 = *(int32_t *)(v92 + (int64_t)v108); // 0x18000763a
                v103 = v110 == 0 ? v113 : llvm_bswap_i32(v113);
                function_180005050(a1, (int64_t)v112, &v106);
                function_180005050(a1, v103, &v105);
                v102 = *v3;
                v104 = 0;
                goto lab_0x180007679;
            }
        }
    }
  lab_0x180007461_2:
    // 0x180007461
    memset(&lpMultiByteStr, 0, 260);
    uint32_t v114 = *v3; // 0x18000747f
    uint32_t v115 = *v4; // 0x180007482
    uint32_t v116 = v114 + 4; // 0x180007485
    int64_t v117; // 0x180006f90
    int64_t v118; // 0x180006f90
    int64_t v119; // 0x180006f90
    if (v116 > v115) {
        goto lab_0x1800077a9;
    } else {
        // 0x180007490
        v117 = v43;
        *v3 = v116;
        uint32_t v120 = v114 + 8; // 0x1800074ac
        if (v120 > v115) {
            goto lab_0x1800077a9;
        } else {
            int32_t v121 = *v38; // 0x180007498
            int32_t v122 = *(int32_t *)((int64_t)v114 + v57); // 0x1800074a0
            *v3 = v120;
            uint32_t v123 = v114 + 12;
            if (v123 > v115) {
                goto lab_0x1800077a9;
            } else {
                int32_t v124 = *(int32_t *)((int64_t)v116 + v57); // 0x1800074c1
                *v3 = v123;
                uint32_t v125 = v114 + 16; // 0x1800074ef
                if (v125 > v115) {
                    goto lab_0x1800077a9;
                } else {
                    int32_t v126 = *(int32_t *)((int64_t)v120 + v57); // 0x1800074e4
                    *v3 = v125;
                    uint32_t v127 = v114 + 20;
                    if (v127 > v115) {
                        goto lab_0x1800077a9;
                    } else {
                        uint32_t v128 = v121 == 0 ? v122 : llvm_bswap_i32(v122);
                        uint32_t v129 = v121 == 0 ? v124 : llvm_bswap_i32(v124);
                        uint32_t v130 = v121 == 0 ? v126 : llvm_bswap_i32(v126);
                        int32_t v131 = *(int32_t *)((int64_t)v123 + v57); // 0x180007504
                        uint32_t v132 = v121 == 0 ? v131 : llvm_bswap_i32(v131);
                        *v3 = v127;
                        int32_t v133 = *(int32_t *)((int64_t)v125 + v57); // 0x180007525
                        uint32_t v134 = v121 == 0 ? v133 : llvm_bswap_i32(v133);
                        function_180005050(a1, (int64_t)v128, &lpMultiByteStr);
                        int64_t v135; // bp-600, 0x180006f90
                        function_180005050(a1, (int64_t)v129, &v135);
                        int64_t v136; // bp-328, 0x180006f90
                        function_180005050(a1, (int64_t)v130, &v136);
                        function_180005050(a1, (int64_t)v132, &v105);
                        function_180005050(a1, (int64_t)v134, &v106);
                        v119 = a1;
                        v118 = 0;
                        if (g34 == 0) {
                            goto lab_0x1800075b9;
                        } else {
                            // 0x18000758a
                            MultiByteToWideChar(0, 1, (char *)&lpMultiByteStr, -1, (int16_t *)(520 * (0x100000000 * v117 >> 32) + (int64_t)g34), 255);
                            v119 = 0;
                            v118 = 0xffffffff;
                            goto lab_0x1800075b9;
                        }
                    }
                }
            }
        }
    }
  lab_0x180007679:;
    int32_t v137 = v102; // 0x180007679
    int32_t v138 = v137 + 4; // 0x18000767c
    int64_t v139; // 0x180006f90
    int64_t v140; // 0x180006f90
    uint32_t v141; // 0x18000769f
    if (v138 > *v4) {
        goto lab_0x1800077a9;
    } else {
        // 0x180007688
        *v3 = v138;
        int64_t v142 = v104 + 1; // 0x18000768c
        v102 = v138;
        v104 = v142 & 0xffffffff;
        if ((int32_t)v142 < 9) {
            goto lab_0x180007679;
        } else {
            // 0x18000769f
            v141 = *v4;
            uint32_t v143 = v137 + 8; // 0x1800076a2
            if (v141 < v143) {
                goto lab_0x1800077a9;
            } else {
                // 0x1800076ad
                *v3 = v143;
                uint32_t v144 = v137 + 12;
                if (v144 > v141) {
                    goto lab_0x1800077a9;
                } else {
                    // 0x1800076bb
                    *v3 = v144;
                    uint32_t v145 = v137 + 16; // 0x1800076c2
                    if (v145 > v141) {
                        goto lab_0x1800077a9;
                    } else {
                        // 0x1800076cd
                        *v3 = v145;
                        uint32_t v146 = v137 + 20;
                        if (v146 > v141) {
                            goto lab_0x1800077a9;
                        } else {
                            // 0x1800076db
                            *v3 = v146;
                            uint32_t v147 = v137 + 24; // 0x1800076e2
                            if (v147 > v141) {
                                goto lab_0x1800077a9;
                            } else {
                                // 0x1800076ed
                                *v3 = v147;
                                uint32_t v148 = v137 + 28;
                                if (v148 > v141) {
                                    goto lab_0x1800077a9;
                                } else {
                                    // 0x1800076fb
                                    *v3 = v148;
                                    v139 = v148;
                                    v140 = 0;
                                    goto lab_0x180007705;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x1800075b9:;
    int64_t v149 = v117 + 1; // 0x1800075b9
    v43 = v149 & 0xffffffff;
    v45 = v119;
    v44 = v118;
    if (v46 > (int32_t)v149) {
        goto lab_0x180007461_2;
    } else {
        goto lab_0x1800075d2;
    }
  lab_0x180007705:;
    int64_t v150 = v139 + 4; // 0x180007705
    int32_t v151 = v150;
    if (v141 < v151) {
        goto lab_0x1800077a9;
    } else {
        int64_t v152 = v140 + 1; // 0x180007710
        *v3 = v151;
        v139 = v150 & 0xffffffff;
        v140 = v152 & 0xffffffff;
        if ((int32_t)v152 < 5) {
            goto lab_0x180007705;
        } else {
            int64_t v153 = v93 + 1; // 0x18000771a
            v91 = v151;
            v93 = v153 & 0xffffffff;
            v92 = a1;
            v90 = v103;
            if (v94 > (int32_t)v153) {
                goto lab_0x1800075f0;
            } else {
                goto lab_0x180007724;
            }
        }
    }
}

// Address range: 0x1800077e0 - 0x180007a3c
int64_t function_1800077e0(int64_t a1, uint32_t a2, int32_t a3) {
    // 0x1800077e0
    if (a3 == 0) {
        // 0x180007a1d
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180007811
    *v1 = a3;
    if (a2 == 0 || (int32_t)function_1800020d0(&g31, (int64_t)a2) == 0) {
        // 0x180007a1d
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180007853
    int64_t v2; // bp-856, 0x1800077e0
    int64_t v3 = &v2; // 0x180007855
    int32_t * v4 = (int32_t *)(a1 + 12);
    int32_t * v5 = (int32_t *)(a1 + 16);
    int64_t v6 = 0; // 0x1800077e0
    int64_t v7 = 0; // 0x1800077e0
    memset(&v2, 0, 260);
    uint32_t v8 = *v1; // 0x180007871
    uint32_t v9 = *v4; // 0x180007874
    uint32_t v10 = v8 + 4; // 0x180007877
    while (v10 <= v9) {
        int64_t v11 = v7;
        int64_t v12 = v6;
        *v1 = v10;
        uint32_t v13 = v8 + 8; // 0x18000789e
        if (v13 > v9) {
            // break -> 0x180007a1d
            break;
        }
        int32_t v14 = *v5; // 0x18000788a
        int32_t v15 = *(int32_t *)((int64_t)v8 + v3); // 0x180007892
        *v1 = v13;
        uint32_t v16 = v8 + 12; // 0x1800078c1
        if (v16 > v9) {
            // break -> 0x180007a1d
            break;
        }
        int32_t v17 = *(int32_t *)((int64_t)v10 + v3); // 0x1800078b6
        *v1 = v16;
        uint32_t v18 = v8 + 16; // 0x1800078d4
        if (v18 > v9) {
            // break -> 0x180007a1d
            break;
        }
        uint32_t v19 = v14 == 0 ? v15 : llvm_bswap_i32(v15);
        uint32_t v20 = v14 == 0 ? v17 : llvm_bswap_i32(v17);
        *v1 = v18;
        int32_t v21 = *(int32_t *)((int64_t)v16 + v3); // 0x1800078e9
        uint32_t v22 = v14 == 0 ? v21 : llvm_bswap_i32(v21);
        function_180005050(a1, (int64_t)v19, &v2);
        int64_t v23; // bp-584, 0x1800077e0
        function_180005050(a1, (int64_t)v20, &v23);
        int64_t v24; // bp-312, 0x1800077e0
        function_180005050(a1, (int64_t)v22, &v24);
        if (a1 == 0) {
            // break -> 0x180007a1d
            break;
        }
        int32_t v25 = *v1; // 0x180007930
        uint32_t v26 = *v4; // 0x180007933
        uint32_t v27 = v25 + 4; // 0x180007936
        if (v27 > v26) {
            // break -> 0x180007a1d
            break;
        }
        // 0x180007941
        *v1 = v27;
        uint32_t v28 = v25 + 8; // 0x180007948
        if (v28 > v26) {
            // break -> 0x180007a1d
            break;
        }
        // 0x180007953
        *v1 = v28;
        uint32_t v29 = v25 + 12; // 0x18000795a
        if (v29 > v26) {
            // break -> 0x180007a1d
            break;
        }
        // 0x180007965
        *v1 = v29;
        int32_t v30 = v25 + 16; // 0x18000797e
        if (v30 > v26) {
            // break -> 0x180007a1d
            break;
        }
        int32_t v31 = *(int32_t *)((int64_t)v28 + a1); // 0x180007975
        int32_t v32 = *v5 == 0 ? v31 : llvm_bswap_i32(v31);
        *v1 = v30;
        int32_t v33 = v30; // 0x18000798e
        v33 += 4;
        if (v33 > v26) {
            // break (via goto) -> 0x180007a1d
            goto lab_0x180007a1d;
        }
        // 0x18000799e
        *v1 = v33;
        int64_t v34 = 1; // 0x1800079a2
        int64_t v35 = v34 & 0xffffffff; // 0x1800079a7
        while ((int32_t)v34 < 8) {
            // 0x180007990
            v33 += 4;
            if (v33 > v26) {
                // break (via goto) -> 0x180007a1d
                goto lab_0x180007a1d;
            }
            // 0x18000799e
            *v1 = v33;
            v34 = v35 + 1;
            v35 = v34 & 0xffffffff;
        }
        // 0x1800079a9
        if (g36 != 0) {
            int64_t v36 = v3; // 0x1800079cb
            int64_t v37 = 312 * (0x100000000 * v11 >> 32) + 52 + g36; // 0x1800079cb
            char v38 = *(char *)v36; // 0x1800079d0
            *(char *)v37 = v38;
            v36++;
            v37++;
            while (v38 != 0) {
                // 0x1800079d0
                v38 = *(char *)v36;
                *(char *)v37 = v38;
                v36++;
                v37++;
            }
            // 0x1800079e2
            *(int32_t *)(v12 + 40 + g36) = v32;
        }
        int64_t v39 = v11 + 1; // 0x1800079ee
        v6 = v12 + 312;
        v7 = v39 & 0xffffffff;
        if ((int32_t)v39 >= a2) {
            // break -> 0x180007a1d
            break;
        }
        memset(&v2, 0, 260);
        v8 = *v1;
        v9 = *v4;
        v10 = v8 + 4;
    }
    // 0x180007a1d
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180007a40 - 0x180007d31
int64_t function_180007a40(int64_t a1, uint32_t a2, int32_t a3) {
    // 0x180007a40
    if (a3 == 0) {
        // 0x180007d0e
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180007a71
    *v1 = a3;
    if (a2 == 0 || (int32_t)function_180001b50(&g31, (int64_t)a2) == 0) {
        // 0x180007d0e
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v2 = *v1; // 0x180007aaa
    int64_t v3; // bp-328, 0x180007a40
    int64_t v4 = &v3;
    int32_t * v5 = (int32_t *)(a1 + 12);
    int32_t * v6 = (int32_t *)(a1 + 16);
    int64_t v7 = 0; // 0x180007a40
    int64_t v8; // bp-600, 0x180007a40
    memset(&v8, 0, 260);
    memset(&v3, 0, 260);
    uint32_t v9 = *v1; // 0x180007af3
    uint32_t v10 = *v5; // 0x180007af6
    uint32_t v11 = v9 + 4; // 0x180007afa
    int32_t v12; // 0x180007a40
    int64_t v13; // 0x180007a40
    int64_t v14; // 0x180007a40
    while (v11 <= v10) {
        int64_t v15 = v7;
        *v1 = v11;
        uint32_t v16 = v9 + 8; // 0x180007b21
        if (v16 > v10) {
            // break -> 0x180007d0e
            break;
        }
        int32_t v17 = *v6; // 0x180007b0e
        int32_t v18 = *(int32_t *)((int64_t)v9 + v4); // 0x180007b16
        *v1 = v16;
        uint32_t v19 = v9 + 12; // 0x180007b46
        if (v19 > v10) {
            // break -> 0x180007d0e
            break;
        }
        int32_t v20 = *(int32_t *)((int64_t)v11 + v4); // 0x180007b3a
        *v1 = v19;
        uint32_t v21 = v9 + 16; // 0x180007b5a
        if (v21 > v10) {
            // break -> 0x180007d0e
            break;
        }
        uint32_t v22 = v17 == 0 ? v18 : llvm_bswap_i32(v18);
        uint32_t v23 = v17 == 0 ? v20 : llvm_bswap_i32(v20);
        *v1 = v21;
        function_180005050(a1, (int64_t)v22, &v8);
        function_180005050(a1, (int64_t)v23, &v3);
        int64_t v24 = a1; // 0x180007b91
        if (g38 != NULL) {
            int64_t v25 = 760 * (0x100000000 * v15 >> 32);
            int64_t v26 = &v8; // 0x180007bac
            int64_t v27 = v25 + 232 + (int64_t)g38; // 0x180007bac
            char v28 = *(char *)v26; // 0x180007bb0
            *(char *)v27 = v28;
            v26++;
            v27++;
            while (v28 != 0) {
                // 0x180007bb0
                v28 = *(char *)v26;
                *(char *)v27 = v28;
                v26++;
                v27++;
            }
            int64_t v29 = v4; // 0x180007bda
            int64_t v30 = v25 + 492 + (int64_t)g38; // 0x180007bda
            char v31 = *(char *)v29; // 0x180007be0
            v29++;
            *(char *)v30 = v31;
            v30++;
            v24 = v29;
            while (v31 != 0) {
                // 0x180007be0
                v31 = *(char *)v29;
                v29++;
                *(char *)v30 = v31;
                v30++;
                v24 = v29;
            }
        }
        int64_t v32 = v15 + 1; // 0x180007bf1
        v7 = v32 & 0xffffffff;
        if ((int32_t)v32 >= a2) {
            // 0x180007c11
            *v1 = v2;
            v14 = v24;
            v13 = 0;
            v12 = v2;
            goto lab_0x180007c11_2;
        }
        memset(&v8, 0, 260);
        memset(&v3, 0, 260);
        v9 = *v1;
        v10 = *v5;
        v11 = v9 + 4;
    }
  lab_0x180007d0e:
    // 0x180007d0e
    __security_check_cookie(g17);
    return &g47;
  lab_0x180007c11_2:
    // 0x180007c11
    if (v14 == 0) {
        goto lab_0x180007d0e;
    } else {
        uint32_t v33 = *v5; // 0x180007c2e
        uint32_t v34 = v12 + 4; // 0x180007c32
        if (v33 < v34) {
            goto lab_0x180007d0e;
        } else {
            int32_t v35 = *v6; // 0x180007c3f
            *v1 = v34;
            uint32_t v36 = v12 + 8; // 0x180007c55
            if (v36 > v33) {
                goto lab_0x180007d0e;
            } else {
                int32_t v37 = *(int32_t *)(v14 + (int64_t)v12); // 0x180007c49
                *v1 = v36;
                uint32_t v38 = v12 + 12; // 0x180007c76
                if (v38 > v33) {
                    goto lab_0x180007d0e;
                } else {
                    int32_t v39 = *(int32_t *)(v14 + (int64_t)v34); // 0x180007c6b
                    *v1 = v38;
                    uint32_t v40 = v12 + 16; // 0x180007c89
                    if (v40 > v33) {
                        goto lab_0x180007d0e;
                    } else {
                        uint32_t v41 = v35 == 0 ? v37 : llvm_bswap_i32(v37);
                        uint32_t v42 = v35 == 0 ? v39 : llvm_bswap_i32(v39);
                        *v1 = v40;
                        function_180005050(a1, (int64_t)v41, &v3);
                        function_180005050(a1, (int64_t)v42, &v8);
                        int32_t v43 = *v1; // 0x180007cca
                        if ((int32_t)function_180007d40(a1, 760 * (0x100000000 * v13 >> 32) + (int64_t)g38) == 0) {
                            goto lab_0x180007d0e;
                        } else {
                            int64_t v44 = v13 + 1; // 0x180007cda
                            *v1 = v43;
                            v14 = a1;
                            v13 = v44 & 0xffffffff;
                            v12 = v43;
                            if ((int32_t)v44 < a2) {
                                goto lab_0x180007c11_2;
                            } else {
                                goto lab_0x180007d0e;
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x180007d40 - 0x18000864e
int64_t function_180007d40(int64_t a1, int64_t a2) {
    // 0x180007d40
    if (a2 == 0) {
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180007d91
    int64_t v1; // 0x180007d40
    int32_t v2 = v1; // 0x180007d91
    if (v2 == 0) {
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x180007d9f
    *v3 = v2;
    int32_t v4; // bp-520, 0x180007d40
    int64_t v5 = &v4; // 0x180007da3
    function_1800010c0(v5);
    int32_t v6 = *v3; // 0x180007db9
    uint32_t v7 = v6 + 4; // 0x180007dbc
    int32_t * v8 = (int32_t *)(a1 + 12); // 0x180007dbf
    uint32_t v9 = *v8; // 0x180007dbf
    if (v7 > v9) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180007dcc
    *v3 = v7;
    uint32_t v10 = v6 + 8;
    if (v10 > v9) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180007ddb
    *v3 = v10;
    uint32_t v11 = v6 + 12; // 0x180007e1f
    if (v11 > v9) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v12 = *(int32_t *)((int64_t)v7 + v5); // 0x180007de7
    int32_t * v13 = (int32_t *)(a1 + 16); // 0x180007def
    int32_t v14 = *v13; // 0x180007def
    *v3 = v11;
    uint32_t v15 = v6 + 16; // 0x180007e69
    if (v15 > v9) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v16 = *(int32_t *)((int64_t)v10 + v5); // 0x180007e36
    *v3 = v15;
    uint32_t v17 = v6 + 20; // 0x180007e7c
    if (v17 > v9) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v18 = v14 == 0 ? v16 : llvm_bswap_i32(v16);
    *v3 = v17;
    if (v18 == 0) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v19 = *(int32_t *)((int64_t)v15 + v5); // 0x180007e92
    int32_t v20 = 0; // bp-576, 0x180007ee1
    int32_t v21 = 0; // bp-560, 0x180007ef2
    if ((int32_t)function_18001d5c0(a1, (int64_t *)&v20) == 0 || a1 == 0 | (int32_t)function_18001d5c0(a1, (int64_t *)&v21) == 0) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v22 = *v8; // 0x180007f30
    uint32_t v23 = *v3; // 0x180007f34
    uint32_t v24 = v23 + 4; // 0x180007f37
    if (v24 > v22) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180007f43
    *v3 = v24;
    uint32_t v25 = v23 + 8; // 0x180007f90
    if (v25 > v22) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v26 = *(int32_t *)((int64_t)v23 + a1); // 0x180007f4f
    int32_t v27 = *v13; // 0x180007f58
    *v3 = v25;
    uint32_t v28 = v23 + 12; // 0x180007fdc
    if (v28 > v22) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v29 = *(int32_t *)((int64_t)v24 + a1); // 0x180007fa9
    *v3 = v28;
    uint32_t v30 = v23 + 16; // 0x180007ff0
    if (v30 > v22) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180007ffc
    *v3 = v30;
    uint32_t v31 = v23 + 20; // 0x180008045
    if (v31 > v22) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v32 = *(int32_t *)((int64_t)v28 + a1); // 0x180008008
    *v3 = v31;
    uint32_t v33 = v23 + 24; // 0x180008059
    if (v33 > v22) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180008065
    *v3 = v33;
    uint32_t v34 = v23 + 28; // 0x1800080ae
    if (v34 > v22) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v35 = *(int32_t *)((int64_t)v31 + a1); // 0x180008071
    *v3 = v34;
    int32_t v36 = v23 + 32; // 0x1800080c2
    if (v36 > v22) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t nmemb = v27 == 0 ? v29 : llvm_bswap_i32(v29);
    *v3 = v36;
    int32_t v37 = *(int32_t *)((int64_t)v34 + a1); // 0x1800080da
    int32_t v38 = v36; // 0x180008118
    int64_t v39; // bp-508, 0x180007d40
    if (nmemb != 0) {
        int32_t v40 = v23 + 36; // 0x180008123
        if (v40 > v22) {
            // 0x180008608
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            // 0x180008624
            __security_check_cookie(g17);
            return &g47;
        }
        int64_t v41 = 0; // 0x180007d40
        int64_t v42 = &v39;
        *v3 = v40;
        int32_t v43; // 0x18000813b
        if (v4 > (int32_t)v41) {
            // 0x180008173
            v43 = *(int32_t *)((int64_t)v36 + a1);
            *(int32_t *)v42 = v27 == 0 ? v43 : llvm_bswap_i32(v43);
        }
        int64_t v44 = v41 + 1; // 0x180008176
        v38 = v40;
        while (nmemb > (int32_t)v44) {
            int32_t v45 = *v3;
            int32_t v46 = v45 + 4; // 0x180008123
            v41 = v44 & 0xffffffff;
            if (v46 > v22) {
                // 0x180008608
                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                // 0x180008624
                __security_check_cookie(g17);
                return &g47;
            }
            uint32_t v47 = v45;
            v42 += 16;
            *v3 = v46;
            if (v4 > (int32_t)v41) {
                // 0x180008173
                v43 = *(int32_t *)((int64_t)v47 + a1);
                *(int32_t *)v42 = v27 == 0 ? v43 : llvm_bswap_i32(v43);
            }
            // 0x180008176
            v44 = v41 + 1;
            v38 = v46;
        }
    }
    uint32_t v48 = v27 == 0 ? v32 : llvm_bswap_i32(v32);
    int32_t v49 = v38; // 0x180008190
    if (v48 != 0) {
        // 0x180008192
        int64_t v50; // bp-504, 0x180007d40
        int64_t v51 = &v50; // 0x180008196
        int64_t v52 = 0; // 0x180008196
        uint32_t v53 = *v3; // 0x1800081a0
        int32_t v54 = v53 + 4; // 0x1800081a3
        while (v54 <= v22) {
            int64_t v55 = v51;
            *v3 = v54;
            if (v4 > (int32_t)v52) {
                int32_t v56 = *(int32_t *)((int64_t)v53 + a1); // 0x1800081bb
                *(int32_t *)v55 = v27 == 0 ? v56 : llvm_bswap_i32(v56);
            }
            int64_t v57 = v52 + 1; // 0x1800081f7
            v51 = v55 + 16;
            v52 = v57 & 0xffffffff;
            v49 = v54;
            if (v48 <= (int32_t)v57) {
                goto lab_0x180008207;
            }
            v53 = *v3;
            v54 = v53 + 4;
        }
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x180008207:;
    uint32_t v58 = v27 == 0 ? v35 : llvm_bswap_i32(v35);
    int64_t v59 = 0; // 0x18000820f
    int32_t v60 = v49; // 0x18000820f
    if (v58 != 0) {
        int32_t v61 = *v3; // 0x180008214
        int64_t v62 = 0; // 0x180008228
        v61 += 4;
        while (v61 <= v22) {
            // 0x180008220
            *v3 = v61;
            int64_t v63 = v62 + 1; // 0x180008228
            v62 = v63 & 0xffffffff;
            v59 = v62;
            v60 = v61;
            if (v58 <= (int32_t)v63) {
                goto lab_0x18000822e;
            }
            v61 += 4;
        }
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x18000822e:;
    uint32_t v64 = v27 == 0 ? v37 : llvm_bswap_i32(v37);
    int32_t v65 = v60; // 0x180008231
    if (v60 < v64) {
        while (v65 + 4 <= v22) {
            int32_t v66 = *v3 + 4; // 0x180008240
            *v3 = v66;
            v65 = v66;
            if (v66 >= v64) {
                goto lab_0x18000824d;
            }
        }
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x18000824d:
    if (v64 != 0) {
        // 0x180008252
        *v3 = v64;
    }
    int32_t v67 = v27 == 0 ? v26 : llvm_bswap_i32(v26);
    int64_t v68; // 0x180007d40
    if (nmemb < 2) {
        // 0x18000827a
        v68 = v59;
        if (nmemb == 1) {
            goto lab_0x180008287;
        } else {
            goto lab_0x1800082cf_2;
        }
    } else {
        // 0x18000827a
        int64_t base; // bp-512, 0x180007d40
        qsort(&base, nmemb, 16, (int32_t (*)(int64_t *, int64_t *))0x180001600);
        goto lab_0x180008287;
    }
  lab_0x1800082c6:;
    // 0x1800082c6
    int64_t v69; // 0x180007d40
    int64_t v70 = v69 + 16; // 0x1800082c6
    int64_t v71 = v70; // 0x1800082cd
    uint64_t v72; // 0x180008293
    int64_t v73 = v72; // 0x1800082cd
    v68 = v70;
    uint64_t v74; // 0x180007d40
    if (v72 >= v74) {
        // break -> 0x1800082cf
        goto lab_0x1800082cf_2;
    }
    goto lab_0x180008290;
  lab_0x180008287:
    // 0x180008287
    v74 = (int64_t)nmemb;
    v71 = &v39;
    v73 = 0;
    while (true) {
      lab_0x180008290:
        // 0x180008290
        v69 = v71;
        v72 = v73 + 1 & 0xffffffff;
        int32_t v75 = v67; // 0x180008299
        if (v72 < v74) {
            // 0x18000829b
            v75 = *(int32_t *)(v69 + 16);
        }
        int32_t v76 = v75;
        int32_t v77 = *(int32_t *)(v69 | 4); // 0x18000829e
        if (v77 != 6) {
            if (v77 != 2) {
                goto lab_0x1800082c6;
            } else {
                int32_t v78 = v76 - *(int32_t *)v69; // 0x1800082b8
                // 0x1800082bf
                *(int32_t *)(v69 + 8) = (v78 - (v78 >> 31)) / 2;
                goto lab_0x1800082c6;
            }
        } else {
            int32_t v79 = v76 - *(int32_t *)v69; // 0x1800082a6
            // 0x1800082bf
            *(int32_t *)(v69 + 8) = ((v79 >> 31 & 3) + v79) / 4;
            goto lab_0x1800082c6;
        }
    }
    goto lab_0x1800082cf_2;
  lab_0x1800082cf_2:;
    int32_t v80 = *v3; // 0x1800082cf
    int64_t v81 = v68; // 0x1800082db
    if (v80 != 0) {
        int32_t v82 = v14 == 0 ? v12 : llvm_bswap_i32(v12);
        int64_t v83 = function_180005100(a1, a2, v82, v80, (int64_t)v67, (int64_t *)&v4); // 0x1800082f6
        v81 = a1;
        if ((int32_t)v83 == 0) {
            // 0x180008608
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            // 0x180008624
            __security_check_cookie(g17);
            return &g47;
        }
    }
    int32_t v84 = v14 == 0 ? v19 : llvm_bswap_i32(v19);
    if (v84 != 0) {
        // 0x18000830b
        *v3 = v84;
    }
    if (v81 == 0) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v85 = *v8; // 0x18000831a
    int32_t v86 = *v3; // 0x18000831e
    uint32_t v87 = v86 + 4; // 0x180008321
    if (v87 > v85) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000832d
    *v3 = v87;
    uint32_t v88 = v86 + 8; // 0x180008334
    if (v88 > v85) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180008340
    *v3 = v88;
    uint32_t v89 = v86 + 12; // 0x18000837f
    if (v89 > v85) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v90 = *(int32_t *)(v81 + (int64_t)v87); // 0x18000834c
    *v3 = v89;
    uint32_t v91 = v86 + 16; // 0x180008393
    if (v91 > v85) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000839f
    *v3 = v91;
    uint32_t v92 = v86 + 20; // 0x1800083a6
    if (v92 > v85) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800083b2
    *v3 = v92;
    uint32_t v93 = v86 + 24; // 0x1800083b9
    if (v93 > v85) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v94 = *v13 == 0 ? v90 : llvm_bswap_i32(v90);
    *v3 = v93;
    int64_t v95; // bp-344, 0x180007d40
    function_180005050(a1, (int64_t)v94, &v95);
    uint32_t v96 = *v8; // 0x1800083e4
    uint32_t v97 = *v3; // 0x1800083e8
    uint32_t v98 = v97 + 4; // 0x1800083eb
    if (v98 > v96) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800083f7
    *v3 = v98;
    uint32_t v99 = v97 + 8; // 0x18000843a
    if (v99 > v96) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v100 = *(int32_t *)((int64_t)v97 + a1); // 0x180008403
    int32_t v101 = *v13; // 0x180008407
    *v3 = v99;
    uint32_t v102 = v97 + 10; // 0x180008484
    if (v102 > v96) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v103 = *(int32_t *)((int64_t)v98 + a1); // 0x180008451
    *v3 = v102;
    uint32_t v104 = v97 + 12; // 0x180008497
    if (v104 > v96) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800084a3
    *v3 = v104;
    v21 = 0;
    v20 = 0;
    if ((int32_t)function_18001d5c0(a1, (int64_t *)&v21) == 0 || (int32_t)function_18001d5c0(a1, (int64_t *)&v20) == 0) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v105 = v101 == 0 ? v103 : llvm_bswap_i32(v103);
    if (*v3 < v105) {
        // 0x1800084e9
        *v3 = v105;
    }
    uint64_t v106 = 0xaaaaaaab * (int64_t)(v101 == 0 ? v100 : llvm_bswap_i32(v100)); // 0x1800084f2
    if (v106 < 0x200000000) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    uint64_t v107 = v106 / 0x200000000; // 0x1800084f2
    if ((int32_t)function_180001e80(a2, v107) == 0) {
        // 0x180008608
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x180008624
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t * v108 = (int64_t *)(a2 + 8);
    int64_t v109 = a2; // 0x180007d40
    int64_t v110 = 0; // 0x180007d40
    int64_t v111 = 0; // 0x180007d40
    while (v109 != 0) {
        uint32_t v112 = *v8; // 0x18000852c
        uint32_t v113 = *v3; // 0x180008530
        uint32_t v114 = v113 + 2; // 0x180008533
        if (v114 > v112) {
            // break -> 0x180008608
            break;
        }
        int64_t v115 = v110;
        *v3 = v114;
        uint32_t v116 = v113 + 4; // 0x180008568
        if (v116 > v112) {
            // break -> 0x180008608
            break;
        }
        int16_t v117 = *(int16_t *)(v109 + (int64_t)v113); // 0x18000854b
        int32_t v118 = *v13; // 0x180008550
        *v3 = v116;
        uint32_t v119 = v113 + 6; // 0x18000859b
        if (v119 > v112) {
            // break -> 0x180008608
            break;
        }
        int16_t v120 = *(int16_t *)(v109 + (int64_t)v114); // 0x180008581
        *v3 = v119;
        int16_t v121 = *(int16_t *)(v109 + (int64_t)v116); // 0x1800085ae
        int64_t v122 = *v108; // 0x1800085c4
        int64_t v123 = 0; // 0x1800085cb
        if (v122 != 0) {
            uint16_t v124 = v118 == 0 ? v117 : llvm_bswap_i16(v117);
            uint16_t v125 = v118 == 0 ? v120 : llvm_bswap_i16(v120);
            uint16_t v126 = v118 == 0 ? v121 : llvm_bswap_i16(v121);
            *(int32_t *)(v115 + 4 + v122) = (int32_t)v124;
            *(int32_t *)(v115 + 8 + *v108) = (int32_t)v125;
            *(int32_t *)(v115 + 12 + *v108) = (int32_t)v126;
            v123 = v126;
        }
        int64_t v127 = v111 + 1; // 0x1800085ef
        v109 = v123;
        v110 = v115 + 20;
        v111 = v127;
        if (v127 >= v107) {
            // break -> 0x180008608
            break;
        }
    }
    // 0x180008608
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    // 0x180008624
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180008650 - 0x180008861
int64_t function_180008650(int64_t a1, uint32_t a2, int64_t a3, int64_t a4) {
    int32_t v1 = a3; // 0x180008677
    if (v1 == 0) {
        // 0x180008841
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x180008688
    *v2 = v1;
    if (a2 == 0) {
        // 0x1800086ff
        *v2 = v1;
        // 0x180008841
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 12);
    int32_t * v4 = (int32_t *)(a1 + 16);
    int64_t v5 = 0; // 0x180008650
    int64_t v6; // 0x180008650
    int64_t str; // bp-312, 0x180008650
    int64_t v7; // 0x180008722
    int64_t v8; // 0x180008650
    while (a1 != 0) {
        int32_t v9 = *v2; // 0x18000869c
        uint32_t v10 = *v3; // 0x18000869f
        uint32_t v11 = v9 + 4; // 0x1800086a3
        if (v11 > v10) {
            // break -> 0x180008841
            break;
        }
        // 0x1800086af
        *v2 = v11;
        uint32_t v12 = v9 + 8; // 0x1800086b6
        if (v12 > v10) {
            // break -> 0x180008841
            break;
        }
        // 0x1800086c2
        *v2 = v12;
        uint32_t v13 = v9 + 12; // 0x1800086d9
        if (v13 > v10) {
            // break -> 0x180008841
            break;
        }
        int32_t v14 = *(int32_t *)((int64_t)v11 + a1); // 0x1800086d2
        uint32_t v15 = *v4 == 0 ? v14 : llvm_bswap_i32(v14);
        *v2 = v13;
        function_180005050(a1, (int64_t)v15, &str);
        int64_t v16 = v5 + 1; // 0x1800086f7
        v5 = v16 & 0xffffffff;
        if ((int32_t)v16 >= a2) {
            // 0x1800086ff
            *v2 = v1;
            v7 = &str;
            int64_t v17; // bp-344, 0x180008650
            v8 = (int64_t)&v17 + 32;
            v6 = 0;
            goto lab_0x180008720;
        }
    }
  lab_0x180008841:
    // 0x180008841
    __security_check_cookie(g17);
    return &g47;
  lab_0x180008720:
    // 0x180008720
    memset(&str, 0, 260);
    int32_t v18 = *v2; // 0x18000873e
    uint32_t v19 = *v3; // 0x180008741
    uint32_t v20 = v18 + 4; // 0x180008745
    int32_t v21; // 0x180008650
    int32_t v22; // 0x180008650
    int64_t v23; // 0x180008650
    uint32_t v24; // 0x18000877f
    int32_t v25; // 0x18000876c
    int32_t v26; // 0x180008798
    if (v20 > v19) {
        goto lab_0x180008841;
    } else {
        // 0x180008751
        *v2 = v20;
        uint32_t v27 = v18 + 8; // 0x180008758
        if (v27 > v19) {
            goto lab_0x180008841;
        } else {
            // 0x180008764
            *v2 = v27;
            v24 = v18 + 12;
            if (v24 > v19) {
                goto lab_0x180008841;
            } else {
                // 0x18000878c
                v25 = *v4;
                int32_t v28 = *(int32_t *)((int64_t)v20 + v7); // 0x180008774
                int32_t v29 = v25 == 0 ? v28 : llvm_bswap_i32(v28);
                *v2 = v24;
                v26 = *(int32_t *)((int64_t)v27 + v7);
                if (v29 < 101) {
                    goto lab_0x1800087fa;
                } else {
                    // 0x1800087a8
                    *v2 = v29;
                    int32_t v30 = v29 + 1; // 0x1800087b3
                    v21 = v30;
                    v23 = 0;
                    v22 = v29;
                    if (v30 > v19) {
                        goto lab_0x1800087fa;
                    } else {
                        goto lab_0x1800087ba;
                    }
                }
            }
        }
    }
  lab_0x1800087fa:
    // 0x1800087fa
    if (strstr((char *)&str, "-skin") == NULL) {
        goto lab_0x180008821;
    } else {
        uint32_t v31 = v25 == 0 ? v26 : llvm_bswap_i32(v26);
        function_180008870(a1, (int64_t)v31);
        goto lab_0x180008821;
    }
  lab_0x180008821:;
    int64_t v32 = v6 + 1; // 0x180008821
    v6 = v32 & 0xffffffff;
    if ((int32_t)v32 < a2) {
        goto lab_0x180008720;
    } else {
        goto lab_0x180008841;
    }
  lab_0x1800087ba:;
    int64_t v33 = v23;
    *v2 = v21;
    char v34 = *(char *)((int64_t)v22 + v7); // 0x1800087c2
    if (v33 > 259) {
        goto lab_0x1800087d4;
    } else {
        // 0x1800087d0
        *(char *)(v33 + v8) = v34;
        goto lab_0x1800087d4;
    }
  lab_0x1800087d4:;
    int64_t v35 = v33 + 1; // 0x1800087d4
    if (v34 != 0) {
        int32_t v36 = *v2;
        int32_t v37 = v36 + 1; // 0x1800087b3
        v21 = v37;
        v23 = v35;
        v22 = v36;
        if (v37 > v19) {
            goto lab_0x1800087fa;
        } else {
            goto lab_0x1800087ba;
        }
    } else {
        if (v35 > 259) {
            // 0x1800087f6
            *v2 = v24;
            goto lab_0x1800087fa;
        } else {
            // 0x1800087e4
            *(char *)(v35 + v8) = v34;
            // 0x1800087f6
            *v2 = v24;
            goto lab_0x1800087fa;
        }
    }
}

// Address range: 0x180008870 - 0x180008db1
int64_t function_180008870(int64_t a1, int64_t a2) {
    int32_t v1 = a2;
    if (v1 == 0) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int128_t v2 = __asm_movaps(g8); // 0x18000889a
    int128_t v3 = __asm_movaps(g9); // 0x1800088a1
    int128_t v4 = __asm_movaps_9(v2); // bp-392, 0x1800088ab
    int128_t v5 = __asm_movaps(g10); // 0x1800088b0
    __asm_movaps_9(v3);
    int128_t v6 = __asm_movaps(g12); // 0x1800088bc
    __asm_movaps_9(v5);
    __asm_movaps_9(v6);
    int32_t * v7 = (int32_t *)(a1 + 8); // 0x1800088d3
    *v7 = v1;
    if (a1 == 0) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v8 = v1 + 4; // 0x1800088e2
    int32_t * v9 = (int32_t *)(a1 + 12); // 0x1800088e2
    if (*v9 < v8) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800088eb
    *v7 = v8;
    int32_t * v10 = (int32_t *)(a1 + 16); // 0x1800088f1
    int32_t v11 = *(int32_t *)((a2 & 0xffffffff) + a1); // 0x1800088fd
    if ((int32_t)function_18001d8d0(a1, &v4) == 0) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v12 = *v10 == 0 ? v11 : llvm_bswap_i32(v11);
    int64_t v13; // bp-328, 0x180008870
    function_180005050(a1, (int64_t)v12, &v13);
    uint32_t v14 = *v7; // 0x180008935
    uint32_t v15 = *v9; // 0x180008939
    uint32_t v16 = v14 + 4; // 0x18000893c
    if (v16 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v17 = *v10; // 0x180008949
    *v7 = v16;
    uint32_t v18 = v14 + 8;
    if (v18 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v19 = *(int32_t *)((int64_t)v14 + a1); // 0x18000895d
    *v7 = v18;
    uint32_t v20 = v14 + 12; // 0x18000898c
    if (v20 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v21 = *(int32_t *)((int64_t)v16 + a1); // 0x180008980
    *v7 = v20;
    uint32_t v22 = v14 + 16; // 0x1800089b7
    if (v22 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v23 = *(int32_t *)((int64_t)v18 + a1); // 0x1800089ac
    *v7 = v22;
    uint32_t v24 = v14 + 20; // 0x1800089e3
    if (v24 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v25 = *(int32_t *)((int64_t)v20 + a1); // 0x1800089d7
    *v7 = v24;
    uint32_t v26 = v14 + 24; // 0x180008a0f
    if (v26 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v27 = *(int32_t *)((int64_t)v22 + a1); // 0x180008a03
    *v7 = v26;
    uint32_t v28 = v14 + 28; // 0x180008a3b
    if (v28 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v29 = *(int32_t *)((int64_t)v24 + a1); // 0x180008a2f
    *v7 = v28;
    uint32_t v30 = v14 + 32; // 0x180008a67
    if (v30 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v31 = *(int32_t *)((int64_t)v26 + a1); // 0x180008a5b
    *v7 = v30;
    uint32_t v32 = v14 + 36; // 0x180008a92
    if (v32 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v33 = *(int32_t *)((int64_t)v28 + a1); // 0x180008a7f
    *v7 = v32;
    uint32_t v34 = v14 + 40; // 0x180008abd
    if (v34 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v35 = *(int32_t *)((int64_t)v30 + a1); // 0x180008aaa
    *v7 = v34;
    uint32_t v36 = v14 + 44; // 0x180008ae8
    if (v36 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v37 = *(int32_t *)((int64_t)v32 + a1); // 0x180008ad5
    *v7 = v36;
    uint32_t v38 = v14 + 48; // 0x180008b13
    if (v38 > v15) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v39 = v17 == 0 ? v19 : llvm_bswap_i32(v19);
    int32_t v40 = v17 == 0 ? v21 : llvm_bswap_i32(v21);
    int32_t v41 = *(int32_t *)((int64_t)v34 + a1); // 0x180008b00
    *v7 = v38;
    int32_t v42 = *(int32_t *)((int64_t)v36 + a1); // 0x180008b29
    int32_t v43 = v40 == 0 ? v38 : v40;
    *v7 = v43;
    if (v39 != 0) {
        int32_t v44 = v43 + 4; // 0x180008b5f
        if (v44 > *v9) {
            // 0x180008d78
            __security_check_cookie(g17);
            return &g47;
        }
        *v7 = v44;
        int32_t v45 = *(int32_t *)((int64_t)v43 + a1); // 0x180008b75
        uint32_t v46 = *v10 == 0 ? v45 : llvm_bswap_i32(v45);
        function_180005050(a1, (int64_t)v46, &v13);
        int64_t v47 = 1; // 0x180008b8f
        while (v39 > (int32_t)v47) {
            int32_t v48 = *v7;
            int32_t v49 = v48 + 4; // 0x180008b5f
            if (v49 > *v9) {
                // 0x180008d78
                __security_check_cookie(g17);
                return &g47;
            }
            *v7 = v49;
            v45 = *(int32_t *)((int64_t)v48 + a1);
            v46 = *v10 == 0 ? v45 : llvm_bswap_i32(v45);
            function_180005050(a1, (int64_t)v46, &v13);
            v47 = (v47 & 0xffffffff) + 1;
        }
    }
    int32_t v50 = v17 == 0 ? v25 : llvm_bswap_i32(v25);
    if (v50 != 0) {
        // 0x180008b9c
        *v7 = v50;
    }
    uint32_t v51 = v17 == 0 ? v23 : llvm_bswap_i32(v23);
    int64_t v52 = 0; // 0x180008ba7
    if (v51 >= 16) {
        int128_t v53 = __asm_movaps(g8); // 0x180008bb0
        int128_t v54 = __asm_movaps(g9); // 0x180008bbc
        v4 = __asm_movaps_9(v53);
        int128_t v55 = __asm_movaps(g10); // 0x180008bcb
        __asm_movaps_9(v54);
        int128_t v56 = __asm_movaps(g12); // 0x180008bd7
        __asm_movaps_9(v55);
        __asm_movaps_9(v56);
        while ((int32_t)function_18001d8d0(a1, &v4) != 0) {
            int64_t v57 = v52 + 1; // 0x180008bfb
            v52 = v57 & 0xffffffff;
            if (v51 / 16 <= (int32_t)v57) {
                goto lab_0x180008c01;
            }
            v53 = __asm_movaps(g8);
            v54 = __asm_movaps(g9);
            v4 = __asm_movaps_9(v53);
            v55 = __asm_movaps(g10);
            __asm_movaps_9(v54);
            v56 = __asm_movaps(g12);
            __asm_movaps_9(v55);
            __asm_movaps_9(v56);
        }
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x180008c01:;
    int32_t v58 = v17 == 0 ? v29 : llvm_bswap_i32(v29);
    if (v58 != 0) {
        // 0x180008c06
        *v7 = v58;
    }
    // 0x180008c0a
    if ((v17 == 0 ? v27 : llvm_bswap_i32(v27)) != 0) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v59 = v17 == 0 ? v33 : llvm_bswap_i32(v33);
    if (v59 != 0) {
        // 0x180008c3f
        *v7 = v59;
    }
    // 0x180008c42
    if ((v17 == 0 ? v31 : llvm_bswap_i32(v31)) != 0) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v60 = v17 == 0 ? v35 : llvm_bswap_i32(v35);
    int32_t v61 = v17 == 0 ? v37 : llvm_bswap_i32(v37);
    int32_t v62 = *v7; // 0x180008c71
    int32_t v63 = v62 & -4; // 0x180008c7b
    int32_t v64 = v61 != 0 ? v61 : (v62 & 3) == 0 ? v63 : v63 + 4; // 0x180008c8c
    *v7 = v64;
    if (v60 != 0) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v65 = v17 == 0 ? v41 : llvm_bswap_i32(v41);
    int32_t v66 = v17 == 0 ? v42 : llvm_bswap_i32(v42);
    int32_t v67 = v64 & -4; // 0x180008ccc
    *v7 = v66 != 0 ? v66 : (v64 & 3) == 0 ? v67 : v67 + 4;
    if (v65 == 0) {
        // 0x180008d78
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v68 = 0; // 0x180008870
    int64_t v69 = 0; // bp-432, 0x180008d01
    int32_t v70 = 0; // bp-416, 0x180008d12
    while ((int32_t)function_18001d5c0(a1, &v69) != 0) {
        // 0x180008d23
        if ((int32_t)function_18001d5c0(a1, (int64_t *)&v70) == 0) {
            // break -> 0x180008d78
            break;
        }
        int64_t v71 = v68 + 1; // 0x180008d34
        v68 = v71 & 0xffffffff;
        if (v65 <= (int32_t)v71) {
            // break -> 0x180008d78
            break;
        }
        v69 = 0;
        v70 = 0;
    }
    // 0x180008d78
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180008dc0 - 0x180008fb5
int64_t function_180008dc0(int64_t a1, int64_t a2, int64_t a3) {
    int32_t v1 = a3;
    if (v1 == 0) {
        // 0x180008f88
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x180008df3
    *v2 = v1;
    int64_t v3; // bp-568, 0x180008dc0
    memset(&v3, 0, 260);
    int64_t v4; // bp-296, 0x180008dc0
    memset(&v4, 0, 260);
    uint32_t v5 = *(int32_t *)(a1 + 12); // 0x180008e29
    uint32_t v6 = v1 + 4; // 0x180008e30
    if (v5 < v6) {
        // 0x180008f88
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v7 = *(int32_t *)(a1 + 16); // 0x180008e39
    *v2 = v6;
    uint32_t v8 = v1 + 8; // 0x180008e4f
    if (v8 > v5) {
        // 0x180008f88
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v9 = &v4; // 0x180008e0a
    int32_t v10 = *(int32_t *)((a3 & 0xffffffff) + v9); // 0x180008e43
    *v2 = v8;
    uint32_t v11 = v1 + 12; // 0x180008e78
    if (v11 > v5) {
        // 0x180008f88
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v12 = *(int32_t *)(v9 + (int64_t)v6); // 0x180008e6d
    *v2 = v11;
    uint32_t v13 = v1 + 16; // 0x180008ea1
    if (v13 > v5) {
        // 0x180008f88
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v14 = v7 == 0 ? v10 : llvm_bswap_i32(v10);
    uint32_t v15 = v7 == 0 ? v12 : llvm_bswap_i32(v12);
    int32_t v16 = *(int32_t *)(v9 + (int64_t)v8); // 0x180008e96
    *v2 = v13;
    int32_t v17 = *(int32_t *)(v9 + (int64_t)v11); // 0x180008eb7
    function_180005050(a1, (int64_t)v14, &v3);
    function_180005050(a1, (int64_t)v15, &v4);
    int64_t v18 = function_180001a00(&g31); // 0x180008ee8
    if (v18 != 0) {
        int64_t v19 = &v3; // 0x180008ef5
        int64_t v20 = v19; // 0x180008f05
        char v21 = *(char *)v20; // 0x180008f10
        *(char *)(v18 - v19 + v20) = v21;
        v20++;
        while (v21 != 0) {
            // 0x180008f10
            v21 = *(char *)v20;
            *(char *)(v18 - v19 + v20) = v21;
            v20++;
        }
        int64_t v22 = v9; // 0x180008f3c
        char v23 = *(char *)v22; // 0x180008f40
        *(char *)(260 - v9 + v18 + v22) = v23;
        v22++;
        while (v23 != 0) {
            // 0x180008f40
            v23 = *(char *)v22;
            *(char *)(260 - v9 + v18 + v22) = v23;
            v22++;
        }
        // 0x180008f4e
        *(int32_t *)(v18 + 1300) = -1;
    }
    uint32_t v24 = v7 == 0 ? v16 : llvm_bswap_i32(v16);
    uint32_t v25 = v7 == 0 ? v17 : llvm_bswap_i32(v17);
    g43 = 0;
    function_180008fc0(a1, 0, (int64_t)v25, (int64_t)v24);
    // 0x180008f88
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180008fc0 - 0x18000941a
int64_t function_180008fc0(int64_t a1, int32_t a2, int64_t a3, int64_t a4) {
    uint32_t v1 = (int32_t)a3; // 0x180008fef
    if (v1 < 100) {
        // 0x1800093fd
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 12); // 0x180009004
    if (*v2 <= v1) {
        // 0x1800093fd
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x18000900a
    *v3 = v1;
    uint32_t v4 = (int32_t)a4; // 0x180009032
    if (v4 == 0) {
        // 0x1800093fd
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180009040
    int64_t v5; // bp-312, 0x180008fc0
    int64_t v6 = &v5;
    int32_t * v7 = (int32_t *)(a1 + 16);
    int64_t v8; // bp-856, 0x180008fc0
    int64_t v9 = &v8;
    int64_t v10; // bp-584, 0x180008fc0
    int64_t v11 = &v10;
    int32_t v12 = 0; // 0x1800093d8
    memset(&v8, 0, 260);
    memset(&v10, 0, 260);
    memset(&v5, 0, 260);
    uint32_t v13 = *v3; // 0x180009085
    uint32_t v14 = *v2; // 0x180009088
    uint32_t v15 = v13 + 4; // 0x18000908c
    while (v15 <= v14) {
        // 0x180009098
        *v3 = v15;
        uint32_t v16 = v13 + 8; // 0x1800090b3
        if (v16 > v14) {
            // break -> 0x1800093fd
            break;
        }
        int32_t v17 = *v7; // 0x1800090a0
        int32_t v18 = *(int32_t *)((int64_t)v13 + v6); // 0x1800090a8
        *v3 = v16;
        uint32_t v19 = v13 + 12; // 0x1800090d7
        if (v19 > v14) {
            // break -> 0x1800093fd
            break;
        }
        uint32_t v20 = v17 == 0 ? v18 : llvm_bswap_i32(v18);
        int32_t v21 = *(int32_t *)((int64_t)v15 + v6); // 0x1800090cc
        uint32_t v22 = v17 == 0 ? v21 : llvm_bswap_i32(v21);
        *v3 = v19;
        int32_t v23 = *(int32_t *)((int64_t)v16 + v6); // 0x1800090ee
        uint32_t v24 = v17 == 0 ? v23 : llvm_bswap_i32(v23);
        function_180005050(a1, (int64_t)v20, &v8);
        function_180005050(a1, (int64_t)v22, &v10);
        function_180005050(a1, (int64_t)v24, &v5);
        int64_t v25 = 0; // bp-912, 0x180009131
        int128_t v26 = 0; // bp-880, 0x180009141
        int32_t v27 = 0; // bp-896, 0x180009153
        if ((int32_t)function_18001d5c0(a1, &v25) == 0) {
            // break -> 0x1800093fd
            break;
        }
        // 0x180009168
        if ((int32_t)function_18001d710(a1, (int64_t *)&v26) == 0) {
            // break -> 0x1800093fd
            break;
        }
        // 0x18000917d
        if (a1 == 0 | (int32_t)function_18001d5c0(a1, (int64_t *)&v27) == 0) {
            // break -> 0x1800093fd
            break;
        }
        uint32_t v28 = *v3 + 4; // 0x18000919f
        if (v28 > *v2) {
            // break -> 0x1800093fd
            break;
        }
        // 0x1800091c1
        *v3 = v28;
        g43++;
        uint32_t v29 = *v3; // 0x1800091c1
        uint32_t v30 = *v2; // 0x1800091c4
        uint32_t v31 = v29 + 4; // 0x1800091c7
        if (v31 > v30) {
            // break -> 0x1800093fd
            break;
        }
        // 0x1800091d2
        *v3 = v31;
        uint32_t v32 = v29 + 8; // 0x1800091fa
        if (v32 > v30) {
            // break -> 0x1800093fd
            break;
        }
        int32_t v33 = *v7; // 0x1800091da
        int32_t v34 = *(int32_t *)((int64_t)v29 + a1); // 0x1800091e7
        *v3 = v32;
        uint32_t v35 = v29 + 12; // 0x180009225
        if (v35 > v30) {
            // break -> 0x1800093fd
            break;
        }
        int32_t v36 = *(int32_t *)((int64_t)v31 + a1); // 0x180009212
        *v3 = v35;
        int32_t v37 = v29 + 16; // 0x18000923c
        if (v37 > v30) {
            // break -> 0x1800093fd
            break;
        }
        // 0x180009247
        *v3 = v37;
        int32_t v38 = v29 + 20;
        int32_t v39 = v37; // 0x180009274
        int32_t v40 = v38; // 0x180009274
        if (*(int32_t *)&g31 >= 258) {
            if (v38 > v30) {
                // break -> 0x1800093fd
                break;
            }
            // 0x18000927e
            *v3 = v38;
            v39 = v38;
            v40 = v29 + 24;
        }
        // 0x180009288
        if (v40 > v30) {
            // break -> 0x1800093fd
            break;
        }
        // 0x180009290
        *v3 = v39 + 4;
        int64_t v41 = function_180001a00(&g31); // 0x18000929b
        if (v41 != 0) {
            int64_t v42 = v9; // 0x1800092ba
            char v43 = *(char *)v42; // 0x1800092c0
            *(char *)(v41 - v9 + v42) = v43;
            v42++;
            while (v43 != 0) {
                // 0x1800092c0
                v43 = *(char *)v42;
                *(char *)(v41 - v9 + v42) = v43;
                v42++;
            }
            int64_t v44 = v11; // 0x1800092e7
            char v45 = *(char *)v44; // 0x1800092f0
            *(char *)(260 - v11 + v41 + v44) = v45;
            v44++;
            while (v45 != 0) {
                // 0x1800092f0
                v45 = *(char *)v44;
                *(char *)(260 - v11 + v41 + v44) = v45;
                v44++;
            }
            int64_t v46 = v6; // 0x180009316
            char v47 = *(char *)v46; // 0x180009320
            *(char *)(520 - v6 + v41 + v46) = v47;
            v46++;
            while (v47 != 0) {
                // 0x180009320
                v47 = *(char *)v46;
                *(char *)(520 - v6 + v41 + v46) = v47;
                v46++;
            }
            // 0x180009332
            *(int64_t *)(v41 + 1312) = __asm_movsd_5(__asm_movsd(v25));
            int128_t v48 = __asm_movups(0); // 0x180009344
            *(int32_t *)(v41 + 1300) = g39 - 1;
            __asm_movups_4(*(int128_t *)(v41 + 1336), v48);
            *(int64_t *)(v41 + 1324) = __asm_movsd_5(__asm_movsd((int64_t)v27));
        }
        int32_t v49 = v33 == 0 ? v36 : llvm_bswap_i32(v36);
        int32_t v50 = v49; // 0x18000937f
        if (g32 != 0) {
            // 0x180009381
            v50 = v49 == 0 ? 0 : v49 + v31;
        }
        uint32_t v51 = v33 == 0 ? v34 : llvm_bswap_i32(v34);
        function_180008fc0(a1, a2 + 1, (int64_t)v50, (int64_t)v51);
        function_180009420(a1, v41);
        v12++;
        if (v12 >= v4) {
            // break -> 0x1800093fd
            break;
        }
        memset(&v8, 0, 260);
        memset(&v10, 0, 260);
        memset(&v5, 0, 260);
        v13 = *v3;
        v14 = *v2;
        v15 = v13 + 4;
    }
    // 0x1800093fd
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180009420 - 0x1800094f6
int64_t function_180009420(int64_t a1, int64_t a2) {
    // 0x180009420
    int64_t v1; // 0x180009420
    uint32_t v2 = (int32_t)v1; // 0x18000942c
    if (v2 < 100) {
        // 0x180009431
        return 1;
    }
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x180009442
    if (*v3 <= v2) {
        // 0x180009431
        return 1;
    }
    int32_t * v4 = (int32_t *)(a1 + 8); // 0x180009448
    *v4 = v2;
    g43++;
    if (a1 == 0) {
        // 0x180009431
        return 0;
    }
    uint32_t v5 = *v4; // 0x18000945e
    uint32_t v6 = *v3; // 0x180009462
    uint32_t v7 = v5 + 4; // 0x180009466
    if (v7 > v6) {
        // 0x180009431
        return 0;
    }
    // 0x18000946f
    *v4 = v7;
    int32_t v8 = *(int32_t *)((int64_t)v5 + a1); // 0x18000947f
    uint32_t v9 = v5 + 8;
    if (v9 > v6) {
        // 0x180009431
        return 0;
    }
    int32_t v10 = *(int32_t *)(a1 + 16) == 0 ? v8 : llvm_bswap_i32(v8);
    *v4 = v9;
    *(int32_t *)(a2 + 1304) = v10;
    function_180009500(a1, a2);
    return 1;
}

// Address range: 0x180009500 - 0x180009865
int64_t function_180009500(int64_t a1, int64_t a2) {
    // 0x180009500
    int32_t v1; // 0x180009500
    int32_t v2 = v1;
    int64_t v3; // 0x180009500
    uint32_t v4 = (int32_t)v3;
    if (v4 < 100) {
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v5 = (int32_t *)(a1 + 12); // 0x180009545
    uint32_t v6 = *v5; // 0x180009545
    if (v6 <= v4) {
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v7 = v3 & 0xffffffff; // 0x18000951d
    int32_t * v8 = (int32_t *)(a1 + 8); // 0x180009557
    *v8 = v4;
    int64_t v9; // bp-584, 0x180009500
    if (v2 == 3) {
        // 0x180009563
        int64_t v10; // bp-312, 0x180009500
        memset(&v10, 0, 260);
        uint32_t v11 = v4 + 4; // 0x180009587
        if (v6 < v11) {
            // 0x1800096c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v12 = *(int32_t *)(a1 + 16); // 0x18000958f
        *v8 = v11;
        uint32_t v13 = v4 + 8; // 0x1800095a8
        if (v13 > v6) {
            // 0x1800096c2
            __security_check_cookie(g17);
            return &g47;
        }
        int64_t v14 = &v10; // 0x180009565
        int32_t v15 = *(int32_t *)(v7 + v14); // 0x180009599
        *v8 = v13;
        uint32_t v16 = v4 + 12; // 0x1800095c6
        if (v16 > v6) {
            // 0x1800096c2
            __security_check_cookie(g17);
            return &g47;
        }
        uint32_t v17 = v12 == 0 ? v15 : llvm_bswap_i32(v15);
        int32_t v18 = *(int32_t *)(v14 + (int64_t)v11); // 0x1800095bc
        uint32_t v19 = v12 == 0 ? v18 : llvm_bswap_i32(v18);
        *v8 = v16;
        int32_t v20 = *(int32_t *)(v14 + (int64_t)v13); // 0x1800095dc
        uint32_t v21 = v12 == 0 ? v20 : llvm_bswap_i32(v20);
        function_180005050(a1, (int64_t)v17, &v9);
        function_180005050(a1, (int64_t)v19, &v10);
        function_180005050(a1, (int64_t)v21, &v9);
        if (a1 == 0) {
            // 0x1800096c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v22 = *v8; // 0x180009620
        uint32_t v23 = *v5; // 0x180009623
        uint32_t v24 = v22 + 4; // 0x180009626
        if (v24 > v23) {
            // 0x1800096c2
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x180009631
        *v8 = v24;
        uint32_t v25 = v22 + 8; // 0x180009639
        if (v25 > v23) {
            // 0x1800096c2
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x180009645
        *v8 = v25;
        int64_t v26 = v14; // 0x180009676
        char v27 = *(char *)v26; // 0x180009680
        *(char *)(a2 + 780 - v14 + v26) = v27;
        v26++;
        while (v27 != 0) {
            // 0x180009680
            v27 = *(char *)v26;
            *(char *)(a2 + 780 - v14 + v26) = v27;
            v26++;
        }
        // 0x180009693
        function_180009870(a1, a2);
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    if (v2 != 2) {
        if (a1 == 0 || v2 != 1 == (v2 != 4)) {
            // 0x1800096c2
            __security_check_cookie(g17);
            return &g47;
        }
        uint32_t v28 = v4 + 4; // 0x1800097fe
        if (v6 < v28) {
            // 0x1800096c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v29 = *(int32_t *)(a1 + 16); // 0x180009802
        *v8 = v28;
        uint32_t v30 = v4 + 8; // 0x18000981a
        if (v30 > v6) {
            // 0x1800096c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v31 = *(int32_t *)(v7 + a1); // 0x18000980c
        *v8 = v30;
        uint32_t v32 = v4 + 12; // 0x180009836
        if (v32 <= v6) {
            uint32_t v33 = v29 == 0 ? v31 : llvm_bswap_i32(v31);
            int32_t v34 = *(int32_t *)((int64_t)v28 + a1); // 0x18000982a
            uint32_t v35 = v29 == 0 ? v34 : llvm_bswap_i32(v34);
            *v8 = v32;
            function_180005050(a1, (int64_t)v33, &v9);
            function_180005050(a1, (int64_t)v35, &v9);
        }
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    if (a1 == 0) {
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v36 = v4 + 4; // 0x1800096f5
    if (v6 < v36) {
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v37 = *(int32_t *)(a1 + 16); // 0x1800096fd
    *v8 = v36;
    uint32_t v38 = v4 + 8; // 0x180009715
    if (v38 > v6) {
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v39 = *(int32_t *)(v7 + a1); // 0x180009707
    *v8 = v38;
    uint32_t v40 = v4 + 12; // 0x180009734
    if (v40 > v6) {
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v41 = v37 == 0 ? v39 : llvm_bswap_i32(v39);
    int32_t v42 = *(int32_t *)((int64_t)v36 + a1); // 0x180009729
    uint32_t v43 = v37 == 0 ? v42 : llvm_bswap_i32(v42);
    *v8 = v40;
    int32_t v44 = *(int32_t *)((int64_t)v38 + a1); // 0x18000974a
    uint32_t v45 = v37 == 0 ? v44 : llvm_bswap_i32(v44);
    function_180005050(a1, (int64_t)v41, &v9);
    function_180005050(a1, (int64_t)v43, &v9);
    function_180005050(a1, (int64_t)v45, &v9);
    int32_t v46 = *v8; // 0x180009783
    uint32_t v47 = *v5; // 0x180009786
    uint32_t v48 = v46 + 4; // 0x180009789
    if (v48 > v47) {
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180009794
    *v8 = v48;
    uint32_t v49 = v46 + 8; // 0x18000979b
    if (v49 > v47) {
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800097a6
    *v8 = v49;
    uint32_t v50 = v46 + 12; // 0x1800097ad
    if (v50 > v47) {
        // 0x1800096c2
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800097b8
    *v8 = v50;
    uint32_t v51 = v46 + 16; // 0x1800097bf
    if (v51 <= v47) {
        uint32_t v52 = v46 + 20; // 0x1800097d1
        *v8 = v52 > v47 ? v51 : v52;
    }
    // 0x1800096c2
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180009870 - 0x180009990
int64_t function_180009870(int64_t a1, int64_t a2) {
    // 0x180009870
    int64_t v1; // 0x180009870
    uint32_t v2 = (int32_t)v1;
    if (v2 < 100) {
        // 0x180009967
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x1800098b0
    if (*v3 <= v2) {
        // 0x180009967
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v4 = (int32_t *)(a1 + 8); // 0x1800098ba
    *v4 = v2;
    int64_t v5; // bp-568, 0x180009870
    memset(&v5, 0, 260);
    uint32_t v6 = v2 + 4; // 0x1800098df
    if (*v3 < v6) {
        // 0x180009967
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v7 = *(int32_t *)(a1 + 16); // 0x1800098e8
    *v4 = v6;
    uint32_t v8 = v2 + 8; // 0x1800098fd
    if (v8 > *v3) {
        // 0x180009967
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v9 = &v5; // 0x1800098c0
    int32_t v10 = *(int32_t *)((v1 & 0xffffffff) + v9); // 0x1800098f2
    uint32_t v11 = v7 == 0 ? v10 : llvm_bswap_i32(v10);
    *v4 = v8;
    int32_t v12 = *(int32_t *)(v9 + (int64_t)v6); // 0x180009913
    uint32_t v13 = v7 == 0 ? v12 : llvm_bswap_i32(v12);
    int64_t v14; // bp-296, 0x180009870
    function_180005050(a1, (int64_t)v11, &v14);
    function_180005050(a1, (int64_t)v13, &v5);
    int64_t v15 = v9; // 0x180009949
    char v16 = *(char *)v15; // 0x180009950
    *(char *)(a2 + 1040 - v9 + v15) = v16;
    v15++;
    while (v16 != 0) {
        // 0x180009950
        v16 = *(char *)v15;
        *(char *)(a2 + 1040 - v9 + v15) = v16;
        v15++;
    }
    // 0x180009967
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180009990 - 0x18000a190
int64_t function_180009990(int64_t a1, int32_t * a2) {
    // 0x180009990
    if (a1 == 0) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x1800099bc
    int32_t v2 = *v1; // 0x1800099bc
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x1800099c0
    uint32_t v4 = *v3; // 0x1800099c0
    uint32_t v5 = v2 + 4; // 0x1800099c3
    if (v5 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v6 = v2 + 8; // 0x1800099d0
    *v1 = v5;
    if (v6 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800099e0
    *v1 = v6;
    uint32_t v7 = v2 + 12;
    if (v7 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800099f4
    *v1 = v7;
    uint32_t v8 = v2 + 16; // 0x1800099fb
    if (v8 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180009a06
    *v1 = v8;
    uint32_t v9 = v2 + 20;
    if (v9 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180009a17
    *v1 = v9;
    uint32_t v10 = v2 + 24; // 0x180009a1e
    if (v10 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v11 = (int64_t)a2;
    *v1 = v10;
    int32_t v12 = *(int32_t *)(v11 + 8); // 0x180009a2f
    if (v12 == 0) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v13 = v12 + 4; // 0x180009a3a
    *v1 = v12;
    if (v13 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180009a4c
    *v1 = v13;
    uint32_t v14 = v12 + 8; // 0x180009a4f
    if (v14 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v15 = v12 + 12; // 0x180009a5a
    *v1 = v14;
    if (v15 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180009a68
    *v1 = v15;
    uint32_t v16 = v12 + 16; // 0x180009a6e
    if (v16 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180009a79
    *v1 = v16;
    uint32_t v17 = v12 + 20; // 0x180009a7f
    if (v17 > v4) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v18 = v17; // 0x180009a8d
    uint32_t v19 = *(int32_t *)(v11 + 16) - 5; // 0x180009a90
    *v1 = v17;
    int64_t v20 = 0; // 0x180009a9d
    int32_t v21 = v17; // 0x180009a9d
    int64_t v22 = v18; // 0x180009a9d
    if (v19 >= 1) {
        int64_t v23 = v18 + 4; // 0x180009aa0
        int32_t v24 = v23;
        while (v4 >= v24) {
            int64_t v25 = v23 & 0xffffffff; // 0x180009aa0
            v20 = v20 + 1 & 0xffffffff;
            *v1 = v24;
            v21 = v24;
            v22 = v25;
            if (v20 >= (int64_t)v19) {
                goto lab_0x180009ab5;
            }
            v23 = v25 + 4;
            v24 = v23;
        }
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x180009ab5:;
    int32_t * v26 = (int32_t *)(v11 + 28); // 0x180009abd
    uint32_t v27 = *v26;
    int32_t v28 = v21; // 0x180009ac2
    int32_t v29 = v27; // 0x180009ac2
    int64_t v30 = v4; // 0x180009ac2
    int64_t lpMultiByteStr; // bp-1416, 0x180009990
    if (v27 > (int32_t)v22) {
        while ((int32_t)function_180004f90(a1, &lpMultiByteStr) != 0) {
            uint32_t v31 = *v1; // 0x180009af3
            if (v31 >= v27) {
                // 0x180009afb
                v28 = v31;
                v29 = *v26;
                v30 = a1;
                goto lab_0x180009afb_2;
            }
        }
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    goto lab_0x180009afb_2;
  lab_0x180009afb_2:;
    int32_t v32 = v28; // 0x180009b00
    if (v29 != 0) {
        // 0x180009b02
        *v1 = v29;
        v32 = v29;
    }
    if (v30 == 0) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v33 = v32 + 4; // 0x180009b14
    if (v33 > *v3) {
        // 0x18000a15a
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180009b20
    *v1 = v33;
    int32_t * v34 = (int32_t *)(a1 + 16); // 0x180009b2a
    int32_t v35 = *(int32_t *)(v30 + (int64_t)v32); // 0x180009b2e
    uint32_t v36 = *v34 == 0 ? v35 : llvm_bswap_i32(v35);
    function_180005050(a1, (int64_t)v36, &lpMultiByteStr);
    int64_t v37 = 0; // 0x180009b48
    uint32_t v38 = *v1 + 4; // 0x180009b5c
    int64_t v39; // 0x180009990
    int64_t v40; // 0x180009990
    uint32_t v41; // 0x180009b76
    while (v38 <= *v3) {
        // 0x180009b68
        *v1 = v38;
        int64_t v42 = v37 + 1; // 0x180009b6c
        v37 = v42 & 0xffffffff;
        if ((int32_t)v42 >= 6) {
            // 0x180009b76
            v41 = *v3;
            v39 = v38;
            v40 = 0;
            goto lab_0x180009b89;
        }
        v38 += 4;
    }
  lab_0x18000a15a:
    // 0x18000a15a
    __security_check_cookie(g17);
    return &g47;
  lab_0x180009b89:;
    int64_t v43 = v39 + 4; // 0x180009b89
    uint32_t v44 = (int32_t)v43;
    int32_t v45; // 0x180009990
    int32_t v46; // 0x180009990
    int32_t v47; // 0x180009bba
    int32_t v48; // 0x180009bca
    int32_t v49; // 0x180009bee
    int32_t v50; // 0x180009c35
    int32_t v51; // 0x180009c60
    int32_t v52; // 0x180009c8b
    int32_t v53; // 0x180009cbe
    int32_t v54; // 0x180009cf4
    int32_t v55; // 0x180009d1f
    if (v41 < v44) {
        goto lab_0x18000a15a;
    } else {
        int64_t v56 = v43 & 0xffffffff;
        int64_t v57 = v40 + 1; // 0x180009b94
        *v1 = v44;
        v39 = v56;
        v40 = v57 & 0xffffffff;
        if ((int32_t)v57 < 12) {
            goto lab_0x180009b89;
        } else {
            uint32_t v58 = v44 + 4; // 0x180009baa
            if (v58 > v41) {
                goto lab_0x18000a15a;
            } else {
                // 0x180009bb2
                *v1 = v58;
                uint32_t v59 = v44 + 8; // 0x180009bd6
                if (v59 > v41) {
                    goto lab_0x18000a15a;
                } else {
                    // 0x180009be2
                    v47 = *v34;
                    v48 = *(int32_t *)(v56 + a1);
                    *v1 = v59;
                    uint32_t v60 = v44 + 12;
                    if (v60 > v41) {
                        goto lab_0x18000a15a;
                    } else {
                        // 0x180009c06
                        v49 = *(int32_t *)((int64_t)v58 + a1);
                        *v1 = v60;
                        uint32_t v61 = v44 + 16; // 0x180009c0d
                        if (v61 > v41) {
                            goto lab_0x18000a15a;
                        } else {
                            // 0x180009c18
                            *v1 = v61;
                            uint32_t v62 = v44 + 20;
                            if (v62 > v41) {
                                goto lab_0x18000a15a;
                            } else {
                                // 0x180009c29
                                *v1 = v62;
                                uint32_t v63 = v44 + 24; // 0x180009c48
                                if (v63 > v41) {
                                    goto lab_0x18000a15a;
                                } else {
                                    // 0x180009c54
                                    v50 = *(int32_t *)((int64_t)v61 + a1);
                                    *v1 = v63;
                                    uint32_t v64 = v44 + 28;
                                    if (v64 > v41) {
                                        goto lab_0x18000a15a;
                                    } else {
                                        // 0x180009c7f
                                        v51 = *(int32_t *)((int64_t)v62 + a1);
                                        *v1 = v64;
                                        uint32_t v65 = v44 + 32; // 0x180009c9e
                                        if (v65 > v41) {
                                            goto lab_0x18000a15a;
                                        } else {
                                            // 0x180009caa
                                            v52 = *(int32_t *)((int64_t)v63 + a1);
                                            *v1 = v65;
                                            uint32_t v66 = v44 + 36;
                                            if (v66 > v41) {
                                                goto lab_0x18000a15a;
                                            } else {
                                                // 0x180009ce0
                                                v53 = *(int32_t *)((int64_t)v64 + a1);
                                                *v1 = v66;
                                                uint32_t v67 = v44 + 40; // 0x180009d07
                                                if (v67 > v41) {
                                                    goto lab_0x18000a15a;
                                                } else {
                                                    // 0x180009d13
                                                    v54 = *(int32_t *)((int64_t)v65 + a1);
                                                    *v1 = v67;
                                                    uint32_t v68 = v44 + 44;
                                                    if (v68 > v41) {
                                                        goto lab_0x18000a15a;
                                                    } else {
                                                        // 0x180009d3e
                                                        v55 = *(int32_t *)((int64_t)v66 + a1);
                                                        *v1 = v68;
                                                        uint32_t v69 = v44 + 48; // 0x180009d45
                                                        if (v69 > v41) {
                                                            goto lab_0x18000a15a;
                                                        } else {
                                                            // 0x180009d50
                                                            *v1 = v69;
                                                            uint32_t v70 = v44 + 52;
                                                            if (v70 > v41) {
                                                                goto lab_0x18000a15a;
                                                            } else {
                                                                // 0x180009d61
                                                                *v1 = v70;
                                                                uint32_t v71 = v44 + 56; // 0x180009d68
                                                                if (v71 > v41) {
                                                                    goto lab_0x18000a15a;
                                                                } else {
                                                                    // 0x180009d73
                                                                    *v1 = v71;
                                                                    int32_t v72 = v44 + 60;
                                                                    if (v72 > v41) {
                                                                        goto lab_0x18000a15a;
                                                                    } else {
                                                                        // 0x180009d84
                                                                        *v1 = v72;
                                                                        int32_t v73 = v44 + 64; // 0x180009d8b
                                                                        if (v73 > v41) {
                                                                            goto lab_0x18000a15a;
                                                                        } else {
                                                                            // 0x180009d96
                                                                            *v1 = v73;
                                                                            v45 = v73;
                                                                            v46 = v72;
                                                                            if (*(int32_t *)&g31 < 765) {
                                                                                goto lab_0x180009dcb;
                                                                            } else {
                                                                                int32_t v74 = v44 + 68;
                                                                                if (v74 > v41) {
                                                                                    goto lab_0x18000a15a;
                                                                                } else {
                                                                                    // 0x180009db3
                                                                                    *v1 = v74;
                                                                                    int32_t v75 = v44 + 72; // 0x180009dba
                                                                                    if (v75 > v41) {
                                                                                        goto lab_0x18000a15a;
                                                                                    } else {
                                                                                        // 0x180009dc5
                                                                                        *v1 = v75;
                                                                                        v45 = v75;
                                                                                        v46 = v74;
                                                                                        goto lab_0x180009dcb;
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x180009dcb:;
    // 0x180009dcb
    int64_t v76; // 0x180009990
    int64_t v77; // 0x180009990
    int64_t v78; // 0x180009990
    int64_t v79; // 0x180009990
    int64_t v80; // 0x180009990
    uint32_t v81; // 0x180009990
    uint32_t v82; // 0x180009990
    int32_t v83; // 0x180009990
    int32_t v84; // 0x180009990
    int32_t v85; // 0x180009990
    uint32_t v86; // 0x180009990
    int64_t v87; // 0x180009e93
    if (v46 + 8 > v41) {
        goto lab_0x18000a15a;
    } else {
        uint32_t v88 = v45 + 4; // 0x180009dd6
        *v1 = v88;
        uint32_t v89 = v45 + 8; // 0x180009dde
        if (v89 > v41) {
            goto lab_0x18000a15a;
        } else {
            // 0x180009dea
            *v1 = v89;
            uint32_t v90 = v45 + 12;
            if (v90 > v41) {
                goto lab_0x18000a15a;
            } else {
                int32_t v91 = *(int32_t *)((int64_t)v88 + a1); // 0x180009dfe
                *v1 = v90;
                uint32_t v92 = v45 + 16; // 0x180009e1d
                if (v92 > v41) {
                    goto lab_0x18000a15a;
                } else {
                    // 0x180009e28
                    *v1 = v92;
                    uint32_t v93 = v45 + 20;
                    if (v93 > v41) {
                        goto lab_0x18000a15a;
                    } else {
                        // 0x180009e39
                        *v1 = v93;
                        uint32_t v94 = v45 + 24; // 0x180009e40
                        if (v94 > v41) {
                            goto lab_0x18000a15a;
                        } else {
                            // 0x180009e4b
                            *v1 = v94;
                            uint32_t v95 = v45 + 28;
                            if (v95 > v41) {
                                goto lab_0x18000a15a;
                            } else {
                                // 0x180009e5c
                                *v1 = v95;
                                uint32_t v96 = v45 + 32; // 0x180009e63
                                if (v96 > v41) {
                                    goto lab_0x18000a15a;
                                } else {
                                    // 0x180009e6e
                                    *v1 = v96;
                                    uint32_t v97 = v45 + 36;
                                    if (v97 > v41) {
                                        goto lab_0x18000a15a;
                                    } else {
                                        // 0x180009e7f
                                        *v1 = v97;
                                        uint32_t v98 = v45 + 40; // 0x180009e87
                                        if (v98 > v41) {
                                            goto lab_0x18000a15a;
                                        } else {
                                            // 0x180009e93
                                            *v1 = v98;
                                            uint32_t v99 = v45 + 44;
                                            if (v99 > v41) {
                                                goto lab_0x18000a15a;
                                            } else {
                                                // 0x180009ebf
                                                *v1 = v99;
                                                uint32_t v100 = v45 + 48; // 0x180009ec6
                                                if (v100 > v41) {
                                                    goto lab_0x18000a15a;
                                                } else {
                                                    // 0x180009ed1
                                                    *v1 = v100;
                                                    uint32_t v101 = v45 + 52;
                                                    if (v101 > v41) {
                                                        goto lab_0x18000a15a;
                                                    } else {
                                                        // 0x180009ee2
                                                        *v1 = v101;
                                                        uint32_t v102 = v45 + 56; // 0x180009ee9
                                                        if (v102 > v41) {
                                                            goto lab_0x18000a15a;
                                                        } else {
                                                            // 0x180009ef4
                                                            v81 = v47 == 0 ? v48 : llvm_bswap_i32(v48);
                                                            v83 = v47 == 0 ? v49 : llvm_bswap_i32(v49);
                                                            v84 = v47 == 0 ? v50 : llvm_bswap_i32(v50);
                                                            v85 = v47 == 0 ? v51 : llvm_bswap_i32(v51);
                                                            v79 = v47 == 0 ? v52 : llvm_bswap_i32(v52);
                                                            v86 = v47 == 0 ? v53 : llvm_bswap_i32(v53);
                                                            v77 = v47 == 0 ? v54 : llvm_bswap_i32(v54);
                                                            v80 = v47 == 0 ? v55 : llvm_bswap_i32(v55);
                                                            v82 = v47 == 0 ? v91 : llvm_bswap_i32(v91);
                                                            v87 = v98;
                                                            *v1 = v102;
                                                            v76 = 0;
                                                            v78 = v102;
                                                            goto lab_0x180009f00;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x180009f00:;
    int64_t v103 = v78 + 4; // 0x180009f00
    uint32_t v104 = (int32_t)v103; // 0x180009f03
    int64_t v105; // 0x180009990
    int64_t v106; // 0x180009990
    int64_t v107; // 0x180009f52
    if (v41 < v104) {
        goto lab_0x18000a15a;
    } else {
        int64_t v108 = v76 + 1; // 0x180009f0b
        *v1 = v104;
        v76 = v108 & 0xffffffff;
        v78 = v103 & 0xffffffff;
        if ((int32_t)v108 < 7) {
            goto lab_0x180009f00;
        } else {
            // 0x180009f15
            v106 = v87;
            if (v83 == 0) {
                goto lab_0x18000a0c5;
            } else {
                // 0x180009f1e
                *v1 = v83;
                v106 = v87;
                if (v81 == 0) {
                    goto lab_0x18000a0c5;
                } else {
                    // 0x180009f27
                    if ((int32_t)function_180001fd0(&g31, (int64_t)v81) == 0) {
                        goto lab_0x18000a15a;
                    } else {
                        // 0x180009f50
                        v107 = &lpMultiByteStr;
                        v105 = 0;
                        goto lab_0x180009f50_2;
                    }
                }
            }
        }
    }
  lab_0x18000a0c5:
    // 0x18000a0c5
    if ((int32_t)function_18000a190(a1, v84, v85) == 0) {
        goto lab_0x18000a15a;
    } else {
        // 0x18000a0de
        if ((int32_t)function_18000a7f0(a1, v79, (int64_t)v86) == 0) {
            goto lab_0x18000a15a;
        } else {
            // 0x18000a0f3
            if ((int32_t)function_18000b870(a1, v77, v80, v106) == 0) {
                goto lab_0x18000a15a;
            } else {
                // 0x18000a104
                if ((int32_t)function_18000b660(a1, v77, (int64_t)v82) == 0) {
                    goto lab_0x18000a15a;
                } else {
                    // 0x18000a113
                    function_18000b0f0(a1, v79);
                    goto lab_0x18000a15a;
                }
            }
        }
    }
  lab_0x180009f50_2:
    // 0x180009f50
    memset(&lpMultiByteStr, 0, 260);
    uint32_t v109 = *v1; // 0x180009f6e
    uint32_t v110 = *v3; // 0x180009f71
    uint32_t v111 = v109 + 4; // 0x180009f74
    int64_t v112; // 0x180009990
    int64_t v113; // 0x180009990
    if (v111 > v110) {
        goto lab_0x18000a15a;
    } else {
        // 0x180009f7f
        v112 = v105;
        *v1 = v111;
        uint32_t v114 = v109 + 8; // 0x180009f9b
        if (v114 > v110) {
            goto lab_0x18000a15a;
        } else {
            int32_t v115 = *v34; // 0x180009f87
            int32_t v116 = *(int32_t *)((int64_t)v109 + v107); // 0x180009f8f
            *v1 = v114;
            uint32_t v117 = v109 + 12;
            if (v117 > v110) {
                goto lab_0x18000a15a;
            } else {
                int32_t v118 = *(int32_t *)((int64_t)v111 + v107); // 0x180009fb0
                *v1 = v117;
                uint32_t v119 = v109 + 16; // 0x180009fde
                if (v119 > v110) {
                    goto lab_0x18000a15a;
                } else {
                    int32_t v120 = *(int32_t *)((int64_t)v114 + v107); // 0x180009fd3
                    *v1 = v119;
                    uint32_t v121 = v109 + 20;
                    if (v121 > v110) {
                        goto lab_0x18000a15a;
                    } else {
                        uint32_t v122 = v115 == 0 ? v116 : llvm_bswap_i32(v116);
                        uint32_t v123 = v115 == 0 ? v118 : llvm_bswap_i32(v118);
                        uint32_t v124 = v115 == 0 ? v120 : llvm_bswap_i32(v120);
                        int32_t v125 = *(int32_t *)((int64_t)v117 + v107); // 0x180009ff3
                        uint32_t v126 = v115 == 0 ? v125 : llvm_bswap_i32(v125);
                        *v1 = v121;
                        int32_t v127 = *(int32_t *)((int64_t)v119 + v107); // 0x18000a014
                        uint32_t v128 = v115 == 0 ? v127 : llvm_bswap_i32(v127);
                        function_180005050(a1, (int64_t)v122, &lpMultiByteStr);
                        int64_t v129; // bp-1144, 0x180009990
                        function_180005050(a1, (int64_t)v123, &v129);
                        int64_t v130; // bp-872, 0x180009990
                        function_180005050(a1, (int64_t)v124, &v130);
                        int64_t v131; // bp-600, 0x180009990
                        function_180005050(a1, (int64_t)v126, &v131);
                        int64_t v132; // bp-328, 0x180009990
                        function_180005050(a1, (int64_t)v128, &v132);
                        v113 = 0;
                        if (g34 == 0) {
                            goto lab_0x18000a0a8;
                        } else {
                            // 0x18000a079
                            MultiByteToWideChar(0, 1, (char *)&lpMultiByteStr, -1, (int16_t *)(520 * (0x100000000 * v112 >> 32) + (int64_t)g34), 255);
                            v113 = 0xffffffff;
                            goto lab_0x18000a0a8;
                        }
                    }
                }
            }
        }
    }
  lab_0x18000a0a8:;
    int64_t v133 = v112 + 1; // 0x18000a0a8
    v105 = v133 & 0xffffffff;
    v106 = v113;
    if (v81 > (int32_t)v133) {
        goto lab_0x180009f50_2;
    } else {
        goto lab_0x18000a0c5;
    }
}

// Address range: 0x18000a190 - 0x18000a5dc
int64_t function_18000a190(int64_t a1, uint32_t a2, int32_t a3) {
    // 0x18000a190
    if (a2 == 0 || a3 == 0) {
        // 0x18000a5bf
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000a1d0
    *v1 = a3;
    if ((int32_t)function_1800020d0(&g31, (int64_t)a2) == 0) {
        // 0x18000a5bf
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000a220
    int64_t v2; // bp-1160, 0x18000a190
    int64_t v3 = &v2; // 0x18000a222
    int32_t * v4 = (int32_t *)(a1 + 12);
    int32_t * v5 = (int32_t *)(a1 + 16);
    int64_t v6 = 0; // 0x18000a190
    memset(&v2, 0, 260);
    uint32_t v7 = *v1; // 0x18000a23e
    uint32_t v8 = *v4; // 0x18000a241
    uint32_t v9 = v7 + 4; // 0x18000a245
    int32_t v10; // 0x18000a190
    int64_t v11; // 0x18000a190
    int64_t v12; // 0x18000a190
    int64_t v13; // bp-344, 0x18000a190
    int64_t v14; // bp-616, 0x18000a190
    int64_t v15; // bp-888, 0x18000a190
    while (v9 <= v8) {
        int64_t v16 = v6;
        *v1 = v9;
        uint32_t v17 = v7 + 8; // 0x18000a26d
        if (v17 > v8) {
            // break -> 0x18000a5bf
            break;
        }
        int32_t v18 = *v5; // 0x18000a259
        int32_t v19 = *(int32_t *)((int64_t)v7 + v3); // 0x18000a261
        *v1 = v17;
        uint32_t v20 = v7 + 12; // 0x18000a290
        if (v20 > v8) {
            // break -> 0x18000a5bf
            break;
        }
        int32_t v21 = *(int32_t *)((int64_t)v9 + v3); // 0x18000a286
        *v1 = v20;
        uint32_t v22 = v7 + 16; // 0x18000a2b3
        if (v22 > v8) {
            // break -> 0x18000a5bf
            break;
        }
        int32_t v23 = *(int32_t *)((int64_t)v17 + v3); // 0x18000a2a9
        *v1 = v22;
        uint32_t v24 = v7 + 20; // 0x18000a2d8
        if (v24 > v8) {
            // break -> 0x18000a5bf
            break;
        }
        int32_t v25 = *(int32_t *)((int64_t)v20 + v3); // 0x18000a2cc
        *v1 = v24;
        uint32_t v26 = v7 + 24; // 0x18000a2ec
        if (v26 > v8) {
            // break -> 0x18000a5bf
            break;
        }
        // 0x18000a2f8
        *v1 = v26;
        uint32_t v27 = v7 + 28; // 0x18000a2ff
        if (v27 > v8) {
            // break -> 0x18000a5bf
            break;
        }
        // 0x18000a30b
        *v1 = v27;
        uint32_t v28 = v7 + 32; // 0x18000a312
        if (v28 > v8) {
            // break -> 0x18000a5bf
            break;
        }
        // 0x18000a31e
        *v1 = v28;
        uint32_t v29 = v7 + 36; // 0x18000a325
        if (v29 > v8) {
            // break -> 0x18000a5bf
            break;
        }
        uint32_t v30 = v18 == 0 ? v19 : llvm_bswap_i32(v19);
        uint32_t v31 = v18 == 0 ? v21 : llvm_bswap_i32(v21);
        uint32_t v32 = v18 == 0 ? v23 : llvm_bswap_i32(v23);
        uint32_t v33 = v18 == 0 ? v25 : llvm_bswap_i32(v25);
        *v1 = v29;
        function_180005050(a1, (int64_t)v30, &v2);
        function_180005050(a1, (int64_t)v31, &v15);
        function_180005050(a1, (int64_t)v32, &v14);
        function_180005050(a1, (int64_t)v33, &v13);
        int64_t v34 = a1; // 0x18000a37d
        if (g36 != 0) {
            int64_t v35 = 312 * (0x100000000 * v16 >> 32);
            int64_t v36 = v3; // 0x18000a395
            int64_t v37 = v35 + 52 + g36; // 0x18000a395
            char v38 = *(char *)v36; // 0x18000a3a0
            *(char *)v37 = v38;
            v36++;
            v37++;
            v34 = v35;
            while (v38 != 0) {
                // 0x18000a3a0
                v38 = *(char *)v36;
                *(char *)v37 = v38;
                v36++;
                v37++;
                v34 = v35;
            }
        }
        int64_t v39 = v16 + 1; // 0x18000a3b2
        v6 = v39 & 0xffffffff;
        if ((int32_t)v39 >= a2) {
            // 0x18000a3bd
            *v1 = a3;
            v10 = a3;
            v12 = v34;
            v11 = 0;
            goto lab_0x18000a3d0;
        }
        memset(&v2, 0, 260);
        v7 = *v1;
        v8 = *v4;
        v9 = v7 + 4;
    }
  lab_0x18000a5bf:
    // 0x18000a5bf
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000a3d0:;
    // 0x18000a3d0
    int32_t v40; // 0x18000a190
    int64_t v41; // 0x18000a190
    if (v12 == 0) {
        goto lab_0x18000a5bf;
    } else {
        uint32_t v42 = *v4; // 0x18000a3f0
        uint32_t v43 = v10 + 4; // 0x18000a3f4
        if (v43 > v42) {
            goto lab_0x18000a5bf;
        } else {
            // 0x18000a400
            *v1 = v43;
            uint32_t v44 = v10 + 8; // 0x18000a41c
            if (v44 > v42) {
                goto lab_0x18000a5bf;
            } else {
                int32_t v45 = *v5; // 0x18000a408
                int32_t v46 = *(int32_t *)(v12 + (int64_t)v10); // 0x18000a410
                *v1 = v44;
                uint32_t v47 = v10 + 12; // 0x18000a441
                if (v47 > v42) {
                    goto lab_0x18000a5bf;
                } else {
                    int32_t v48 = *(int32_t *)(v12 + (int64_t)v43); // 0x18000a435
                    *v1 = v47;
                    uint32_t v49 = v10 + 16; // 0x18000a466
                    if (v49 > v42) {
                        goto lab_0x18000a5bf;
                    } else {
                        int32_t v50 = *(int32_t *)(v12 + (int64_t)v44); // 0x18000a45a
                        *v1 = v49;
                        uint32_t v51 = v10 + 20; // 0x18000a489
                        if (v51 > v42) {
                            goto lab_0x18000a5bf;
                        } else {
                            int32_t v52 = *(int32_t *)(v12 + (int64_t)v47); // 0x18000a47f
                            *v1 = v51;
                            uint32_t v53 = v10 + 24; // 0x18000a4ac
                            if (v53 > v42) {
                                goto lab_0x18000a5bf;
                            } else {
                                int32_t v54 = *(int32_t *)(v12 + (int64_t)v49); // 0x18000a4a2
                                *v1 = v53;
                                uint32_t v55 = v10 + 28; // 0x18000a4cf
                                if (v55 > v42) {
                                    goto lab_0x18000a5bf;
                                } else {
                                    int32_t v56 = *(int32_t *)(v12 + (int64_t)v51); // 0x18000a4c5
                                    *v1 = v55;
                                    uint32_t v57 = v10 + 32; // 0x18000a4e3
                                    if (v57 > v42) {
                                        goto lab_0x18000a5bf;
                                    } else {
                                        // 0x18000a4ef
                                        *v1 = v57;
                                        uint32_t v58 = v10 + 36; // 0x18000a4f6
                                        if (v58 > v42) {
                                            goto lab_0x18000a5bf;
                                        } else {
                                            uint32_t v59 = v45 == 0 ? v46 : llvm_bswap_i32(v46);
                                            uint32_t v60 = v45 == 0 ? v48 : llvm_bswap_i32(v48);
                                            uint32_t v61 = v45 == 0 ? v50 : llvm_bswap_i32(v50);
                                            uint32_t v62 = v45 == 0 ? v52 : llvm_bswap_i32(v52);
                                            uint32_t v63 = v45 == 0 ? v54 : llvm_bswap_i32(v54);
                                            uint32_t v64 = v45 == 0 ? v56 : llvm_bswap_i32(v56);
                                            *v1 = v58;
                                            function_180005050(a1, (int64_t)v59, &v13);
                                            function_180005050(a1, (int64_t)v60, &v14);
                                            function_180005050(a1, (int64_t)v61, &v15);
                                            function_180005050(a1, (int64_t)v62, &v2);
                                            int32_t v65 = *v1; // 0x18000a545
                                            if ((int32_t)function_18000a5e0(a1, 312 * (0x100000000 * v11 >> 32) + g36, (int64_t)v63, (int64_t)v64) == 0) {
                                                goto lab_0x18000a5bf;
                                            } else {
                                                int64_t v66 = v11 + 1; // 0x18000a55a
                                                *v1 = v65;
                                                v10 = v65;
                                                v12 = a1;
                                                v11 = v66 & 0xffffffff;
                                                if ((int32_t)v66 < a2) {
                                                    goto lab_0x18000a3d0;
                                                } else {
                                                    // 0x18000a571
                                                    v40 = v65;
                                                    v41 = 0;
                                                    goto lab_0x18000a571_2;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18000a571_2:
    if (a1 == 0) {
        goto lab_0x18000a5bf;
    } else {
        int32_t v67 = v40 + 4; // 0x18000a579
        if (v67 > *v4) {
            goto lab_0x18000a5bf;
        } else {
            // 0x18000a581
            *v1 = v67;
            int64_t v68 = v41 + 1; // 0x18000a585
            v40 = v67;
            v41 = v68 & 0xffffffff;
            if ((int32_t)v68 < 77) {
                goto lab_0x18000a571_2;
            } else {
                goto lab_0x18000a5bf;
            }
        }
    }
}

// Address range: 0x18000a5e0 - 0x18000a7ed
int64_t function_18000a5e0(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    // 0x18000a5e0
    if (a2 == 0) {
        // 0x18000a7cc
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v1 = a4; // 0x18000a614
    uint32_t v2 = (int32_t)a3; // 0x18000a623
    if (v2 == 0 || v1 == 0) {
        // 0x18000a7cc
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x18000a642
    *v3 = v1;
    int64_t v4; // bp-600, 0x18000a5e0
    int64_t v5 = &v4; // 0x18000a652
    int32_t * v6 = (int32_t *)(a1 + 12);
    int32_t * v7 = (int32_t *)(a1 + 16);
    int64_t v8 = 0; // 0x18000a7a1
    memset(&v4, 0, 260);
    uint32_t v9 = *v3; // 0x18000a66e
    uint32_t v10 = *v6; // 0x18000a671
    uint32_t v11 = v9 + 4; // 0x18000a674
    while (v11 <= v10) {
        // 0x18000a67f
        *v3 = v11;
        uint32_t v12 = v9 + 8; // 0x18000a699
        if (v12 > v10) {
            // break -> 0x18000a7cc
            break;
        }
        int32_t v13 = *v7; // 0x18000a687
        int32_t v14 = *(int32_t *)((int64_t)v9 + v5); // 0x18000a68e
        *v3 = v12;
        uint32_t v15 = v9 + 12; // 0x18000a6bc
        if (v15 > v10) {
            // break -> 0x18000a7cc
            break;
        }
        int32_t v16 = *(int32_t *)((int64_t)v11 + v5); // 0x18000a6b1
        *v3 = v15;
        uint32_t v17 = v9 + 16; // 0x18000a6cf
        if (v17 > v10) {
            // break -> 0x18000a7cc
            break;
        }
        // 0x18000a6da
        *v3 = v17;
        uint32_t v18 = v9 + 20; // 0x18000a6e1
        if (v18 > v10) {
            // break -> 0x18000a7cc
            break;
        }
        // 0x18000a6ec
        *v3 = v18;
        uint32_t v19 = v9 + 24; // 0x18000a6f3
        if (v19 > v10) {
            // break -> 0x18000a7cc
            break;
        }
        uint32_t v20 = v13 == 0 ? v14 : llvm_bswap_i32(v14);
        uint32_t v21 = v13 == 0 ? v16 : llvm_bswap_i32(v16);
        *v3 = v19;
        int32_t v22 = *(int32_t *)((int64_t)v18 + v5); // 0x18000a708
        uint32_t v23 = v13 == 0 ? v22 : llvm_bswap_i32(v22);
        function_180005050(a1, (int64_t)v20, &v4);
        int64_t v24; // bp-328, 0x18000a5e0
        function_180005050(a1, (int64_t)v21, &v24);
        if (!((v23 == 0 | _stricmp((char *)&v4, "DiffuseMap") != 0))) {
            // 0x18000a74f
            *v3 = v23;
            uint32_t v25 = *v6; // 0x18000a75e
            uint32_t v26 = v23 + 4; // 0x18000a762
            if (v25 < v26) {
                // break -> 0x18000a7cc
                break;
            }
            int32_t v27 = *v7; // 0x18000a76a
            *v3 = v26;
            int32_t v28 = *(int32_t *)((int64_t)v23 + v5); // 0x18000a774
            uint32_t v29 = v27 == 0 ? v28 : llvm_bswap_i32(v28);
            if (v29 != 0) {
                // 0x18000a782
                *v3 = v29;
                uint32_t v30 = v29 + 4; // 0x18000a785
                if (v30 > v25) {
                    // break -> 0x18000a7cc
                    break;
                }
                // 0x18000a78d
                *v3 = v30;
                int32_t v31 = *(int32_t *)((int64_t)v29 + v5); // 0x18000a793
                *(int32_t *)(a2 + 40) = v27 == 0 ? v31 : llvm_bswap_i32(v31);
            }
        }
        // 0x18000a7a1
        if ((int32_t)v8 >= v2) {
            // break -> 0x18000a7cc
            break;
        }
        v8 &= 0xffffffff;
        memset(&v4, 0, 260);
        v9 = *v3;
        v10 = *v6;
        v11 = v9 + 4;
    }
    // 0x18000a7cc
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18000a7f0 - 0x18000aa82
int64_t function_18000a7f0(int64_t a1, int64_t a2, int64_t a3) {
    int32_t v1 = a3; // 0x18000a813
    if (v1 == 0) {
        // 0x18000aa63
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x18000a821
    *v2 = v1;
    uint32_t v3 = (int32_t)a2; // 0x18000a825
    if (v3 == 0 || (int32_t)function_180001b50(&g31, a2) == 0) {
        // 0x18000aa63
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v4 = *v2; // 0x18000a846
    int64_t v5; // bp-312, 0x18000a7f0
    int64_t v6 = &v5;
    int32_t * v7 = (int32_t *)(a1 + 12);
    int64_t v8 = 0; // 0x18000a7f0
    int64_t v9; // bp-584, 0x18000a7f0
    memset(&v9, 0, 260);
    memset(&v5, 0, 260);
    uint32_t v10 = *v2; // 0x18000a8a3
    uint32_t v11 = *v7; // 0x18000a8a6
    uint32_t v12 = v10 + 4; // 0x18000a8aa
    int32_t v13; // 0x18000a7f0
    int64_t v14; // 0x18000a7f0
    int64_t v15; // 0x18000a7f0
    while (v12 <= v11) {
        int64_t v16 = v8;
        *v2 = v12;
        uint32_t v17 = v10 + 8; // 0x18000a8d1
        if (v17 > v11) {
            // break -> 0x18000aa63
            break;
        }
        int32_t v18 = *(int32_t *)(a1 + 16); // 0x18000a8be
        int32_t v19 = *(int32_t *)((int64_t)v10 + v6); // 0x18000a8c6
        *v2 = v17;
        uint32_t v20 = v10 + 12; // 0x18000a8f6
        if (v20 > v11) {
            // break -> 0x18000aa63
            break;
        }
        int32_t v21 = *(int32_t *)((int64_t)v12 + v6); // 0x18000a8ea
        *v2 = v20;
        uint32_t v22 = v10 + 16; // 0x18000a90a
        if (v22 > v11) {
            // break -> 0x18000aa63
            break;
        }
        uint32_t v23 = v18 == 0 ? v19 : llvm_bswap_i32(v19);
        uint32_t v24 = v18 == 0 ? v21 : llvm_bswap_i32(v21);
        *v2 = v22;
        function_180005050(a1, (int64_t)v23, &v9);
        function_180005050(a1, (int64_t)v24, &v5);
        int64_t v25 = a1; // 0x18000a941
        if (g38 != NULL) {
            int64_t v26 = 760 * (0x100000000 * v16 >> 32);
            int64_t v27 = &v9; // 0x18000a95c
            int64_t v28 = v26 + 232 + (int64_t)g38; // 0x18000a95c
            char v29 = *(char *)v27; // 0x18000a960
            *(char *)v28 = v29;
            v27++;
            v28++;
            while (v29 != 0) {
                // 0x18000a960
                v29 = *(char *)v27;
                *(char *)v28 = v29;
                v27++;
                v28++;
            }
            int64_t v30 = v6; // 0x18000a98a
            int64_t v31 = v26 + 492 + (int64_t)g38; // 0x18000a98a
            char v32 = *(char *)v30; // 0x18000a990
            v30++;
            *(char *)v31 = v32;
            v31++;
            v25 = v30;
            while (v32 != 0) {
                // 0x18000a990
                v32 = *(char *)v30;
                v30++;
                *(char *)v31 = v32;
                v31++;
                v25 = v30;
            }
        }
        int64_t v33 = v16 + 1; // 0x18000a9a1
        v8 = v33 & 0xffffffff;
        if ((int32_t)v33 >= v3) {
            // 0x18000a9c0
            *v2 = v4;
            v14 = v25;
            v13 = v4;
            v15 = 0;
            goto lab_0x18000a9c0_2;
        }
        memset(&v9, 0, 260);
        memset(&v5, 0, 260);
        v10 = *v2;
        v11 = *v7;
        v12 = v10 + 4;
    }
  lab_0x18000aa63:
    // 0x18000aa63
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000a9c0_2:
    // 0x18000a9c0
    if (v14 == 0) {
        goto lab_0x18000aa63;
    } else {
        uint32_t v34 = *v7; // 0x18000a9dd
        uint32_t v35 = v13 + 4; // 0x18000a9e0
        if (v34 < v35) {
            goto lab_0x18000aa63;
        } else {
            // 0x18000a9eb
            *v2 = v35;
            uint32_t v36 = v13 + 8; // 0x18000a9f1
            if (v36 > v34) {
                goto lab_0x18000aa63;
            } else {
                // 0x18000a9f9
                *v2 = v36;
                uint32_t v37 = v13 + 12; // 0x18000aa00
                if (v37 > v34) {
                    goto lab_0x18000aa63;
                } else {
                    // 0x18000aa07
                    *v2 = v37;
                    int32_t v38 = v13 + 16; // 0x18000aa0e
                    if (v38 > v34) {
                        goto lab_0x18000aa63;
                    } else {
                        // 0x18000aa15
                        *v2 = v38;
                        if ((int32_t)function_18000aa90(a1, 760 * (0x100000000 * v15 >> 32) + (int64_t)g38) == 0) {
                            goto lab_0x18000aa63;
                        } else {
                            int64_t v39 = v15 + 1; // 0x18000aa38
                            *v2 = v38;
                            v14 = a1;
                            v13 = v38;
                            v15 = v39 & 0xffffffff;
                            if ((int32_t)v39 < v3) {
                                goto lab_0x18000a9c0_2;
                            } else {
                                goto lab_0x18000aa63;
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x18000aa90 - 0x18000b0e5
int64_t function_18000aa90(int64_t a1, int64_t a2) {
    // 0x18000aa90
    if (a2 == 0) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000aabf
    int64_t v1; // 0x18000aa90
    int32_t v2 = v1;
    if (v2 == 0) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x18000aad0
    *v3 = v2;
    int32_t v4 = 0; // bp-376, 0x18000aadd
    int32_t v5 = 0; // bp-360, 0x18000aaee
    if (a1 == 0) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v6 = (int32_t *)(a1 + 12); // 0x18000aafb
    uint32_t v7 = *v6; // 0x18000aafb
    uint32_t v8 = v2 + 4; // 0x18000ab02
    if (v7 < v8) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000ab06
    *v3 = v8;
    uint32_t v9 = v2 + 8; // 0x18000ab0c
    if (v9 > v7) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000ab10
    *v3 = v9;
    uint32_t v10 = v2 + 12; // 0x18000ab2c
    if (v10 > v7) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v11 = (int32_t *)(a1 + 16); // 0x18000ab18
    int32_t v12 = *v11; // 0x18000ab18
    int32_t v13 = *(int32_t *)((int64_t)v8 + a1); // 0x18000ab20
    *v3 = v10;
    uint32_t v14 = v2 + 16; // 0x18000ab4d
    if (v14 > v7) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v15 = *(int32_t *)((int64_t)v9 + a1); // 0x18000ab3e
    *v3 = v14;
    uint32_t v16 = v2 + 20; // 0x18000ab7d
    if (v16 > v7) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v17 = *(int32_t *)((int64_t)v10 + a1); // 0x18000ab6a
    *v3 = v16;
    int32_t v18 = *(int32_t *)((int64_t)v14 + a1); // 0x18000ab92
    if ((int32_t)function_18001d5c0(a1, (int64_t *)&v4) == 0 || (int32_t)function_18001d5c0(a1, (int64_t *)&v5) == 0) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v19 = v12 == 0 ? v13 : llvm_bswap_i32(v13);
    uint32_t v20 = v12 == 0 ? v15 : llvm_bswap_i32(v15);
    *(int32_t *)(a2 + 36) = v19;
    int64_t v21 = a1; // 0x18000abfe
    if (v20 != 0) {
        // 0x18000ac14
        *v3 = v20;
        uint32_t v22 = *v6; // 0x18000ac14
        uint32_t v23 = v20 + 4; // 0x18000ac18
        if (v22 < v23) {
            // 0x18000b0c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v24 = *v11; // 0x18000ac25
        *v3 = v23;
        uint32_t v25 = v20 + 8;
        if (v25 > v22) {
            // 0x18000b0c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v26 = *(int32_t *)((int64_t)v20 + a1); // 0x18000ac31
        *v3 = v25;
        uint32_t v27 = v20 + 12; // 0x18000ac66
        if (v27 > v22) {
            // 0x18000b0c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v28 = *(int32_t *)((int64_t)v23 + a1); // 0x18000ac5c
        *v3 = v27;
        uint32_t v29 = v20 + 16; // 0x18000ac8b
        if (v29 > v22) {
            // 0x18000b0c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v30 = *(int32_t *)((int64_t)v25 + a1); // 0x18000ac7f
        *v3 = v29;
        uint32_t v31 = v20 + 20; // 0x18000acae
        if (v31 > v22) {
            // 0x18000b0c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v32 = *(int32_t *)((int64_t)v27 + a1); // 0x18000aca4
        *v3 = v31;
        uint32_t v33 = v20 + 24; // 0x18000acd1
        if (v33 > v22) {
            // 0x18000b0c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v34 = *(int32_t *)((int64_t)v29 + a1); // 0x18000acc7
        *v3 = v33;
        uint32_t v35 = v20 + 28; // 0x18000acf6
        if (v35 > v22) {
            // 0x18000b0c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v36 = *(int32_t *)((int64_t)v31 + a1); // 0x18000acea
        *v3 = v35;
        uint32_t v37 = v20 + 32; // 0x18000ad1b
        if (v37 > v22) {
            // 0x18000b0c2
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v38 = *(int32_t *)((int64_t)v33 + a1); // 0x18000ad0f
        *v3 = v37;
        uint32_t v39 = v20 + 36; // 0x18000ad40
        if (v39 > v22) {
            // 0x18000b0c2
            __security_check_cookie(g17);
            return &g47;
        }
        uint32_t v40 = v24 == 0 ? v28 : llvm_bswap_i32(v28);
        int32_t v41 = v24 == 0 ? v30 : llvm_bswap_i32(v30);
        int32_t v42 = *(int32_t *)((int64_t)v35 + a1); // 0x18000ad34
        *v3 = v39;
        int32_t v43 = *(int32_t *)((int64_t)v37 + a1); // 0x18000ad57
        *(int32_t *)(a2 + 60) = v40;
        if (v41 != 0) {
            // 0x18000ad6c
            *v3 = v41;
            if (v40 != 0) {
                int32_t v44 = v41 + 4; // 0x18000ad8f
                if (v44 > *v6) {
                    // 0x18000b0c2
                    __security_check_cookie(g17);
                    return &g47;
                }
                int64_t v45 = 0; // 0x18000aa90
                int64_t v46 = a2 + 68;
                *v3 = v44;
                int32_t v47; // 0x18000ada9
                if (*(int32_t *)(a2 + 56) > (int32_t)v45) {
                    // 0x18000adb7
                    v47 = *(int32_t *)((int64_t)v41 + a1);
                    *(int32_t *)v46 = *v11 == 0 ? v47 : llvm_bswap_i32(v47);
                }
                int64_t v48 = v45 + 1; // 0x18000adba
                while (v40 > (int32_t)v48) {
                    int32_t v49 = *v3;
                    int32_t v50 = v49 + 4; // 0x18000ad8f
                    v45 = v48 & 0xffffffff;
                    if (v50 > *v6) {
                        // 0x18000b0c2
                        __security_check_cookie(g17);
                        return &g47;
                    }
                    uint32_t v51 = v49;
                    v46 += 16;
                    *v3 = v50;
                    if (*(int32_t *)(a2 + 56) > (int32_t)v45) {
                        // 0x18000adb7
                        v47 = *(int32_t *)((int64_t)v51 + a1);
                        *(int32_t *)v46 = *v11 == 0 ? v47 : llvm_bswap_i32(v47);
                    }
                    // 0x18000adba
                    v48 = v45 + 1;
                }
            }
        }
        int32_t v52 = v24 == 0 ? v34 : llvm_bswap_i32(v34);
        if (v52 != 0) {
            uint32_t v53 = v24 == 0 ? v32 : llvm_bswap_i32(v32);
            *v3 = v52;
            if (v53 != 0) {
                int32_t v54 = v52 + 4; // 0x18000adef
                if (v54 > *v6) {
                    // 0x18000b0c2
                    __security_check_cookie(g17);
                    return &g47;
                }
                int64_t v55 = 0; // 0x18000aa90
                int64_t v56 = a2 + 72;
                *v3 = v54;
                int32_t v57; // 0x18000ae09
                if (*(int32_t *)(a2 + 56) > (int32_t)v55) {
                    // 0x18000ae17
                    v57 = *(int32_t *)((int64_t)v52 + a1);
                    *(int32_t *)v56 = *v11 == 0 ? v57 : llvm_bswap_i32(v57);
                }
                int64_t v58 = v55 + 1; // 0x18000ae1a
                while (v53 > (int32_t)v58) {
                    int32_t v59 = *v3;
                    int32_t v60 = v59 + 4; // 0x18000adef
                    v55 = v58 & 0xffffffff;
                    if (v60 > *v6) {
                        // 0x18000b0c2
                        __security_check_cookie(g17);
                        return &g47;
                    }
                    uint32_t v61 = v59;
                    v56 += 16;
                    *v3 = v60;
                    if (*(int32_t *)(a2 + 56) > (int32_t)v55) {
                        // 0x18000ae17
                        v57 = *(int32_t *)((int64_t)v61 + a1);
                        *(int32_t *)v56 = *v11 == 0 ? v57 : llvm_bswap_i32(v57);
                    }
                    // 0x18000ae1a
                    v58 = v55 + 1;
                }
            }
        }
        int32_t v62 = v24 == 0 ? v38 : llvm_bswap_i32(v38);
        if (v62 != 0) {
            uint32_t v63 = v24 == 0 ? v36 : llvm_bswap_i32(v36);
            *v3 = v62;
            if (v63 != 0) {
                int32_t v64 = v62 + 4; // 0x18000ae4f
                if (v64 > *v6) {
                    // 0x18000b0c2
                    __security_check_cookie(g17);
                    return &g47;
                }
                int64_t v65 = 0; // 0x18000aa90
                int64_t v66 = a2 + 76;
                *v3 = v64;
                int32_t v67; // 0x18000ae65
                if (*(int32_t *)(a2 + 56) > (int32_t)v65) {
                    // 0x18000ae77
                    v67 = *(int32_t *)((int64_t)v62 + a1);
                    *(int32_t *)v66 = *v11 == 0 ? v67 : llvm_bswap_i32(v67);
                }
                int64_t v68 = v65 + 1; // 0x18000ae7a
                while (v63 > (int32_t)v68) {
                    int32_t v69 = *v3;
                    int32_t v70 = v69 + 4; // 0x18000ae4f
                    v65 = v68 & 0xffffffff;
                    if (v70 > *v6) {
                        // 0x18000b0c2
                        __security_check_cookie(g17);
                        return &g47;
                    }
                    uint32_t v71 = v69;
                    v66 += 16;
                    *v3 = v70;
                    if (*(int32_t *)(a2 + 56) > (int32_t)v65) {
                        // 0x18000ae77
                        v67 = *(int32_t *)((int64_t)v71 + a1);
                        *(int32_t *)v66 = *v11 == 0 ? v67 : llvm_bswap_i32(v67);
                    }
                    // 0x18000ae7a
                    v68 = v65 + 1;
                }
            }
        }
        int32_t v72 = v24 == 0 ? v43 : llvm_bswap_i32(v43);
        v21 = a1;
        if (v72 != 0) {
            int32_t v73 = v24 == 0 ? v42 : llvm_bswap_i32(v42);
            *v3 = v72;
            v21 = 0;
            if (v73 != 0) {
                // 0x18000b0c2
                __security_check_cookie(g17);
                return &g47;
            }
        }
        // 0x18000aec3
        *(int32_t *)(a2 + 32) = v24 == 0 ? v26 : llvm_bswap_i32(v26);
    }
    int32_t v74 = v12 == 0 ? v17 : llvm_bswap_i32(v17);
    int32_t v75 = v12 == 0 ? v18 : llvm_bswap_i32(v18);
    int32_t * v76 = (int32_t *)(a2 + 228); // 0x18000aed3
    *v76 = v74;
    if (v75 == 0) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000aee2
    *v3 = v75;
    if (*v76 == 0) {
        // 0x18000b0c2
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v77 = v21; // 0x18000aa90
    int64_t v78 = 0; // 0x18000aa90
    while (v77 != 0) {
        int32_t v79 = *v3; // 0x18000aeff
        uint32_t v80 = *v6; // 0x18000af02
        uint32_t v81 = v79 + 4; // 0x18000af06
        if (v81 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        // 0x18000af12
        *v3 = v81;
        uint32_t v82 = v79 + 8; // 0x18000af19
        if (v82 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        // 0x18000af25
        *v3 = v82;
        uint32_t v83 = v79 + 12; // 0x18000af3f
        if (v83 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        int32_t v84 = *v11; // 0x18000af2d
        int32_t v85 = *(int32_t *)(v77 + (int64_t)v81); // 0x18000af34
        *v3 = v83;
        uint32_t v86 = v79 + 16; // 0x18000af61
        if (v86 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        int32_t v87 = *(int32_t *)(v77 + (int64_t)v82); // 0x18000af58
        *v3 = v86;
        uint32_t v88 = v79 + 20; // 0x18000af75
        if (v88 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        // 0x18000af81
        *v3 = v88;
        uint32_t v89 = v79 + 24; // 0x18000af88
        if (v89 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        // 0x18000af94
        *v3 = v89;
        int32_t v90 = v79 + 28; // 0x18000af9b
        if (v90 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        // 0x18000afa7
        *v3 = v90;
        int32_t v91 = v90; // 0x18000afb8
        if (*(int32_t *)&g31 >= 765) {
            uint32_t v92 = v79 + 32; // 0x18000afba
            if (v92 > v80) {
                // break -> 0x18000b0c2
                break;
            }
            // 0x18000afc6
            *v3 = v92;
            v91 = v79 + 36;
            if (v91 > v80) {
                // break -> 0x18000b0c2
                break;
            }
            // 0x18000afd9
            *v3 = v91;
        }
        uint32_t v93 = v91 + 4;
        if (v93 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        // 0x18000afec
        *v3 = v93;
        uint32_t v94 = v91 + 8; // 0x18000aff3
        if (v94 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        // 0x18000afff
        *v3 = v94;
        uint32_t v95 = v91 + 12; // 0x18000b014
        if (v95 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        int32_t v96 = *(int32_t *)(v77 + (int64_t)v93); // 0x18000b00b
        *v3 = v95;
        uint32_t v97 = v91 + 16; // 0x18000b038
        if (v97 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        int32_t v98 = *(int32_t *)(v77 + (int64_t)v94); // 0x18000b02d
        *v3 = v97;
        uint32_t v99 = v91 + 20; // 0x18000b04c
        if (v99 > v80) {
            // break -> 0x18000b0c2
            break;
        }
        uint32_t v100 = v84 == 0 ? v85 : llvm_bswap_i32(v85);
        *v3 = v99;
        int64_t v101; // bp-344, 0x18000aa90
        function_180005050(a1, (int64_t)v100, &v101);
        if (v78 == 0) {
            int32_t v102 = v84 == 0 ? v87 : llvm_bswap_i32(v87);
            int32_t v103 = v84 == 0 ? v96 : llvm_bswap_i32(v96);
            int32_t v104 = v84 == 0 ? v98 : llvm_bswap_i32(v98);
            *(int32_t *)(a2 + 40) = v102;
            *(int32_t *)(a2 + 44) = v103;
            *(int32_t *)(a2 + 52) = v104;
        }
        int64_t v105 = v78 + 1; // 0x18000b07d
        v77 = a1;
        v78 = v105 & 0xffffffff;
        if (*v76 <= (int32_t)v105) {
            // break -> 0x18000b0c2
            break;
        }
    }
    // 0x18000b0c2
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18000b0f0 - 0x18000b382
int64_t function_18000b0f0(int64_t a1, int64_t a2) {
    uint32_t v1 = (int32_t)a2; // 0x18000b114
    if (v1 != 0) {
        // 0x18000b118
        if (g38 == NULL) {
            // 0x18000b2fc
            __security_check_cookie(g17);
            return &g47;
        }
    }
    // 0x18000b129
    int64_t v2; // 0x18000b0f0
    int32_t v3 = v2;
    if (v3 == 0) {
        // 0x18000b2fc
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v4 = (int32_t *)(a1 + 8); // 0x18000b13a
    *v4 = v3;
    if (a1 == 0) {
        // 0x18000b2fc
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v5 = (int32_t *)(a1 + 12); // 0x18000b143
    uint32_t v6 = *v5; // 0x18000b143
    uint32_t v7 = v3 + 4; // 0x18000b14a
    if (v6 < v7) {
        // 0x18000b2fc
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000b14e
    *v4 = v7;
    uint32_t v8 = v3 + 8; // 0x18000b154
    if (v8 > v6) {
        // 0x18000b2fc
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000b158
    *v4 = v8;
    uint32_t v9 = v3 + 12; // 0x18000b15f
    if (v9 > v6) {
        // 0x18000b2fc
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000b166
    *v4 = v9;
    uint32_t v10 = v3 + 16; // 0x18000b16d
    if (v10 > v6) {
        // 0x18000b2fc
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000b174
    *v4 = v10;
    int32_t * v11 = (int32_t *)(a1 + 16); // 0x18000b186
    int32_t v12 = *(int32_t *)((int64_t)v9 + a1); // 0x18000b18a
    uint32_t v13 = *v11 == 0 ? v12 : llvm_bswap_i32(v12);
    int64_t v14; // bp-296, 0x18000b0f0
    function_180005050(a1, (int64_t)v13, &v14);
    int64_t v15 = a1; // 0x18000b1a5
    int64_t v16 = 0; // 0x18000b1a5
    int64_t v17 = 0; // 0x18000b1a5
    int64_t v18 = a1; // 0x18000b1a5
    if (v1 != 0) {
        while (v15 != 0) {
            int32_t v19 = *v4; // 0x18000b1c3
            uint32_t v20 = *v5; // 0x18000b1c6
            uint32_t v21 = v19 + 4; // 0x18000b1c9
            if (v21 > v20) {
                // break -> 0x18000b2fc
                break;
            }
            // 0x18000b1d4
            *v4 = v21;
            uint32_t v22 = v19 + 8; // 0x18000b1db
            if (v22 > v20) {
                // break -> 0x18000b2fc
                break;
            }
            // 0x18000b1e6
            *v4 = v22;
            int32_t v23 = *(int32_t *)(v15 + (int64_t)v21); // 0x18000b1f0
            int32_t v24 = *v11 == 0 ? v23 : llvm_bswap_i32(v23);
            int64_t v25 = v17 + (int64_t)g38;
            *(int32_t *)(v25 + 48) = v24;
            if (*(int32_t *)(v25 + 228) != 0) {
                // break -> 0x18000b2fc
                break;
            }
            int64_t v26 = v16 + 1; // 0x18000b24c
            v15 = 0;
            v16 = v26 & 0xffffffff;
            v17 += 760;
            v18 = 0;
            if ((int32_t)v26 >= v1) {
                goto lab_0x18000b25f;
            }
        }
        // 0x18000b2fc
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x18000b25f:;
    uint32_t v27 = *(int32_t *)&g31; // 0x18000b25f
    if (v27 != 777) {
        if (v27 >= 780) {
            if (v1 == 0) {
                // 0x18000b2fc
                __security_check_cookie(g17);
                return &g47;
            }
            int64_t v28 = 0; // 0x18000b0f0
            while (v18 != 0) {
                int32_t v29 = *v4; // 0x18000b335
                uint32_t v30 = *v5; // 0x18000b338
                uint32_t v31 = v29 + 4; // 0x18000b33b
                if (v31 > v30) {
                    // break -> 0x18000b2fc
                    break;
                }
                // 0x18000b342
                *v4 = v31;
                uint32_t v32 = v29 + 8; // 0x18000b349
                if (v32 > v30) {
                    // break -> 0x18000b2fc
                    break;
                }
                // 0x18000b350
                *v4 = v32;
                uint32_t v33 = v29 + 12; // 0x18000b357
                if (v33 > v30) {
                    // break -> 0x18000b2fc
                    break;
                }
                // 0x18000b35e
                *v4 = v33;
                uint32_t v34 = v29 + 16; // 0x18000b365
                if (v34 > v30) {
                    // break -> 0x18000b2fc
                    break;
                }
                // 0x18000b36c
                *v4 = v34;
                int64_t v35 = v28 + 1; // 0x18000b370
                v28 = v35 & 0xffffffff;
                if ((int32_t)v35 >= v1) {
                    goto lab_0x18000b2c4;
                }
            }
            // 0x18000b2fc
            __security_check_cookie(g17);
            return &g47;
        }
    } else {
        if (v18 == 0) {
            // 0x18000b2fc
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v36 = *v4; // 0x18000b279
        uint32_t v37 = *v5; // 0x18000b27c
        uint32_t v38 = v36 + 4; // 0x18000b27f
        if (v38 > v37) {
            // 0x18000b2fc
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000b28a
        *v4 = v38;
        uint32_t v39 = v36 + 8; // 0x18000b291
        if (v39 > v37) {
            // 0x18000b2fc
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000b29c
        *v4 = v39;
        uint32_t v40 = v36 + 12; // 0x18000b2a3
        if (v40 > v37) {
            // 0x18000b2fc
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000b2ae
        *v4 = v40;
        uint32_t v41 = v36 + 16; // 0x18000b2b5
        if (v41 > v37) {
            // 0x18000b2fc
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000b2c0
        *v4 = v41;
    }
  lab_0x18000b2c4:;
    int64_t v42 = 0; // 0x18000b2c6
    if (v1 == 0) {
        // 0x18000b2fc
        __security_check_cookie(g17);
        return &g47;
    }
    function_18000b390(a1, 760 * (0x100000000 * v42 >> 32) + (int64_t)g38);
    int64_t v43 = v42 + 1; // 0x18000b2e9
    v42 = v43 & 0xffffffff;
    while ((int32_t)v43 < v1) {
        // 0x18000b2d0
        function_18000b390(a1, 760 * (0x100000000 * v42 >> 32) + (int64_t)g38);
        v43 = v42 + 1;
        v42 = v43 & 0xffffffff;
    }
    // 0x18000b2fc
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18000b390 - 0x18000b65f
int64_t function_18000b390(int64_t a1, int64_t a2) {
    // 0x18000b390
    if (a2 == 0) {
        // 0x18000b633
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v1 = *(int32_t *)(a2 + 36); // 0x18000b3d7
    int32_t v2 = *(int32_t *)(a2 + 32); // 0x18000b3da
    int128_t v3; // bp-232, 0x18000b390
    function_1800010c0((int64_t)&v3);
    __asm_movups_4(0, __asm_movups(*(int128_t *)(a2 + 56)));
    int128_t v4; // 0x18000b390
    __asm_movups_4(v4, __asm_movups(*(int128_t *)(a2 + 72)));
    __asm_movups_4(v4, __asm_movups(*(int128_t *)(a2 + 88)));
    __asm_movups_4(v4, __asm_movups(*(int128_t *)(a2 + 104)));
    __asm_movups_4(v4, __asm_movups(*(int128_t *)(a2 + 120)));
    __asm_movups_4(v4, __asm_movups(*(int128_t *)(a2 + 136)));
    __asm_movups_4(v4, __asm_movups(*(int128_t *)(a2 + 152)));
    __asm_movups_4(v4, __asm_movups(*(int128_t *)(a2 + 168)));
    __asm_movups_4(v4, __asm_movups(*(int128_t *)(a2 + 184)));
    __asm_movups_4(v4, __asm_movups(*(int128_t *)(a2 + 200)));
    int32_t v5 = *(int32_t *)(a2 + 48); // 0x18000b45f
    int32_t * v6 = (int32_t *)(a1 + 8);
    if (v5 != 0) {
        // 0x18000b466
        *v6 = v5;
    }
    int32_t v7 = *v6;
    int32_t v8 = v7; // 0x18000b476
    if (*(int32_t *)&g31 >= 765) {
        // 0x18000b481
        v8 = v7 + 4;
        if (v8 > *(int32_t *)(a1 + 12)) {
            // 0x18000b615
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            // 0x18000b633
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000b490
        *v6 = v8;
    }
    // 0x18000b493
    if (v8 != 0) {
        int64_t v9 = function_180005100(a1, a2, v1, v8, (int64_t)v2, (int64_t *)&v3); // 0x18000b4b3
        if ((int32_t)v9 == 0) {
            // 0x18000b615
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            // 0x18000b633
            __security_check_cookie(g17);
            return &g47;
        }
    }
    int32_t v10 = *(int32_t *)(a2 + 52); // 0x18000b4c0
    if (v10 != 0) {
        // 0x18000b4c7
        *v6 = v10;
    }
    uint32_t v11 = *(int32_t *)(a2 + 44); // 0x18000b4ca
    if (*(int32_t *)&g31 >= 765) {
        if (v11 == 0) {
            // 0x18000b615
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            // 0x18000b633
            __security_check_cookie(g17);
            return &g47;
        }
        uint32_t v12 = *v6 + 4; // 0x18000b4e5
        if (v12 > *(int32_t *)(a1 + 12)) {
            // 0x18000b615
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            // 0x18000b633
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000b4f1
        *v6 = v12;
    }
    uint64_t v13 = 0xaaaaaaab * (int64_t)v11; // 0x18000b4f9
    if (v13 < 0x200000000) {
        // 0x18000b615
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x18000b633
        __security_check_cookie(g17);
        return &g47;
    }
    uint64_t v14 = v13 / 0x200000000; // 0x18000b4f9
    if ((int32_t)function_180001e80(a2, v14) == 0) {
        // 0x18000b615
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x18000b633
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t * v15 = (int64_t *)(a2 + 8);
    int64_t v16 = a2; // 0x18000b390
    int64_t v17 = 0; // 0x18000b5ff
    int64_t v18 = 0; // 0x18000b390
    while (v16 != 0) {
        uint32_t v19 = *(int32_t *)(a1 + 12); // 0x18000b53c
        uint32_t v20 = *v6; // 0x18000b540
        uint32_t v21 = v20 + 2; // 0x18000b543
        if (v21 > v19) {
            // break -> 0x18000b615
            break;
        }
        int64_t v22 = v18;
        *v6 = v21;
        uint32_t v23 = v20 + 4; // 0x18000b578
        if (v23 > v19) {
            // break -> 0x18000b615
            break;
        }
        int16_t v24 = *(int16_t *)(v16 + (int64_t)v20); // 0x18000b55b
        int32_t v25 = *(int32_t *)(a1 + 16); // 0x18000b560
        *v6 = v23;
        uint32_t v26 = v20 + 6; // 0x18000b5ab
        if (v26 > v19) {
            // break -> 0x18000b615
            break;
        }
        int16_t v27 = *(int16_t *)(v16 + (int64_t)v21); // 0x18000b591
        *v6 = v26;
        int16_t v28 = *(int16_t *)(v16 + (int64_t)v23); // 0x18000b5be
        int64_t v29 = *v15; // 0x18000b5d4
        v16 = 0;
        if (v29 != 0) {
            uint16_t v30 = v25 == 0 ? v24 : llvm_bswap_i16(v24);
            uint16_t v31 = v25 == 0 ? v27 : llvm_bswap_i16(v27);
            uint16_t v32 = v25 == 0 ? v28 : llvm_bswap_i16(v28);
            *(int32_t *)(v22 + 4 + v29) = (int32_t)v30;
            *(int32_t *)(v22 + 8 + *v15) = (int32_t)v31;
            *(int32_t *)(v22 + 12 + *v15) = (int32_t)v32;
            v16 = v32;
        }
        // 0x18000b5ff
        v17++;
        v18 = v22 + 20;
        if (v17 >= v14) {
            // break -> 0x18000b615
            break;
        }
    }
    // 0x18000b615
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    // 0x18000b633
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18000b660 - 0x18000b866
int64_t function_18000b660(int64_t a1, int64_t a2, int64_t a3) {
    int32_t v1 = a3;
    if (v1 == 0) {
        // 0x18000b840
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x18000b690
    *v2 = v1;
    int64_t v3; // bp-584, 0x18000b660
    memset(&v3, 0, 260);
    int64_t v4; // bp-312, 0x18000b660
    memset(&v4, 0, 260);
    uint32_t v5 = *(int32_t *)(a1 + 12); // 0x18000b6c6
    uint32_t v6 = v1 + 4; // 0x18000b6cd
    if (v5 < v6) {
        // 0x18000b840
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v7 = *(int32_t *)(a1 + 16); // 0x18000b6d6
    *v2 = v6;
    uint32_t v8 = v1 + 8; // 0x18000b6ec
    if (v8 > v5) {
        // 0x18000b840
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v9 = &v4; // 0x18000b6a7
    int32_t v10 = *(int32_t *)((a3 & 0xffffffff) + v9); // 0x18000b6e0
    *v2 = v8;
    uint32_t v11 = v1 + 12; // 0x18000b715
    if (v11 > v5) {
        // 0x18000b840
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v12 = *(int32_t *)(v9 + (int64_t)v6); // 0x18000b70a
    *v2 = v11;
    uint32_t v13 = v1 + 16; // 0x18000b749
    if (v13 > v5) {
        // 0x18000b840
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v14 = v7 == 0 ? v10 : llvm_bswap_i32(v10);
    uint32_t v15 = v7 == 0 ? v12 : llvm_bswap_i32(v12);
    int64_t v16 = v11; // 0x18000b725
    int32_t v17 = *(int32_t *)(v9 + (int64_t)v8); // 0x18000b73b
    *v2 = v13;
    int32_t v18 = *(int32_t *)(v9 + v16); // 0x18000b76a
    function_180005050(a1, (int64_t)v14, &v3);
    function_180005050(a1, (int64_t)v15, &v4);
    int64_t v19 = function_180001a00(&g31); // 0x18000b79e
    if (v19 != 0) {
        int64_t v20 = &v3; // 0x18000b7ab
        int64_t v21 = v20; // 0x18000b7bb
        char v22 = *(char *)v21; // 0x18000b7c0
        *(char *)(v19 - v20 + v21) = v22;
        v21++;
        while (v22 != 0) {
            // 0x18000b7c0
            v22 = *(char *)v21;
            *(char *)(v19 - v20 + v21) = v22;
            v21++;
        }
        int64_t v23 = v9; // 0x18000b7ec
        char v24 = *(char *)v23; // 0x18000b7f0
        *(char *)(260 - v9 + v19 + v23) = v24;
        v23++;
        while (v24 != 0) {
            // 0x18000b7f0
            v24 = *(char *)v23;
            *(char *)(260 - v9 + v19 + v23) = v24;
            v23++;
        }
        // 0x18000b7fe
        *(int32_t *)(v19 + 1300) = -1;
    }
    uint32_t v25 = v7 == 0 ? v17 : llvm_bswap_i32(v17);
    int64_t v26 = g32 != 0 ? v16 : 0; // 0x18000b753
    uint32_t v27 = v7 == 0 ? v18 : llvm_bswap_i32(v18);
    g43 = 0;
    function_180008fc0(a1, 0, v26 + (int64_t)v27 & 0xffffffff, (int64_t)v25);
    // 0x18000b840
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18000b870 - 0x18000ba81
int64_t function_18000b870(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    int32_t v1 = a3; // 0x18000b897
    if (v1 == 0) {
        // 0x18000ba61
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x18000b8a8
    *v2 = v1;
    uint32_t v3 = (int32_t)a2; // 0x18000b8ab
    if (v3 == 0) {
        // 0x18000b91f
        *v2 = v1;
        // 0x18000ba61
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v4 = (int32_t *)(a1 + 12);
    int32_t * v5 = (int32_t *)(a1 + 16);
    int64_t v6 = 0; // 0x18000b870
    int64_t v7; // 0x18000b870
    int64_t str; // bp-312, 0x18000b870
    int64_t v8; // 0x18000b942
    int64_t v9; // 0x18000b870
    while (a1 != 0) {
        int32_t v10 = *v2; // 0x18000b8bc
        uint32_t v11 = *v4; // 0x18000b8bf
        uint32_t v12 = v10 + 4; // 0x18000b8c3
        if (v12 > v11) {
            // break -> 0x18000ba61
            break;
        }
        // 0x18000b8cf
        *v2 = v12;
        uint32_t v13 = v10 + 8; // 0x18000b8d6
        if (v13 > v11) {
            // break -> 0x18000ba61
            break;
        }
        // 0x18000b8e2
        *v2 = v13;
        uint32_t v14 = v10 + 12; // 0x18000b8f9
        if (v14 > v11) {
            // break -> 0x18000ba61
            break;
        }
        int32_t v15 = *(int32_t *)((int64_t)v12 + a1); // 0x18000b8f2
        uint32_t v16 = *v5 == 0 ? v15 : llvm_bswap_i32(v15);
        *v2 = v14;
        function_180005050(a1, (int64_t)v16, &str);
        int64_t v17 = v6 + 1; // 0x18000b917
        v6 = v17 & 0xffffffff;
        if ((int32_t)v17 >= v3) {
            // 0x18000b91f
            *v2 = v1;
            v8 = &str;
            int64_t v18; // bp-344, 0x18000b870
            v9 = (int64_t)&v18 + 32;
            v7 = 0;
            goto lab_0x18000b940;
        }
    }
  lab_0x18000ba61:
    // 0x18000ba61
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000b940:
    // 0x18000b940
    memset(&str, 0, 260);
    int32_t v19 = *v2; // 0x18000b95e
    uint32_t v20 = *v4; // 0x18000b961
    uint32_t v21 = v19 + 4; // 0x18000b965
    int32_t v22; // 0x18000b870
    int32_t v23; // 0x18000b870
    int64_t v24; // 0x18000b870
    uint32_t v25; // 0x18000b99f
    int32_t v26; // 0x18000b98c
    int32_t v27; // 0x18000b9b8
    if (v21 > v20) {
        goto lab_0x18000ba61;
    } else {
        // 0x18000b971
        *v2 = v21;
        uint32_t v28 = v19 + 8; // 0x18000b978
        if (v28 > v20) {
            goto lab_0x18000ba61;
        } else {
            // 0x18000b984
            *v2 = v28;
            v25 = v19 + 12;
            if (v25 > v20) {
                goto lab_0x18000ba61;
            } else {
                // 0x18000b9ac
                v26 = *v5;
                int32_t v29 = *(int32_t *)((int64_t)v21 + v8); // 0x18000b994
                int32_t v30 = v26 == 0 ? v29 : llvm_bswap_i32(v29);
                *v2 = v25;
                v27 = *(int32_t *)((int64_t)v28 + v8);
                if (v30 < 101) {
                    goto lab_0x18000ba1a;
                } else {
                    // 0x18000b9c8
                    *v2 = v30;
                    int32_t v31 = v30 + 1; // 0x18000b9d3
                    v22 = v31;
                    v24 = 0;
                    v23 = v30;
                    if (v31 > v20) {
                        goto lab_0x18000ba1a;
                    } else {
                        goto lab_0x18000b9da;
                    }
                }
            }
        }
    }
  lab_0x18000ba1a:
    // 0x18000ba1a
    if (strstr((char *)&str, "-skin") == NULL) {
        goto lab_0x18000ba41;
    } else {
        uint32_t v32 = v26 == 0 ? v27 : llvm_bswap_i32(v27);
        function_18000ba90(a1, (int64_t)v32);
        goto lab_0x18000ba41;
    }
  lab_0x18000ba41:;
    int64_t v33 = v7 + 1; // 0x18000ba41
    v7 = v33 & 0xffffffff;
    if ((int32_t)v33 < v3) {
        goto lab_0x18000b940;
    } else {
        goto lab_0x18000ba61;
    }
  lab_0x18000b9da:;
    int64_t v34 = v24;
    *v2 = v22;
    char v35 = *(char *)((int64_t)v23 + v8); // 0x18000b9e2
    if (v34 > 259) {
        goto lab_0x18000b9f4;
    } else {
        // 0x18000b9f0
        *(char *)(v34 + v9) = v35;
        goto lab_0x18000b9f4;
    }
  lab_0x18000b9f4:;
    int64_t v36 = v34 + 1; // 0x18000b9f4
    if (v35 != 0) {
        int32_t v37 = *v2;
        int32_t v38 = v37 + 1; // 0x18000b9d3
        v22 = v38;
        v24 = v36;
        v23 = v37;
        if (v38 > v20) {
            goto lab_0x18000ba1a;
        } else {
            goto lab_0x18000b9da;
        }
    } else {
        if (v36 > 259) {
            // 0x18000ba16
            *v2 = v25;
            goto lab_0x18000ba1a;
        } else {
            // 0x18000ba04
            *(char *)(v36 + v9) = v35;
            // 0x18000ba16
            *v2 = v25;
            goto lab_0x18000ba1a;
        }
    }
}

// Address range: 0x18000ba90 - 0x18000c015
int64_t function_18000ba90(int64_t a1, int64_t a2) {
    int32_t v1 = a2;
    if (v1 == 0) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x18000bac8
    *v2 = v1;
    if (a1 == 0) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18000bad5
    uint32_t v4 = *v3; // 0x18000bad5
    uint32_t v5 = v1 + 4; // 0x18000badd
    if (v4 < v5) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v6 = (int32_t *)(a1 + 16); // 0x18000bae6
    int32_t v7 = *v6; // 0x18000bae6
    *v2 = v5;
    uint32_t v8 = v1 + 8; // 0x18000bb0a
    if (v8 > v4) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v9 = *(int32_t *)((a2 & 0xffffffff) + a1); // 0x18000bafa
    *v2 = v8;
    uint32_t v10 = v1 + 12; // 0x18000bb31
    if (v10 > v4) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v11 = *(int32_t *)((int64_t)v5 + a1); // 0x18000bb27
    *v2 = v10;
    uint32_t v12 = v1 + 16; // 0x18000bb5e
    if (v12 > v4) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v13 = *(int32_t *)((int64_t)v8 + a1); // 0x18000bb52
    *v2 = v12;
    int32_t v14 = *(int32_t *)((int64_t)v10 + a1); // 0x18000bb7d
    int128_t v15 = __asm_movaps(g8); // 0x18000bb89
    int128_t v16 = __asm_movaps(g9); // 0x18000bb95
    int64_t v17 = __asm_movaps_9(v15); // bp-392, 0x18000bb9c
    int128_t v18 = __asm_movaps(g10); // 0x18000bba1
    __asm_movaps_9(v16);
    int128_t v19 = __asm_movaps(g12); // 0x18000bbad
    __asm_movaps_9(v18);
    __asm_movaps_9(v19);
    if ((int32_t)function_18001d8d0(a1, (int128_t *)&v17) == 0) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v20 = 0; // bp-440, 0x18000bbda
    int64_t v21 = 0; // bp-456, 0x18000bbec
    if ((int32_t)function_18001d710(a1, &v20) == 0 || (int32_t)function_18001d710(a1, &v21) == 0) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v22 = *v2; // 0x18000bc23
    uint32_t v23 = v22 + 4; // 0x18000bc26
    if (v23 > *v3) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000bc5f
    *v2 = v23;
    int32_t v24 = *(int32_t *)((int64_t)v22 + a1); // 0x18000bc40
    uint32_t v25 = *v6 == 0 ? v24 : llvm_bswap_i32(v24);
    int64_t v26; // bp-328, 0x18000ba90
    function_180005050(a1, (int64_t)v25, &v26);
    uint32_t v27 = *v2; // 0x18000bc5f
    uint32_t v28 = *v3; // 0x18000bc62
    uint32_t v29 = v27 + 4; // 0x18000bc65
    if (v29 > v28) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000bc70
    *v2 = v29;
    uint32_t v30 = v27 + 8; // 0x18000bc93
    if (v30 > v28) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v31 = *v6; // 0x18000bc78
    int32_t v32 = *(int32_t *)((int64_t)v27 + a1); // 0x18000bc80
    *v2 = v30;
    uint32_t v33 = v27 + 12; // 0x18000bcc1
    if (v33 > v28) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v34 = *(int32_t *)((int64_t)v29 + a1); // 0x18000bcab
    *v2 = v33;
    uint32_t v35 = v27 + 16; // 0x18000bcec
    if (v35 > v28) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v36 = *(int32_t *)((int64_t)v30 + a1); // 0x18000bcd9
    *v2 = v35;
    uint32_t v37 = v27 + 20; // 0x18000bd17
    if (v37 > v28) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v38 = *(int32_t *)((int64_t)v33 + a1); // 0x18000bd04
    *v2 = v37;
    uint32_t v39 = v27 + 24; // 0x18000bd42
    if (v39 > v28) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v40 = *(int32_t *)((int64_t)v35 + a1); // 0x18000bd2f
    *v2 = v39;
    uint32_t v41 = v27 + 28; // 0x18000bd6d
    if (v41 > v28) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v42 = *(int32_t *)((int64_t)v37 + a1); // 0x18000bd5a
    *v2 = v41;
    uint32_t v43 = v27 + 32; // 0x18000bd99
    if (v43 > v28) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v44 = *(int32_t *)((int64_t)v39 + a1); // 0x18000bd8d
    *v2 = v43;
    uint32_t v45 = v27 + 36; // 0x18000bdc4
    if (v45 > v28) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v46 = *(int32_t *)((int64_t)v41 + a1); // 0x18000bdb1
    *v2 = v45;
    uint32_t v47 = v27 + 40; // 0x18000bdd7
    if (v47 > v28) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v48 = v7 == 0 ? v9 : llvm_bswap_i32(v9);
    int32_t v49 = v7 == 0 ? v11 : llvm_bswap_i32(v11);
    *v2 = v49 == 0 ? v47 : v49;
    int64_t v50 = 0; // 0x18000be00
    if (v48 >= 16) {
        int128_t v51 = __asm_movaps(g8); // 0x18000be02
        int128_t v52 = __asm_movaps(g9); // 0x18000be0e
        v17 = __asm_movaps_9(v51);
        int128_t v53 = __asm_movaps(g10); // 0x18000be1d
        __asm_movaps_9(v52);
        int128_t v54 = __asm_movaps(g12); // 0x18000be29
        __asm_movaps_9(v53);
        __asm_movaps_9(v54);
        while ((int32_t)function_18001d8d0(a1, (int128_t *)&v17) != 0) {
            int64_t v55 = v50 + 1; // 0x18000be45
            v50 = v55 & 0xffffffff;
            if (v48 / 16 <= (int32_t)v55) {
                goto lab_0x18000be51;
            }
            v51 = __asm_movaps(g8);
            v52 = __asm_movaps(g9);
            v17 = __asm_movaps_9(v51);
            v53 = __asm_movaps(g10);
            __asm_movaps_9(v52);
            v54 = __asm_movaps(g12);
            __asm_movaps_9(v53);
            __asm_movaps_9(v54);
        }
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x18000be51:;
    int32_t v56 = v7 == 0 ? v14 : llvm_bswap_i32(v14);
    if (v56 != 0) {
        // 0x18000be56
        *v2 = v56;
    }
    uint32_t v57 = v7 == 0 ? v13 : llvm_bswap_i32(v13);
    int64_t v58 = 0; // 0x18000be64
    if (v57 >= 8) {
        v20 = 0;
        v21 = 0;
        while ((int32_t)function_18001d710(a1, &v20) != 0) {
            // 0x18000be99
            if ((int32_t)function_18001d710(a1, &v21) == 0) {
                // break -> 0x18000bfe0
                break;
            }
            int64_t v59 = v58 + 1; // 0x18000beae
            v58 = v59 & 0xffffffff;
            if (v57 / 8 <= (int32_t)v59) {
                goto lab_0x18000beb6;
            }
            v20 = 0;
            v21 = 0;
        }
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x18000beb6:;
    int32_t v60 = v31 == 0 ? v34 : llvm_bswap_i32(v34);
    if (v60 != 0) {
        // 0x18000bebb
        *v2 = v60;
    }
    uint32_t v61 = v31 == 0 ? v32 : llvm_bswap_i32(v32);
    int64_t v62 = 0; // 0x18000bec8
    if (v61 != 0) {
        uint32_t v63 = *v2; // 0x18000bedc
        while (v63 + 4 <= *v3) {
            // 0x18000beeb
            *v2 = v63 + 4;
            int32_t v64 = *(int32_t *)((int64_t)v63 + a1); // 0x18000bef5
            uint32_t v65 = *v6 == 0 ? v64 : llvm_bswap_i32(v64);
            function_180005050(a1, (int64_t)v65, &v26);
            int64_t v66 = v62 + 1; // 0x18000bf0b
            v62 = v66 & 0xffffffff;
            if (v61 <= (int32_t)v66) {
                goto lab_0x18000bf13;
            }
            v63 = *v2;
        }
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x18000bf13:;
    int32_t v67 = v31 == 0 ? v36 : llvm_bswap_i32(v36);
    int32_t v68 = v31 == 0 ? v38 : llvm_bswap_i32(v38);
    if ((int32_t)function_18000c020(a1, v67, v68) == 0) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v69 = v31 == 0 ? v40 : llvm_bswap_i32(v40);
    int32_t v70 = v31 == 0 ? v42 : llvm_bswap_i32(v42);
    int32_t v71 = v31 == 0 ? v46 : llvm_bswap_i32(v46);
    if (v71 == 0 | (int32_t)function_18000c0c0(a1, v69, v70) == 0) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v72 = v31 == 0 ? v44 : llvm_bswap_i32(v44);
    *v2 = v71;
    int64_t v73 = 0; // 0x18000bf53
    if (v72 == 0) {
        // 0x18000bfe0
        __security_check_cookie(g17);
        return &g47;
    }
    v21 = 0;
    v20 = 0;
    while ((int32_t)function_18001d5c0(a1, &v21) != 0) {
        // 0x18000bf93
        if ((int32_t)function_18001d5c0(a1, &v20) == 0) {
            // break -> 0x18000bfe0
            break;
        }
        int64_t v74 = v73 + 1; // 0x18000bfa4
        v73 = v74 & 0xffffffff;
        if (v72 <= (int32_t)v74) {
            // break -> 0x18000bfe0
            break;
        }
        v21 = 0;
        v20 = 0;
    }
    // 0x18000bfe0
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18000c020 - 0x18000c0b3
int64_t function_18000c020(int64_t a1, uint32_t a2, int32_t a3) {
    // 0x18000c020
    if (a3 == 0) {
        // 0x18000c0a0
        return 1;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000c034
    *v1 = a3;
    if (a1 == 0) {
        // 0x18000c0a0
        return 0;
    }
    int32_t v2 = a3 + 4; // 0x18000c03a
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18000c03e
    if (*v3 < v2) {
        // 0x18000c0a0
        return 0;
    }
    // 0x18000c044
    *v1 = v2;
    if (a2 == 0) {
        // 0x18000c0a0
        return 1;
    }
    uint32_t v4 = *v3; // 0x18000c05a
    int32_t v5 = a3 + 6; // 0x18000c05e
    uint32_t v6 = v4; // 0x18000c063
    int64_t v7 = 0; // 0x18000c063
    if (v5 > v4) {
        // 0x18000c0a0
        return 0;
    }
    *v1 = v5;
    uint32_t v8 = v2 + 4;
    int64_t result = 0; // 0x18000c06e
    while (v8 <= v6) {
        // 0x18000c070
        *v1 = v8;
        int64_t v9 = 0; // bp-24, 0x18000c086
        int64_t v10 = function_18001d710(a1, &v9); // 0x18000c08f
        result = 0;
        if ((int32_t)v10 == 0) {
            // break -> 0x18000c0a0
            break;
        }
        int64_t v11 = v7 + 1; // 0x18000c098
        result = 1;
        if ((int32_t)v11 >= a2) {
            // break -> 0x18000c0a0
            break;
        }
        int32_t v12 = *v1;
        v6 = *v3;
        int32_t v13 = v12 + 2; // 0x18000c05e
        v7 = v11 & 0xffffffff;
        result = 0;
        if (v13 > v6) {
            // break -> 0x18000c0a0
            break;
        }
        *v1 = v13;
        v8 = v12 + 4;
        result = 0;
    }
    // 0x18000c0a0
    return result;
}

// Address range: 0x18000c0c0 - 0x18000c1a7
int64_t function_18000c0c0(int64_t a1, uint32_t a2, int32_t a3) {
    if (a3 == 0) {
        // 0x18000c0c9
        return (uint32_t)(a3 + 1);
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000c0d7
    *v1 = a3;
    if (a1 == 0) {
        // 0x18000c175
        return 0;
    }
    int32_t v2 = a3 + 4; // 0x18000c0e4
    uint32_t v3 = *(int32_t *)(a1 + 12); // 0x18000c0e8
    if (v3 < v2) {
        // 0x18000c175
        return 0;
    }
    // 0x18000c0f5
    *v1 = v2;
    if (a2 == 0) {
        // 0x18000c175
        return 1;
    }
    int32_t v4 = v2; // 0x18000c131
    int64_t v5 = 0; // 0x18000c0c0
    int64_t v6 = 0; // 0x18000c13d
    uint32_t v7 = v4 + 4; // 0x18000c113
    int64_t result = 0; // 0x18000c119
    int32_t v8; // 0x18000c0c0
    int64_t v9; // 0x18000c0c0
    while (v7 <= v3) {
        // 0x18000c11b
        *v1 = v7;
        int32_t v10 = *(int32_t *)((int64_t)v4 + a1); // 0x18000c125
        v4 += 8;
        result = 0;
        if (v4 > v3) {
            // break -> 0x18000c175
            break;
        }
        uint32_t v11 = *(int32_t *)(a1 + 16) == 0 ? v10 : llvm_bswap_i32(v10);
        *v1 = v4;
        int64_t v12 = v6 + (int64_t)v11; // 0x18000c13d
        v6 = v12 & 0xffffffff;
        int64_t v13 = v5 + 1; // 0x18000c140
        v5 = v13 & 0xffffffff;
        if ((int32_t)v13 >= a2) {
            // 0x18000c146
            v8 = v4;
            v9 = 0;
            result = 1;
            if ((int32_t)v12 < 1) {
                return result;
            } else {
                goto lab_0x18000c150;
            }
        }
        v7 = v4 + 4;
        result = 0;
    }
  lab_0x18000c175:
    // 0x18000c175
    return result;
  lab_0x18000c150:;
    uint32_t v14 = v8 + 4; // 0x18000c153
    result = 0;
    if (v14 > v3) {
        return result;
    } else {
        // 0x18000c15b
        *v1 = v14;
        int32_t v15 = v8 + 8; // 0x18000c162
        result = 0;
        if (v15 > v3) {
            return result;
        } else {
            // 0x18000c16a
            *v1 = v15;
            int64_t v16 = v9 + 1 & 0xffffffff; // 0x18000c16e
            v8 = v15;
            v9 = v16;
            result = 1;
            if (v16 < v6) {
                goto lab_0x18000c150;
            } else {
                return result;
            }
        }
    }
}

// Address range: 0x18000c1b0 - 0x18000c5ed
int64_t function_18000c1b0(int64_t a1, int32_t * a2) {
    // 0x18000c1b0
    if (a1 == 0) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000c1e4
    int32_t v2 = *v1; // 0x18000c1e4
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18000c1e8
    uint32_t v4 = *v3; // 0x18000c1e8
    uint32_t v5 = v2 + 4; // 0x18000c1eb
    if (v5 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v6 = v2 + 8; // 0x18000c1f8
    *v1 = v5;
    if (v6 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000c208
    *v1 = v6;
    uint32_t v7 = v2 + 12;
    if (v7 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000c21c
    *v1 = v7;
    uint32_t v8 = v2 + 16; // 0x18000c223
    if (v8 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000c22e
    *v1 = v8;
    uint32_t v9 = v2 + 20;
    if (v9 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000c23f
    *v1 = v9;
    uint32_t v10 = v2 + 24; // 0x18000c246
    if (v10 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v11 = (int64_t)a2;
    *v1 = v10;
    int32_t v12 = *(int32_t *)(v11 + 8); // 0x18000c257
    if (v12 == 0) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v13 = v12 + 4; // 0x18000c262
    *v1 = v12;
    if (v13 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000c274
    *v1 = v13;
    uint32_t v14 = v12 + 8; // 0x18000c277
    if (v14 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v15 = v12 + 12; // 0x18000c282
    *v1 = v14;
    if (v15 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000c290
    *v1 = v15;
    uint32_t v16 = v12 + 16; // 0x18000c296
    if (v16 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000c2a1
    *v1 = v16;
    uint32_t v17 = v12 + 20; // 0x18000c2a7
    if (v17 > v4) {
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v18 = v17; // 0x18000c2b2
    *v1 = v17;
    uint32_t v19 = *(int32_t *)(v11 + 16) - 5; // 0x18000c2c3
    int64_t v20 = 0; // 0x18000c2cd
    int64_t v21 = v18; // 0x18000c2cd
    if (v19 >= 1) {
        int64_t v22 = v18 + 4; // 0x18000c2d0
        uint32_t v23 = (int32_t)v22; // 0x18000c2d3
        while (v4 >= v23) {
            int64_t v24 = v22 & 0xffffffff; // 0x18000c2d0
            v20 = v20 + 1 & 0xffffffff;
            *v1 = v23;
            v21 = v24;
            if (v20 >= (int64_t)v19) {
                goto lab_0x18000c2e5;
            }
            v22 = v24 + 4;
            v23 = (int32_t)v22;
        }
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x18000c2e5:;
    int32_t * v25 = (int32_t *)(v11 + 28); // 0x18000c2ed
    uint32_t v26 = *v25;
    int32_t v27 = v26; // 0x18000c2f2
    if (v26 > (int32_t)v21) {
        int64_t v28; // bp-872, 0x18000c1b0
        while ((int32_t)function_180004f90(a1, &v28) != 0) {
            // 0x18000c31d
            if (*v1 >= v26) {
                // 0x18000c322
                v27 = *v25;
                goto lab_0x18000c322_2;
            }
        }
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    goto lab_0x18000c322_2;
  lab_0x18000c322_2:;
    int32_t v29 = *(int32_t *)&g31; // 0x18000c322
    int64_t v30 = 0; // bp-952, 0x18000c33b
    if (v29 != 811) {
        if (v29 != 844) {
            if (v27 == 0 || (int32_t)function_18000c5f0(a1, v27, &v30) == 0) {
                // 0x18000c3a8
                __security_check_cookie(g17);
                return &g47;
            }
        } else {
            if (v27 == 0 || (int32_t)function_18000cb20(a1, v27, &v30) == 0) {
                // 0x18000c3a8
                __security_check_cookie(g17);
                return &g47;
            }
        }
    } else {
        if (v27 == 0 || (int32_t)function_18000d030(a1, v27, &v30) == 0) {
            // 0x18000c3a8
            __security_check_cookie(g17);
            return &g47;
        }
    }
    int32_t v31; // 0x18000c1b0
    if (v31 == 0) {
      lab_0x18000c57b:
        // 0x18000c57b
        if ((int32_t)function_18000d570(a1, 0, v31) == 0 || (int32_t)function_18000e400(a1, 0, v31) == 0) {
            // 0x18000c3a8
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000c5a5
        int64_t v32; // 0x18000c1b0
        if ((int32_t)function_18000d9f0(a1, 0, v31, v32) != 0) {
            // 0x18000c5ba
            function_18000b660(a1, 0, (int64_t)v31);
        }
        // 0x18000c3a8
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v33 = 0; // 0x18000c55a
    int32_t v34; // 0x18000c1b0
    int32_t v35 = v34 + 4; // 0x18000c568
    while (v35 <= *v3) {
        // 0x18000c570
        *v1 = v35;
        int64_t v36 = v33 + 1; // 0x18000c574
        v33 = v36 & 0xffffffff;
        if ((int32_t)v36 >= 32) {
            goto lab_0x18000c57b;
        }
        v35 += 4;
    }
    // 0x18000c3a8
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18000c5f0 - 0x18000cb20
int64_t function_18000c5f0(int64_t a1, uint32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000c611
    *v1 = a2;
    if (a1 == 0) {
        // 0x18000cae7
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v2 = a2 + 4; // 0x18000c620
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18000c623
    if (*v3 < v2) {
        // 0x18000cae7
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v4 = (int64_t)a3;
    *v1 = v2;
    int32_t * v5 = (int32_t *)(a1 + 16); // 0x18000c632
    int32_t v6 = *(int32_t *)((int64_t)a2 + a1); // 0x18000c636
    uint32_t v7 = *v5 == 0 ? v6 : llvm_bswap_i32(v6);
    int64_t v8; // bp-344, 0x18000c5f0
    function_180005050(a1, (int64_t)v7, &v8);
    uint32_t v9 = *v1; // 0x18000c64f
    int64_t v10 = 0; // 0x18000c64f
    v9 += 4;
    int64_t v11; // 0x18000c5f0
    int64_t v12; // 0x18000c5f0
    uint32_t v13; // 0x18000c67a
    while (v9 <= *v3) {
        // 0x18000c66a
        *v1 = v9;
        int64_t v14 = v10 + 1; // 0x18000c66f
        v10 = v14 & 0xffffffff;
        if ((int32_t)v14 >= 6) {
            // 0x18000c67a
            v13 = *v3;
            v11 = v9;
            v12 = 0;
            goto lab_0x18000c689;
        }
        v9 += 4;
    }
  lab_0x18000cae7:
    // 0x18000cae7
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000c689:;
    int64_t v15 = v11 + 4; // 0x18000c689
    uint32_t v16 = (int32_t)v15;
    if (v13 < v16) {
        goto lab_0x18000cae7;
    } else {
        int64_t v17 = v15 & 0xffffffff;
        int64_t v18 = v12 + 1; // 0x18000c694
        *v1 = v16;
        v11 = v17;
        v12 = v18 & 0xffffffff;
        if ((int32_t)v18 < 19) {
            goto lab_0x18000c689;
        } else {
            uint32_t v19 = v16 + 4; // 0x18000c6ab
            if (v19 > v13) {
                goto lab_0x18000cae7;
            } else {
                // 0x18000c6b3
                *v1 = v19;
                uint32_t v20 = v16 + 8; // 0x18000c6d8
                if (v20 > v13) {
                    goto lab_0x18000cae7;
                } else {
                    int32_t v21 = *v5; // 0x18000c6bc
                    int32_t v22 = *(int32_t *)(v17 + a1); // 0x18000c6cc
                    *v1 = v20;
                    uint32_t v23 = v16 + 12;
                    if (v23 > v13) {
                        goto lab_0x18000cae7;
                    } else {
                        int32_t v24 = *(int32_t *)((int64_t)v19 + a1); // 0x18000c6f0
                        *v1 = v23;
                        uint32_t v25 = v16 + 16; // 0x18000c72f
                        if (v25 > v13) {
                            goto lab_0x18000cae7;
                        } else {
                            int32_t v26 = *(int32_t *)((int64_t)v20 + a1); // 0x18000c71c
                            *v1 = v25;
                            uint32_t v27 = v16 + 20;
                            if (v27 > v13) {
                                goto lab_0x18000cae7;
                            } else {
                                int32_t v28 = *(int32_t *)((int64_t)v23 + a1); // 0x18000c747
                                *v1 = v27;
                                uint32_t v29 = v16 + 24; // 0x18000c786
                                if (v29 > v13) {
                                    goto lab_0x18000cae7;
                                } else {
                                    int32_t v30 = *(int32_t *)((int64_t)v25 + a1); // 0x18000c773
                                    *v1 = v29;
                                    uint32_t v31 = v16 + 28;
                                    if (v31 > v13) {
                                        goto lab_0x18000cae7;
                                    } else {
                                        int32_t v32 = *(int32_t *)((int64_t)v27 + a1); // 0x18000c79e
                                        *v1 = v31;
                                        uint32_t v33 = v16 + 32; // 0x18000c7c6
                                        if (v33 > v13) {
                                            goto lab_0x18000cae7;
                                        } else {
                                            // 0x18000c7d2
                                            *v1 = v33;
                                            uint32_t v34 = v16 + 36;
                                            if (v34 > v13) {
                                                goto lab_0x18000cae7;
                                            } else {
                                                int32_t v35 = *(int32_t *)((int64_t)v31 + a1); // 0x18000c7de
                                                *v1 = v34;
                                                uint32_t v36 = v16 + 40; // 0x18000c81e
                                                if (v36 > v13) {
                                                    goto lab_0x18000cae7;
                                                } else {
                                                    int32_t v37 = *(int32_t *)((int64_t)v33 + a1); // 0x18000c812
                                                    *v1 = v36;
                                                    uint32_t v38 = v16 + 44;
                                                    if (v38 > v13) {
                                                        goto lab_0x18000cae7;
                                                    } else {
                                                        // 0x18000c83e
                                                        *v1 = v38;
                                                        uint32_t v39 = v16 + 48; // 0x18000c85f
                                                        if (v39 > v13) {
                                                            goto lab_0x18000cae7;
                                                        } else {
                                                            int32_t v40 = *(int32_t *)((int64_t)v36 + a1); // 0x18000c853
                                                            *v1 = v39;
                                                            uint32_t v41 = v16 + 52;
                                                            if (v41 > v13) {
                                                                goto lab_0x18000cae7;
                                                            } else {
                                                                int32_t v42 = *(int32_t *)((int64_t)v38 + a1); // 0x18000c87f
                                                                *v1 = v41;
                                                                uint32_t v43 = v16 + 56; // 0x18000c8a0
                                                                if (v43 > v13) {
                                                                    goto lab_0x18000cae7;
                                                                } else {
                                                                    // 0x18000c8ab
                                                                    *v1 = v43;
                                                                    uint32_t v44 = v16 + 60;
                                                                    if (v44 > v13) {
                                                                        goto lab_0x18000cae7;
                                                                    } else {
                                                                        // 0x18000c8bd
                                                                        *v1 = v44;
                                                                        uint32_t v45 = v16 + 64; // 0x18000c8c6
                                                                        if (v45 > v13) {
                                                                            goto lab_0x18000cae7;
                                                                        } else {
                                                                            // 0x18000c8d1
                                                                            *v1 = v45;
                                                                            uint32_t v46 = v16 + 68;
                                                                            if (v46 > v13) {
                                                                                goto lab_0x18000cae7;
                                                                            } else {
                                                                                // 0x18000c8e3
                                                                                *v1 = v46;
                                                                                uint32_t v47 = v16 + 72; // 0x18000c8ec
                                                                                if (v47 > v13) {
                                                                                    goto lab_0x18000cae7;
                                                                                } else {
                                                                                    // 0x18000c8f7
                                                                                    *v1 = v47;
                                                                                    uint32_t v48 = v16 + 76;
                                                                                    if (v48 > v13) {
                                                                                        goto lab_0x18000cae7;
                                                                                    } else {
                                                                                        // 0x18000c909
                                                                                        *v1 = v48;
                                                                                        uint32_t v49 = v16 + 80; // 0x18000c929
                                                                                        if (v49 > v13) {
                                                                                            goto lab_0x18000cae7;
                                                                                        } else {
                                                                                            int32_t v50 = *(int32_t *)((int64_t)v47 + a1); // 0x18000c91e
                                                                                            *v1 = v49;
                                                                                            uint32_t v51 = v16 + 84;
                                                                                            if (v51 > v13) {
                                                                                                goto lab_0x18000cae7;
                                                                                            } else {
                                                                                                int32_t v52 = *(int32_t *)((int64_t)v48 + a1); // 0x18000c949
                                                                                                *v1 = v51;
                                                                                                uint32_t v53 = v16 + 88; // 0x18000c969
                                                                                                if (v53 > v13) {
                                                                                                    goto lab_0x18000cae7;
                                                                                                } else {
                                                                                                    // 0x18000c974
                                                                                                    *v1 = v53;
                                                                                                    uint32_t v54 = v16 + 92;
                                                                                                    if (v54 > v13) {
                                                                                                        goto lab_0x18000cae7;
                                                                                                    } else {
                                                                                                        // 0x18000c986
                                                                                                        *v1 = v54;
                                                                                                        uint32_t v55 = v16 + 96; // 0x18000c98f
                                                                                                        if (v55 > v13) {
                                                                                                            goto lab_0x18000cae7;
                                                                                                        } else {
                                                                                                            // 0x18000c99a
                                                                                                            *v1 = v55;
                                                                                                            uint32_t v56 = v16 + 100;
                                                                                                            if (v56 > v13) {
                                                                                                                goto lab_0x18000cae7;
                                                                                                            } else {
                                                                                                                // 0x18000c9ac
                                                                                                                *v1 = v56;
                                                                                                                uint32_t v57 = v16 + 104; // 0x18000c9cc
                                                                                                                if (v57 > v13) {
                                                                                                                    goto lab_0x18000cae7;
                                                                                                                } else {
                                                                                                                    int32_t v58 = *(int32_t *)((int64_t)v55 + a1); // 0x18000c9c1
                                                                                                                    *v1 = v57;
                                                                                                                    uint32_t v59 = v16 + 108;
                                                                                                                    if (v59 > v13) {
                                                                                                                        goto lab_0x18000cae7;
                                                                                                                    } else {
                                                                                                                        int32_t v60 = *(int32_t *)((int64_t)v56 + a1); // 0x18000c9e4
                                                                                                                        *v1 = v59;
                                                                                                                        uint32_t v61 = v16 + 112; // 0x18000ca05
                                                                                                                        if (v61 > v13) {
                                                                                                                            goto lab_0x18000cae7;
                                                                                                                        } else {
                                                                                                                            // 0x18000ca10
                                                                                                                            *v1 = v61;
                                                                                                                            uint32_t v62 = v16 + 116;
                                                                                                                            if (v62 > v13) {
                                                                                                                                goto lab_0x18000cae7;
                                                                                                                            } else {
                                                                                                                                // 0x18000ca22
                                                                                                                                *v1 = v62;
                                                                                                                                uint32_t v63 = v16 + 120; // 0x18000ca2b
                                                                                                                                if (v63 > v13) {
                                                                                                                                    goto lab_0x18000cae7;
                                                                                                                                } else {
                                                                                                                                    // 0x18000ca36
                                                                                                                                    *v1 = v63;
                                                                                                                                    uint32_t v64 = v16 + 124;
                                                                                                                                    if (v64 > v13) {
                                                                                                                                        goto lab_0x18000cae7;
                                                                                                                                    } else {
                                                                                                                                        // 0x18000ca48
                                                                                                                                        *v1 = v64;
                                                                                                                                        uint32_t v65 = v16 + 128; // 0x18000ca51
                                                                                                                                        if (v65 > v13) {
                                                                                                                                            goto lab_0x18000cae7;
                                                                                                                                        } else {
                                                                                                                                            int32_t v66 = v21 == 0 ? v22 : llvm_bswap_i32(v22);
                                                                                                                                            int32_t v67 = v21 == 0 ? v24 : llvm_bswap_i32(v24);
                                                                                                                                            int32_t v68 = v21 == 0 ? v26 : llvm_bswap_i32(v26);
                                                                                                                                            int32_t v69 = v21 == 0 ? v28 : llvm_bswap_i32(v28);
                                                                                                                                            int32_t v70 = v21 == 0 ? v30 : llvm_bswap_i32(v30);
                                                                                                                                            int32_t v71 = v21 == 0 ? v32 : llvm_bswap_i32(v32);
                                                                                                                                            int32_t v72 = v21 == 0 ? v35 : llvm_bswap_i32(v35);
                                                                                                                                            int32_t v73 = v21 == 0 ? v37 : llvm_bswap_i32(v37);
                                                                                                                                            int32_t v74 = v21 == 0 ? v40 : llvm_bswap_i32(v40);
                                                                                                                                            int32_t v75 = v21 == 0 ? v42 : llvm_bswap_i32(v42);
                                                                                                                                            int32_t v76 = v21 == 0 ? v50 : llvm_bswap_i32(v50);
                                                                                                                                            int32_t v77 = v21 == 0 ? v52 : llvm_bswap_i32(v52);
                                                                                                                                            int32_t v78 = v21 == 0 ? v58 : llvm_bswap_i32(v58);
                                                                                                                                            int32_t v79 = v21 == 0 ? v60 : llvm_bswap_i32(v60);
                                                                                                                                            *v1 = v65;
                                                                                                                                            *(int32_t *)(v4 + 28) = v67;
                                                                                                                                            *(int32_t *)(v4 + 32) = v68;
                                                                                                                                            *(int32_t *)(v4 + 36) = v69;
                                                                                                                                            *(int32_t *)(v4 + 40) = v70;
                                                                                                                                            *(int32_t *)(v4 + 44) = v71;
                                                                                                                                            *(int32_t *)(v4 + 48) = v72;
                                                                                                                                            *(int32_t *)(v4 + 24) = v66;
                                                                                                                                            *(int32_t *)(v4 + 52) = v73;
                                                                                                                                            *(int32_t *)(v4 + 56) = v74;
                                                                                                                                            *(int32_t *)(v4 + 60) = v75;
                                                                                                                                            *(int32_t *)(v4 + 64) = v76;
                                                                                                                                            *(int32_t *)(v4 + 68) = v77;
                                                                                                                                            *(int32_t *)(v4 + 72) = v78;
                                                                                                                                            *(int32_t *)(v4 + 76) = v79;
                                                                                                                                            goto lab_0x18000cae7;
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x18000cb20 - 0x18000d02c
int64_t function_18000cb20(int64_t a1, uint32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000cb41
    *v1 = a2;
    if (a1 == 0) {
        // 0x18000cff3
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v2 = a2 + 4; // 0x18000cb4d
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18000cb50
    if (*v3 < v2) {
        // 0x18000cff3
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v4 = (int64_t)a3;
    *v1 = v2;
    int32_t * v5 = (int32_t *)(a1 + 16); // 0x18000cb5f
    int32_t v6 = *(int32_t *)((int64_t)a2 + a1); // 0x18000cb63
    uint32_t v7 = *v5 == 0 ? v6 : llvm_bswap_i32(v6);
    int64_t v8; // bp-344, 0x18000cb20
    function_180005050(a1, (int64_t)v7, &v8);
    uint32_t v9 = *v1; // 0x18000cb7d
    int64_t v10 = 0; // 0x18000cb7d
    v9 += 4;
    int64_t v11; // 0x18000cb20
    int64_t v12; // 0x18000cb20
    uint32_t v13; // 0x18000cba8
    while (v9 <= *v3) {
        // 0x18000cb98
        *v1 = v9;
        int64_t v14 = v10 + 1; // 0x18000cb9c
        v10 = v14 & 0xffffffff;
        if ((int32_t)v14 >= 6) {
            // 0x18000cba8
            v13 = *v3;
            v11 = v9;
            v12 = 0;
            goto lab_0x18000cbb9;
        }
        v9 += 4;
    }
  lab_0x18000cff3:
    // 0x18000cff3
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000cbb9:;
    int64_t v15 = v11 + 4; // 0x18000cbb9
    uint32_t v16 = (int32_t)v15;
    if (v13 < v16) {
        goto lab_0x18000cff3;
    } else {
        int64_t v17 = v15 & 0xffffffff;
        int64_t v18 = v12 + 1; // 0x18000cbc5
        *v1 = v16;
        v11 = v17;
        v12 = v18 & 0xffffffff;
        if ((int32_t)v18 < 19) {
            goto lab_0x18000cbb9;
        } else {
            uint32_t v19 = v16 + 4; // 0x18000cbdb
            if (v19 > v13) {
                goto lab_0x18000cff3;
            } else {
                // 0x18000cbe4
                *v1 = v19;
                uint32_t v20 = v16 + 8; // 0x18000cc08
                if (v20 > v13) {
                    goto lab_0x18000cff3;
                } else {
                    int32_t v21 = *v5; // 0x18000cbec
                    int32_t v22 = *(int32_t *)(v17 + a1); // 0x18000cbfc
                    *v1 = v20;
                    uint32_t v23 = v16 + 12;
                    if (v23 > v13) {
                        goto lab_0x18000cff3;
                    } else {
                        int32_t v24 = *(int32_t *)((int64_t)v19 + a1); // 0x18000cc21
                        *v1 = v23;
                        uint32_t v25 = v16 + 16; // 0x18000cc60
                        if (v25 > v13) {
                            goto lab_0x18000cff3;
                        } else {
                            int32_t v26 = *(int32_t *)((int64_t)v20 + a1); // 0x18000cc4d
                            *v1 = v25;
                            uint32_t v27 = v16 + 20;
                            if (v27 > v13) {
                                goto lab_0x18000cff3;
                            } else {
                                int32_t v28 = *(int32_t *)((int64_t)v23 + a1); // 0x18000cc79
                                *v1 = v27;
                                uint32_t v29 = v16 + 24; // 0x18000ccb8
                                if (v29 > v13) {
                                    goto lab_0x18000cff3;
                                } else {
                                    int32_t v30 = *(int32_t *)((int64_t)v25 + a1); // 0x18000cca5
                                    *v1 = v29;
                                    uint32_t v31 = v16 + 28;
                                    if (v31 > v13) {
                                        goto lab_0x18000cff3;
                                    } else {
                                        int32_t v32 = *(int32_t *)((int64_t)v27 + a1); // 0x18000ccd1
                                        *v1 = v31;
                                        uint32_t v33 = v16 + 32; // 0x18000ccf9
                                        if (v33 > v13) {
                                            goto lab_0x18000cff3;
                                        } else {
                                            // 0x18000cd06
                                            *v1 = v33;
                                            uint32_t v34 = v16 + 36;
                                            if (v34 > v13) {
                                                goto lab_0x18000cff3;
                                            } else {
                                                int32_t v35 = *(int32_t *)((int64_t)v31 + a1); // 0x18000cd12
                                                *v1 = v34;
                                                uint32_t v36 = v16 + 40; // 0x18000cd52
                                                if (v36 > v13) {
                                                    goto lab_0x18000cff3;
                                                } else {
                                                    int32_t v37 = *(int32_t *)((int64_t)v33 + a1); // 0x18000cd46
                                                    *v1 = v36;
                                                    uint32_t v38 = v16 + 44;
                                                    if (v38 > v13) {
                                                        goto lab_0x18000cff3;
                                                    } else {
                                                        // 0x18000cd74
                                                        *v1 = v38;
                                                        uint32_t v39 = v16 + 48; // 0x18000cd94
                                                        if (v39 > v13) {
                                                            goto lab_0x18000cff3;
                                                        } else {
                                                            int32_t v40 = *(int32_t *)((int64_t)v36 + a1); // 0x18000cd88
                                                            *v1 = v39;
                                                            uint32_t v41 = v16 + 52;
                                                            if (v41 > v13) {
                                                                goto lab_0x18000cff3;
                                                            } else {
                                                                int32_t v42 = *(int32_t *)((int64_t)v38 + a1); // 0x18000cdb5
                                                                *v1 = v41;
                                                                uint32_t v43 = v16 + 56; // 0x18000cdd5
                                                                if (v43 > v13) {
                                                                    goto lab_0x18000cff3;
                                                                } else {
                                                                    // 0x18000cde1
                                                                    *v1 = v43;
                                                                    uint32_t v44 = v16 + 60;
                                                                    if (v44 > v13) {
                                                                        goto lab_0x18000cff3;
                                                                    } else {
                                                                        // 0x18000cdf3
                                                                        *v1 = v44;
                                                                        uint32_t v45 = v16 + 64; // 0x18000cdfa
                                                                        if (v45 > v13) {
                                                                            goto lab_0x18000cff3;
                                                                        } else {
                                                                            // 0x18000ce06
                                                                            *v1 = v45;
                                                                            uint32_t v46 = v16 + 68;
                                                                            if (v46 > v13) {
                                                                                goto lab_0x18000cff3;
                                                                            } else {
                                                                                // 0x18000ce18
                                                                                *v1 = v46;
                                                                                uint32_t v47 = v16 + 72; // 0x18000ce1f
                                                                                if (v47 > v13) {
                                                                                    goto lab_0x18000cff3;
                                                                                } else {
                                                                                    // 0x18000ce2b
                                                                                    *v1 = v47;
                                                                                    uint32_t v48 = v16 + 76;
                                                                                    if (v48 > v13) {
                                                                                        goto lab_0x18000cff3;
                                                                                    } else {
                                                                                        // 0x18000ce3d
                                                                                        *v1 = v48;
                                                                                        uint32_t v49 = v16 + 80; // 0x18000ce44
                                                                                        if (v49 > v13) {
                                                                                            goto lab_0x18000cff3;
                                                                                        } else {
                                                                                            // 0x18000ce50
                                                                                            *v1 = v49;
                                                                                            uint32_t v50 = v16 + 84;
                                                                                            if (v50 > v13) {
                                                                                                goto lab_0x18000cff3;
                                                                                            } else {
                                                                                                // 0x18000ce62
                                                                                                *v1 = v50;
                                                                                                uint32_t v51 = v16 + 88; // 0x18000ce81
                                                                                                if (v51 > v13) {
                                                                                                    goto lab_0x18000cff3;
                                                                                                } else {
                                                                                                    int32_t v52 = *(int32_t *)((int64_t)v49 + a1); // 0x18000ce76
                                                                                                    *v1 = v51;
                                                                                                    uint32_t v53 = v16 + 92;
                                                                                                    if (v53 > v13) {
                                                                                                        goto lab_0x18000cff3;
                                                                                                    } else {
                                                                                                        int32_t v54 = *(int32_t *)((int64_t)v50 + a1); // 0x18000cea2
                                                                                                        *v1 = v53;
                                                                                                        uint32_t v55 = v16 + 96; // 0x18000cec1
                                                                                                        if (v55 > v13) {
                                                                                                            goto lab_0x18000cff3;
                                                                                                        } else {
                                                                                                            // 0x18000cecd
                                                                                                            *v1 = v55;
                                                                                                            uint32_t v56 = v16 + 100;
                                                                                                            if (v56 > v13) {
                                                                                                                goto lab_0x18000cff3;
                                                                                                            } else {
                                                                                                                // 0x18000cedf
                                                                                                                *v1 = v56;
                                                                                                                uint32_t v57 = v16 + 104; // 0x18000cee6
                                                                                                                if (v57 > v13) {
                                                                                                                    goto lab_0x18000cff3;
                                                                                                                } else {
                                                                                                                    // 0x18000cef2
                                                                                                                    *v1 = v57;
                                                                                                                    uint32_t v58 = v16 + 108;
                                                                                                                    if (v58 > v13) {
                                                                                                                        goto lab_0x18000cff3;
                                                                                                                    } else {
                                                                                                                        // 0x18000cf04
                                                                                                                        *v1 = v58;
                                                                                                                        uint32_t v59 = v16 + 112; // 0x18000cf23
                                                                                                                        if (v59 > v13) {
                                                                                                                            goto lab_0x18000cff3;
                                                                                                                        } else {
                                                                                                                            int32_t v60 = *(int32_t *)((int64_t)v57 + a1); // 0x18000cf18
                                                                                                                            *v1 = v59;
                                                                                                                            uint32_t v61 = v16 + 116;
                                                                                                                            if (v61 > v13) {
                                                                                                                                goto lab_0x18000cff3;
                                                                                                                            } else {
                                                                                                                                int32_t v62 = *(int32_t *)((int64_t)v58 + a1); // 0x18000cf3c
                                                                                                                                *v1 = v61;
                                                                                                                                uint32_t v63 = v16 + 120; // 0x18000cf5c
                                                                                                                                if (v63 > v13) {
                                                                                                                                    goto lab_0x18000cff3;
                                                                                                                                } else {
                                                                                                                                    int32_t v64 = v21 == 0 ? v22 : llvm_bswap_i32(v22);
                                                                                                                                    int32_t v65 = v21 == 0 ? v24 : llvm_bswap_i32(v24);
                                                                                                                                    int32_t v66 = v21 == 0 ? v26 : llvm_bswap_i32(v26);
                                                                                                                                    int32_t v67 = v21 == 0 ? v28 : llvm_bswap_i32(v28);
                                                                                                                                    int32_t v68 = v21 == 0 ? v30 : llvm_bswap_i32(v30);
                                                                                                                                    int32_t v69 = v21 == 0 ? v32 : llvm_bswap_i32(v32);
                                                                                                                                    int32_t v70 = v21 == 0 ? v35 : llvm_bswap_i32(v35);
                                                                                                                                    int32_t v71 = v21 == 0 ? v37 : llvm_bswap_i32(v37);
                                                                                                                                    int32_t v72 = v21 == 0 ? v40 : llvm_bswap_i32(v40);
                                                                                                                                    int32_t v73 = v21 == 0 ? v42 : llvm_bswap_i32(v42);
                                                                                                                                    int32_t v74 = v21 == 0 ? v52 : llvm_bswap_i32(v52);
                                                                                                                                    int32_t v75 = v21 == 0 ? v54 : llvm_bswap_i32(v54);
                                                                                                                                    int32_t v76 = v21 == 0 ? v60 : llvm_bswap_i32(v60);
                                                                                                                                    int32_t v77 = v21 == 0 ? v62 : llvm_bswap_i32(v62);
                                                                                                                                    *v1 = v63;
                                                                                                                                    *(int32_t *)(v4 + 28) = v65;
                                                                                                                                    *(int32_t *)(v4 + 32) = v66;
                                                                                                                                    *(int32_t *)(v4 + 36) = v67;
                                                                                                                                    *(int32_t *)(v4 + 40) = v68;
                                                                                                                                    *(int32_t *)(v4 + 44) = v69;
                                                                                                                                    *(int32_t *)(v4 + 48) = v70;
                                                                                                                                    *(int32_t *)(v4 + 24) = v64;
                                                                                                                                    *(int32_t *)(v4 + 52) = v71;
                                                                                                                                    *(int32_t *)(v4 + 56) = v72;
                                                                                                                                    *(int32_t *)(v4 + 60) = v73;
                                                                                                                                    *(int32_t *)(v4 + 64) = v74;
                                                                                                                                    *(int32_t *)(v4 + 68) = v75;
                                                                                                                                    *(int32_t *)(v4 + 72) = v76;
                                                                                                                                    *(int32_t *)(v4 + 76) = v77;
                                                                                                                                    goto lab_0x18000cff3;
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x18000d030 - 0x18000d561
int64_t function_18000d030(int64_t a1, uint32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000d051
    *v1 = a2;
    if (a1 == 0) {
        // 0x18000d528
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v2 = a2 + 4; // 0x18000d05d
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18000d060
    if (*v3 < v2) {
        // 0x18000d528
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v4 = (int64_t)a3;
    *v1 = v2;
    int32_t * v5 = (int32_t *)(a1 + 16); // 0x18000d06f
    int32_t v6 = *(int32_t *)((int64_t)a2 + a1); // 0x18000d073
    uint32_t v7 = *v5 == 0 ? v6 : llvm_bswap_i32(v6);
    int64_t v8; // bp-344, 0x18000d030
    function_180005050(a1, (int64_t)v7, &v8);
    uint32_t v9 = *v1; // 0x18000d08d
    int64_t v10 = 0; // 0x18000d08d
    v9 += 4;
    int64_t v11; // 0x18000d030
    int64_t v12; // 0x18000d030
    uint32_t v13; // 0x18000d0b8
    while (v9 <= *v3) {
        // 0x18000d0a8
        *v1 = v9;
        int64_t v14 = v10 + 1; // 0x18000d0ac
        v10 = v14 & 0xffffffff;
        if ((int32_t)v14 >= 6) {
            // 0x18000d0b8
            v13 = *v3;
            v11 = v9;
            v12 = 0;
            goto lab_0x18000d0c9;
        }
        v9 += 4;
    }
  lab_0x18000d528:
    // 0x18000d528
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000d0c9:;
    int64_t v15 = v11 + 4; // 0x18000d0c9
    uint32_t v16 = (int32_t)v15;
    if (v13 < v16) {
        goto lab_0x18000d528;
    } else {
        int64_t v17 = v12 + 1; // 0x18000d0d5
        *v1 = v16;
        v11 = v15 & 0xffffffff;
        v12 = v17 & 0xffffffff;
        if ((int32_t)v17 < 10) {
            goto lab_0x18000d0c9;
        } else {
            uint32_t v18 = v16 + 4; // 0x18000d0eb
            if (v18 > v13) {
                goto lab_0x18000d528;
            } else {
                // 0x18000d0f4
                *v1 = v18;
                uint32_t v19 = v16 + 8; // 0x18000d0fb
                if (v19 > v13) {
                    goto lab_0x18000d528;
                } else {
                    // 0x18000d107
                    *v1 = v19;
                    uint32_t v20 = v16 + 12;
                    if (v20 > v13) {
                        goto lab_0x18000d528;
                    } else {
                        // 0x18000d119
                        *v1 = v20;
                        uint32_t v21 = v16 + 16; // 0x18000d13d
                        if (v21 > v13) {
                            goto lab_0x18000d528;
                        } else {
                            int32_t v22 = *v5; // 0x18000d121
                            int32_t v23 = *(int32_t *)((int64_t)v19 + a1); // 0x18000d131
                            *v1 = v21;
                            uint32_t v24 = v16 + 20;
                            if (v24 > v13) {
                                goto lab_0x18000d528;
                            } else {
                                int32_t v25 = *(int32_t *)((int64_t)v20 + a1); // 0x18000d156
                                *v1 = v24;
                                uint32_t v26 = v16 + 24; // 0x18000d195
                                if (v26 > v13) {
                                    goto lab_0x18000d528;
                                } else {
                                    int32_t v27 = *(int32_t *)((int64_t)v21 + a1); // 0x18000d182
                                    *v1 = v26;
                                    uint32_t v28 = v16 + 28;
                                    if (v28 > v13) {
                                        goto lab_0x18000d528;
                                    } else {
                                        int32_t v29 = *(int32_t *)((int64_t)v24 + a1); // 0x18000d1ae
                                        *v1 = v28;
                                        uint32_t v30 = v16 + 32; // 0x18000d1ed
                                        if (v30 > v13) {
                                            goto lab_0x18000d528;
                                        } else {
                                            int32_t v31 = *(int32_t *)((int64_t)v26 + a1); // 0x18000d1da
                                            *v1 = v30;
                                            uint32_t v32 = v16 + 36;
                                            if (v32 > v13) {
                                                goto lab_0x18000d528;
                                            } else {
                                                int32_t v33 = *(int32_t *)((int64_t)v28 + a1); // 0x18000d206
                                                *v1 = v32;
                                                uint32_t v34 = v16 + 40; // 0x18000d22e
                                                if (v34 > v13) {
                                                    goto lab_0x18000d528;
                                                } else {
                                                    // 0x18000d23b
                                                    *v1 = v34;
                                                    uint32_t v35 = v16 + 44;
                                                    if (v35 > v13) {
                                                        goto lab_0x18000d528;
                                                    } else {
                                                        int32_t v36 = *(int32_t *)((int64_t)v32 + a1); // 0x18000d247
                                                        *v1 = v35;
                                                        uint32_t v37 = v16 + 48; // 0x18000d287
                                                        if (v37 > v13) {
                                                            goto lab_0x18000d528;
                                                        } else {
                                                            int32_t v38 = *(int32_t *)((int64_t)v34 + a1); // 0x18000d27b
                                                            *v1 = v37;
                                                            uint32_t v39 = v16 + 52;
                                                            if (v39 > v13) {
                                                                goto lab_0x18000d528;
                                                            } else {
                                                                // 0x18000d2a9
                                                                *v1 = v39;
                                                                uint32_t v40 = v16 + 56; // 0x18000d2c9
                                                                if (v40 > v13) {
                                                                    goto lab_0x18000d528;
                                                                } else {
                                                                    int32_t v41 = *(int32_t *)((int64_t)v37 + a1); // 0x18000d2bd
                                                                    *v1 = v40;
                                                                    uint32_t v42 = v16 + 60;
                                                                    if (v42 > v13) {
                                                                        goto lab_0x18000d528;
                                                                    } else {
                                                                        int32_t v43 = *(int32_t *)((int64_t)v39 + a1); // 0x18000d2ea
                                                                        *v1 = v42;
                                                                        uint32_t v44 = v16 + 64; // 0x18000d30a
                                                                        if (v44 > v13) {
                                                                            goto lab_0x18000d528;
                                                                        } else {
                                                                            // 0x18000d316
                                                                            *v1 = v44;
                                                                            uint32_t v45 = v16 + 68;
                                                                            if (v45 > v13) {
                                                                                goto lab_0x18000d528;
                                                                            } else {
                                                                                // 0x18000d328
                                                                                *v1 = v45;
                                                                                uint32_t v46 = v16 + 72; // 0x18000d32f
                                                                                if (v46 > v13) {
                                                                                    goto lab_0x18000d528;
                                                                                } else {
                                                                                    // 0x18000d33b
                                                                                    *v1 = v46;
                                                                                    uint32_t v47 = v16 + 76;
                                                                                    if (v47 > v13) {
                                                                                        goto lab_0x18000d528;
                                                                                    } else {
                                                                                        // 0x18000d34d
                                                                                        *v1 = v47;
                                                                                        uint32_t v48 = v16 + 80; // 0x18000d354
                                                                                        if (v48 > v13) {
                                                                                            goto lab_0x18000d528;
                                                                                        } else {
                                                                                            // 0x18000d360
                                                                                            *v1 = v48;
                                                                                            uint32_t v49 = v16 + 84;
                                                                                            if (v49 > v13) {
                                                                                                goto lab_0x18000d528;
                                                                                            } else {
                                                                                                // 0x18000d372
                                                                                                *v1 = v49;
                                                                                                uint32_t v50 = v16 + 88; // 0x18000d379
                                                                                                if (v50 > v13) {
                                                                                                    goto lab_0x18000d528;
                                                                                                } else {
                                                                                                    // 0x18000d385
                                                                                                    *v1 = v50;
                                                                                                    uint32_t v51 = v16 + 92;
                                                                                                    if (v51 > v13) {
                                                                                                        goto lab_0x18000d528;
                                                                                                    } else {
                                                                                                        // 0x18000d397
                                                                                                        *v1 = v51;
                                                                                                        uint32_t v52 = v16 + 96; // 0x18000d3b6
                                                                                                        if (v52 > v13) {
                                                                                                            goto lab_0x18000d528;
                                                                                                        } else {
                                                                                                            int32_t v53 = *(int32_t *)((int64_t)v50 + a1); // 0x18000d3ab
                                                                                                            *v1 = v52;
                                                                                                            uint32_t v54 = v16 + 100;
                                                                                                            if (v54 > v13) {
                                                                                                                goto lab_0x18000d528;
                                                                                                            } else {
                                                                                                                int32_t v55 = *(int32_t *)((int64_t)v51 + a1); // 0x18000d3d7
                                                                                                                *v1 = v54;
                                                                                                                uint32_t v56 = v16 + 104; // 0x18000d3f6
                                                                                                                if (v56 > v13) {
                                                                                                                    goto lab_0x18000d528;
                                                                                                                } else {
                                                                                                                    // 0x18000d402
                                                                                                                    *v1 = v56;
                                                                                                                    uint32_t v57 = v16 + 108;
                                                                                                                    if (v57 > v13) {
                                                                                                                        goto lab_0x18000d528;
                                                                                                                    } else {
                                                                                                                        // 0x18000d414
                                                                                                                        *v1 = v57;
                                                                                                                        uint32_t v58 = v16 + 112; // 0x18000d41b
                                                                                                                        if (v58 > v13) {
                                                                                                                            goto lab_0x18000d528;
                                                                                                                        } else {
                                                                                                                            // 0x18000d427
                                                                                                                            *v1 = v58;
                                                                                                                            uint32_t v59 = v16 + 116;
                                                                                                                            if (v59 > v13) {
                                                                                                                                goto lab_0x18000d528;
                                                                                                                            } else {
                                                                                                                                // 0x18000d439
                                                                                                                                *v1 = v59;
                                                                                                                                uint32_t v60 = v16 + 120; // 0x18000d458
                                                                                                                                if (v60 > v13) {
                                                                                                                                    goto lab_0x18000d528;
                                                                                                                                } else {
                                                                                                                                    int32_t v61 = *(int32_t *)((int64_t)v58 + a1); // 0x18000d44d
                                                                                                                                    *v1 = v60;
                                                                                                                                    uint32_t v62 = v16 + 124;
                                                                                                                                    if (v62 > v13) {
                                                                                                                                        goto lab_0x18000d528;
                                                                                                                                    } else {
                                                                                                                                        int32_t v63 = *(int32_t *)((int64_t)v59 + a1); // 0x18000d471
                                                                                                                                        *v1 = v62;
                                                                                                                                        uint32_t v64 = v16 + 128; // 0x18000d491
                                                                                                                                        if (v64 > v13) {
                                                                                                                                            goto lab_0x18000d528;
                                                                                                                                        } else {
                                                                                                                                            int32_t v65 = v22 == 0 ? v23 : llvm_bswap_i32(v23);
                                                                                                                                            int32_t v66 = v22 == 0 ? v25 : llvm_bswap_i32(v25);
                                                                                                                                            int32_t v67 = v22 == 0 ? v27 : llvm_bswap_i32(v27);
                                                                                                                                            int32_t v68 = v22 == 0 ? v29 : llvm_bswap_i32(v29);
                                                                                                                                            int32_t v69 = v22 == 0 ? v31 : llvm_bswap_i32(v31);
                                                                                                                                            int32_t v70 = v22 == 0 ? v33 : llvm_bswap_i32(v33);
                                                                                                                                            int32_t v71 = v22 == 0 ? v36 : llvm_bswap_i32(v36);
                                                                                                                                            int32_t v72 = v22 == 0 ? v38 : llvm_bswap_i32(v38);
                                                                                                                                            int32_t v73 = v22 == 0 ? v41 : llvm_bswap_i32(v41);
                                                                                                                                            int32_t v74 = v22 == 0 ? v43 : llvm_bswap_i32(v43);
                                                                                                                                            int32_t v75 = v22 == 0 ? v53 : llvm_bswap_i32(v53);
                                                                                                                                            int32_t v76 = v22 == 0 ? v55 : llvm_bswap_i32(v55);
                                                                                                                                            int32_t v77 = v22 == 0 ? v61 : llvm_bswap_i32(v61);
                                                                                                                                            int32_t v78 = v22 == 0 ? v63 : llvm_bswap_i32(v63);
                                                                                                                                            *v1 = v64;
                                                                                                                                            *(int32_t *)(v4 + 28) = v66;
                                                                                                                                            *(int32_t *)(v4 + 32) = v67;
                                                                                                                                            *(int32_t *)(v4 + 36) = v68;
                                                                                                                                            *(int32_t *)(v4 + 40) = v69;
                                                                                                                                            *(int32_t *)(v4 + 44) = v70;
                                                                                                                                            *(int32_t *)(v4 + 48) = v71;
                                                                                                                                            *(int32_t *)(v4 + 24) = v65;
                                                                                                                                            *(int32_t *)(v4 + 52) = v72;
                                                                                                                                            *(int32_t *)(v4 + 56) = v73;
                                                                                                                                            *(int32_t *)(v4 + 60) = v74;
                                                                                                                                            *(int32_t *)(v4 + 64) = v75;
                                                                                                                                            *(int32_t *)(v4 + 68) = v76;
                                                                                                                                            *(int32_t *)(v4 + 72) = v77;
                                                                                                                                            *(int32_t *)(v4 + 76) = v78;
                                                                                                                                            goto lab_0x18000d528;
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x18000d570 - 0x18000d9e1
int64_t function_18000d570(int64_t a1, int64_t a2, int32_t a3) {
    uint32_t v1 = (int32_t)a2; // 0x18000d5ab
    if (a3 == 0 || v1 == 0) {
        // 0x18000d9c4
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x18000d5b0
    *v2 = a3;
    if ((int32_t)function_1800020d0(&g31, a2) == 0) {
        // 0x18000d9c4
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000d600
    int64_t v3; // bp-1160, 0x18000d570
    int64_t v4 = &v3; // 0x18000d602
    int32_t * v5 = (int32_t *)(a1 + 12);
    int32_t * v6 = (int32_t *)(a1 + 16);
    int64_t v7 = 0; // 0x18000d570
    memset(&v3, 0, 260);
    uint32_t v8 = *v2; // 0x18000d61e
    uint32_t v9 = *v5; // 0x18000d621
    uint32_t v10 = v8 + 4; // 0x18000d625
    int32_t v11; // 0x18000d570
    int64_t v12; // 0x18000d570
    int64_t v13; // 0x18000d570
    int64_t v14; // bp-344, 0x18000d570
    int64_t v15; // bp-616, 0x18000d570
    int64_t v16; // bp-888, 0x18000d570
    while (v10 <= v9) {
        int64_t v17 = v7;
        *v2 = v10;
        uint32_t v18 = v8 + 8; // 0x18000d64d
        if (v18 > v9) {
            // break -> 0x18000d9c4
            break;
        }
        int32_t v19 = *v6; // 0x18000d639
        int32_t v20 = *(int32_t *)((int64_t)v8 + v4); // 0x18000d641
        *v2 = v18;
        uint32_t v21 = v8 + 12; // 0x18000d670
        if (v21 > v9) {
            // break -> 0x18000d9c4
            break;
        }
        int32_t v22 = *(int32_t *)((int64_t)v10 + v4); // 0x18000d666
        *v2 = v21;
        uint32_t v23 = v8 + 16; // 0x18000d693
        if (v23 > v9) {
            // break -> 0x18000d9c4
            break;
        }
        int32_t v24 = *(int32_t *)((int64_t)v18 + v4); // 0x18000d689
        *v2 = v23;
        uint32_t v25 = v8 + 20; // 0x18000d6b8
        if (v25 > v9) {
            // break -> 0x18000d9c4
            break;
        }
        int32_t v26 = *(int32_t *)((int64_t)v21 + v4); // 0x18000d6ac
        *v2 = v25;
        uint32_t v27 = v8 + 24; // 0x18000d6cc
        if (v27 > v9) {
            // break -> 0x18000d9c4
            break;
        }
        // 0x18000d6d8
        *v2 = v27;
        uint32_t v28 = v8 + 28; // 0x18000d6df
        if (v28 > v9) {
            // break -> 0x18000d9c4
            break;
        }
        // 0x18000d6eb
        *v2 = v28;
        uint32_t v29 = v8 + 32; // 0x18000d6f2
        if (v29 > v9) {
            // break -> 0x18000d9c4
            break;
        }
        // 0x18000d6fe
        *v2 = v29;
        uint32_t v30 = v8 + 36; // 0x18000d705
        if (v30 > v9) {
            // break -> 0x18000d9c4
            break;
        }
        uint32_t v31 = v19 == 0 ? v20 : llvm_bswap_i32(v20);
        uint32_t v32 = v19 == 0 ? v22 : llvm_bswap_i32(v22);
        uint32_t v33 = v19 == 0 ? v24 : llvm_bswap_i32(v24);
        uint32_t v34 = v19 == 0 ? v26 : llvm_bswap_i32(v26);
        *v2 = v30;
        function_180005050(a1, (int64_t)v31, &v3);
        function_180005050(a1, (int64_t)v32, &v16);
        function_180005050(a1, (int64_t)v33, &v15);
        function_180005050(a1, (int64_t)v34, &v14);
        int64_t v35 = a1; // 0x18000d75d
        if (g36 != 0) {
            int64_t v36 = 312 * (0x100000000 * v17 >> 32);
            int64_t v37 = v4; // 0x18000d775
            int64_t v38 = v36 + 52 + g36; // 0x18000d775
            char v39 = *(char *)v37; // 0x18000d780
            *(char *)v38 = v39;
            v37++;
            v38++;
            v35 = v36;
            while (v39 != 0) {
                // 0x18000d780
                v39 = *(char *)v37;
                *(char *)v38 = v39;
                v37++;
                v38++;
                v35 = v36;
            }
        }
        int64_t v40 = v17 + 1; // 0x18000d792
        v7 = v40 & 0xffffffff;
        if ((int32_t)v40 >= v1) {
            // 0x18000d79d
            *v2 = a3;
            v11 = a3;
            v13 = v35;
            v12 = 0;
            goto lab_0x18000d7b0;
        }
        memset(&v3, 0, 260);
        v8 = *v2;
        v9 = *v5;
        v10 = v8 + 4;
    }
  lab_0x18000d9c4:
    // 0x18000d9c4
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000d7b0:;
    // 0x18000d7b0
    int32_t v41; // 0x18000d570
    int64_t v42; // 0x18000d570
    if (v13 == 0) {
        goto lab_0x18000d9c4;
    } else {
        uint32_t v43 = *v5; // 0x18000d7d5
        uint32_t v44 = v11 + 4; // 0x18000d7d9
        if (v44 > v43) {
            goto lab_0x18000d9c4;
        } else {
            // 0x18000d7e5
            *v2 = v44;
            uint32_t v45 = v11 + 8; // 0x18000d801
            if (v45 > v43) {
                goto lab_0x18000d9c4;
            } else {
                int32_t v46 = *v6; // 0x18000d7ed
                int32_t v47 = *(int32_t *)(v13 + (int64_t)v11); // 0x18000d7f5
                *v2 = v45;
                uint32_t v48 = v11 + 12; // 0x18000d826
                if (v48 > v43) {
                    goto lab_0x18000d9c4;
                } else {
                    int32_t v49 = *(int32_t *)(v13 + (int64_t)v44); // 0x18000d81a
                    *v2 = v48;
                    uint32_t v50 = v11 + 16; // 0x18000d849
                    if (v50 > v43) {
                        goto lab_0x18000d9c4;
                    } else {
                        int32_t v51 = *(int32_t *)(v13 + (int64_t)v45); // 0x18000d83f
                        *v2 = v50;
                        uint32_t v52 = v11 + 20; // 0x18000d86c
                        if (v52 > v43) {
                            goto lab_0x18000d9c4;
                        } else {
                            int32_t v53 = *(int32_t *)(v13 + (int64_t)v48); // 0x18000d862
                            *v2 = v52;
                            uint32_t v54 = v11 + 24; // 0x18000d89d
                            if (v54 > v43) {
                                goto lab_0x18000d9c4;
                            } else {
                                int32_t v55 = *(int32_t *)(v13 + (int64_t)v50); // 0x18000d885
                                *v2 = v54;
                                uint32_t v56 = v11 + 28; // 0x18000d8c1
                                if (v56 > v43) {
                                    goto lab_0x18000d9c4;
                                } else {
                                    int64_t v57 = v52; // 0x18000d87d
                                    int32_t v58 = *(int32_t *)(v13 + v57); // 0x18000d8b5
                                    *v2 = v56;
                                    uint32_t v59 = v11 + 32; // 0x18000d8d5
                                    if (v59 > v43) {
                                        goto lab_0x18000d9c4;
                                    } else {
                                        // 0x18000d8e1
                                        *v2 = v59;
                                        uint32_t v60 = v11 + 36; // 0x18000d8e8
                                        if (v60 > v43) {
                                            goto lab_0x18000d9c4;
                                        } else {
                                            uint32_t v61 = v46 == 0 ? v47 : llvm_bswap_i32(v47);
                                            uint32_t v62 = v46 == 0 ? v49 : llvm_bswap_i32(v49);
                                            uint32_t v63 = v46 == 0 ? v51 : llvm_bswap_i32(v51);
                                            uint32_t v64 = v46 == 0 ? v53 : llvm_bswap_i32(v53);
                                            uint32_t v65 = v46 == 0 ? v55 : llvm_bswap_i32(v55);
                                            int64_t v66 = g32 != 0 ? v57 : 0;
                                            uint32_t v67 = v46 == 0 ? v58 : llvm_bswap_i32(v58);
                                            int64_t v68 = v67;
                                            *v2 = v60;
                                            function_180005050(a1, (int64_t)v61, &v14);
                                            function_180005050(a1, (int64_t)v62, &v15);
                                            function_180005050(a1, (int64_t)v63, &v16);
                                            function_180005050(a1, (int64_t)v64, &v3);
                                            int64_t v69 = v65 == 0 | v67 == 0 | g32 == 0 ? v68 : v66 + v68 & 0xffffffff;
                                            int32_t v70 = *v2; // 0x18000d953
                                            if ((int32_t)function_18000a5e0(a1, 312 * (0x100000000 * v12 >> 32) + g36, (int64_t)v65, v69) == 0) {
                                                goto lab_0x18000d9c4;
                                            } else {
                                                int64_t v71 = v12 + 1; // 0x18000d95f
                                                *v2 = v70;
                                                v11 = v70;
                                                v13 = a1;
                                                v12 = v71 & 0xffffffff;
                                                if ((int32_t)v71 < v1) {
                                                    goto lab_0x18000d7b0;
                                                } else {
                                                    // 0x18000d976
                                                    v41 = v70;
                                                    v42 = 0;
                                                    goto lab_0x18000d976_2;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18000d976_2:
    if (a1 == 0) {
        goto lab_0x18000d9c4;
    } else {
        int32_t v72 = v41 + 4; // 0x18000d97e
        if (v72 > *v5) {
            goto lab_0x18000d9c4;
        } else {
            // 0x18000d986
            *v2 = v72;
            int64_t v73 = v42 + 1; // 0x18000d98a
            v41 = v72;
            v42 = v73 & 0xffffffff;
            if ((int32_t)v73 < 32) {
                goto lab_0x18000d976_2;
            } else {
                goto lab_0x18000d9c4;
            }
        }
    }
}

// Address range: 0x18000d9f0 - 0x18000dc06
int64_t function_18000d9f0(int64_t a1, int64_t a2, int32_t a3, int64_t a4) {
    // 0x18000d9f0
    if (a3 == 0) {
        // 0x18000dbe6
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000da28
    *v1 = a3;
    uint32_t v2 = (int32_t)a2; // 0x18000da2b
    if (v2 == 0) {
        // 0x18000da9f
        *v1 = a3;
        // 0x18000dbe6
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 12);
    int32_t * v4 = (int32_t *)(a1 + 16);
    int64_t v5 = 0; // 0x18000d9f0
    int64_t v6; // 0x18000d9f0
    int64_t str; // bp-312, 0x18000d9f0
    int64_t v7; // 0x18000dac2
    int64_t v8; // 0x18000d9f0
    while (a1 != 0) {
        int32_t v9 = *v1; // 0x18000da3c
        uint32_t v10 = *v3; // 0x18000da3f
        uint32_t v11 = v9 + 4; // 0x18000da43
        if (v11 > v10) {
            // break -> 0x18000dbe6
            break;
        }
        // 0x18000da4f
        *v1 = v11;
        uint32_t v12 = v9 + 8; // 0x18000da56
        if (v12 > v10) {
            // break -> 0x18000dbe6
            break;
        }
        // 0x18000da62
        *v1 = v12;
        uint32_t v13 = v9 + 12; // 0x18000da79
        if (v13 > v10) {
            // break -> 0x18000dbe6
            break;
        }
        int32_t v14 = *(int32_t *)((int64_t)v11 + a1); // 0x18000da72
        uint32_t v15 = *v4 == 0 ? v14 : llvm_bswap_i32(v14);
        *v1 = v13;
        function_180005050(a1, (int64_t)v15, &str);
        int64_t v16 = v5 + 1; // 0x18000da97
        v5 = v16 & 0xffffffff;
        if ((int32_t)v16 >= v2) {
            // 0x18000da9f
            *v1 = a3;
            v7 = &str;
            int64_t v17; // bp-344, 0x18000d9f0
            v8 = (int64_t)&v17 + 32;
            v6 = 0;
            goto lab_0x18000dac0;
        }
    }
  lab_0x18000dbe6:
    // 0x18000dbe6
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000dac0:
    // 0x18000dac0
    memset(&str, 0, 260);
    int32_t v18 = *v1; // 0x18000dade
    uint32_t v19 = *v3; // 0x18000dae1
    uint32_t v20 = v18 + 4; // 0x18000dae5
    int32_t v21; // 0x18000d9f0
    int32_t v22; // 0x18000d9f0
    int64_t v23; // 0x18000d9f0
    uint32_t v24; // 0x18000db1f
    if (v20 > v19) {
        goto lab_0x18000dbe6;
    } else {
        // 0x18000daf1
        *v1 = v20;
        uint32_t v25 = v18 + 8; // 0x18000daf8
        if (v25 > v19) {
            goto lab_0x18000dbe6;
        } else {
            // 0x18000db04
            *v1 = v25;
            v24 = v18 + 12;
            if (v24 > v19) {
                goto lab_0x18000dbe6;
            } else {
                int32_t v26 = *(int32_t *)((int64_t)v20 + v7); // 0x18000db14
                int32_t v27 = *v4 == 0 ? v26 : llvm_bswap_i32(v26);
                *v1 = v24;
                if (v27 < 101) {
                    goto lab_0x18000db9a;
                } else {
                    // 0x18000db48
                    *v1 = v27;
                    int32_t v28 = v27 + 1; // 0x18000db53
                    v21 = v28;
                    v23 = 0;
                    v22 = v27;
                    if (v28 > v19) {
                        goto lab_0x18000db9a;
                    } else {
                        goto lab_0x18000db5a;
                    }
                }
            }
        }
    }
  lab_0x18000db9a:
    // 0x18000db9a
    if (strstr((char *)&str, "-skin") == NULL) {
        goto lab_0x18000dbc6;
    } else {
        // 0x18000dbb1
        if ((int32_t)function_18000dc10(a1) == 0) {
            goto lab_0x18000dbe6;
        } else {
            // 0x18000dbc3
            goto lab_0x18000dbc6;
        }
    }
  lab_0x18000dbc6:;
    int64_t v29 = v6 + 1; // 0x18000dbc6
    v6 = v29 & 0xffffffff;
    if ((int32_t)v29 < v2) {
        goto lab_0x18000dac0;
    } else {
        goto lab_0x18000dbe6;
    }
  lab_0x18000db5a:;
    int64_t v30 = v23;
    *v1 = v21;
    char v31 = *(char *)((int64_t)v22 + v7); // 0x18000db62
    if (v30 > 259) {
        goto lab_0x18000db74;
    } else {
        // 0x18000db70
        *(char *)(v30 + v8) = v31;
        goto lab_0x18000db74;
    }
  lab_0x18000db74:;
    int64_t v32 = v30 + 1; // 0x18000db74
    if (v31 != 0) {
        int32_t v33 = *v1;
        int32_t v34 = v33 + 1; // 0x18000db53
        v21 = v34;
        v23 = v32;
        v22 = v33;
        if (v34 > v19) {
            goto lab_0x18000db9a;
        } else {
            goto lab_0x18000db5a;
        }
    } else {
        if (v32 > 259) {
            // 0x18000db96
            *v1 = v24;
            goto lab_0x18000db9a;
        } else {
            // 0x18000db84
            *(char *)(v32 + v8) = v31;
            // 0x18000db96
            *v1 = v24;
            goto lab_0x18000db9a;
        }
    }
}

// Address range: 0x18000dc10 - 0x18000dd2b
int64_t function_18000dc10(int64_t a1) {
    // 0x18000dc10
    int64_t v1; // 0x18000dc10
    int32_t v2 = v1;
    if (v2 == 0) {
        // 0x18000dc1e
        return v1 + 1 & 0xffffffff;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x18000dc2b
    *v3 = v2;
    if (a1 == 0) {
        // 0x18000dcfd
        return 0;
    }
    uint32_t v4 = *(int32_t *)(a1 + 12); // 0x18000dc38
    uint32_t v5 = v2 + 4; // 0x18000dc3f
    if (v4 < v5) {
        // 0x18000dcfd
        return 0;
    }
    // 0x18000dc47
    *v3 = v5;
    uint32_t v6 = v2 + 6; // 0x18000dc4d
    if (v6 > v4) {
        // 0x18000dcfd
        return 0;
    }
    // 0x18000dc55
    *v3 = v6;
    uint32_t v7 = v2 + 8; // 0x18000dc74
    if (v7 > v4) {
        // 0x18000dcfd
        return 0;
    }
    // 0x18000dc80
    *v3 = v7;
    int16_t v8 = *(int16_t *)((int64_t)v6 + a1); // 0x18000dc8c
    int16_t v9 = *(int32_t *)(a1 + 16) == 0 ? v8 : llvm_bswap_i16(v8);
    if (*(int32_t *)&g31 < 845 || v9 != 0) {
        // 0x18000dd0d
        if ((int32_t)function_18000dd30(a1) != 0) {
            // 0x18000dcfd
            return 1;
        }
        // 0x18000dcfd
        return 0;
    }
    uint32_t v10 = v2 + 12; // 0x18000dcb0
    if (v10 > v4) {
        // 0x18000dcfd
        return 0;
    }
    // 0x18000dcb8
    *v3 = v10;
    uint32_t v11 = v2 + 16; // 0x18000dcd0
    if (v11 > v4) {
        // 0x18000dcfd
        return 0;
    }
    // 0x18000dcd8
    *v3 = v11;
    uint32_t v12 = v2 + 20; // 0x18000dcdf
    if (v12 > v4) {
        // 0x18000dcfd
        return 0;
    }
    // 0x18000dce6
    *v3 = v12;
    if ((int32_t)function_18000de40(a1) == 0) {
        // 0x18000dcfd
        return 0;
    }
    // 0x18000dcfa
    *v3 = v12;
    // 0x18000dcfd
    return 1;
}

// Address range: 0x18000dd30 - 0x18000de39
int64_t function_18000dd30(int64_t a1) {
    int128_t v1 = __asm_movaps(g8); // 0x18000dd36
    int128_t v2 = __asm_movaps(g9); // 0x18000dd42
    int64_t v3 = __asm_movaps_9(v1); // bp-72, 0x18000dd4c
    int128_t v4 = __asm_movaps(g10); // 0x18000dd51
    __asm_movaps_9(v2);
    int128_t v5 = __asm_movaps(g12); // 0x18000dd5d
    __asm_movaps_9(v4);
    __asm_movaps_9(v5);
    if (a1 == 0 | (int32_t)function_18001d8d0(a1, (int128_t *)&v3) == 0) {
        // 0x18000de31
        return 0;
    }
    int32_t * v6 = (int32_t *)(a1 + 8); // 0x18000dd85
    int32_t v7 = *v6; // 0x18000dd85
    uint32_t v8 = *(int32_t *)(a1 + 12); // 0x18000dd88
    uint32_t v9 = v7 + 4; // 0x18000dd8b
    if (v9 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000dd96
    *v6 = v9;
    uint32_t v10 = v7 + 8;
    if (v10 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000dda4
    *v6 = v10;
    uint32_t v11 = v7 + 12; // 0x18000ddab
    if (v11 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000ddb2
    *v6 = v11;
    uint32_t v12 = v7 + 16; // 0x18000ddb9
    if (v12 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000ddc0
    *v6 = v12;
    uint32_t v13 = v7 + 20; // 0x18000ddc7
    if (v13 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000ddce
    *v6 = v13;
    uint32_t v14 = v7 + 24; // 0x18000ddd5
    if (v14 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000dddc
    *v6 = v14;
    uint32_t v15 = v7 + 28; // 0x18000dde3
    if (v15 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000ddea
    *v6 = v15;
    uint32_t v16 = v7 + 32; // 0x18000ddf1
    if (v16 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000ddf8
    *v6 = v16;
    uint32_t v17 = v7 + 36; // 0x18000ddff
    if (v17 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000de06
    *v6 = v17;
    uint32_t v18 = v7 + 40; // 0x18000de0d
    if (v18 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000de14
    *v6 = v18;
    uint32_t v19 = v7 + 44; // 0x18000de1b
    if (v19 > v8) {
        // 0x18000de31
        return 0;
    }
    // 0x18000de22
    *v6 = v19;
    return 1;
}

// Address range: 0x18000de40 - 0x18000e3f1
int64_t function_18000de40(int64_t a1) {
    // 0x18000de40
    int64_t v1; // 0x18000de40
    int32_t v2 = v1; // 0x18000de66
    if (v2 != 0) {
        // 0x18000de74
        *(int32_t *)(a1 + 8) = v2;
    }
    // 0x18000e3c0
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18000e400 - 0x18000e706
int64_t function_18000e400(int64_t a1, int64_t a2, int32_t a3) {
    // 0x18000e400
    if (a3 == 0) {
        // 0x18000e6e3
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000e431
    *v1 = a3;
    uint32_t v2 = (int32_t)a2; // 0x18000e435
    if (v2 == 0 || (int32_t)function_180001b50(&g31, a2) == 0) {
        // 0x18000e6e3
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v3 = *v1; // 0x18000e456
    int64_t v4; // bp-328, 0x18000e400
    int64_t v5 = &v4;
    int32_t * v6 = (int32_t *)(a1 + 12);
    int32_t * v7 = (int32_t *)(a1 + 16);
    int64_t v8 = 0; // 0x18000e400
    int64_t v9; // bp-600, 0x18000e400
    memset(&v9, 0, 260);
    memset(&v4, 0, 260);
    uint32_t v10 = *v1; // 0x18000e4a3
    uint32_t v11 = *v6; // 0x18000e4a6
    uint32_t v12 = v10 + 4; // 0x18000e4aa
    int32_t v13; // 0x18000e400
    int64_t v14; // 0x18000e400
    int64_t v15; // 0x18000e400
    while (v12 <= v11) {
        int64_t v16 = v8;
        *v1 = v12;
        uint32_t v17 = v10 + 8; // 0x18000e4d1
        if (v17 > v11) {
            // break -> 0x18000e6e3
            break;
        }
        int32_t v18 = *v7; // 0x18000e4be
        int32_t v19 = *(int32_t *)((int64_t)v10 + v5); // 0x18000e4c6
        *v1 = v17;
        uint32_t v20 = v10 + 12; // 0x18000e4f6
        if (v20 > v11) {
            // break -> 0x18000e6e3
            break;
        }
        int32_t v21 = *(int32_t *)((int64_t)v12 + v5); // 0x18000e4ea
        *v1 = v20;
        uint32_t v22 = v10 + 16; // 0x18000e50a
        if (v22 > v11) {
            // break -> 0x18000e6e3
            break;
        }
        uint32_t v23 = v18 == 0 ? v19 : llvm_bswap_i32(v19);
        uint32_t v24 = v18 == 0 ? v21 : llvm_bswap_i32(v21);
        *v1 = v22;
        function_180005050(a1, (int64_t)v23, &v9);
        function_180005050(a1, (int64_t)v24, &v4);
        int64_t v25 = a1; // 0x18000e541
        if (g38 != NULL) {
            int64_t v26 = 760 * (0x100000000 * v16 >> 32);
            int64_t v27 = &v9; // 0x18000e55c
            int64_t v28 = v26 + 232 + (int64_t)g38; // 0x18000e55c
            char v29 = *(char *)v27; // 0x18000e560
            *(char *)v28 = v29;
            v27++;
            v28++;
            while (v29 != 0) {
                // 0x18000e560
                v29 = *(char *)v27;
                *(char *)v28 = v29;
                v27++;
                v28++;
            }
            int64_t v30 = v5; // 0x18000e58a
            int64_t v31 = v26 + 492 + (int64_t)g38; // 0x18000e58a
            char v32 = *(char *)v30; // 0x18000e590
            v30++;
            *(char *)v31 = v32;
            v31++;
            v25 = v30;
            while (v32 != 0) {
                // 0x18000e590
                v32 = *(char *)v30;
                v30++;
                *(char *)v31 = v32;
                v31++;
                v25 = v30;
            }
        }
        int64_t v33 = v16 + 1; // 0x18000e5a1
        v8 = v33 & 0xffffffff;
        if ((int32_t)v33 >= v2) {
            // 0x18000e5d0
            *v1 = v3;
            v14 = v25;
            v13 = v3;
            v15 = 0;
            goto lab_0x18000e5d0_2;
        }
        memset(&v9, 0, 260);
        memset(&v4, 0, 260);
        v10 = *v1;
        v11 = *v6;
        v12 = v10 + 4;
    }
  lab_0x18000e6e3:
    // 0x18000e6e3
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000e5d0_2:
    // 0x18000e5d0
    if (v14 == 0) {
        goto lab_0x18000e6e3;
    } else {
        uint32_t v34 = *v6; // 0x18000e5ed
        uint32_t v35 = v13 + 4; // 0x18000e5f1
        if (v34 < v35) {
            goto lab_0x18000e6e3;
        } else {
            int32_t v36 = *v7; // 0x18000e5fd
            *v1 = v35;
            uint32_t v37 = v13 + 8;
            if (v37 > v34) {
                goto lab_0x18000e6e3;
            } else {
                int32_t v38 = *(int32_t *)(v14 + (int64_t)v13); // 0x18000e607
                *v1 = v37;
                uint32_t v39 = v13 + 12; // 0x18000e634
                if (v39 > v34) {
                    goto lab_0x18000e6e3;
                } else {
                    int32_t v40 = *(int32_t *)(v14 + (int64_t)v35); // 0x18000e629
                    *v1 = v39;
                    uint32_t v41 = v13 + 16; // 0x18000e653
                    if (v41 > v34) {
                        goto lab_0x18000e6e3;
                    } else {
                        uint32_t v42 = v36 == 0 ? v38 : llvm_bswap_i32(v38);
                        uint32_t v43 = v36 == 0 ? v40 : llvm_bswap_i32(v40);
                        *v1 = v41;
                        function_180005050(a1, (int64_t)v42, &v4);
                        function_180005050(a1, (int64_t)v43, &v9);
                        int32_t v44 = *v1; // 0x18000e6a5
                        function_18000e710(a1, 760 * (0x100000000 * v15 >> 32) + (int64_t)g38);
                        int64_t v45 = v15 + 1; // 0x18000e6b0
                        *v1 = v44;
                        v14 = a1;
                        v13 = v44;
                        v15 = v45 & 0xffffffff;
                        if ((int32_t)v45 < v2) {
                            goto lab_0x18000e5d0_2;
                        } else {
                            goto lab_0x18000e6e3;
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x18000e710 - 0x18000e85b
int64_t function_18000e710(int64_t a1, int64_t a2) {
    // 0x18000e710
    if (a2 == 0) {
        // 0x18000e721
        return 0;
    }
    // 0x18000e729
    int64_t v1; // 0x18000e710
    int32_t v2 = v1;
    if (v2 == 0) {
        // 0x18000e72e
        return v1 + 1 & 0xffffffff;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x18000e740
    *v3 = v2;
    if (a1 == 0) {
        // 0x18000e721
        return 0;
    }
    uint32_t v4 = *(int32_t *)(a1 + 12); // 0x18000e74d
    uint32_t v5 = v2 + 4; // 0x18000e755
    if (v4 < v5) {
        // 0x18000e721
        return 0;
    }
    int32_t v6 = *(int32_t *)((v1 & 0xffffffff) + a1); // 0x18000e76a
    if ((*(int32_t *)(a1 + 16) == 0 ? v6 : llvm_bswap_i32(v6)) != 0) {
        // 0x18000e7f0
        if (g32 == 0) {
            // 0x18000e841
            function_18000f210(a1, a2);
            // 0x18000e721
            return 1;
        }
        // 0x18000e807
        function_18000e860(a1, a2);
        // 0x18000e721
        return 1;
    }
    // 0x18000e77f
    *v3 = v5;
    uint32_t v7 = v2 + 8; // 0x18000e786
    if (v7 > v4) {
        // 0x18000e721
        return 0;
    }
    // 0x18000e78f
    *v3 = v7;
    uint32_t v8 = v2 + 12; // 0x18000e7b4
    if (v8 > v4) {
        // 0x18000e721
        return 0;
    }
    // 0x18000e7b9
    *v3 = v8;
    uint32_t v9 = v2 + 16; // 0x18000e7d5
    if (v9 > v4) {
        // 0x18000e721
        return 0;
    }
    // 0x18000e7da
    *v3 = v9;
    uint32_t v10 = v2 + 20; // 0x18000e7e3
    if (v10 > v4) {
        // 0x18000e721
        return 0;
    }
    // 0x18000e7f0
    *v3 = v10;
    // 0x18000e807
    function_18000e860(a1, a2);
    // 0x18000e721
    return 1;
}

// Address range: 0x18000e860 - 0x18000f201
int64_t function_18000e860(int64_t a1, int64_t a2) {
    // 0x18000e860
    int32_t v1; // 0x18000e860
    if (a2 != 0 != v1 != 0) {
        // 0x18000f1da
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x18000e8bc
    int64_t v3 = a1; // 0x18000e8c9
    int32_t v4; // 0x18000e860
    int64_t v5; // 0x18000e860
    int64_t v6; // 0x18000e860
    int64_t v7; // 0x18000e860
    int64_t v8; // 0x18000e860
    int64_t v9; // 0x18000e860
    int64_t v10; // 0x18000e860
    int32_t v11; // 0x18000e860
    int32_t v12; // bp-264, 0x18000e860
    int32_t v13; // bp-312, 0x18000e860
    int32_t v14; // bp-328, 0x18000e860
    int32_t * v15; // 0x18000e925
    int32_t * v16; // 0x18000e956
    uint32_t v17; // 0x18000ea03
    int32_t v18; // 0x18000ea9b
    int32_t v19; // 0x18000ea9f
    uint32_t v20; // 0x18000eae6
    int32_t v21; // 0x18000eb11
    if (g32 != 0) {
      lab_0x18000e919:
        // 0x18000e919
        if (v3 == 0) {
            // 0x18000f1da
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000e925
        v15 = (int32_t *)(a1 + 12);
        uint32_t v22 = *v15; // 0x18000e925
        uint32_t v23 = v4 + 4; // 0x18000e92b
        if (v23 > v22) {
            // 0x18000f1da
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000e936
        *v2 = v23;
        uint32_t v24 = v4 + 8; // 0x18000e93d
        if (v24 > v22) {
            // 0x18000f1da
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000e948
        *v2 = v24;
        int32_t v25 = *(int32_t *)(v3 + (int64_t)v23); // 0x18000e952
        v16 = (int32_t *)(a1 + 16);
        v11 = *v16 == 0 ? v25 : llvm_bswap_i32(v25);
        int64_t v26 = &v12; // 0x18000e986
        function_1800010c0(v26);
        int64_t v27; // bp-120, 0x18000e860
        int64_t v28 = (int64_t)&v27 + 32;
        int64_t v29 = 0; // 0x18000e9a3
        int64_t v30 = 0; // 0x18000e9a3
        uint32_t v31 = *v15; // 0x18000e9af
        uint32_t v32 = *v2; // 0x18000e9b3
        uint32_t v33 = v32 + 4; // 0x18000e9b6
        while (v33 <= v31) {
            int64_t v34 = v29;
            *v2 = v33;
            v17 = v32 + 8;
            if (v17 > v31) {
                // break -> 0x18000f1b8
                break;
            }
            int32_t v35 = *(int32_t *)((int64_t)v32 + v26); // 0x18000e9ce
            int32_t v36 = *v16; // 0x18000e9d2
            *v2 = v17;
            int32_t v37 = *(int32_t *)((int64_t)v33 + v26); // 0x18000ea1c
            int32_t v38 = v36 == 0 ? v37 : llvm_bswap_i32(v37);
            if (v38 != 0) {
                // 0x18000ea5a
                *(int32_t *)(v28 + 4 * v34) = v38 + v33;
            }
            // 0x18000ea63
            v5 = v34 == 0 ? (int64_t)(v36 == 0 ? v35 : llvm_bswap_i32(v35)) : v30;
            v29 = v34 + 1;
            v30 = v5;
            if (v29 >= 5) {
                uint32_t v39 = *v15; // 0x18000ea7e
                if (v32 + 12 > v39) {
                    goto lab_0x18000f1b8;
                } else {
                    uint32_t v40 = *v2; // 0x18000ea8f
                    *v2 = v40 + 4;
                    uint32_t v41 = v40 + 8; // 0x18000ead2
                    if (v41 > v39) {
                        goto lab_0x18000f1b8;
                    } else {
                        // 0x18000eadf
                        v18 = *(int32_t *)((int64_t)v40 + v26);
                        v19 = *v16;
                        *v2 = v41;
                        v20 = v40 + 12;
                        if (v20 > v39) {
                            goto lab_0x18000f1b8;
                        } else {
                            // 0x18000eaf2
                            *v2 = v20;
                            uint32_t v42 = v40 + 16; // 0x18000eafa
                            if (v42 > v39) {
                                goto lab_0x18000f1b8;
                            } else {
                                // 0x18000eb07
                                *v2 = v42;
                                v21 = *(int32_t *)((int64_t)v20 + v26);
                                v14 = 0;
                                v13 = 0;
                                if ((int32_t)function_18001d5c0(a1, (int64_t *)&v14) == 0) {
                                    goto lab_0x18000f1b8;
                                } else {
                                    // 0x18000eb99
                                    if ((int32_t)function_18001d5c0(a1, (int64_t *)&v13) == 0) {
                                        goto lab_0x18000f1b8;
                                    } else {
                                        // 0x18000ebb8
                                        v10 = a1;
                                        v7 = 0;
                                        if ((int32_t)v5 < 1) {
                                            goto lab_0x18000ec2b;
                                        } else {
                                            // 0x18000ebc6
                                            v9 = a1;
                                            v8 = 0;
                                            v6 = 0;
                                            goto lab_0x18000ebc6_2;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            v31 = *v15;
            v32 = *v2;
            v33 = v32 + 4;
        }
      lab_0x18000f1b8:
        // 0x18000f1b8
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        // 0x18000f1da
        __security_check_cookie(g17);
        return &g47;
    }
    if (a1 == 0) {
        // 0x18000f1da
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v43 = v1 + 4; // 0x18000e8d4
    uint32_t v44 = *(int32_t *)(a1 + 12); // 0x18000e8d7
    if (v44 < v43) {
        // 0x18000f1da
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000e8e2
    *v2 = v43;
    int32_t v45 = v1 + 8;
    if (v45 > v44) {
        // 0x18000f1da
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000e8f0
    *v2 = v45;
    int64_t v46; // 0x18000e860
    uint32_t v47 = (int32_t)v46 - 2; // 0x18000e8fb
    int32_t v48 = v45; // 0x18000e8fe
    int64_t v49 = 0; // 0x18000e8fe
    if (v47 == 0) {
        // 0x18000f1da
        __security_check_cookie(g17);
        return &g47;
    }
    v48 += 4;
    while (v48 <= v44) {
        // 0x18000e90e
        *v2 = v48;
        int64_t v50 = v49 + 1; // 0x18000e912
        v49 = v50 & 0xffffffff;
        v4 = v48;
        v3 = v49;
        if (v47 <= (int32_t)v50) {
            goto lab_0x18000e919;
        }
        v48 += 4;
    }
    // 0x18000f1da
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000ec2b:
    // 0x18000ec2b
    if (v1 == 0) {
        goto lab_0x18000ec35;
    } else {
        goto lab_0x18000ec35;
    }
  lab_0x18000ec35:;
    int64_t v51 = 0x100000000 * v5 >> 32; // 0x18000ec38
    int64_t v52 = v10; // 0x18000ec3e
    int64_t v53; // 0x18000e860
    int64_t v54; // 0x18000e860
    int64_t v55; // 0x18000e860
    int64_t v56; // 0x18000e860
    if ((int32_t)v5 < 1) {
        goto lab_0x18000ed4f;
    } else {
        // 0x18000ec40
        v56 = v10;
        v55 = 0;
        int64_t v57; // bp-252, 0x18000e860
        v53 = &v57;
        v54 = 0;
        goto lab_0x18000ec50;
    }
  lab_0x18000ebc6_2:;
    int64_t v58; // 0x18000e860
    int64_t v59; // 0x18000ec01
    if (a1 == 0) {
        goto lab_0x18000f1b8;
    } else {
        uint32_t v60 = *v2; // 0x18000ebcf
        uint32_t v61 = v60 + 4; // 0x18000ebd2
        if (v61 > *v15) {
            goto lab_0x18000f1b8;
        } else {
            // 0x18000ebde
            *v2 = v61;
            uint32_t v62 = *(int32_t *)((int64_t)v60 + a1); // 0x18000ebe8
            int64_t v63 = v62; // 0x18000ebe8
            v59 = v9;
            v58 = v63;
            if (*v16 == 0) {
                goto lab_0x18000ec1c;
            } else {
                // 0x18000ebf2
                v59 = 256 * v63 & 0xff0000;
                v58 = 0x1000000 * v62 | v62 / 0x1000000 | v62 / 256 & 0xff00 | (int32_t)v59;
                goto lab_0x18000ec1c;
            }
        }
    }
  lab_0x18000ed4f:
    // 0x18000ed4f
    if (v1 == 0) {
        goto lab_0x18000ed59;
    } else {
        goto lab_0x18000ed59;
    }
  lab_0x18000ed59:;
    int64_t v64 = v52; // 0x18000ed5f
    int64_t v65; // 0x18000e860
    int64_t v66; // 0x18000e860
    int64_t v67; // 0x18000e860
    int64_t v68; // 0x18000e860
    if ((int32_t)v5 < 1) {
        goto lab_0x18000eec7;
    } else {
        // 0x18000ed61
        v68 = v52;
        v67 = 0;
        int64_t v69; // bp-244, 0x18000e860
        v65 = &v69;
        v66 = 0;
        goto lab_0x18000ed70;
    }
  lab_0x18000ec50:;
    int64_t v70; // 0x18000e860
    int32_t v71; // 0x18000e860
    int64_t v72; // 0x18000ec8b
    if (v10 == 0) {
        goto lab_0x18000f1b8;
    } else {
        uint32_t v73 = *v2; // 0x18000ec59
        uint32_t v74 = v73 + 4; // 0x18000ec5c
        if (v74 > *v15) {
            goto lab_0x18000f1b8;
        } else {
            // 0x18000ec68
            v70 = v53;
            *v2 = v74;
            uint32_t v75 = *(int32_t *)(v10 + (int64_t)v73); // 0x18000ec72
            v72 = v56;
            v71 = v75;
            if (*v16 == 0) {
                goto lab_0x18000eca6;
            } else {
                // 0x18000ec7c
                v72 = 256 * (int64_t)v75 & 0xff0000;
                v71 = 0x1000000 * v75 | v75 / 0x1000000 | v75 / 256 & 0xff00 | (int32_t)v72;
                goto lab_0x18000eca6;
            }
        }
    }
  lab_0x18000eec7:;
    int32_t v76 = v19 == 0 ? v18 : llvm_bswap_i32(v18);
    int32_t v77 = (v76 == 0 ? 0 : v17) + v76;
    int32_t v78; // 0x18000e860
    int64_t v79; // 0x18000e860
    if (v77 == 0) {
        int32_t v80 = *v2;
        v78 = v80;
        v79 = v64;
        if (v80 == 0) {
            goto lab_0x18000ef0c;
        } else {
            goto lab_0x18000eedb;
        }
    } else {
        // 0x18000eed2
        *v2 = v77;
        v78 = v77;
        goto lab_0x18000eedb;
    }
  lab_0x18000ec1c:;
    int64_t v81 = v59;
    int64_t v82 = v8 == 0 ? v58 : v6;
    int64_t v83 = v8 + 1 & 0xffffffff; // 0x18000ec23
    v9 = v81;
    v8 = v83;
    v6 = v82;
    if (v83 < v5) {
        goto lab_0x18000ebc6_2;
    } else {
        // 0x18000ec2b
        v10 = v81;
        v7 = 0x100000000 * v82 >> 32;
        goto lab_0x18000ec2b;
    }
  lab_0x18000ed70:;
    int64_t v84; // 0x18000e860
    int32_t v85; // 0x18000e860
    int64_t v86; // 0x18000edab
    if (v52 == 0) {
        goto lab_0x18000f1b8;
    } else {
        uint32_t v87 = *v2; // 0x18000ed79
        uint32_t v88 = v87 + 4; // 0x18000ed7c
        if (v88 > *v15) {
            goto lab_0x18000f1b8;
        } else {
            // 0x18000ed88
            v84 = v65;
            *v2 = v88;
            uint32_t v89 = *(int32_t *)(v52 + (int64_t)v87); // 0x18000ed92
            v86 = v68;
            v85 = v89;
            if (*v16 == 0) {
                goto lab_0x18000edc6;
            } else {
                // 0x18000ed9c
                v86 = 256 * (int64_t)v89 & 0xff0000;
                v85 = 0x1000000 * v89 | v89 / 0x1000000 | v89 / 256 & 0xff00 | (int32_t)v86;
                goto lab_0x18000edc6;
            }
        }
    }
  lab_0x18000ef0c:;
    int32_t v90 = v19 == 0 ? v21 : llvm_bswap_i32(v21);
    int32_t v91 = (v90 == 0 ? 0 : v20) + v90;
    if (v91 == 0) {
        goto lab_0x18000ef17;
    } else {
        // 0x18000ef14
        *v2 = v91;
        goto lab_0x18000ef17;
    }
  lab_0x18000eedb:;
    int64_t v92 = function_180005100(a1, a2, v11, v78, v7, (int64_t *)&v12); // 0x18000eef8
    v79 = a1;
    if ((int32_t)v92 == 0) {
        goto lab_0x18000f1b8;
    } else {
        goto lab_0x18000ef0c;
    }
  lab_0x18000eca6:;
    int64_t v93 = v72;
    if (v12 > (int32_t)v55) {
        // 0x18000ecad
        *(int32_t *)v70 = v71;
        goto lab_0x18000ecb0;
    } else {
        goto lab_0x18000ecb0;
    }
  lab_0x18000ef17:;
    int32_t v94; // 0x18000f000
    int32_t v95; // 0x18000f004
    int32_t v96; // 0x18000f089
    if (v79 == 0) {
        goto lab_0x18000f1b8;
    } else {
        uint32_t v97 = *v15; // 0x18000ef23
        int32_t v98 = *v2; // 0x18000ef27
        uint32_t v99 = v98 + 4; // 0x18000ef2a
        if (v99 > v97) {
            goto lab_0x18000f1b8;
        } else {
            // 0x18000ef36
            *v2 = v99;
            uint32_t v100 = v98 + 8; // 0x18000ef3d
            if (v100 > v97) {
                goto lab_0x18000f1b8;
            } else {
                // 0x18000ef49
                *v2 = v100;
                uint32_t v101 = v98 + 12; // 0x18000ef50
                if (v101 > v97) {
                    goto lab_0x18000f1b8;
                } else {
                    // 0x18000ef5c
                    *v2 = v101;
                    uint32_t v102 = v98 + 16; // 0x18000ef63
                    if (v102 > v97) {
                        goto lab_0x18000f1b8;
                    } else {
                        // 0x18000ef6f
                        *v2 = v102;
                        uint32_t v103 = v98 + 20; // 0x18000ef76
                        if (v103 > v97) {
                            goto lab_0x18000f1b8;
                        } else {
                            // 0x18000ef82
                            *v2 = v103;
                            uint32_t v104 = v98 + 24; // 0x18000ef89
                            if (v104 > v97) {
                                goto lab_0x18000f1b8;
                            } else {
                                // 0x18000ef95
                                *v2 = v104;
                                uint32_t v105 = v98 + 28; // 0x18000ef9c
                                if (v105 > v97) {
                                    goto lab_0x18000f1b8;
                                } else {
                                    // 0x18000efa8
                                    *v2 = v105;
                                    uint32_t v106 = v98 + 32; // 0x18000efaf
                                    if (v106 > v97) {
                                        goto lab_0x18000f1b8;
                                    } else {
                                        // 0x18000efbb
                                        *v2 = v106;
                                        uint32_t v107 = v98 + 36; // 0x18000efc2
                                        if (v107 > v97) {
                                            goto lab_0x18000f1b8;
                                        } else {
                                            // 0x18000efce
                                            *v2 = v107;
                                            uint32_t v108 = v98 + 40; // 0x18000efd5
                                            if (v108 > v97) {
                                                goto lab_0x18000f1b8;
                                            } else {
                                                // 0x18000efe1
                                                *v2 = v108;
                                                uint32_t v109 = v98 + 44; // 0x18000efe8
                                                if (v109 > v97) {
                                                    goto lab_0x18000f1b8;
                                                } else {
                                                    // 0x18000eff4
                                                    *v2 = v109;
                                                    int32_t v110 = v98 + 48; // 0x18000f035
                                                    if (v110 > v97) {
                                                        goto lab_0x18000f1b8;
                                                    } else {
                                                        // 0x18000f042
                                                        v94 = *(int32_t *)(v79 + (int64_t)v108);
                                                        v95 = *v16;
                                                        *v2 = v110;
                                                        int32_t v111 = *(int32_t *)(v79 + (int64_t)v109); // 0x18000f04e
                                                        int32_t v112 = v95 == 0 ? v111 : llvm_bswap_i32(v111);
                                                        v96 = v110;
                                                        if (v112 == 0) {
                                                            goto lab_0x18000f08f;
                                                        } else {
                                                            // 0x18000f085
                                                            v96 = v112 + v109;
                                                            *v2 = v96;
                                                            goto lab_0x18000f08f;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18000ecb0:;
    int64_t v113 = v54 + 1; // 0x18000ecb3
    v56 = v93;
    v55 = v55 + 1 & 0xffffffff;
    v53 = v70 + 16;
    v54 = v113;
    int64_t v114; // 0x18000e860
    int64_t v115; // 0x18000e860
    int64_t v116; // 0x18000e860
    int64_t v117; // 0x18000e860
    if (v113 < v51) {
        goto lab_0x18000ec50;
    } else {
        // 0x18000ecd1
        v117 = v93;
        v116 = 0;
        int64_t v118; // bp-248, 0x18000e860
        v114 = &v118;
        v115 = 0;
        goto lab_0x18000ece0;
    }
  lab_0x18000edc6:;
    int64_t v119 = v86;
    if (v12 > (int32_t)v67) {
        // 0x18000edcd
        *(int32_t *)v84 = v85;
        goto lab_0x18000edd0;
    } else {
        goto lab_0x18000edd0;
    }
  lab_0x18000edd0:;
    int64_t v120 = v66 + 1; // 0x18000edd3
    v68 = v119;
    v67 = v67 + 1 & 0xffffffff;
    v65 = v84 + 16;
    v66 = v120;
    int64_t v121; // 0x18000e860
    int64_t v122; // 0x18000e860
    int64_t v123; // 0x18000e860
    if (v120 < v51) {
        goto lab_0x18000ed70;
    } else {
        // 0x18000ee00
        v123 = v119;
        v122 = 0;
        v121 = 0;
        goto lab_0x18000ee00_2;
    }
  lab_0x18000ece0:;
    int64_t v124; // 0x18000e860
    int32_t v125; // 0x18000e860
    int64_t v126; // 0x18000ed1b
    if (v93 == 0) {
        goto lab_0x18000f1b8;
    } else {
        uint32_t v127 = *v2; // 0x18000ece9
        uint32_t v128 = v127 + 4; // 0x18000ecec
        if (v128 > *v15) {
            goto lab_0x18000f1b8;
        } else {
            // 0x18000ecf8
            v124 = v114;
            *v2 = v128;
            uint32_t v129 = *(int32_t *)(v93 + (int64_t)v127); // 0x18000ed02
            v126 = v117;
            v125 = v129;
            if (*v16 == 0) {
                goto lab_0x18000ed36;
            } else {
                // 0x18000ed0c
                v126 = 256 * (int64_t)v129 & 0xff0000;
                v125 = 0x1000000 * v129 | v129 / 0x1000000 | v129 / 256 & 0xff00 | (int32_t)v126;
                goto lab_0x18000ed36;
            }
        }
    }
  lab_0x18000ee00_2:;
    int32_t v130; // 0x18000e860
    int64_t v131; // 0x18000ee3b
    if (v119 == 0) {
        goto lab_0x18000f1b8;
    } else {
        uint32_t v132 = *v2; // 0x18000ee09
        uint32_t v133 = v132 + 4; // 0x18000ee0c
        if (v133 > *v15) {
            goto lab_0x18000f1b8;
        } else {
            // 0x18000ee18
            *v2 = v133;
            uint32_t v134 = *(int32_t *)(v119 + (int64_t)v132); // 0x18000ee22
            v131 = v123;
            v130 = v134;
            if (*v16 == 0) {
                goto lab_0x18000ee56;
            } else {
                // 0x18000ee2c
                v131 = 256 * (int64_t)v134 & 0xff0000;
                v130 = 0x1000000 * v134 | v134 / 0x1000000 | v134 / 256 & 0xff00 | (int32_t)v131;
                goto lab_0x18000ee56;
            }
        }
    }
  lab_0x18000ed36:
    // 0x18000ed36
    if (v12 > (int32_t)v116) {
        // 0x18000ed3d
        *(int32_t *)v124 = v125;
        goto lab_0x18000ed40;
    } else {
        goto lab_0x18000ed40;
    }
  lab_0x18000ed40:;
    int64_t v135 = v115 + 1; // 0x18000ed43
    v117 = v126;
    v116 = v116 + 1 & 0xffffffff;
    v114 = v124 + 16;
    v115 = v135;
    v52 = v126;
    if (v135 < v51) {
        goto lab_0x18000ece0;
    } else {
        goto lab_0x18000ed4f;
    }
  lab_0x18000ee56:;
    int64_t v136 = v131;
    int64_t v137 = v121 + (int64_t)(v130 != 0); // 0x18000ee5d
    int64_t v138 = v137 & 0xffffffff; // 0x18000ee5d
    int64_t v139 = v122 + 1 & 0xffffffff; // 0x18000ee64
    v123 = v136;
    v122 = v139;
    v121 = v138;
    int64_t v140; // 0x18000e860
    if (v139 < v5) {
        goto lab_0x18000ee00_2;
    } else {
        // 0x18000ee6c
        v140 = 0;
        v64 = v136;
        if ((int32_t)v137 < 1) {
            goto lab_0x18000eec7;
        } else {
            goto lab_0x18000ee73;
        }
    }
  lab_0x18000ee73:
    // 0x18000ee73
    v13 = 0;
    v14 = 0;
    if ((int32_t)function_18001d5c0(a1, (int64_t *)&v13) == 0) {
        goto lab_0x18000f1b8;
    } else {
        // 0x18000eeaa
        if ((int32_t)function_18001d5c0(a1, (int64_t *)&v14) == 0) {
            goto lab_0x18000f1b8;
        } else {
            int64_t v141 = v140 + 1 & 0xffffffff; // 0x18000eebf
            v140 = v141;
            v64 = a1;
            if (v141 < v138) {
                goto lab_0x18000ee73;
            } else {
                goto lab_0x18000eec7;
            }
        }
    }
  lab_0x18000f08f:;
    uint64_t v142 = 0xaaaaaaab * (int64_t)(v95 == 0 ? v94 : llvm_bswap_i32(v94)); // 0x18000f094
    int32_t v143 = v96; // 0x18000f09d
    int64_t v144; // 0x18000e860
    int64_t v145; // 0x18000e860
    int64_t v146; // 0x18000e860
    uint64_t v147; // 0x18000f094
    int64_t * v148; // 0x18000e860
    if (v142 < 0x200000000) {
        goto lab_0x18000f19f;
    } else {
        // 0x18000f09f
        v147 = v142 / 0x200000000;
        if ((int32_t)function_180001e80(a2, v147) == 0) {
            goto lab_0x18000f1b8;
        } else {
            // 0x18000f0c1
            v148 = (int64_t *)(a2 + 8);
            v145 = a2;
            v146 = 0;
            v144 = 0;
            goto lab_0x18000f0c1_2;
        }
    }
  lab_0x18000f19f:;
    int32_t v149 = v143 & -4; // 0x18000f1a4
    *v2 = (v143 & 3) == 0 ? v149 : v149 + 4;
    goto lab_0x18000f1b8;
  lab_0x18000f0c1_2:;
    // 0x18000f0c1
    int64_t v150; // 0x18000e860
    int64_t v151; // 0x18000e860
    if (v145 == 0) {
        goto lab_0x18000f1b8;
    } else {
        uint32_t v152 = *v15; // 0x18000f0cd
        uint32_t v153 = *v2; // 0x18000f0d1
        uint32_t v154 = v153 + 2; // 0x18000f0d4
        if (v154 > v152) {
            goto lab_0x18000f1b8;
        } else {
            // 0x18000f0e0
            v150 = v144;
            *v2 = v154;
            uint32_t v155 = v153 + 4; // 0x18000f109
            if (v155 > v152) {
                goto lab_0x18000f1b8;
            } else {
                int16_t v156 = *(int16_t *)(v145 + (int64_t)v153); // 0x18000f0ec
                int32_t v157 = *v16; // 0x18000f0f1
                *v2 = v155;
                uint32_t v158 = v153 + 6; // 0x18000f13c
                if (v158 > v152) {
                    goto lab_0x18000f1b8;
                } else {
                    int16_t v159 = *(int16_t *)(v145 + (int64_t)v154); // 0x18000f122
                    *v2 = v158;
                    int16_t v160 = *(int16_t *)(v145 + (int64_t)v155); // 0x18000f14f
                    int64_t v161 = *v148; // 0x18000f165
                    v151 = 0;
                    if (v161 == 0) {
                        goto lab_0x18000f190;
                    } else {
                        uint16_t v162 = v157 == 0 ? v156 : llvm_bswap_i16(v156);
                        uint16_t v163 = v157 == 0 ? v159 : llvm_bswap_i16(v159);
                        uint16_t v164 = v157 == 0 ? v160 : llvm_bswap_i16(v160);
                        *(int32_t *)(v150 + 4 + v161) = (int32_t)v162;
                        *(int32_t *)(v150 + 8 + *v148) = (int32_t)v163;
                        *(int32_t *)(v150 + 12 + *v148) = (int32_t)v164;
                        v151 = v164;
                        goto lab_0x18000f190;
                    }
                }
            }
        }
    }
  lab_0x18000f190:;
    int64_t v165 = v146 + 1; // 0x18000f190
    v145 = v151;
    v146 = v165 & 0xffffffff;
    v144 = v150 + 20;
    if ((int32_t)v165 < (int32_t)v147) {
        goto lab_0x18000f0c1_2;
    } else {
        // 0x18000f19f
        v143 = *v2;
        goto lab_0x18000f19f;
    }
}

// Address range: 0x18000f210 - 0x18000fbe3
int64_t function_18000f210(int64_t a1, int64_t a2) {
    // 0x18000f210
    if (a1 == 0 || a2 == 0) {
        // 0x18000fbb9
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000f26a
    int32_t v2 = *v1; // 0x18000f26a
    uint32_t v3 = v2 + 4; // 0x18000f26d
    int32_t * v4 = (int32_t *)(a1 + 12); // 0x18000f270
    uint32_t v5 = *v4; // 0x18000f270
    if (v3 > v5) {
        // 0x18000fbb9
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000f27b
    *v1 = v3;
    uint32_t v6 = v2 + 8;
    if (v6 > v5) {
        // 0x18000fbb9
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000f289
    *v1 = v6;
    int32_t v7 = *(int32_t *)((int64_t)v3 + a1); // 0x18000f293
    int32_t * v8 = (int32_t *)(a1 + 16); // 0x18000f29c
    int32_t v9 = *v8 == 0 ? v7 : llvm_bswap_i32(v7);
    int32_t v10; // bp-552, 0x18000f210
    int64_t v11 = &v10; // 0x18000f2d1
    function_1800010c0(v11);
    int64_t v12 = 0; // 0x18000f2f1
    int64_t v13 = 0; // 0x18000f2f1
    uint32_t v14 = *v4; // 0x18000f2fd
    uint32_t v15 = *v1; // 0x18000f301
    uint32_t v16 = v15 + 4; // 0x18000f304
    int32_t v17; // 0x18000f210
    int64_t v18; // 0x18000f210
    int64_t v19; // 0x18000f210
    int64_t v20; // 0x18000f210
    int64_t v21; // 0x18000f210
    int64_t v22; // 0x18000f210
    int32_t v23; // bp-592, 0x18000f210
    int32_t v24; // bp-608, 0x18000f210
    int32_t v25; // 0x18000f3df
    int32_t v26; // 0x18000f3e7
    int32_t v27; // 0x18000f454
    while (v16 <= v14) {
        int64_t v28 = v12;
        *v1 = v16;
        uint32_t v29 = v15 + 8; // 0x18000f34f
        if (v29 > v14) {
            // break -> 0x18000fb97
            break;
        }
        int32_t v30 = *(int32_t *)((int64_t)v15 + v11); // 0x18000f31a
        int32_t v31 = *v8; // 0x18000f31e
        *v1 = v29;
        int32_t v32 = *(int32_t *)((int64_t)v16 + v11); // 0x18000f365
        int32_t v33 = v31 == 0 ? v32 : llvm_bswap_i32(v32);
        if (v33 != 0) {
            // 0x18000f3a3
            int64_t v34; // bp-408, 0x18000f210
            *(int32_t *)((int64_t)&v34 + 32 + 4 * v28) = v33;
        }
        // 0x18000f3a8
        v13 = v28 == 0 ? (int64_t)(v31 == 0 ? v30 : llvm_bswap_i32(v30)) : v13;
        v12 = v28 + 1;
        if (v12 >= 5) {
            uint32_t v35 = *v4; // 0x18000f3c3
            if (v15 + 12 > v35) {
                goto lab_0x18000fb97;
            } else {
                uint32_t v36 = *v1; // 0x18000f3d3
                *v1 = v36 + 4;
                uint32_t v37 = v36 + 8; // 0x18000f417
                if (v37 > v35) {
                    goto lab_0x18000fb97;
                } else {
                    // 0x18000f424
                    v25 = *(int32_t *)((int64_t)v36 + v11);
                    v26 = *v8;
                    *v1 = v37;
                    uint32_t v38 = v36 + 12; // 0x18000f42b
                    if (v38 > v35) {
                        goto lab_0x18000fb97;
                    } else {
                        // 0x18000f437
                        *v1 = v38;
                        uint32_t v39 = v36 + 16; // 0x18000f43e
                        if (v39 > v35) {
                            goto lab_0x18000fb97;
                        } else {
                            // 0x18000f44a
                            *v1 = v39;
                            v27 = *(int32_t *)((int64_t)v38 + v11);
                            v24 = 0;
                            v23 = 0;
                            if ((int32_t)function_18001d5c0(a1, (int64_t *)&v24) == 0) {
                                goto lab_0x18000fb97;
                            } else {
                                // 0x18000f4b0
                                if ((int32_t)function_18001d5c0(a1, (int64_t *)&v23) == 0) {
                                    goto lab_0x18000fb97;
                                } else {
                                    // 0x18000f4cf
                                    v22 = a1;
                                    v19 = 0;
                                    if ((int32_t)v13 < 1) {
                                        goto lab_0x18000f545;
                                    } else {
                                        // 0x18000f4e9
                                        v17 = *v1;
                                        v21 = a1;
                                        v20 = 0;
                                        v18 = 0;
                                        goto lab_0x18000f4e9_2;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        v14 = *v4;
        v15 = *v1;
        v16 = v15 + 4;
    }
  lab_0x18000fb97:
    // 0x18000fb97
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    // 0x18000fbb9
    __security_check_cookie(g17);
    return &g47;
  lab_0x18000f545:;
    // 0x18000f545
    int32_t v40; // 0x18000f210
    if (v40 == 0) {
        goto lab_0x18000f54f;
    } else {
        goto lab_0x18000f54f;
    }
  lab_0x18000f54f:;
    int64_t v41 = 0x100000000 * v13 >> 32; // 0x18000f552
    int64_t v42 = v22; // 0x18000f558
    int64_t v43; // 0x18000f210
    int64_t v44; // 0x18000f210
    int64_t v45; // 0x18000f210
    int64_t v46; // 0x18000f210
    if ((int32_t)v13 < 1) {
        goto lab_0x18000f65f;
    } else {
        // 0x18000f55a
        v46 = v22;
        v45 = 0;
        int64_t v47; // bp-540, 0x18000f210
        v43 = &v47;
        v44 = 0;
        goto lab_0x18000f565;
    }
  lab_0x18000f4e9_2:;
    int32_t v48 = v17 + 4; // 0x18000f4ec
    int64_t v49; // 0x18000f210
    int64_t v50; // 0x18000f51b
    if (v48 > *v4) {
        goto lab_0x18000fb97;
    } else {
        // 0x18000f4f8
        *v1 = v48;
        uint32_t v51 = *(int32_t *)((int64_t)v17 + a1); // 0x18000f502
        int64_t v52 = v51; // 0x18000f502
        v50 = v21;
        v49 = v52;
        if (*v8 == 0) {
            goto lab_0x18000f536;
        } else {
            // 0x18000f50c
            v50 = 256 * v52 & 0xff0000;
            v49 = 0x1000000 * v51 | v51 / 0x1000000 | v51 / 256 & 0xff00 | (int32_t)v50;
            goto lab_0x18000f536;
        }
    }
  lab_0x18000f65f:
    // 0x18000f65f
    if (v40 == 0) {
        goto lab_0x18000f669;
    } else {
        goto lab_0x18000f669;
    }
  lab_0x18000f669:;
    int64_t v53 = v42; // 0x18000f66f
    int64_t v54; // 0x18000f210
    int64_t v55; // 0x18000f210
    int64_t v56; // 0x18000f210
    int64_t v57; // 0x18000f210
    if ((int32_t)v13 < 1) {
        goto lab_0x18000f7d6;
    } else {
        // 0x18000f671
        v57 = v42;
        v56 = 0;
        int64_t v58; // bp-532, 0x18000f210
        v54 = &v58;
        v55 = 0;
        goto lab_0x18000f680;
    }
  lab_0x18000f565:;
    int64_t v59; // 0x18000f210
    int32_t v60; // 0x18000f210
    int64_t v61; // 0x18000f5a0
    if (v22 == 0) {
        goto lab_0x18000fb97;
    } else {
        uint32_t v62 = *v1; // 0x18000f56e
        uint32_t v63 = v62 + 4; // 0x18000f571
        if (v63 > *v4) {
            goto lab_0x18000fb97;
        } else {
            // 0x18000f57d
            v59 = v43;
            *v1 = v63;
            uint32_t v64 = *(int32_t *)(v22 + (int64_t)v62); // 0x18000f587
            v61 = v46;
            v60 = v64;
            if (*v8 == 0) {
                goto lab_0x18000f5bb;
            } else {
                // 0x18000f591
                v61 = 256 * (int64_t)v64 & 0xff0000;
                v60 = 0x1000000 * v64 | v64 / 0x1000000 | v64 / 256 & 0xff00 | (int32_t)v61;
                goto lab_0x18000f5bb;
            }
        }
    }
  lab_0x18000f536:;
    int64_t v65 = v50;
    int64_t v66 = v20 == 0 ? v49 : v18;
    int64_t v67 = v20 + 1 & 0xffffffff; // 0x18000f53d
    v17 = v48;
    v21 = v65;
    v20 = v67;
    v18 = v66;
    if (v67 < v13) {
        goto lab_0x18000f4e9_2;
    } else {
        // 0x18000f545
        v22 = v65;
        v19 = 0x100000000 * v66 >> 32;
        goto lab_0x18000f545;
    }
  lab_0x18000f7d6:;
    int32_t v68 = v26 == 0 ? v25 : llvm_bswap_i32(v25);
    if (v68 == 0) {
        goto lab_0x18000f7e1;
    } else {
        // 0x18000f7de
        *v1 = v68;
        goto lab_0x18000f7e1;
    }
  lab_0x18000f7e1:;
    int32_t v69; // 0x18000f210
    uint32_t v70; // 0x18000f7f1
    int32_t v71; // 0x18000f210
    int64_t v72; // 0x18000f81d
    if (v53 == 0) {
        goto lab_0x18000fb97;
    } else {
        // 0x18000f7ed
        v70 = *v1;
        v71 = v70 + 4;
        if (v71 > *v4) {
            goto lab_0x18000fb97;
        } else {
            uint32_t v73 = *(int32_t *)(v53 + (int64_t)v70); // 0x18000f804
            v72 = v53;
            v69 = v73;
            if (*v8 == 0) {
                goto lab_0x18000f838;
            } else {
                // 0x18000f80e
                v72 = 256 * (int64_t)v73 & 0xff0000;
                v69 = 0x1000000 * v73 | v73 / 0x1000000 | v73 / 256 & 0xff00 | (int32_t)v72;
                goto lab_0x18000f838;
            }
        }
    }
  lab_0x18000f680:;
    int64_t v74; // 0x18000f210
    int32_t v75; // 0x18000f210
    int64_t v76; // 0x18000f6bb
    if (v42 == 0) {
        goto lab_0x18000fb97;
    } else {
        uint32_t v77 = *v1; // 0x18000f689
        uint32_t v78 = v77 + 4; // 0x18000f68c
        if (v78 > *v4) {
            goto lab_0x18000fb97;
        } else {
            // 0x18000f698
            v74 = v54;
            *v1 = v78;
            uint32_t v79 = *(int32_t *)(v42 + (int64_t)v77); // 0x18000f6a2
            v76 = v57;
            v75 = v79;
            if (*v8 == 0) {
                goto lab_0x18000f6d6;
            } else {
                // 0x18000f6ac
                v76 = 256 * (int64_t)v79 & 0xff0000;
                v75 = 0x1000000 * v79 | v79 / 0x1000000 | v79 / 256 & 0xff00 | (int32_t)v76;
                goto lab_0x18000f6d6;
            }
        }
    }
  lab_0x18000f5bb:;
    int64_t v80 = v61;
    if (v10 > (int32_t)v45) {
        // 0x18000f5c2
        *(int32_t *)v59 = v60;
        goto lab_0x18000f5c5;
    } else {
        goto lab_0x18000f5c5;
    }
  lab_0x18000f5c5:;
    int64_t v81 = v44 + 1; // 0x18000f5c8
    v46 = v80;
    v45 = v45 + 1 & 0xffffffff;
    v43 = v59 + 16;
    v44 = v81;
    int64_t v82; // 0x18000f210
    int64_t v83; // 0x18000f210
    int64_t v84; // 0x18000f210
    int64_t v85; // 0x18000f210
    if (v81 < v41) {
        goto lab_0x18000f565;
    } else {
        // 0x18000f5e6
        v85 = v80;
        v84 = 0;
        int64_t v86; // bp-536, 0x18000f210
        v82 = &v86;
        v83 = 0;
        goto lab_0x18000f5f0;
    }
  lab_0x18000f838:;
    int32_t v87 = v70; // 0x18000f83c
    if (v69 != 1) {
        goto lab_0x18000f84f;
    } else {
        // 0x18000f84b
        *v1 = v71;
        v87 = v71;
        goto lab_0x18000f84f;
    }
  lab_0x18000f6d6:;
    int64_t v88 = v76;
    if (v10 > (int32_t)v56) {
        // 0x18000f6dd
        *(int32_t *)v74 = v75;
        goto lab_0x18000f6e0;
    } else {
        goto lab_0x18000f6e0;
    }
  lab_0x18000f84f:;
    int64_t v89 = v72; // 0x18000f856
    if (v87 == 0) {
        goto lab_0x18000f881;
    } else {
        int64_t v90 = function_180005100(a1, a2, v9, v87, v19, (int64_t *)&v10); // 0x18000f874
        v89 = a1;
        if ((int32_t)v90 == 0) {
            goto lab_0x18000fb97;
        } else {
            goto lab_0x18000f881;
        }
    }
  lab_0x18000f6e0:;
    int64_t v91 = v55 + 1; // 0x18000f6e3
    v57 = v88;
    v56 = v56 + 1 & 0xffffffff;
    v54 = v74 + 16;
    v55 = v91;
    int64_t v92; // 0x18000f210
    int64_t v93; // 0x18000f210
    int64_t v94; // 0x18000f210
    if (v91 < v41) {
        goto lab_0x18000f680;
    } else {
        // 0x18000f710
        v94 = v88;
        v93 = 0;
        v92 = 0;
        goto lab_0x18000f710_2;
    }
  lab_0x18000f5f0:;
    int64_t v95; // 0x18000f210
    int32_t v96; // 0x18000f210
    int64_t v97; // 0x18000f62b
    if (v80 == 0) {
        goto lab_0x18000fb97;
    } else {
        uint32_t v98 = *v1; // 0x18000f5f9
        uint32_t v99 = v98 + 4; // 0x18000f5fc
        if (v99 > *v4) {
            goto lab_0x18000fb97;
        } else {
            // 0x18000f608
            v95 = v82;
            *v1 = v99;
            uint32_t v100 = *(int32_t *)(v80 + (int64_t)v98); // 0x18000f612
            v97 = v85;
            v96 = v100;
            if (*v8 == 0) {
                goto lab_0x18000f646;
            } else {
                // 0x18000f61c
                v97 = 256 * (int64_t)v100 & 0xff0000;
                v96 = 0x1000000 * v100 | v100 / 0x1000000 | v100 / 256 & 0xff00 | (int32_t)v97;
                goto lab_0x18000f646;
            }
        }
    }
  lab_0x18000f881:;
    int32_t v101 = v26 == 0 ? v27 : llvm_bswap_i32(v27);
    if (v101 == 0) {
        goto lab_0x18000f88a;
    } else {
        // 0x18000f886
        *v1 = v101;
        goto lab_0x18000f88a;
    }
  lab_0x18000f88a:;
    int32_t v102; // 0x18000f210
    int32_t v103; // 0x18000f9ac
    uint32_t v104; // 0x18000f9fa
    int32_t v105; // 0x18000f8cc
    if (v89 == 0) {
        goto lab_0x18000fb97;
    } else {
        uint32_t v106 = *v4; // 0x18000f896
        int32_t v107 = *v1; // 0x18000f89a
        uint32_t v108 = v107 + 4; // 0x18000f89d
        if (v108 > v106) {
            goto lab_0x18000fb97;
        } else {
            // 0x18000f8a9
            *v1 = v108;
            uint32_t v109 = v107 + 8; // 0x18000f8b0
            if (v109 > v106) {
                goto lab_0x18000fb97;
            } else {
                // 0x18000f8bc
                *v1 = v109;
                uint32_t v110 = v107 + 12; // 0x18000f8fd
                if (v110 > v106) {
                    goto lab_0x18000fb97;
                } else {
                    int32_t v111 = *(int32_t *)(v89 + (int64_t)v108); // 0x18000f8c8
                    v105 = *v8;
                    *v1 = v110;
                    uint32_t v112 = v107 + 16; // 0x18000f911
                    if (v112 > v106) {
                        goto lab_0x18000fb97;
                    } else {
                        // 0x18000f91d
                        *v1 = v112;
                        uint32_t v113 = v107 + 20; // 0x18000f924
                        if (v113 > v106) {
                            goto lab_0x18000fb97;
                        } else {
                            // 0x18000f930
                            *v1 = v113;
                            uint32_t v114 = v107 + 24; // 0x18000f937
                            if (v114 > v106) {
                                goto lab_0x18000fb97;
                            } else {
                                // 0x18000f943
                                *v1 = v114;
                                uint32_t v115 = v107 + 28; // 0x18000f94a
                                if (v115 > v106) {
                                    goto lab_0x18000fb97;
                                } else {
                                    // 0x18000f956
                                    *v1 = v115;
                                    uint32_t v116 = v107 + 32; // 0x18000f95d
                                    if (v116 > v106) {
                                        goto lab_0x18000fb97;
                                    } else {
                                        // 0x18000f969
                                        *v1 = v116;
                                        uint32_t v117 = v107 + 36; // 0x18000f970
                                        if (v117 > v106) {
                                            goto lab_0x18000fb97;
                                        } else {
                                            // 0x18000f97c
                                            *v1 = v117;
                                            uint32_t v118 = v107 + 40; // 0x18000f983
                                            if (v118 > v106) {
                                                goto lab_0x18000fb97;
                                            } else {
                                                // 0x18000f98f
                                                *v1 = v118;
                                                uint32_t v119 = v107 + 44; // 0x18000f996
                                                if (v119 > v106) {
                                                    goto lab_0x18000fb97;
                                                } else {
                                                    uint32_t v120 = v105 == 0 ? v111 : llvm_bswap_i32(v111);
                                                    *v1 = v119;
                                                    v103 = *(int32_t *)(v89 + (int64_t)v118);
                                                    int64_t v121; // bp-344, 0x18000f210
                                                    function_180005050(a1, (int64_t)v120, &v121);
                                                    v104 = *v4;
                                                    uint32_t v122 = *v1; // 0x18000f9fe
                                                    int32_t v123 = v122 + 4; // 0x18000fa01
                                                    if (v123 > v104) {
                                                        goto lab_0x18000fb97;
                                                    } else {
                                                        // 0x18000fa0d
                                                        *v1 = v123;
                                                        int32_t v124 = *(int32_t *)((int64_t)v122 + a1); // 0x18000fa17
                                                        int32_t v125 = *v8 == 0 ? v124 : llvm_bswap_i32(v124);
                                                        v102 = v123;
                                                        if (v125 == 0) {
                                                            goto lab_0x18000fa54;
                                                        } else {
                                                            // 0x18000fa50
                                                            *v1 = v125;
                                                            v102 = v125;
                                                            goto lab_0x18000fa54;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18000f710_2:;
    int32_t v126; // 0x18000f210
    int64_t v127; // 0x18000f74b
    if (v88 == 0) {
        goto lab_0x18000fb97;
    } else {
        uint32_t v128 = *v1; // 0x18000f719
        uint32_t v129 = v128 + 4; // 0x18000f71c
        if (v129 > *v4) {
            goto lab_0x18000fb97;
        } else {
            // 0x18000f728
            *v1 = v129;
            uint32_t v130 = *(int32_t *)(v88 + (int64_t)v128); // 0x18000f732
            v127 = v94;
            v126 = v130;
            if (*v8 == 0) {
                goto lab_0x18000f766;
            } else {
                // 0x18000f73c
                v127 = 256 * (int64_t)v130 & 0xff0000;
                v126 = 0x1000000 * v130 | v130 / 0x1000000 | v130 / 256 & 0xff00 | (int32_t)v127;
                goto lab_0x18000f766;
            }
        }
    }
  lab_0x18000f646:
    // 0x18000f646
    if (v10 > (int32_t)v84) {
        // 0x18000f64d
        *(int32_t *)v95 = v96;
        goto lab_0x18000f650;
    } else {
        goto lab_0x18000f650;
    }
  lab_0x18000f650:;
    int64_t v131 = v83 + 1; // 0x18000f653
    v85 = v97;
    v84 = v84 + 1 & 0xffffffff;
    v82 = v95 + 16;
    v83 = v131;
    v42 = v97;
    if (v131 < v41) {
        goto lab_0x18000f5f0;
    } else {
        goto lab_0x18000f65f;
    }
  lab_0x18000f766:;
    int64_t v132 = v127;
    int64_t v133 = v92 + (int64_t)(v126 != 0); // 0x18000f76d
    int64_t v134 = v133 & 0xffffffff; // 0x18000f76d
    int64_t v135 = v93 + 1 & 0xffffffff; // 0x18000f774
    v94 = v132;
    v93 = v135;
    v92 = v134;
    int64_t v136; // 0x18000f210
    if (v135 < v13) {
        goto lab_0x18000f710_2;
    } else {
        // 0x18000f77c
        v136 = 0;
        v53 = v132;
        if ((int32_t)v133 < 1) {
            goto lab_0x18000f7d6;
        } else {
            goto lab_0x18000f790;
        }
    }
  lab_0x18000f790:
    // 0x18000f790
    v23 = 0;
    v24 = 0;
    if ((int32_t)function_18001d5c0(a1, (int64_t *)&v23) == 0) {
        goto lab_0x18000fb97;
    } else {
        // 0x18000f7b9
        if ((int32_t)function_18001d5c0(a1, (int64_t *)&v24) == 0) {
            goto lab_0x18000fb97;
        } else {
            int64_t v137 = v136 + 1 & 0xffffffff; // 0x18000f7ce
            v136 = v137;
            v53 = a1;
            if (v137 < v134) {
                goto lab_0x18000f790;
            } else {
                goto lab_0x18000f7d6;
            }
        }
    }
  lab_0x18000fa54:;
    int32_t v138 = v102 + 4; // 0x18000fa57
    int32_t v139; // 0x18000f210
    int64_t v140; // 0x18000f210
    int64_t v141; // 0x18000f210
    int64_t v142; // 0x18000f210
    uint64_t v143; // 0x18000fa6c
    int64_t * v144; // 0x18000f210
    if (v138 > v104) {
        goto lab_0x18000fb97;
    } else {
        uint32_t v145 = v105 == 0 ? v103 : llvm_bswap_i32(v103);
        *v1 = v138;
        uint64_t v146 = 0xaaaaaaab * (int64_t)v145; // 0x18000fa6c
        v139 = v138;
        if (v146 < 0x200000000) {
            goto lab_0x18000fb7e;
        } else {
            // 0x18000fa7c
            v143 = v146 / 0x200000000;
            if ((int32_t)function_180001e80(a2, v143) == 0) {
                goto lab_0x18000fb97;
            } else {
                // 0x18000faa0
                v144 = (int64_t *)(a2 + 8);
                v141 = a2;
                v142 = 0;
                v140 = 0;
                goto lab_0x18000faa0_2;
            }
        }
    }
  lab_0x18000fb7e:;
    int32_t v147 = v139 & -4; // 0x18000fb83
    *v1 = (v139 & 3) == 0 ? v147 : v147 + 4;
    goto lab_0x18000fb97;
  lab_0x18000faa0_2:;
    // 0x18000faa0
    int64_t v148; // 0x18000f210
    int64_t v149; // 0x18000f210
    if (v141 == 0) {
        goto lab_0x18000fb97;
    } else {
        uint32_t v150 = *v4; // 0x18000faac
        uint32_t v151 = *v1; // 0x18000fab0
        uint32_t v152 = v151 + 2; // 0x18000fab3
        if (v152 > v150) {
            goto lab_0x18000fb97;
        } else {
            // 0x18000fabf
            v148 = v140;
            *v1 = v152;
            uint32_t v153 = v151 + 4; // 0x18000fae8
            if (v153 > v150) {
                goto lab_0x18000fb97;
            } else {
                int16_t v154 = *(int16_t *)(v141 + (int64_t)v151); // 0x18000facb
                int32_t v155 = *v8; // 0x18000fad0
                *v1 = v153;
                uint32_t v156 = v151 + 6; // 0x18000fb1b
                if (v156 > v150) {
                    goto lab_0x18000fb97;
                } else {
                    int16_t v157 = *(int16_t *)(v141 + (int64_t)v152); // 0x18000fb01
                    *v1 = v156;
                    int16_t v158 = *(int16_t *)(v141 + (int64_t)v153); // 0x18000fb2e
                    int64_t v159 = *v144; // 0x18000fb44
                    v149 = 0;
                    if (v159 == 0) {
                        goto lab_0x18000fb6f;
                    } else {
                        uint16_t v160 = v155 == 0 ? v154 : llvm_bswap_i16(v154);
                        uint16_t v161 = v155 == 0 ? v157 : llvm_bswap_i16(v157);
                        uint16_t v162 = v155 == 0 ? v158 : llvm_bswap_i16(v158);
                        *(int32_t *)(v148 + 4 + v159) = (int32_t)v160;
                        *(int32_t *)(v148 + 8 + *v144) = (int32_t)v161;
                        *(int32_t *)(v148 + 12 + *v144) = (int32_t)v162;
                        v149 = v162;
                        goto lab_0x18000fb6f;
                    }
                }
            }
        }
    }
  lab_0x18000fb6f:;
    int64_t v163 = v142 + 1; // 0x18000fb6f
    v141 = v149;
    v142 = v163 & 0xffffffff;
    v140 = v148 + 20;
    if ((int32_t)v163 < (int32_t)v143) {
        goto lab_0x18000faa0_2;
    } else {
        // 0x18000fb7e
        v139 = *v1;
        goto lab_0x18000fb7e;
    }
}

// Address range: 0x18000fbf0 - 0x18000ff92
int64_t function_18000fbf0(int64_t a1, int32_t * a2, int64_t a3) {
    // 0x18000fbf0
    if (a1 == 0 || a3 == 0) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000fc2c
    int32_t v2 = *v1; // 0x18000fc2c
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18000fc2f
    uint32_t v4 = *v3; // 0x18000fc2f
    uint32_t v5 = v2 + 4; // 0x18000fc32
    if (v5 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fc39
    *v1 = v5;
    uint32_t v6 = v2 + 8;
    if (v6 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fc43
    *v1 = v6;
    uint32_t v7 = v2 + 12; // 0x18000fc4a
    if (v7 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fc51
    *v1 = v7;
    uint32_t v8 = v2 + 16; // 0x18000fc58
    if (v8 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fc5f
    *v1 = v8;
    uint32_t v9 = v2 + 20; // 0x18000fc66
    if (v9 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fc6d
    *v1 = v9;
    uint32_t v10 = v2 + 24; // 0x18000fc74
    if (v10 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v11 = (int64_t)a2;
    *v1 = v10;
    int32_t v12 = *(int32_t *)(v11 + 8); // 0x18000fc7f
    if (v12 == 0) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fc86
    *v1 = v12;
    uint32_t v13 = v12 + 4; // 0x18000fc89
    if (v13 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fc94
    *v1 = v13;
    uint32_t v14 = v12 + 8;
    if (v14 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fc9e
    *v1 = v14;
    uint32_t v15 = v12 + 12; // 0x18000fca5
    if (v15 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fcb0
    *v1 = v15;
    uint32_t v16 = v12 + 16; // 0x18000fcb7
    if (v16 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fcc2
    *v1 = v16;
    int32_t v17 = v12 + 20; // 0x18000fcc9
    if (v17 > v4) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fcd4
    *v1 = v17;
    uint32_t v18 = *(int32_t *)(v11 + 16) - 5; // 0x18000fcd8
    int32_t v19 = v17; // 0x18000fcf0
    int64_t v20 = 0; // 0x18000fcf0
    int32_t v21 = v17; // 0x18000fcf0
    if (v18 >= 1) {
        v19 += 4;
        while (v19 <= v4) {
            // 0x18000fd00
            *v1 = v19;
            v20 = v20 + 1 & 0xffffffff;
            v21 = v19;
            if (v20 >= (int64_t)v18) {
                goto lab_0x18000fd0e;
            }
            v19 += 4;
        }
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x18000fd0e:;
    int32_t * v22 = (int32_t *)(v11 + 28); // 0x18000fd16
    uint32_t v23 = *v22;
    int32_t v24 = v23; // 0x18000fd1b
    if (v23 > v21) {
        int64_t v25; // bp-872, 0x18000fbf0
        while ((int32_t)function_180004f90(a1, &v25) != 0) {
            // 0x18000fd34
            if (*v1 >= v23) {
                // 0x18000fd39
                v24 = *v22;
                goto lab_0x18000fd39_2;
            }
        }
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    goto lab_0x18000fd39_2;
  lab_0x18000fd39_2:;
    int64_t v26 = 0; // bp-952, 0x18000fd4c
    if (v24 == 0 || (int32_t)function_18000ffa0(a1, v24, &v26) == 0) {
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18000fd9b
    g32 = 1;
    int32_t v27; // 0x18000fbf0
    if (v27 == 0) {
      lab_0x18000ff0f:
        // 0x18000ff0f
        if ((int32_t)function_18000d570(a1, 0, v27) == 0) {
            // 0x18000ff70
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18000ff24
        if ((int32_t)function_18000e400(a1, 0, v27) != 0) {
            // 0x18000ff39
            function_18000b660(a1, 0, (int64_t)(uint32_t)v27);
        }
        // 0x18000ff70
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v28 = 0; // 0x18000fef1
    int32_t v29; // 0x18000fbf0
    int32_t v30 = v29 + 4; // 0x18000fefc
    while (v30 <= *v3) {
        // 0x18000ff04
        *v1 = v30;
        int64_t v31 = v28 + 1; // 0x18000ff08
        v28 = v31 & 0xffffffff;
        if ((int32_t)v31 >= 32) {
            goto lab_0x18000ff0f;
        }
        v30 += 4;
    }
    // 0x18000ff70
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18000ffa0 - 0x180010558
int64_t function_18000ffa0(int64_t a1, uint32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18000ffc1
    *v1 = a2;
    if (a1 == 0) {
        // 0x180010523
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v2 = a2 + 4; // 0x18000ffcd
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18000ffd0
    if (*v3 < v2) {
        // 0x180010523
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v4 = (int64_t)a3;
    *v1 = v2;
    int32_t * v5 = (int32_t *)(a1 + 16); // 0x18000ffdf
    int32_t v6 = *(int32_t *)((int64_t)a2 + a1); // 0x18000ffe3
    uint32_t v7 = *v5 == 0 ? v6 : llvm_bswap_i32(v6);
    int64_t v8; // bp-344, 0x18000ffa0
    function_180005050(a1, (int64_t)v7, &v8);
    uint32_t v9 = *v1; // 0x18000fffd
    int64_t v10 = 0; // 0x18000fffd
    v9 += 4;
    int64_t v11; // 0x18000ffa0
    int64_t v12; // 0x18000ffa0
    uint32_t v13; // 0x180010028
    while (v9 <= *v3) {
        // 0x180010018
        *v1 = v9;
        int64_t v14 = v10 + 1; // 0x18001001c
        v10 = v14 & 0xffffffff;
        if ((int32_t)v14 >= 6) {
            // 0x180010028
            v13 = *v3;
            v11 = v9;
            v12 = 0;
            goto lab_0x180010039;
        }
        v9 += 4;
    }
  lab_0x180010523:
    // 0x180010523
    __security_check_cookie(g17);
    return &g47;
  lab_0x180010039:;
    int64_t v15 = v11 + 4; // 0x180010039
    uint32_t v16 = (int32_t)v15;
    if (v13 < v16) {
        goto lab_0x180010523;
    } else {
        int64_t v17 = v15 & 0xffffffff;
        int64_t v18 = v12 + 1; // 0x180010045
        *v1 = v16;
        v11 = v17;
        v12 = v18 & 0xffffffff;
        if ((int32_t)v18 < 19) {
            goto lab_0x180010039;
        } else {
            uint32_t v19 = v16 + 4; // 0x18001005b
            if (v19 > v13) {
                goto lab_0x180010523;
            } else {
                // 0x180010064
                *v1 = v19;
                uint32_t v20 = v16 + 8; // 0x180010087
                if (v20 > v13) {
                    goto lab_0x180010523;
                } else {
                    int32_t v21 = *v5; // 0x18001006c
                    int32_t v22 = *(int32_t *)(v17 + a1); // 0x180010074
                    *v1 = v20;
                    uint32_t v23 = v16 + 12;
                    if (v23 > v13) {
                        goto lab_0x180010523;
                    } else {
                        int32_t v24 = *(int32_t *)((int64_t)v19 + a1); // 0x1800100ad
                        *v1 = v23;
                        uint32_t v25 = v16 + 16; // 0x1800100e5
                        if (v25 > v13) {
                            goto lab_0x180010523;
                        } else {
                            int32_t v26 = *(int32_t *)((int64_t)v20 + a1); // 0x1800100d2
                            *v1 = v25;
                            uint32_t v27 = v16 + 20;
                            if (v27 > v13) {
                                goto lab_0x180010523;
                            } else {
                                int32_t v28 = *(int32_t *)((int64_t)v23 + a1); // 0x18001010b
                                *v1 = v27;
                                uint32_t v29 = v16 + 24; // 0x180010143
                                if (v29 > v13) {
                                    goto lab_0x180010523;
                                } else {
                                    int32_t v30 = *(int32_t *)((int64_t)v25 + a1); // 0x180010130
                                    *v1 = v29;
                                    uint32_t v31 = v16 + 28;
                                    if (v31 > v13) {
                                        goto lab_0x180010523;
                                    } else {
                                        int32_t v32 = *(int32_t *)((int64_t)v27 + a1); // 0x180010161
                                        *v1 = v31;
                                        uint32_t v33 = v16 + 32; // 0x180010189
                                        if (v33 > v13) {
                                            goto lab_0x180010523;
                                        } else {
                                            // 0x180010196
                                            *v1 = v33;
                                            uint32_t v34 = v16 + 36;
                                            if (v34 > v13) {
                                                goto lab_0x180010523;
                                            } else {
                                                int32_t v35 = *(int32_t *)((int64_t)v31 + a1); // 0x1800101a7
                                                *v1 = v34;
                                                uint32_t v36 = v16 + 40; // 0x1800101e7
                                                if (v36 > v13) {
                                                    goto lab_0x180010523;
                                                } else {
                                                    int32_t v37 = *(int32_t *)((int64_t)v33 + a1); // 0x1800101db
                                                    *v1 = v36;
                                                    uint32_t v38 = v16 + 44;
                                                    if (v38 > v13) {
                                                        goto lab_0x180010523;
                                                    } else {
                                                        // 0x180010209
                                                        *v1 = v38;
                                                        uint32_t v39 = v16 + 48; // 0x180010228
                                                        if (v39 > v13) {
                                                            goto lab_0x180010523;
                                                        } else {
                                                            int32_t v40 = *(int32_t *)((int64_t)v36 + a1); // 0x180010215
                                                            *v1 = v39;
                                                            uint32_t v41 = v16 + 52;
                                                            if (v41 > v13) {
                                                                goto lab_0x180010523;
                                                            } else {
                                                                int32_t v42 = *(int32_t *)((int64_t)v38 + a1); // 0x18001024e
                                                                *v1 = v41;
                                                                uint32_t v43 = v16 + 56; // 0x18001026d
                                                                if (v43 > v13) {
                                                                    goto lab_0x180010523;
                                                                } else {
                                                                    // 0x180010279
                                                                    *v1 = v43;
                                                                    uint32_t v44 = v16 + 60;
                                                                    if (v44 > v13) {
                                                                        goto lab_0x180010523;
                                                                    } else {
                                                                        // 0x18001028b
                                                                        *v1 = v44;
                                                                        uint32_t v45 = v16 + 64; // 0x180010292
                                                                        if (v45 > v13) {
                                                                            goto lab_0x180010523;
                                                                        } else {
                                                                            // 0x18001029e
                                                                            *v1 = v45;
                                                                            uint32_t v46 = v16 + 68;
                                                                            if (v46 > v13) {
                                                                                goto lab_0x180010523;
                                                                            } else {
                                                                                // 0x1800102b0
                                                                                *v1 = v46;
                                                                                uint32_t v47 = v16 + 72; // 0x1800102b7
                                                                                if (v47 > v13) {
                                                                                    goto lab_0x180010523;
                                                                                } else {
                                                                                    // 0x1800102c3
                                                                                    *v1 = v47;
                                                                                    uint32_t v48 = v16 + 76;
                                                                                    if (v48 > v13) {
                                                                                        goto lab_0x180010523;
                                                                                    } else {
                                                                                        // 0x1800102d5
                                                                                        *v1 = v48;
                                                                                        uint32_t v49 = v16 + 80; // 0x1800102f4
                                                                                        if (v49 > v13) {
                                                                                            goto lab_0x180010523;
                                                                                        } else {
                                                                                            int32_t v50 = *(int32_t *)((int64_t)v47 + a1); // 0x1800102e1
                                                                                            *v1 = v49;
                                                                                            uint32_t v51 = v16 + 84;
                                                                                            if (v51 > v13) {
                                                                                                goto lab_0x180010523;
                                                                                            } else {
                                                                                                int32_t v52 = *(int32_t *)((int64_t)v48 + a1); // 0x18001031a
                                                                                                *v1 = v51;
                                                                                                uint32_t v53 = v16 + 88; // 0x180010339
                                                                                                if (v53 > v13) {
                                                                                                    goto lab_0x180010523;
                                                                                                } else {
                                                                                                    // 0x180010345
                                                                                                    *v1 = v53;
                                                                                                    uint32_t v54 = v16 + 92;
                                                                                                    if (v54 > v13) {
                                                                                                        goto lab_0x180010523;
                                                                                                    } else {
                                                                                                        // 0x180010357
                                                                                                        *v1 = v54;
                                                                                                        uint32_t v55 = v16 + 96; // 0x18001035e
                                                                                                        if (v55 > v13) {
                                                                                                            goto lab_0x180010523;
                                                                                                        } else {
                                                                                                            // 0x18001036a
                                                                                                            *v1 = v55;
                                                                                                            uint32_t v56 = v16 + 100;
                                                                                                            if (v56 > v13) {
                                                                                                                goto lab_0x180010523;
                                                                                                            } else {
                                                                                                                // 0x18001037c
                                                                                                                *v1 = v56;
                                                                                                                uint32_t v57 = v16 + 104; // 0x180010383
                                                                                                                if (v57 > v13) {
                                                                                                                    goto lab_0x180010523;
                                                                                                                } else {
                                                                                                                    // 0x18001038f
                                                                                                                    *v1 = v57;
                                                                                                                    uint32_t v58 = v16 + 108;
                                                                                                                    if (v58 > v13) {
                                                                                                                        goto lab_0x180010523;
                                                                                                                    } else {
                                                                                                                        // 0x1800103a1
                                                                                                                        *v1 = v58;
                                                                                                                        uint32_t v59 = v16 + 112; // 0x1800103c7
                                                                                                                        if (v59 > v13) {
                                                                                                                            goto lab_0x180010523;
                                                                                                                        } else {
                                                                                                                            int32_t v60 = *(int32_t *)((int64_t)v57 + a1); // 0x1800103bb
                                                                                                                            *v1 = v59;
                                                                                                                            uint32_t v61 = v16 + 116;
                                                                                                                            if (v61 > v13) {
                                                                                                                                goto lab_0x180010523;
                                                                                                                            } else {
                                                                                                                                int32_t v62 = *(int32_t *)((int64_t)v58 + a1); // 0x1800103e0
                                                                                                                                *v1 = v61;
                                                                                                                                uint32_t v63 = v16 + 120; // 0x1800103ff
                                                                                                                                if (v63 > v13) {
                                                                                                                                    goto lab_0x180010523;
                                                                                                                                } else {
                                                                                                                                    // 0x18001040b
                                                                                                                                    *v1 = v63;
                                                                                                                                    uint32_t v64 = v16 + 124;
                                                                                                                                    if (v64 > v13) {
                                                                                                                                        goto lab_0x180010523;
                                                                                                                                    } else {
                                                                                                                                        // 0x18001041d
                                                                                                                                        *v1 = v64;
                                                                                                                                        uint32_t v65 = v16 + 128; // 0x180010424
                                                                                                                                        if (v65 > v13) {
                                                                                                                                            goto lab_0x180010523;
                                                                                                                                        } else {
                                                                                                                                            // 0x180010430
                                                                                                                                            *v1 = v65;
                                                                                                                                            uint32_t v66 = v16 + 132;
                                                                                                                                            if (v66 > v13) {
                                                                                                                                                goto lab_0x180010523;
                                                                                                                                            } else {
                                                                                                                                                // 0x180010442
                                                                                                                                                *v1 = v66;
                                                                                                                                                uint32_t v67 = v16 + 136; // 0x180010449
                                                                                                                                                if (v67 > v13) {
                                                                                                                                                    goto lab_0x180010523;
                                                                                                                                                } else {
                                                                                                                                                    int32_t v68 = v21 == 0 ? v22 : llvm_bswap_i32(v22);
                                                                                                                                                    int32_t v69 = v21 == 0 ? v24 : llvm_bswap_i32(v24);
                                                                                                                                                    int32_t v70 = v21 == 0 ? v26 : llvm_bswap_i32(v26);
                                                                                                                                                    int32_t v71 = v21 == 0 ? v28 : llvm_bswap_i32(v28);
                                                                                                                                                    int32_t v72 = v21 == 0 ? v30 : llvm_bswap_i32(v30);
                                                                                                                                                    int32_t v73 = v21 == 0 ? v32 : llvm_bswap_i32(v32);
                                                                                                                                                    int32_t v74 = v21 == 0 ? v35 : llvm_bswap_i32(v35);
                                                                                                                                                    int32_t v75 = v21 == 0 ? v37 : llvm_bswap_i32(v37);
                                                                                                                                                    int32_t v76 = v21 == 0 ? v40 : llvm_bswap_i32(v40);
                                                                                                                                                    int32_t v77 = v21 == 0 ? v42 : llvm_bswap_i32(v42);
                                                                                                                                                    int32_t v78 = v21 == 0 ? v50 : llvm_bswap_i32(v50);
                                                                                                                                                    int32_t v79 = v21 == 0 ? v52 : llvm_bswap_i32(v52);
                                                                                                                                                    int32_t v80 = v21 == 0 ? v60 : llvm_bswap_i32(v60);
                                                                                                                                                    int32_t v81 = v21 == 0 ? v62 : llvm_bswap_i32(v62);
                                                                                                                                                    *v1 = v67;
                                                                                                                                                    *(int32_t *)(v4 + 44) = v73 == 0 ? 0 : v73 + v27;
                                                                                                                                                    *(int32_t *)(v4 + 48) = v74;
                                                                                                                                                    *(int32_t *)(v4 + 24) = v68;
                                                                                                                                                    *(int32_t *)(v4 + 56) = v76;
                                                                                                                                                    *(int32_t *)(v4 + 32) = v70;
                                                                                                                                                    *(int32_t *)(v4 + 64) = v78;
                                                                                                                                                    *(int32_t *)(v4 + 28) = v69 == 0 ? 0 : v69 + v19;
                                                                                                                                                    *(int32_t *)(v4 + 36) = v71 == 0 ? 0 : v71 + v23;
                                                                                                                                                    *(int32_t *)(v4 + 40) = v72;
                                                                                                                                                    *(int32_t *)(v4 + 52) = v75 == 0 ? 0 : v75 + v33;
                                                                                                                                                    *(int32_t *)(v4 + 60) = v77 == 0 ? 0 : v77 + v38;
                                                                                                                                                    *(int32_t *)(v4 + 68) = v79 == 0 ? 0 : v79 + v48;
                                                                                                                                                    *(int32_t *)(v4 + 72) = v80;
                                                                                                                                                    *(int32_t *)(v4 + 76) = v81 == 0 ? 0 : v81 + v58;
                                                                                                                                                    goto lab_0x180010523;
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x180010560 - 0x18001057e
int64_t function_180010560(int64_t result) {
    // 0x180010560
    *(char *)result = 0;
    *(int64_t *)(result + 260) = 0;
    *(int64_t *)(result + 268) = 0;
    *(int64_t *)(result + 276) = 0;
    return result;
}

// Address range: 0x180010580 - 0x180010b0d
int64_t function_180010580(int64_t a1, int32_t * a2) {
    // 0x180010580
    int32_t v1; // 0x180010580
    int32_t v2 = v1;
    if (a1 == 0) {
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x1800105b6
    int32_t v4 = *v3; // 0x1800105b6
    int32_t * v5 = (int32_t *)(a1 + 12); // 0x1800105b9
    uint32_t v6 = *v5; // 0x1800105b9
    uint32_t v7 = v4 + 4; // 0x1800105bd
    if (v7 > v6) {
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v8 = v4 + 8; // 0x1800105c9
    *v3 = v7;
    if (v8 > v6) {
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v9 = (int64_t)a2;
    *v3 = v8;
    int32_t v10 = *(int32_t *)(v9 + 8); // 0x1800105de
    if (v10 == 0) {
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v11 = v10 + 4; // 0x1800105e9
    *v3 = v10;
    if (v11 > v6) {
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800105fb
    *v3 = v11;
    uint32_t v12 = v10 + 8; // 0x1800105fe
    if (v12 > v6) {
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v13 = v10 + 12; // 0x18001060a
    *v3 = v12;
    if (v13 > v6) {
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180010619
    *v3 = v13;
    uint32_t v14 = v10 + 16; // 0x18001061f
    if (v14 > v6) {
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v15 = v14; // 0x18001062b
    *v3 = v14;
    uint32_t v16 = *(int32_t *)(v9 + 16) - 4; // 0x18001063c
    int64_t v17 = 0; // 0x180010644
    int32_t v18 = v14; // 0x180010644
    int64_t v19 = v15; // 0x180010644
    if (v16 >= 1) {
        int64_t v20 = v15 + 4; // 0x180010650
        int32_t v21 = v20;
        while (v6 >= v21) {
            int64_t v22 = v20 & 0xffffffff; // 0x180010650
            v17 = v17 + 1 & 0xffffffff;
            *v3 = v21;
            v18 = v21;
            v19 = v22;
            if (v17 >= (int64_t)v16) {
                goto lab_0x180010665;
            }
            v20 = v22 + 4;
            v21 = v20;
        }
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x180010665:;
    int32_t * v23 = (int32_t *)(v9 + 28); // 0x18001066d
    uint32_t v24 = *v23;
    int32_t v25 = v24; // 0x180010672
    int32_t v26; // 0x180010580
    uint32_t v27; // 0x180010580
    if (v24 > (int32_t)v19) {
        // 0x180010680
        int64_t v28; // bp-744, 0x180010580
        int64_t v29 = (int64_t)&v28 - 128;
        v26 = v18;
        while (true) {
          lab_0x180010680:;
            uint32_t v30 = v26; // 0x18001068d
            int32_t v31 = v30 + 4; // 0x180010690
            if (v31 > v6) {
                // break -> 0x1800107a9
                break;
            }
            // 0x18001069c
            *v3 = v31;
            int32_t v32 = *(int32_t *)((int64_t)v30 + a1); // 0x1800106a6
            v27 = *(int32_t *)(a1 + 16) == 0 ? v32 : llvm_bswap_i32(v32);
            if (v27 == 0) {
                // 0x180010700
                *(char *)v29 = 0;
                goto lab_0x180010705;
            } else {
                int32_t v33 = v30 + 5; // 0x1800106c3
                if (v33 > v6) {
                    // break -> 0x1800107a9
                    break;
                }
                int64_t v34 = 0;
                int64_t v35 = 0;
                *v3 = v33;
                char v36 = *(char *)((int64_t)v31 + a1); // 0x1800106d6
                if (v34 <= 259) {
                    // 0x1800106e4
                    *(char *)(v34 + v29) = v36;
                }
                int64_t v37 = v34; // 0x1800106ea
                while (v36 != 0) {
                    int64_t v38 = v35 + 1; // 0x1800106ec
                    int64_t v39 = v34 + 1; // 0x1800106ef
                    v37 = v39;
                    if (v27 <= (int32_t)v38) {
                        // break -> 0x1800106f7
                        break;
                    }
                    int32_t v40 = *v3;
                    int32_t v41 = v40 + 1; // 0x1800106c3
                    if (v41 > v6) {
                        // break (via goto) -> 0x1800107a9
                        goto lab_0x1800107a9;
                    }
                    v34 = v39;
                    v35 = v38 & 0xffffffff;
                    *v3 = v41;
                    v36 = *(char *)((int64_t)v40 + a1);
                    if (v34 <= 259) {
                        // 0x1800106e4
                        *(char *)(v34 + v29) = v36;
                    }
                    // 0x1800106e8
                    v37 = v34;
                }
                int64_t v42 = v37; // 0x1800106fe
                if (v37 > 259) {
                    goto lab_0x180010705;
                } else {
                    // 0x180010700
                    *(char *)(v42 + v29) = 0;
                    goto lab_0x180010705;
                }
            }
        }
      lab_0x1800107a9:
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
    goto lab_0x18001071f_2;
  lab_0x180010705:;
    int32_t v50 = *v3; // 0x180010705
    int32_t v51 = v50 & -4; // 0x18001070a
    int32_t v52 = (v50 & 3) == 0 ? v51 : v51 + 4;
    *v3 = v52;
    v26 = v52;
    int64_t v45; // 0x180010580
    if (v52 >= v24) {
        // 0x18001071f
        v25 = *v23;
        v45 = v27;
        goto lab_0x18001071f_2;
    }
    goto lab_0x180010680;
  lab_0x18001071f_2:;
    int32_t v43 = *(int32_t *)&g31; // 0x18001071f
    int64_t v44 = 0; // bp-952, 0x180010738
    if (v43 != 868) {
        if (v43 != 884) {
            if (v43 != 893) {
                if (v25 == 0 || (int32_t)function_180011140(a1, v25, &v44) == 0) {
                    // 0x1800107a9
                    __security_check_cookie(g17);
                    return &g47;
                }
            } else {
                if (v25 == 0 || (int32_t)function_180011d40(a1, v25, &v44) == 0) {
                    // 0x1800107a9
                    __security_check_cookie(g17);
                    return &g47;
                }
            }
        } else {
            if (v25 == 0 || (int32_t)function_180011770(a1, v25, &v44) == 0) {
                // 0x1800107a9
                __security_check_cookie(g17);
                return &g47;
            }
        }
    } else {
        if (v25 == 0 || (int32_t)function_180010b10(a1, v25, &v44) == 0) {
            // 0x1800107a9
            __security_check_cookie(g17);
            return &g47;
        }
    }
    if (v1 != 0 || v2 != 0) {
        *v3 = v2 == 0 ? v1 : v2;
    }
    if (v1 == 0) {
      lab_0x180010a9b:
        // 0x180010a9b
        if ((int32_t)function_180012640(a1, 0, v1) == 0 || (int32_t)function_180012300(a1, 0, v1) == 0) {
            // 0x1800107a9
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x180010ac5
        if ((int32_t)function_180014f10(a1, 0, v1, v45) != 0) {
            // 0x180010ada
            function_180014610(a1, 0, v1);
        }
        // 0x1800107a9
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v46 = 0; // 0x180010a7a
    int32_t v47; // 0x180010580
    int32_t v48 = v47 + 4; // 0x180010a88
    while (v48 <= *v5) {
        // 0x180010a90
        *v3 = v48;
        int64_t v49 = v46 + 1; // 0x180010a94
        v46 = v49 & 0xffffffff;
        if ((int32_t)v49 >= 64) {
            goto lab_0x180010a9b;
        }
        v48 += 4;
    }
    // 0x1800107a9
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180010b10 - 0x18001113d
int64_t function_180010b10(int64_t a1, uint32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180010b2e
    *v1 = a2;
    if (a1 == 0) {
        // 0x180011104
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v2 = a2 + 4; // 0x180010b3d
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x180010b40
    if (*v3 < v2) {
        // 0x180011104
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v4 = (int64_t)a3;
    *v1 = v2;
    int32_t * v5 = (int32_t *)(a1 + 16); // 0x180010b4f
    int32_t v6 = *(int32_t *)((int64_t)a2 + a1); // 0x180010b53
    uint32_t v7 = *v5 == 0 ? v6 : llvm_bswap_i32(v6);
    int64_t v8; // bp-344, 0x180010b10
    function_180005050(a1, (int64_t)v7, &v8);
    uint32_t v9 = *v1; // 0x180010b6d
    int64_t v10 = 0; // 0x180010b6d
    v9 += 4;
    int64_t v11; // 0x180010b10
    int64_t v12; // 0x180010b10
    uint32_t v13; // 0x180010b98
    while (v9 <= *v3) {
        // 0x180010b88
        *v1 = v9;
        int64_t v14 = v10 + 1; // 0x180010b8c
        v10 = v14 & 0xffffffff;
        if ((int32_t)v14 >= 6) {
            // 0x180010b98
            v13 = *v3;
            v11 = v9;
            v12 = 0;
            goto lab_0x180010ba9;
        }
        v9 += 4;
    }
  lab_0x180011104:
    // 0x180011104
    __security_check_cookie(g17);
    return &g47;
  lab_0x180010ba9:;
    int64_t v15 = v11 + 4; // 0x180010ba9
    uint32_t v16 = (int32_t)v15;
    if (v13 < v16) {
        goto lab_0x180011104;
    } else {
        int64_t v17 = v15 & 0xffffffff;
        int64_t v18 = v12 + 1; // 0x180010bb5
        *v1 = v16;
        v11 = v17;
        v12 = v18 & 0xffffffff;
        if ((int32_t)v18 < 17) {
            goto lab_0x180010ba9;
        } else {
            uint32_t v19 = v16 + 4; // 0x180010bcb
            if (v19 > v13) {
                goto lab_0x180011104;
            } else {
                // 0x180010bd4
                *v1 = v19;
                uint32_t v20 = v16 + 8; // 0x180010bf7
                if (v20 > v13) {
                    goto lab_0x180011104;
                } else {
                    int32_t v21 = *v5; // 0x180010bdc
                    int32_t v22 = *(int32_t *)(v17 + a1); // 0x180010be4
                    *v1 = v20;
                    uint32_t v23 = v16 + 12;
                    if (v23 > v13) {
                        goto lab_0x180011104;
                    } else {
                        int32_t v24 = *(int32_t *)((int64_t)v19 + a1); // 0x180010c1d
                        *v1 = v23;
                        uint32_t v25 = v16 + 16; // 0x180010c55
                        if (v25 > v13) {
                            goto lab_0x180011104;
                        } else {
                            int32_t v26 = *(int32_t *)((int64_t)v20 + a1); // 0x180010c42
                            *v1 = v25;
                            uint32_t v27 = v16 + 20;
                            if (v27 > v13) {
                                goto lab_0x180011104;
                            } else {
                                int32_t v28 = *(int32_t *)((int64_t)v23 + a1); // 0x180010c73
                                *v1 = v27;
                                uint32_t v29 = v16 + 24; // 0x180010cb2
                                if (v29 > v13) {
                                    goto lab_0x180011104;
                                } else {
                                    int32_t v30 = *(int32_t *)((int64_t)v25 + a1); // 0x180010c9f
                                    *v1 = v29;
                                    uint32_t v31 = v16 + 28;
                                    if (v31 > v13) {
                                        goto lab_0x180011104;
                                    } else {
                                        int32_t v32 = *(int32_t *)((int64_t)v27 + a1); // 0x180010cd0
                                        *v1 = v31;
                                        uint32_t v33 = v16 + 32; // 0x180010d0f
                                        if (v33 > v13) {
                                            goto lab_0x180011104;
                                        } else {
                                            int32_t v34 = *(int32_t *)((int64_t)v29 + a1); // 0x180010cfc
                                            *v1 = v33;
                                            uint32_t v35 = v16 + 36;
                                            if (v35 > v13) {
                                                goto lab_0x180011104;
                                            } else {
                                                int32_t v36 = *(int32_t *)((int64_t)v31 + a1); // 0x180010d35
                                                *v1 = v35;
                                                uint32_t v37 = v16 + 40; // 0x180010d5e
                                                if (v37 > v13) {
                                                    goto lab_0x180011104;
                                                } else {
                                                    // 0x180010d6b
                                                    *v1 = v37;
                                                    uint32_t v38 = v16 + 44;
                                                    if (v38 > v13) {
                                                        goto lab_0x180011104;
                                                    } else {
                                                        int32_t v39 = *(int32_t *)((int64_t)v35 + a1); // 0x180010d77
                                                        *v1 = v38;
                                                        uint32_t v40 = v16 + 48; // 0x180010db6
                                                        if (v40 > v13) {
                                                            goto lab_0x180011104;
                                                        } else {
                                                            int32_t v41 = *(int32_t *)((int64_t)v37 + a1); // 0x180010dab
                                                            *v1 = v40;
                                                            uint32_t v42 = v16 + 52;
                                                            if (v42 > v13) {
                                                                goto lab_0x180011104;
                                                            } else {
                                                                // 0x180010dd8
                                                                *v1 = v42;
                                                                uint32_t v43 = v16 + 56; // 0x180010df7
                                                                if (v43 > v13) {
                                                                    goto lab_0x180011104;
                                                                } else {
                                                                    int32_t v44 = *(int32_t *)((int64_t)v40 + a1); // 0x180010de4
                                                                    *v1 = v43;
                                                                    uint32_t v45 = v16 + 60;
                                                                    if (v45 > v13) {
                                                                        goto lab_0x180011104;
                                                                    } else {
                                                                        int32_t v46 = *(int32_t *)((int64_t)v42 + a1); // 0x180010e1d
                                                                        *v1 = v45;
                                                                        uint32_t v47 = v16 + 64; // 0x180010e3c
                                                                        if (v47 > v13) {
                                                                            goto lab_0x180011104;
                                                                        } else {
                                                                            // 0x180010e48
                                                                            *v1 = v47;
                                                                            uint32_t v48 = v16 + 68;
                                                                            if (v48 > v13) {
                                                                                goto lab_0x180011104;
                                                                            } else {
                                                                                // 0x180010e5a
                                                                                *v1 = v48;
                                                                                uint32_t v49 = v16 + 72; // 0x180010e61
                                                                                if (v49 > v13) {
                                                                                    goto lab_0x180011104;
                                                                                } else {
                                                                                    // 0x180010e6d
                                                                                    *v1 = v49;
                                                                                    uint32_t v50 = v16 + 76;
                                                                                    if (v50 > v13) {
                                                                                        goto lab_0x180011104;
                                                                                    } else {
                                                                                        // 0x180010e7f
                                                                                        *v1 = v50;
                                                                                        uint32_t v51 = v16 + 80; // 0x180010e86
                                                                                        if (v51 > v13) {
                                                                                            goto lab_0x180011104;
                                                                                        } else {
                                                                                            // 0x180010e92
                                                                                            *v1 = v51;
                                                                                            uint32_t v52 = v16 + 84;
                                                                                            if (v52 > v13) {
                                                                                                goto lab_0x180011104;
                                                                                            } else {
                                                                                                // 0x180010ea4
                                                                                                *v1 = v52;
                                                                                                uint32_t v53 = v16 + 88; // 0x180010ec3
                                                                                                if (v53 > v13) {
                                                                                                    goto lab_0x180011104;
                                                                                                } else {
                                                                                                    int32_t v54 = *(int32_t *)((int64_t)v51 + a1); // 0x180010eb0
                                                                                                    *v1 = v53;
                                                                                                    uint32_t v55 = v16 + 92;
                                                                                                    if (v55 > v13) {
                                                                                                        goto lab_0x180011104;
                                                                                                    } else {
                                                                                                        int32_t v56 = *(int32_t *)((int64_t)v52 + a1); // 0x180010ee9
                                                                                                        *v1 = v55;
                                                                                                        uint32_t v57 = v16 + 96; // 0x180010f08
                                                                                                        if (v57 > v13) {
                                                                                                            goto lab_0x180011104;
                                                                                                        } else {
                                                                                                            // 0x180010f14
                                                                                                            *v1 = v57;
                                                                                                            uint32_t v58 = v16 + 100;
                                                                                                            if (v58 > v13) {
                                                                                                                goto lab_0x180011104;
                                                                                                            } else {
                                                                                                                // 0x180010f26
                                                                                                                *v1 = v58;
                                                                                                                uint32_t v59 = v16 + 104; // 0x180010f2d
                                                                                                                if (v59 > v13) {
                                                                                                                    goto lab_0x180011104;
                                                                                                                } else {
                                                                                                                    // 0x180010f39
                                                                                                                    *v1 = v59;
                                                                                                                    uint32_t v60 = v16 + 108;
                                                                                                                    if (v60 > v13) {
                                                                                                                        goto lab_0x180011104;
                                                                                                                    } else {
                                                                                                                        // 0x180010f4b
                                                                                                                        *v1 = v60;
                                                                                                                        uint32_t v61 = v16 + 112; // 0x180010f6b
                                                                                                                        if (v61 > v13) {
                                                                                                                            goto lab_0x180011104;
                                                                                                                        } else {
                                                                                                                            int32_t v62 = *(int32_t *)((int64_t)v59 + a1); // 0x180010f5f
                                                                                                                            *v1 = v61;
                                                                                                                            uint32_t v63 = v16 + 116;
                                                                                                                            if (v63 > v13) {
                                                                                                                                goto lab_0x180011104;
                                                                                                                            } else {
                                                                                                                                int32_t v64 = *(int32_t *)((int64_t)v60 + a1); // 0x180010f89
                                                                                                                                *v1 = v63;
                                                                                                                                uint32_t v65 = v16 + 120; // 0x180010fa9
                                                                                                                                if (v65 > v13) {
                                                                                                                                    goto lab_0x180011104;
                                                                                                                                } else {
                                                                                                                                    // 0x180010fb5
                                                                                                                                    *v1 = v65;
                                                                                                                                    uint32_t v66 = v16 + 124;
                                                                                                                                    if (v66 > v13) {
                                                                                                                                        goto lab_0x180011104;
                                                                                                                                    } else {
                                                                                                                                        // 0x180010fc7
                                                                                                                                        *v1 = v66;
                                                                                                                                        uint32_t v67 = v16 + 128; // 0x180010fce
                                                                                                                                        if (v67 > v13) {
                                                                                                                                            goto lab_0x180011104;
                                                                                                                                        } else {
                                                                                                                                            // 0x180010fda
                                                                                                                                            *v1 = v67;
                                                                                                                                            uint32_t v68 = v16 + 132;
                                                                                                                                            if (v68 > v13) {
                                                                                                                                                goto lab_0x180011104;
                                                                                                                                            } else {
                                                                                                                                                // 0x180010fec
                                                                                                                                                *v1 = v68;
                                                                                                                                                uint32_t v69 = v16 + 136; // 0x180010ff3
                                                                                                                                                if (v69 > v13) {
                                                                                                                                                    goto lab_0x180011104;
                                                                                                                                                } else {
                                                                                                                                                    // 0x180010fff
                                                                                                                                                    *v1 = v69;
                                                                                                                                                    uint32_t v70 = v16 + 140;
                                                                                                                                                    if (v70 > v13) {
                                                                                                                                                        goto lab_0x180011104;
                                                                                                                                                    } else {
                                                                                                                                                        // 0x180011011
                                                                                                                                                        *v1 = v70;
                                                                                                                                                        uint32_t v71 = v16 + 144; // 0x180011018
                                                                                                                                                        if (v71 > v13) {
                                                                                                                                                            goto lab_0x180011104;
                                                                                                                                                        } else {
                                                                                                                                                            int32_t v72 = v21 == 0 ? v22 : llvm_bswap_i32(v22);
                                                                                                                                                            int32_t v73 = v21 == 0 ? v24 : llvm_bswap_i32(v24);
                                                                                                                                                            int32_t v74 = v21 == 0 ? v26 : llvm_bswap_i32(v26);
                                                                                                                                                            int32_t v75 = v21 == 0 ? v28 : llvm_bswap_i32(v28);
                                                                                                                                                            int32_t v76 = v21 == 0 ? v30 : llvm_bswap_i32(v30);
                                                                                                                                                            int32_t v77 = v21 == 0 ? v32 : llvm_bswap_i32(v32);
                                                                                                                                                            int32_t v78 = v21 == 0 ? v34 : llvm_bswap_i32(v34);
                                                                                                                                                            int32_t v79 = v21 == 0 ? v36 : llvm_bswap_i32(v36);
                                                                                                                                                            int32_t v80 = v21 == 0 ? v39 : llvm_bswap_i32(v39);
                                                                                                                                                            int32_t v81 = v21 == 0 ? v41 : llvm_bswap_i32(v41);
                                                                                                                                                            int32_t v82 = v21 == 0 ? v44 : llvm_bswap_i32(v44);
                                                                                                                                                            int32_t v83 = v21 == 0 ? v46 : llvm_bswap_i32(v46);
                                                                                                                                                            int32_t v84 = v21 == 0 ? v54 : llvm_bswap_i32(v54);
                                                                                                                                                            int32_t v85 = v21 == 0 ? v56 : llvm_bswap_i32(v56);
                                                                                                                                                            int32_t v86 = v21 == 0 ? v62 : llvm_bswap_i32(v62);
                                                                                                                                                            int32_t v87 = v21 == 0 ? v64 : llvm_bswap_i32(v64);
                                                                                                                                                            *v1 = v71;
                                                                                                                                                            *(int32_t *)(v4 + 28) = v75 == 0 ? 0 : v75 + v23;
                                                                                                                                                            *(int32_t *)(v4 + 32) = v76;
                                                                                                                                                            *(int32_t *)(v4 + 40) = v78;
                                                                                                                                                            *(int32_t *)(v4 + 48) = v80;
                                                                                                                                                            *(int32_t *)(v4 + 56) = v82;
                                                                                                                                                            *(int32_t *)(v4 + 16) = v72;
                                                                                                                                                            *(int32_t *)(v4 + 64) = v84;
                                                                                                                                                            *(int32_t *)(v4 + 20) = v73 == 0 ? 0 : v73 + v19;
                                                                                                                                                            *(int32_t *)(v4 + 24) = v74;
                                                                                                                                                            *(int32_t *)(v4 + 36) = v77 == 0 ? 0 : v77 + v27;
                                                                                                                                                            *(int32_t *)(v4 + 44) = v79 == 0 ? 0 : v79 + v31;
                                                                                                                                                            *(int32_t *)(v4 + 52) = v81 == 0 ? 0 : v81 + v37;
                                                                                                                                                            *(int32_t *)(v4 + 60) = v83 == 0 ? 0 : v83 + v42;
                                                                                                                                                            *(int32_t *)(v4 + 68) = v85 == 0 ? 0 : v85 + v52;
                                                                                                                                                            *(int32_t *)(v4 + 72) = v86;
                                                                                                                                                            *(int32_t *)(v4 + 76) = v87 == 0 ? 0 : v87 + v60;
                                                                                                                                                            goto lab_0x180011104;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x180011140 - 0x180011770
int64_t function_180011140(int64_t a1, uint32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180011161
    *v1 = a2;
    if (a1 == 0) {
        // 0x18001173a
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v2 = a2 + 4; // 0x18001116d
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x180011170
    if (*v3 < v2) {
        // 0x18001173a
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v4 = (int64_t)a3;
    *v1 = v2;
    int32_t * v5 = (int32_t *)(a1 + 16); // 0x18001117f
    int32_t v6 = *(int32_t *)((int64_t)a2 + a1); // 0x180011183
    uint32_t v7 = *v5 == 0 ? v6 : llvm_bswap_i32(v6);
    int64_t v8; // bp-344, 0x180011140
    function_180005050(a1, (int64_t)v7, &v8);
    uint32_t v9 = *v1; // 0x18001119e
    int64_t v10 = 0; // 0x18001119e
    v9 += 4;
    int64_t v11; // 0x180011140
    int64_t v12; // 0x180011140
    while (v9 <= *v3) {
        // 0x1800111b8
        *v1 = v9;
        int64_t v13 = v10 + 1; // 0x1800111bc
        v10 = v13 & 0xffffffff;
        if ((int32_t)v13 >= 6) {
            // 0x1800111c6
            v11 = v9;
            v12 = 0;
            goto lab_0x1800111f9;
        }
        v9 += 4;
    }
  lab_0x18001173a:
    // 0x18001173a
    __security_check_cookie(g17);
    return &g47;
  lab_0x1800111f9:;
    int64_t v14 = v11 + 4; // 0x1800111f9
    uint32_t v15 = (int32_t)v14;
    int32_t v16; // 0x180011140
    int64_t v17; // 0x180011140
    if (*v3 < v15) {
        goto lab_0x18001173a;
    } else {
        int64_t v18 = v14 & 0xffffffff;
        int64_t v19 = v12 + 1 & 0xffffffff; // 0x180011205
        *v1 = v15;
        v11 = v18;
        v12 = v19;
        if (v19 < (*(int32_t *)&g31 == 868 ? 17 : 22)) {
            goto lab_0x1800111f9;
        } else {
            uint32_t v20 = *v3; // 0x180011218
            uint32_t v21 = v15 + 4; // 0x18001121f
            if (v20 < v21) {
                goto lab_0x18001173a;
            } else {
                // 0x180011228
                *v1 = v21;
                uint32_t v22 = v15 + 8; // 0x180011251
                if (v22 > v20) {
                    goto lab_0x18001173a;
                } else {
                    int32_t v23 = *v5; // 0x180011238
                    int32_t v24 = *(int32_t *)(v18 + a1); // 0x18001123f
                    *v1 = v22;
                    uint32_t v25 = v15 + 12;
                    if (v25 > v20) {
                        goto lab_0x18001173a;
                    } else {
                        int32_t v26 = *(int32_t *)((int64_t)v21 + a1); // 0x18001126f
                        *v1 = v25;
                        uint32_t v27 = v15 + 16; // 0x18001129b
                        if (v27 > v20) {
                            goto lab_0x18001173a;
                        } else {
                            // 0x1800112a8
                            *v1 = v27;
                            uint32_t v28 = v15 + 20;
                            if (v28 > v20) {
                                goto lab_0x18001173a;
                            } else {
                                int32_t v29 = *(int32_t *)((int64_t)v25 + a1); // 0x1800112bc
                                *v1 = v28;
                                uint32_t v30 = v15 + 24; // 0x1800112f1
                                if (v30 > v20) {
                                    goto lab_0x18001173a;
                                } else {
                                    int32_t v31 = *(int32_t *)((int64_t)v27 + a1); // 0x1800112df
                                    *v1 = v30;
                                    uint32_t v32 = v15 + 28;
                                    if (v32 > v20) {
                                        goto lab_0x18001173a;
                                    } else {
                                        int32_t v33 = *(int32_t *)((int64_t)v28 + a1); // 0x18001130f
                                        *v1 = v32;
                                        uint32_t v34 = v15 + 32; // 0x18001134c
                                        if (v34 > v20) {
                                            goto lab_0x18001173a;
                                        } else {
                                            int32_t v35 = *(int32_t *)((int64_t)v30 + a1); // 0x18001133a
                                            *v1 = v34;
                                            uint32_t v36 = v15 + 36;
                                            if (v36 > v20) {
                                                goto lab_0x18001173a;
                                            } else {
                                                int32_t v37 = *(int32_t *)((int64_t)v32 + a1); // 0x18001136a
                                                *v1 = v36;
                                                uint32_t v38 = v15 + 40; // 0x180011390
                                                if (v38 > v20) {
                                                    goto lab_0x18001173a;
                                                } else {
                                                    // 0x18001139c
                                                    *v1 = v38;
                                                    uint32_t v39 = v15 + 44;
                                                    if (v39 > v20) {
                                                        goto lab_0x18001173a;
                                                    } else {
                                                        // 0x1800113ae
                                                        *v1 = v39;
                                                        uint32_t v40 = v15 + 48; // 0x1800113b5
                                                        if (v40 > v20) {
                                                            goto lab_0x18001173a;
                                                        } else {
                                                            // 0x1800113c1
                                                            *v1 = v40;
                                                            uint32_t v41 = v15 + 52;
                                                            if (v41 > v20) {
                                                                goto lab_0x18001173a;
                                                            } else {
                                                                // 0x1800113d3
                                                                *v1 = v41;
                                                                uint32_t v42 = v15 + 56; // 0x1800113da
                                                                if (v42 > v20) {
                                                                    goto lab_0x18001173a;
                                                                } else {
                                                                    // 0x1800113e6
                                                                    *v1 = v42;
                                                                    uint32_t v43 = v15 + 60;
                                                                    if (v43 > v20) {
                                                                        goto lab_0x18001173a;
                                                                    } else {
                                                                        // 0x1800113f8
                                                                        *v1 = v43;
                                                                        uint32_t v44 = v15 + 64; // 0x1800113ff
                                                                        if (v44 > v20) {
                                                                            goto lab_0x18001173a;
                                                                        } else {
                                                                            // 0x18001140b
                                                                            *v1 = v44;
                                                                            uint32_t v45 = v15 + 68;
                                                                            if (v45 > v20) {
                                                                                goto lab_0x18001173a;
                                                                            } else {
                                                                                // 0x18001141d
                                                                                *v1 = v45;
                                                                                uint32_t v46 = v15 + 72; // 0x18001143b
                                                                                if (v46 > v20) {
                                                                                    goto lab_0x18001173a;
                                                                                } else {
                                                                                    int32_t v47 = *(int32_t *)((int64_t)v44 + a1); // 0x180011429
                                                                                    *v1 = v46;
                                                                                    uint32_t v48 = v15 + 76;
                                                                                    if (v48 > v20) {
                                                                                        goto lab_0x18001173a;
                                                                                    } else {
                                                                                        int32_t v49 = *(int32_t *)((int64_t)v45 + a1); // 0x180011461
                                                                                        *v1 = v48;
                                                                                        uint32_t v50 = v15 + 80; // 0x18001147f
                                                                                        if (v50 > v20) {
                                                                                            goto lab_0x18001173a;
                                                                                        } else {
                                                                                            // 0x18001148b
                                                                                            *v1 = v50;
                                                                                            uint32_t v51 = v15 + 84;
                                                                                            if (v51 > v20) {
                                                                                                goto lab_0x18001173a;
                                                                                            } else {
                                                                                                // 0x18001149d
                                                                                                *v1 = v51;
                                                                                                uint32_t v52 = v15 + 88; // 0x1800114a4
                                                                                                if (v52 > v20) {
                                                                                                    goto lab_0x18001173a;
                                                                                                } else {
                                                                                                    // 0x1800114b0
                                                                                                    *v1 = v52;
                                                                                                    uint32_t v53 = v15 + 92;
                                                                                                    if (v53 > v20) {
                                                                                                        goto lab_0x18001173a;
                                                                                                    } else {
                                                                                                        // 0x1800114c2
                                                                                                        *v1 = v53;
                                                                                                        uint32_t v54 = v15 + 96; // 0x1800114c9
                                                                                                        if (v54 > v20) {
                                                                                                            goto lab_0x18001173a;
                                                                                                        } else {
                                                                                                            // 0x1800114d5
                                                                                                            *v1 = v54;
                                                                                                            uint32_t v55 = v15 + 100;
                                                                                                            if (v55 > v20) {
                                                                                                                goto lab_0x18001173a;
                                                                                                            } else {
                                                                                                                // 0x1800114e7
                                                                                                                *v1 = v55;
                                                                                                                uint32_t v56 = v15 + 104; // 0x180011506
                                                                                                                if (v56 > v20) {
                                                                                                                    goto lab_0x18001173a;
                                                                                                                } else {
                                                                                                                    int32_t v57 = *(int32_t *)((int64_t)v54 + a1); // 0x1800114fb
                                                                                                                    *v1 = v56;
                                                                                                                    uint32_t v58 = v15 + 108;
                                                                                                                    if (v58 > v20) {
                                                                                                                        goto lab_0x18001173a;
                                                                                                                    } else {
                                                                                                                        int32_t v59 = *(int32_t *)((int64_t)v55 + a1); // 0x18001152c
                                                                                                                        *v1 = v58;
                                                                                                                        uint32_t v60 = v15 + 112; // 0x18001154a
                                                                                                                        if (v60 > v20) {
                                                                                                                            goto lab_0x18001173a;
                                                                                                                        } else {
                                                                                                                            // 0x180011556
                                                                                                                            *v1 = v60;
                                                                                                                            uint32_t v61 = v15 + 116;
                                                                                                                            if (v61 > v20) {
                                                                                                                                goto lab_0x18001173a;
                                                                                                                            } else {
                                                                                                                                // 0x180011568
                                                                                                                                *v1 = v61;
                                                                                                                                uint32_t v62 = v15 + 120; // 0x18001156f
                                                                                                                                if (v62 > v20) {
                                                                                                                                    goto lab_0x18001173a;
                                                                                                                                } else {
                                                                                                                                    // 0x18001157b
                                                                                                                                    *v1 = v62;
                                                                                                                                    uint32_t v63 = v15 + 124;
                                                                                                                                    if (v63 > v20) {
                                                                                                                                        goto lab_0x18001173a;
                                                                                                                                    } else {
                                                                                                                                        // 0x18001158d
                                                                                                                                        *v1 = v63;
                                                                                                                                        uint32_t v64 = v15 + 128; // 0x1800115b4
                                                                                                                                        if (v64 > v20) {
                                                                                                                                            goto lab_0x18001173a;
                                                                                                                                        } else {
                                                                                                                                            int32_t v65 = *(int32_t *)((int64_t)v62 + a1); // 0x1800115a9
                                                                                                                                            *v1 = v64;
                                                                                                                                            uint32_t v66 = v15 + 132;
                                                                                                                                            if (v66 > v20) {
                                                                                                                                                goto lab_0x18001173a;
                                                                                                                                            } else {
                                                                                                                                                int32_t v67 = *(int32_t *)((int64_t)v63 + a1); // 0x1800115d0
                                                                                                                                                *v1 = v66;
                                                                                                                                                uint32_t v68 = v15 + 136; // 0x1800115ef
                                                                                                                                                if (v68 > v20) {
                                                                                                                                                    goto lab_0x18001173a;
                                                                                                                                                } else {
                                                                                                                                                    // 0x1800115fb
                                                                                                                                                    *v1 = v68;
                                                                                                                                                    uint32_t v69 = v15 + 140;
                                                                                                                                                    if (v69 > v20) {
                                                                                                                                                        goto lab_0x18001173a;
                                                                                                                                                    } else {
                                                                                                                                                        // 0x18001160d
                                                                                                                                                        *v1 = v69;
                                                                                                                                                        uint32_t v70 = v15 + 144; // 0x180011614
                                                                                                                                                        if (v70 > v20) {
                                                                                                                                                            goto lab_0x18001173a;
                                                                                                                                                        } else {
                                                                                                                                                            // 0x180011620
                                                                                                                                                            *v1 = v70;
                                                                                                                                                            uint32_t v71 = v15 + 148;
                                                                                                                                                            if (v71 > v20) {
                                                                                                                                                                goto lab_0x18001173a;
                                                                                                                                                            } else {
                                                                                                                                                                // 0x180011632
                                                                                                                                                                *v1 = v71;
                                                                                                                                                                uint32_t v72 = v15 + 152; // 0x180011639
                                                                                                                                                                if (v72 > v20) {
                                                                                                                                                                    goto lab_0x18001173a;
                                                                                                                                                                } else {
                                                                                                                                                                    int32_t v73 = v23 == 0 ? v24 : llvm_bswap_i32(v24);
                                                                                                                                                                    int32_t v74 = v23 == 0 ? v26 : llvm_bswap_i32(v26);
                                                                                                                                                                    int32_t v75 = v23 == 0 ? v29 : llvm_bswap_i32(v29);
                                                                                                                                                                    int32_t v76 = v23 == 0 ? v31 : llvm_bswap_i32(v31);
                                                                                                                                                                    int32_t v77 = v23 == 0 ? v33 : llvm_bswap_i32(v33);
                                                                                                                                                                    int32_t v78 = v23 == 0 ? v35 : llvm_bswap_i32(v35);
                                                                                                                                                                    int32_t v79 = v23 == 0 ? v37 : llvm_bswap_i32(v37);
                                                                                                                                                                    int32_t v80 = v23 == 0 ? v47 : llvm_bswap_i32(v47);
                                                                                                                                                                    int32_t v81 = v23 == 0 ? v49 : llvm_bswap_i32(v49);
                                                                                                                                                                    int32_t v82 = v23 == 0 ? v57 : llvm_bswap_i32(v57);
                                                                                                                                                                    int32_t v83 = v23 == 0 ? v59 : llvm_bswap_i32(v59);
                                                                                                                                                                    int32_t v84 = v23 == 0 ? v65 : llvm_bswap_i32(v65);
                                                                                                                                                                    int32_t v85 = v23 == 0 ? v67 : llvm_bswap_i32(v67);
                                                                                                                                                                    *v1 = v72;
                                                                                                                                                                    int32_t v86 = v75 + v25;
                                                                                                                                                                    *(int32_t *)(v4 + 28) = v74 == 0 ? 0 : v74 + v21;
                                                                                                                                                                    *(int32_t *)(v4 + 44) = v77 == 0 ? 0 : v77 + v28;
                                                                                                                                                                    *(int32_t *)(v4 + 52) = v79 == 0 ? 0 : v79 + v32;
                                                                                                                                                                    *(int32_t *)(v4 + 40) = v76;
                                                                                                                                                                    *(int32_t *)(v4 + 48) = v78;
                                                                                                                                                                    *(int32_t *)(v4 + 64) = v80;
                                                                                                                                                                    *(int32_t *)(v4 + 24) = v73;
                                                                                                                                                                    *(int32_t *)(v4 + 56) = v82;
                                                                                                                                                                    *(int32_t *)(v4 + 60) = v83 == 0 ? 0 : v83 + v55;
                                                                                                                                                                    *(int32_t *)(v4 + 68) = v81 == 0 ? 0 : v81 + v45;
                                                                                                                                                                    *(int32_t *)(v4 + 72) = v84;
                                                                                                                                                                    *(int32_t *)(v4 + 76) = v85 == 0 ? 0 : v85 + v63;
                                                                                                                                                                    if (v75 == 0 || v86 == 0) {
                                                                                                                                                                        goto lab_0x18001173a;
                                                                                                                                                                    } else {
                                                                                                                                                                        // 0x1800116d8
                                                                                                                                                                        *v1 = v86;
                                                                                                                                                                        v16 = v86;
                                                                                                                                                                        v17 = 0;
                                                                                                                                                                        goto lab_0x1800116e5;
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x1800116e5:;
    int32_t v87 = v16 + 4; // 0x1800116e8
    if (v87 > *v3) {
        goto lab_0x18001173a;
    } else {
        // 0x1800116f0
        *v1 = v87;
        int64_t v88 = v17 + 1; // 0x1800116f4
        v16 = v87;
        v17 = v88 & 0xffffffff;
        if ((int32_t)v88 < 64) {
            goto lab_0x1800116e5;
        } else {
            goto lab_0x18001173a;
        }
    }
}

// Address range: 0x180011770 - 0x180011d3b
int64_t function_180011770(int64_t a1, uint32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180011791
    *v1 = a2;
    if (a1 == 0) {
        // 0x180011d06
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v2 = a2 + 4; // 0x18001179d
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x1800117a0
    if (*v3 < v2) {
        // 0x180011d06
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v4 = (int64_t)a3;
    *v1 = v2;
    int32_t * v5 = (int32_t *)(a1 + 16); // 0x1800117af
    int32_t v6 = *(int32_t *)((int64_t)a2 + a1); // 0x1800117b3
    uint32_t v7 = *v5 == 0 ? v6 : llvm_bswap_i32(v6);
    int64_t v8; // bp-344, 0x180011770
    function_180005050(a1, (int64_t)v7, &v8);
    uint32_t v9 = *v1; // 0x1800117ce
    int64_t v10 = 0; // 0x1800117ce
    v9 += 4;
    int64_t v11; // 0x180011770
    int64_t v12; // 0x180011770
    while (v9 <= *v3) {
        // 0x1800117e8
        *v1 = v9;
        int64_t v13 = v10 + 1; // 0x1800117ec
        v10 = v13 & 0xffffffff;
        if ((int32_t)v13 >= 6) {
            // 0x1800117f6
            v12 = v9;
            v11 = 0;
            goto lab_0x180011820;
        }
        v9 += 4;
    }
  lab_0x180011d06:
    // 0x180011d06
    __security_check_cookie(g17);
    return &g47;
  lab_0x180011820:;
    int64_t v14 = v12 + 4; // 0x180011820
    uint32_t v15 = (int32_t)v14;
    if (*v3 < v15) {
        goto lab_0x180011d06;
    } else {
        int64_t v16 = v14 & 0xffffffff;
        int64_t v17 = v11 + 1 & 0xffffffff; // 0x18001182c
        *v1 = v15;
        v12 = v16;
        v11 = v17;
        if (v17 < (*(int32_t *)&g31 == 884 ? 20 : 22)) {
            goto lab_0x180011820;
        } else {
            uint32_t v18 = *v3; // 0x180011840
            uint32_t v19 = v15 + 4; // 0x180011847
            if (v18 < v19) {
                goto lab_0x180011d06;
            } else {
                // 0x180011850
                *v1 = v19;
                uint32_t v20 = v15 + 8; // 0x180011873
                if (v20 > v18) {
                    goto lab_0x180011d06;
                } else {
                    int32_t v21 = *v5; // 0x180011858
                    int32_t v22 = *(int32_t *)(v16 + a1); // 0x180011860
                    *v1 = v20;
                    uint32_t v23 = v15 + 12;
                    if (v23 > v18) {
                        goto lab_0x180011d06;
                    } else {
                        int32_t v24 = *(int32_t *)((int64_t)v19 + a1); // 0x180011899
                        *v1 = v23;
                        uint32_t v25 = v15 + 16; // 0x1800118b9
                        if (v25 > v18) {
                            goto lab_0x180011d06;
                        } else {
                            // 0x1800118c5
                            *v1 = v25;
                            uint32_t v26 = v15 + 20;
                            if (v26 > v18) {
                                goto lab_0x180011d06;
                            } else {
                                // 0x1800118d7
                                *v1 = v26;
                                uint32_t v27 = v15 + 24; // 0x1800118f6
                                if (v27 > v18) {
                                    goto lab_0x180011d06;
                                } else {
                                    int32_t v28 = *(int32_t *)((int64_t)v25 + a1); // 0x1800118e3
                                    *v1 = v27;
                                    uint32_t v29 = v15 + 28;
                                    if (v29 > v18) {
                                        goto lab_0x180011d06;
                                    } else {
                                        int32_t v30 = *(int32_t *)((int64_t)v26 + a1); // 0x18001191c
                                        *v1 = v29;
                                        uint32_t v31 = v15 + 32; // 0x180011954
                                        if (v31 > v18) {
                                            goto lab_0x180011d06;
                                        } else {
                                            int32_t v32 = *(int32_t *)((int64_t)v27 + a1); // 0x180011941
                                            *v1 = v31;
                                            uint32_t v33 = v15 + 36;
                                            if (v33 > v18) {
                                                goto lab_0x180011d06;
                                            } else {
                                                int32_t v34 = *(int32_t *)((int64_t)v29 + a1); // 0x18001197a
                                                *v1 = v33;
                                                uint32_t v35 = v15 + 40; // 0x18001199a
                                                if (v35 > v18) {
                                                    goto lab_0x180011d06;
                                                } else {
                                                    // 0x1800119a6
                                                    *v1 = v35;
                                                    uint32_t v36 = v15 + 44;
                                                    if (v36 > v18) {
                                                        goto lab_0x180011d06;
                                                    } else {
                                                        // 0x1800119b8
                                                        *v1 = v36;
                                                        uint32_t v37 = v15 + 48; // 0x1800119bf
                                                        if (v37 > v18) {
                                                            goto lab_0x180011d06;
                                                        } else {
                                                            // 0x1800119cb
                                                            *v1 = v37;
                                                            uint32_t v38 = v15 + 52;
                                                            if (v38 > v18) {
                                                                goto lab_0x180011d06;
                                                            } else {
                                                                // 0x1800119dd
                                                                *v1 = v38;
                                                                uint32_t v39 = v15 + 56; // 0x1800119e4
                                                                if (v39 > v18) {
                                                                    goto lab_0x180011d06;
                                                                } else {
                                                                    // 0x1800119f0
                                                                    *v1 = v39;
                                                                    uint32_t v40 = v15 + 60;
                                                                    if (v40 > v18) {
                                                                        goto lab_0x180011d06;
                                                                    } else {
                                                                        // 0x180011a02
                                                                        *v1 = v40;
                                                                        uint32_t v41 = v15 + 64; // 0x180011a09
                                                                        if (v41 > v18) {
                                                                            goto lab_0x180011d06;
                                                                        } else {
                                                                            // 0x180011a15
                                                                            *v1 = v41;
                                                                            uint32_t v42 = v15 + 68;
                                                                            if (v42 > v18) {
                                                                                goto lab_0x180011d06;
                                                                            } else {
                                                                                // 0x180011a27
                                                                                *v1 = v42;
                                                                                uint32_t v43 = v15 + 72; // 0x180011a46
                                                                                if (v43 > v18) {
                                                                                    goto lab_0x180011d06;
                                                                                } else {
                                                                                    int32_t v44 = *(int32_t *)((int64_t)v41 + a1); // 0x180011a33
                                                                                    *v1 = v43;
                                                                                    uint32_t v45 = v15 + 76;
                                                                                    if (v45 > v18) {
                                                                                        goto lab_0x180011d06;
                                                                                    } else {
                                                                                        int32_t v46 = *(int32_t *)((int64_t)v42 + a1); // 0x180011a6c
                                                                                        *v1 = v45;
                                                                                        uint32_t v47 = v15 + 80; // 0x180011a8b
                                                                                        if (v47 > v18) {
                                                                                            goto lab_0x180011d06;
                                                                                        } else {
                                                                                            // 0x180011a97
                                                                                            *v1 = v47;
                                                                                            uint32_t v48 = v15 + 84;
                                                                                            if (v48 > v18) {
                                                                                                goto lab_0x180011d06;
                                                                                            } else {
                                                                                                // 0x180011aa9
                                                                                                *v1 = v48;
                                                                                                uint32_t v49 = v15 + 88; // 0x180011ab0
                                                                                                if (v49 > v18) {
                                                                                                    goto lab_0x180011d06;
                                                                                                } else {
                                                                                                    // 0x180011abc
                                                                                                    *v1 = v49;
                                                                                                    uint32_t v50 = v15 + 92;
                                                                                                    if (v50 > v18) {
                                                                                                        goto lab_0x180011d06;
                                                                                                    } else {
                                                                                                        // 0x180011ace
                                                                                                        *v1 = v50;
                                                                                                        uint32_t v51 = v15 + 96; // 0x180011ad5
                                                                                                        if (v51 > v18) {
                                                                                                            goto lab_0x180011d06;
                                                                                                        } else {
                                                                                                            // 0x180011ae1
                                                                                                            *v1 = v51;
                                                                                                            uint32_t v52 = v15 + 100;
                                                                                                            if (v52 > v18) {
                                                                                                                goto lab_0x180011d06;
                                                                                                            } else {
                                                                                                                // 0x180011af3
                                                                                                                *v1 = v52;
                                                                                                                uint32_t v53 = v15 + 104; // 0x180011b12
                                                                                                                if (v53 > v18) {
                                                                                                                    goto lab_0x180011d06;
                                                                                                                } else {
                                                                                                                    int32_t v54 = *(int32_t *)((int64_t)v51 + a1); // 0x180011aff
                                                                                                                    *v1 = v53;
                                                                                                                    uint32_t v55 = v15 + 108;
                                                                                                                    if (v55 > v18) {
                                                                                                                        goto lab_0x180011d06;
                                                                                                                    } else {
                                                                                                                        int32_t v56 = *(int32_t *)((int64_t)v52 + a1); // 0x180011b38
                                                                                                                        *v1 = v55;
                                                                                                                        uint32_t v57 = v15 + 112; // 0x180011b57
                                                                                                                        if (v57 > v18) {
                                                                                                                            goto lab_0x180011d06;
                                                                                                                        } else {
                                                                                                                            // 0x180011b63
                                                                                                                            *v1 = v57;
                                                                                                                            uint32_t v58 = v15 + 116;
                                                                                                                            if (v58 > v18) {
                                                                                                                                goto lab_0x180011d06;
                                                                                                                            } else {
                                                                                                                                // 0x180011b75
                                                                                                                                *v1 = v58;
                                                                                                                                uint32_t v59 = v15 + 120; // 0x180011b7c
                                                                                                                                if (v59 > v18) {
                                                                                                                                    goto lab_0x180011d06;
                                                                                                                                } else {
                                                                                                                                    // 0x180011b88
                                                                                                                                    *v1 = v59;
                                                                                                                                    uint32_t v60 = v15 + 124;
                                                                                                                                    if (v60 > v18) {
                                                                                                                                        goto lab_0x180011d06;
                                                                                                                                    } else {
                                                                                                                                        // 0x180011b9a
                                                                                                                                        *v1 = v60;
                                                                                                                                        uint32_t v61 = v15 + 128; // 0x180011bc0
                                                                                                                                        if (v61 > v18) {
                                                                                                                                            goto lab_0x180011d06;
                                                                                                                                        } else {
                                                                                                                                            int32_t v62 = *(int32_t *)((int64_t)v59 + a1); // 0x180011bb4
                                                                                                                                            *v1 = v61;
                                                                                                                                            uint32_t v63 = v15 + 132;
                                                                                                                                            if (v63 > v18) {
                                                                                                                                                goto lab_0x180011d06;
                                                                                                                                            } else {
                                                                                                                                                int32_t v64 = *(int32_t *)((int64_t)v60 + a1); // 0x180011bd9
                                                                                                                                                *v1 = v63;
                                                                                                                                                uint32_t v65 = v15 + 136; // 0x180011bf8
                                                                                                                                                if (v65 > v18) {
                                                                                                                                                    goto lab_0x180011d06;
                                                                                                                                                } else {
                                                                                                                                                    // 0x180011c04
                                                                                                                                                    *v1 = v65;
                                                                                                                                                    uint32_t v66 = v15 + 140;
                                                                                                                                                    if (v66 > v18) {
                                                                                                                                                        goto lab_0x180011d06;
                                                                                                                                                    } else {
                                                                                                                                                        // 0x180011c16
                                                                                                                                                        *v1 = v66;
                                                                                                                                                        uint32_t v67 = v15 + 144; // 0x180011c1d
                                                                                                                                                        if (v67 > v18) {
                                                                                                                                                            goto lab_0x180011d06;
                                                                                                                                                        } else {
                                                                                                                                                            // 0x180011c29
                                                                                                                                                            *v1 = v67;
                                                                                                                                                            uint32_t v68 = v15 + 148;
                                                                                                                                                            if (v68 > v18) {
                                                                                                                                                                goto lab_0x180011d06;
                                                                                                                                                            } else {
                                                                                                                                                                // 0x180011c3b
                                                                                                                                                                *v1 = v68;
                                                                                                                                                                uint32_t v69 = v15 + 152; // 0x180011c42
                                                                                                                                                                if (v69 > v18) {
                                                                                                                                                                    goto lab_0x180011d06;
                                                                                                                                                                } else {
                                                                                                                                                                    int32_t v70 = v21 == 0 ? v22 : llvm_bswap_i32(v22);
                                                                                                                                                                    int32_t v71 = v21 == 0 ? v24 : llvm_bswap_i32(v24);
                                                                                                                                                                    int32_t v72 = v21 == 0 ? v28 : llvm_bswap_i32(v28);
                                                                                                                                                                    int32_t v73 = v21 == 0 ? v30 : llvm_bswap_i32(v30);
                                                                                                                                                                    int32_t v74 = v21 == 0 ? v32 : llvm_bswap_i32(v32);
                                                                                                                                                                    int32_t v75 = v21 == 0 ? v34 : llvm_bswap_i32(v34);
                                                                                                                                                                    int32_t v76 = v21 == 0 ? v44 : llvm_bswap_i32(v44);
                                                                                                                                                                    int32_t v77 = v21 == 0 ? v46 : llvm_bswap_i32(v46);
                                                                                                                                                                    int32_t v78 = v21 == 0 ? v54 : llvm_bswap_i32(v54);
                                                                                                                                                                    int32_t v79 = v21 == 0 ? v56 : llvm_bswap_i32(v56);
                                                                                                                                                                    int32_t v80 = v21 == 0 ? v62 : llvm_bswap_i32(v62);
                                                                                                                                                                    int32_t v81 = v21 == 0 ? v64 : llvm_bswap_i32(v64);
                                                                                                                                                                    *v1 = v69;
                                                                                                                                                                    *(int32_t *)(v4 + 24) = v70;
                                                                                                                                                                    *(int32_t *)(v4 + 40) = v72;
                                                                                                                                                                    *(int32_t *)(v4 + 48) = v74;
                                                                                                                                                                    *(int32_t *)(v4 + 56) = v78;
                                                                                                                                                                    *(int32_t *)(v4 + 64) = v76;
                                                                                                                                                                    *(int32_t *)(v4 + 28) = v71 == 0 ? 0 : v71 + v19;
                                                                                                                                                                    *(int32_t *)(v4 + 44) = v73 == 0 ? 0 : v73 + v26;
                                                                                                                                                                    *(int32_t *)(v4 + 52) = v75 == 0 ? 0 : v75 + v29;
                                                                                                                                                                    *(int32_t *)(v4 + 60) = v79 == 0 ? 0 : v79 + v52;
                                                                                                                                                                    *(int32_t *)(v4 + 68) = v77 == 0 ? 0 : v77 + v42;
                                                                                                                                                                    *(int32_t *)(v4 + 72) = v80;
                                                                                                                                                                    *(int32_t *)(v4 + 76) = v81 == 0 ? 0 : v81 + v60;
                                                                                                                                                                    goto lab_0x180011d06;
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x180011d40 - 0x1800122f1
int64_t function_180011d40(int64_t a1, uint32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180011d61
    *v1 = a2;
    if (a1 == 0) {
        // 0x1800122bc
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v2 = a2 + 4; // 0x180011d6d
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x180011d70
    if (*v3 < v2) {
        // 0x1800122bc
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v4 = (int64_t)a3;
    *v1 = v2;
    int32_t * v5 = (int32_t *)(a1 + 16); // 0x180011d7f
    int32_t v6 = *(int32_t *)((int64_t)a2 + a1); // 0x180011d83
    uint32_t v7 = *v5 == 0 ? v6 : llvm_bswap_i32(v6);
    int64_t v8; // bp-344, 0x180011d40
    function_180005050(a1, (int64_t)v7, &v8);
    uint32_t v9 = *v1; // 0x180011d9e
    int64_t v10 = 0; // 0x180011d9e
    v9 += 4;
    int64_t v11; // 0x180011d40
    int64_t v12; // 0x180011d40
    uint32_t v13; // 0x180011dc6
    while (v9 <= *v3) {
        // 0x180011db8
        *v1 = v9;
        int64_t v14 = v10 + 1; // 0x180011dbc
        v10 = v14 & 0xffffffff;
        if ((int32_t)v14 >= 6) {
            // 0x180011dc6
            v13 = *v3;
            v12 = v9;
            v11 = 0;
            goto lab_0x180011dd9;
        }
        v9 += 4;
    }
  lab_0x1800122bc:
    // 0x1800122bc
    __security_check_cookie(g17);
    return &g47;
  lab_0x180011dd9:;
    int64_t v15 = v12 + 4; // 0x180011dd9
    uint32_t v16 = (int32_t)v15;
    if (v13 < v16) {
        goto lab_0x1800122bc;
    } else {
        int64_t v17 = v15 & 0xffffffff;
        int64_t v18 = v11 + 1; // 0x180011de5
        *v1 = v16;
        v12 = v17;
        v11 = v18 & 0xffffffff;
        if ((int32_t)v18 < 22) {
            goto lab_0x180011dd9;
        } else {
            uint32_t v19 = v16 + 4; // 0x180011dfd
            if (v19 > v13) {
                goto lab_0x1800122bc;
            } else {
                // 0x180011e06
                *v1 = v19;
                uint32_t v20 = v16 + 8; // 0x180011e29
                if (v20 > v13) {
                    goto lab_0x1800122bc;
                } else {
                    int32_t v21 = *v5; // 0x180011e0e
                    int32_t v22 = *(int32_t *)(v17 + a1); // 0x180011e16
                    *v1 = v20;
                    uint32_t v23 = v16 + 12;
                    if (v23 > v13) {
                        goto lab_0x1800122bc;
                    } else {
                        int32_t v24 = *(int32_t *)((int64_t)v19 + a1); // 0x180011e4f
                        *v1 = v23;
                        uint32_t v25 = v16 + 16; // 0x180011e6f
                        if (v25 > v13) {
                            goto lab_0x1800122bc;
                        } else {
                            // 0x180011e7b
                            *v1 = v25;
                            uint32_t v26 = v16 + 20;
                            if (v26 > v13) {
                                goto lab_0x1800122bc;
                            } else {
                                // 0x180011e8d
                                *v1 = v26;
                                uint32_t v27 = v16 + 24; // 0x180011eac
                                if (v27 > v13) {
                                    goto lab_0x1800122bc;
                                } else {
                                    int32_t v28 = *(int32_t *)((int64_t)v25 + a1); // 0x180011e99
                                    *v1 = v27;
                                    uint32_t v29 = v16 + 28;
                                    if (v29 > v13) {
                                        goto lab_0x1800122bc;
                                    } else {
                                        int32_t v30 = *(int32_t *)((int64_t)v26 + a1); // 0x180011ed2
                                        *v1 = v29;
                                        uint32_t v31 = v16 + 32; // 0x180011f0a
                                        if (v31 > v13) {
                                            goto lab_0x1800122bc;
                                        } else {
                                            int32_t v32 = *(int32_t *)((int64_t)v27 + a1); // 0x180011ef7
                                            *v1 = v31;
                                            uint32_t v33 = v16 + 36;
                                            if (v33 > v13) {
                                                goto lab_0x1800122bc;
                                            } else {
                                                int32_t v34 = *(int32_t *)((int64_t)v29 + a1); // 0x180011f30
                                                *v1 = v33;
                                                uint32_t v35 = v16 + 40; // 0x180011f50
                                                if (v35 > v13) {
                                                    goto lab_0x1800122bc;
                                                } else {
                                                    // 0x180011f5c
                                                    *v1 = v35;
                                                    uint32_t v36 = v16 + 44;
                                                    if (v36 > v13) {
                                                        goto lab_0x1800122bc;
                                                    } else {
                                                        // 0x180011f6e
                                                        *v1 = v36;
                                                        uint32_t v37 = v16 + 48; // 0x180011f75
                                                        if (v37 > v13) {
                                                            goto lab_0x1800122bc;
                                                        } else {
                                                            // 0x180011f81
                                                            *v1 = v37;
                                                            uint32_t v38 = v16 + 52;
                                                            if (v38 > v13) {
                                                                goto lab_0x1800122bc;
                                                            } else {
                                                                // 0x180011f93
                                                                *v1 = v38;
                                                                uint32_t v39 = v16 + 56; // 0x180011f9a
                                                                if (v39 > v13) {
                                                                    goto lab_0x1800122bc;
                                                                } else {
                                                                    // 0x180011fa6
                                                                    *v1 = v39;
                                                                    uint32_t v40 = v16 + 60;
                                                                    if (v40 > v13) {
                                                                        goto lab_0x1800122bc;
                                                                    } else {
                                                                        // 0x180011fb8
                                                                        *v1 = v40;
                                                                        uint32_t v41 = v16 + 64; // 0x180011fbf
                                                                        if (v41 > v13) {
                                                                            goto lab_0x1800122bc;
                                                                        } else {
                                                                            // 0x180011fcb
                                                                            *v1 = v41;
                                                                            uint32_t v42 = v16 + 68;
                                                                            if (v42 > v13) {
                                                                                goto lab_0x1800122bc;
                                                                            } else {
                                                                                // 0x180011fdd
                                                                                *v1 = v42;
                                                                                uint32_t v43 = v16 + 72; // 0x180011ffc
                                                                                if (v43 > v13) {
                                                                                    goto lab_0x1800122bc;
                                                                                } else {
                                                                                    int32_t v44 = *(int32_t *)((int64_t)v41 + a1); // 0x180011fe9
                                                                                    *v1 = v43;
                                                                                    uint32_t v45 = v16 + 76;
                                                                                    if (v45 > v13) {
                                                                                        goto lab_0x1800122bc;
                                                                                    } else {
                                                                                        int32_t v46 = *(int32_t *)((int64_t)v42 + a1); // 0x180012022
                                                                                        *v1 = v45;
                                                                                        uint32_t v47 = v16 + 80; // 0x180012041
                                                                                        if (v47 > v13) {
                                                                                            goto lab_0x1800122bc;
                                                                                        } else {
                                                                                            // 0x18001204d
                                                                                            *v1 = v47;
                                                                                            uint32_t v48 = v16 + 84;
                                                                                            if (v48 > v13) {
                                                                                                goto lab_0x1800122bc;
                                                                                            } else {
                                                                                                // 0x18001205f
                                                                                                *v1 = v48;
                                                                                                uint32_t v49 = v16 + 88; // 0x180012066
                                                                                                if (v49 > v13) {
                                                                                                    goto lab_0x1800122bc;
                                                                                                } else {
                                                                                                    // 0x180012072
                                                                                                    *v1 = v49;
                                                                                                    uint32_t v50 = v16 + 92;
                                                                                                    if (v50 > v13) {
                                                                                                        goto lab_0x1800122bc;
                                                                                                    } else {
                                                                                                        // 0x180012084
                                                                                                        *v1 = v50;
                                                                                                        uint32_t v51 = v16 + 96; // 0x18001208b
                                                                                                        if (v51 > v13) {
                                                                                                            goto lab_0x1800122bc;
                                                                                                        } else {
                                                                                                            // 0x180012097
                                                                                                            *v1 = v51;
                                                                                                            uint32_t v52 = v16 + 100;
                                                                                                            if (v52 > v13) {
                                                                                                                goto lab_0x1800122bc;
                                                                                                            } else {
                                                                                                                // 0x1800120a9
                                                                                                                *v1 = v52;
                                                                                                                uint32_t v53 = v16 + 104; // 0x1800120c8
                                                                                                                if (v53 > v13) {
                                                                                                                    goto lab_0x1800122bc;
                                                                                                                } else {
                                                                                                                    int32_t v54 = *(int32_t *)((int64_t)v51 + a1); // 0x1800120b5
                                                                                                                    *v1 = v53;
                                                                                                                    uint32_t v55 = v16 + 108;
                                                                                                                    if (v55 > v13) {
                                                                                                                        goto lab_0x1800122bc;
                                                                                                                    } else {
                                                                                                                        int32_t v56 = *(int32_t *)((int64_t)v52 + a1); // 0x1800120ee
                                                                                                                        *v1 = v55;
                                                                                                                        uint32_t v57 = v16 + 112; // 0x18001210d
                                                                                                                        if (v57 > v13) {
                                                                                                                            goto lab_0x1800122bc;
                                                                                                                        } else {
                                                                                                                            // 0x180012119
                                                                                                                            *v1 = v57;
                                                                                                                            uint32_t v58 = v16 + 116;
                                                                                                                            if (v58 > v13) {
                                                                                                                                goto lab_0x1800122bc;
                                                                                                                            } else {
                                                                                                                                // 0x18001212b
                                                                                                                                *v1 = v58;
                                                                                                                                uint32_t v59 = v16 + 120; // 0x180012132
                                                                                                                                if (v59 > v13) {
                                                                                                                                    goto lab_0x1800122bc;
                                                                                                                                } else {
                                                                                                                                    // 0x18001213e
                                                                                                                                    *v1 = v59;
                                                                                                                                    uint32_t v60 = v16 + 124;
                                                                                                                                    if (v60 > v13) {
                                                                                                                                        goto lab_0x1800122bc;
                                                                                                                                    } else {
                                                                                                                                        // 0x180012150
                                                                                                                                        *v1 = v60;
                                                                                                                                        uint32_t v61 = v16 + 128; // 0x180012176
                                                                                                                                        if (v61 > v13) {
                                                                                                                                            goto lab_0x1800122bc;
                                                                                                                                        } else {
                                                                                                                                            int32_t v62 = *(int32_t *)((int64_t)v59 + a1); // 0x18001216a
                                                                                                                                            *v1 = v61;
                                                                                                                                            uint32_t v63 = v16 + 132;
                                                                                                                                            if (v63 > v13) {
                                                                                                                                                goto lab_0x1800122bc;
                                                                                                                                            } else {
                                                                                                                                                int32_t v64 = *(int32_t *)((int64_t)v60 + a1); // 0x18001218f
                                                                                                                                                *v1 = v63;
                                                                                                                                                uint32_t v65 = v16 + 136; // 0x1800121ae
                                                                                                                                                if (v65 > v13) {
                                                                                                                                                    goto lab_0x1800122bc;
                                                                                                                                                } else {
                                                                                                                                                    // 0x1800121ba
                                                                                                                                                    *v1 = v65;
                                                                                                                                                    uint32_t v66 = v16 + 140;
                                                                                                                                                    if (v66 > v13) {
                                                                                                                                                        goto lab_0x1800122bc;
                                                                                                                                                    } else {
                                                                                                                                                        // 0x1800121cc
                                                                                                                                                        *v1 = v66;
                                                                                                                                                        uint32_t v67 = v16 + 144; // 0x1800121d3
                                                                                                                                                        if (v67 > v13) {
                                                                                                                                                            goto lab_0x1800122bc;
                                                                                                                                                        } else {
                                                                                                                                                            // 0x1800121df
                                                                                                                                                            *v1 = v67;
                                                                                                                                                            uint32_t v68 = v16 + 148;
                                                                                                                                                            if (v68 > v13) {
                                                                                                                                                                goto lab_0x1800122bc;
                                                                                                                                                            } else {
                                                                                                                                                                // 0x1800121f1
                                                                                                                                                                *v1 = v68;
                                                                                                                                                                uint32_t v69 = v16 + 152; // 0x1800121f8
                                                                                                                                                                if (v69 > v13) {
                                                                                                                                                                    goto lab_0x1800122bc;
                                                                                                                                                                } else {
                                                                                                                                                                    int32_t v70 = v21 == 0 ? v22 : llvm_bswap_i32(v22);
                                                                                                                                                                    int32_t v71 = v21 == 0 ? v24 : llvm_bswap_i32(v24);
                                                                                                                                                                    int32_t v72 = v21 == 0 ? v28 : llvm_bswap_i32(v28);
                                                                                                                                                                    int32_t v73 = v21 == 0 ? v30 : llvm_bswap_i32(v30);
                                                                                                                                                                    int32_t v74 = v21 == 0 ? v32 : llvm_bswap_i32(v32);
                                                                                                                                                                    int32_t v75 = v21 == 0 ? v34 : llvm_bswap_i32(v34);
                                                                                                                                                                    int32_t v76 = v21 == 0 ? v44 : llvm_bswap_i32(v44);
                                                                                                                                                                    int32_t v77 = v21 == 0 ? v46 : llvm_bswap_i32(v46);
                                                                                                                                                                    int32_t v78 = v21 == 0 ? v54 : llvm_bswap_i32(v54);
                                                                                                                                                                    int32_t v79 = v21 == 0 ? v56 : llvm_bswap_i32(v56);
                                                                                                                                                                    int32_t v80 = v21 == 0 ? v62 : llvm_bswap_i32(v62);
                                                                                                                                                                    int32_t v81 = v21 == 0 ? v64 : llvm_bswap_i32(v64);
                                                                                                                                                                    *v1 = v69;
                                                                                                                                                                    *(int32_t *)(v4 + 24) = v70;
                                                                                                                                                                    *(int32_t *)(v4 + 40) = v72;
                                                                                                                                                                    *(int32_t *)(v4 + 48) = v74;
                                                                                                                                                                    *(int32_t *)(v4 + 56) = v78;
                                                                                                                                                                    *(int32_t *)(v4 + 64) = v76;
                                                                                                                                                                    *(int32_t *)(v4 + 28) = v71 == 0 ? 0 : v71 + v19;
                                                                                                                                                                    *(int32_t *)(v4 + 44) = v73 == 0 ? 0 : v73 + v26;
                                                                                                                                                                    *(int32_t *)(v4 + 52) = v75 == 0 ? 0 : v75 + v29;
                                                                                                                                                                    *(int32_t *)(v4 + 60) = v79 == 0 ? 0 : v79 + v52;
                                                                                                                                                                    *(int32_t *)(v4 + 68) = v77 == 0 ? 0 : v77 + v42;
                                                                                                                                                                    *(int32_t *)(v4 + 72) = v80;
                                                                                                                                                                    *(int32_t *)(v4 + 76) = v81 == 0 ? 0 : v81 + v60;
                                                                                                                                                                    goto lab_0x1800122bc;
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x180012300 - 0x180012631
int64_t function_180012300(int64_t a1, int64_t a2, int32_t a3) {
    // 0x180012300
    if (a3 == 0) {
        // 0x180012612
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180012331
    *v1 = a3;
    uint32_t v2 = (int32_t)a2; // 0x180012335
    if (v2 == 0 || (int32_t)function_180001b50(&g31, a2) == 0) {
        // 0x180012612
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v3 = *v1; // 0x180012360
    int64_t v4; // bp-328, 0x180012300
    int64_t v5 = &v4;
    int32_t * v6 = (int32_t *)(a1 + 12);
    int32_t * v7 = (int32_t *)(a1 + 16);
    int64_t v8 = 0; // 0x180012300
    int64_t v9; // bp-600, 0x180012300
    memset(&v9, 0, 260);
    memset(&v4, 0, 260);
    uint32_t v10 = *v1; // 0x1800123b3
    uint32_t v11 = *v6; // 0x1800123b6
    uint32_t v12 = v10 + 4; // 0x1800123ba
    int64_t v13; // 0x180012300
    int64_t v14; // 0x180012300
    int32_t v15; // 0x180012300
    while (v12 <= v11) {
        int64_t v16 = v8;
        *v1 = v12;
        uint32_t v17 = v10 + 8; // 0x1800123e1
        if (v17 > v11) {
            // break -> 0x180012612
            break;
        }
        int32_t v18 = *v7; // 0x1800123ce
        int32_t v19 = *(int32_t *)((int64_t)v10 + v5); // 0x1800123d6
        *v1 = v17;
        uint32_t v20 = v10 + 12; // 0x180012406
        if (v20 > v11) {
            // break -> 0x180012612
            break;
        }
        int32_t v21 = *(int32_t *)((int64_t)v12 + v5); // 0x1800123fa
        *v1 = v20;
        uint32_t v22 = v10 + 16; // 0x18001241a
        if (v22 > v11) {
            // break -> 0x180012612
            break;
        }
        uint32_t v23 = v18 == 0 ? v19 : llvm_bswap_i32(v19);
        uint32_t v24 = v18 == 0 ? v21 : llvm_bswap_i32(v21);
        *v1 = v22;
        function_180005050(a1, (int64_t)v23, &v9);
        function_180005050(a1, (int64_t)v24, &v4);
        int64_t v25 = a1; // 0x180012451
        if (g38 != NULL) {
            int64_t v26 = 760 * (0x100000000 * v16 >> 32);
            int64_t v27 = &v9; // 0x18001246c
            int64_t v28 = v26 + 232 + (int64_t)g38; // 0x18001246c
            char v29 = *(char *)v27; // 0x180012470
            *(char *)v28 = v29;
            v27++;
            v28++;
            while (v29 != 0) {
                // 0x180012470
                v29 = *(char *)v27;
                *(char *)v28 = v29;
                v27++;
                v28++;
            }
            int64_t v30 = v5; // 0x18001249a
            int64_t v31 = v26 + 492 + (int64_t)g38; // 0x18001249a
            char v32 = *(char *)v30; // 0x1800124a0
            v30++;
            *(char *)v31 = v32;
            v31++;
            v25 = v30;
            while (v32 != 0) {
                // 0x1800124a0
                v32 = *(char *)v30;
                v30++;
                *(char *)v31 = v32;
                v31++;
                v25 = v30;
            }
        }
        int64_t v33 = v16 + 1; // 0x1800124b1
        v8 = v33 & 0xffffffff;
        if ((int32_t)v33 >= v2) {
            // 0x1800124d0
            *v1 = v3;
            v14 = v25;
            v13 = 0;
            v15 = v3;
            goto lab_0x1800124d0_2;
        }
        memset(&v9, 0, 260);
        memset(&v4, 0, 260);
        v10 = *v1;
        v11 = *v6;
        v12 = v10 + 4;
    }
  lab_0x180012612:
    // 0x180012612
    __security_check_cookie(g17);
    return &g47;
  lab_0x1800124d0_2:;
    // 0x1800124d0
    int64_t v34; // 0x180012300
    int32_t v35; // 0x180012594
    if (v14 == 0) {
        goto lab_0x180012612;
    } else {
        uint32_t v36 = *v6; // 0x1800124ed
        uint32_t v37 = v15 + 4; // 0x1800124f1
        if (v36 < v37) {
            goto lab_0x180012612;
        } else {
            int32_t v38 = *v7; // 0x1800124fd
            *v1 = v37;
            uint32_t v39 = v15 + 8; // 0x180012516
            if (v39 > v36) {
                goto lab_0x180012612;
            } else {
                int32_t v40 = *(int32_t *)(v14 + (int64_t)v15); // 0x180012507
                *v1 = v39;
                uint32_t v41 = v15 + 12; // 0x180012534
                if (v41 > v36) {
                    goto lab_0x180012612;
                } else {
                    int32_t v42 = *(int32_t *)(v14 + (int64_t)v37); // 0x180012529
                    *v1 = v41;
                    uint32_t v43 = v15 + 16; // 0x180012548
                    if (v43 > v36) {
                        goto lab_0x180012612;
                    } else {
                        int64_t v44 = 760 * (0x100000000 * v13 >> 32) + (int64_t)g38; // 0x1800124dd
                        uint32_t v45 = v38 == 0 ? v40 : llvm_bswap_i32(v40);
                        uint32_t v46 = v38 == 0 ? v42 : llvm_bswap_i32(v42);
                        *v1 = v43;
                        int32_t v47 = *(int32_t *)(v14 + (int64_t)v41); // 0x18001255f
                        function_180005050(a1, (int64_t)v45, &v4);
                        function_180005050(a1, (int64_t)v46, &v9);
                        uint32_t v48 = *(int32_t *)&g31; // 0x18001258a
                        v35 = *v1;
                        if (v48 != 868) {
                            int64_t v49 = function_180012dd0(a1, v44); // 0x1800125d6
                            v34 = a1;
                            if ((int32_t)v49 == 0) {
                                goto lab_0x180012612;
                            } else {
                                goto lab_0x1800125df;
                            }
                        } else {
                            if (v44 == 0) {
                                goto lab_0x180012612;
                            } else {
                                int32_t v50 = v38 == 0 ? v47 : llvm_bswap_i32(v47);
                                int32_t v51 = (v50 == 0 ? 0 : v41) + v50;
                                v34 = v48;
                                if (v51 == 0) {
                                    goto lab_0x1800125df;
                                } else {
                                    // 0x1800125b3
                                    *v1 = v51;
                                    function_180012ed0(a1, v44);
                                    v34 = a1;
                                    goto lab_0x1800125df;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x1800125df:;
    int64_t v52 = v13 + 1; // 0x1800125df
    *v1 = v35;
    v14 = v34;
    v13 = v52 & 0xffffffff;
    v15 = v35;
    if ((int32_t)v52 < v2) {
        goto lab_0x1800124d0_2;
    } else {
        goto lab_0x180012612;
    }
}

// Address range: 0x180012640 - 0x180012b53
int64_t function_180012640(int64_t a1, int64_t a2, int32_t a3) {
    uint32_t v1 = (int32_t)a2; // 0x18001267b
    if (a3 == 0 || v1 == 0) {
        // 0x180012b36
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x180012680
    *v2 = a3;
    if ((int32_t)function_1800020d0(&g31, a2) == 0) {
        // 0x180012b36
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800126d0
    int64_t v3; // bp-1160, 0x180012640
    int64_t v4 = &v3; // 0x1800126d2
    int32_t * v5 = (int32_t *)(a1 + 12);
    int32_t * v6 = (int32_t *)(a1 + 16);
    int64_t v7 = 0; // 0x180012640
    int32_t v8; // 0x180012640
    int64_t v9; // 0x180012640
    int64_t v10; // bp-344, 0x180012640
    int64_t v11; // bp-616, 0x180012640
    int64_t v12; // bp-888, 0x180012640
    uint32_t v13; // 0x1800127f3
    while (true) {
      lab_0x1800126d0:
        // 0x1800126d0
        memset(&v3, 0, 260);
        uint32_t v14 = *v2; // 0x1800126ee
        uint32_t v15 = *v5; // 0x1800126f1
        uint32_t v16 = v14 + 4; // 0x1800126f5
        if (v16 > v15) {
            // break -> 0x180012b36
            break;
        }
        // 0x180012701
        v9 = v7;
        *v2 = v16;
        uint32_t v17 = v14 + 8; // 0x18001271d
        if (v17 > v15) {
            // break -> 0x180012b36
            break;
        }
        int32_t v18 = *v6; // 0x180012709
        int32_t v19 = *(int32_t *)((int64_t)v14 + v4); // 0x180012711
        *v2 = v17;
        uint32_t v20 = v14 + 12; // 0x180012740
        if (v20 > v15) {
            // break -> 0x180012b36
            break;
        }
        int32_t v21 = *(int32_t *)((int64_t)v16 + v4); // 0x180012736
        *v2 = v20;
        uint32_t v22 = v14 + 16; // 0x180012763
        if (v22 > v15) {
            // break -> 0x180012b36
            break;
        }
        int32_t v23 = *(int32_t *)((int64_t)v17 + v4); // 0x180012759
        *v2 = v22;
        uint32_t v24 = v14 + 20; // 0x180012786
        if (v24 > v15) {
            // break -> 0x180012b36
            break;
        }
        int32_t v25 = *(int32_t *)((int64_t)v20 + v4); // 0x18001277a
        *v2 = v24;
        uint32_t v26 = v14 + 24; // 0x180012799
        if (v26 > v15) {
            // break -> 0x180012b36
            break;
        }
        uint32_t v27 = v18 == 0 ? v19 : llvm_bswap_i32(v19);
        uint32_t v28 = v18 == 0 ? v21 : llvm_bswap_i32(v21);
        uint32_t v29 = v18 == 0 ? v23 : llvm_bswap_i32(v23);
        uint32_t v30 = v18 == 0 ? v25 : llvm_bswap_i32(v25);
        *v2 = v26;
        function_180005050(a1, (int64_t)v27, &v3);
        function_180005050(a1, (int64_t)v28, &v12);
        function_180005050(a1, (int64_t)v29, &v11);
        function_180005050(a1, (int64_t)v30, &v10);
        if (a1 == 0) {
            // break -> 0x180012b36
            break;
        }
        int32_t v31 = *v2; // 0x1800127f0
        v13 = *v5;
        uint32_t v32 = v31 + 4; // 0x1800127f6
        if (v32 > v13) {
            // break -> 0x180012b36
            break;
        }
        // 0x180012801
        *v2 = v32;
        uint32_t v33 = v31 + 8; // 0x180012808
        if (v33 > v13) {
            // break -> 0x180012b36
            break;
        }
        // 0x180012813
        *v2 = v33;
        int32_t v34 = v31 + 12; // 0x18001281a
        if (v34 > v13) {
            // break -> 0x180012b36
            break;
        }
        // 0x180012825
        *v2 = v34;
        int32_t v35 = *(int32_t *)&g31; // 0x180012829
        if (v35 == 868) {
            goto lab_0x180012886;
        } else {
            // 0x180012839
            v8 = v34;
            if (v35 != 884) {
                if (v35 != 893 == (v35 != 902)) {
                    goto lab_0x180012886;
                } else {
                    uint32_t v36 = v31 + 16; // 0x180012853
                    if (v36 > v13) {
                        // break -> 0x180012b36
                        break;
                    }
                    // 0x18001285e
                    *v2 = v36;
                    int32_t v37 = v31 + 20; // 0x180012865
                    if (v37 > v13) {
                        // break -> 0x180012b36
                        break;
                    }
                    // 0x180012870
                    *v2 = v37;
                    v8 = v37;
                    goto lab_0x18001287a;
                }
            } else {
                goto lab_0x18001287a;
            }
        }
    }
  lab_0x180012b36_2:
    // 0x180012b36
    __security_check_cookie(g17);
    return &g47;
  lab_0x180012886:;
    int64_t v38 = v13; // 0x180012890
    if (g36 != 0) {
        int64_t v39 = 312 * (0x100000000 * v9 >> 32);
        int64_t v40 = v4; // 0x1800128a8
        int64_t v41 = v39 + 52 + g36; // 0x1800128a8
        char v42 = *(char *)v40; // 0x1800128b0
        *(char *)v41 = v42;
        v40++;
        v41++;
        v38 = v39;
        while (v42 != 0) {
            // 0x1800128b0
            v42 = *(char *)v40;
            *(char *)v41 = v42;
            v40++;
            v41++;
            v38 = v39;
        }
    }
    int64_t v43 = v9 + 1; // 0x1800128c2
    v7 = v43 & 0xffffffff;
    int32_t v44; // 0x180012640
    int64_t v45; // 0x180012640
    int64_t v46; // 0x180012640
    if ((int32_t)v43 >= v1) {
        // 0x1800128ce
        *v2 = a3;
        v44 = a3;
        v46 = v38;
        v45 = 0;
        goto lab_0x1800128e0;
    }
    goto lab_0x1800126d0;
  lab_0x18001287a:;
    uint32_t v47 = v8 + 4;
    if (v47 > v13) {
        // break -> 0x180012b36
        goto lab_0x180012b36_2;
    }
    // 0x180012882
    *v2 = v47;
    goto lab_0x180012886;
  lab_0x1800128e0:;
    // 0x1800128e0
    int32_t v48; // 0x180012640
    int32_t v49; // 0x180012640
    int32_t v50; // 0x18001291b
    uint32_t v51; // 0x180012999
    int32_t v52; // 0x1800129b1
    int32_t v53; // 0x1800129d3
    uint32_t v54; // 0x180012a29
    if (v46 == 0) {
        goto lab_0x180012b36_2;
    } else {
        uint32_t v55 = *v5; // 0x180012905
        uint32_t v56 = v44 + 4; // 0x180012908
        if (v56 > v55) {
            goto lab_0x180012b36_2;
        } else {
            // 0x180012913
            *v2 = v56;
            uint32_t v57 = v44 + 8; // 0x18001292f
            if (v57 > v55) {
                goto lab_0x180012b36_2;
            } else {
                // 0x18001293b
                v50 = *v6;
                int32_t v58 = *(int32_t *)(v46 + (int64_t)v44); // 0x180012923
                *v2 = v57;
                uint32_t v59 = v44 + 12; // 0x180012953
                if (v59 > v55) {
                    goto lab_0x180012b36_2;
                } else {
                    int32_t v60 = *(int32_t *)(v46 + (int64_t)v56); // 0x180012947
                    *v2 = v59;
                    uint32_t v61 = v44 + 16; // 0x180012976
                    if (v61 > v55) {
                        goto lab_0x180012b36_2;
                    } else {
                        int32_t v62 = *(int32_t *)(v46 + (int64_t)v57); // 0x18001296b
                        *v2 = v61;
                        v51 = v44 + 20;
                        if (v51 > v55) {
                            goto lab_0x180012b36_2;
                        } else {
                            int32_t v63 = *(int32_t *)(v46 + (int64_t)v59); // 0x18001298e
                            *v2 = v51;
                            uint32_t v64 = v44 + 24; // 0x1800129bd
                            if (v64 > v55) {
                                goto lab_0x180012b36_2;
                            } else {
                                uint32_t v65 = v50 == 0 ? v58 : llvm_bswap_i32(v58);
                                uint32_t v66 = v50 == 0 ? v60 : llvm_bswap_i32(v60);
                                uint32_t v67 = v50 == 0 ? v62 : llvm_bswap_i32(v62);
                                uint32_t v68 = v50 == 0 ? v63 : llvm_bswap_i32(v63);
                                v52 = *(int32_t *)(v46 + (int64_t)v61);
                                *v2 = v64;
                                v53 = *(int32_t *)(v46 + (int64_t)v51);
                                function_180005050(a1, (int64_t)v65, &v10);
                                function_180005050(a1, (int64_t)v66, &v11);
                                function_180005050(a1, (int64_t)v67, &v12);
                                function_180005050(a1, (int64_t)v68, &v3);
                                int32_t v69 = *v2; // 0x180012a26
                                v54 = *v5;
                                uint32_t v70 = v69 + 4; // 0x180012a2c
                                if (v70 > v54) {
                                    goto lab_0x180012b36_2;
                                } else {
                                    // 0x180012a37
                                    *v2 = v70;
                                    uint32_t v71 = v69 + 8; // 0x180012a3e
                                    if (v71 > v54) {
                                        goto lab_0x180012b36_2;
                                    } else {
                                        // 0x180012a49
                                        *v2 = v71;
                                        int32_t v72 = v69 + 12; // 0x180012a50
                                        if (v72 > v54) {
                                            goto lab_0x180012b36_2;
                                        } else {
                                            // 0x180012a5b
                                            *v2 = v72;
                                            int32_t v73 = *(int32_t *)&g31; // 0x180012a5f
                                            v49 = v72;
                                            if (v73 == 868) {
                                                goto lab_0x180012ab3;
                                            } else {
                                                // 0x180012a6f
                                                v48 = v72;
                                                if (v73 != 884) {
                                                    // 0x180012a7b
                                                    v49 = v72;
                                                    if (v73 != 893 == (v73 != 902)) {
                                                        goto lab_0x180012ab3;
                                                    } else {
                                                        uint32_t v74 = v69 + 16; // 0x180012a89
                                                        if (v74 > v54) {
                                                            goto lab_0x180012b36_2;
                                                        } else {
                                                            // 0x180012a90
                                                            *v2 = v74;
                                                            int32_t v75 = v69 + 20; // 0x180012a97
                                                            if (v75 > v54) {
                                                                goto lab_0x180012b36_2;
                                                            } else {
                                                                // 0x180012a9e
                                                                *v2 = v75;
                                                                v48 = v75;
                                                                goto lab_0x180012aa8;
                                                            }
                                                        }
                                                    }
                                                } else {
                                                    goto lab_0x180012aa8;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x180012ab3:;
    uint32_t v76 = v50 == 0 ? v52 : llvm_bswap_i32(v52);
    int32_t v77 = v50 == 0 ? v53 : llvm_bswap_i32(v53);
    int32_t v78 = v77 == 0 ? 0 : v51;
    int32_t v79; // 0x180012640
    int64_t v80; // 0x180012640
    if ((int32_t)function_180012b60(a1, 312 * (0x100000000 * v45 >> 32) + g36, (int64_t)v76, v78 + v77) == 0) {
        goto lab_0x180012b36_2;
    } else {
        int64_t v81 = v45 + 1; // 0x180012ad1
        *v2 = v49;
        v44 = v49;
        v46 = a1;
        v45 = v81 & 0xffffffff;
        v79 = v49;
        v80 = 0;
        if ((int32_t)v81 < v1) {
            goto lab_0x1800128e0;
        } else {
            goto lab_0x180012aed;
        }
    }
  lab_0x180012aa8:;
    int32_t v82 = v48 + 4;
    if (v82 > v54) {
        goto lab_0x180012b36_2;
    } else {
        // 0x180012aac
        *v2 = v82;
        v49 = v82;
        goto lab_0x180012ab3;
    }
  lab_0x180012aed:;
    int32_t v83 = v79 + 4; // 0x180012af0
    if (v83 > *v5) {
        goto lab_0x180012b36_2;
    } else {
        // 0x180012af8
        *v2 = v83;
        int64_t v84 = v80 + 1; // 0x180012afc
        v79 = v83;
        v80 = v84 & 0xffffffff;
        if ((int32_t)v84 < 77) {
            goto lab_0x180012aed;
        } else {
            goto lab_0x180012b36_2;
        }
    }
}

// Address range: 0x180012b60 - 0x180012dcf
int64_t function_180012b60(int64_t a1, int64_t a2, int64_t a3, int32_t a4) {
    uint32_t v1 = (int32_t)a3; // 0x180012ba3
    if (v1 == 0 || a2 == 0 || a4 == 0) {
        // 0x180012dae
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x180012bca
    *v2 = a4;
    int64_t v3; // bp-600, 0x180012b60
    int64_t v4 = &v3; // 0x180012be2
    int32_t * v5 = (int32_t *)(a1 + 12);
    int32_t * v6 = (int32_t *)(a1 + 16);
    int64_t v7 = 0; // 0x180012d7b
    memset(&v3, 0, 260);
    uint32_t v8 = *v2; // 0x180012bfe
    uint32_t v9 = *v5; // 0x180012c01
    uint32_t v10 = v8 + 4; // 0x180012c04
    while (v10 <= v9) {
        // 0x180012c0f
        *v2 = v10;
        uint32_t v11 = v8 + 8; // 0x180012c2b
        if (v11 > v9) {
            // break -> 0x180012dae
            break;
        }
        int32_t v12 = *v6; // 0x180012c17
        int32_t v13 = *(int32_t *)((int64_t)v8 + v4); // 0x180012c1f
        *v2 = v11;
        uint32_t v14 = v8 + 12; // 0x180012c4e
        if (v14 > v9) {
            // break -> 0x180012dae
            break;
        }
        int32_t v15 = *(int32_t *)((int64_t)v10 + v4); // 0x180012c43
        *v2 = v14;
        uint32_t v16 = v8 + 16; // 0x180012c61
        if (v16 > v9) {
            // break -> 0x180012dae
            break;
        }
        // 0x180012c6c
        *v2 = v16;
        uint32_t v17 = v8 + 20; // 0x180012c73
        if (v17 > v9) {
            // break -> 0x180012dae
            break;
        }
        // 0x180012c7e
        *v2 = v17;
        uint32_t v18 = v8 + 24; // 0x180012c86
        if (v18 > v9) {
            // break -> 0x180012dae
            break;
        }
        uint32_t v19 = v12 == 0 ? v13 : llvm_bswap_i32(v13);
        uint32_t v20 = v12 == 0 ? v15 : llvm_bswap_i32(v15);
        *v2 = v18;
        int32_t v21 = *(int32_t *)((int64_t)v17 + v4); // 0x180012c9c
        int32_t v22 = v12 == 0 ? v21 : llvm_bswap_i32(v21);
        function_180005050(a1, (int64_t)v19, &v3);
        int64_t v23; // bp-328, 0x180012b60
        function_180005050(a1, (int64_t)v20, &v23);
        int32_t v24 = (v22 == 0 ? 0 : v17) + v22;
        if (_stricmp((char *)&v3, "texture0") == 0 && v24 != 0) {
            // 0x180012cf7
            *v2 = v24;
            uint32_t v25 = *v5; // 0x180012d06
            uint32_t v26 = v24 + 4; // 0x180012d0c
            if (v25 < v26) {
                // break -> 0x180012dae
                break;
            }
            // 0x180012d14
            *v2 = v26;
            uint32_t v27 = v24 + 8; // 0x180012d1a
            if (v27 > v25) {
                // break -> 0x180012dae
                break;
            }
            // 0x180012d22
            *v2 = v27;
            uint32_t v28 = v24 + 12; // 0x180012d29
            if (v28 > v25) {
                // break -> 0x180012dae
                break;
            }
            // 0x180012d34
            *v2 = v28;
            uint32_t v29 = v24 + 16; // 0x180012d3b
            if (v29 > v25) {
                // break -> 0x180012dae
                break;
            }
            // 0x180012d46
            *v2 = v29;
            uint32_t v30 = v24 + 20; // 0x180012d4d
            if (v30 > v25) {
                // break -> 0x180012dae
                break;
            }
            // 0x180012d54
            *v2 = v30;
            uint32_t v31 = v24 + 24; // 0x180012d5b
            if (v31 > v25) {
                // break -> 0x180012dae
                break;
            }
            // 0x180012d62
            *v2 = v31;
            int32_t v32 = *(int32_t *)((int64_t)v30 + v4); // 0x180012d70
            *(int32_t *)(a2 + 40) = *v6 == 0 ? v32 : llvm_bswap_i32(v32);
        }
        // 0x180012d7b
        if ((int32_t)v7 >= v1) {
            // break -> 0x180012dae
            break;
        }
        v7 &= 0xffffffff;
        memset(&v3, 0, 260);
        v8 = *v2;
        v9 = *v5;
        v10 = v8 + 4;
    }
    // 0x180012dae
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180012dd0 - 0x180012ec8
int64_t function_180012dd0(int64_t a1, int64_t a2) {
    // 0x180012dd0
    if (a2 == 0) {
        // 0x180012ec0
        return 0;
    }
    // 0x180012de2
    int64_t v1; // 0x180012dd0
    int32_t v2 = v1;
    if (v2 == 0) {
        // 0x180012de7
        return v1 + 1 & 0xffffffff;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x180012df4
    *v3 = v2;
    if (a1 == 0) {
        // 0x180012ec0
        return 0;
    }
    uint32_t v4 = *(int32_t *)(a1 + 12); // 0x180012e01
    uint32_t v5 = v2 + 4; // 0x180012e08
    if (v4 < v5) {
        // 0x180012ec0
        return 0;
    }
    // 0x180012e10
    *v3 = v5;
    uint32_t v6 = v2 + 6; // 0x180012e16
    if (v6 > v4) {
        // 0x180012ec0
        return 0;
    }
    // 0x180012e1e
    *v3 = v6;
    uint32_t v7 = v2 + 8; // 0x180012e3a
    if (v7 > v4) {
        // 0x180012ec0
        return 0;
    }
    // 0x180012e42
    *v3 = v7;
    uint32_t v8 = v2 + 12; // 0x180012e49
    if (v8 > v4) {
        // 0x180012ec0
        return 0;
    }
    // 0x180012e50
    *v3 = v8;
    uint32_t v9 = v2 + 16; // 0x180012e6c
    if (v9 > v4) {
        // 0x180012ec0
        return 0;
    }
    int32_t v10 = *(int32_t *)((int64_t)v7 + a1); // 0x180012e63
    *v3 = v9;
    uint32_t v11 = v2 + 20; // 0x180012e7f
    if (v11 > v4) {
        // 0x180012ec0
        return 0;
    }
    // 0x180012e86
    *v3 = v11;
    uint32_t v12 = v2 + 24; // 0x180012e8d
    if (v12 > v4) {
        // 0x180012ec0
        return 0;
    }
    int32_t v13 = *(int32_t *)(a1 + 16) == 0 ? v10 : llvm_bswap_i32(v10);
    *v3 = v13 != 0 ? v13 : v12;
    return (int32_t)function_180013c40(a1, a2) != 0;
}

// Address range: 0x180012ed0 - 0x180013c32
int64_t function_180012ed0(int64_t a1, int64_t a2) {
    // 0x180012ed0
    if (a2 == 0) {
        // 0x180013c08
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v1 = a1; // 0x180012f1e
    if (a1 == 0) {
        // 0x180013c08
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x180012f2a
    int32_t v3 = *v2; // 0x180012f2a
    uint32_t v4 = v3 + 4; // 0x180012f2d
    int32_t * v5 = (int32_t *)(a1 + 12); // 0x180012f30
    uint32_t v6 = *v5; // 0x180012f30
    if (v4 > v6) {
        // 0x180013c08
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180012f3b
    *v2 = v4;
    uint32_t v7 = v3 + 8;
    if (v7 > v6) {
        // 0x180013c08
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180012f49
    int64_t v8; // bp-408, 0x180012ed0
    int64_t v9 = &v8; // 0x180012edc
    *v2 = v7;
    int32_t v10 = *(int32_t *)(v1 + (int64_t)v4); // 0x180012f53
    int32_t * v11 = (int32_t *)(a1 + 16); // 0x180012f57
    int32_t v12 = *v11 == 0 ? v10 : llvm_bswap_i32(v10);
    int32_t v13; // bp-552, 0x180012ed0
    int64_t v14 = &v13; // 0x180012f87
    function_1800010c0(v14);
    int64_t v15 = 0; // 0x180012fa8
    int64_t v16 = 0; // 0x180012fa8
    uint32_t v17 = *v5; // 0x180012fb9
    uint32_t v18 = *v2; // 0x180012fbd
    uint32_t v19 = v18 + 4; // 0x180012fc0
    int32_t v20; // 0x180012ed0
    uint32_t v21; // 0x18001300d
    uint32_t v22; // 0x180013088
    uint32_t v23; // 0x180013099
    int32_t v24; // 0x1800130a5
    int32_t v25; // 0x1800130a9
    while (v19 <= v17) {
        int64_t v26 = v15;
        *v2 = v19;
        v21 = v18 + 8;
        if (v21 > v17) {
            // break -> 0x180013be7
            break;
        }
        int32_t v27 = *(int32_t *)((int64_t)v18 + v14); // 0x180012fd8
        int32_t v28 = *v11; // 0x180012fdc
        *v2 = v21;
        int32_t v29 = *(int32_t *)((int64_t)v19 + v14); // 0x180013026
        int32_t v30 = v28 == 0 ? v29 : llvm_bswap_i32(v29);
        if (v30 != 0) {
            // 0x180013064
            *(int32_t *)(v9 + 32 + 4 * v26) = v30 + v19;
        }
        // 0x18001306d
        v16 = v26 == 0 ? (int64_t)(v28 == 0 ? v27 : llvm_bswap_i32(v27)) : v16;
        v15 = v26 + 1;
        if (v15 >= 5) {
            // 0x180013088
            v22 = *v5;
            if (v18 + 12 > v22) {
                goto lab_0x180013be7;
            } else {
                // 0x180013099
                v23 = *v2;
                *v2 = v23 + 4;
                int32_t v31 = v23 + 8; // 0x1800130dc
                if (v31 > v22) {
                    goto lab_0x180013be7;
                } else {
                    // 0x1800130e9
                    v24 = *(int32_t *)((int64_t)v23 + v14);
                    v25 = *v11;
                    *v2 = v31;
                    int32_t v32 = *(int32_t *)&g31; // 0x1800130fb
                    switch (v32) {
                        case 779: {
                            goto lab_0x180013119;
                        }
                        case 866: {
                            goto lab_0x180013119;
                        }
                        default: {
                            // 0x180013111
                            v20 = v31;
                            if (v32 != 877) {
                                goto lab_0x18001313f;
                            } else {
                                goto lab_0x180013119;
                            }
                        }
                    }
                }
            }
        }
        v17 = *v5;
        v18 = *v2;
        v19 = v18 + 4;
    }
  lab_0x180013be7:
    // 0x180013be7
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    // 0x180013c08
    __security_check_cookie(g17);
    return &g47;
  lab_0x180013119:;
    uint32_t v33 = v23 + 12; // 0x180013119
    if (v33 > v22) {
        goto lab_0x180013be7;
    } else {
        // 0x180013125
        *v2 = v33;
        int32_t v34 = v23 + 16; // 0x18001312c
        if (v34 > v22) {
            goto lab_0x180013be7;
        } else {
            // 0x180013138
            *v2 = v34;
            v20 = v34;
            goto lab_0x18001313f;
        }
    }
  lab_0x18001313f:;
    uint32_t v35 = v20 + 4;
    int64_t v36; // 0x180012ed0
    int64_t v37; // 0x180012ed0
    int64_t v38; // 0x180012ed0
    int64_t v39; // 0x180012ed0
    int64_t v40; // 0x180012ed0
    int32_t v41; // bp-592, 0x180012ed0
    int128_t v42; // bp-608, 0x180012ed0
    int32_t v43; // 0x180013157
    if (v35 > v22) {
        goto lab_0x180013be7;
    } else {
        // 0x18001314b
        *v2 = v35;
        uint32_t v44 = v20 + 8; // 0x180013194
        if (v44 > v22) {
            goto lab_0x180013be7;
        } else {
            // 0x1800131a1
            v43 = *(int32_t *)((int64_t)v20 + v14);
            *v2 = v44;
            v41 = 0;
            v42 = 0;
            if ((int32_t)function_18001d5c0(a1, (int64_t *)&v41) == 0) {
                goto lab_0x180013be7;
            } else {
                // 0x1800131dc
                v1 = &v42;
                if ((int32_t)function_18001d5c0(a1, (int64_t *)&v42) == 0) {
                    goto lab_0x180013be7;
                } else {
                    // 0x1800131fb
                    v39 = a1;
                    v38 = 0;
                    v36 = 0;
                    v40 = a1;
                    v37 = 0;
                    if ((int32_t)v16 < 1) {
                        goto lab_0x180013274;
                    } else {
                        goto lab_0x180013219;
                    }
                }
            }
        }
    }
  lab_0x180013274:;
    // 0x180013274
    int32_t v45; // 0x180012ed0
    if (v45 == 0) {
        goto lab_0x18001327e;
    } else {
        goto lab_0x18001327e;
    }
  lab_0x180013219:;
    uint32_t v46 = *v2; // 0x180013219
    uint32_t v47 = v46 + 4; // 0x18001321c
    int64_t v48; // 0x180012ed0
    int64_t v49; // 0x18001324a
    if (v47 > *v5) {
        goto lab_0x180013be7;
    } else {
        // 0x180013228
        *v2 = v47;
        uint32_t v50 = *(int32_t *)((int64_t)v46 + a1); // 0x180013232
        int64_t v51 = v50; // 0x180013232
        v49 = v39;
        v48 = v51;
        if (*v11 == 0) {
            goto lab_0x180013265;
        } else {
            int64_t v52 = 0x1000000 * v51; // 0x18001323e
            v1 = v52 & 0xff000000;
            v49 = 256 * v51 & 0xff0000;
            v48 = v50 / 256 & 0xff00 | v50 / 0x1000000 | (int32_t)v52 | (int32_t)v49;
            goto lab_0x180013265;
        }
    }
  lab_0x18001327e:;
    int64_t v53; // 0x180012ed0
    int64_t v54; // 0x180012ed0
    int64_t v55; // 0x180012ed0
    if ((int32_t)v16 < 1) {
        if (v45 == 0) {
            goto lab_0x1800134f6;
        } else {
            goto lab_0x1800134f6;
        }
    } else {
        // 0x180013289
        v55 = 0;
        int64_t v56; // bp-540, 0x180012ed0
        v53 = &v56;
        v54 = 0;
        goto lab_0x180013294;
    }
  lab_0x180013265:;
    int64_t v57 = v49;
    int64_t v58 = v38 == 0 ? v48 : v36;
    int64_t v59 = v38 + 1 & 0xffffffff; // 0x18001326c
    v39 = v57;
    v38 = v59;
    v36 = v58;
    if (v59 < v16) {
        goto lab_0x180013219;
    } else {
        // 0x180013274
        v40 = v57;
        v37 = 0x100000000 * v58 >> 32;
        goto lab_0x180013274;
    }
  lab_0x1800134f6:;
    int32_t v60 = v25 == 0 ? v24 : llvm_bswap_i32(v24);
    int32_t v61 = (v60 == 0 ? 0 : v21) + v60;
    int32_t v62; // 0x180012ed0
    int64_t v63; // 0x180012ed0
    if (v61 == 0) {
        int32_t v64 = *v2;
        v62 = v64;
        v63 = 0;
        if (v64 == 0) {
            goto lab_0x18001352f;
        } else {
            goto lab_0x180013508;
        }
    } else {
        // 0x1800134ff
        *v2 = v61;
        v62 = v61;
        goto lab_0x180013508;
    }
  lab_0x180013294:;
    int64_t v65; // 0x180012ed0
    int32_t v66; // 0x180012ed0
    if (v40 == 0) {
        goto lab_0x180013be7;
    } else {
        uint32_t v67 = *v2; // 0x18001329d
        uint32_t v68 = v67 + 4; // 0x1800132a0
        if (v68 > *v5) {
            goto lab_0x180013be7;
        } else {
            // 0x1800132ac
            v65 = v53;
            *v2 = v68;
            uint32_t v69 = *(int32_t *)(v40 + (int64_t)v67); // 0x1800132b6
            v66 = v69;
            if (*v11 == 0) {
                goto lab_0x1800132ea;
            } else {
                int64_t v70 = 0x1000000 * (int64_t)v69; // 0x1800132c3
                v1 = v70 & 0xff000000;
                v66 = v69 / 256 & 0xff00 | v69 / 0x1000000 | 256 * v69 & 0xff0000 | (int32_t)v70;
                goto lab_0x1800132ea;
            }
        }
    }
  lab_0x18001352f:;
    uint32_t v71 = v25 == 0 ? v43 : llvm_bswap_i32(v43);
    v41 = 0;
    int64_t v72; // 0x180012ed0
    if (v71 == 0) {
        // 0x180013ba8
        v1 = 0;
        goto lab_0x180013be7;
    } else {
        int64_t v73 = v71;
        v42 = v71;
        v1 = 0;
        int64_t v74 = 284 * v73 + 8; // 0x180013567
        int64_t v75 = function_180023684(v74, 0, 0, v63); // 0x180013572
        if (v75 == 0) {
            // 0x1800135ab
            v41 = 0;
            v72 = v74;
            goto lab_0x1800135c5;
        } else {
            // 0x180013581
            *(int64_t *)v75 = v73;
            int64_t v76 = v75 + 8; // 0x180013584
            v41 = v76;
            v1 = 284;
            _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x800010b0, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
            v72 = v76;
            goto lab_0x1800135c5;
        }
    }
  lab_0x180013508:
    // 0x180013508
    v1 = a2;
    int64_t v77 = function_180005100(a1, a2, v12, v62, v37, (int64_t *)&v13); // 0x180013522
    v63 = v62;
    if ((int32_t)v77 == 0) {
        goto lab_0x180013be7;
    } else {
        goto lab_0x18001352f;
    }
  lab_0x1800132ea:
    // 0x1800132ea
    if (v13 > (int32_t)v55) {
        // 0x1800132f1
        *(int32_t *)v65 = v66;
        goto lab_0x1800132f4;
    } else {
        goto lab_0x1800132f4;
    }
  lab_0x1800132f4:;
    int64_t v78 = v54 + 1; // 0x1800132f7
    v55 = v55 + 1 & 0xffffffff;
    v53 = v65 + 16;
    v54 = v78;
    if (v78 < 0x100000000 * v16 >> 32) {
        goto lab_0x180013294;
    } else {
        goto lab_0x180013be7;
    }
  lab_0x1800135c5:
    // 0x1800135c5
    v42 = 0;
    int64_t v79; // bp-344, 0x180012ed0
    int64_t v80 = &v79;
    int64_t v81 = v9 + 64;
    int64_t * v82 = NULL; // 0x1800135ca
    int64_t v83 = 0; // 0x1800135ca
    int64_t v84 = v72; // 0x1800135ca
    goto lab_0x1800135d0;
  lab_0x1800135d0:;
    int64_t v85 = v83;
    int32_t v86 = *(int32_t *)&g31; // 0x1800135d0
    if (v86 != 866 == (v86 != 877)) {
        goto lab_0x180013601;
    } else {
        // 0x1800135e4
        if (v84 == 0) {
            goto lab_0x180013be7;
        } else {
            uint32_t v87 = *v2 + 4; // 0x1800135f1
            if (v87 > *v5) {
                goto lab_0x180013be7;
            } else {
                // 0x1800135fd
                *v2 = v87;
                goto lab_0x180013601;
            }
        }
    }
  lab_0x180013601:
    // 0x180013601
    memset(&v79, 0, 260);
    uint32_t v88 = *v5; // 0x18001361e
    int32_t v89 = *v2; // 0x180013622
    uint32_t v90 = v89 + 4; // 0x180013625
    int32_t v91; // 0x180012ed0
    int32_t v92; // 0x180013650
    int32_t v93; // 0x180013654
    if (v90 > v88) {
        goto lab_0x180013be7;
    } else {
        // 0x180013631
        *v2 = v90;
        int32_t v94 = v89 + 8; // 0x180013638
        if (v94 > v88) {
            goto lab_0x180013be7;
        } else {
            // 0x180013644
            *v2 = v94;
            v92 = *(int32_t *)((int64_t)v90 + v80);
            v93 = *v11;
            int32_t v95 = *(int32_t *)&g31; // 0x180013687
            v91 = v94;
            if (v95 != 866 == (v95 != 877)) {
                goto lab_0x1800136b0;
            } else {
                int32_t v96 = v89 + 12; // 0x18001369b
                if (v96 > v88) {
                    goto lab_0x180013be7;
                } else {
                    // 0x1800136a8
                    *v2 = v96;
                    v91 = v96;
                    goto lab_0x1800136b0;
                }
            }
        }
    }
  lab_0x1800136b0:;
    int32_t v97 = v91 + 4;
    int32_t v98; // 0x180012ed0
    int32_t v99; // 0x1800136c9
    if (v97 > v88) {
        goto lab_0x180013be7;
    } else {
        int32_t v100 = v93 == 0 ? v92 : llvm_bswap_i32(v92);
        *v2 = v97;
        v99 = *(int32_t *)((int64_t)v91 + v80);
        v98 = v97;
        if (v100 < 101) {
            goto lab_0x180013755;
        } else {
            // 0x180013702
            *v2 = v100;
            v1 = 0;
            goto lab_0x180013710;
        }
    }
  lab_0x180013755:;
    uint32_t v101 = v98 + 4; // 0x180013758
    int64_t v102; // 0x180012ed0
    int64_t v103; // 0x180012ed0
    int32_t v104; // 0x180012ed0
    int32_t v105; // 0x180012ed0
    int32_t v106; // 0x180012ed0
    uint32_t v107; // 0x180012ed0
    int32_t v108; // 0x180012ed0
    int64_t v109; // 0x180013914
    uint32_t v110; // 0x180013840
    if (v101 > v88) {
        goto lab_0x180013be7;
    } else {
        // 0x180013764
        *v2 = v101;
        uint32_t v111 = v98 + 8; // 0x18001376b
        if (v111 > v88) {
            goto lab_0x180013be7;
        } else {
            // 0x180013777
            *v2 = v111;
            uint32_t v112 = v98 + 12; // 0x18001377e
            if (v112 > v88) {
                goto lab_0x180013be7;
            } else {
                // 0x18001378a
                *v2 = v112;
                uint32_t v113 = v98 + 16; // 0x180013791
                if (v113 > v88) {
                    goto lab_0x180013be7;
                } else {
                    // 0x18001379d
                    *v2 = v113;
                    uint32_t v114 = v98 + 20; // 0x1800137a4
                    if (v114 > v88) {
                        goto lab_0x180013be7;
                    } else {
                        // 0x1800137b0
                        *v2 = v114;
                        uint32_t v115 = v98 + 24; // 0x1800137b7
                        if (v115 > v88) {
                            goto lab_0x180013be7;
                        } else {
                            // 0x1800137c3
                            *v2 = v115;
                            uint32_t v116 = v98 + 28; // 0x1800137fb
                            if (v116 > v88) {
                                goto lab_0x180013be7;
                            } else {
                                int32_t v117 = *(int32_t *)((int64_t)v114 + v80); // 0x1800137cf
                                *v2 = v116;
                                v110 = v98 + 32;
                                if (v110 > v88) {
                                    goto lab_0x180013be7;
                                } else {
                                    int32_t v118 = *(int32_t *)((int64_t)v115 + v80); // 0x180013814
                                    *v2 = v110;
                                    uint32_t v119 = v98 + 36; // 0x18001388c
                                    if (v119 > v88) {
                                        goto lab_0x180013be7;
                                    } else {
                                        int32_t v120 = *(int32_t *)((int64_t)v116 + v80); // 0x180013859
                                        *v2 = v119;
                                        uint32_t v121 = v98 + 40; // 0x1800138d8
                                        if (v121 > v88) {
                                            goto lab_0x180013be7;
                                        } else {
                                            int32_t v122 = *(int32_t *)((int64_t)v110 + v80); // 0x1800138a5
                                            *v2 = v121;
                                            uint32_t v123 = v98 + 44; // 0x1800138ec
                                            if (v123 > v88) {
                                                goto lab_0x180013be7;
                                            } else {
                                                // 0x1800138f8
                                                v107 = v93 == 0 ? v120 : llvm_bswap_i32(v120);
                                                *v2 = v123;
                                                v109 = v41;
                                                if (v41 == 0) {
                                                    int64_t v124 = 0x100000000 * (int64_t)v42 >> 32; // 0x18001398a
                                                    v1 = v124;
                                                    v103 = v124;
                                                    goto lab_0x18001398f;
                                                } else {
                                                    // 0x18001391e
                                                    v104 = v93 == 0 ? v99 : llvm_bswap_i32(v99);
                                                    v105 = v93 == 0 ? v117 : llvm_bswap_i32(v117);
                                                    v106 = v93 == 0 ? v118 : llvm_bswap_i32(v118);
                                                    v108 = v93 == 0 ? v122 : llvm_bswap_i32(v122);
                                                    v1 = v80;
                                                    v102 = v80;
                                                    goto lab_0x180013940;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x180013710:;
    uint32_t v125 = *v2; // 0x180013710
    uint32_t v126 = v125 + 1; // 0x180013713
    v98 = v125;
    int64_t v127; // 0x180012ed0
    char v128; // 0x180013722
    if (v126 > *v5) {
        goto lab_0x180013755;
    } else {
        // 0x18001371a
        *v2 = v126;
        v128 = *(char *)((int64_t)v125 + v80);
        int64_t v129 = v1; // 0x180013727
        v127 = v129;
        if (v129 > 259) {
            goto lab_0x180013734;
        } else {
            // 0x180013730
            *(char *)(v129 + v81) = v128;
            v127 = v1;
            goto lab_0x180013734;
        }
    }
  lab_0x180013734:;
    int64_t v130 = v127 + 1; // 0x180013734
    v1 = v130;
    if (v128 != 0) {
        goto lab_0x180013710;
    } else {
        if (v130 > 259) {
            // 0x180013751
            *v2 = v97;
            v98 = v97;
            goto lab_0x180013755;
        } else {
            // 0x180013744
            *(char *)(v130 + v81) = v128;
            // 0x180013751
            *v2 = v97;
            v98 = v97;
            goto lab_0x180013755;
        }
    }
  lab_0x18001398f:;
    int64_t v131 = (int64_t)v107 + (int64_t)v82 & 0xffffffff; // 0x18001390c
    int64_t v132 = v85 + 1; // 0x180013993
    int64_t v133 = v132 & 0xffffffff; // 0x180013993
    int64_t v134 = v103 + 1; // 0x180013999
    v1 = v134;
    v42 = v134;
    v82 = (int64_t *)v131;
    v83 = 0x100000000 * v132 >> 32;
    v84 = v133;
    int64_t v135; // 0x180012ed0
    int64_t v136; // 0x180012ed0
    int64_t v137; // 0x180012ed0
    if (v71 > (int32_t)v132) {
        goto lab_0x1800135d0;
    } else {
        uint64_t v138 = 0xaaaaaaab * v131; // 0x1800139b9
        int64_t v139 = v138 / 0x200000000; // 0x1800139b9
        v1 = v139;
        v137 = v133;
        if (v138 < 0x200000000) {
            goto lab_0x180013a16;
        } else {
            // 0x1800139c8
            if ((int32_t)function_180001dd0(a2, v139) == 0) {
                goto lab_0x180013be7;
            } else {
                // 0x1800139dd
                v137 = 0;
                if (*(int32_t *)&v1 < 1) {
                    goto lab_0x180013a16;
                } else {
                    // 0x1800139e4
                    v1 = 0;
                    v135 = 0;
                    v136 = 0;
                    goto lab_0x1800139f0;
                }
            }
        }
    }
  lab_0x180013940:;
    char v140 = *(char *)v102; // 0x180013940
    *(char *)(284 * v85 - v80 + v109 + v102) = v140;
    int64_t v141 = v1 + 1; // 0x180013947
    v1 = v141;
    v102 = v141;
    if (v140 != 0) {
        goto lab_0x180013940;
    } else {
        // 0x18001394f
        v1 = 0x100000000 * (int64_t)v42 >> 32;
        *(int32_t *)(v109 + 260) = v104;
        *(int32_t *)(v109 + 264) = v107;
        *(int32_t *)(v109 + 268) = v106;
        *(int32_t *)(v109 + 272) = (v108 == 0 ? 0 : v110) + v108;
        *(int32_t *)(v109 + 276) = v105;
        v103 = v1;
        goto lab_0x18001398f;
    }
  lab_0x180013a16:;
    int64_t * v142 = (int64_t *)(a2 + 8);
    int64_t * v143 = NULL; // 0x180013a19
    int64_t v144 = v137; // 0x180013a19
    int64_t v145 = 0; // 0x180013a19
    int64_t v146 = v109 + 260; // 0x180013a19
    goto lab_0x180013a20;
  lab_0x180013a20:;
    int64_t v147 = v145;
    int64_t v148 = v144;
    *v2 = *(int32_t *)(v146 + 12);
    v42 = (int128_t)*(int32_t *)(v146 + 16);
    int32_t * v149 = (int32_t *)v146; // 0x180013a36
    int64_t v150 = v147; // 0x180013a3b
    int64_t v151 = 0; // 0x180013a3b
    int64_t v152; // 0x180012ed0
    int64_t v153; // 0x180012ed0
    int64_t v154; // 0x180012ed0
    int64_t v155; // 0x180012ed0
    int64_t v156; // 0x180012ed0
    if (*v149 == 0) {
        goto lab_0x180013b72;
    } else {
        // 0x180013a41
        v156 = v148;
        v152 = 20 * v147;
        v153 = v147;
        v154 = 0;
        v155 = 0;
        goto lab_0x180013a50;
    }
  lab_0x180013b72:
    // 0x180013b72
    *(int32_t *)(v146 + 20) = (int32_t)v151;
    int32_t v157 = *v2; // 0x180013b7a
    int32_t v158 = v157 & -4; // 0x180013b7f
    *v2 = (v157 & 3) == 0 ? v158 : v158 + 4;
    int64_t v159 = (int64_t)v143 + 1; // 0x180013b91
    int64_t v160 = v159 & 0xffffffff; // 0x180013b91
    int64_t * v161 = (int64_t *)v160;
    v143 = v161;
    v144 = v160;
    v145 = v150;
    v146 += 284;
    if (v71 > (int32_t)v159) {
        goto lab_0x180013a20;
    } else {
        // 0x180013ba8
        if (v41 == 0) {
            goto lab_0x180013be7;
        } else {
            int64_t v162 = (int64_t)v41 - 8; // 0x180013bb2
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z(v161, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            function_1800235a4(v162, 284 * *(int64_t *)v162 + 8);
            goto lab_0x180013be7;
        }
    }
  lab_0x180013a50:
    // 0x180013a50
    v1 = v156;
    int64_t v163; // 0x180012ed0
    int64_t v164; // 0x180012ed0
    int64_t v165; // 0x180012ed0
    uint16_t v166; // 0x180012ed0
    uint16_t v167; // 0x180012ed0
    uint16_t v168; // 0x180012ed0
    int64_t v169; // 0x180012ed0
    if (v156 == 0) {
        goto lab_0x180013be7;
    } else {
        uint32_t v170 = *v5; // 0x180013a5c
        uint32_t v171 = *v2; // 0x180013a60
        uint32_t v172 = v171 + 2; // 0x180013a63
        if (v172 > v170) {
            goto lab_0x180013be7;
        } else {
            // 0x180013a6f
            v164 = v155;
            v163 = v152;
            *v2 = v172;
            uint32_t v173 = v171 + 4; // 0x180013a98
            if (v173 > v170) {
                goto lab_0x180013be7;
            } else {
                int16_t v174 = *(int16_t *)(v1 + (int64_t)v171); // 0x180013a7b
                int32_t v175 = *v11; // 0x180013a80
                *v2 = v173;
                uint32_t v176 = v171 + 6; // 0x180013ac9
                if (v176 > v170) {
                    goto lab_0x180013be7;
                } else {
                    // 0x180013ad5
                    v166 = v175 == 0 ? v174 : llvm_bswap_i16(v174);
                    int16_t v177 = *(int16_t *)(v1 + (int64_t)v172); // 0x180013aaf
                    v167 = v175 == 0 ? v177 : llvm_bswap_i16(v177);
                    *v2 = v176;
                    int16_t v178 = *(int16_t *)(v1 + (int64_t)v173); // 0x180013adf
                    v168 = v175 == 0 ? v178 : llvm_bswap_i16(v178);
                    v169 = v168;
                    v1 = v169;
                    int64_t v179 = *v142; // 0x180013b1f
                    v165 = 0;
                    if (v179 == 0) {
                        goto lab_0x180013b58;
                    } else {
                        int32_t v180 = v42; // 0x180013b31
                        *(int32_t *)(v163 + 4 + v179) = v180 + (int32_t)v166;
                        *(int32_t *)(v163 + 8 + *v142) = v180 + (int32_t)v167;
                        int64_t v181 = (v1 & 0xffff) + (int64_t)v42; // 0x180013b4c
                        *(int32_t *)(v163 + 12 + *v142) = (int32_t)v181;
                        v165 = v181 & 0xffffffff;
                        goto lab_0x180013b58;
                    }
                }
            }
        }
    }
  lab_0x1800139f0:
    // 0x1800139f0
    *(int32_t *)(*(int64_t *)(a2 + 8) + v135) = 3;
    int64_t v182 = v136 + 1; // 0x1800139fb
    int64_t v183 = v182 & 0xffffffff; // 0x1800139fb
    int64_t v184 = v1 + 20; // 0x1800139fd
    v1 = v184;
    v135 = v184;
    v136 = v183;
    v137 = v183;
    if ((int32_t)v184 > (int32_t)v182) {
        goto lab_0x1800139f0;
    } else {
        goto lab_0x180013a16;
    }
  lab_0x180013b58:;
    int64_t v185 = v166 < (int16_t)v164 ? v164 : (int64_t)v166;
    int64_t v186 = v167 < (int16_t)v185 ? v185 : (int64_t)v167;
    int64_t v187 = v168 < (int16_t)v186 ? v186 : v169;
    int64_t v188 = v153 + 1; // 0x180013b5c
    int64_t v189 = v154 + 1; // 0x180013b63
    v156 = v165;
    v152 = v163 + 20;
    v153 = v188;
    v154 = v189 & 0xffffffff;
    v155 = v187;
    v150 = v188;
    v151 = v187;
    if (*v149 > (int32_t)v189) {
        goto lab_0x180013a50;
    } else {
        goto lab_0x180013b72;
    }
}

// Address range: 0x180013c40 - 0x180014610
int64_t function_180013c40(int64_t a1, int64_t a2) {
    // 0x180013c40
    if (a1 == 0 || a2 == 0) {
        // 0x1800145e9
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180013c95
    uint32_t v2 = *v1; // 0x180013c95
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x180013c9b
    uint32_t v4 = *v3; // 0x180013c9b
    if (v2 + 4 > v4) {
        // 0x1800145e9
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v5 = *(int32_t *)((int64_t)v2 + a1); // 0x180013ca8
    int32_t * v6 = (int32_t *)(a1 + 16); // 0x180013cac
    if ((*v6 == 0 ? v5 : llvm_bswap_i32(v5)) == 0) {
        // 0x180013ce2
        *v1 = v2;
    }
    // 0x180013ce5
    int64_t v7; // 0x180013c40
    uint32_t v8 = (int32_t)v7; // 0x180013ceb
    int32_t v9 = v2; // 0x180013cee
    int64_t v10 = 0; // 0x180013cee
    int32_t v11 = v2; // 0x180013cee
    if (v8 != 0) {
        v9 += 4;
        while (v9 <= v4) {
            // 0x180013cff
            *v1 = v9;
            int64_t v12 = v10 + 1; // 0x180013d03
            v10 = v12 & 0xffffffff;
            v11 = v9;
            if ((int32_t)v12 >= v8) {
                goto lab_0x180013d0a;
            }
            v9 += 4;
        }
        // 0x1800145e9
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x180013d0a:;
    uint32_t v13 = v11 + 4; // 0x180013d0d
    if (v13 > v4) {
        // 0x1800145e9
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180013d19
    *v1 = v13;
    uint32_t v14 = v11 + 8; // 0x180013d20
    if (v14 > v4) {
        // 0x1800145e9
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180013d2c
    *v1 = v14;
    int32_t v15; // bp-264, 0x180013c40
    int64_t v16 = &v15; // 0x180013d72
    function_1800010c0(v16);
    int64_t v17; // bp-120, 0x180013c40
    int64_t v18 = (int64_t)&v17 + 32;
    int64_t v19 = 0; // 0x180013d8f
    int64_t v20 = 0; // 0x180013d8f
    uint32_t v21 = *v3; // 0x180013d9b
    uint32_t v22 = *v1; // 0x180013d9f
    uint32_t v23 = v22 + 4; // 0x180013da2
    int32_t v24; // 0x180013c40
    int64_t v25; // 0x180013c40
    int64_t v26; // 0x180013c40
    uint32_t v27; // 0x180013e6a
    while (v23 <= v21) {
        int64_t v28 = v19;
        *v1 = v23;
        uint32_t v29 = v22 + 8; // 0x180013def
        if (v29 > v21) {
            // break -> 0x1800145c7
            break;
        }
        int32_t v30 = *(int32_t *)((int64_t)v22 + v16); // 0x180013dba
        int32_t v31 = *v6; // 0x180013dbe
        *v1 = v29;
        int32_t v32 = *(int32_t *)((int64_t)v23 + v16); // 0x180013e08
        int32_t v33 = v31 == 0 ? v32 : llvm_bswap_i32(v32);
        if (v33 != 0) {
            // 0x180013e46
            *(int32_t *)(v18 + 4 * v28) = v33 + v23;
        }
        // 0x180013e4f
        v25 = v28 == 0 ? (int64_t)(v31 == 0 ? v30 : llvm_bswap_i32(v30)) : v20;
        int64_t v34 = v28 + 1; // 0x180013e4f
        v19 = v34;
        v20 = v25;
        if (v34 >= 5) {
            // 0x180013e6a
            v27 = *v3;
            if (v22 + 12 > v27) {
                goto lab_0x1800145c7;
            } else {
                int32_t v35 = *v1; // 0x180013e7b
                *v1 = v35 + 4;
                uint32_t v36 = v35 + 8; // 0x180013e82
                if (v36 > v27) {
                    goto lab_0x1800145c7;
                } else {
                    // 0x180013e8e
                    *v1 = v36;
                    uint32_t v37 = v35 + 12; // 0x180013e95
                    if (v37 > v27) {
                        goto lab_0x1800145c7;
                    } else {
                        // 0x180013ea1
                        *v1 = v37;
                        int32_t v38 = v35 + 16; // 0x180013eee
                        if (v38 > v27) {
                            goto lab_0x1800145c7;
                        } else {
                            // 0x180013efb
                            *v1 = v38;
                            v24 = v38;
                            v26 = 0;
                            goto lab_0x180013f20;
                        }
                    }
                }
            }
        }
        v21 = *v3;
        v22 = *v1;
        v23 = v22 + 4;
    }
  lab_0x1800145c7:
    // 0x1800145c7
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    // 0x1800145e9
    __security_check_cookie(g17);
    return &g47;
  lab_0x180013f20:;
    int32_t v39 = v24; // 0x180013f20
    int32_t v40 = v39 + 4; // 0x180013f23
    int32_t v41; // 0x180013c40
    int64_t v42; // 0x180013c40
    int64_t v43; // 0x180013c40
    int64_t v44; // 0x180013c40
    uint32_t v45; // 0x180013f3c
    int32_t v46; // 0x180013f67
    if (v40 > *v3) {
        goto lab_0x1800145c7;
    } else {
        // 0x180013f2f
        *v1 = v40;
        int64_t v47 = v26 + 1 & 0xffffffff; // 0x180013f36
        v24 = v40;
        v26 = v47;
        if (v47 < (*(int32_t *)&g31 == 884 ? 2 : 3)) {
            goto lab_0x180013f20;
        } else {
            // 0x180013f3c
            v45 = v39 + 8;
            if (v45 > v27) {
                goto lab_0x1800145c7;
            } else {
                // 0x180013f48
                *v1 = v45;
                uint32_t v48 = v39 + 12; // 0x180013f50
                if (v48 > v27) {
                    goto lab_0x1800145c7;
                } else {
                    // 0x180013f5d
                    *v1 = v48;
                    v46 = *(int32_t *)((int64_t)v45 + v16);
                    int32_t v49 = 0; // bp-312, 0x180013fb2
                    int32_t v50 = 0; // bp-296, 0x180013fc3
                    if ((int32_t)function_18001d5c0(a1, (int64_t *)&v49) == 0) {
                        goto lab_0x1800145c7;
                    } else {
                        // 0x180013fe0
                        if ((int32_t)function_18001d5c0(a1, (int64_t *)&v50) == 0) {
                            goto lab_0x1800145c7;
                        } else {
                            // 0x180013fff
                            v44 = a1;
                            if ((int32_t)v25 < 1) {
                                goto lab_0x180014075;
                            } else {
                                // 0x180014019
                                v41 = *v1;
                                v43 = a1;
                                v42 = 0;
                                goto lab_0x180014019_2;
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x180014075:;
    // 0x180014075
    int32_t v51; // 0x180013c40
    if (v51 == 0) {
        goto lab_0x18001407f;
    } else {
        goto lab_0x18001407f;
    }
  lab_0x18001407f:;
    int64_t v52 = 0x100000000 * v25 >> 32; // 0x180014082
    int64_t v53 = v44; // 0x180014088
    int64_t v54; // 0x180013c40
    int64_t v55; // 0x180013c40
    int64_t v56; // 0x180013c40
    int64_t v57; // 0x180013c40
    if ((int32_t)v25 < 1) {
        goto lab_0x18001418f;
    } else {
        // 0x18001408a
        v57 = v44;
        v56 = 0;
        int64_t v58; // bp-252, 0x180013c40
        v54 = &v58;
        v55 = 0;
        goto lab_0x180014095;
    }
  lab_0x180014019_2:;
    uint32_t v59 = v41; // 0x180014019
    int32_t v60 = v59 + 4; // 0x18001401c
    int64_t v61; // 0x180013c40
    if (v60 > *v3) {
        goto lab_0x1800145c7;
    } else {
        // 0x180014028
        *v1 = v60;
        v61 = v43;
        if (*v6 == 0) {
            goto lab_0x180014066;
        } else {
            uint32_t v62 = *(int32_t *)((int64_t)v59 + a1); // 0x180014032
            v61 = 256 * (int64_t)v62 & 0xff0000;
            goto lab_0x180014066;
        }
    }
  lab_0x18001418f:
    // 0x18001418f
    if (v51 == 0) {
        goto lab_0x180014199;
    } else {
        goto lab_0x180014199;
    }
  lab_0x180014199:;
    int64_t v63; // 0x180013c40
    int64_t v64; // 0x180013c40
    int64_t v65; // 0x180013c40
    if ((int32_t)v25 < 1) {
        int32_t v66 = *v6 == 0 ? v46 : llvm_bswap_i32(v46);
        int32_t v67 = (v66 == 0 ? 0 : v45) + v66;
        if (v67 == 0) {
            goto lab_0x1800145c7;
        } else {
            // 0x18001425f
            *v1 = v67;
            goto lab_0x1800145c7;
        }
    } else {
        // 0x1800141a1
        v65 = 0;
        int64_t v68; // bp-244, 0x180013c40
        v63 = &v68;
        v64 = 0;
        goto lab_0x1800141b0;
    }
  lab_0x180014095:;
    int64_t v69; // 0x180013c40
    int32_t v70; // 0x180013c40
    int64_t v71; // 0x1800140d0
    if (v44 == 0) {
        goto lab_0x1800145c7;
    } else {
        uint32_t v72 = *v1; // 0x18001409e
        uint32_t v73 = v72 + 4; // 0x1800140a1
        if (v73 > *v3) {
            goto lab_0x1800145c7;
        } else {
            // 0x1800140ad
            v69 = v54;
            *v1 = v73;
            uint32_t v74 = *(int32_t *)(v44 + (int64_t)v72); // 0x1800140b7
            v71 = v57;
            v70 = v74;
            if (*v6 == 0) {
                goto lab_0x1800140eb;
            } else {
                // 0x1800140c1
                v71 = 256 * (int64_t)v74 & 0xff0000;
                v70 = 0x1000000 * v74 | v74 / 0x1000000 | v74 / 256 & 0xff00 | (int32_t)v71;
                goto lab_0x1800140eb;
            }
        }
    }
  lab_0x180014066:;
    int64_t v75 = v42 + 1 & 0xffffffff; // 0x18001406d
    v41 = v60;
    v43 = v61;
    v42 = v75;
    v44 = v61;
    if (v75 < v25) {
        goto lab_0x180014019_2;
    } else {
        goto lab_0x180014075;
    }
  lab_0x1800141b0:;
    int64_t v76; // 0x180013c40
    if (v53 == 0) {
        goto lab_0x1800145c7;
    } else {
        uint32_t v77 = *v1; // 0x1800141b9
        uint32_t v78 = v77 + 4; // 0x1800141bc
        if (v78 > *v3) {
            goto lab_0x1800145c7;
        } else {
            // 0x1800141c8
            v76 = v63;
            *v1 = v78;
            if (v15 > (int32_t)v65) {
                int32_t v79 = *(int32_t *)(v53 + (int64_t)v77); // 0x1800141d2
                *(int32_t *)v76 = *v6 == 0 ? v79 : llvm_bswap_i32(v79);
                goto lab_0x180014210;
            } else {
                goto lab_0x180014210;
            }
        }
    }
  lab_0x1800140eb:;
    int64_t v80 = v71;
    if (v15 > (int32_t)v56) {
        // 0x1800140f2
        *(int32_t *)v69 = v70;
        goto lab_0x1800140f5;
    } else {
        goto lab_0x1800140f5;
    }
  lab_0x1800140f5:;
    int64_t v81 = v55 + 1; // 0x1800140f8
    v57 = v80;
    v56 = v56 + 1 & 0xffffffff;
    v54 = v69 + 16;
    v55 = v81;
    int64_t v82; // 0x180013c40
    int64_t v83; // 0x180013c40
    int64_t v84; // 0x180013c40
    int64_t v85; // 0x180013c40
    if (v81 < v52) {
        goto lab_0x180014095;
    } else {
        // 0x180014116
        v85 = v80;
        v84 = 0;
        int64_t v86; // bp-248, 0x180013c40
        v82 = &v86;
        v83 = 0;
        goto lab_0x180014120;
    }
  lab_0x180014210:;
    int64_t v87 = v64 + 1; // 0x180014213
    v65 = v65 + 1 & 0xffffffff;
    v63 = v76 + 16;
    v64 = v87;
    if (v87 < v52) {
        goto lab_0x1800141b0;
    } else {
        goto lab_0x1800145c7;
    }
  lab_0x180014120:;
    int64_t v88; // 0x180013c40
    int32_t v89; // 0x180013c40
    int64_t v90; // 0x18001415b
    if (v80 == 0) {
        goto lab_0x1800145c7;
    } else {
        uint32_t v91 = *v1; // 0x180014129
        uint32_t v92 = v91 + 4; // 0x18001412c
        if (v92 > *v3) {
            goto lab_0x1800145c7;
        } else {
            // 0x180014138
            v88 = v82;
            *v1 = v92;
            uint32_t v93 = *(int32_t *)(v80 + (int64_t)v91); // 0x180014142
            v90 = v85;
            v89 = v93;
            if (*v6 == 0) {
                goto lab_0x180014176;
            } else {
                // 0x18001414c
                v90 = 256 * (int64_t)v93 & 0xff0000;
                v89 = 0x1000000 * v93 | v93 / 0x1000000 | v93 / 256 & 0xff00 | (int32_t)v90;
                goto lab_0x180014176;
            }
        }
    }
  lab_0x180014176:
    // 0x180014176
    if (v15 > (int32_t)v84) {
        // 0x18001417d
        *(int32_t *)v88 = v89;
        goto lab_0x180014180;
    } else {
        goto lab_0x180014180;
    }
  lab_0x180014180:;
    int64_t v94 = v83 + 1; // 0x180014183
    v85 = v90;
    v84 = v84 + 1 & 0xffffffff;
    v82 = v88 + 16;
    v83 = v94;
    v53 = v90;
    if (v94 < v52) {
        goto lab_0x180014120;
    } else {
        goto lab_0x18001418f;
    }
}

// Address range: 0x180014610 - 0x180014811
int64_t function_180014610(int64_t a1, int64_t a2, uint32_t a3) {
    // 0x180014610
    if (a3 == 0) {
        // 0x1800147e8
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180014643
    *v1 = a3;
    int64_t v2; // bp-568, 0x180014610
    memset(&v2, 0, 260);
    int64_t v3; // bp-296, 0x180014610
    memset(&v3, 0, 260);
    uint32_t v4 = *(int32_t *)(a1 + 12); // 0x180014679
    uint32_t v5 = a3 + 4; // 0x18001467d
    if (v4 < v5) {
        // 0x1800147e8
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v6 = *(int32_t *)(a1 + 16); // 0x180014689
    *v1 = v5;
    uint32_t v7 = a3 + 8;
    if (v7 > v4) {
        // 0x1800147e8
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v8 = &v3; // 0x18001465a
    int32_t v9 = *(int32_t *)(v8 + (int64_t)a3); // 0x180014693
    *v1 = v7;
    uint32_t v10 = a3 + 12; // 0x1800146c0
    if (v10 > v4) {
        // 0x1800147e8
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v11 = *(int32_t *)(v8 + (int64_t)v5); // 0x1800146b5
    *v1 = v10;
    uint32_t v12 = a3 + 16; // 0x1800146f3
    if (v12 > v4) {
        // 0x1800147e8
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v13 = v6 == 0 ? v9 : llvm_bswap_i32(v9);
    uint32_t v14 = v6 == 0 ? v11 : llvm_bswap_i32(v11);
    int32_t v15 = *(int32_t *)(v8 + (int64_t)v7); // 0x1800146e8
    *v1 = v12;
    int32_t v16 = *(int32_t *)(v8 + (int64_t)v10); // 0x18001470a
    function_180005050(a1, (int64_t)v13, &v2);
    function_180005050(a1, (int64_t)v14, &v3);
    int64_t v17 = function_180001a00(&g31); // 0x180014747
    if (v17 != 0) {
        int64_t v18 = &v2; // 0x180014754
        int64_t v19 = v18; // 0x180014768
        char v20 = *(char *)v19; // 0x180014770
        *(char *)(v17 - v18 + v19) = v20;
        v19++;
        while (v20 != 0) {
            // 0x180014770
            v20 = *(char *)v19;
            *(char *)(v17 - v18 + v19) = v20;
            v19++;
        }
        int64_t v21 = v8; // 0x18001479c
        char v22 = *(char *)v21; // 0x1800147a0
        *(char *)(260 - v8 + v17 + v21) = v22;
        v21++;
        while (v22 != 0) {
            // 0x1800147a0
            v22 = *(char *)v21;
            *(char *)(260 - v8 + v17 + v21) = v22;
            v21++;
        }
        // 0x1800147ae
        *(int32_t *)(v17 + 1300) = -1;
    }
    uint32_t v23 = v6 == 0 ? v15 : llvm_bswap_i32(v15);
    uint32_t v24 = v6 == 0 ? v16 : llvm_bswap_i32(v16);
    uint32_t v25 = v24 == 0 ? 0 : v10;
    g43 = 0;
    function_180014820(a1, 0, (int64_t)v25 + (int64_t)v24 & 0xffffffff, (int64_t)v23);
    // 0x1800147e8
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180014820 - 0x180014c56
int64_t function_180014820(int64_t a1, int32_t a2, int64_t a3, int64_t a4) {
    uint32_t v1 = (int32_t)a3; // 0x18001484f
    if (v1 < 100) {
        // 0x180014c39
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 12); // 0x180014864
    if (*v2 <= v1) {
        // 0x180014c39
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x18001486a
    *v3 = v1;
    uint32_t v4 = (int32_t)a4; // 0x180014892
    if (v4 == 0) {
        // 0x180014c39
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800148a0
    int64_t v5; // bp-312, 0x180014820
    int64_t v6 = &v5;
    int32_t * v7 = (int32_t *)(a1 + 16);
    int64_t v8; // bp-856, 0x180014820
    int64_t v9 = &v8;
    int64_t v10; // bp-584, 0x180014820
    int64_t v11 = &v10;
    int32_t v12 = 0; // 0x180014c14
    memset(&v8, 0, 260);
    memset(&v10, 0, 260);
    memset(&v5, 0, 260);
    uint32_t v13 = *v3; // 0x1800148e5
    uint32_t v14 = *v2; // 0x1800148e8
    uint32_t v15 = v13 + 4; // 0x1800148ec
    while (v15 <= v14) {
        // 0x1800148f8
        *v3 = v15;
        uint32_t v16 = v13 + 8; // 0x180014913
        if (v16 > v14) {
            // break -> 0x180014c39
            break;
        }
        int32_t v17 = *v7; // 0x180014900
        int32_t v18 = *(int32_t *)((int64_t)v13 + v6); // 0x180014908
        *v3 = v16;
        uint32_t v19 = v13 + 12; // 0x180014937
        if (v19 > v14) {
            // break -> 0x180014c39
            break;
        }
        uint32_t v20 = v17 == 0 ? v18 : llvm_bswap_i32(v18);
        int32_t v21 = *(int32_t *)((int64_t)v15 + v6); // 0x18001492c
        uint32_t v22 = v17 == 0 ? v21 : llvm_bswap_i32(v21);
        *v3 = v19;
        int32_t v23 = *(int32_t *)((int64_t)v16 + v6); // 0x18001494e
        uint32_t v24 = v17 == 0 ? v23 : llvm_bswap_i32(v23);
        function_180005050(a1, (int64_t)v20, &v8);
        function_180005050(a1, (int64_t)v22, &v10);
        function_180005050(a1, (int64_t)v24, &v5);
        int64_t v25 = 0; // bp-912, 0x180014991
        int128_t v26 = 0; // bp-880, 0x1800149a1
        int32_t v27 = 0; // bp-896, 0x1800149b3
        if ((int32_t)function_18001d5c0(a1, &v25) == 0) {
            // break -> 0x180014c39
            break;
        }
        // 0x1800149c8
        if ((int32_t)function_18001d710(a1, (int64_t *)&v26) == 0) {
            // break -> 0x180014c39
            break;
        }
        // 0x1800149dd
        if (a1 == 0 | (int32_t)function_18001d5c0(a1, (int64_t *)&v27) == 0) {
            // break -> 0x180014c39
            break;
        }
        uint32_t v28 = *v3 + 4; // 0x1800149ff
        if (v28 > *v2) {
            // break -> 0x180014c39
            break;
        }
        // 0x180014a21
        *v3 = v28;
        g43++;
        uint32_t v29 = *v3; // 0x180014a21
        uint32_t v30 = *v2; // 0x180014a24
        uint32_t v31 = v29 + 4; // 0x180014a27
        if (v31 > v30) {
            // break -> 0x180014c39
            break;
        }
        // 0x180014a32
        *v3 = v31;
        uint32_t v32 = v29 + 8; // 0x180014a5a
        if (v32 > v30) {
            // break -> 0x180014c39
            break;
        }
        int32_t v33 = *v7; // 0x180014a3a
        int32_t v34 = *(int32_t *)((int64_t)v29 + a1); // 0x180014a47
        *v3 = v32;
        uint32_t v35 = v29 + 12; // 0x180014a85
        if (v35 > v30) {
            // break -> 0x180014c39
            break;
        }
        int32_t v36 = *(int32_t *)((int64_t)v31 + a1); // 0x180014a72
        *v3 = v35;
        uint32_t v37 = v29 + 16; // 0x180014a9c
        if (v37 > v30) {
            // break -> 0x180014c39
            break;
        }
        // 0x180014aa7
        *v3 = v37;
        uint32_t v38 = v29 + 20; // 0x180014ac6
        if (v38 > v30) {
            // break -> 0x180014c39
            break;
        }
        // 0x180014ad2
        *v3 = v38;
        uint32_t v39 = v29 + 24; // 0x180014ad9
        if (v39 > v30) {
            // break -> 0x180014c39
            break;
        }
        // 0x180014ae4
        *v3 = v39;
        int64_t v40 = function_180001a00(&g31); // 0x180014aef
        if (v40 != 0) {
            int64_t v41 = v9; // 0x180014b0e
            char v42 = *(char *)v41; // 0x180014b10
            *(char *)(v40 - v9 + v41) = v42;
            v41++;
            while (v42 != 0) {
                // 0x180014b10
                v42 = *(char *)v41;
                *(char *)(v40 - v9 + v41) = v42;
                v41++;
            }
            int64_t v43 = v11; // 0x180014b37
            char v44 = *(char *)v43; // 0x180014b40
            *(char *)(260 - v11 + v40 + v43) = v44;
            v43++;
            while (v44 != 0) {
                // 0x180014b40
                v44 = *(char *)v43;
                *(char *)(260 - v11 + v40 + v43) = v44;
                v43++;
            }
            int64_t v45 = v6; // 0x180014b66
            char v46 = *(char *)v45; // 0x180014b70
            *(char *)(520 - v6 + v40 + v45) = v46;
            v45++;
            while (v46 != 0) {
                // 0x180014b70
                v46 = *(char *)v45;
                *(char *)(520 - v6 + v40 + v45) = v46;
                v45++;
            }
            // 0x180014b82
            *(int64_t *)(v40 + 1312) = __asm_movsd_5(__asm_movsd(v25));
            int128_t v47 = __asm_movups(0); // 0x180014b94
            *(int32_t *)(v40 + 1300) = g39 - 1;
            __asm_movups_4(*(int128_t *)(v40 + 1336), v47);
            *(int64_t *)(v40 + 1324) = __asm_movsd_5(__asm_movsd((int64_t)v27));
        }
        uint32_t v48 = v33 == 0 ? v34 : llvm_bswap_i32(v34);
        int32_t v49 = v33 == 0 ? v36 : llvm_bswap_i32(v36);
        uint32_t v50 = v49 == 0 ? 0 : v49 + v31; // 0x180014be5
        function_180014820(a1, a2 + 1, (int64_t)v50, (int64_t)v48);
        function_180014c60(a1, v40);
        v12++;
        if (v12 >= v4) {
            // break -> 0x180014c39
            break;
        }
        memset(&v8, 0, 260);
        memset(&v10, 0, 260);
        memset(&v5, 0, 260);
        v13 = *v3;
        v14 = *v2;
        v15 = v13 + 4;
    }
    // 0x180014c39
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180014c60 - 0x180014d32
int64_t function_180014c60(int64_t a1, int64_t a2) {
    // 0x180014c60
    int64_t v1; // 0x180014c60
    uint32_t v2 = (int32_t)v1; // 0x180014c70
    if (v2 < 100) {
        // 0x180014d15
        return 1;
    }
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x180014c83
    if (*v3 <= v2) {
        // 0x180014d15
        return 1;
    }
    int32_t * v4 = (int32_t *)(a1 + 8); // 0x180014c8d
    *v4 = v2;
    g43++;
    if (a1 == 0) {
        // 0x180014d15
        return 0;
    }
    uint32_t v5 = *v4; // 0x180014ca3
    uint32_t v6 = *v3; // 0x180014ca7
    uint32_t v7 = v5 + 4; // 0x180014cab
    if (v7 > v6) {
        // 0x180014d15
        return 0;
    }
    // 0x180014cb4
    *v4 = v7;
    int32_t v8 = *(int32_t *)((int64_t)v5 + a1); // 0x180014cc0
    uint32_t v9 = v5 + 8;
    int64_t result = 0; // 0x180014cd2
    if (v9 <= v6) {
        int32_t v10 = *(int32_t *)(a1 + 16) == 0 ? v8 : llvm_bswap_i32(v8);
        *v4 = v9;
        *(int32_t *)(a2 + 1304) = v10;
        function_180014d40(a1, a2);
        result = 1;
    }
    // 0x180014d15
    return result;
}

// Address range: 0x180014d40 - 0x180014f0b
int64_t function_180014d40(int64_t a1, int64_t a2) {
    // 0x180014d40
    int64_t v1; // 0x180014d40
    uint32_t v2 = (int32_t)v1;
    if (v2 < 100) {
        // 0x180014eec
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x180014d85
    uint32_t v4 = *v3; // 0x180014d85
    if (v4 <= v2) {
        // 0x180014eec
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v5 = (int32_t *)(a1 + 8); // 0x180014d98
    *v5 = v2;
    int32_t v6; // 0x180014d40
    if (v6 != 3) {
        // 0x180014eec
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180014da1
    int64_t v7; // bp-584, 0x180014d40
    memset(&v7, 0, 260);
    uint32_t v8 = v2 + 4; // 0x180014dc2
    if (v4 < v8) {
        // 0x180014eec
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v9 = *(int32_t *)(a1 + 16); // 0x180014dca
    *v5 = v8;
    uint32_t v10 = v2 + 8; // 0x180014de0
    if (v10 > v4) {
        // 0x180014eec
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v11 = &v7; // 0x180014da3
    int32_t v12 = *(int32_t *)((v1 & 0xffffffff) + v11); // 0x180014dd4
    *v5 = v10;
    uint32_t v13 = v2 + 12; // 0x180014e01
    if (v13 > v4) {
        // 0x180014eec
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v14 = v9 == 0 ? v12 : llvm_bswap_i32(v12);
    int32_t v15 = *(int32_t *)(v11 + (int64_t)v8); // 0x180014df7
    uint32_t v16 = v9 == 0 ? v15 : llvm_bswap_i32(v15);
    *v5 = v13;
    int32_t v17 = *(int32_t *)(v11 + (int64_t)v10); // 0x180014e17
    uint32_t v18 = v9 == 0 ? v17 : llvm_bswap_i32(v17);
    int64_t v19; // bp-312, 0x180014d40
    function_180005050(a1, (int64_t)v14, &v19);
    function_180005050(a1, (int64_t)v16, &v7);
    function_180005050(a1, (int64_t)v18, &v19);
    if (a1 == 0) {
        // 0x180014eec
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v20 = *v5; // 0x180014e5e
    uint32_t v21 = *v3; // 0x180014e61
    uint32_t v22 = v20 + 4; // 0x180014e64
    if (v22 > v21) {
        // 0x180014eec
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180014e6f
    *v5 = v22;
    uint32_t v23 = v20 + 8; // 0x180014e77
    if (v23 > v21) {
        // 0x180014eec
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180014e83
    *v5 = v23;
    int64_t v24 = v11; // 0x180014eaa
    char v25 = *(char *)v24; // 0x180014eb0
    *(char *)(a2 + 780 - v11 + v24) = v25;
    v24++;
    while (v25 != 0) {
        // 0x180014eb0
        v25 = *(char *)v24;
        *(char *)(a2 + 780 - v11 + v24) = v25;
        v24++;
    }
    // 0x180014ec3
    function_180009870(a1, a2);
    // 0x180014eec
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180014f10 - 0x1800150ed
int64_t function_180014f10(int64_t a1, int64_t a2, int32_t a3, int64_t a4) {
    // 0x180014f10
    if (a3 == 0) {
        // 0x1800150ca
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180014f46
    *v1 = a3;
    uint32_t v2 = (int32_t)a2; // 0x180014f49
    if (v2 == 0) {
        // 0x180014fbf
        *v1 = a3;
        // 0x1800150ca
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 12);
    int32_t * v4 = (int32_t *)(a1 + 16);
    int64_t v5 = 0; // 0x180014f10
    int32_t v6; // 0x180014f10
    int64_t v7; // 0x180014f10
    while (a1 != 0) {
        int32_t v8 = *v1; // 0x180014f5c
        uint32_t v9 = *v3; // 0x180014f5f
        uint32_t v10 = v8 + 4; // 0x180014f63
        if (v10 > v9) {
            // break -> 0x1800150ca
            break;
        }
        // 0x180014f6f
        *v1 = v10;
        uint32_t v11 = v8 + 8; // 0x180014f76
        if (v11 > v9) {
            // break -> 0x1800150ca
            break;
        }
        // 0x180014f82
        *v1 = v11;
        uint32_t v12 = v8 + 12; // 0x180014f99
        if (v12 > v9) {
            // break -> 0x1800150ca
            break;
        }
        int32_t v13 = *(int32_t *)((int64_t)v10 + a1); // 0x180014f92
        uint32_t v14 = *v4 == 0 ? v13 : llvm_bswap_i32(v13);
        *v1 = v12;
        int64_t v15; // bp-312, 0x180014f10
        function_180005050(a1, (int64_t)v14, &v15);
        int64_t v16 = v5 + 1; // 0x180014fb7
        v5 = v16 & 0xffffffff;
        if ((int32_t)v16 >= v2) {
            // 0x180014fbf
            *v1 = a3;
            v6 = a3;
            v7 = 0;
            goto lab_0x180014fec;
        }
    }
  lab_0x1800150ca:
    // 0x1800150ca
    __security_check_cookie(g17);
    return &g47;
  lab_0x180014fec:;
    uint32_t v17 = *v3; // 0x180014fef
    uint32_t v18 = v6 + 4; // 0x180014ff3
    int32_t v19; // 0x180014f10
    int32_t v20; // 0x180014f10
    int64_t v21; // 0x180014f10
    int32_t v22; // 0x18001502d
    if (v18 > v17) {
        goto lab_0x1800150ca;
    } else {
        // 0x180014fff
        *v1 = v18;
        uint32_t v23 = v6 + 8; // 0x180015006
        if (v23 > v17) {
            goto lab_0x1800150ca;
        } else {
            // 0x180015012
            *v1 = v23;
            v22 = v6 + 12;
            if (v22 > v17) {
                goto lab_0x1800150ca;
            } else {
                int32_t v24 = *(int32_t *)((int64_t)v18 + a1); // 0x180015022
                int32_t v25 = *v4 == 0 ? v24 : llvm_bswap_i32(v24);
                *v1 = v22;
                v20 = v22;
                if (v25 < 101) {
                    goto lab_0x18001508e;
                } else {
                    // 0x180015055
                    *v1 = v25;
                    v19 = v25;
                    v21 = 0;
                    goto lab_0x180015060;
                }
            }
        }
    }
  lab_0x18001508e:
    // 0x18001508e
    if ((int32_t)function_1800150f0(a1) == 0) {
        goto lab_0x1800150ca;
    } else {
        int64_t v26 = v7 + 1; // 0x1800150a8
        *v1 = v20;
        v6 = v20;
        v7 = v26 & 0xffffffff;
        if ((int32_t)v26 < v2) {
            goto lab_0x180014fec;
        } else {
            goto lab_0x1800150ca;
        }
    }
  lab_0x180015060:;
    int32_t v27 = v19; // 0x180015060
    int32_t v28 = v27 + 1; // 0x180015063
    v20 = v27;
    if (v28 > v17) {
        goto lab_0x18001508e;
    } else {
        // 0x18001506a
        *v1 = v28;
        int64_t v29 = v21 + 1; // 0x18001506d
        char v30 = *(char *)((int64_t)v27 + a1); // 0x180015075
        v19 = v28;
        v21 = v29;
        if (v30 != 0) {
            goto lab_0x180015060;
        } else {
            if (v29 > 259) {
                // 0x18001508b
                *v1 = v22;
                v20 = v22;
                goto lab_0x18001508e;
            } else {
                // 0x180015087
                int64_t v31; // bp-344, 0x180014f10
                *(char *)((int64_t)&v31 + 32 + v29) = v30;
                // 0x18001508b
                *v1 = v22;
                v20 = v22;
                goto lab_0x18001508e;
            }
        }
    }
}

// Address range: 0x1800150f0 - 0x180015695
int64_t function_1800150f0(int64_t a1) {
    // 0x1800150f0
    int64_t v1; // 0x1800150f0
    int32_t v2 = v1;
    if (v2 == 0) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x180015127
    *v3 = v2;
    if (a1 == 0) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v4 = (int32_t *)(a1 + 12); // 0x180015134
    uint32_t v5 = *v4; // 0x180015134
    uint32_t v6 = v2 + 4; // 0x18001513c
    if (v5 < v6) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v7 = (int32_t *)(a1 + 16); // 0x18001514a
    int32_t v8 = *v7; // 0x18001514a
    *v3 = v6;
    uint32_t v9 = v2 + 8; // 0x18001516e
    if (v9 > v5) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v10 = *(int32_t *)((v1 & 0xffffffff) + a1); // 0x18001515e
    *v3 = v9;
    int32_t v11 = *(int32_t *)((int64_t)v6 + a1); // 0x180015189
    int128_t v12 = __asm_movaps(g8); // 0x180015193
    int128_t v13 = __asm_movaps(g9); // 0x18001519f
    int64_t v14 = __asm_movaps_9(v12); // bp-392, 0x1800151a6
    int128_t v15 = __asm_movaps(g10); // 0x1800151ab
    __asm_movaps_9(v13);
    int128_t v16 = __asm_movaps(g12); // 0x1800151b6
    __asm_movaps_9(v15);
    __asm_movaps_9(v16);
    if ((int32_t)function_18001d8d0(a1, (int128_t *)&v14) == 0) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v17 = *v3; // 0x1800151de
    uint32_t v18 = *v4; // 0x1800151e1
    uint32_t v19 = v17 + 4; // 0x1800151e5
    if (v19 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800151f1
    *v3 = v19;
    uint32_t v20 = v17 + 8; // 0x18001520d
    if (v20 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v21 = *v7; // 0x1800151f9
    int32_t v22 = *(int32_t *)((int64_t)v17 + a1); // 0x180015201
    *v3 = v20;
    uint32_t v23 = v17 + 12; // 0x18001523f
    if (v23 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v24 = *(int32_t *)((int64_t)v19 + a1); // 0x180015233
    *v3 = v23;
    uint32_t v25 = v17 + 16; // 0x18001526a
    if (v25 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v26 = *(int32_t *)((int64_t)v20 + a1); // 0x180015258
    *v3 = v25;
    uint32_t v27 = v17 + 20; // 0x18001529c
    if (v27 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v28 = *(int32_t *)((int64_t)v23 + a1); // 0x180015290
    *v3 = v27;
    uint32_t v29 = v17 + 24; // 0x1800152c7
    if (v29 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v30 = *(int32_t *)((int64_t)v25 + a1); // 0x1800152b5
    *v3 = v29;
    uint32_t v31 = v17 + 28; // 0x1800152df
    if (v31 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800152eb
    *v3 = v31;
    uint32_t v32 = v17 + 32; // 0x180015309
    if (v32 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v33 = *(int32_t *)((int64_t)v29 + a1); // 0x1800152f7
    *v3 = v32;
    uint32_t v34 = v17 + 36; // 0x18001533b
    if (v34 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v35 = *(int32_t *)((int64_t)v31 + a1); // 0x18001532f
    *v3 = v34;
    uint32_t v36 = v17 + 40; // 0x180015366
    if (v36 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v37 = *(int32_t *)((int64_t)v32 + a1); // 0x18001535c
    *v3 = v36;
    uint32_t v38 = v17 + 44; // 0x18001537a
    if (v38 > v18) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v39 = v8 == 0 ? v11 : llvm_bswap_i32(v11);
    uint32_t v40 = v21 == 0 ? v22 : llvm_bswap_i32(v22);
    *v3 = v38;
    int64_t v41; // bp-328, 0x1800150f0
    function_180005050(a1, (int64_t)v40, &v41);
    int32_t v42 = v39 + v6; // 0x1800153aa
    if (v39 != 0 && v42 != 0) {
        uint32_t v43 = v8 == 0 ? v10 : llvm_bswap_i32(v10);
        *v3 = v42;
        int64_t v44 = 0; // 0x180015403
        if (v43 >= 16) {
            int128_t v45 = __asm_movaps(g8); // 0x180015410
            int128_t v46 = __asm_movaps(g9); // 0x18001541c
            v14 = __asm_movaps_9(v45);
            int128_t v47 = __asm_movaps(g10); // 0x18001542b
            __asm_movaps_9(v46);
            int128_t v48 = __asm_movaps(g12); // 0x180015436
            __asm_movaps_9(v47);
            __asm_movaps_9(v48);
            while ((int32_t)function_18001d8d0(a1, (int128_t *)&v14) != 0) {
                int64_t v49 = v44 + 1; // 0x180015452
                v44 = v49 & 0xffffffff;
                if (v43 / 16 <= (int32_t)v49) {
                    goto lab_0x18001545d;
                }
                v45 = __asm_movaps(g8);
                v46 = __asm_movaps(g9);
                v14 = __asm_movaps_9(v45);
                v47 = __asm_movaps(g10);
                __asm_movaps_9(v46);
                v48 = __asm_movaps(g12);
                __asm_movaps_9(v47);
                __asm_movaps_9(v48);
            }
            // 0x180015660
            __security_check_cookie(g17);
            return &g47;
        }
    }
  lab_0x18001545d:;
    int32_t v50 = v21 == 0 ? v26 : llvm_bswap_i32(v26);
    uint32_t v51 = v50 == 0 ? 0 : v50 + v20; // 0x1800153b7
    int64_t v52 = 0; // 0x18001545f
    if (v51 != 0) {
        uint32_t v53 = v21 == 0 ? v24 : llvm_bswap_i32(v24);
        int64_t v54 = v51; // 0x1800153b7
        *v3 = v51;
        int64_t v55 = v54; // 0x18001546a
        int64_t v56 = 0; // 0x18001546a
        v52 = v54;
        if (v53 != 0) {
            while (v55 != 0) {
                uint32_t v57 = *v3; // 0x18001547c
                uint32_t v58 = v57 + 4; // 0x18001547f
                if (v58 > *v4) {
                    // break -> 0x180015660
                    break;
                }
                // 0x18001548b
                *v3 = v58;
                int32_t v59 = *(int32_t *)(v55 + (int64_t)v57); // 0x180015495
                uint32_t v60 = *v7 == 0 ? v59 : llvm_bswap_i32(v59);
                function_180005050(a1, (int64_t)v60, &v41);
                int64_t v61 = v56 + 1; // 0x1800154ab
                v55 = a1;
                v56 = v61 & 0xffffffff;
                v52 = a1;
                if (v53 <= (int32_t)v61) {
                    goto lab_0x1800154b3;
                }
            }
            // 0x180015660
            __security_check_cookie(g17);
            return &g47;
        }
    }
  lab_0x1800154b3:;
    int32_t v62 = v21 == 0 ? v30 : llvm_bswap_i32(v30);
    int32_t v63 = v62 == 0 ? 0 : v62 + v25; // 0x1800153c6
    int64_t v64 = v52; // 0x1800154b9
    int64_t v65; // bp-440, 0x1800150f0
    if (v63 != 0) {
        uint32_t v66 = v21 == 0 ? v28 : llvm_bswap_i32(v28);
        *v3 = v63;
        int64_t v67 = 0; // 0x1800154c4
        v64 = v52;
        if (v66 != 0) {
            v65 = 0;
            while ((int32_t)function_18001d5c0(a1, &v65) != 0) {
                int64_t v68 = v67 + 1; // 0x1800154ee
                v67 = v68 & 0xffffffff;
                v64 = a1;
                if (v66 <= (int32_t)v68) {
                    goto lab_0x1800154f6;
                }
                v65 = 0;
            }
            // 0x180015660
            __security_check_cookie(g17);
            return &g47;
        }
    }
  lab_0x1800154f6:;
    int32_t v69 = v21 == 0 ? v33 : llvm_bswap_i32(v33);
    uint32_t v70 = v69 == 0 ? 0 : v69 + v29; // 0x1800153d9
    int32_t v71; // 0x1800150f0
    int64_t v72; // 0x1800150f0
    uint32_t v73; // 0x180015511
    int64_t v74; // 0x180015587
    if (v70 != 0) {
        // 0x180015502
        *v3 = v70;
        if (v64 == 0) {
            // 0x180015660
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x180015511
        v73 = *v4;
        uint32_t v75 = v70 + 4; // 0x180015515
        if (v73 < v75) {
            // 0x180015660
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v76 = *v7; // 0x180015521
        *v3 = v75;
        int32_t v77 = v70 + 8;
        if (v77 > v73) {
            // 0x180015660
            __security_check_cookie(g17);
            return &g47;
        }
        int32_t v78 = *(int32_t *)(v64 + (int64_t)v70); // 0x18001552b
        uint32_t v79 = v76 == 0 ? v78 : llvm_bswap_i32(v78);
        *v3 = v77;
        int32_t v80 = v77; // 0x18001554e
        int64_t v81 = 0; // 0x18001554e
        int64_t v82 = 0; // 0x18001554e
        if (v79 != 0) {
            while (v80 + 4 <= v73) {
                // 0x18001555f
                *v3 = v80 + 4;
                int32_t v83 = v80 + 8; // 0x180015576
                if (v83 > v73) {
                    // break -> 0x180015660
                    break;
                }
                int32_t v84 = *(int32_t *)(v64 + (int64_t)v80); // 0x18001556b
                uint32_t v85 = v76 == 0 ? v84 : llvm_bswap_i32(v84);
                *v3 = v83;
                int64_t v86 = v81 + (int64_t)v85; // 0x180015587
                v74 = v86 & 0xffffffff;
                int64_t v87 = v82 + 1; // 0x18001558a
                v80 = v83;
                v81 = v74;
                v82 = v87 & 0xffffffff;
                if (v79 <= (int32_t)v87) {
                    // 0x180015592
                    v71 = v83;
                    v72 = 0;
                    if ((int32_t)v86 < 1) {
                        goto lab_0x1800155cd;
                    } else {
                        goto lab_0x1800155a0;
                    }
                }
            }
            // 0x180015660
            __security_check_cookie(g17);
            return &g47;
        }
    }
    goto lab_0x1800155cd;
  lab_0x1800155cd:;
    int32_t v88 = v21 == 0 ? v37 : llvm_bswap_i32(v37);
    int32_t v89 = v88 == 0 ? 0 : v88 + v32; // 0x1800153e8
    if (v89 == 0) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v90 = v21 == 0 ? v35 : llvm_bswap_i32(v35);
    *v3 = v89;
    if (v90 == 0) {
        // 0x180015660
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v91 = 0; // 0x1800150f0
    v65 = 0;
    int32_t v92 = 0; // bp-416, 0x180015602
    while ((int32_t)function_18001d5c0(a1, &v65) != 0) {
        // 0x180015613
        if ((int32_t)function_18001d5c0(a1, (int64_t *)&v92) == 0) {
            // break -> 0x180015660
            break;
        }
        int64_t v93 = v91 + 1; // 0x180015624
        v91 = v93 & 0xffffffff;
        if (v90 <= (int32_t)v93) {
            // break -> 0x180015660
            break;
        }
        v65 = 0;
        v92 = 0;
    }
  lab_0x180015660:
    // 0x180015660
    __security_check_cookie(g17);
    return &g47;
  lab_0x1800155a0:;
    uint32_t v94 = v71 + 4; // 0x1800155a3
    if (v94 > v73) {
        goto lab_0x180015660;
    } else {
        // 0x1800155af
        *v3 = v94;
        int32_t v95 = v71 + 8; // 0x1800155b6
        if (v95 > v73) {
            goto lab_0x180015660;
        } else {
            // 0x1800155c2
            *v3 = v95;
            int64_t v96 = v72 + 1 & 0xffffffff; // 0x1800155c6
            v71 = v95;
            v72 = v96;
            if (v96 < v74) {
                goto lab_0x1800155a0;
            } else {
                goto lab_0x1800155cd;
            }
        }
    }
}

// Address range: 0x1800156a0 - 0x1800156b0
int64_t function_1800156a0(int64_t result) {
    // 0x1800156a0
    *(int64_t *)result = 0;
    *(int64_t *)(result + 8) = 0;
    *(int32_t *)(result + 16) = 0;
    return result;
}

// Address range: 0x1800156b0 - 0x1800160d6
int64_t function_1800156b0(int64_t a1, int32_t * a2) {
    // 0x1800156b0
    int32_t v1; // 0x1800156b0
    int32_t v2 = v1;
    int32_t v3 = v1;
    if (a1 == 0) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v4 = (int32_t *)(a1 + 8); // 0x1800156e5
    int32_t v5 = *v4; // 0x1800156e5
    int32_t * v6 = (int32_t *)(a1 + 12); // 0x1800156e9
    uint32_t v7 = *v6; // 0x1800156e9
    uint32_t v8 = v5 + 4; // 0x1800156ec
    if (v8 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v9 = v5 + 8; // 0x1800156f9
    *v4 = v8;
    if (v9 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180015709
    *v4 = v9;
    uint32_t v10 = v5 + 12;
    if (v10 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001571d
    *v4 = v10;
    uint32_t v11 = v5 + 16; // 0x180015724
    if (v11 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v12 = (int64_t)a2;
    *v4 = v11;
    int32_t v13 = *(int32_t *)(v12 + 8); // 0x180015735
    if (v13 == 0) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v14 = v13 + 4; // 0x180015741
    *v4 = v13;
    if (v14 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180015753
    *v4 = v14;
    uint32_t v15 = v13 + 8; // 0x180015756
    if (v15 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v16 = v13 + 12; // 0x180015761
    *v4 = v15;
    if (v16 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001576f
    *v4 = v16;
    uint32_t v17 = v13 + 16; // 0x180015775
    if (v17 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180015780
    *v4 = v17;
    uint32_t v18 = v13 + 20; // 0x180015786
    if (v18 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180015791
    *v4 = v18;
    uint32_t v19 = v13 + 24; // 0x180015797
    if (v19 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800157a2
    *v4 = v19;
    uint32_t v20 = v13 + 28; // 0x1800157a8
    if (v20 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800157b3
    *v4 = v20;
    int32_t v21 = v13 + 32; // 0x1800157b9
    if (v21 > v7) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x1800157c4
    *v4 = v21;
    uint32_t v22 = *(int32_t *)(v12 + 16) - 4; // 0x1800157d5
    int32_t v23 = v21; // 0x1800157df
    int64_t v24 = 0; // 0x1800157df
    int32_t v25 = v21; // 0x1800157df
    if (v22 >= 1) {
        while (v23 + 4 <= v7) {
            // 0x1800157ec
            *v4 = v23 + 4;
            v23 += 8;
            if (v23 > v7) {
                // break -> 0x180015976
                break;
            }
            // 0x1800157fe
            v24 = v24 + 1 & 0xffffffff;
            *v4 = v23;
            v25 = v23;
            if (v24 >= (int64_t)v22) {
                goto lab_0x180015808;
            }
        }
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x180015808:;
    int32_t * v26 = (int32_t *)(v12 + 28); // 0x180015810
    uint32_t v27 = *v26; // 0x180015810
    int32_t v28; // 0x1800156b0
    if (v27 > v25) {
        // 0x180015820
        int64_t v29; // bp-760, 0x1800156b0
        int64_t v30 = (int64_t)&v29 - 128;
        v28 = v25;
        while (true) {
          lab_0x180015820:;
            uint32_t v31 = v28; // 0x18001582d
            int32_t v32 = v31 + 4; // 0x180015830
            if (v32 > *v6) {
                // break -> 0x180015976
                break;
            }
            // 0x18001583c
            *v4 = v32;
            int32_t v33 = *(int32_t *)((int64_t)v31 + a1); // 0x180015846
            uint32_t v34 = *(int32_t *)(a1 + 16) == 0 ? v33 : llvm_bswap_i32(v33);
            if (v34 == 0) {
                // 0x1800158a0
                *(char *)v30 = 0;
                goto lab_0x1800158a5;
            } else {
                int32_t v35 = v31 + 5; // 0x180015863
                if (v35 > *v6) {
                    // break -> 0x180015976
                    break;
                }
                int64_t v36 = 0;
                int64_t v37 = 0;
                *v4 = v35;
                char v38 = *(char *)((int64_t)v32 + a1); // 0x180015876
                if (v36 <= 259) {
                    // 0x180015884
                    *(char *)(v36 + v30) = v38;
                }
                int64_t v39 = v36; // 0x18001588a
                while (v38 != 0) {
                    int64_t v40 = v37 + 1; // 0x18001588c
                    int64_t v41 = v36 + 1; // 0x18001588f
                    v39 = v41;
                    if (v34 <= (int32_t)v40) {
                        // break -> 0x180015897
                        break;
                    }
                    int32_t v42 = *v4;
                    int32_t v43 = v42 + 1; // 0x180015863
                    if (v43 > *v6) {
                        // break (via goto) -> 0x180015976
                        goto lab_0x180015976;
                    }
                    v36 = v41;
                    v37 = v40 & 0xffffffff;
                    *v4 = v43;
                    v38 = *(char *)((int64_t)v42 + a1);
                    if (v36 <= 259) {
                        // 0x180015884
                        *(char *)(v36 + v30) = v38;
                    }
                    // 0x180015888
                    v39 = v36;
                }
                int64_t v44 = v39; // 0x18001589e
                if (v39 > 259) {
                    goto lab_0x1800158a5;
                } else {
                    // 0x1800158a0
                    *(char *)(v44 + v30) = 0;
                    goto lab_0x1800158a5;
                }
            }
        }
      lab_0x180015976:
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    goto lab_0x1800158bf_2;
  lab_0x1800158a5:;
    int32_t v81 = *v4; // 0x1800158a5
    int32_t v82 = v81 & -4; // 0x1800158aa
    int32_t v83 = (v81 & 3) == 0 ? v82 : v82 + 4;
    *v4 = v83;
    v28 = v83;
    if (v83 >= v27) {
        // 0x1800158bf
        goto lab_0x1800158bf_2;
    }
    goto lab_0x180015820;
  lab_0x1800158bf_2:;
    int32_t v45 = v27; // 0x1800158bf
    *v4 = v45 != 0 ? v45 : v25;
    int32_t v46 = *(int32_t *)&g31; // 0x1800158f2
    int32_t v47 = 0; // bp-968, 0x180015900
    int64_t v48; // 0x1800156b0
    int32_t v49; // 0x1800156b0
    int64_t v50; // 0x1800156b0
    if (v46 != 779) {
        if (v46 != 866) {
            if (v46 != 877) {
                if (((int32_t)&g25 < 23 || (int32_t)&g25 == 23) ^ true || (1 << ((int32_t)&g25 & 31) & 0x880081) == 0) {
                    if (v46 != 944) {
                        switch (v46) {
                            case 954: {
                                goto lab_0x180015a50;
                            }
                            case 946: {
                                goto lab_0x180015a50;
                            }
                            default: {
                                // 0x180015a6b
                                v49 = v46;
                                v50 = 0;
                                if (((int32_t)&g24 < 26 || (int32_t)&g24 == 26) ^ true || (1 << ((int32_t)&g24 & 31) & 0x4201207) == 0) {
                                    goto lab_0x180015fed;
                                } else {
                                    int32_t v51 = *v26; // 0x180015a88
                                    if (v51 == 0) {
                                        // 0x180015976
                                        __security_check_cookie(g17);
                                        return &g47;
                                    }
                                    // 0x180015a94
                                    v48 = function_1800188d0(a1, v51, (int64_t *)&v47);
                                    goto lab_0x180015aa1;
                                }
                            }
                        }
                    } else {
                        int32_t v52 = *v26; // 0x180015a26
                        if (v52 == 0 || (int32_t)function_180017ab0(a1, v52, (int64_t *)&v47) == 0) {
                            // 0x180015976
                            __security_check_cookie(g17);
                            return &g47;
                        }
                        goto lab_0x180015aa9;
                    }
                } else {
                    int32_t v53 = *v26; // 0x180015a00
                    if (v53 == 0) {
                        // 0x180015976
                        __security_check_cookie(g17);
                        return &g47;
                    }
                    // 0x180015a0c
                    v48 = function_1800172f0(a1, v53, (int64_t *)&v47);
                    goto lab_0x180015aa1;
                }
            } else {
                int32_t v54 = *v26; // 0x1800159c5
                if (v54 == 0 || (int32_t)function_180016cf0(a1, v54, (int64_t *)&v47) == 0) {
                    // 0x180015976
                    __security_check_cookie(g17);
                    return &g47;
                }
                goto lab_0x180015aa9;
            }
        } else {
            int32_t v55 = *v26; // 0x180015997
            if (v55 == 0 || (int32_t)function_1800166c0(a1, v55, (int64_t *)&v47) == 0) {
                // 0x180015976
                __security_check_cookie(g17);
                return &g47;
            }
            goto lab_0x180015aa9;
        }
    } else {
        int32_t v56 = *v26; // 0x18001593a
        if (v56 == 0 || (int32_t)function_1800160e0(a1, v56, (int64_t *)&v47) == 0) {
            // 0x180015976
            __security_check_cookie(g17);
            return &g47;
        }
        goto lab_0x180015aa9;
    }
  lab_0x180015aa9:
    if (v1 != 0) {
        // 0x180015ab5
        if (v47 != 0) {
            uint32_t v57 = *v6; // 0x180015ad3
            int32_t v58 = v1 + 4; // 0x180015ad7
            int32_t v59 = v58; // 0x180015add
            uint32_t v60 = v57; // 0x180015add
            int64_t v61 = 0; // 0x180015add
            if (v58 > v57) {
                // 0x180015976
                __security_check_cookie(g17);
                return &g47;
            }
            *v4 = v59;
            int32_t v62; // 0x1800156b0
            uint32_t v63 = v62 + 8; // 0x180015afe
            while (v63 <= v60) {
                int32_t v64 = *(int32_t *)(a1 + 16); // 0x180015aeb
                int32_t v65 = *(int32_t *)((int64_t)v62 + a1); // 0x180015af3
                *v4 = v63;
                uint32_t v66 = v62 + 12;
                if (v66 > v60) {
                    // break -> 0x180015976
                    break;
                }
                int32_t v67 = *(int32_t *)((int64_t)v59 + a1); // 0x180015b13
                *v4 = v66;
                uint32_t v68 = v62 + 16; // 0x180015b35
                if (v68 > v60) {
                    // break -> 0x180015976
                    break;
                }
                // 0x180015b41
                *v4 = v68;
                uint32_t v69 = v62 + 20;
                if (v69 > v60) {
                    // break -> 0x180015976
                    break;
                }
                // 0x180015b50
                *v4 = v69;
                uint32_t v70 = v62 + 24; // 0x180015b57
                if (v70 > v60) {
                    // break -> 0x180015976
                    break;
                }
                int32_t v71 = v64 == 0 ? v65 : llvm_bswap_i32(v65);
                uint32_t v72 = v64 != 0 ? v64 == 0 ? v67 : llvm_bswap_i32(v67) : v71;
                *v4 = v70;
                int64_t v73; // bp-888, 0x1800156b0
                function_180005050(a1, (int64_t)v72, &v73);
                int64_t v74 = v61 + 1; // 0x180015b72
                if (v47 <= (int32_t)v74) {
                    goto lab_0x180015b7c;
                }
                int32_t v75 = *v4;
                v60 = *v6;
                v59 = v75 + 4;
                v61 = v74 & 0xffffffff;
                v62 = v75;
                if (v59 > v60) {
                    // break -> 0x180015976
                    break;
                }
                *v4 = v59;
                v63 = v62 + 8;
            }
            // 0x180015976
            __security_check_cookie(g17);
            return &g47;
        }
    }
  lab_0x180015b7c:
    if ((v1 || v3) != 0 || v2 != 0) {
        *v4 = v2 == 0 ? v3 == 0 ? v1 : v3 : v2;
    }
    v49 = *(int32_t *)&g31;
    v50 = v1;
    goto lab_0x180015fed;
  lab_0x180015fed:;
    int64_t v76 = v50;
    int64_t v77; // 0x1800156b0
    switch (v49) {
        case 866: {
            goto lab_0x18001601a;
        }
        case 877: {
            goto lab_0x18001601a;
        }
        default: {
            int64_t v78 = v49;
            v77 = v78;
            if (v49 < 991) {
                // 0x180016012
                v77 = v78;
                if ((1 << (int64_t)(v49 + 14 & 63) & 0x1080481c0101) == 0) {
                    goto lab_0x180016035;
                } else {
                    goto lab_0x18001601a;
                }
            } else {
                goto lab_0x180016035;
            }
        }
    }
  lab_0x18001601a:
    // 0x18001601a
    if ((int32_t)function_1800198f0(a1, 0, v1) == 0) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001602f
    v77 = (int64_t)*(int32_t *)&g31;
    goto lab_0x180016035;
  lab_0x180015aa1:
    // 0x180015aa1
    if ((int32_t)v48 == 0) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    goto lab_0x180015aa9;
  lab_0x180016035:;
    int64_t v79 = v77 + 0xfffffc4e; // 0x180016035
    int64_t v80; // 0x1800156b0
    if ((int32_t)v79 < 45) {
        if ((1 << (v79 & 63) & 0x1080481c0101) == 0) {
            // 0x180016058
            v80 = function_1800190d0(a1, 0, v76);
            goto lab_0x180016065;
        } else {
            // 0x180016049
            v80 = function_180019c40(a1, 0, v76);
            goto lab_0x180016065;
        }
    } else {
        // 0x180016058
        v80 = function_1800190d0(a1, 0, v76);
        goto lab_0x180016065;
    }
  lab_0x180015a50:
    // 0x180015a50
    v48 = function_180018190(a1, *v26, (int64_t *)&v47);
    goto lab_0x180015aa1;
  lab_0x180016065:
    // 0x180016065
    if ((int32_t)v80 == 0 || (int32_t)function_180019f30(a1, 0, v1) == 0) {
        // 0x180015976
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001607e
    if ((int32_t)function_18001c9d0(a1, 0, v1) != 0) {
        // 0x180016093
        function_18001ac20(a1, 0, v1);
    }
    // 0x180015976
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x1800160e0 - 0x1800166be
int64_t function_1800160e0(int64_t a1, int32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180016102
    *v1 = a2;
    if (a1 == 0) {
        // 0x180016688
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v2 = a2;
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18001610e
    uint32_t v4 = *v3; // 0x18001610e
    int64_t v5 = v2 + 4; // 0x180016111
    uint32_t v6 = (int32_t)v5;
    if (v4 < v6) {
        // 0x180016688
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v7 = *(int32_t *)(a1 + 16); // 0x18001611e
    *v1 = v6;
    uint32_t v8 = v6 + 4; // 0x18001613a
    if (v4 < v8) {
        // 0x180016688
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v9 = *(int32_t *)((v2 & 0xffffffff) + a1); // 0x18001612a
    int32_t v10 = v7 == 0 ? v9 : llvm_bswap_i32(v9);
    *v1 = v8;
    int32_t v11 = *(int32_t *)((v5 & 0xffffffff) + a1); // 0x180016148
    uint32_t v12 = v7 != 0 ? v7 == 0 ? v11 : llvm_bswap_i32(v11) : v10;
    int64_t v13; // bp-344, 0x1800160e0
    function_180005050(a1, (int64_t)v12, &v13);
    int32_t v14 = *v1; // 0x180016169
    int64_t v15 = 0; // 0x180016169
    uint32_t v16 = *v3; // 0x18001617c
    int32_t v17; // 0x1800160e0
    int64_t v18; // 0x1800160e0
    while (v14 + 4 <= v16) {
        // 0x18001618c
        *v1 = v14 + 4;
        v14 += 8;
        if (v14 > v16) {
            // break -> 0x180016688
            break;
        }
        int64_t v19 = v15 + 1; // 0x18001619f
        *v1 = v14;
        v15 = v19 & 0xffffffff;
        v17 = v14;
        v18 = 0;
        if ((int32_t)v19 >= 5) {
            goto lab_0x1800161b9;
        }
        v16 = *v3;
    }
  lab_0x180016688:
    // 0x180016688
    __security_check_cookie(g17);
    return &g47;
  lab_0x1800161b9:;
    int32_t v20 = v17 + 4; // 0x1800161bc
    if (v20 > *v3) {
        goto lab_0x180016688;
    } else {
        // 0x1800161c8
        *v1 = v20;
        int64_t v21 = v18 + 1; // 0x1800161cc
        v17 = v20;
        v18 = v21 & 0xffffffff;
        if ((int32_t)v21 < 16) {
            goto lab_0x1800161b9;
        }
    }
}

// Address range: 0x1800166c0 - 0x180016ce1
int64_t function_1800166c0(int64_t a1, int32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x1800166e2
    *v1 = a2;
    if (a1 == 0) {
        // 0x180016cab
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v2 = a2;
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x1800166ee
    uint32_t v4 = *v3; // 0x1800166ee
    int64_t v5 = v2 + 4; // 0x1800166f1
    uint32_t v6 = (int32_t)v5;
    if (v4 < v6) {
        // 0x180016cab
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v7 = (int32_t *)(a1 + 16); // 0x1800166fe
    int32_t v8 = *v7; // 0x1800166fe
    *v1 = v6;
    uint32_t v9 = v6 + 4; // 0x18001671a
    if (v4 < v9) {
        // 0x180016cab
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v10 = (int64_t)a3;
    int32_t v11 = *(int32_t *)((v2 & 0xffffffff) + a1); // 0x18001670a
    int32_t v12 = v8 == 0 ? v11 : llvm_bswap_i32(v11);
    *v1 = v9;
    int32_t v13 = *(int32_t *)((v5 & 0xffffffff) + a1); // 0x180016728
    uint32_t v14 = v8 != 0 ? v8 == 0 ? v13 : llvm_bswap_i32(v13) : v12;
    int64_t v15; // bp-344, 0x1800166c0
    function_180005050(a1, (int64_t)v14, &v15);
    int32_t v16 = *v1; // 0x180016749
    int64_t v17 = 0; // 0x180016749
    uint32_t v18 = *v3; // 0x18001675c
    int32_t v19; // 0x1800166c0
    int64_t v20; // 0x1800166c0
    int32_t v21; // 0x180016789
    while (v16 + 4 <= v18) {
        // 0x18001676c
        *v1 = v16 + 4;
        v16 += 8;
        if (v16 > v18) {
            // break -> 0x180016cab
            break;
        }
        int64_t v22 = v17 + 1; // 0x18001677f
        *v1 = v16;
        v17 = v22 & 0xffffffff;
        if ((int32_t)v22 >= 5) {
            // 0x180016789
            v21 = *(int32_t *)&g31;
            v19 = v16;
            v20 = 0;
            goto lab_0x1800167c9;
        }
        v18 = *v3;
    }
  lab_0x180016cab:
    // 0x180016cab
    __security_check_cookie(g17);
    return &g47;
  lab_0x1800167c9:;
    int32_t v23 = v19; // 0x1800167c9
    uint32_t v24 = v23 + 4; // 0x1800167cc
    if (v24 > *v3) {
        goto lab_0x180016cab;
    } else {
        // 0x1800167d8
        *v1 = v24;
        int64_t v25 = v20 + 1 & 0xffffffff; // 0x1800167dc
        v19 = v24;
        v20 = v25;
        if (v25 < (v21 != 779 ? v21 == 866 ? 18 : 21 : 16)) {
            goto lab_0x1800167c9;
        } else {
            uint32_t v26 = *v3; // 0x1800167ef
            uint32_t v27 = v23 + 8; // 0x1800167f3
            if (v26 < v27) {
                goto lab_0x180016cab;
            } else {
                // 0x1800167ff
                *v1 = v27;
                uint32_t v28 = v23 + 12; // 0x180016822
                if (v28 > v26) {
                    goto lab_0x180016cab;
                } else {
                    int32_t v29 = *v7; // 0x180016807
                    int32_t v30 = *(int32_t *)((int64_t)v24 + a1); // 0x18001680f
                    *v1 = v28;
                    uint32_t v31 = v23 + 16;
                    if (v31 > v26) {
                        goto lab_0x180016cab;
                    } else {
                        int32_t v32 = *(int32_t *)((int64_t)v27 + a1); // 0x180016848
                        *v1 = v31;
                        uint32_t v33 = v23 + 20; // 0x180016868
                        if (v33 > v26) {
                            goto lab_0x180016cab;
                        } else {
                            // 0x180016874
                            *v1 = v33;
                            uint32_t v34 = v23 + 24;
                            if (v34 > v26) {
                                goto lab_0x180016cab;
                            } else {
                                // 0x180016886
                                *v1 = v34;
                                uint32_t v35 = v23 + 28; // 0x1800168a5
                                if (v35 > v26) {
                                    goto lab_0x180016cab;
                                } else {
                                    int32_t v36 = *(int32_t *)((int64_t)v33 + a1); // 0x180016892
                                    *v1 = v35;
                                    uint32_t v37 = v23 + 32;
                                    if (v37 > v26) {
                                        goto lab_0x180016cab;
                                    } else {
                                        int32_t v38 = *(int32_t *)((int64_t)v34 + a1); // 0x1800168cb
                                        *v1 = v37;
                                        uint32_t v39 = v23 + 36; // 0x1800168eb
                                        if (v39 > v26) {
                                            goto lab_0x180016cab;
                                        } else {
                                            // 0x1800168f7
                                            *v1 = v39;
                                            uint32_t v40 = v23 + 40;
                                            if (v40 > v26) {
                                                goto lab_0x180016cab;
                                            } else {
                                                // 0x180016909
                                                *v1 = v40;
                                                uint32_t v41 = v23 + 44; // 0x180016928
                                                if (v41 > v26) {
                                                    goto lab_0x180016cab;
                                                } else {
                                                    int32_t v42 = *(int32_t *)((int64_t)v39 + a1); // 0x180016915
                                                    *v1 = v41;
                                                    uint32_t v43 = v23 + 48;
                                                    if (v43 > v26) {
                                                        goto lab_0x180016cab;
                                                    } else {
                                                        int32_t v44 = *(int32_t *)((int64_t)v40 + a1); // 0x18001694e
                                                        *v1 = v43;
                                                        uint32_t v45 = v23 + 52; // 0x18001696e
                                                        if (v45 > v26) {
                                                            goto lab_0x180016cab;
                                                        } else {
                                                            // 0x18001697a
                                                            *v1 = v45;
                                                            uint32_t v46 = v23 + 56;
                                                            if (v46 > v26) {
                                                                goto lab_0x180016cab;
                                                            } else {
                                                                // 0x18001698c
                                                                *v1 = v46;
                                                                uint32_t v47 = v23 + 60; // 0x1800169ab
                                                                if (v47 > v26) {
                                                                    goto lab_0x180016cab;
                                                                } else {
                                                                    int32_t v48 = *(int32_t *)((int64_t)v45 + a1); // 0x180016998
                                                                    *v1 = v47;
                                                                    uint32_t v49 = v23 + 64;
                                                                    if (v49 > v26) {
                                                                        goto lab_0x180016cab;
                                                                    } else {
                                                                        int32_t v50 = *(int32_t *)((int64_t)v46 + a1); // 0x1800169d1
                                                                        *v1 = v49;
                                                                        uint32_t v51 = v23 + 68; // 0x1800169f0
                                                                        if (v51 > v26) {
                                                                            goto lab_0x180016cab;
                                                                        } else {
                                                                            // 0x1800169fc
                                                                            *v1 = v51;
                                                                            uint32_t v52 = v23 + 72;
                                                                            if (v52 > v26) {
                                                                                goto lab_0x180016cab;
                                                                            } else {
                                                                                // 0x180016a0e
                                                                                *v1 = v52;
                                                                                uint32_t v53 = v23 + 76; // 0x180016a15
                                                                                if (v53 > v26) {
                                                                                    goto lab_0x180016cab;
                                                                                } else {
                                                                                    // 0x180016a21
                                                                                    *v1 = v53;
                                                                                    uint32_t v54 = v23 + 80;
                                                                                    if (v54 > v26) {
                                                                                        goto lab_0x180016cab;
                                                                                    } else {
                                                                                        // 0x180016a33
                                                                                        *v1 = v54;
                                                                                        uint32_t v55 = v23 + 84; // 0x180016a3a
                                                                                        if (v55 > v26) {
                                                                                            goto lab_0x180016cab;
                                                                                        } else {
                                                                                            // 0x180016a46
                                                                                            *v1 = v55;
                                                                                            uint32_t v56 = v23 + 88;
                                                                                            if (v56 > v26) {
                                                                                                goto lab_0x180016cab;
                                                                                            } else {
                                                                                                // 0x180016a58
                                                                                                *v1 = v56;
                                                                                                uint32_t v57 = v23 + 92; // 0x180016a77
                                                                                                if (v57 > v26) {
                                                                                                    goto lab_0x180016cab;
                                                                                                } else {
                                                                                                    int32_t v58 = *(int32_t *)((int64_t)v55 + a1); // 0x180016a64
                                                                                                    *v1 = v57;
                                                                                                    uint32_t v59 = v23 + 96;
                                                                                                    if (v59 > v26) {
                                                                                                        goto lab_0x180016cab;
                                                                                                    } else {
                                                                                                        int32_t v60 = *(int32_t *)((int64_t)v56 + a1); // 0x180016a9d
                                                                                                        *v1 = v59;
                                                                                                        uint32_t v61 = v23 + 100; // 0x180016abc
                                                                                                        if (v61 > v26) {
                                                                                                            goto lab_0x180016cab;
                                                                                                        } else {
                                                                                                            // 0x180016ac8
                                                                                                            *v1 = v61;
                                                                                                            uint32_t v62 = v23 + 104;
                                                                                                            if (v62 > v26) {
                                                                                                                goto lab_0x180016cab;
                                                                                                            } else {
                                                                                                                // 0x180016ada
                                                                                                                *v1 = v62;
                                                                                                                uint32_t v63 = v23 + 108; // 0x180016ae1
                                                                                                                if (v63 > v26) {
                                                                                                                    goto lab_0x180016cab;
                                                                                                                } else {
                                                                                                                    // 0x180016aed
                                                                                                                    *v1 = v63;
                                                                                                                    uint32_t v64 = v23 + 112;
                                                                                                                    if (v64 > v26) {
                                                                                                                        goto lab_0x180016cab;
                                                                                                                    } else {
                                                                                                                        // 0x180016aff
                                                                                                                        *v1 = v64;
                                                                                                                        uint32_t v65 = v23 + 116; // 0x180016b06
                                                                                                                        if (v65 > v26) {
                                                                                                                            goto lab_0x180016cab;
                                                                                                                        } else {
                                                                                                                            // 0x180016b12
                                                                                                                            *v1 = v65;
                                                                                                                            uint32_t v66 = v23 + 120;
                                                                                                                            if (v66 > v26) {
                                                                                                                                goto lab_0x180016cab;
                                                                                                                            } else {
                                                                                                                                // 0x180016b24
                                                                                                                                *v1 = v66;
                                                                                                                                uint32_t v67 = v23 + 124; // 0x180016b42
                                                                                                                                if (v67 > v26) {
                                                                                                                                    goto lab_0x180016cab;
                                                                                                                                } else {
                                                                                                                                    int32_t v68 = *(int32_t *)((int64_t)v65 + a1); // 0x180016b36
                                                                                                                                    *v1 = v67;
                                                                                                                                    uint32_t v69 = v23 + 128;
                                                                                                                                    if (v69 > v26) {
                                                                                                                                        goto lab_0x180016cab;
                                                                                                                                    } else {
                                                                                                                                        int32_t v70 = *(int32_t *)((int64_t)v66 + a1); // 0x180016b5b
                                                                                                                                        *v1 = v69;
                                                                                                                                        uint32_t v71 = v23 + 132; // 0x180016b7a
                                                                                                                                        if (v71 > v26) {
                                                                                                                                            goto lab_0x180016cab;
                                                                                                                                        } else {
                                                                                                                                            // 0x180016b86
                                                                                                                                            *v1 = v71;
                                                                                                                                            uint32_t v72 = v23 + 136;
                                                                                                                                            if (v72 > v26) {
                                                                                                                                                goto lab_0x180016cab;
                                                                                                                                            } else {
                                                                                                                                                // 0x180016b98
                                                                                                                                                *v1 = v72;
                                                                                                                                                uint32_t v73 = v23 + 140; // 0x180016b9f
                                                                                                                                                if (v73 > v26) {
                                                                                                                                                    goto lab_0x180016cab;
                                                                                                                                                } else {
                                                                                                                                                    // 0x180016bab
                                                                                                                                                    *v1 = v73;
                                                                                                                                                    uint32_t v74 = v23 + 144;
                                                                                                                                                    if (v74 > v26) {
                                                                                                                                                        goto lab_0x180016cab;
                                                                                                                                                    } else {
                                                                                                                                                        // 0x180016bbd
                                                                                                                                                        *v1 = v74;
                                                                                                                                                        uint32_t v75 = v23 + 148; // 0x180016bc4
                                                                                                                                                        if (v75 > v26) {
                                                                                                                                                            goto lab_0x180016cab;
                                                                                                                                                        } else {
                                                                                                                                                            // 0x180016bd0
                                                                                                                                                            *v1 = v75;
                                                                                                                                                            uint32_t v76 = v23 + 152;
                                                                                                                                                            if (v76 > v26) {
                                                                                                                                                                goto lab_0x180016cab;
                                                                                                                                                            } else {
                                                                                                                                                                // 0x180016be2
                                                                                                                                                                *v1 = v76;
                                                                                                                                                                uint32_t v77 = v23 + 156; // 0x180016be9
                                                                                                                                                                if (v77 > v26) {
                                                                                                                                                                    goto lab_0x180016cab;
                                                                                                                                                                } else {
                                                                                                                                                                    int32_t v78 = v29 == 0 ? v30 : llvm_bswap_i32(v30);
                                                                                                                                                                    int32_t v79 = v29 == 0 ? v32 : llvm_bswap_i32(v32);
                                                                                                                                                                    int32_t v80 = v29 == 0 ? v36 : llvm_bswap_i32(v36);
                                                                                                                                                                    int32_t v81 = v29 == 0 ? v38 : llvm_bswap_i32(v38);
                                                                                                                                                                    int32_t v82 = v29 == 0 ? v42 : llvm_bswap_i32(v42);
                                                                                                                                                                    int32_t v83 = v29 == 0 ? v44 : llvm_bswap_i32(v44);
                                                                                                                                                                    int32_t v84 = v29 == 0 ? v48 : llvm_bswap_i32(v48);
                                                                                                                                                                    int32_t v85 = v29 == 0 ? v50 : llvm_bswap_i32(v50);
                                                                                                                                                                    int32_t v86 = v29 == 0 ? v58 : llvm_bswap_i32(v58);
                                                                                                                                                                    int32_t v87 = v29 == 0 ? v60 : llvm_bswap_i32(v60);
                                                                                                                                                                    int32_t v88 = v29 == 0 ? v68 : llvm_bswap_i32(v68);
                                                                                                                                                                    int32_t v89 = v29 == 0 ? v70 : llvm_bswap_i32(v70);
                                                                                                                                                                    *v1 = v77;
                                                                                                                                                                    *(int32_t *)(v10 + 24) = v78;
                                                                                                                                                                    *(int64_t *)(v10 + 40) = 0;
                                                                                                                                                                    *(int32_t *)(v10 + 32) = v80;
                                                                                                                                                                    *(int32_t *)(v10 + 48) = v82;
                                                                                                                                                                    *(int32_t *)(v10 + 56) = v84;
                                                                                                                                                                    *(int32_t *)(v10 + 64) = v86;
                                                                                                                                                                    *(int32_t *)(v10 + 28) = v79 == 0 ? 0 : v79 + v27;
                                                                                                                                                                    *(int32_t *)(v10 + 36) = v81 == 0 ? 0 : v81 + v34;
                                                                                                                                                                    *(int32_t *)(v10 + 52) = v83 == 0 ? 0 : v83 + v40;
                                                                                                                                                                    *(int32_t *)(v10 + 60) = v85 == 0 ? 0 : v85 + v46;
                                                                                                                                                                    *(int32_t *)(v10 + 68) = v87 == 0 ? 0 : v87 + v56;
                                                                                                                                                                    *(int32_t *)(v10 + 72) = v88;
                                                                                                                                                                    *(int32_t *)(v10 + 76) = v89 == 0 ? 0 : v89 + v66;
                                                                                                                                                                    goto lab_0x180016cab;
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x180016cf0 - 0x1800172e2
int64_t function_180016cf0(int64_t a1, int32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180016d12
    *v1 = a2;
    if (a1 == 0) {
        // 0x1800172ac
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v2 = a2;
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x180016d1e
    uint32_t v4 = *v3; // 0x180016d1e
    int64_t v5 = v2 + 4; // 0x180016d21
    uint32_t v6 = (int32_t)v5;
    if (v4 < v6) {
        // 0x1800172ac
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v7 = (int32_t *)(a1 + 16); // 0x180016d2e
    int32_t v8 = *v7; // 0x180016d2e
    *v1 = v6;
    uint32_t v9 = v6 + 4; // 0x180016d4a
    if (v4 < v9) {
        // 0x1800172ac
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v10 = (int64_t)a3;
    int32_t v11 = *(int32_t *)((v2 & 0xffffffff) + a1); // 0x180016d3a
    int32_t v12 = v8 == 0 ? v11 : llvm_bswap_i32(v11);
    *v1 = v9;
    int32_t v13 = *(int32_t *)((v5 & 0xffffffff) + a1); // 0x180016d58
    uint32_t v14 = v8 != 0 ? v8 == 0 ? v13 : llvm_bswap_i32(v13) : v12;
    int64_t v15; // bp-344, 0x180016cf0
    function_180005050(a1, (int64_t)v14, &v15);
    int32_t v16 = *v1; // 0x180016d79
    int64_t v17 = 0; // 0x180016d79
    uint32_t v18 = *v3; // 0x180016d8c
    int32_t v19; // 0x180016cf0
    int64_t v20; // 0x180016cf0
    while (v16 + 4 <= v18) {
        // 0x180016d9c
        *v1 = v16 + 4;
        v16 += 8;
        if (v16 > v18) {
            // break -> 0x1800172ac
            break;
        }
        int64_t v21 = v17 + 1; // 0x180016daf
        *v1 = v16;
        v17 = v21 & 0xffffffff;
        if ((int32_t)v21 >= 5) {
            // 0x180016db9
            v19 = v16;
            v20 = 0;
            goto lab_0x180016de9;
        }
        v18 = *v3;
    }
  lab_0x1800172ac:
    // 0x1800172ac
    __security_check_cookie(g17);
    return &g47;
  lab_0x180016de9:;
    int32_t v22 = v19; // 0x180016de9
    uint32_t v23 = v22 + 4; // 0x180016dec
    if (v23 > *v3) {
        goto lab_0x1800172ac;
    } else {
        // 0x180016df8
        *v1 = v23;
        int64_t v24 = v20 + 1 & 0xffffffff; // 0x180016dfc
        v19 = v23;
        v20 = v24;
        if (v24 < (*(int32_t *)&g31 == 779 ? 16 : 21)) {
            goto lab_0x180016de9;
        } else {
            uint32_t v25 = *v3; // 0x180016e0f
            uint32_t v26 = v22 + 8; // 0x180016e13
            if (v25 < v26) {
                goto lab_0x1800172ac;
            } else {
                // 0x180016e1f
                *v1 = v26;
                uint32_t v27 = v22 + 12; // 0x180016e42
                if (v27 > v25) {
                    goto lab_0x1800172ac;
                } else {
                    int32_t v28 = *v7; // 0x180016e27
                    int32_t v29 = *(int32_t *)((int64_t)v23 + a1); // 0x180016e2f
                    *v1 = v27;
                    uint32_t v30 = v22 + 16;
                    if (v30 > v25) {
                        goto lab_0x1800172ac;
                    } else {
                        int32_t v31 = *(int32_t *)((int64_t)v26 + a1); // 0x180016e60
                        *v1 = v30;
                        uint32_t v32 = v22 + 20; // 0x180016e87
                        if (v32 > v25) {
                            goto lab_0x1800172ac;
                        } else {
                            // 0x180016e93
                            *v1 = v32;
                            uint32_t v33 = v22 + 24;
                            if (v33 > v25) {
                                goto lab_0x1800172ac;
                            } else {
                                // 0x180016ea5
                                *v1 = v33;
                                uint32_t v34 = v22 + 28; // 0x180016ec4
                                if (v34 > v25) {
                                    goto lab_0x1800172ac;
                                } else {
                                    int32_t v35 = *(int32_t *)((int64_t)v32 + a1); // 0x180016eb1
                                    *v1 = v34;
                                    uint32_t v36 = v22 + 32;
                                    if (v36 > v25) {
                                        goto lab_0x1800172ac;
                                    } else {
                                        int32_t v37 = *(int32_t *)((int64_t)v33 + a1); // 0x180016eea
                                        *v1 = v36;
                                        uint32_t v38 = v22 + 36; // 0x180016f13
                                        if (v38 > v25) {
                                            goto lab_0x1800172ac;
                                        } else {
                                            // 0x180016f20
                                            *v1 = v38;
                                            uint32_t v39 = v22 + 40;
                                            if (v39 > v25) {
                                                goto lab_0x1800172ac;
                                            } else {
                                                int32_t v40 = *(int32_t *)((int64_t)v36 + a1); // 0x180016f2c
                                                *v1 = v39;
                                                uint32_t v41 = v22 + 44; // 0x180016f6c
                                                if (v41 > v25) {
                                                    goto lab_0x1800172ac;
                                                } else {
                                                    int32_t v42 = *(int32_t *)((int64_t)v38 + a1); // 0x180016f60
                                                    *v1 = v41;
                                                    uint32_t v43 = v22 + 48;
                                                    if (v43 > v25) {
                                                        goto lab_0x1800172ac;
                                                    } else {
                                                        // 0x180016f8e
                                                        *v1 = v43;
                                                        uint32_t v44 = v22 + 52; // 0x180016fad
                                                        if (v44 > v25) {
                                                            goto lab_0x1800172ac;
                                                        } else {
                                                            int32_t v45 = *(int32_t *)((int64_t)v41 + a1); // 0x180016f9a
                                                            *v1 = v44;
                                                            uint32_t v46 = v22 + 56;
                                                            if (v46 > v25) {
                                                                goto lab_0x1800172ac;
                                                            } else {
                                                                int32_t v47 = *(int32_t *)((int64_t)v43 + a1); // 0x180016fd3
                                                                *v1 = v46;
                                                                uint32_t v48 = v22 + 60; // 0x180016ff2
                                                                if (v48 > v25) {
                                                                    goto lab_0x1800172ac;
                                                                } else {
                                                                    // 0x180016ffe
                                                                    *v1 = v48;
                                                                    uint32_t v49 = v22 + 64;
                                                                    if (v49 > v25) {
                                                                        goto lab_0x1800172ac;
                                                                    } else {
                                                                        // 0x180017010
                                                                        *v1 = v49;
                                                                        uint32_t v50 = v22 + 68; // 0x180017017
                                                                        if (v50 > v25) {
                                                                            goto lab_0x1800172ac;
                                                                        } else {
                                                                            // 0x180017023
                                                                            *v1 = v50;
                                                                            uint32_t v51 = v22 + 72;
                                                                            if (v51 > v25) {
                                                                                goto lab_0x1800172ac;
                                                                            } else {
                                                                                // 0x180017035
                                                                                *v1 = v51;
                                                                                uint32_t v52 = v22 + 76; // 0x18001703c
                                                                                if (v52 > v25) {
                                                                                    goto lab_0x1800172ac;
                                                                                } else {
                                                                                    // 0x180017048
                                                                                    *v1 = v52;
                                                                                    uint32_t v53 = v22 + 80;
                                                                                    if (v53 > v25) {
                                                                                        goto lab_0x1800172ac;
                                                                                    } else {
                                                                                        // 0x18001705a
                                                                                        *v1 = v53;
                                                                                        uint32_t v54 = v22 + 84; // 0x180017079
                                                                                        if (v54 > v25) {
                                                                                            goto lab_0x1800172ac;
                                                                                        } else {
                                                                                            int32_t v55 = *(int32_t *)((int64_t)v52 + a1); // 0x180017066
                                                                                            *v1 = v54;
                                                                                            uint32_t v56 = v22 + 88;
                                                                                            if (v56 > v25) {
                                                                                                goto lab_0x1800172ac;
                                                                                            } else {
                                                                                                int32_t v57 = *(int32_t *)((int64_t)v53 + a1); // 0x18001709f
                                                                                                *v1 = v56;
                                                                                                uint32_t v58 = v22 + 92; // 0x1800170be
                                                                                                if (v58 > v25) {
                                                                                                    goto lab_0x1800172ac;
                                                                                                } else {
                                                                                                    // 0x1800170ca
                                                                                                    *v1 = v58;
                                                                                                    uint32_t v59 = v22 + 96;
                                                                                                    if (v59 > v25) {
                                                                                                        goto lab_0x1800172ac;
                                                                                                    } else {
                                                                                                        // 0x1800170dc
                                                                                                        *v1 = v59;
                                                                                                        uint32_t v60 = v22 + 100; // 0x1800170e3
                                                                                                        if (v60 > v25) {
                                                                                                            goto lab_0x1800172ac;
                                                                                                        } else {
                                                                                                            // 0x1800170ef
                                                                                                            *v1 = v60;
                                                                                                            uint32_t v61 = v22 + 104;
                                                                                                            if (v61 > v25) {
                                                                                                                goto lab_0x1800172ac;
                                                                                                            } else {
                                                                                                                // 0x180017101
                                                                                                                *v1 = v61;
                                                                                                                uint32_t v62 = v22 + 108; // 0x180017108
                                                                                                                if (v62 > v25) {
                                                                                                                    goto lab_0x1800172ac;
                                                                                                                } else {
                                                                                                                    // 0x180017114
                                                                                                                    *v1 = v62;
                                                                                                                    uint32_t v63 = v22 + 112;
                                                                                                                    if (v63 > v25) {
                                                                                                                        goto lab_0x1800172ac;
                                                                                                                    } else {
                                                                                                                        // 0x180017126
                                                                                                                        *v1 = v63;
                                                                                                                        uint32_t v64 = v22 + 116; // 0x180017144
                                                                                                                        if (v64 > v25) {
                                                                                                                            goto lab_0x1800172ac;
                                                                                                                        } else {
                                                                                                                            int32_t v65 = *(int32_t *)((int64_t)v62 + a1); // 0x180017138
                                                                                                                            *v1 = v64;
                                                                                                                            uint32_t v66 = v22 + 120;
                                                                                                                            if (v66 > v25) {
                                                                                                                                goto lab_0x1800172ac;
                                                                                                                            } else {
                                                                                                                                int32_t v67 = *(int32_t *)((int64_t)v63 + a1); // 0x18001715d
                                                                                                                                *v1 = v66;
                                                                                                                                uint32_t v68 = v22 + 124; // 0x18001717c
                                                                                                                                if (v68 > v25) {
                                                                                                                                    goto lab_0x1800172ac;
                                                                                                                                } else {
                                                                                                                                    // 0x180017188
                                                                                                                                    *v1 = v68;
                                                                                                                                    uint32_t v69 = v22 + 128;
                                                                                                                                    if (v69 > v25) {
                                                                                                                                        goto lab_0x1800172ac;
                                                                                                                                    } else {
                                                                                                                                        // 0x18001719a
                                                                                                                                        *v1 = v69;
                                                                                                                                        uint32_t v70 = v22 + 132; // 0x1800171a1
                                                                                                                                        if (v70 > v25) {
                                                                                                                                            goto lab_0x1800172ac;
                                                                                                                                        } else {
                                                                                                                                            // 0x1800171ad
                                                                                                                                            *v1 = v70;
                                                                                                                                            uint32_t v71 = v22 + 136;
                                                                                                                                            if (v71 > v25) {
                                                                                                                                                goto lab_0x1800172ac;
                                                                                                                                            } else {
                                                                                                                                                // 0x1800171bf
                                                                                                                                                *v1 = v71;
                                                                                                                                                uint32_t v72 = v22 + 140; // 0x1800171c6
                                                                                                                                                if (v72 > v25) {
                                                                                                                                                    goto lab_0x1800172ac;
                                                                                                                                                } else {
                                                                                                                                                    // 0x1800171d2
                                                                                                                                                    *v1 = v72;
                                                                                                                                                    uint32_t v73 = v22 + 144;
                                                                                                                                                    if (v73 > v25) {
                                                                                                                                                        goto lab_0x1800172ac;
                                                                                                                                                    } else {
                                                                                                                                                        // 0x1800171e4
                                                                                                                                                        *v1 = v73;
                                                                                                                                                        uint32_t v74 = v22 + 148; // 0x1800171eb
                                                                                                                                                        if (v74 > v25) {
                                                                                                                                                            goto lab_0x1800172ac;
                                                                                                                                                        } else {
                                                                                                                                                            int32_t v75 = v28 == 0 ? v29 : llvm_bswap_i32(v29);
                                                                                                                                                            int32_t v76 = v28 == 0 ? v31 : llvm_bswap_i32(v31);
                                                                                                                                                            int32_t v77 = v28 == 0 ? v35 : llvm_bswap_i32(v35);
                                                                                                                                                            int32_t v78 = v28 == 0 ? v37 : llvm_bswap_i32(v37);
                                                                                                                                                            int32_t v79 = v28 == 0 ? v40 : llvm_bswap_i32(v40);
                                                                                                                                                            int32_t v80 = v28 == 0 ? v42 : llvm_bswap_i32(v42);
                                                                                                                                                            int32_t v81 = v28 == 0 ? v45 : llvm_bswap_i32(v45);
                                                                                                                                                            int32_t v82 = v28 == 0 ? v47 : llvm_bswap_i32(v47);
                                                                                                                                                            int32_t v83 = v28 == 0 ? v55 : llvm_bswap_i32(v55);
                                                                                                                                                            int32_t v84 = v28 == 0 ? v57 : llvm_bswap_i32(v57);
                                                                                                                                                            int32_t v85 = v28 == 0 ? v65 : llvm_bswap_i32(v65);
                                                                                                                                                            int32_t v86 = v28 == 0 ? v67 : llvm_bswap_i32(v67);
                                                                                                                                                            *v1 = v74;
                                                                                                                                                            *(int32_t *)(v10 + 28) = v76 == 0 ? 0 : v76 + v26;
                                                                                                                                                            *(int64_t *)(v10 + 40) = 0;
                                                                                                                                                            *(int32_t *)(v10 + 32) = v77;
                                                                                                                                                            *(int32_t *)(v10 + 48) = v79;
                                                                                                                                                            *(int32_t *)(v10 + 56) = v81;
                                                                                                                                                            *(int32_t *)(v10 + 64) = v83;
                                                                                                                                                            *(int32_t *)(v10 + 24) = v75;
                                                                                                                                                            *(int32_t *)(v10 + 36) = v78 == 0 ? 0 : v78 + v33;
                                                                                                                                                            *(int32_t *)(v10 + 52) = v80 == 0 ? 0 : v80 + v38;
                                                                                                                                                            *(int32_t *)(v10 + 60) = v82 == 0 ? 0 : v82 + v43;
                                                                                                                                                            *(int32_t *)(v10 + 68) = v84 == 0 ? 0 : v84 + v53;
                                                                                                                                                            *(int32_t *)(v10 + 72) = v85;
                                                                                                                                                            *(int32_t *)(v10 + 76) = v86 == 0 ? 0 : v86 + v63;
                                                                                                                                                            goto lab_0x1800172ac;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x1800172f0 - 0x180017aa3
int64_t function_1800172f0(int64_t a1, int32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180017312
    *v1 = a2;
    if (a1 == 0) {
        // 0x180017a71
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v2 = a2;
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18001731e
    uint32_t v4 = *v3; // 0x18001731e
    int64_t v5 = v2 + 4; // 0x180017321
    uint32_t v6 = (int32_t)v5;
    if (v4 < v6) {
        // 0x180017a71
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v7 = *(int32_t *)(a1 + 16); // 0x18001732e
    *v1 = v6;
    uint32_t v8 = v6 + 4; // 0x18001734a
    if (v4 < v8) {
        // 0x180017a71
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v9 = *(int32_t *)((v2 & 0xffffffff) + a1); // 0x18001733a
    int32_t v10 = v7 == 0 ? v9 : llvm_bswap_i32(v9);
    *v1 = v8;
    int32_t v11 = *(int32_t *)((v5 & 0xffffffff) + a1); // 0x180017358
    uint32_t v12 = v7 != 0 ? v7 == 0 ? v11 : llvm_bswap_i32(v11) : v10;
    int64_t v13; // bp-344, 0x1800172f0
    function_180005050(a1, (int64_t)v12, &v13);
    int32_t v14 = *v1; // 0x18001737d
    int64_t v15 = 0; // 0x18001737d
    uint32_t v16 = *v3; // 0x18001738c
    int32_t v17; // 0x1800172f0
    int64_t v18; // 0x1800172f0
    while (v14 + 4 <= v16) {
        // 0x18001739c
        *v1 = v14 + 4;
        v14 += 8;
        if (v14 > v16) {
            // break -> 0x180017a71
            break;
        }
        int64_t v19 = v15 + 1; // 0x1800173af
        *v1 = v14;
        v15 = v19 & 0xffffffff;
        v17 = v14;
        v18 = 0;
        if ((int32_t)v19 >= 5) {
            goto lab_0x1800173cd;
        }
        v16 = *v3;
    }
  lab_0x180017a71:
    // 0x180017a71
    __security_check_cookie(g17);
    return &g47;
  lab_0x1800173cd:;
    int32_t v20 = v17 + 4; // 0x1800173d0
    if (v20 > *v3) {
        goto lab_0x180017a71;
    } else {
        // 0x1800173dc
        *v1 = v20;
        int64_t v21 = v18 + 1; // 0x1800173e0
        v17 = v20;
        v18 = v21 & 0xffffffff;
        if ((int32_t)v21 < 9) {
            goto lab_0x1800173cd;
        }
    }
}

// Address range: 0x180017ab0 - 0x180018190
int64_t function_180017ab0(int64_t a1, int32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180017ad2
    *v1 = a2;
    if (a1 == 0) {
        // 0x18001815a
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v2 = a2;
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x180017ade
    uint32_t v4 = *v3; // 0x180017ade
    int64_t v5 = v2 + 4; // 0x180017ae1
    uint32_t v6 = (int32_t)v5;
    if (v4 < v6) {
        // 0x18001815a
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v7 = *(int32_t *)(a1 + 16); // 0x180017aee
    *v1 = v6;
    uint32_t v8 = v6 + 4; // 0x180017b0a
    if (v4 < v8) {
        // 0x18001815a
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v9 = *(int32_t *)((v2 & 0xffffffff) + a1); // 0x180017afa
    int32_t v10 = v7 == 0 ? v9 : llvm_bswap_i32(v9);
    *v1 = v8;
    int32_t v11 = *(int32_t *)((v5 & 0xffffffff) + a1); // 0x180017b18
    uint32_t v12 = v7 != 0 ? v7 == 0 ? v11 : llvm_bswap_i32(v11) : v10;
    int64_t v13; // bp-344, 0x180017ab0
    function_180005050(a1, (int64_t)v12, &v13);
    int32_t v14 = *v1; // 0x180017b3d
    int64_t v15 = 0; // 0x180017b3d
    uint32_t v16 = *v3; // 0x180017b4c
    int32_t v17; // 0x180017ab0
    int64_t v18; // 0x180017ab0
    while (v14 + 4 <= v16) {
        // 0x180017b5c
        *v1 = v14 + 4;
        v14 += 8;
        if (v14 > v16) {
            // break -> 0x18001815a
            break;
        }
        int64_t v19 = v15 + 1; // 0x180017b6f
        *v1 = v14;
        v15 = v19 & 0xffffffff;
        v17 = v14;
        v18 = 0;
        if ((int32_t)v19 >= 5) {
            goto lab_0x180017b89;
        }
        v16 = *v3;
    }
  lab_0x18001815a:
    // 0x18001815a
    __security_check_cookie(g17);
    return &g47;
  lab_0x180017b89:;
    int32_t v20 = v17 + 4; // 0x180017b8c
    if (v20 > *v3) {
        goto lab_0x18001815a;
    } else {
        // 0x180017b98
        *v1 = v20;
        int64_t v21 = v18 + 1; // 0x180017b9c
        v17 = v20;
        v18 = v21 & 0xffffffff;
        if ((int32_t)v21 < 21) {
            goto lab_0x180017b89;
        }
    }
}

// Address range: 0x180018190 - 0x1800188c7
int64_t function_180018190(int64_t a1, uint32_t a2, int64_t * a3) {
    // 0x180018190
    if (a2 == 0) {
        // 0x1800181b2
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x1800181d7
    *v1 = a2;
    if (a1 == 0) {
        // 0x18001888b
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 12); // 0x1800181e3
    uint32_t v3 = *v2; // 0x1800181e3
    uint32_t v4 = a2 + 4; // 0x1800181e6
    if (v3 < v4) {
        // 0x18001888b
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v5 = *(int32_t *)(a1 + 16); // 0x1800181f3
    *v1 = v4;
    uint32_t v6 = a2 + 8; // 0x18001820f
    if (v6 > v3) {
        // 0x18001888b
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v7 = *(int32_t *)((int64_t)a2 + a1); // 0x1800181ff
    int32_t v8 = v5 == 0 ? v7 : llvm_bswap_i32(v7);
    *v1 = v6;
    int32_t v9 = *(int32_t *)((int64_t)v4 + a1); // 0x180018221
    uint32_t v10 = v5 != 0 ? v5 == 0 ? v9 : llvm_bswap_i32(v9) : v8;
    int64_t v11; // bp-344, 0x180018190
    function_180005050(a1, (int64_t)v10, &v11);
    int32_t v12 = *v1; // 0x180018242
    int64_t v13 = 0; // 0x180018242
    uint32_t v14 = *v2; // 0x180018251
    int32_t v15; // 0x180018190
    int64_t v16; // 0x180018190
    while (v12 + 4 <= v14) {
        // 0x180018261
        *v1 = v12 + 4;
        v12 += 8;
        if (v12 > v14) {
            // break -> 0x18001888b
            break;
        }
        // 0x180018274
        *v1 = v12;
        int64_t v17 = v13 + 1; // 0x180018278
        v13 = v17 & 0xffffffff;
        v15 = v12;
        v16 = 0;
        if ((int32_t)v17 >= 5) {
            goto lab_0x18001828a;
        }
        v14 = *v2;
    }
  lab_0x18001888b:
    // 0x18001888b
    __security_check_cookie(g17);
    return &g47;
  lab_0x18001828a:;
    int32_t v18 = v15 + 4; // 0x18001828d
    if (v18 > *v2) {
        goto lab_0x18001888b;
    } else {
        // 0x180018299
        *v1 = v18;
        int64_t v19 = v16 + 1; // 0x18001829d
        v15 = v18;
        v16 = v19 & 0xffffffff;
        if ((int32_t)v19 < 21) {
            goto lab_0x18001828a;
        }
    }
}

// Address range: 0x1800188d0 - 0x1800190c6
int64_t function_1800188d0(int64_t a1, int32_t a2, int64_t * a3) {
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x1800188f2
    *v1 = a2;
    if (a1 == 0) {
        // 0x180019090
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v2 = a2;
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x1800188fe
    uint32_t v4 = *v3; // 0x1800188fe
    int64_t v5 = v2 + 4; // 0x180018901
    uint32_t v6 = (int32_t)v5;
    if (v4 < v6) {
        // 0x180019090
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v7 = *(int32_t *)(a1 + 16); // 0x18001890e
    *v1 = v6;
    uint32_t v8 = v6 + 4; // 0x18001892a
    if (v4 < v8) {
        // 0x180019090
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v9 = *(int32_t *)((v2 & 0xffffffff) + a1); // 0x18001891a
    int32_t v10 = v7 == 0 ? v9 : llvm_bswap_i32(v9);
    *v1 = v8;
    int32_t v11 = *(int32_t *)((v5 & 0xffffffff) + a1); // 0x180018938
    uint32_t v12 = v7 != 0 ? v7 == 0 ? v11 : llvm_bswap_i32(v11) : v10;
    int64_t v13; // bp-344, 0x1800188d0
    function_180005050(a1, (int64_t)v12, &v13);
    int32_t v14 = *v1; // 0x18001895d
    int64_t v15 = 0; // 0x18001895d
    uint32_t v16 = *v3; // 0x18001896c
    int32_t v17; // 0x1800188d0
    int64_t v18; // 0x1800188d0
    while (v14 + 4 <= v16) {
        // 0x18001897c
        *v1 = v14 + 4;
        v14 += 8;
        if (v14 > v16) {
            // break -> 0x180019090
            break;
        }
        int64_t v19 = v15 + 1; // 0x18001898f
        *v1 = v14;
        v15 = v19 & 0xffffffff;
        v17 = v14;
        v18 = 0;
        if ((int32_t)v19 >= 5) {
            goto lab_0x1800189a9;
        }
        v16 = *v3;
    }
  lab_0x180019090:
    // 0x180019090
    __security_check_cookie(g17);
    return &g47;
  lab_0x1800189a9:;
    int32_t v20 = v17 + 4; // 0x1800189ac
    if (v20 > *v3) {
        goto lab_0x180019090;
    } else {
        // 0x1800189b8
        *v1 = v20;
        int64_t v21 = v18 + 1; // 0x1800189bc
        v17 = v20;
        v18 = v21 & 0xffffffff;
        if ((int32_t)v21 < 9) {
            goto lab_0x1800189a9;
        }
    }
}

// Address range: 0x1800190d0 - 0x1800196eb
int64_t function_1800190d0(int64_t a1, int64_t a2, int64_t a3) {
    int32_t v1 = a3; // 0x1800190fc
    uint32_t v2 = (int32_t)a2;
    if (v2 == 0 || v1 == 0) {
        // 0x1800196ce
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x180019110
    *v3 = v1;
    if ((int32_t)function_1800020d0(&g31, a2) == 0) {
        // 0x1800196ce
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180019160
    int64_t v4; // bp-1160, 0x1800190d0
    int64_t v5 = &v4; // 0x180019162
    int32_t * v6 = (int32_t *)(a1 + 12);
    int32_t * v7 = (int32_t *)(a1 + 16);
    int64_t v8 = 0; // 0x1800190d0
    memset(&v4, 0, 260);
    uint32_t v9 = *v3; // 0x18001917e
    uint32_t v10 = *v6; // 0x180019181
    uint32_t v11 = v9 + 4; // 0x180019185
    int32_t v12; // 0x1800190d0
    int64_t v13; // 0x1800190d0
    int64_t v14; // 0x1800190d0
    int64_t v15; // bp-344, 0x1800190d0
    int64_t v16; // bp-616, 0x1800190d0
    int64_t v17; // bp-888, 0x1800190d0
    while (v11 <= v10) {
        int64_t v18 = v8;
        *v3 = v11;
        uint32_t v19 = v9 + 8; // 0x1800191ab
        if (v19 > v10) {
            // break -> 0x1800196ce
            break;
        }
        int32_t v20 = *v7; // 0x180019199
        int32_t v21 = *(int32_t *)((int64_t)v9 + v5); // 0x1800191a0
        *v3 = v19;
        uint32_t v22 = v9 + 12; // 0x1800191d2
        if (v22 > v10) {
            // break -> 0x1800196ce
            break;
        }
        int32_t v23 = *(int32_t *)((int64_t)v11 + v5); // 0x1800191c4
        *v3 = v22;
        uint32_t v24 = v9 + 16; // 0x1800191f5
        if (v24 > v10) {
            // break -> 0x1800196ce
            break;
        }
        int32_t v25 = *(int32_t *)((int64_t)v19 + v5); // 0x1800191eb
        *v3 = v24;
        uint32_t v26 = v9 + 20; // 0x18001921b
        if (v26 > v10) {
            // break -> 0x1800196ce
            break;
        }
        int32_t v27 = *(int32_t *)((int64_t)v22 + v5); // 0x18001920e
        *v3 = v26;
        uint32_t v28 = v9 + 24; // 0x18001923e
        if (v28 > v10) {
            // break -> 0x1800196ce
            break;
        }
        int32_t v29 = *(int32_t *)((int64_t)v24 + v5); // 0x180019234
        *v3 = v28;
        uint32_t v30 = v9 + 28; // 0x180019264
        if (v30 > v10) {
            // break -> 0x1800196ce
            break;
        }
        int32_t v31 = *(int32_t *)((int64_t)v26 + v5); // 0x180019257
        *v3 = v30;
        uint32_t v32 = v9 + 32; // 0x180019287
        if (v32 > v10) {
            // break -> 0x1800196ce
            break;
        }
        int32_t v33 = *(int32_t *)((int64_t)v28 + v5); // 0x18001927d
        *v3 = v32;
        uint32_t v34 = v9 + 36; // 0x1800192ad
        if (v34 > v10) {
            // break -> 0x1800196ce
            break;
        }
        int32_t v35 = *(int32_t *)((int64_t)v30 + v5); // 0x1800192a0
        *v3 = v34;
        uint32_t v36 = v9 + 40; // 0x1800192c1
        if (v36 > v10) {
            // break -> 0x1800196ce
            break;
        }
        // 0x1800192cd
        *v3 = v36;
        uint32_t v37 = v9 + 44; // 0x1800192d4
        if (v37 > v10) {
            // break -> 0x1800196ce
            break;
        }
        // 0x1800192e0
        *v3 = v37;
        uint32_t v38 = v9 + 48; // 0x1800192e7
        if (v38 > v10) {
            // break -> 0x1800196ce
            break;
        }
        // 0x1800192f3
        *v3 = v38;
        uint32_t v39 = v9 + 52; // 0x1800192fa
        if (v39 > v10) {
            // break -> 0x1800196ce
            break;
        }
        int32_t v40 = v20 == 0 ? v21 : llvm_bswap_i32(v21);
        uint32_t v41 = v20 != 0 ? v20 == 0 ? v23 : llvm_bswap_i32(v23) : v40;
        int32_t v42 = v20 == 0 ? v25 : llvm_bswap_i32(v25);
        uint32_t v43 = v20 != 0 ? v20 == 0 ? v27 : llvm_bswap_i32(v27) : v42;
        int32_t v44 = v20 == 0 ? v29 : llvm_bswap_i32(v29);
        uint32_t v45 = v20 != 0 ? v20 == 0 ? v31 : llvm_bswap_i32(v31) : v44;
        int32_t v46 = v20 == 0 ? v33 : llvm_bswap_i32(v33);
        uint32_t v47 = v20 != 0 ? v20 == 0 ? v35 : llvm_bswap_i32(v35) : v46;
        *v3 = v39;
        function_180005050(a1, (int64_t)v41, &v4);
        function_180005050(a1, (int64_t)v43, &v17);
        function_180005050(a1, (int64_t)v45, &v16);
        function_180005050(a1, (int64_t)v47, &v15);
        uint32_t v48 = *(int32_t *)&g31 - 911; // 0x180019353
        int64_t v49 = a1; // 0x18001935b
        int32_t v50 = 7; // 0x18001935b
        if (v48 < 24) {
            // 0x18001935d
            v50 = (1 << (v48 & 31) & 0x880081) == 0 ? 7 : 5;
            v49 = 0x880081;
        }
        if (v49 == 0) {
            // break (via goto) -> 0x1800196ce
            goto lab_0x1800196ce_2;
        }
        uint32_t v51 = *v3 + 4; // 0x18001937f
        if (v51 > *v6) {
            // break (via goto) -> 0x1800196ce
            goto lab_0x1800196ce_2;
        }
        // 0x18001938b
        *v3 = v51;
        int64_t v52 = 1; // 0x18001938f
        int64_t v53 = v52 & 0xffffffff; // 0x18001938f
        while (v50 > (int32_t)v52) {
            if (v49 == 0) {
                // break (via goto) -> 0x1800196ce
                goto lab_0x1800196ce_2;
            }
            // 0x18001937c
            v51 = *v3 + 4;
            if (v51 > *v6) {
                // break (via goto) -> 0x1800196ce
                goto lab_0x1800196ce_2;
            }
            // 0x18001938b
            *v3 = v51;
            v52 = v53 + 1;
            v53 = v52 & 0xffffffff;
        }
        int64_t v54 = v53; // 0x1800193a0
        if (g36 != 0) {
            int64_t v55 = 312 * (0x100000000 * v18 >> 32);
            int64_t v56 = v5; // 0x1800193b8
            int64_t v57 = v55 + 52 + g36; // 0x1800193b8
            char v58 = *(char *)v56; // 0x1800193c0
            *(char *)v57 = v58;
            v56++;
            v57++;
            v54 = v55;
            while (v58 != 0) {
                // 0x1800193c0
                v58 = *(char *)v56;
                *(char *)v57 = v58;
                v56++;
                v57++;
                v54 = v55;
            }
        }
        int64_t v59 = v18 + 1; // 0x1800193d2
        v8 = v59 & 0xffffffff;
        if ((int32_t)v59 >= v2) {
            // 0x1800193f0
            *v3 = v1;
            v12 = v1;
            v14 = v54;
            v13 = 0;
            goto lab_0x1800193f0_2;
        }
        memset(&v4, 0, 260);
        v9 = *v3;
        v10 = *v6;
        v11 = v9 + 4;
    }
  lab_0x1800196ce_2:
    // 0x1800196ce
    __security_check_cookie(g17);
    return &g47;
  lab_0x1800193f0_2:;
    // 0x1800193f0
    int64_t v60; // 0x1800190d0
    int32_t v61; // 0x1800190d0
    int32_t v62; // 0x18001942d
    uint32_t v63; // 0x180019541
    int32_t v64; // 0x18001955b
    int32_t v65; // 0x180019580
    if (v14 == 0) {
        goto lab_0x1800196ce_2;
    } else {
        uint32_t v66 = *v6; // 0x180019415
        uint32_t v67 = v12 + 4; // 0x180019419
        if (v67 > v66) {
            goto lab_0x1800196ce_2;
        } else {
            // 0x180019425
            *v3 = v67;
            uint32_t v68 = v12 + 8; // 0x18001943f
            if (v68 > v66) {
                goto lab_0x1800196ce_2;
            } else {
                // 0x18001944c
                v62 = *v7;
                int32_t v69 = *(int32_t *)(v14 + (int64_t)v12); // 0x180019434
                *v3 = v68;
                uint32_t v70 = v12 + 12; // 0x180019466
                if (v70 > v66) {
                    goto lab_0x1800196ce_2;
                } else {
                    int32_t v71 = *(int32_t *)(v14 + (int64_t)v67); // 0x180019458
                    *v3 = v70;
                    uint32_t v72 = v12 + 16; // 0x180019489
                    if (v72 > v66) {
                        goto lab_0x1800196ce_2;
                    } else {
                        int32_t v73 = *(int32_t *)(v14 + (int64_t)v68); // 0x18001947f
                        *v3 = v72;
                        uint32_t v74 = v12 + 20; // 0x1800194af
                        if (v74 > v66) {
                            goto lab_0x1800196ce_2;
                        } else {
                            int32_t v75 = *(int32_t *)(v14 + (int64_t)v70); // 0x1800194a2
                            *v3 = v74;
                            uint32_t v76 = v12 + 24; // 0x1800194d2
                            if (v76 > v66) {
                                goto lab_0x1800196ce_2;
                            } else {
                                int32_t v77 = *(int32_t *)(v14 + (int64_t)v72); // 0x1800194c8
                                *v3 = v76;
                                uint32_t v78 = v12 + 28; // 0x1800194f8
                                if (v78 > v66) {
                                    goto lab_0x1800196ce_2;
                                } else {
                                    int32_t v79 = *(int32_t *)(v14 + (int64_t)v74); // 0x1800194eb
                                    *v3 = v78;
                                    uint32_t v80 = v12 + 32; // 0x18001951b
                                    if (v80 > v66) {
                                        goto lab_0x1800196ce_2;
                                    } else {
                                        int32_t v81 = *(int32_t *)(v14 + (int64_t)v76); // 0x180019511
                                        *v3 = v80;
                                        v63 = v12 + 36;
                                        if (v63 > v66) {
                                            goto lab_0x1800196ce_2;
                                        } else {
                                            int32_t v82 = *(int32_t *)(v14 + (int64_t)v78); // 0x180019534
                                            *v3 = v63;
                                            uint32_t v83 = v12 + 40; // 0x180019566
                                            if (v83 > v66) {
                                                goto lab_0x1800196ce_2;
                                            } else {
                                                // 0x180019574
                                                v64 = *(int32_t *)(v14 + (int64_t)v80);
                                                *v3 = v83;
                                                uint32_t v84 = v12 + 44; // 0x18001958b
                                                if (v84 > v66) {
                                                    goto lab_0x1800196ce_2;
                                                } else {
                                                    // 0x180019598
                                                    v65 = *(int32_t *)(v14 + (int64_t)v63);
                                                    *v3 = v84;
                                                    uint32_t v85 = v12 + 48; // 0x18001959f
                                                    if (v85 > v66) {
                                                        goto lab_0x1800196ce_2;
                                                    } else {
                                                        // 0x1800195ab
                                                        *v3 = v85;
                                                        uint32_t v86 = v12 + 52; // 0x1800195b2
                                                        if (v86 > v66) {
                                                            goto lab_0x1800196ce_2;
                                                        } else {
                                                            int32_t v87 = v62 == 0 ? v69 : llvm_bswap_i32(v69);
                                                            uint32_t v88 = v62 != 0 ? v62 == 0 ? v71 : llvm_bswap_i32(v71) : v87;
                                                            int32_t v89 = v62 == 0 ? v73 : llvm_bswap_i32(v73);
                                                            uint32_t v90 = v62 != 0 ? v62 == 0 ? v75 : llvm_bswap_i32(v75) : v89;
                                                            int32_t v91 = v62 == 0 ? v77 : llvm_bswap_i32(v77);
                                                            uint32_t v92 = v62 != 0 ? v62 == 0 ? v79 : llvm_bswap_i32(v79) : v91;
                                                            int32_t v93 = v62 == 0 ? v81 : llvm_bswap_i32(v81);
                                                            uint32_t v94 = v62 != 0 ? v62 == 0 ? v82 : llvm_bswap_i32(v82) : v93;
                                                            *v3 = v86;
                                                            function_180005050(a1, (int64_t)v88, &v15);
                                                            function_180005050(a1, (int64_t)v90, &v16);
                                                            function_180005050(a1, (int64_t)v92, &v17);
                                                            function_180005050(a1, (int64_t)v94, &v4);
                                                            uint32_t v95 = *(int32_t *)&g31 - 911; // 0x18001960a
                                                            v60 = a1;
                                                            v61 = 7;
                                                            if (v95 < 24) {
                                                                // 0x180019614
                                                                v61 = (1 << (v95 & 31) & 0x880081) == 0 ? 7 : 5;
                                                                v60 = 0x880081;
                                                                goto lab_0x180019623;
                                                            } else {
                                                                goto lab_0x180019623;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x180019623:;
    int64_t v96 = 312 * (0x100000000 * v13 >> 32) + g36; // 0x1800193fd
    uint32_t v97 = v62 == 0 ? v64 : llvm_bswap_i32(v64);
    int32_t v98 = v62 == 0 ? v65 : llvm_bswap_i32(v65);
    int64_t v99 = 0; // 0x180019626
    goto lab_0x180019628;
  lab_0x180019628:;
    int32_t v100; // 0x1800190d0
    int64_t v101; // 0x1800190d0
    if (v60 == 0) {
        goto lab_0x1800196ce_2;
    } else {
        int32_t v102 = *v3 + 4; // 0x180019630
        if (v102 > *v6) {
            goto lab_0x1800196ce_2;
        } else {
            // 0x180019638
            *v3 = v102;
            int64_t v103 = v99 + 1; // 0x18001963c
            v99 = v103 & 0xffffffff;
            if (v61 > (int32_t)v103) {
                goto lab_0x180019628;
            } else {
                int32_t v104 = v98 == 0 ? 0 : v63;
                if ((int32_t)function_1800196f0(a1, v96, (int64_t)v97, v104 + v98) == 0) {
                    goto lab_0x1800196ce_2;
                } else {
                    int64_t v105 = v13 + 1; // 0x180019664
                    *v3 = v102;
                    v12 = v102;
                    v14 = a1;
                    v13 = v105 & 0xffffffff;
                    if ((int32_t)v105 < v2) {
                        goto lab_0x1800193f0_2;
                    } else {
                        // 0x180019678
                        v100 = v102;
                        v101 = 0;
                        goto lab_0x180019680;
                    }
                }
            }
        }
    }
  lab_0x180019680:
    if (a1 == 0) {
        goto lab_0x1800196ce_2;
    } else {
        int32_t v106 = v100 + 4; // 0x180019688
        if (v106 > *v6) {
            goto lab_0x1800196ce_2;
        } else {
            // 0x180019690
            *v3 = v106;
            int64_t v107 = v101 + 1; // 0x180019694
            v100 = v106;
            v101 = v107 & 0xffffffff;
            if ((int32_t)v107 < 64) {
                goto lab_0x180019680;
            } else {
                goto lab_0x1800196ce_2;
            }
        }
    }
}

// Address range: 0x1800196f0 - 0x1800198eb
int64_t function_1800196f0(int64_t a1, int64_t a2, int64_t a3, int32_t a4) {
    uint32_t v1 = (int32_t)a3; // 0x180019729
    if (v1 == 0 || a2 == 0 || a4 == 0) {
      lab_0x1800198ce:
        // 0x1800198ce
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x180019747
    *v2 = a4;
    int32_t * v3 = (int32_t *)(a1 + 12);
    int32_t v4 = a4; // 0x180019878
    int64_t v5 = 0; // 0x1800198a3
    while (a1 != 0) {
        uint32_t v6 = *v3; // 0x180019762
        uint32_t v7 = v4 + 4; // 0x180019766
        if (v7 > v6) {
            // break -> 0x1800198ce
            break;
        }
        // 0x180019772
        *v2 = v7;
        uint32_t v8 = v4 + 8; // 0x18001978c
        if (v8 > v6) {
            // break -> 0x1800198ce
            break;
        }
        int32_t v9 = *(int32_t *)(a1 + 16); // 0x180019779
        int32_t v10 = *(int32_t *)((int64_t)v4 + a1); // 0x180019780
        *v2 = v8;
        uint32_t v11 = v4 + 12; // 0x1800197b1
        if (v11 > v6) {
            // break -> 0x1800198ce
            break;
        }
        int32_t v12 = *(int32_t *)((int64_t)v7 + a1); // 0x1800197a2
        *v2 = v11;
        uint32_t v13 = v4 + 16; // 0x1800197d2
        if (v13 > v6) {
            // break -> 0x1800198ce
            break;
        }
        int32_t v14 = *(int32_t *)((int64_t)v8 + a1); // 0x1800197c7
        *v2 = v13;
        uint32_t v15 = v4 + 20; // 0x1800197f6
        if (v15 > v6) {
            // break -> 0x1800198ce
            break;
        }
        int32_t v16 = *(int32_t *)((int64_t)v11 + a1); // 0x1800197e8
        *v2 = v15;
        uint32_t v17 = v4 + 24; // 0x180019809
        if (v17 > v6) {
            // break -> 0x1800198ce
            break;
        }
        // 0x180019815
        *v2 = v17;
        uint32_t v18 = v4 + 28; // 0x18001981c
        if (v18 > v6) {
            // break -> 0x1800198ce
            break;
        }
        // 0x180019828
        *v2 = v18;
        uint32_t v19 = v4 + 32; // 0x18001982f
        if (v19 > v6) {
            // break -> 0x1800198ce
            break;
        }
        int32_t v20 = v9 == 0 ? v10 : llvm_bswap_i32(v10);
        uint32_t v21 = v9 != 0 ? v9 == 0 ? v12 : llvm_bswap_i32(v12) : v20;
        int32_t v22 = v9 == 0 ? v14 : llvm_bswap_i32(v14);
        uint32_t v23 = v9 != 0 ? v9 == 0 ? v16 : llvm_bswap_i32(v16) : v22;
        *v2 = v19;
        int32_t v24 = *(int32_t *)((int64_t)v18 + a1); // 0x180019845
        int32_t v25 = v9 == 0 ? v24 : llvm_bswap_i32(v24);
        int64_t v26; // bp-568, 0x1800196f0
        function_180005050(a1, (int64_t)v21, &v26);
        int64_t v27; // bp-296, 0x1800196f0
        function_180005050(a1, (int64_t)v23, &v27);
        int32_t v28 = (v25 == 0 ? 0 : v18) + v25;
        v4 = *v2;
        if (v28 != 0) {
            // 0x180019880
            *v2 = v28;
            int32_t v29 = v28; // 0x180019885
            v29 += 4;
            if (v29 > *v3) {
                // break (via goto) -> 0x1800198ce
                goto lab_0x1800198ce;
            }
            // 0x180019898
            *v2 = v29;
            int64_t v30 = 1; // 0x18001989c
            int64_t v31 = v30 & 0xffffffff; // 0x1800198a1
            while ((int32_t)v30 < 32) {
                // 0x18001988d
                v29 += 4;
                if (v29 > *v3) {
                    // break (via goto) -> 0x1800198ce
                    goto lab_0x1800198ce;
                }
                // 0x180019898
                *v2 = v29;
                v30 = v31 + 1;
                v31 = v30 & 0xffffffff;
            }
        }
        // 0x1800198a3
        *v2 = v4;
        if ((int32_t)v5 >= v1) {
            // break -> 0x1800198ce
            break;
        }
        v5 &= 0xffffffff;
    }
    // 0x1800198ce
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x1800198f0 - 0x180019c32
int64_t function_1800198f0(int64_t a1, int64_t a2, int32_t a3) {
    uint32_t v1 = (int32_t)a2; // 0x180019922
    if (a3 == 0 || v1 == 0) {
        // 0x180019c13
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 8); // 0x180019927
    *v2 = a3;
    int32_t v3 = *(int32_t *)&g31; // 0x18001992b
    if (v3 != 866 != v3 != 877) {
        // 0x18001993f
        if ((int32_t)function_1800020d0(&g31, a2) == 0) {
            // 0x180019c13
            __security_check_cookie(g17);
            return &g47;
        }
    }
    // 0x180019953
    int64_t v4; // bp-1144, 0x1800198f0
    int64_t v5 = &v4; // 0x180019982
    int64_t v6 = 0; // 0x1800198f0
    memset(&v4, 0, 260);
    uint32_t v7 = *v2; // 0x18001999e
    uint32_t v8 = *(int32_t *)(a1 + 12); // 0x1800199a1
    uint32_t v9 = v7 + 4; // 0x1800199a5
    while (v9 <= v8) {
        int64_t v10 = v6;
        *v2 = v9;
        uint32_t v11 = v7 + 8; // 0x1800199cb
        if (v11 > v8) {
            // break -> 0x180019c13
            break;
        }
        int32_t v12 = *(int32_t *)(a1 + 16); // 0x1800199b9
        int32_t v13 = *(int32_t *)((int64_t)v7 + v5); // 0x1800199c0
        *v2 = v11;
        uint32_t v14 = v7 + 12; // 0x1800199f2
        if (v14 > v8) {
            // break -> 0x180019c13
            break;
        }
        int32_t v15 = *(int32_t *)((int64_t)v9 + v5); // 0x1800199e4
        *v2 = v14;
        uint32_t v16 = v7 + 16; // 0x180019a15
        if (v16 > v8) {
            // break -> 0x180019c13
            break;
        }
        int32_t v17 = *(int32_t *)((int64_t)v11 + v5); // 0x180019a0b
        *v2 = v16;
        uint32_t v18 = v7 + 20; // 0x180019a3b
        if (v18 > v8) {
            // break -> 0x180019c13
            break;
        }
        int32_t v19 = *(int32_t *)((int64_t)v14 + v5); // 0x180019a2e
        *v2 = v18;
        uint32_t v20 = v7 + 24; // 0x180019a5e
        if (v20 > v8) {
            // break -> 0x180019c13
            break;
        }
        int32_t v21 = *(int32_t *)((int64_t)v16 + v5); // 0x180019a54
        *v2 = v20;
        uint32_t v22 = v7 + 28; // 0x180019a84
        if (v22 > v8) {
            // break -> 0x180019c13
            break;
        }
        int32_t v23 = *(int32_t *)((int64_t)v18 + v5); // 0x180019a77
        *v2 = v22;
        uint32_t v24 = v7 + 32; // 0x180019aa7
        if (v24 > v8) {
            // break -> 0x180019c13
            break;
        }
        int32_t v25 = *(int32_t *)((int64_t)v20 + v5); // 0x180019a9d
        *v2 = v24;
        uint32_t v26 = v7 + 36; // 0x180019acd
        if (v26 > v8) {
            // break -> 0x180019c13
            break;
        }
        int32_t v27 = *(int32_t *)((int64_t)v22 + v5); // 0x180019ac0
        *v2 = v26;
        uint32_t v28 = v7 + 40; // 0x180019ae1
        if (v28 > v8) {
            // break -> 0x180019c13
            break;
        }
        // 0x180019aed
        *v2 = v28;
        uint32_t v29 = v7 + 44; // 0x180019af4
        if (v29 > v8) {
            // break -> 0x180019c13
            break;
        }
        // 0x180019b00
        *v2 = v29;
        uint32_t v30 = v7 + 48; // 0x180019b07
        if (v30 > v8) {
            // break -> 0x180019c13
            break;
        }
        // 0x180019b13
        *v2 = v30;
        uint32_t v31 = v7 + 52; // 0x180019b1a
        if (v31 > v8) {
            // break -> 0x180019c13
            break;
        }
        // 0x180019b26
        *v2 = v31;
        uint32_t v32 = v7 + 56; // 0x180019b2d
        if (v32 > v8) {
            // break -> 0x180019c13
            break;
        }
        // 0x180019b39
        *v2 = v32;
        if (*(int32_t *)&g31 >= 964) {
            uint32_t v33 = v7 + 60; // 0x180019b4c
            if (v33 > v8) {
                // break -> 0x180019c13
                break;
            }
            // 0x180019b58
            *v2 = v33;
            uint32_t v34 = v7 + 64; // 0x180019b5f
            if (v34 > v8) {
                // break -> 0x180019c13
                break;
            }
            // 0x180019b6b
            *v2 = v34;
        }
        int32_t v35 = v12 == 0 ? v13 : llvm_bswap_i32(v13);
        uint32_t v36 = v12 != 0 ? v12 == 0 ? v15 : llvm_bswap_i32(v15) : v35;
        int32_t v37 = v12 == 0 ? v17 : llvm_bswap_i32(v17);
        uint32_t v38 = v12 != 0 ? v12 == 0 ? v19 : llvm_bswap_i32(v19) : v37;
        int32_t v39 = v12 == 0 ? v21 : llvm_bswap_i32(v21);
        uint32_t v40 = v12 != 0 ? v12 == 0 ? v23 : llvm_bswap_i32(v23) : v39;
        int32_t v41 = v12 == 0 ? v25 : llvm_bswap_i32(v25);
        uint32_t v42 = v12 != 0 ? v12 == 0 ? v27 : llvm_bswap_i32(v27) : v41;
        function_180005050(a1, (int64_t)v36, &v4);
        int64_t v43; // bp-872, 0x1800198f0
        function_180005050(a1, (int64_t)v38, &v43);
        int64_t v44; // bp-600, 0x1800198f0
        function_180005050(a1, (int64_t)v40, &v44);
        int64_t v45; // bp-328, 0x1800198f0
        function_180005050(a1, (int64_t)v42, &v45);
        if (g36 != 0) {
            int64_t v46 = v5; // 0x180019bce
            int64_t v47 = 312 * (0x100000000 * v10 >> 32) + 52 + g36; // 0x180019bce
            char v48 = *(char *)v46; // 0x180019bd0
            *(char *)v47 = v48;
            v46++;
            v47++;
            while (v48 != 0) {
                // 0x180019bd0
                v48 = *(char *)v46;
                *(char *)v47 = v48;
                v46++;
                v47++;
            }
        }
        int64_t v49 = v10 + 1; // 0x180019be2
        v6 = v49 & 0xffffffff;
        if ((int32_t)v49 >= v1) {
            // break -> 0x180019c13
            break;
        }
        memset(&v4, 0, 260);
        v7 = *v2;
        v8 = *(int32_t *)(a1 + 12);
        v9 = v7 + 4;
    }
    // 0x180019c13
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180019c40 - 0x180019f2f
int64_t function_180019c40(int64_t a1, int64_t a2, int64_t a3) {
    int32_t v1 = a3; // 0x180019c61
    uint32_t v2 = (int32_t)a2; // 0x180019c70
    if (v2 == 0 || v1 == 0) {
        // 0x180019f11
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x180019c74
    *v3 = v1;
    if ((int32_t)function_1800020d0(&g31, a2) == 0) {
        // 0x180019f11
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x180019cb0
    int64_t v4; // bp-584, 0x180019c40
    int64_t v5 = &v4; // 0x180019cb2
    int64_t v6 = 0; // 0x180019c40
    memset(&v4, 0, 260);
    uint32_t v7 = *v3; // 0x180019cce
    uint32_t v8 = *(int32_t *)(a1 + 12); // 0x180019cd1
    uint32_t v9 = v7 + 4; // 0x180019cd5
    while (v9 <= v8) {
        int64_t v10 = v6;
        *v3 = v9;
        uint32_t v11 = v7 + 8; // 0x180019cfd
        if (v11 > v8) {
            // break -> 0x180019f11
            break;
        }
        int32_t v12 = *(int32_t *)(a1 + 16); // 0x180019ce9
        int32_t v13 = *(int32_t *)((int64_t)v7 + v5); // 0x180019cf1
        *v3 = v11;
        uint32_t v14 = v7 + 12; // 0x180019d24
        if (v14 > v8) {
            // break -> 0x180019f11
            break;
        }
        int32_t v15 = *(int32_t *)((int64_t)v9 + v5); // 0x180019d16
        *v3 = v14;
        uint32_t v16 = v7 + 16; // 0x180019d47
        if (v16 > v8) {
            // break -> 0x180019f11
            break;
        }
        int32_t v17 = *(int32_t *)((int64_t)v11 + v5); // 0x180019d3d
        *v3 = v16;
        uint32_t v18 = v7 + 20; // 0x180019d6d
        if (v18 > v8) {
            // break -> 0x180019f11
            break;
        }
        int32_t v19 = *(int32_t *)((int64_t)v14 + v5); // 0x180019d60
        *v3 = v18;
        uint32_t v20 = v7 + 24; // 0x180019d81
        if (v20 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019d8d
        *v3 = v20;
        uint32_t v21 = v7 + 28; // 0x180019d94
        if (v21 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019da0
        *v3 = v21;
        uint32_t v22 = v7 + 32; // 0x180019da7
        if (v22 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019db3
        *v3 = v22;
        uint32_t v23 = v7 + 36; // 0x180019dba
        if (v23 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019dc6
        *v3 = v23;
        uint32_t v24 = v7 + 40; // 0x180019dcd
        if (v24 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019dd9
        *v3 = v24;
        uint32_t v25 = v7 + 44; // 0x180019de0
        if (v25 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019dec
        *v3 = v25;
        uint32_t v26 = v7 + 48; // 0x180019df3
        if (v26 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019dff
        *v3 = v26;
        uint32_t v27 = v7 + 52; // 0x180019e06
        if (v27 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019e12
        *v3 = v27;
        uint32_t v28 = v7 + 56; // 0x180019e19
        if (v28 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019e25
        *v3 = v28;
        uint32_t v29 = v7 + 60; // 0x180019e2c
        if (v29 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019e38
        *v3 = v29;
        uint32_t v30 = v7 + 64; // 0x180019e3f
        if (v30 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019e4b
        *v3 = v30;
        uint32_t v31 = v7 + 68; // 0x180019e52
        if (v31 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019e5e
        *v3 = v31;
        uint32_t v32 = v7 + 72; // 0x180019e65
        if (v32 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019e71
        *v3 = v32;
        uint32_t v33 = v7 + 76; // 0x180019e78
        if (v33 > v8) {
            // break -> 0x180019f11
            break;
        }
        // 0x180019e84
        *v3 = v33;
        uint32_t v34 = v7 + 80; // 0x180019e8b
        if (v34 > v8) {
            // break -> 0x180019f11
            break;
        }
        int32_t v35 = v12 == 0 ? v13 : llvm_bswap_i32(v13);
        uint32_t v36 = v12 != 0 ? v12 == 0 ? v15 : llvm_bswap_i32(v15) : v35;
        int32_t v37 = v12 == 0 ? v17 : llvm_bswap_i32(v17);
        uint32_t v38 = v12 != 0 ? v12 == 0 ? v19 : llvm_bswap_i32(v19) : v37;
        *v3 = v34;
        function_180005050(a1, (int64_t)v36, &v4);
        int64_t v39; // bp-312, 0x180019c40
        function_180005050(a1, (int64_t)v38, &v39);
        if (g36 != 0) {
            int64_t v40 = v5; // 0x180019edc
            int64_t v41 = 312 * (0x100000000 * v10 >> 32) + 52 + g36; // 0x180019edc
            char v42 = *(char *)v40; // 0x180019ee0
            *(char *)v41 = v42;
            v40++;
            v41++;
            while (v42 != 0) {
                // 0x180019ee0
                v42 = *(char *)v40;
                *(char *)v41 = v42;
                v40++;
                v41++;
            }
        }
        int64_t v43 = v10 + 1; // 0x180019ef2
        v6 = v43 & 0xffffffff;
        if ((int32_t)v43 >= v2) {
            // break -> 0x180019f11
            break;
        }
        memset(&v4, 0, 260);
        v7 = *v3;
        v8 = *(int32_t *)(a1 + 12);
        v9 = v7 + 4;
    }
    // 0x180019f11
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180019f30 - 0x18001a2eb
int64_t function_180019f30(int64_t a1, int64_t a2, int32_t a3) {
    // 0x180019f30
    if (a3 == 0) {
        // 0x18001a2c8
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x180019f61
    *v1 = a3;
    uint32_t v2 = (int32_t)a2; // 0x180019f65
    if (v2 == 0 || (int32_t)function_180001b50(&g31, a2) == 0) {
        // 0x18001a2c8
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v3 = *v1; // 0x180019f96
    int64_t v4; // bp-344, 0x180019f30
    int64_t v5 = &v4;
    int32_t * v6 = (int32_t *)(a1 + 12);
    int32_t * v7 = (int32_t *)(a1 + 16);
    int64_t v8 = 0; // 0x180019f30
    int64_t v9; // bp-616, 0x180019f30
    memset(&v9, 0, 260);
    memset(&v4, 0, 260);
    uint32_t v10 = *v1; // 0x180019fe4
    uint32_t v11 = *v6; // 0x180019fe7
    uint32_t v12 = v10 + 4; // 0x180019feb
    int32_t v13; // 0x180019f30
    int64_t v14; // 0x180019f30
    int64_t v15; // 0x180019f30
    while (v12 <= v11) {
        int64_t v16 = v8;
        *v1 = v12;
        uint32_t v17 = v10 + 8; // 0x18001a012
        if (v17 > v11) {
            // break -> 0x18001a2c8
            break;
        }
        int32_t v18 = *v7; // 0x180019fff
        int32_t v19 = *(int32_t *)((int64_t)v10 + v5); // 0x18001a007
        *v1 = v17;
        uint32_t v20 = v10 + 12; // 0x18001a039
        if (v20 > v11) {
            // break -> 0x18001a2c8
            break;
        }
        int32_t v21 = *(int32_t *)((int64_t)v12 + v5); // 0x18001a02b
        *v1 = v20;
        uint32_t v22 = v10 + 16; // 0x18001a05c
        if (v22 > v11) {
            // break -> 0x18001a2c8
            break;
        }
        int32_t v23 = *(int32_t *)((int64_t)v17 + v5); // 0x18001a050
        *v1 = v22;
        uint32_t v24 = v10 + 20; // 0x18001a081
        if (v24 > v11) {
            // break -> 0x18001a2c8
            break;
        }
        int32_t v25 = *(int32_t *)((int64_t)v20 + v5); // 0x18001a072
        *v1 = v24;
        uint32_t v26 = v10 + 24; // 0x18001a094
        if (v26 > v11) {
            // break -> 0x18001a2c8
            break;
        }
        int32_t v27 = v18 == 0 ? v19 : llvm_bswap_i32(v19);
        uint32_t v28 = v18 != 0 ? v18 == 0 ? v21 : llvm_bswap_i32(v21) : v27;
        int32_t v29 = v18 == 0 ? v23 : llvm_bswap_i32(v23);
        uint32_t v30 = v18 != 0 ? v18 == 0 ? v25 : llvm_bswap_i32(v25) : v29;
        *v1 = v26;
        function_180005050(a1, (int64_t)v28, &v9);
        function_180005050(a1, (int64_t)v30, &v4);
        int64_t v31 = a1; // 0x18001a0cb
        if (g38 != NULL) {
            int64_t v32 = 760 * (0x100000000 * v16 >> 32);
            int64_t v33 = &v9; // 0x18001a0e6
            int64_t v34 = v32 + 232 + (int64_t)g38; // 0x18001a0e6
            char v35 = *(char *)v33; // 0x18001a0f0
            *(char *)v34 = v35;
            v33++;
            v34++;
            while (v35 != 0) {
                // 0x18001a0f0
                v35 = *(char *)v33;
                *(char *)v34 = v35;
                v33++;
                v34++;
            }
            int64_t v36 = v5; // 0x18001a11a
            int64_t v37 = v32 + 492 + (int64_t)g38; // 0x18001a11a
            char v38 = *(char *)v36; // 0x18001a120
            v36++;
            *(char *)v37 = v38;
            v37++;
            v31 = v36;
            while (v38 != 0) {
                // 0x18001a120
                v38 = *(char *)v36;
                v36++;
                *(char *)v37 = v38;
                v37++;
                v31 = v36;
            }
        }
        int64_t v39 = v16 + 1; // 0x18001a131
        v8 = v39 & 0xffffffff;
        if ((int32_t)v39 >= v2) {
            // 0x18001a160
            *v1 = v3;
            v15 = v31;
            v13 = v3;
            v14 = 0;
            goto lab_0x18001a160_2;
        }
        memset(&v9, 0, 260);
        memset(&v4, 0, 260);
        v10 = *v1;
        v11 = *v6;
        v12 = v10 + 4;
    }
  lab_0x18001a2c8:
    // 0x18001a2c8
    __security_check_cookie(g17);
    return &g47;
  lab_0x18001a160_2:
    // 0x18001a160
    if (v15 == 0) {
        goto lab_0x18001a2c8;
    } else {
        uint32_t v40 = *v6; // 0x18001a17d
        uint32_t v41 = v13 + 4; // 0x18001a180
        if (v40 < v41) {
            goto lab_0x18001a2c8;
        } else {
            int32_t v42 = *v7; // 0x18001a18d
            *v1 = v41;
            uint32_t v43 = v13 + 8; // 0x18001a1a9
            if (v43 > v40) {
                goto lab_0x18001a2c8;
            } else {
                int32_t v44 = *(int32_t *)(v15 + (int64_t)v13); // 0x18001a199
                *v1 = v43;
                uint32_t v45 = v13 + 12; // 0x18001a1cc
                if (v45 > v40) {
                    goto lab_0x18001a2c8;
                } else {
                    int32_t v46 = *(int32_t *)(v15 + (int64_t)v41); // 0x18001a1bd
                    *v1 = v45;
                    uint32_t v47 = v13 + 16; // 0x18001a1ef
                    if (v47 > v40) {
                        goto lab_0x18001a2c8;
                    } else {
                        int32_t v48 = *(int32_t *)(v15 + (int64_t)v43); // 0x18001a1e4
                        *v1 = v47;
                        uint32_t v49 = v13 + 20; // 0x18001a215
                        if (v49 > v40) {
                            goto lab_0x18001a2c8;
                        } else {
                            int32_t v50 = *(int32_t *)(v15 + (int64_t)v45); // 0x18001a207
                            *v1 = v49;
                            uint32_t v51 = v13 + 24; // 0x18001a229
                            if (v51 > v40) {
                                goto lab_0x18001a2c8;
                            } else {
                                int32_t v52 = v42 == 0 ? v44 : llvm_bswap_i32(v44);
                                uint32_t v53 = v42 != 0 ? v42 == 0 ? v46 : llvm_bswap_i32(v46) : v52;
                                int32_t v54 = v42 == 0 ? v48 : llvm_bswap_i32(v48);
                                uint32_t v55 = v42 != 0 ? v42 == 0 ? v50 : llvm_bswap_i32(v50) : v54;
                                *v1 = v51;
                                function_180005050(a1, (int64_t)v53, &v4);
                                function_180005050(a1, (int64_t)v55, &v9);
                                int32_t v56 = *v1; // 0x18001a269
                                if ((int32_t)function_18001a2f0(a1, 760 * (0x100000000 * v14 >> 32) + (int64_t)g38) == 0) {
                                    goto lab_0x18001a2c8;
                                } else {
                                    int64_t v57 = v14 + 1; // 0x18001a283
                                    *v1 = v56;
                                    v15 = a1;
                                    v13 = v56;
                                    v14 = v57 & 0xffffffff;
                                    if ((int32_t)v57 < v2) {
                                        goto lab_0x18001a160_2;
                                    } else {
                                        goto lab_0x18001a2c8;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

// Address range: 0x18001a2f0 - 0x18001a45b
int64_t function_18001a2f0(int64_t a1, int64_t a2) {
    // 0x18001a2f0
    if (a2 == 0) {
        // 0x18001a2fe
        return 0;
    }
    // 0x18001a306
    int64_t v1; // 0x18001a2f0
    int32_t v2 = v1;
    if (v2 == 0) {
        // 0x18001a30b
        return v1 + 1 & 0xffffffff;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x18001a315
    *v3 = v2;
    int32_t v4 = *(int32_t *)&g31; // 0x18001a319
    if (v4 == 779) {
        // 0x18001a326
        return (int32_t)function_18001a460(a1, a2) != 0;
    }
    switch (v4) {
        case 866: {
        }
        case 877: {
            // 0x18001a447
            return (int32_t)function_180012ed0(a1, a2) != 0;
        }
    }
    if (a1 == 0) {
        // 0x18001a2fe
        return 0;
    }
    uint32_t v5 = *(int32_t *)(a1 + 12); // 0x18001a358
    uint32_t v6 = v2 + 4; // 0x18001a35f
    if (v5 < v6) {
        // 0x18001a2fe
        return 0;
    }
    // 0x18001a363
    *v3 = v6;
    uint32_t v7 = v2 + 6; // 0x18001a369
    if (v7 > v5) {
        // 0x18001a2fe
        return 0;
    }
    // 0x18001a36d
    *v3 = v7;
    uint32_t v8 = v2 + 8; // 0x18001a389
    if (v8 > v5) {
        // 0x18001a2fe
        return 0;
    }
    // 0x18001a395
    *v3 = v8;
    uint32_t v9 = v2 + 12; // 0x18001a39c
    if (v9 > v5) {
        // 0x18001a2fe
        return 0;
    }
    // 0x18001a3a7
    *v3 = v9;
    uint32_t v10 = v2 + 16; // 0x18001a3c3
    if (v10 > v5) {
        // 0x18001a2fe
        return 0;
    }
    int32_t v11 = *(int32_t *)((int64_t)v8 + a1); // 0x18001a3ba
    *v3 = v10;
    uint32_t v12 = v2 + 20; // 0x18001a3da
    if (v12 > v5) {
        // 0x18001a2fe
        return 0;
    }
    // 0x18001a3e5
    *v3 = v12;
    uint32_t v13 = v2 + 24; // 0x18001a3ec
    if (v13 > v5) {
        // 0x18001a2fe
        return 0;
    }
    // 0x18001a3f7
    *v3 = v13;
    uint32_t v14 = v2 + 28; // 0x18001a3fe
    if (v14 > v5) {
        // 0x18001a2fe
        return 0;
    }
    // 0x18001a409
    *v3 = v14;
    uint32_t v15 = v2 + 32; // 0x18001a410
    if (v15 > v5) {
        // 0x18001a2fe
        return 0;
    }
    int32_t v16 = *(int32_t *)(a1 + 16) == 0 ? v11 : llvm_bswap_i32(v11);
    *v3 = v16 != 0 ? v16 : v15;
    return (int32_t)function_18001b7d0(a1, a2) != 0;
}

// Address range: 0x18001a460 - 0x18001ac11
int64_t function_18001a460(int64_t a1, int64_t a2) {
    // 0x18001a460
    if (a1 == 0 || a2 == 0) {
        // 0x18001abea
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18001a4bc
    int32_t v2 = *v1; // 0x18001a4bc
    uint32_t v3 = v2 + 4; // 0x18001a4bf
    int32_t * v4 = (int32_t *)(a1 + 12); // 0x18001a4c2
    uint32_t v5 = *v4; // 0x18001a4c2
    if (v3 > v5) {
        // 0x18001abea
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001a4cf
    *v1 = v3;
    uint32_t v6 = v2 + 8;
    if (v6 > v5) {
        // 0x18001abea
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001a4de
    *v1 = v6;
    uint32_t v7 = v2 + 12; // 0x18001a522
    if (v7 > v5) {
        // 0x18001abea
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v8 = *(int32_t *)((int64_t)v3 + a1); // 0x18001a4ea
    int32_t * v9 = (int32_t *)(a1 + 16); // 0x18001a4f2
    int32_t v10 = *v9; // 0x18001a4f2
    *v1 = v7;
    uint32_t v11 = v2 + 16; // 0x18001a536
    if (v11 > v5) {
        // 0x18001abea
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001a542
    *v1 = v11;
    uint32_t v12 = v2 + 20; // 0x18001a549
    if (v12 > v5) {
        // 0x18001abea
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001a555
    *v1 = v12;
    int32_t v13 = *(int32_t *)((int64_t)v11 + a1); // 0x18001a561
    int32_t v14 = 0; // bp-288, 0x18001a5a8
    int32_t v15 = 0; // bp-88, 0x18001a5b1
    if ((int32_t)function_18001d5c0(a1, (int64_t *)&v14) == 0 || (int32_t)function_18001d5c0(a1, (int64_t *)&v15) == 0) {
        // 0x18001abea
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v16 = v10 == 0 ? v8 : llvm_bswap_i32(v8);
    int32_t v17 = v10 == 0 ? v13 : llvm_bswap_i32(v13);
    int32_t v18 = (v17 == 0 ? 0 : v12) + v17;
    int32_t v19; // bp-264, 0x18001a460
    int64_t v20 = &v19; // 0x18001a5de
    function_1800010c0(v20);
    v15 = 0;
    int64_t v21; // bp-104, 0x18001a460
    int64_t v22 = (int64_t)&v21 + 16;
    int32_t v23 = 0; // 0x18001a5fe
    int64_t v24 = 0; // 0x18001a5fe
    int64_t v25 = 0; // 0x18001a5fe
    uint32_t v26 = *v4; // 0x18001a609
    int32_t v27 = *v1; // 0x18001a60c
    uint32_t v28 = v27 + 4; // 0x18001a60f
    int32_t v29; // 0x18001a460
    int64_t v30; // 0x18001a460
    int64_t v31; // 0x18001a460
    uint32_t v32; // 0x18001a6a4
    int32_t v33; // 0x18001a6d4
    int32_t v34; // 0x18001a6d8
    while (v28 <= v26) {
        int64_t v35 = v25;
        *v1 = v28;
        uint32_t v36 = v27 + 8; // 0x18001a622
        if (v36 > v26) {
            // break -> 0x18001abc8
            break;
        }
        // 0x18001a62e
        *v1 = v36;
        int32_t v37 = *(int32_t *)((int64_t)v28 + v20); // 0x18001a63a
        int32_t v38 = *v9 == 0 ? v37 : llvm_bswap_i32(v37);
        if (v38 != 0) {
            // 0x18001a681
            *(int32_t *)(v22 + 4 * v35) = v38 + v28;
        }
        // 0x18001a68a
        v23 = v35 != 0 ? v23 : v38;
        v24 = v35 != 0 ? v24 : v35 + 5;
        v25 = v35 + 1;
        if (v25 >= 5) {
            // 0x18001a6a4
            v32 = *v4;
            if (v27 + 12 > v32) {
                goto lab_0x18001abc8;
            } else {
                int32_t v39 = *v1; // 0x18001a6b5
                uint32_t v40 = v39 + 4; // 0x18001a6b5
                *v1 = v40;
                uint32_t v41 = v39 + 8; // 0x18001a6bc
                if (v41 > v32) {
                    goto lab_0x18001abc8;
                } else {
                    // 0x18001a6c8
                    *v1 = v41;
                    uint32_t v42 = v39 + 12; // 0x18001a70b
                    if (v42 > v32) {
                        goto lab_0x18001abc8;
                    } else {
                        // 0x18001a718
                        v33 = *(int32_t *)((int64_t)v40 + v20);
                        v34 = *v9;
                        *v1 = v42;
                        uint32_t v43 = v39 + 16; // 0x18001a71f
                        if (v43 > v32) {
                            goto lab_0x18001abc8;
                        } else {
                            // 0x18001a72b
                            *v1 = v43;
                            uint32_t v44 = v39 + 20; // 0x18001a732
                            if (v44 > v32) {
                                goto lab_0x18001abc8;
                            } else {
                                // 0x18001a73e
                                *v1 = v44;
                                int32_t v45 = v15; // 0x18001a74b
                                int32_t v46 = v45 == 0 ? v44 : v45;
                                *v1 = v46;
                                v29 = v46;
                                v31 = 0;
                                if ((int32_t)v24 < 1) {
                                    // 0x18001a783
                                    v30 = 0x100000000 * v24 >> 32;
                                    goto lab_0x18001a885;
                                } else {
                                    goto lab_0x18001a760;
                                }
                            }
                        }
                    }
                }
            }
        }
        v26 = *v4;
        v27 = *v1;
        v28 = v27 + 4;
    }
  lab_0x18001abc8:
    // 0x18001abc8
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    // 0x18001abea
    __security_check_cookie(g17);
    return &g47;
  lab_0x18001a760:;
    int32_t v47 = v29; // 0x18001a760
    int32_t v48 = v47 + 4; // 0x18001a763
    int32_t v49; // 0x18001a460
    int32_t v50; // 0x18001a460
    int64_t v51; // 0x18001a460
    int64_t v52; // 0x18001a460
    int64_t v53; // 0x18001a460
    int64_t v54; // 0x18001a786
    if (v48 > *v4) {
        goto lab_0x18001abc8;
    } else {
        // 0x18001a76f
        *v1 = v48;
        int64_t v55 = v31 + 1 & 0xffffffff; // 0x18001a773
        v29 = v48;
        v31 = v55;
        if (v55 < v24) {
            goto lab_0x18001a760;
        } else {
            int32_t v56 = v47 + 8; // 0x18001a7a3
            if (v56 > *v4) {
                goto lab_0x18001abc8;
            } else {
                // 0x18001a7af
                v54 = 0x100000000 * v24 >> 32;
                v49 = v56;
                v52 = 0;
                int64_t v57; // bp-252, 0x18001a460
                v51 = &v57;
                v53 = 0;
                v50 = v48;
                goto lab_0x18001a7af_2;
            }
        }
    }
  lab_0x18001a885:;
    // 0x18001a885
    int32_t v58; // 0x18001a460
    if (v58 == 0) {
        goto lab_0x18001a88f;
    } else {
        goto lab_0x18001a88f;
    }
  lab_0x18001a88f:;
    int32_t v59; // 0x18001a460
    int64_t v60; // 0x18001a460
    int64_t v61; // 0x18001a460
    int64_t v62; // 0x18001a460
    int64_t v63; // 0x18001a460
    if ((int32_t)v24 < 1) {
        // 0x18001a88f
        v59 = *v1;
        v63 = 0;
        goto lab_0x18001a939;
    } else {
        // 0x18001a896
        v62 = 0;
        int64_t v64; // bp-244, 0x18001a460
        v60 = &v64;
        v61 = 0;
        goto lab_0x18001a8a0;
    }
  lab_0x18001a939:;
    uint32_t v65 = v59 + 4; // 0x18001a93c
    int64_t v66; // 0x18001a460
    int32_t v67; // 0x18001a9a6
    int64_t v68; // 0x18001a9d1
    if (v65 > v32) {
        goto lab_0x18001abc8;
    } else {
        // 0x18001a948
        *v1 = v65;
        uint32_t v69 = v59 + 8; // 0x18001a94f
        if (v69 > v32) {
            goto lab_0x18001abc8;
        } else {
            int32_t v70 = v18 == 0 ? v69 : v18;
            *v1 = v70;
            uint32_t v71 = v70 + 4; // 0x18001a96d
            if (v71 > v32) {
                goto lab_0x18001abc8;
            } else {
                // 0x18001a979
                *v1 = v71;
                uint32_t v72 = v70 + 8; // 0x18001a980
                if (v72 > v32) {
                    goto lab_0x18001abc8;
                } else {
                    // 0x18001a98c
                    *v1 = v72;
                    uint32_t v73 = v70 + 12; // 0x18001a993
                    if (v73 > v32) {
                        goto lab_0x18001abc8;
                    } else {
                        // 0x18001a99f
                        *v1 = v73;
                        v67 = v70 + 16;
                        if (v67 > v32) {
                            goto lab_0x18001abc8;
                        } else {
                            // 0x18001a9b2
                            *v1 = v67;
                            uint32_t v74 = *(int32_t *)((int64_t)v73 + v20); // 0x18001a9bc
                            int64_t v75 = v74; // 0x18001a9bc
                            v68 = v63;
                            v66 = v75;
                            if (v34 == 0) {
                                goto lab_0x18001a9e7;
                            } else {
                                // 0x18001a9c4
                                v68 = 256 * v75 & 0xff0000;
                                v66 = 0x1000000 * v74 | v74 / 0x1000000 | v74 / 256 & 0xff00 | (int32_t)v68;
                                goto lab_0x18001a9e7;
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18001a8a0:;
    uint32_t v76 = *v1; // 0x18001a8a0
    uint32_t v77 = v76 + 4; // 0x18001a8a3
    int64_t v78; // 0x18001a460
    if (v77 > *v4) {
        goto lab_0x18001abc8;
    } else {
        // 0x18001a8af
        v78 = v60;
        *v1 = v77;
        if (v19 > (int32_t)v62) {
            int32_t v79 = *(int32_t *)((int64_t)v76 + v20); // 0x18001a8b9
            *(int32_t *)v78 = v34 == 0 ? v79 : llvm_bswap_i32(v79);
            goto lab_0x18001a8f6;
        } else {
            goto lab_0x18001a8f6;
        }
    }
  lab_0x18001a7af_2:;
    uint32_t v80 = v50;
    int64_t v81 = v51;
    *v1 = v49;
    if (v19 > (int32_t)v53) {
        int32_t v82 = *(int32_t *)((int64_t)v80 + v20); // 0x18001a7b9
        *(int32_t *)v81 = v34 == 0 ? v82 : llvm_bswap_i32(v82);
        goto lab_0x18001a7f6;
    } else {
        goto lab_0x18001a7f6;
    }
  lab_0x18001a7f6:;
    int64_t v83 = v52 + 1; // 0x18001a7f9
    int64_t v84; // 0x18001a460
    int64_t v85; // 0x18001a460
    int64_t v86; // 0x18001a460
    if (v83 < v54) {
        int32_t v87 = *v1;
        int32_t v88 = v87 + 4; // 0x18001a7a3
        v49 = v88;
        v52 = v83;
        v51 = v81 + 16;
        v53 = v53 + 1 & 0xffffffff;
        v50 = v87;
        if (v88 > *v4) {
            goto lab_0x18001abc8;
        } else {
            goto lab_0x18001a7af_2;
        }
    } else {
        // 0x18001a816
        v86 = 0;
        int64_t v89; // bp-248, 0x18001a460
        v84 = &v89;
        v85 = 0;
        goto lab_0x18001a820;
    }
  lab_0x18001a8f6:;
    int64_t v90 = v61 + 1; // 0x18001a8f9
    v62 = v62 + 1 & 0xffffffff;
    v60 = v78 + 16;
    v61 = v90;
    int32_t v91; // 0x18001a460
    int64_t v92; // 0x18001a460
    if (v90 < v30) {
        goto lab_0x18001a8a0;
    } else {
        // 0x18001a920
        v91 = *v1;
        v92 = 0;
        goto lab_0x18001a920_2;
    }
  lab_0x18001a820:;
    uint32_t v93 = *v1; // 0x18001a820
    uint32_t v94 = v93 + 4; // 0x18001a823
    int64_t v95; // 0x18001a460
    if (v94 > *v4) {
        goto lab_0x18001abc8;
    } else {
        // 0x18001a82f
        v95 = v84;
        *v1 = v94;
        if (v19 > (int32_t)v86) {
            int32_t v96 = *(int32_t *)((int64_t)v93 + v20); // 0x18001a839
            *(int32_t *)v95 = v34 == 0 ? v96 : llvm_bswap_i32(v96);
            goto lab_0x18001a876;
        } else {
            goto lab_0x18001a876;
        }
    }
  lab_0x18001a920_2:;
    int32_t v97 = v91 + 4; // 0x18001a923
    if (v97 > *v4) {
        goto lab_0x18001abc8;
    } else {
        // 0x18001a92f
        *v1 = v97;
        int64_t v98 = v92 + 1 & 0xffffffff; // 0x18001a933
        v91 = v97;
        v92 = v98;
        v59 = v97;
        v63 = v98;
        if (v98 < v24) {
            goto lab_0x18001a920_2;
        } else {
            goto lab_0x18001a939;
        }
    }
  lab_0x18001a876:;
    int64_t v99 = v85 + 1; // 0x18001a879
    v86 = v86 + 1 & 0xffffffff;
    v84 = v95 + 16;
    v85 = v99;
    v30 = v54;
    if (v99 < v54) {
        goto lab_0x18001a820;
    } else {
        goto lab_0x18001a885;
    }
  lab_0x18001a9e7:;
    int32_t v100 = (v34 == 0 ? v33 : llvm_bswap_i32(v33)) + 4; // 0x18001a742
    int32_t v101; // 0x18001a460
    int64_t v102; // 0x18001a460
    if (v100 == 0) {
        // 0x18001a9f2
        v101 = v67;
        v102 = v68;
        if (v67 == 0) {
            goto lab_0x18001aa2a;
        } else {
            goto lab_0x18001aa00;
        }
    } else {
        // 0x18001a9f2
        *v1 = v100;
        v101 = v100;
        goto lab_0x18001aa00;
    }
  lab_0x18001aa2a:;
    // 0x18001aa2a
    int32_t v103; // 0x18001a460
    if (v102 == 0) {
        goto lab_0x18001abc8;
    } else {
        uint32_t v104 = *v4; // 0x18001aa36
        uint32_t v105 = *v1; // 0x18001aa3a
        int32_t v106 = v105 + 4; // 0x18001aa3d
        if (v106 > v104) {
            goto lab_0x18001abc8;
        } else {
            // 0x18001aa49
            *v1 = v106;
            int32_t v107 = *(int32_t *)(v102 + (int64_t)v105); // 0x18001aa55
            int32_t v108 = *v9 == 0 ? v107 : llvm_bswap_i32(v107);
            v103 = v106;
            if (v108 != 0) {
                goto lab_0x18001aaa8;
            } else {
                int32_t v109 = v105 + 8; // 0x18001aa97
                if (v109 > v104) {
                    goto lab_0x18001abc8;
                } else {
                    // 0x18001aaa4
                    *v1 = v109;
                    v103 = v109;
                    goto lab_0x18001aaa8;
                }
            }
        }
    }
  lab_0x18001aa00:;
    int64_t v110 = function_180005100(a1, a2, v16, v101, (int64_t)v23, (int64_t *)&v19); // 0x18001aa1d
    v102 = a1;
    if ((int32_t)v110 == 0) {
        goto lab_0x18001abc8;
    } else {
        goto lab_0x18001aa2a;
    }
  lab_0x18001aaa8:;
    int32_t v111 = v103; // 0x18001aaaa
    int64_t v112; // 0x18001a460
    int64_t v113; // 0x18001a460
    int64_t v114; // 0x18001a460
    int64_t * v115; // 0x18001a460
    if (v66 == 0) {
        goto lab_0x18001abaf;
    } else {
        // 0x18001aaac
        if ((int32_t)function_180001e80(a2, v66) == 0) {
            goto lab_0x18001abc8;
        } else {
            // 0x18001aad0
            v115 = (int64_t *)(a2 + 8);
            v114 = a2;
            v112 = 0;
            v113 = 0;
            goto lab_0x18001aad0_2;
        }
    }
  lab_0x18001abaf:;
    int32_t v116 = v111 & -4; // 0x18001abb4
    *v1 = (v111 & 3) == 0 ? v116 : v116 + 4;
    goto lab_0x18001abc8;
  lab_0x18001aad0_2:;
    // 0x18001aad0
    int64_t v117; // 0x18001a460
    int64_t v118; // 0x18001a460
    if (v114 == 0) {
        goto lab_0x18001abc8;
    } else {
        uint32_t v119 = *v4; // 0x18001aadc
        uint32_t v120 = *v1; // 0x18001aae0
        uint32_t v121 = v120 + 2; // 0x18001aae3
        if (v121 > v119) {
            goto lab_0x18001abc8;
        } else {
            // 0x18001aaef
            v117 = v112;
            *v1 = v121;
            uint32_t v122 = v120 + 4; // 0x18001ab18
            if (v122 > v119) {
                goto lab_0x18001abc8;
            } else {
                int16_t v123 = *(int16_t *)(v114 + (int64_t)v120); // 0x18001aafb
                int32_t v124 = *v9; // 0x18001ab00
                *v1 = v122;
                uint32_t v125 = v120 + 6; // 0x18001ab4b
                if (v125 > v119) {
                    goto lab_0x18001abc8;
                } else {
                    int16_t v126 = *(int16_t *)(v114 + (int64_t)v121); // 0x18001ab31
                    *v1 = v125;
                    int16_t v127 = *(int16_t *)(v114 + (int64_t)v122); // 0x18001ab5e
                    int64_t v128 = *v115; // 0x18001ab74
                    v118 = 0;
                    if (v128 == 0) {
                        goto lab_0x18001ab9f;
                    } else {
                        uint16_t v129 = v124 == 0 ? v123 : llvm_bswap_i16(v123);
                        uint16_t v130 = v124 == 0 ? v126 : llvm_bswap_i16(v126);
                        uint16_t v131 = v124 == 0 ? v127 : llvm_bswap_i16(v127);
                        *(int32_t *)(v117 + 4 + v128) = (int32_t)v129;
                        *(int32_t *)(v117 + 8 + *v115) = (int32_t)v130;
                        *(int32_t *)(v117 + 12 + *v115) = (int32_t)v131;
                        v118 = v131;
                        goto lab_0x18001ab9f;
                    }
                }
            }
        }
    }
  lab_0x18001ab9f:;
    int64_t v132 = v113 + 1; // 0x18001ab9f
    v114 = v118;
    v112 = v117 + 20;
    v113 = v132 & 0xffffffff;
    if ((int32_t)v132 < (int32_t)v66) {
        goto lab_0x18001aad0_2;
    } else {
        // 0x18001abaf
        v111 = *v1;
        goto lab_0x18001abaf;
    }
}

// Address range: 0x18001ac20 - 0x18001ae71
int64_t function_18001ac20(int64_t a1, int64_t a2, uint32_t a3) {
    // 0x18001ac20
    if (a3 == 0) {
        // 0x18001ae48
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18001ac53
    *v1 = a3;
    int64_t v2; // bp-568, 0x18001ac20
    memset(&v2, 0, 260);
    int64_t v3; // bp-296, 0x18001ac20
    memset(&v3, 0, 260);
    uint32_t v4 = *(int32_t *)(a1 + 12); // 0x18001ac89
    uint32_t v5 = a3 + 4; // 0x18001ac8c
    if (v4 < v5) {
        // 0x18001ae48
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v6 = *(int32_t *)(a1 + 16); // 0x18001ac99
    *v1 = v5;
    uint32_t v7 = a3 + 8;
    if (v7 > v4) {
        // 0x18001ae48
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v8 = &v3; // 0x18001ac6a
    int32_t v9 = *(int32_t *)(v8 + (int64_t)a3); // 0x18001aca5
    *v1 = v7;
    uint32_t v10 = a3 + 12; // 0x18001acd8
    if (v10 > v4) {
        // 0x18001ae48
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v11 = *(int32_t *)(v8 + (int64_t)v5); // 0x18001acc9
    *v1 = v10;
    uint32_t v12 = a3 + 16; // 0x18001acfb
    if (v12 > v4) {
        // 0x18001ae48
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v13 = *(int32_t *)(v8 + (int64_t)v7); // 0x18001acf0
    *v1 = v12;
    uint32_t v14 = a3 + 20; // 0x18001ad21
    if (v14 > v4) {
        // 0x18001ae48
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v15 = *(int32_t *)(v8 + (int64_t)v10); // 0x18001ad13
    *v1 = v14;
    uint32_t v16 = a3 + 24; // 0x18001ad54
    if (v16 > v4) {
        // 0x18001ae48
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v17 = v6 == 0 ? v9 : llvm_bswap_i32(v9);
    uint32_t v18 = v6 != 0 ? v6 == 0 ? v11 : llvm_bswap_i32(v11) : v17;
    int32_t v19 = v6 == 0 ? v13 : llvm_bswap_i32(v13);
    uint32_t v20 = v6 != 0 ? v6 == 0 ? v15 : llvm_bswap_i32(v15) : v19;
    int32_t v21 = *(int32_t *)(v8 + (int64_t)v12); // 0x18001ad49
    *v1 = v16;
    int32_t v22 = *(int32_t *)(v8 + (int64_t)v14); // 0x18001ad6a
    function_180005050(a1, (int64_t)v18, &v2);
    function_180005050(a1, (int64_t)v20, &v3);
    int64_t v23 = function_180001a00(&g31); // 0x18001ada7
    if (v23 != 0) {
        int64_t v24 = &v2; // 0x18001adb4
        int64_t v25 = v24; // 0x18001adc8
        char v26 = *(char *)v25; // 0x18001add0
        *(char *)(v23 - v24 + v25) = v26;
        v25++;
        while (v26 != 0) {
            // 0x18001add0
            v26 = *(char *)v25;
            *(char *)(v23 - v24 + v25) = v26;
            v25++;
        }
        int64_t v27 = v8; // 0x18001adfc
        char v28 = *(char *)v27; // 0x18001ae00
        *(char *)(260 - v8 + v23 + v27) = v28;
        v27++;
        while (v28 != 0) {
            // 0x18001ae00
            v28 = *(char *)v27;
            *(char *)(260 - v8 + v23 + v27) = v28;
            v27++;
        }
        // 0x18001ae0e
        *(int32_t *)(v23 + 1300) = -1;
    }
    uint32_t v29 = v6 == 0 ? v21 : llvm_bswap_i32(v21);
    uint32_t v30 = v6 == 0 ? v22 : llvm_bswap_i32(v22);
    uint32_t v31 = v30 == 0 ? 0 : v14;
    g43 = 0;
    function_18001ae80(a1, 0, (int64_t)v31 + (int64_t)v30 & 0xffffffff, (int64_t)v29);
    // 0x18001ae48
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18001ae80 - 0x18001b336
int64_t function_18001ae80(int64_t a1, int32_t a2, int64_t a3, int64_t a4) {
    uint32_t v1 = (int32_t)a3; // 0x18001aeaf
    if (v1 < 100) {
        // 0x18001b319
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v2 = (int32_t *)(a1 + 12); // 0x18001aec4
    if (*v2 <= v1) {
        // 0x18001b319
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x18001aeca
    *v3 = v1;
    uint32_t v4 = (int32_t)a4; // 0x18001aef2
    if (v4 == 0) {
        // 0x18001b319
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001af00
    int64_t v5; // bp-312, 0x18001ae80
    int64_t v6 = &v5;
    int32_t * v7 = (int32_t *)(a1 + 16);
    int64_t v8; // bp-856, 0x18001ae80
    int64_t v9 = &v8;
    int64_t v10; // bp-584, 0x18001ae80
    int64_t v11 = &v10;
    int32_t v12 = 0; // 0x18001b2f4
    memset(&v8, 0, 260);
    memset(&v10, 0, 260);
    memset(&v5, 0, 260);
    uint32_t v13 = *v3; // 0x18001af45
    uint32_t v14 = *v2; // 0x18001af48
    uint32_t v15 = v13 + 4; // 0x18001af4c
    while (v15 <= v14) {
        // 0x18001af58
        *v3 = v15;
        uint32_t v16 = v13 + 8; // 0x18001af74
        if (v16 > v14) {
            // break -> 0x18001b319
            break;
        }
        int32_t v17 = *v7; // 0x18001af60
        int32_t v18 = *(int32_t *)((int64_t)v13 + v6); // 0x18001af68
        *v3 = v16;
        uint32_t v19 = v13 + 12; // 0x18001af9b
        if (v19 > v14) {
            // break -> 0x18001b319
            break;
        }
        int32_t v20 = *(int32_t *)((int64_t)v15 + v6); // 0x18001af8d
        *v3 = v19;
        uint32_t v21 = v13 + 16; // 0x18001afbe
        if (v21 > v14) {
            // break -> 0x18001b319
            break;
        }
        int32_t v22 = *(int32_t *)((int64_t)v16 + v6); // 0x18001afb4
        *v3 = v21;
        uint32_t v23 = v13 + 20; // 0x18001afe4
        if (v23 > v14) {
            // break -> 0x18001b319
            break;
        }
        int32_t v24 = *(int32_t *)((int64_t)v19 + v6); // 0x18001afd7
        *v3 = v23;
        uint32_t v25 = v13 + 24; // 0x18001b007
        if (v25 > v14) {
            // break -> 0x18001b319
            break;
        }
        int32_t v26 = v17 == 0 ? v18 : llvm_bswap_i32(v18);
        uint32_t v27 = v17 != 0 ? v17 == 0 ? v20 : llvm_bswap_i32(v20) : v26;
        int32_t v28 = v17 == 0 ? v22 : llvm_bswap_i32(v22);
        uint32_t v29 = v17 != 0 ? v17 == 0 ? v24 : llvm_bswap_i32(v24) : v28;
        int32_t v30 = *(int32_t *)((int64_t)v21 + v6); // 0x18001affd
        int32_t v31 = v17 == 0 ? v30 : llvm_bswap_i32(v30);
        *v3 = v25;
        int32_t v32 = *(int32_t *)((int64_t)v23 + v6); // 0x18001b01e
        uint32_t v33 = v17 != 0 ? v17 == 0 ? v32 : llvm_bswap_i32(v32) : v31;
        function_180005050(a1, (int64_t)v27, &v8);
        function_180005050(a1, (int64_t)v29, &v10);
        function_180005050(a1, (int64_t)v33, &v5);
        int64_t v34 = 0; // bp-912, 0x18001b064
        int128_t v35 = 0; // bp-880, 0x18001b074
        int32_t v36 = 0; // bp-896, 0x18001b086
        if ((int32_t)function_18001d5c0(a1, &v34) == 0) {
            // break -> 0x18001b319
            break;
        }
        // 0x18001b09b
        if ((int32_t)function_18001d710(a1, (int64_t *)&v35) == 0) {
            // break -> 0x18001b319
            break;
        }
        // 0x18001b0b0
        if (a1 == 0 | (int32_t)function_18001d5c0(a1, (int64_t *)&v36) == 0) {
            // break -> 0x18001b319
            break;
        }
        int32_t v37 = *v3; // 0x18001b0cf
        uint32_t v38 = *v2; // 0x18001b0d2
        uint32_t v39 = v37 + 4; // 0x18001b0d5
        if (v39 > v38) {
            // break -> 0x18001b319
            break;
        }
        // 0x18001b0e0
        *v3 = v39;
        uint32_t v40 = v37 + 8; // 0x18001b0e7
        if (v40 > v38) {
            // break -> 0x18001b319
            break;
        }
        // 0x18001b0f2
        *v3 = v40;
        g43++;
        if (v38 == 0) {
            // break -> 0x18001b319
            break;
        }
        uint32_t v41 = *v3; // 0x18001b108
        uint32_t v42 = *v2; // 0x18001b10b
        uint32_t v43 = v41 + 4; // 0x18001b10e
        if (v43 > v42) {
            // break -> 0x18001b319
            break;
        }
        // 0x18001b119
        *v3 = v43;
        uint32_t v44 = v41 + 8; // 0x18001b141
        if (v44 > v42) {
            // break -> 0x18001b319
            break;
        }
        int64_t v45 = v38; // 0x18001b0d2
        int32_t v46 = *v7; // 0x18001b121
        int32_t v47 = *(int32_t *)((int64_t)v41 + v45); // 0x18001b12e
        *v3 = v44;
        uint32_t v48 = v41 + 12; // 0x18001b16c
        if (v48 > v42) {
            // break -> 0x18001b319
            break;
        }
        int32_t v49 = *(int32_t *)((int64_t)v43 + v45); // 0x18001b159
        *v3 = v48;
        uint32_t v50 = v41 + 16; // 0x18001b183
        if (v50 > v42) {
            // break -> 0x18001b319
            break;
        }
        // 0x18001b18e
        *v3 = v50;
        uint32_t v51 = v41 + 20; // 0x18001b1ad
        if (v51 > v42) {
            // break -> 0x18001b319
            break;
        }
        // 0x18001b1b9
        *v3 = v51;
        uint32_t v52 = v41 + 24; // 0x18001b1c0
        if (v52 > v42) {
            // break -> 0x18001b319
            break;
        }
        // 0x18001b1cb
        *v3 = v52;
        int64_t v53 = function_180001a00(&g31); // 0x18001b1d6
        if (v53 != 0) {
            int64_t v54 = v9; // 0x18001b1ee
            char v55 = *(char *)v54; // 0x18001b1f2
            *(char *)(v53 - v9 + v54) = v55;
            v54++;
            while (v55 != 0) {
                // 0x18001b1f2
                v55 = *(char *)v54;
                *(char *)(v53 - v9 + v54) = v55;
                v54++;
            }
            int64_t v56 = v11; // 0x18001b218
            char v57 = *(char *)v56; // 0x18001b220
            *(char *)(260 - v11 + v53 + v56) = v57;
            v56++;
            while (v57 != 0) {
                // 0x18001b220
                v57 = *(char *)v56;
                *(char *)(260 - v11 + v53 + v56) = v57;
                v56++;
            }
            int64_t v58 = v6; // 0x18001b246
            char v59 = *(char *)v58; // 0x18001b250
            *(char *)(520 - v6 + v53 + v58) = v59;
            v58++;
            while (v59 != 0) {
                // 0x18001b250
                v59 = *(char *)v58;
                *(char *)(520 - v6 + v53 + v58) = v59;
                v58++;
            }
            // 0x18001b262
            *(int64_t *)(v53 + 1312) = __asm_movsd_5(__asm_movsd(v34));
            int128_t v60 = __asm_movups(0); // 0x18001b274
            *(int32_t *)(v53 + 1300) = g39 - 1;
            __asm_movups_4(*(int128_t *)(v53 + 1336), v60);
            *(int64_t *)(v53 + 1324) = __asm_movsd_5(__asm_movsd((int64_t)v36));
        }
        uint32_t v61 = v46 == 0 ? v47 : llvm_bswap_i32(v47);
        int32_t v62 = v46 == 0 ? v49 : llvm_bswap_i32(v49);
        uint32_t v63 = v62 == 0 ? 0 : v62 + v43; // 0x18001b2c5
        function_18001ae80(a1, a2 + 1, (int64_t)v63, (int64_t)v61);
        function_18001b340(a1, v53);
        v12++;
        if (v12 >= v4) {
            // break -> 0x18001b319
            break;
        }
        memset(&v8, 0, 260);
        memset(&v10, 0, 260);
        memset(&v5, 0, 260);
        v13 = *v3;
        v14 = *v2;
        v15 = v13 + 4;
    }
    // 0x18001b319
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18001b340 - 0x18001b412
int64_t function_18001b340(int64_t a1, int64_t a2) {
    // 0x18001b340
    int64_t v1; // 0x18001b340
    uint32_t v2 = (int32_t)v1; // 0x18001b350
    if (v2 < 100) {
        // 0x18001b3f5
        return 1;
    }
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18001b363
    if (*v3 <= v2) {
        // 0x18001b3f5
        return 1;
    }
    int32_t * v4 = (int32_t *)(a1 + 8); // 0x18001b36d
    *v4 = v2;
    g43++;
    if (a1 == 0) {
        // 0x18001b3f5
        return 0;
    }
    uint32_t v5 = *v4; // 0x18001b383
    uint32_t v6 = *v3; // 0x18001b387
    uint32_t v7 = v5 + 4; // 0x18001b38b
    if (v7 > v6) {
        // 0x18001b3f5
        return 0;
    }
    // 0x18001b394
    *v4 = v7;
    int32_t v8 = *(int32_t *)((int64_t)v5 + a1); // 0x18001b3a0
    uint32_t v9 = v5 + 8;
    int64_t result = 0; // 0x18001b3b2
    if (v9 <= v6) {
        int32_t v10 = *(int32_t *)(a1 + 16) == 0 ? v8 : llvm_bswap_i32(v8);
        *v4 = v9;
        *(int32_t *)(a2 + 1304) = v10;
        function_18001b420(a1, a2);
        result = 1;
    }
    // 0x18001b3f5
    return result;
}

// Address range: 0x18001b420 - 0x18001b65b
int64_t function_18001b420(int64_t a1, int64_t a2) {
    // 0x18001b420
    int64_t v1; // 0x18001b420
    uint32_t v2 = (int32_t)v1;
    if (v2 < 100) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18001b465
    uint32_t v4 = *v3; // 0x18001b465
    if (v4 <= v2) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v5 = (int32_t *)(a1 + 8); // 0x18001b478
    *v5 = v2;
    int32_t v6; // 0x18001b420
    if (v6 != 3) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001b481
    int64_t v7; // bp-584, 0x18001b420
    memset(&v7, 0, 260);
    uint32_t v8 = v2 + 4; // 0x18001b4a2
    if (v4 < v8) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v9 = *(int32_t *)(a1 + 16); // 0x18001b4aa
    *v5 = v8;
    uint32_t v10 = v2 + 8; // 0x18001b4c1
    if (v10 > v4) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v11 = &v7; // 0x18001b483
    int32_t v12 = *(int32_t *)((v1 & 0xffffffff) + v11); // 0x18001b4b3
    *v5 = v10;
    uint32_t v13 = v2 + 12; // 0x18001b4e3
    if (v13 > v4) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v14 = *(int32_t *)(v11 + (int64_t)v8); // 0x18001b4d5
    *v5 = v13;
    uint32_t v15 = v2 + 16; // 0x18001b506
    if (v15 > v4) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v16 = *(int32_t *)(v11 + (int64_t)v10); // 0x18001b4fb
    *v5 = v15;
    uint32_t v17 = v2 + 20; // 0x18001b52c
    if (v17 > v4) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v18 = *(int32_t *)(v11 + (int64_t)v13); // 0x18001b51e
    *v5 = v17;
    uint32_t v19 = v2 + 24; // 0x18001b54e
    if (v19 > v4) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v20 = v9 == 0 ? v12 : llvm_bswap_i32(v12);
    uint32_t v21 = v9 != 0 ? v9 == 0 ? v14 : llvm_bswap_i32(v14) : v20;
    int32_t v22 = v9 == 0 ? v16 : llvm_bswap_i32(v16);
    uint32_t v23 = v9 != 0 ? v9 == 0 ? v18 : llvm_bswap_i32(v18) : v22;
    int32_t v24 = *(int32_t *)(v11 + (int64_t)v15); // 0x18001b544
    int32_t v25 = v9 == 0 ? v24 : llvm_bswap_i32(v24);
    *v5 = v19;
    int32_t v26 = *(int32_t *)(v11 + (int64_t)v17); // 0x18001b564
    uint32_t v27 = v9 != 0 ? v9 == 0 ? v26 : llvm_bswap_i32(v26) : v25;
    int64_t v28; // bp-312, 0x18001b420
    function_180005050(a1, (int64_t)v21, &v28);
    function_180005050(a1, (int64_t)v23, &v7);
    function_180005050(a1, (int64_t)v27, &v28);
    if (a1 == 0) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v29 = *v5; // 0x18001b5ac
    uint32_t v30 = *v3; // 0x18001b5af
    uint32_t v31 = v29 + 4; // 0x18001b5b2
    if (v31 > v30) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001b5bd
    *v5 = v31;
    uint32_t v32 = v29 + 8; // 0x18001b5c5
    if (v32 > v30) {
        // 0x18001b63c
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001b5d1
    *v5 = v32;
    int64_t v33 = v11; // 0x18001b5f8
    char v34 = *(char *)v33; // 0x18001b600
    *(char *)(a2 + 780 - v11 + v33) = v34;
    v33++;
    while (v34 != 0) {
        // 0x18001b600
        v34 = *(char *)v33;
        *(char *)(a2 + 780 - v11 + v33) = v34;
        v33++;
    }
    // 0x18001b613
    function_18001b660(a1, a2);
    // 0x18001b63c
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18001b660 - 0x18001b7ce
int64_t function_18001b660(int64_t a1, int64_t a2) {
    // 0x18001b660
    int64_t v1; // 0x18001b660
    uint32_t v2 = (int32_t)v1;
    if (v2 < 100) {
        // 0x18001b7af
        __security_check_cookie(g17);
        return &g47;
    }
    uint32_t v3 = *(int32_t *)(a1 + 12); // 0x18001b6a5
    if (v3 <= v2) {
        // 0x18001b7af
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v4 = (int32_t *)(a1 + 8); // 0x18001b6b0
    *v4 = v2;
    int64_t v5; // bp-584, 0x18001b660
    memset(&v5, 0, 260);
    uint32_t v6 = v2 + 4; // 0x18001b6d4
    if (v3 < v6) {
        // 0x18001b7af
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v7 = *(int32_t *)(a1 + 16); // 0x18001b6dc
    *v4 = v6;
    uint32_t v8 = v2 + 8; // 0x18001b6f4
    if (v8 > v3) {
        // 0x18001b7af
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v9 = &v5; // 0x18001b6b5
    int32_t v10 = *(int32_t *)((v1 & 0xffffffff) + v9); // 0x18001b6e6
    *v4 = v8;
    uint32_t v11 = v2 + 12; // 0x18001b716
    if (v11 > v3) {
        // 0x18001b7af
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v12 = *(int32_t *)(v9 + (int64_t)v6); // 0x18001b708
    *v4 = v11;
    uint32_t v13 = v2 + 16; // 0x18001b73a
    if (v13 > v3) {
        // 0x18001b7af
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v14 = v7 == 0 ? v10 : llvm_bswap_i32(v10);
    uint32_t v15 = v7 != 0 ? v7 == 0 ? v12 : llvm_bswap_i32(v12) : v14;
    int32_t v16 = *(int32_t *)(v9 + (int64_t)v8); // 0x18001b72e
    int32_t v17 = v7 == 0 ? v16 : llvm_bswap_i32(v16);
    *v4 = v13;
    int32_t v18 = *(int32_t *)(v9 + (int64_t)v11); // 0x18001b750
    uint32_t v19 = v7 != 0 ? v7 == 0 ? v18 : llvm_bswap_i32(v18) : v17;
    int64_t v20; // bp-312, 0x18001b660
    function_180005050(a1, (int64_t)v15, &v20);
    function_180005050(a1, (int64_t)v19, &v5);
    int64_t v21 = v9; // 0x18001b789
    char v22 = *(char *)v21; // 0x18001b790
    *(char *)(a2 + 1040 - v9 + v21) = v22;
    v21++;
    while (v22 != 0) {
        // 0x18001b790
        v22 = *(char *)v21;
        *(char *)(a2 + 1040 - v9 + v21) = v22;
        v21++;
    }
    // 0x18001b7af
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18001b7d0 - 0x18001c9c9
int64_t function_18001b7d0(int64_t a1, int64_t a2) {
    // 0x18001b7d0
    if (a1 == 0 || a2 == 0) {
        // 0x18001c99f
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18001b82e
    uint32_t v2 = *v1; // 0x18001b82e
    int32_t * v3 = (int32_t *)(a1 + 12); // 0x18001b834
    uint32_t v4 = *v3; // 0x18001b834
    if (v2 + 4 > v4) {
        // 0x18001c99f
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t v5 = *(int32_t *)((int64_t)v2 + a1); // 0x18001b841
    int32_t * v6 = (int32_t *)(a1 + 16); // 0x18001b845
    if ((*v6 == 0 ? v5 : llvm_bswap_i32(v5)) == 0) {
        // 0x18001b87b
        *v1 = v2;
    }
    // 0x18001b87e
    int64_t v7; // 0x18001b7d0
    uint32_t v8 = (int32_t)v7; // 0x18001b884
    int32_t v9 = v2; // 0x18001b887
    int64_t v10 = 0; // 0x18001b887
    int32_t v11 = v2; // 0x18001b887
    if (v8 != 0) {
        while (v9 + 4 <= v4) {
            // 0x18001b89f
            *v1 = v9 + 4;
            v9 += 8;
            if (v9 > v4) {
                // break -> 0x18001c99f
                break;
            }
            // 0x18001b8b2
            *v1 = v9;
            int64_t v12 = v10 + 1; // 0x18001b8b6
            v10 = v12 & 0xffffffff;
            v11 = v9;
            if ((int32_t)v12 >= v8) {
                goto lab_0x18001b8bd;
            }
        }
        // 0x18001c99f
        __security_check_cookie(g17);
        return &g47;
    }
  lab_0x18001b8bd:;
    uint32_t v13 = v11 + 4; // 0x18001b8c0
    if (v13 > v4) {
        // 0x18001c99f
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001b8cc
    *v1 = v13;
    uint32_t v14 = v11 + 8; // 0x18001b8d3
    if (v14 > v4) {
        // 0x18001c99f
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001b8df
    *v1 = v14;
    int32_t v15 = *(int32_t *)&g31; // 0x18001b927
    if (v15 != 985 != v15 != 990) {
        uint32_t v16 = v11 + 12; // 0x18001b93b
        if (v16 > v4) {
            // 0x18001c99f
            __security_check_cookie(g17);
            return &g47;
        }
        // 0x18001b948
        *v1 = v16;
    }
    // 0x18001b94c
    int64_t v17; // bp-1192, 0x18001b7d0
    int64_t v18 = &v17; // 0x18001b7dc
    int32_t v19; // bp-1288, 0x18001b7d0
    int64_t v20 = &v19; // 0x18001b94c
    function_1800010c0(v20);
    int64_t v21 = 0; // 0x18001b96b
    int64_t v22 = 0; // 0x18001b96b
    uint32_t v23 = *v3; // 0x18001b979
    uint32_t v24 = *v1; // 0x18001b97d
    uint32_t v25 = v24 + 4; // 0x18001b980
    int32_t v26; // 0x18001b7d0
    int64_t v27; // 0x18001b7d0
    uint32_t v28; // 0x18001ba47
    while (v25 <= v23) {
        int64_t v29 = v22;
        *v1 = v25;
        uint32_t v30 = v24 + 8; // 0x18001b9cd
        if (v30 > v23) {
            // break -> 0x18001c97e
            break;
        }
        int32_t v31 = *(int32_t *)((int64_t)v24 + v20); // 0x18001b996
        int32_t v32 = *v6; // 0x18001b99a
        *v1 = v30;
        int32_t v33 = *(int32_t *)((int64_t)v25 + v20); // 0x18001b9e5
        int32_t v34 = v32 == 0 ? v33 : llvm_bswap_i32(v33);
        if (v34 != 0) {
            // 0x18001ba24
            *(int32_t *)(v18 + 80 + 4 * v29) = v34 + v25;
        }
        // 0x18001ba2d
        v27 = v29 == 0 ? (int64_t)(v32 == 0 ? v31 : llvm_bswap_i32(v31)) : v21;
        int64_t v35 = v29 + 1; // 0x18001ba2d
        v21 = v27;
        v22 = v35;
        if (v35 >= 5) {
            // 0x18001ba47
            v28 = *v3;
            if (v24 + 12 > v28) {
                goto lab_0x18001c97e;
            } else {
                int32_t v36 = *v1; // 0x18001ba58
                *v1 = v36 + 4;
                int32_t v37 = v36 + 8; // 0x18001ba5f
                if (v37 > v28) {
                    goto lab_0x18001c97e;
                } else {
                    // 0x18001ba6b
                    *v1 = v37;
                    int32_t v38 = *(int32_t *)&g31; // 0x18001ba72
                    v26 = v37;
                    if (v38 != 985 == (v38 != 990)) {
                        goto lab_0x18001ba9b;
                    } else {
                        int32_t v39 = v36 + 12; // 0x18001ba88
                        if (v39 > v28) {
                            goto lab_0x18001c97e;
                        } else {
                            // 0x18001ba94
                            *v1 = v39;
                            v26 = v39;
                            goto lab_0x18001ba9b;
                        }
                    }
                }
            }
        }
        v23 = *v3;
        v24 = *v1;
        v25 = v24 + 4;
    }
  lab_0x18001c97e:
    // 0x18001c97e
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    // 0x18001c99f
    __security_check_cookie(g17);
    return &g47;
  lab_0x18001ba9b:;
    uint32_t v40 = v26 + 4;
    int32_t v41; // 0x18001b7d0
    int64_t v42; // 0x18001b7d0
    int32_t v43; // 0x18001baba
    if (v40 > v28) {
        goto lab_0x18001c97e;
    } else {
        // 0x18001baa7
        *v1 = v40;
        uint32_t v44 = v26 + 8; // 0x18001baea
        if (v44 > v28) {
            goto lab_0x18001c97e;
        } else {
            // 0x18001baf7
            v43 = *v6;
            *v1 = v44;
            uint32_t v45 = v26 + 12; // 0x18001bafe
            if (v45 > v28) {
                goto lab_0x18001c97e;
            } else {
                // 0x18001bb0a
                *v1 = v45;
                int32_t v46 = v26 + 16; // 0x18001bb59
                if (v46 > v28) {
                    goto lab_0x18001c97e;
                } else {
                    // 0x18001bb65
                    *v1 = v46;
                    v41 = v46;
                    v42 = 0;
                    goto lab_0x18001bbb0;
                }
            }
        }
    }
  lab_0x18001bbb0:;
    int32_t v47 = v41; // 0x18001bbb0
    uint32_t v48 = v47 + 4; // 0x18001bbb3
    int64_t v49; // 0x18001b7d0
    int64_t v50; // 0x18001b7d0
    int64_t v51; // 0x18001b7d0
    int64_t v52; // 0x18001b7d0
    int32_t v53; // bp-1352, 0x18001b7d0
    uint32_t v54; // 0x18001bbcd
    int32_t v55; // 0x18001bbe5
    int32_t v56; // 0x18001bc39
    uint32_t v57; // 0x18001bcc8
    if (v48 > *v3) {
        goto lab_0x18001c97e;
    } else {
        // 0x18001bbbf
        *v1 = v48;
        int64_t v58 = v42 + 1; // 0x18001bbc6
        v41 = v48;
        v42 = v58 & 0xffffffff;
        if ((int32_t)v58 < 4) {
            goto lab_0x18001bbb0;
        } else {
            // 0x18001bbcd
            v54 = v47 + 8;
            if (v54 > v28) {
                goto lab_0x18001c97e;
            } else {
                // 0x18001bbd9
                *v1 = v54;
                uint32_t v59 = v47 + 12; // 0x18001bc22
                if (v59 > v28) {
                    goto lab_0x18001c97e;
                } else {
                    // 0x18001bc2f
                    v55 = *(int32_t *)((int64_t)v48 + v20);
                    *v1 = v59;
                    v56 = *(int32_t *)((int64_t)v54 + v20);
                    v53 = 0;
                    int32_t v60 = 0; // bp-1328, 0x18001bc81
                    if ((int32_t)function_18001d5c0(a1, (int64_t *)&v53) == 0) {
                        goto lab_0x18001c97e;
                    } else {
                        // 0x18001bc9e
                        if ((int32_t)function_18001d5c0(a1, (int64_t *)&v60) == 0) {
                            goto lab_0x18001c97e;
                        } else {
                            // 0x18001bcbd
                            v57 = (int32_t)v27;
                            v52 = a1;
                            if (v57 == 0) {
                                goto lab_0x18001bd55;
                            } else {
                                // 0x18001bce0
                                v51 = a1;
                                v50 = 0;
                                v49 = 0;
                                goto lab_0x18001bce0_2;
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18001bd55:;
    // 0x18001bd55
    int32_t v61; // 0x18001b7d0
    if (v61 == 0) {
        goto lab_0x18001bd5f;
    } else {
        goto lab_0x18001bd5f;
    }
  lab_0x18001bd5f:;
    int64_t v62 = v52; // 0x18001bd65
    int64_t v63; // 0x18001b7d0
    int64_t v64; // 0x18001b7d0
    int64_t v65; // 0x18001b7d0
    if (v57 == 0) {
        goto lab_0x18001be5f;
    } else {
        // 0x18001bd67
        v65 = v52;
        v64 = 0;
        int64_t v66; // bp-1276, 0x18001b7d0
        v63 = &v66;
        goto lab_0x18001bd70;
    }
  lab_0x18001bce0_2:;
    uint32_t v67 = *v1; // 0x18001bce0
    uint32_t v68 = v67 + 4; // 0x18001bce3
    int32_t v69; // 0x18001b7d0
    int64_t v70; // 0x18001b7d0
    int64_t v71; // 0x18001bd12
    if (v68 > *v3) {
        goto lab_0x18001c97e;
    } else {
        // 0x18001bcef
        v70 = v50;
        *v1 = v68;
        uint32_t v72 = *(int32_t *)((int64_t)v67 + a1); // 0x18001bcf9
        v71 = v51;
        v69 = v72;
        if (*v6 == 0) {
            goto lab_0x18001bd2d;
        } else {
            // 0x18001bd03
            v71 = 256 * (int64_t)v72 & 0xff0000;
            v69 = 0x1000000 * v72 | v72 / 0x1000000 | v72 / 256 & 0xff00 | (int32_t)v71;
            goto lab_0x18001bd2d;
        }
    }
  lab_0x18001be5f:
    // 0x18001be5f
    if (v61 == 0) {
        goto lab_0x18001be69;
    } else {
        goto lab_0x18001be69;
    }
  lab_0x18001be69:;
    int64_t v73; // 0x18001b7d0
    int64_t v74; // 0x18001b7d0
    if (v57 == 0) {
        int32_t v75 = (v43 == 0 ? v56 : llvm_bswap_i32(v56)) + v54; // 0x18001bc64
        if (v75 == 0) {
            goto lab_0x18001bf2a;
        } else {
            // 0x18001bf27
            *v1 = v75;
            goto lab_0x18001bf2a;
        }
    } else {
        // 0x18001be71
        v74 = 0;
        int64_t v76; // bp-1268, 0x18001b7d0
        v73 = &v76;
        goto lab_0x18001be80;
    }
  lab_0x18001bd70:;
    int64_t v77; // 0x18001b7d0
    int32_t v78; // 0x18001b7d0
    int64_t v79; // 0x18001bdab
    if (v52 == 0) {
        goto lab_0x18001c97e;
    } else {
        uint32_t v80 = *v1; // 0x18001bd79
        uint32_t v81 = v80 + 4; // 0x18001bd7c
        if (v81 > *v3) {
            goto lab_0x18001c97e;
        } else {
            // 0x18001bd88
            v77 = v63;
            *v1 = v81;
            uint32_t v82 = *(int32_t *)(v52 + (int64_t)v80); // 0x18001bd92
            v79 = v65;
            v78 = v82;
            if (*v6 == 0) {
                goto lab_0x18001bdc6;
            } else {
                // 0x18001bd9c
                v79 = 256 * (int64_t)v82 & 0xff0000;
                v78 = 0x1000000 * v82 | v82 / 0x1000000 | v82 / 256 & 0xff00 | (int32_t)v79;
                goto lab_0x18001bdc6;
            }
        }
    }
  lab_0x18001bd2d:
    // 0x18001bd2d
    if (v19 > (int32_t)v49) {
        // 0x18001bd3f
        *(int32_t *)(v18 - 88 + 16 * v70) = v69;
        goto lab_0x18001bd4a;
    } else {
        goto lab_0x18001bd4a;
    }
  lab_0x18001bd4a:;
    int64_t v83 = v49 + 1; // 0x18001bd4a
    v51 = v71;
    v50 = v70 + 1;
    v49 = v83 & 0xffffffff;
    v52 = v71;
    if ((int32_t)v83 < v57) {
        goto lab_0x18001bce0_2;
    } else {
        goto lab_0x18001bd55;
    }
  lab_0x18001bf2a:;
    // 0x18001bf2a
    int64_t v84; // bp-1080, 0x18001b7d0
    int64_t v85 = &v84; // 0x18001bf46
    _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z((int64_t *)0x1800010b0, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47, (void (*)(int64_t *))&g47);
    int64_t v86; // 0x18001b7d0
    int64_t v87; // 0x18001b7d0
    uint32_t v88; // 0x18001b7d0
    int32_t v89; // 0x18001b7d0
    switch (*(int32_t *)&g31) {
        case 911: {
            goto lab_0x18001c3ac;
        }
        case 918: {
            goto lab_0x18001c3ac;
        }
        default: {
            // 0x18001bf6f
            v88 = v43 == 0 ? v55 : llvm_bswap_i32(v55);
            if (v88 == 0) {
                // 0x18001c964
                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                goto lab_0x18001c97e;
            } else {
                // 0x18001bf7d
                v53 = 0;
                v87 = v85;
                v86 = v85;
                v89 = 0;
                goto lab_0x18001bf8e;
            }
        }
    }
  lab_0x18001be80:;
    int64_t v90; // 0x18001b7d0
    if (v62 == 0) {
        goto lab_0x18001c97e;
    } else {
        uint32_t v91 = *v1; // 0x18001be89
        uint32_t v92 = v91 + 4; // 0x18001be8c
        if (v92 > *v3) {
            goto lab_0x18001c97e;
        } else {
            // 0x18001be98
            v90 = v73;
            *v1 = v92;
            if (v19 > (int32_t)v74) {
                int32_t v93 = *(int32_t *)(v62 + (int64_t)v91); // 0x18001bea2
                *(int32_t *)v90 = *v6 == 0 ? v93 : llvm_bswap_i32(v93);
                goto lab_0x18001bedf;
            } else {
                goto lab_0x18001bedf;
            }
        }
    }
  lab_0x18001c3ac:;
    uint32_t v94 = *v3; // 0x18001c3ac
    int32_t v95 = *v1; // 0x18001c3b0
    uint32_t v96 = v95 + 4; // 0x18001c3b3
    if (v96 > v94) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        // 0x18001c3bf
        *v1 = v96;
        uint32_t v97 = v95 + 8; // 0x18001c3c6
        if (v97 > v94) {
            // 0x18001c964
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            goto lab_0x18001c97e;
        } else {
            // 0x18001c3d2
            *v1 = v97;
            uint32_t v98 = v95 + 12; // 0x18001c3d9
            if (v98 > v94) {
                // 0x18001c964
                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                goto lab_0x18001c97e;
            } else {
                // 0x18001c3e5
                *v1 = v98;
                uint32_t v99 = v95 + 16; // 0x18001c3ec
                if (v99 > v94) {
                    // 0x18001c964
                    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                    goto lab_0x18001c97e;
                } else {
                    // 0x18001c3f8
                    *v1 = v99;
                    uint32_t v100 = v95 + 20; // 0x18001c3ff
                    if (v100 > v94) {
                        // 0x18001c964
                        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                        goto lab_0x18001c97e;
                    } else {
                        // 0x18001c40b
                        *v1 = v100;
                        uint32_t v101 = v95 + 24; // 0x18001c412
                        if (v101 > v94) {
                            // 0x18001c964
                            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                            goto lab_0x18001c97e;
                        } else {
                            // 0x18001c41e
                            *v1 = v101;
                            uint32_t v102 = v95 + 28; // 0x18001c425
                            if (v102 > v94) {
                                // 0x18001c964
                                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                goto lab_0x18001c97e;
                            } else {
                                // 0x18001c431
                                *v1 = v102;
                                uint32_t v103 = v95 + 32; // 0x18001c438
                                if (v103 > v94) {
                                    // 0x18001c964
                                    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                    goto lab_0x18001c97e;
                                } else {
                                    // 0x18001c444
                                    *v1 = v103;
                                    uint32_t v104 = v95 + 36; // 0x18001c44b
                                    if (v104 > v94) {
                                        // 0x18001c964
                                        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                        goto lab_0x18001c97e;
                                    } else {
                                        // 0x18001c457
                                        *v1 = v104;
                                        uint32_t v105 = v95 + 40; // 0x18001c45e
                                        if (v105 > v94) {
                                            // 0x18001c964
                                            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                            goto lab_0x18001c97e;
                                        } else {
                                            // 0x18001c46a
                                            *v1 = v105;
                                            uint32_t v106 = v95 + 44; // 0x18001c471
                                            if (v106 > v94) {
                                                // 0x18001c964
                                                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                goto lab_0x18001c97e;
                                            } else {
                                                // 0x18001c47d
                                                *v1 = v106;
                                                uint32_t v107 = v95 + 48; // 0x18001c484
                                                if (v107 > v94) {
                                                    // 0x18001c964
                                                    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                    goto lab_0x18001c97e;
                                                } else {
                                                    // 0x18001c490
                                                    *v1 = v107;
                                                    uint32_t v108 = v95 + 52; // 0x18001c497
                                                    if (v108 > v94) {
                                                        // 0x18001c964
                                                        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                        goto lab_0x18001c97e;
                                                    } else {
                                                        // 0x18001c4a3
                                                        *v1 = v108;
                                                        uint32_t v109 = v95 + 56; // 0x18001c4dd
                                                        if (v109 > v94) {
                                                            // 0x18001c964
                                                            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                            goto lab_0x18001c97e;
                                                        } else {
                                                            int32_t v110 = *(int32_t *)((int64_t)v107 + v85); // 0x18001c4af
                                                            *v1 = v109;
                                                            uint32_t v111 = v95 + 60; // 0x18001c4f1
                                                            if (v111 > v94) {
                                                                // 0x18001c964
                                                                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                goto lab_0x18001c97e;
                                                            } else {
                                                                // 0x18001c4fd
                                                                *v1 = v111;
                                                                uint32_t v112 = v95 + 64; // 0x18001c504
                                                                if (v112 > v94) {
                                                                    // 0x18001c964
                                                                    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                    goto lab_0x18001c97e;
                                                                } else {
                                                                    // 0x18001c510
                                                                    *v1 = v112;
                                                                    uint32_t v113 = v95 + 68; // 0x18001c517
                                                                    if (v113 > v94) {
                                                                        // 0x18001c964
                                                                        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                        goto lab_0x18001c97e;
                                                                    } else {
                                                                        // 0x18001c523
                                                                        *v1 = v113;
                                                                        uint32_t v114 = v95 + 72; // 0x18001c561
                                                                        if (v114 > v94) {
                                                                            // 0x18001c964
                                                                            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                            goto lab_0x18001c97e;
                                                                        } else {
                                                                            // 0x18001c56e
                                                                            *v1 = v114;
                                                                            uint32_t v115 = v95 + 76; // 0x18001c575
                                                                            if (v115 > v94) {
                                                                                // 0x18001c964
                                                                                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                                goto lab_0x18001c97e;
                                                                            } else {
                                                                                // 0x18001c581
                                                                                *v1 = v115;
                                                                                uint32_t v116 = v95 + 80; // 0x18001c5bf
                                                                                if (v116 > v94) {
                                                                                    // 0x18001c964
                                                                                    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                                    goto lab_0x18001c97e;
                                                                                } else {
                                                                                    // 0x18001c5cc
                                                                                    *v1 = v116;
                                                                                    uint32_t v117 = v95 + 84; // 0x18001c60a
                                                                                    if (v117 > v94) {
                                                                                        // 0x18001c964
                                                                                        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                                        goto lab_0x18001c97e;
                                                                                    } else {
                                                                                        // 0x18001c617
                                                                                        *v1 = v117;
                                                                                        uint32_t v118 = v95 + 88; // 0x18001c61e
                                                                                        if (v118 > v94) {
                                                                                            // 0x18001c964
                                                                                            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                                            goto lab_0x18001c97e;
                                                                                        } else {
                                                                                            // 0x18001c62a
                                                                                            *v1 = v118;
                                                                                            uint32_t v119 = v95 + 92; // 0x18001c631
                                                                                            if (v119 > v94) {
                                                                                                // 0x18001c964
                                                                                                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                                                goto lab_0x18001c97e;
                                                                                            } else {
                                                                                                // 0x18001c63d
                                                                                                *v1 = v119;
                                                                                                uint32_t v120 = v95 + 96; // 0x18001c644
                                                                                                if (v120 > v94) {
                                                                                                    // 0x18001c964
                                                                                                    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                                                    goto lab_0x18001c97e;
                                                                                                } else {
                                                                                                    // 0x18001c650
                                                                                                    *v1 = v120;
                                                                                                    uint32_t v121 = v95 + 100; // 0x18001c657
                                                                                                    if (v121 > v94) {
                                                                                                        // 0x18001c964
                                                                                                        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                                                        goto lab_0x18001c97e;
                                                                                                    } else {
                                                                                                        // 0x18001c663
                                                                                                        *v1 = v121;
                                                                                                        uint32_t v122 = v95 + 104; // 0x18001c66a
                                                                                                        if (v122 > v94) {
                                                                                                            // 0x18001c964
                                                                                                            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                                                            goto lab_0x18001c97e;
                                                                                                        } else {
                                                                                                            int32_t v123 = *v6 == 0 ? v110 : llvm_bswap_i32(v110);
                                                                                                            *v1 = v122;
                                                                                                            v84 = v123;
                                                                                                            // 0x18001c964
                                                                                                            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                                                                                            goto lab_0x18001c97e;
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18001bdc6:;
    int64_t v124 = v79;
    if (v19 > (int32_t)v64) {
        // 0x18001bdcc
        *(int32_t *)v77 = v78;
        goto lab_0x18001bdcf;
    } else {
        goto lab_0x18001bdcf;
    }
  lab_0x18001bdcf:;
    int64_t v125 = v64 + 1; // 0x18001bdcf
    v65 = v124;
    v64 = v125 & 0xffffffff;
    v63 = v77 + 16;
    int64_t v126; // 0x18001b7d0
    int64_t v127; // 0x18001b7d0
    int64_t v128; // 0x18001b7d0
    if ((int32_t)v125 < v57) {
        goto lab_0x18001bd70;
    } else {
        // 0x18001bded
        v128 = v124;
        v127 = 0;
        int64_t v129; // bp-1272, 0x18001b7d0
        v126 = &v129;
        goto lab_0x18001bdf4;
    }
  lab_0x18001bf8e:;
    uint32_t v130 = *v3; // 0x18001bf8e
    int32_t v131 = *v1; // 0x18001bf92
    uint32_t v132 = v131 + 4; // 0x18001bf95
    uint32_t v133; // 0x18001c007
    int32_t v134; // 0x18001c023
    int64_t v135; // 0x18001c03b
    if (v132 > v130) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        int64_t v136 = v87;
        *v1 = v132;
        uint32_t v137 = v131 + 8; // 0x18001bfa8
        if (v137 > v130) {
            // 0x18001c964
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            goto lab_0x18001c97e;
        } else {
            // 0x18001bfb4
            *v1 = v137;
            uint32_t v138 = v131 + 12; // 0x18001bfbb
            if (v138 > v130) {
                // 0x18001c964
                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                goto lab_0x18001c97e;
            } else {
                // 0x18001bfc7
                *v1 = v138;
                uint32_t v139 = v131 + 16; // 0x18001bfce
                if (v139 > v130) {
                    // 0x18001c964
                    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                    goto lab_0x18001c97e;
                } else {
                    // 0x18001bfda
                    *v1 = v139;
                    uint32_t v140 = v131 + 20; // 0x18001bfe1
                    if (v140 > v130) {
                        // 0x18001c964
                        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                        goto lab_0x18001c97e;
                    } else {
                        // 0x18001bfed
                        *v1 = v140;
                        uint32_t v141 = v131 + 24; // 0x18001bff4
                        if (v141 > v130) {
                            // 0x18001c964
                            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                            goto lab_0x18001c97e;
                        } else {
                            // 0x18001c000
                            *v1 = v141;
                            v133 = v131 + 28;
                            if (v133 > v130) {
                                // 0x18001c964
                                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                                goto lab_0x18001c97e;
                            } else {
                                // 0x18001c013
                                *v1 = v133;
                                v134 = *v6;
                                v135 = v86;
                                if (v134 == 0) {
                                    goto lab_0x18001c059;
                                } else {
                                    // 0x18001c02c
                                    v135 = 256 * (int64_t)*(int32_t *)(v136 + (int64_t)v141) & 0xff0000;
                                    goto lab_0x18001c059;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18001bedf:;
    int64_t v142 = v74 + 1; // 0x18001bedf
    v74 = v142 & 0xffffffff;
    v73 = v90 + 16;
    if ((int32_t)v142 < v57) {
        goto lab_0x18001be80;
    } else {
        goto lab_0x18001c97e;
    }
  lab_0x18001bdf4:;
    int64_t v143; // 0x18001b7d0
    int32_t v144; // 0x18001b7d0
    int64_t v145; // 0x18001be2f
    if (v124 == 0) {
        goto lab_0x18001c97e;
    } else {
        uint32_t v146 = *v1; // 0x18001bdfd
        uint32_t v147 = v146 + 4; // 0x18001be00
        if (v147 > *v3) {
            goto lab_0x18001c97e;
        } else {
            // 0x18001be0c
            v143 = v126;
            *v1 = v147;
            uint32_t v148 = *(int32_t *)(v124 + (int64_t)v146); // 0x18001be16
            v145 = v128;
            v144 = v148;
            if (*v6 == 0) {
                goto lab_0x18001be4a;
            } else {
                // 0x18001be20
                v145 = 256 * (int64_t)v148 & 0xff0000;
                v144 = 0x1000000 * v148 | v148 / 0x1000000 | v148 / 256 & 0xff00 | (int32_t)v145;
                goto lab_0x18001be4a;
            }
        }
    }
  lab_0x18001be4a:
    // 0x18001be4a
    if (v19 > (int32_t)v127) {
        // 0x18001be50
        *(int32_t *)v143 = v144;
        goto lab_0x18001be53;
    } else {
        goto lab_0x18001be53;
    }
  lab_0x18001be53:;
    int64_t v149 = v127 + 1; // 0x18001be53
    v128 = v145;
    v127 = v149 & 0xffffffff;
    v126 = v143 + 16;
    v62 = v145;
    if ((int32_t)v149 < v57) {
        goto lab_0x18001bdf4;
    } else {
        goto lab_0x18001be5f;
    }
  lab_0x18001c059:;
    int32_t v150; // 0x18001b7d0
    int64_t v151; // 0x18001c088
    if (v131 + 32 > v130) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        // 0x18001c066
        *v1 = v131 + 32;
        uint32_t v152 = *(int32_t *)(v135 + (int64_t)v133); // 0x18001c070
        v151 = v135;
        v150 = v152;
        if (v134 == 0) {
            goto lab_0x18001c0a6;
        } else {
            // 0x18001c079
            v151 = 256 * (int64_t)v152 & 0xff0000;
            v150 = 0x1000000 * v152 | v152 / 0x1000000 | v152 / 256 & 0xff00 | (int32_t)v151;
            goto lab_0x18001c0a6;
        }
    }
  lab_0x18001c0a6:;
    int32_t v153; // 0x18001b7d0
    int32_t v154; // 0x18001b7d0
    int32_t v155; // 0x18001b7d0
    int64_t v156; // 0x18001b7d0
    if (v131 + 36 > v130) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        // 0x18001c0c4
        v155 = v150;
        int64_t v157 = v151;
        int64_t v158 = v151;
        int32_t v159 = v131 + 36; // 0x18001c0c4
        *v1 = v159;
        int32_t v160 = *(int32_t *)&g31; // 0x18001c0cc
        v156 = v157;
        v153 = v159;
        v154 = 0;
        if (v160 != 985 == (v160 != 990)) {
            goto lab_0x18001c12c;
        } else {
            int32_t v161 = v131 + 40; // 0x18001c0e0
            if (v161 > v130) {
                // 0x18001c964
                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                goto lab_0x18001c97e;
            } else {
                // 0x18001c0ed
                *v1 = v161;
                uint32_t v162 = *(int32_t *)(v158 + (int64_t)v159); // 0x18001c0f9
                v156 = v157;
                v153 = v161;
                v154 = v162;
                if (v134 == 0) {
                    goto lab_0x18001c12c;
                } else {
                    int64_t v163 = 256 * (int64_t)v162 & 0xff0000; // 0x18001c111
                    v156 = v163;
                    v153 = v161;
                    v154 = 0x1000000 * v162 | v162 / 0x1000000 | v162 / 256 & 0xff00 | (int32_t)v163;
                    goto lab_0x18001c12c;
                }
            }
        }
    }
  lab_0x18001c12c:;
    uint32_t v164 = v153; // 0x18001c139
    uint32_t v165 = v164 + 4;
    int32_t v166; // 0x18001b7d0
    int32_t v167; // 0x18001b7d0
    int64_t v168; // 0x18001c160
    if (v165 > v130) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        // 0x18001c139
        v166 = v154;
        *v1 = v165;
        uint32_t v169 = *(int32_t *)(v156 + (int64_t)v164); // 0x18001c148
        v168 = v156;
        v167 = v169;
        if (v134 == 0) {
            goto lab_0x18001c17e;
        } else {
            // 0x18001c151
            v168 = 256 * (int64_t)v169 & 0xff0000;
            v167 = 0x1000000 * v169 | v169 / 0x1000000 | v169 / 256 & 0xff00 | (int32_t)v168;
            goto lab_0x18001c17e;
        }
    }
  lab_0x18001c17e:;
    int32_t v170; // 0x18001b7d0
    int32_t v171; // 0x18001b7d0
    if (v164 + 8 > v130) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        // 0x18001c18b
        v171 = v167;
        *v1 = v164 + 8;
        int32_t v172 = v164 + 12; // 0x18001c192
        if (v172 > v130) {
            // 0x18001c964
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            goto lab_0x18001c97e;
        } else {
            // 0x18001c19e
            *v1 = v172;
            int32_t v173 = *(int32_t *)&g31; // 0x18001c1a6
            v170 = v172;
            if (v173 != 985 == (v173 != 990)) {
                goto lab_0x18001c1cf;
            } else {
                int32_t v174 = v164 + 16; // 0x18001c1ba
                if (v174 > v130) {
                    // 0x18001c964
                    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                    goto lab_0x18001c97e;
                } else {
                    // 0x18001c1c7
                    *v1 = v174;
                    v170 = v174;
                    goto lab_0x18001c1cf;
                }
            }
        }
    }
  lab_0x18001c1cf:;
    uint32_t v175 = v170; // 0x18001c1dc
    uint32_t v176 = v175 + 4;
    int32_t v177; // 0x18001b7d0
    int64_t v178; // 0x18001c1fd
    if (v176 > v130) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        // 0x18001c1dc
        *v1 = v176;
        uint32_t v179 = *(int32_t *)(v168 + (int64_t)v175); // 0x18001c1e8
        v178 = v168;
        v177 = v179;
        if (v134 == 0) {
            goto lab_0x18001c216;
        } else {
            // 0x18001c1f0
            v178 = 256 * (int64_t)v179 & 0xff0000;
            v177 = 0x1000000 * v179 | v179 / 0x1000000 | v179 / 256 & 0xff00 | (int32_t)v178;
            goto lab_0x18001c216;
        }
    }
  lab_0x18001c216:;
    int32_t v180; // 0x18001b7d0
    int32_t v181; // 0x18001b7d0
    uint32_t v182; // 0x18001c22a
    int64_t v183; // 0x18001c257
    if (v175 + 8 > v130) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        // 0x18001c223
        v180 = v177;
        uint32_t v184 = v175 + 8; // 0x18001c223
        *v1 = v184;
        v182 = v175 + 12;
        if (v182 > v130) {
            // 0x18001c964
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            goto lab_0x18001c97e;
        } else {
            // 0x18001c236
            *v1 = v182;
            uint32_t v185 = *(int32_t *)(v178 + (int64_t)v184); // 0x18001c242
            v183 = v178;
            v181 = v185;
            if (v134 == 0) {
                goto lab_0x18001c270;
            } else {
                // 0x18001c24a
                v183 = 256 * (int64_t)v185 & 0xff0000;
                v181 = 0x1000000 * v185 | v185 / 0x1000000 | v185 / 256 & 0xff00 | (int32_t)v183;
                goto lab_0x18001c270;
            }
        }
    }
  lab_0x18001c270:;
    int32_t v186; // 0x18001b7d0
    int32_t v187; // 0x18001b7d0
    int64_t v188; // 0x18001c2a1
    if (v175 + 16 > v130) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        // 0x18001c27d
        v187 = v181;
        *v1 = v175 + 16;
        uint32_t v189 = *(int32_t *)(v183 + (int64_t)v182); // 0x18001c289
        v188 = v183;
        v186 = v189;
        if (v134 == 0) {
            goto lab_0x18001c2bf;
        } else {
            // 0x18001c292
            v188 = 256 * (int64_t)v189 & 0xff0000;
            v186 = 0x1000000 * v189 | v189 / 0x1000000 | v189 / 256 & 0xff00 | (int32_t)v188;
            goto lab_0x18001c2bf;
        }
    }
  lab_0x18001c2bf:;
    int64_t v190; // 0x18001b7d0
    int32_t v191; // 0x18001c32f
    if (v175 + 20 > v130) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        int32_t v192 = v186;
        *v1 = v175 + 20;
        uint32_t v193 = v175 + 24; // 0x18001c2d3
        if (v193 > v130) {
            // 0x18001c964
            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
            goto lab_0x18001c97e;
        } else {
            // 0x18001c2df
            *v1 = v193;
            uint32_t v194 = v175 + 28; // 0x18001c2e6
            if (v194 > v130) {
                // 0x18001c964
                _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                goto lab_0x18001c97e;
            } else {
                // 0x18001c2f2
                *v1 = v194;
                uint32_t v195 = v175 + 32; // 0x18001c2f9
                if (v195 > v130) {
                    // 0x18001c964
                    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                    goto lab_0x18001c97e;
                } else {
                    // 0x18001c305
                    *v1 = v195;
                    uint32_t v196 = v175 + 36; // 0x18001c30c
                    if (v196 > v130) {
                        // 0x18001c964
                        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                        goto lab_0x18001c97e;
                    } else {
                        // 0x18001c318
                        *v1 = v196;
                        uint32_t v197 = v175 + 40; // 0x18001c31f
                        if (v197 > v130) {
                            // 0x18001c964
                            _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
                            goto lab_0x18001c97e;
                        } else {
                            // 0x18001c32b
                            *v1 = v197;
                            v191 = v53;
                            v190 = v188;
                            if (v191 > 49) {
                                goto lab_0x18001c37c;
                            } else {
                                int64_t v198 = v191; // 0x18001c32f
                                int64_t v199 = 5 * v198; // 0x18001c33a
                                int64_t v200 = 20 * v198 + v18;
                                *(int32_t *)(v200 + 112) = v171;
                                int32_t * v201 = (int32_t *)(v200 + 116); // 0x18001c343
                                *v201 = v180;
                                *(int32_t *)(v200 + 120) = v187;
                                *(int32_t *)(v200 + 124) = v192;
                                *(int32_t *)(v200 + 128) = v155;
                                int32_t v202 = *(int32_t *)&g31; // 0x18001c358
                                v190 = v199;
                                if (v166 == 0 || v202 != 985 == (v202 != 990)) {
                                    goto lab_0x18001c37c;
                                } else {
                                    // 0x18001c371
                                    *v201 = v175 + v166 + v180;
                                    v190 = v199;
                                    goto lab_0x18001c37c;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18001c37c:;
    int32_t v203 = v89 + 1; // 0x18001c380
    v53 = v191 + 1;
    v87 = v188;
    v86 = v190;
    v89 = v203;
    if (v203 >= v88 || v188 == 0) {
        // 0x18001c964
        _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        goto lab_0x18001c97e;
    } else {
        goto lab_0x18001bf8e;
    }
}

// Address range: 0x18001c9d0 - 0x18001ccf2
int64_t function_18001c9d0(int64_t a1, int64_t a2, int32_t a3) {
    // 0x18001c9d0
    if (a3 == 0) {
        // 0x18001ccce
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18001ca17
    *v1 = a3;
    uint32_t v2 = (int32_t)a2; // 0x18001ca1a
    if (v2 == 0) {
        // 0x18001cb1a
        *v1 = a3;
        // 0x18001ccce
        __security_check_cookie(g17);
        return &g47;
    }
    int32_t * v3 = (int32_t *)(a1 + 12);
    int32_t * v4 = (int32_t *)(a1 + 16);
    int64_t v5 = 0; // 0x18001c9d0
    int32_t v6; // 0x18001c9d0
    int64_t v7; // 0x18001c9d0
    int64_t v8; // 0x18001c9d0
    while (a1 != 0) {
        uint32_t v9 = *v1; // 0x18001ca2f
        uint32_t v10 = *v3; // 0x18001ca32
        uint32_t v11 = v9 + 4; // 0x18001ca36
        if (v11 > v10) {
            // break -> 0x18001ccce
            break;
        }
        // 0x18001ca42
        *v1 = v11;
        uint32_t v12 = v9 + 8; // 0x18001ca5e
        if (v12 > v10) {
            // break -> 0x18001ccce
            break;
        }
        int32_t v13 = *v4; // 0x18001ca4a
        int32_t v14 = *(int32_t *)((int64_t)v9 + a1); // 0x18001ca52
        *v1 = v12;
        uint32_t v15 = v9 + 12; // 0x18001ca85
        if (v15 > v10) {
            // break -> 0x18001ccce
            break;
        }
        int32_t v16 = *(int32_t *)((int64_t)v11 + a1); // 0x18001ca77
        *v1 = v15;
        uint32_t v17 = v9 + 16; // 0x18001caa8
        if (v17 > v10) {
            // break -> 0x18001ccce
            break;
        }
        int32_t v18 = *(int32_t *)((int64_t)v12 + a1); // 0x18001ca9c
        *v1 = v17;
        uint32_t v19 = v9 + 20; // 0x18001cacc
        if (v19 > v10) {
            // break -> 0x18001ccce
            break;
        }
        int32_t v20 = *(int32_t *)((int64_t)v15 + a1); // 0x18001cabe
        *v1 = v19;
        uint32_t v21 = v9 + 24; // 0x18001cadf
        if (v21 > v10) {
            // break -> 0x18001ccce
            break;
        }
        int32_t v22 = v13 == 0 ? v14 : llvm_bswap_i32(v14);
        uint32_t v23 = v13 != 0 ? v13 == 0 ? v16 : llvm_bswap_i32(v16) : v22;
        int32_t v24 = v13 == 0 ? v18 : llvm_bswap_i32(v18);
        uint32_t v25 = v13 != 0 ? v13 == 0 ? v20 : llvm_bswap_i32(v20) : v24;
        *v1 = v21;
        int64_t v26; // bp-584, 0x18001c9d0
        function_180005050(a1, (int64_t)v23, &v26);
        int64_t v27; // bp-312, 0x18001c9d0
        function_180005050(a1, (int64_t)v25, &v27);
        int64_t v28 = v5 + 1; // 0x18001cb0f
        v5 = v28 & 0xffffffff;
        if ((int32_t)v28 >= v2) {
            // 0x18001cb1a
            *v1 = a3;
            int64_t v29; // bp-616, 0x18001c9d0
            v8 = (int64_t)&v29 + 32;
            v6 = a3;
            v7 = 0;
            goto lab_0x18001cb3d;
        }
    }
  lab_0x18001ccce:
    // 0x18001ccce
    __security_check_cookie(g17);
    return &g47;
  lab_0x18001cb3d:;
    uint32_t v30 = *v3; // 0x18001cb40
    uint32_t v31 = v6 + 4; // 0x18001cb44
    int32_t v32; // 0x18001c9d0
    int32_t v33; // 0x18001c9d0
    int64_t v34; // 0x18001c9d0
    int32_t v35; // 0x18001cb58
    int32_t v36; // 0x18001cbab
    int32_t v37; // 0x18001cbcd
    int32_t v38; // 0x18001cbfe
    if (v31 > v30) {
        goto lab_0x18001ccce;
    } else {
        // 0x18001cb50
        *v1 = v31;
        uint32_t v39 = v6 + 8; // 0x18001cb6b
        if (v39 > v30) {
            goto lab_0x18001ccce;
        } else {
            // 0x18001cb78
            v35 = *v4;
            int32_t v40 = *(int32_t *)((int64_t)v6 + a1); // 0x18001cb60
            *v1 = v39;
            uint32_t v41 = v6 + 12; // 0x18001cb92
            if (v41 > v30) {
                goto lab_0x18001ccce;
            } else {
                int32_t v42 = *(int32_t *)((int64_t)v31 + a1); // 0x18001cb84
                *v1 = v41;
                uint32_t v43 = v6 + 16; // 0x18001cbb6
                if (v43 > v30) {
                    goto lab_0x18001ccce;
                } else {
                    // 0x18001cbc3
                    v36 = *(int32_t *)((int64_t)v39 + a1);
                    *v1 = v43;
                    uint32_t v44 = v6 + 20; // 0x18001cbdb
                    if (v44 > v30) {
                        goto lab_0x18001ccce;
                    } else {
                        // 0x18001cbe7
                        v37 = *(int32_t *)((int64_t)v41 + a1);
                        *v1 = v44;
                        v38 = v6 + 24;
                        if (v38 > v30) {
                            goto lab_0x18001ccce;
                        } else {
                            int32_t v45 = v35 == 0 ? v40 : llvm_bswap_i32(v40);
                            int32_t v46 = v35 != 0 ? v35 == 0 ? v42 : llvm_bswap_i32(v42) : v45;
                            *v1 = v38;
                            v33 = v38;
                            if (v46 < 101) {
                                goto lab_0x18001cc4f;
                            } else {
                                // 0x18001cc18
                                *v1 = v46;
                                v32 = v46;
                                v34 = 0;
                                goto lab_0x18001cc20;
                            }
                        }
                    }
                }
            }
        }
    }
  lab_0x18001cc4f:;
    int32_t v47 = v35 == 0 ? v36 : llvm_bswap_i32(v36);
    int32_t v48 = v35 != 0 ? v35 == 0 ? v37 : llvm_bswap_i32(v37) : v47;
    int32_t v49 = v33; // 0x18001cc54
    int32_t v50 = v49; // 0x18001cc52
    int32_t v51; // 0x18001c9d0
    int64_t v52; // 0x18001c9d0
    if (v48 < 101) {
        goto lab_0x18001cc8f;
    } else {
        // 0x18001cc54
        *v1 = v48;
        v51 = v48;
        v52 = 0;
        goto lab_0x18001cc60;
    }
  lab_0x18001cc8f:
    // 0x18001cc8f
    if ((int32_t)function_18001cd00(a1) == 0) {
        goto lab_0x18001ccce;
    } else {
        int64_t v53 = v7 + 1; // 0x18001cca2
        *v1 = v50;
        v6 = v50;
        v7 = v53 & 0xffffffff;
        if ((int32_t)v53 < v2) {
            goto lab_0x18001cb3d;
        } else {
            goto lab_0x18001ccce;
        }
    }
  lab_0x18001cc20:;
    int32_t v54 = v32; // 0x18001cc20
    int32_t v55 = v54 + 1; // 0x18001cc23
    v33 = v54;
    if (v55 > v30) {
        goto lab_0x18001cc4f;
    } else {
        // 0x18001cc2a
        *v1 = v55;
        int64_t v56 = v34 + 1; // 0x18001cc2d
        char v57 = *(char *)((int64_t)v54 + a1); // 0x18001cc35
        v32 = v55;
        v34 = v56;
        if (v57 != 0) {
            goto lab_0x18001cc20;
        } else {
            if (v56 > 259) {
                // 0x18001cc4b
                *v1 = v38;
                v33 = v38;
                goto lab_0x18001cc4f;
            } else {
                // 0x18001cc47
                *(char *)(v56 + v8) = v57;
                // 0x18001cc4b
                *v1 = v38;
                v33 = v38;
                goto lab_0x18001cc4f;
            }
        }
    }
  lab_0x18001cc60:;
    int32_t v58 = v51; // 0x18001cc60
    int32_t v59 = v58 + 1; // 0x18001cc63
    v50 = v58;
    if (v59 > v30) {
        goto lab_0x18001cc8f;
    } else {
        // 0x18001cc6a
        *v1 = v59;
        int64_t v60 = v52 + 1; // 0x18001cc6d
        char v61 = *(char *)((int64_t)v58 + a1); // 0x18001cc75
        v51 = v59;
        v52 = v60;
        if (v61 != 0) {
            goto lab_0x18001cc60;
        } else {
            if (v60 > 259) {
                // 0x18001cc8b
                *v1 = v49;
                v50 = v49;
                goto lab_0x18001cc8f;
            } else {
                // 0x18001cc87
                *(char *)(v60 + v8) = v61;
                // 0x18001cc8b
                *v1 = v49;
                v50 = v49;
                goto lab_0x18001cc8f;
            }
        }
    }
}

// Address range: 0x18001cd00 - 0x18001ce7c
int64_t function_18001cd00(int64_t a1) {
    // 0x18001cd00
    int64_t v1; // 0x18001cd00
    int32_t v2 = v1;
    if (v2 == 0) {
        // 0x18001cd09
        return v1 + 1 & 0xffffffff;
    }
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x18001cd12
    *v3 = v2;
    switch (*(int32_t *)&g31) {
        case 779: {
        }
        case 866: {
        }
        case 877: {
            // 0x18001ce63
            return (int32_t)function_18001ce80(a1) != 0;
        }
    }
    if (a1 == 0) {
        // 0x18001ce3f
        return 0;
    }
    uint32_t v4 = *(int32_t *)(a1 + 12); // 0x18001cd4d
    uint32_t v5 = v2 + 4; // 0x18001cd51
    if (v4 < v5) {
        // 0x18001ce3f
        return 0;
    }
    // 0x18001cd5a
    *v3 = v5;
    uint32_t v6 = v2 + 6; // 0x18001cd60
    if (v6 > v4) {
        // 0x18001ce3f
        return 0;
    }
    // 0x18001cd69
    *v3 = v6;
    uint32_t v7 = v2 + 8; // 0x18001cd8b
    if (v7 > v4) {
        // 0x18001ce3f
        return 0;
    }
    // 0x18001cd98
    *v3 = v7;
    uint32_t v8 = v2 + 12; // 0x18001cd9f
    if (v8 > v4) {
        // 0x18001ce3f
        return 0;
    }
    // 0x18001cdb0
    *v3 = v8;
    uint32_t v9 = v2 + 16; // 0x18001cdc5
    if (v9 > v4) {
        // 0x18001ce3f
        return 0;
    }
    // 0x18001cdcd
    *v3 = v9;
    uint32_t v10 = v2 + 20; // 0x18001cde5
    if (v10 > v4) {
        // 0x18001ce3f
        return 0;
    }
    // 0x18001cded
    *v3 = v10;
    uint32_t v11 = v2 + 24; // 0x18001cdf4
    if (v11 > v4) {
        // 0x18001ce3f
        return 0;
    }
    // 0x18001cdfc
    *v3 = v11;
    uint32_t v12 = v2 + 28; // 0x18001ce03
    if (v12 > v4) {
        // 0x18001ce3f
        return 0;
    }
    // 0x18001ce0b
    *v3 = v12;
    uint32_t v13 = v2 + 32; // 0x18001ce12
    if (v13 > v4) {
        // 0x18001ce3f
        return 0;
    }
    // 0x18001ce1a
    *v3 = v13;
    return (int32_t)function_18001ce80(a1) != 0;
}

// Address range: 0x18001ce80 - 0x18001d1ed
int64_t function_18001ce80(int64_t a1) {
    // 0x18001ce80
    int64_t v1; // 0x18001ce80
    int32_t v2 = v1; // 0x18001ce9e
    if (v2 != 0) {
        // 0x18001ceac
        *(int32_t *)(a1 + 8) = v2;
    }
    // 0x18001d1c4
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18001d1f0 - 0x18001d359
int64_t function_18001d1f0(int64_t * a1, int64_t * a2) {
    // 0x18001d1f0
    if (a2 == NULL) {
        // 0x18001d338
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v1 = (int64_t)a2;
    int16_t v2 = 0; // bp-552, 0x18001d233
    int64_t v3; // bp-536, 0x18001d1f0
    memset(&v3, 0, 512);
    _wsplitpath((int16_t *)a1, &v2, (int16_t *)&v3, NULL, NULL);
    int64_t v4 = &v2; // 0x18001d26b
    int64_t v5 = v4; // 0x18001d27b
    int16_t v6 = *(int16_t *)v5; // 0x18001d280
    *(int16_t *)(v1 - v4 + v5) = v6;
    v5 += 2;
    while (v6 != 0) {
        // 0x18001d280
        v6 = *(int16_t *)v5;
        *(int16_t *)(v1 - v4 + v5) = v6;
        v5 += 2;
    }
    int64_t v7 = v1 - 2; // 0x18001d290
    int64_t v8 = v7; // 0x18001d290
    v8 += 2;
    while (*(int16_t *)v8 != 0) {
        // 0x18001d294
        v8 += 2;
    }
    int64_t v9 = 0; // 0x18001d2a6
    int64_t v10 = 2 * v9; // 0x18001d2b0
    int16_t v11 = *(int16_t *)(v10 + (int64_t)&v3); // 0x18001d2b0
    *(int16_t *)(v10 + v8) = v11;
    v9++;
    while (v11 != 0) {
        // 0x18001d2b0
        v10 = 2 * v9;
        v11 = *(int16_t *)(v10 + (int64_t)&v3);
        *(int16_t *)(v10 + v8) = v11;
        v9++;
    }
    int64_t v12 = 0; // 0x18001d2d0
    int64_t v13 = v12; // 0x18001d2d8
    while (*(int16_t *)(2 * v12 + v1) != 0) {
        // 0x18001d2d0
        v12 = v13 + 1;
        v13 = v12;
    }
    if (v12 == 0) {
        // 0x18001d338
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v14 = v1 + 2; // 0x18001d2e2
    int64_t v15 = -1; // 0x18001d2e8
    while (*(int16_t *)(2 * v15 + v14) != 0) {
        // 0x18001d2e2
        v15++;
    }
    int64_t v16 = -1; // 0x18001d2f4
    if (*(int16_t *)(2 * v15 + v7) == 92) {
        // 0x18001d338
        __security_check_cookie(g17);
        return &g47;
    }
    while (*(int16_t *)(2 * v16 + v14) != 0) {
        // 0x18001d300
        v16++;
    }
    int64_t v17 = v7; // 0x18001d312
    if (*(int16_t *)(2 * v16 + v7) == 47) {
        // 0x18001d338
        __security_check_cookie(g17);
        return &g47;
    }
    v17 += 2;
    while (*(int16_t *)v17 != 0) {
        // 0x18001d320
        v17 += 2;
    }
    // 0x18001d32b
    *(int32_t *)v17 = 92;
    // 0x18001d338
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18001d360 - 0x18001d4d7
int64_t function_18001d360(int64_t a1, int64_t hWnd2) {
    // 0x18001d360
    if (a1 == 0 || hWnd2 == 0) {
        // 0x18001d4c0
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t * hWnd = (int64_t *)a1; // 0x18001d3af
    int32_t lpRect; // bp-88, 0x18001d360
    GetWindowRect(hWnd, (struct tagRECT *)&lpRect);
    int32_t v1; // 0x18001d360
    uint32_t v2 = v1 - lpRect; // 0x18001d3c6
    int32_t lpRect2; // bp-104, 0x18001d360
    GetWindowRect((int64_t *)hWnd2, (struct tagRECT *)&lpRect2);
    int64_t * hdc = GetDC(hWnd); // 0x18001d3ea
    uint32_t v3 = GetDeviceCaps(hdc, 8); // 0x18001d3fb
    uint32_t v4 = GetDeviceCaps(hdc, 10); // 0x18001d40c
    ReleaseDC(hWnd, hdc);
    int32_t v5 = v1 - lpRect2 - v2; // 0x18001d421
    int32_t v6 = (v5 - (v5 >> 31)) / 2 + lpRect2; // 0x18001d439
    int32_t X = 0; // 0x18001d43e
    if (v6 >= 0) {
        // 0x18001d445
        X = ((int64_t)v6 + (int64_t)v2 & 0xffffffff) > (int64_t)v3 ? v3 - v2 : v6;
    }
    uint32_t v7 = 0; // 0x18001d3cb
    int32_t v8 = -v7; // 0x18001d459
    int32_t v9 = (v8 - (v8 >> 31)) / 2 + v1; // 0x18001d474
    int32_t Y = 0; // 0x18001d479
    if (v9 >= 0) {
        // 0x18001d480
        Y = ((int64_t)v9 + (int64_t)v7 & 0xffffffff) > (int64_t)v4 ? v4 - v7 : v9;
    }
    // 0x18001d48f
    SetWindowPos(hWnd, NULL, X, Y, 0, 0, 5);
    // 0x18001d4c0
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18001d4e0 - 0x18001d5bb
int64_t function_18001d4e0(int64_t a1, int64_t * a2) {
    if (a1 == 0) {
        // 0x18001d4f9
        *(int32_t *)a2 = 0;
        return 0;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18001d4ee
    uint32_t v2 = *v1; // 0x18001d4ee
    uint32_t v3 = v2 + 4; // 0x18001d4f1
    int32_t * v4 = (int32_t *)(a1 + 12); // 0x18001d4f4
    if (v3 > *v4) {
        // 0x18001d4f9
        *(int32_t *)a2 = 0;
        return 0;
    }
    int64_t v5 = (int64_t)a2;
    *v1 = v3;
    *(int32_t *)a2 = *(int32_t *)((int64_t)v2 + a1);
    int32_t * v6 = (int32_t *)(a1 + 16); // 0x18001d50f
    int64_t v7 = a1; // 0x18001d513
    if (*v6 != 0) {
        uint32_t v8 = *v1; // 0x18001d515
        int32_t v9 = *(int32_t *)((int64_t)(v8 - 4) + (int64_t)v8); // 0x18001d51e
        uint32_t v10 = llvm_bswap_i32(v9); // 0x18001d542
        *(int32_t *)a2 = v10;
        v7 = v10;
        if (v9 == 0) {
            // 0x18001d55c
            *(int32_t *)(v5 + 4) = 0;
            return 0;
        }
    }
    uint32_t v11 = *v1; // 0x18001d54f
    uint32_t v12 = v11 + 4; // 0x18001d553
    if (v12 > *v4) {
        // 0x18001d55c
        *(int32_t *)(v5 + 4) = 0;
        return 0;
    }
    // 0x18001d567
    *v1 = v12;
    int32_t * v13 = (int32_t *)(v5 + 4); // 0x18001d576
    *v13 = *(int32_t *)(v7 + (int64_t)v11);
    if (*v6 != 0) {
        uint32_t v14 = *v1; // 0x18001d581
        *v13 = llvm_bswap_i32(*(int32_t *)((int64_t)(v14 - 4) + (int64_t)v14));
    }
    // 0x18001d5b5
    return 1;
}

// Address range: 0x18001d5c0 - 0x18001d70a
int64_t function_18001d5c0(int64_t a1, int64_t * a2) {
    if (a1 == 0) {
        // 0x18001d5d9
        *(int32_t *)a2 = 0;
        return 0;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18001d5ce
    uint32_t v2 = *v1; // 0x18001d5ce
    uint32_t v3 = v2 + 4; // 0x18001d5d1
    int32_t * v4 = (int32_t *)(a1 + 12); // 0x18001d5d4
    if (v3 > *v4) {
        // 0x18001d5d9
        *(int32_t *)a2 = 0;
        return 0;
    }
    int64_t v5 = (int64_t)a2;
    *v1 = v3;
    *(int32_t *)a2 = *(int32_t *)((int64_t)v2 + a1);
    int32_t * v6 = (int32_t *)(a1 + 16); // 0x18001d5ef
    int64_t v7 = a1; // 0x18001d5f3
    if (*v6 != 0) {
        uint32_t v8 = *v1; // 0x18001d5f5
        int32_t v9 = *(int32_t *)((int64_t)(v8 - 4) + (int64_t)v8); // 0x18001d5fe
        uint32_t v10 = llvm_bswap_i32(v9); // 0x18001d622
        *(int32_t *)a2 = v10;
        v7 = v10;
        if (v9 == 0) {
            // 0x18001d63c
            *(int32_t *)(v5 + 4) = 0;
            return 0;
        }
    }
    uint32_t v11 = *v1; // 0x18001d62f
    uint32_t v12 = v11 + 4; // 0x18001d633
    if (v12 > *v4) {
        // 0x18001d63c
        *(int32_t *)(v5 + 4) = 0;
        return 0;
    }
    // 0x18001d647
    *v1 = v12;
    int32_t * v13 = (int32_t *)(v5 + 4); // 0x18001d656
    *v13 = *(int32_t *)(v7 + (int64_t)v11);
    int64_t v14 = v7; // 0x18001d65f
    if (*v6 != 0) {
        uint32_t v15 = *v1; // 0x18001d661
        int32_t v16 = *(int32_t *)((int64_t)(v15 - 4) + (int64_t)v15); // 0x18001d66b
        uint32_t v17 = llvm_bswap_i32(v16); // 0x18001d68f
        *v13 = v17;
        v14 = v17;
        if (v16 == 0) {
            // 0x18001d6aa
            *(int32_t *)(v5 + 8) = 0;
            return 0;
        }
    }
    uint32_t v18 = *v1; // 0x18001d69d
    uint32_t v19 = v18 + 4; // 0x18001d6a1
    if (v19 > *v4) {
        // 0x18001d6aa
        *(int32_t *)(v5 + 8) = 0;
        return 0;
    }
    // 0x18001d6b5
    *v1 = v19;
    int32_t * v20 = (int32_t *)(v5 + 8); // 0x18001d6c4
    *v20 = *(int32_t *)(v14 + (int64_t)v18);
    if (*v6 != 0) {
        uint32_t v21 = *v1; // 0x18001d6cf
        *v20 = llvm_bswap_i32(*(int32_t *)((int64_t)(v21 - 4) + (int64_t)v21));
    }
    // 0x18001d704
    return 1;
}

// Address range: 0x18001d710 - 0x18001d8c9
int64_t function_18001d710(int64_t a1, int64_t * a2) {
    if (a1 == 0) {
        // 0x18001d729
        *(int32_t *)a2 = 0;
        return 0;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18001d71e
    uint32_t v2 = *v1; // 0x18001d71e
    uint32_t v3 = v2 + 4; // 0x18001d721
    int32_t * v4 = (int32_t *)(a1 + 12); // 0x18001d724
    if (v3 > *v4) {
        // 0x18001d729
        *(int32_t *)a2 = 0;
        return 0;
    }
    int64_t v5 = (int64_t)a2;
    *v1 = v3;
    *(int32_t *)a2 = *(int32_t *)((int64_t)v2 + a1);
    int32_t * v6 = (int32_t *)(a1 + 16); // 0x18001d73f
    int64_t v7 = a1; // 0x18001d743
    if (*v6 != 0) {
        uint32_t v8 = *v1; // 0x18001d745
        int32_t v9 = *(int32_t *)((int64_t)(v8 - 4) + (int64_t)v8); // 0x18001d74e
        uint32_t v10 = llvm_bswap_i32(v9); // 0x18001d772
        *(int32_t *)a2 = v10;
        v7 = v10;
        if (v9 == 0) {
            // 0x18001d78c
            *(int32_t *)(v5 + 4) = 0;
            return 0;
        }
    }
    uint32_t v11 = *v1; // 0x18001d77f
    uint32_t v12 = v11 + 4; // 0x18001d783
    if (v12 > *v4) {
        // 0x18001d78c
        *(int32_t *)(v5 + 4) = 0;
        return 0;
    }
    // 0x18001d797
    *v1 = v12;
    int32_t * v13 = (int32_t *)(v5 + 4); // 0x18001d7a6
    *v13 = *(int32_t *)(v7 + (int64_t)v11);
    int64_t v14 = v7; // 0x18001d7af
    if (*v6 != 0) {
        uint32_t v15 = *v1; // 0x18001d7b1
        int32_t v16 = *(int32_t *)((int64_t)(v15 - 4) + (int64_t)v15); // 0x18001d7bb
        uint32_t v17 = llvm_bswap_i32(v16); // 0x18001d7df
        *v13 = v17;
        v14 = v17;
        if (v16 == 0) {
            // 0x18001d7fa
            *(int32_t *)(v5 + 8) = 0;
            return 0;
        }
    }
    uint32_t v18 = *v1; // 0x18001d7ed
    uint32_t v19 = v18 + 4; // 0x18001d7f1
    if (v19 > *v4) {
        // 0x18001d7fa
        *(int32_t *)(v5 + 8) = 0;
        return 0;
    }
    // 0x18001d805
    *v1 = v19;
    int32_t * v20 = (int32_t *)(v5 + 8); // 0x18001d814
    *v20 = *(int32_t *)(v14 + (int64_t)v18);
    int64_t v21 = v14; // 0x18001d81d
    if (*v6 != 0) {
        uint32_t v22 = *v1; // 0x18001d81f
        int32_t v23 = *(int32_t *)((int64_t)(v22 - 4) + (int64_t)v22); // 0x18001d829
        uint32_t v24 = llvm_bswap_i32(v23); // 0x18001d84e
        *v20 = v24;
        v21 = v24;
        if (v23 == 0) {
            // 0x18001d869
            *(int32_t *)(v5 + 12) = 0;
            return 0;
        }
    }
    uint32_t v25 = *v1; // 0x18001d85c
    uint32_t v26 = v25 + 4; // 0x18001d860
    if (v26 > *v4) {
        // 0x18001d869
        *(int32_t *)(v5 + 12) = 0;
        return 0;
    }
    // 0x18001d874
    *v1 = v26;
    int32_t * v27 = (int32_t *)(v5 + 12); // 0x18001d883
    *v27 = *(int32_t *)(v21 + (int64_t)v25);
    if (*v6 != 0) {
        uint32_t v28 = *v1; // 0x18001d88e
        *v27 = llvm_bswap_i32(*(int32_t *)((int64_t)(v28 - 4) + (int64_t)v28));
    }
    // 0x18001d8c3
    return 1;
}

// Address range: 0x18001d8d0 - 0x18001dbe2
int64_t function_18001d8d0(int64_t a1, int128_t * a2) {
    if (a1 == 0) {
        // 0x18001d8ed
        *(int32_t *)a2 = 0;
        // 0x18001d8f2
        return 0;
    }
    int32_t * v1 = (int32_t *)(a1 + 8); // 0x18001d8e2
    uint32_t v2 = *v1; // 0x18001d8e2
    uint32_t v3 = v2 + 4; // 0x18001d8e5
    int32_t * v4 = (int32_t *)(a1 + 12); // 0x18001d8e8
    if (v3 > *v4) {
        // 0x18001d8ed
        *(int32_t *)a2 = 0;
        // 0x18001d8f2
        return 0;
    }
    int64_t v5 = (int64_t)a2;
    *v1 = v3;
    *(int32_t *)a2 = *(int32_t *)((int64_t)v2 + a1);
    int32_t * v6 = (int32_t *)(a1 + 16); // 0x18001d905
    int64_t v7 = a1; // 0x18001d909
    if (*v6 != 0) {
        uint32_t v8 = *v1; // 0x18001d90b
        int32_t v9 = *(int32_t *)((int64_t)(v8 - 4) + (int64_t)v8); // 0x18001d914
        uint32_t v10 = llvm_bswap_i32(v9); // 0x18001d938
        *(int32_t *)a2 = v10;
        v7 = v10;
        if (v9 == 0) {
            // 0x18001d952
            *(int32_t *)(v5 + 4) = 0;
            return 0;
        }
    }
    uint32_t v11 = *v1; // 0x18001d945
    uint32_t v12 = v11 + 4; // 0x18001d949
    if (v12 > *v4) {
        // 0x18001d952
        *(int32_t *)(v5 + 4) = 0;
        return 0;
    }
    // 0x18001d95f
    *v1 = v12;
    int32_t * v13 = (int32_t *)(v5 + 4); // 0x18001d96e
    *v13 = *(int32_t *)(v7 + (int64_t)v11);
    int64_t v14 = v7; // 0x18001d977
    if (*v6 != 0) {
        uint32_t v15 = *v1; // 0x18001d979
        int32_t v16 = *(int32_t *)((int64_t)(v15 - 4) + (int64_t)v15); // 0x18001d983
        uint32_t v17 = llvm_bswap_i32(v16); // 0x18001d9a7
        *v13 = v17;
        v14 = v17;
        if (v16 == 0) {
            // 0x18001d9c2
            *(int32_t *)(v5 + 8) = 0;
            return 0;
        }
    }
    uint32_t v18 = *v1; // 0x18001d9b5
    uint32_t v19 = v18 + 4; // 0x18001d9b9
    if (v19 > *v4) {
        // 0x18001d9c2
        *(int32_t *)(v5 + 8) = 0;
        return 0;
    }
    // 0x18001d9cf
    *v1 = v19;
    int32_t * v20 = (int32_t *)(v5 + 8); // 0x18001d9de
    *v20 = *(int32_t *)(v14 + (int64_t)v18);
    int64_t v21 = v14; // 0x18001d9e7
    if (*v6 != 0) {
        uint32_t v22 = *v1; // 0x18001d9e9
        int32_t v23 = *(int32_t *)((int64_t)(v22 - 4) + (int64_t)v22); // 0x18001d9f3
        uint32_t v24 = llvm_bswap_i32(v23); // 0x18001da18
        *v20 = v24;
        v21 = v24;
        if (v23 == 0) {
            // 0x18001da33
            *(int32_t *)(v5 + 12) = 0;
            return 0;
        }
    }
    uint32_t v25 = *v1; // 0x18001da26
    uint32_t v26 = v25 + 4; // 0x18001da2a
    if (v26 > *v4) {
        // 0x18001da33
        *(int32_t *)(v5 + 12) = 0;
        return 0;
    }
    // 0x18001da40
    *v1 = v26;
    int32_t * v27 = (int32_t *)(v5 + 12); // 0x18001da4f
    *v27 = *(int32_t *)(v21 + (int64_t)v25);
    int64_t v28 = v21; // 0x18001da58
    if (*v6 != 0) {
        uint32_t v29 = *v1; // 0x18001da5a
        int32_t v30 = *(int32_t *)((int64_t)(v29 - 4) + (int64_t)v29); // 0x18001da64
        uint32_t v31 = llvm_bswap_i32(v30); // 0x18001da89
        *v27 = v31;
        v28 = v31;
        if (v30 == 0) {
            // 0x18001daa4
            *(int32_t *)(v5 + 16) = 0;
            return 0;
        }
    }
    uint32_t v32 = *v1; // 0x18001da97
    uint32_t v33 = v32 + 4; // 0x18001da9b
    if (v33 > *v4) {
        // 0x18001daa4
        *(int32_t *)(v5 + 16) = 0;
        return 0;
    }
    // 0x18001dab1
    *v1 = v33;
    int32_t * v34 = (int32_t *)(v5 + 16); // 0x18001dac0
    *v34 = *(int32_t *)(v28 + (int64_t)v32);
    if (*v6 != 0) {
        uint32_t v35 = *v1; // 0x18001dacb
        *v34 = llvm_bswap_i32(*(int32_t *)((int64_t)(v35 - 4) + (int64_t)v35));
    }
    // 0x18001db00
    if ((int32_t)function_180006f20(a1, v5 + 20) == 0 || (int32_t)function_180006f20(a1, v5 + 24) == 0 || (int32_t)function_180006f20(a1, v5 + 28) == 0 || (int32_t)function_180006f20(a1, v5 + 32) == 0 || (int32_t)function_180006f20(a1, v5 + 36) == 0 || (int32_t)function_180006f20(a1, v5 + 40) == 0 || (int32_t)function_180006f20(a1, v5 + 44) == 0 || (int32_t)function_180006f20(a1, v5 + 48) == 0 || (int32_t)function_180006f20(a1, v5 + 52) == 0 || (int32_t)function_180006f20(a1, v5 + 56) == 0) {
        // 0x18001d8f2
        return 0;
    }
    // 0x18001dbc8
    return (int32_t)function_180006f20(a1, v5 + 60) != 0;
}

// Address range: 0x18001dbf0 - 0x18001dcfe
int64_t function_18001dbf0(int64_t a1, int64_t a2, int64_t a3) {
    // 0x18001dbf0
    int128_t v1; // bp-104, 0x18001dbf0
    int64_t v2 = &v1; // 0x18001dc04
    v1 = 0;
    int64_t v3 = 0; // 0x18001dc49
    int64_t v4 = 4 * v3;
    int64_t v5 = 0; // 0x18001dc5f
    int32_t * v6 = (int32_t *)(4 * (v5 + v4) + v2); // 0x18001dc6c
    int128_t v7 = __asm_movss(*v6); // 0x18001dc71
    int64_t v8 = 0; // 0x18001dc71
    int64_t v9 = v8 + 1; // 0x18001dc77
    int128_t v10 = __asm_movss(*(int32_t *)(4 * (4 * v8 + v5) + a3)); // 0x18001dc7f
    int128_t v11 = __asm_addss(v7, __asm_mulss_10(v10, *(int32_t *)(4 * (v8 + v4) + a2))); // 0x18001dc8d
    v7 = v11;
    v8 = v9 & 0xffff;
    while ((int16_t)v9 < 4) {
        // 0x18001dc73
        v9 = v8 + 1;
        v10 = __asm_movss(*(int32_t *)(4 * (4 * v8 + v5) + a3));
        v11 = __asm_addss(v7, __asm_mulss_10(v10, *(int32_t *)(4 * (v8 + v4) + a2)));
        v7 = v11;
        v8 = v9 & 0xffff;
    }
    int64_t v12 = v5 + 1; // 0x18001dc98
    *v6 = (int32_t)__asm_movss_8(v11);
    v5 = v12 & 0xffff;
    while ((int16_t)v12 < 4) {
        // 0x18001dc60
        v6 = (int32_t *)(4 * (v5 + v4) + v2);
        v7 = __asm_movss(*v6);
        v8 = 0;
        v9 = v8 + 1;
        v10 = __asm_movss(*(int32_t *)(4 * (4 * v8 + v5) + a3));
        v11 = __asm_addss(v7, __asm_mulss_10(v10, *(int32_t *)(4 * (v8 + v4) + a2)));
        v7 = v11;
        v8 = v9 & 0xffff;
        while ((int16_t)v9 < 4) {
            // 0x18001dc73
            v9 = v8 + 1;
            v10 = __asm_movss(*(int32_t *)(4 * (4 * v8 + v5) + a3));
            v11 = __asm_addss(v7, __asm_mulss_10(v10, *(int32_t *)(4 * (v8 + v4) + a2)));
            v7 = v11;
            v8 = v9 & 0xffff;
        }
        // 0x18001dc98
        v12 = v5 + 1;
        *v6 = (int32_t)__asm_movss_8(v11);
        v5 = v12 & 0xffff;
    }
    int64_t v13 = v3 + 1; // 0x18001dca8
    v3 = v13 & 0xffff;
    while ((int16_t)v13 < 4) {
        // 0x18001dc50
        v4 = 4 * v3;
        v5 = 0;
        v6 = (int32_t *)(4 * (v5 + v4) + v2);
        v7 = __asm_movss(*v6);
        v8 = 0;
        v9 = v8 + 1;
        v10 = __asm_movss(*(int32_t *)(4 * (4 * v8 + v5) + a3));
        v11 = __asm_addss(v7, __asm_mulss_10(v10, *(int32_t *)(4 * (v8 + v4) + a2)));
        v7 = v11;
        v8 = v9 & 0xffff;
        while ((int16_t)v9 < 4) {
            // 0x18001dc73
            v9 = v8 + 1;
            v10 = __asm_movss(*(int32_t *)(4 * (4 * v8 + v5) + a3));
            v11 = __asm_addss(v7, __asm_mulss_10(v10, *(int32_t *)(4 * (v8 + v4) + a2)));
            v7 = v11;
            v8 = v9 & 0xffff;
        }
        // 0x18001dc98
        v12 = v5 + 1;
        *v6 = (int32_t)__asm_movss_8(v11);
        v5 = v12 & 0xffff;
        while ((int16_t)v12 < 4) {
            // 0x18001dc60
            v6 = (int32_t *)(4 * (v5 + v4) + v2);
            v7 = __asm_movss(*v6);
            v8 = 0;
            v9 = v8 + 1;
            v10 = __asm_movss(*(int32_t *)(4 * (4 * v8 + v5) + a3));
            v11 = __asm_addss(v7, __asm_mulss_10(v10, *(int32_t *)(4 * (v8 + v4) + a2)));
            v7 = v11;
            v8 = v9 & 0xffff;
            while ((int16_t)v9 < 4) {
                // 0x18001dc73
                v9 = v8 + 1;
                v10 = __asm_movss(*(int32_t *)(4 * (4 * v8 + v5) + a3));
                v11 = __asm_addss(v7, __asm_mulss_10(v10, *(int32_t *)(4 * (v8 + v4) + a2)));
                v7 = v11;
                v8 = v9 & 0xffff;
            }
            // 0x18001dc98
            v12 = v5 + 1;
            *v6 = (int32_t)__asm_movss_8(v11);
            v5 = v12 & 0xffff;
        }
        // 0x18001dca8
        v13 = v3 + 1;
        v3 = v13 & 0xffff;
    }
    int128_t v14 = __asm_movaps(0); // 0x18001dcb1
    int128_t v15 = __asm_movaps(0); // 0x18001dcb5
    int64_t v16; // 0x18001dbf0
    __asm_movups_4(*(int128_t *)&v16, v14);
    int128_t v17 = __asm_movaps(0); // 0x18001dcbe
    __asm_movups_4(*(int128_t *)(a1 + 16), v15);
    int128_t v18 = __asm_movaps(0); // 0x18001dcc8
    __asm_movups_4(*(int128_t *)(a1 + 32), v17);
    __asm_movups_4(*(int128_t *)(a1 + 48), v18);
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18001dd00 - 0x18001de82
int64_t function_18001dd00(int64_t a1, int64_t a2) {
    int32_t * v1 = (int32_t *)(a1 + 4); // 0x18001dd00
    int128_t v2 = __asm_movss(*v1); // 0x18001dd00
    int32_t * v3 = (int32_t *)(a1 + 8); // 0x18001dd05
    int128_t v4 = __asm_movss(*v3); // 0x18001dd05
    int128_t v5 = __asm_addss(__asm_movaps(v2), v2); // 0x18001dd0d
    int128_t v6 = __asm_movss(0x3f800000); // 0x18001dd11
    int128_t v7 = __asm_movaps(v6); // 0x18001dd19
    int128_t v8 = __asm_mulss(v5, v2); // 0x18001dd1c
    int128_t v9 = __asm_addss(__asm_movaps(v4), v4); // 0x18001dd23
    int64_t v10 = __asm_movss_8(__asm_subss_11(__asm_subss_11(v7, v8), __asm_mulss(v9, v4))); // 0x18001dd33
    *(int32_t *)a2 = (int32_t)v10;
    int32_t * v11 = (int32_t *)(a1 + 12); // 0x18001dd37
    int128_t v12 = __asm_movss(*v11); // 0x18001dd37
    int64_t v13; // 0x18001dd00
    int128_t v14 = __asm_movss(*(int32_t *)&v13); // 0x18001dd3c
    int128_t v15 = __asm_addss(v12, v12); // 0x18001dd40
    int128_t v16 = __asm_addss(v14, v14); // 0x18001dd44
    int128_t v17 = __asm_mulss_10(v15, *v3); // 0x18001dd48
    int128_t v18 = __asm_mulss_10(v16, *v1); // 0x18001dd4d
    *(int32_t *)(a2 + 16) = (int32_t)__asm_movss_8(__asm_addss(v18, v17));
    int128_t v19 = __asm_movss(*(int32_t *)&v13); // 0x18001dd5b
    int128_t v20 = __asm_movss(*v11); // 0x18001dd5f
    int128_t v21 = __asm_addss(v19, v19); // 0x18001dd64
    int128_t v22 = __asm_addss(v20, v20); // 0x18001dd68
    int128_t v23 = __asm_mulss_10(v21, *v3); // 0x18001dd6c
    int128_t v24 = __asm_mulss_10(v22, *v1); // 0x18001dd71
    *(int32_t *)(a2 + 32) = (int32_t)__asm_movss_8(__asm_subss_11(v23, v24));
    int128_t v25 = __asm_movaps(v6); // 0x18001dd7f
    int128_t v26 = __asm_movss(*(int32_t *)&v13); // 0x18001dd82
    int128_t v27 = __asm_movss(*v11); // 0x18001dd86
    int128_t v28 = __asm_addss(v26, v26); // 0x18001dd8b
    int128_t v29 = __asm_addss(v27, v27); // 0x18001dd8f
    int128_t v30 = __asm_mulss_10(v28, *v1); // 0x18001dd93
    int128_t v31 = __asm_mulss_10(v29, *v3); // 0x18001dd98
    *(int32_t *)(a2 + 4) = (int32_t)__asm_movss_8(__asm_subss_11(v30, v31));
    int128_t v32 = __asm_movss(*(int32_t *)&v13); // 0x18001dda6
    int128_t v33 = __asm_movss(*v3); // 0x18001ddaa
    int128_t v34 = __asm_mulss(__asm_addss(__asm_movaps(v32), v32), v32); // 0x18001ddb6
    int128_t v35 = __asm_addss(__asm_movaps(v33), v33); // 0x18001ddbd
    int64_t v36 = __asm_movss_8(__asm_subss_11(__asm_subss_11(v25, v34), __asm_mulss(v35, v33))); // 0x18001ddcd
    *(int32_t *)(a2 + 20) = (int32_t)v36;
    int128_t v37 = __asm_movss(*v1); // 0x18001ddd2
    int128_t v38 = __asm_movss(*v11); // 0x18001ddd7
    int128_t v39 = __asm_addss(v37, v37); // 0x18001dddc
    int128_t v40 = __asm_addss(v38, v38); // 0x18001dde0
    int128_t v41 = __asm_mulss_10(v39, *v3); // 0x18001dde4
    int128_t v42 = __asm_mulss_10(v40, *(int32_t *)&v13); // 0x18001dde9
    *(int32_t *)(a2 + 36) = (int32_t)__asm_movss_8(__asm_addss(v42, v41));
    int128_t v43 = __asm_movss(*v11); // 0x18001ddf6
    int128_t v44 = __asm_movss(*(int32_t *)&v13); // 0x18001ddfb
    int128_t v45 = __asm_addss(v43, v43); // 0x18001ddff
    int128_t v46 = __asm_addss(v44, v44); // 0x18001de03
    int128_t v47 = __asm_mulss_10(v45, *v1); // 0x18001de07
    int128_t v48 = __asm_mulss_10(v46, *v3); // 0x18001de0c
    *(int32_t *)(a2 + 8) = (int32_t)__asm_movss_8(__asm_addss(v48, v47));
    int128_t v49 = __asm_movss(*v11); // 0x18001de1a
    int128_t v50 = __asm_movss(*v1); // 0x18001de1f
    int128_t v51 = __asm_addss(v49, v49); // 0x18001de24
    int128_t v52 = __asm_addss(v50, v50); // 0x18001de28
    int128_t v53 = __asm_mulss_10(v51, *(int32_t *)&v13); // 0x18001de2c
    int128_t v54 = __asm_mulss_10(v52, *v3); // 0x18001de30
    *(int32_t *)(a2 + 24) = (int32_t)__asm_movss_8(__asm_subss_11(v54, v53));
    int128_t v55 = __asm_movss(*(int32_t *)&v13); // 0x18001de3e
    int128_t v56 = __asm_movss(*v1); // 0x18001de42
    int128_t v57 = __asm_mulss(__asm_addss(__asm_movaps(v55), v55), v55); // 0x18001de4e
    int128_t v58 = __asm_addss(__asm_movaps(v56), v56); // 0x18001de55
    int128_t v59 = __asm_subss_11(v6, v57); // 0x18001de59
    int128_t v60 = __asm_mulss(v58, v56); // 0x18001de5f
    *(int32_t *)(a2 + 12) = 0;
    *(int32_t *)(a2 + 28) = 0;
    *(int64_t *)(a2 + 44) = 0;
    int128_t v61 = __asm_subss_11(v59, v60); // 0x18001de6d
    *(int64_t *)(a2 + 52) = 0;
    *(int32_t *)(a2 + 60) = 0x3f800000;
    *(int32_t *)(a2 + 40) = (int32_t)__asm_movss_8(v61);
    return 0;
}

// Address range: 0x18001de90 - 0x18001df22
int128_t function_18001de90(uint64_t a1) {
    uint64_t v1 = a1 / 0x8000; // 0x18001de90
    int64_t v2 = v1 & 1; // 0x18001de97
    int64_t v3 = a1 & 1023; // 0x18001de9a
    uint32_t v4 = (int32_t)a1 / 1024 & 31; // 0x18001dea3
    int64_t v5 = v4; // 0x18001dea3
    int128_t result; // 0x18001dee7
    if (v4 != 0) {
        // 0x18001deee
        if (v4 != 31) {
            // 0x18001ded0
            result = __asm_movss(0x2000 * (0x40000 * (int32_t)v2 | (int32_t)v3) | 0x800000 * (int32_t)v5 + 0x38000000);
            return result;
        }
        int32_t v6 = v3; // 0x18001def3
        int32_t v7 = v2;
        if (v6 != 0) {
            // 0x18001df0a
            return __asm_movss(0x2000 * (0x40000 * v7 | v6) | 0x7f800000);
        }
        // 0x18001def7
        return __asm_movss(0x80000000 * v7 | 0x7f800000);
    }
    // 0x18001dea8
    if (v3 == 0) {
        // 0x18001deac
        return __asm_movss(0x80000000 * (int32_t)v1);
    }
    int64_t v8 = v3;
    int64_t v9 = v5;
    int64_t v10 = 2 * v8; // 0x18001dec0
    int64_t v11 = v9 + 0xffffffff & 0xffffffff; // 0x18001dec8
    while ((v8 & 512) == 0) {
        // 0x18001dec0
        v8 = v10 & 0xfffffffe;
        v9 = v11;
        v10 = 2 * v8;
        v11 = v9 + 0xffffffff & 0xffffffff;
    }
    int64_t v12 = v10 & 0xfffffbfe;
    result = __asm_movss(0x2000 * (0x40000 * (int32_t)v2 | (int32_t)v12) | 0x800000 * (int32_t)v9 + 0x38000000);
    return result;
}

// Address range: 0x18001df30 - 0x18001dfef
int64_t function_18001df30(void) {
    // 0x18001df30
    int64_t lpMultiByteStr; // bp-296, 0x18001df30
    memset(&lpMultiByteStr, 0, 260);
    int64_t lpWideCharStr; // 0x18001df30
    WideCharToMultiByte(0xfde9, 0, (int16_t *)lpWideCharStr, -1, (char *)&lpMultiByteStr, 259, NULL, NULL);
    int64_t v1 = function_1800229e0(&lpMultiByteStr); // 0x18001dfa3
    if (v1 != 0) {
        // 0x18001dfb0
        function_18001dff0();
        function_180022720(v1);
    }
    // 0x18001dfca
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18001dff0 - 0x18001e40a
int64_t function_18001dff0(void) {
    // 0x18001dff0
    int64_t v1; // 0x18001dff0
    if (v1 == 0 || v1 == 0 || v1 == 0) {
        // 0x18001e3e0
        __security_check_cookie(g17);
        return &g47;
    }
    // 0x18001e051
    if ((int32_t)function_180022880(v1) == 0) {
        // 0x18001e06d
        int64_t v2; // bp-1128, 0x18001dff0
        memset(&v2, 0, 520);
    }
    // 0x18001e3e0
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x18001e410 - 0x18001e548
int64_t function_18001e410(void) {
    // 0x18001e410
    int64_t v1; // 0x18001e410
    int64_t v2 = v1;
    if (v2 == 0 || (int32_t)function_1800228a0(v2) != 0) {
        // 0x18001e42d
        return 0;
    }
    if (v1 != 0) {
        int32_t v3 = v1; // 0x18001e457
        if (v3 != 0) {
            int64_t v4 = 1; // 0x18001e45b
            while (0x100000000 * v4 >> 32 < v1) {
                // 0x18001e46d
                function_180022920(v2);
                if (v3 == (int32_t)v4) {
                    // break -> 0x18001e475
                    break;
                }
                v4 = (v4 & 0xffffffff) + 1;
            }
        }
    }
    // 0x18001e475
    int32_t v5; // 0x18001e410
    if (v5 == 0) {
        // 0x18001e42d
        return 0;
    }
    int64_t v6 = v5; // 0x18001e475
    if ((int32_t)function_1800229f0(v2, v2, v6) != 0) {
        // 0x18001e4df
        function_180022770(v2);
        // 0x18001e42d
        return 0;
    }
    int64_t v7 = v6 & 0xffffffff; // 0x18001e4e9
    int64_t v8 = function_180023684(v7, v2, v6, v1); // 0x18001e4ee
    int64_t result; // 0x18001e410
    if (v8 != 0) {
        // 0x18001e507
        memset((int64_t *)v8, 0, v5);
        function_1800230a0(v2, v8, v7);
        function_180022770(v2);
        result = v8;
    } else {
        // 0x18001e4fb
        function_180022770(v2);
        result = 0;
    }
    // 0x18001e42d
    return result;
}

// Address range: 0x18001e550 - 0x18001e745
int64_t function_18001e550(int64_t a1, int32_t * a2, int64_t a3, int32_t * a4) {
    int64_t v1 = (int64_t)a2;
    int64_t v2; // 0x18001e550
    int64_t v3; // 0x18001e550
    int64_t v4; // bp-152, 0x18001e550
    if ((int32_t)v1 == 0) {
        // 0x18001e590
        v3 = 1;
        v2 = &v4;
    } else {
        // 0x18001e58b
        *a2 = 0;
        v3 = v1 & 0xffffffff;
        v2 = a1;
    }
    int64_t v5 = a3; // bp-136, 0x18001e59d
    int64_t * mem = malloc(0); // 0x18001e5ce
    if (mem == NULL) {
        // 0x18001e720
        return 0xfffffffc;
    }
    int64_t v6 = (int64_t)a4;
    int64_t v7 = (int64_t)mem; // 0x18001e5ce
    *mem = (int64_t)&v5;
    *(int64_t *)(v7 + 64) = 0;
    *(int32_t *)(v7 + 8) = 0x3f34;
    int64_t v8 = function_18001e810(&v5, 15); // 0x18001e607
    int64_t v9 = v3; // 0x18001e610
    if ((int32_t)v8 != 0) {
        // 0x18001e720
        return v8 & 0xffffffff;
    }
    int64_t v10 = v6 & 0xffffffff; // 0x18001e610
    int32_t v11 = 0;
    int32_t v12 = 0;
    int32_t v13 = v11 != 0 ? v11 : (int32_t)v9;
    v9 = v11 != 0 ? v9 : 0;
    int32_t v14 = v12 != 0 ? v12 : (int32_t)v10;
    v10 = v12 != 0 ? v10 : 0;
    int64_t v15 = function_18001eb30(&v5, 0, 0x1bf0, v6); // 0x18001e66c
    int32_t v16 = v15;
    while (v16 == 0) {
        // 0x18001e640
        v11 = v13;
        v12 = v14;
        v13 = v11 != 0 ? v11 : (int32_t)v9;
        v9 = v11 != 0 ? v9 : 0;
        v14 = v12 != 0 ? v12 : (int32_t)v10;
        v10 = v12 != 0 ? v10 : 0;
        v15 = function_18001eb30(&v5, 0, 0x1bf0, v6);
        v16 = v15;
    }
    // 0x18001e67c
    *a4 = (int32_t)v6 - (int32_t)v10 - v14;
    int64_t v17; // 0x18001e550
    if (v2 == (int64_t)&v4) {
        // 0x18001e699
        v17 = v9;
        int32_t v18; // 0x18001e550
        if (v18 != 0) {
            // 0x18001e69f
            v17 = v16 == -5 ? 1 : v9 & 0xffffffff;
        }
    } else {
        // 0x18001e690
        v17 = v9;
    }
    // 0x18001e6b9
    if (v16 == 1) {
        // 0x18001e720
        return 0;
    }
    if (v16 == 2) {
        // 0x18001e720
        return v15 + 0xfffffffb & 0xffffffff;
    }
    if (v16 == -5) {
        // 0x18001e70f
        if (v13 != -(int32_t)v17) {
            // 0x18001e720
            return v15 + 2 & 0xffffffff;
        }
    }
    // 0x18001e720
    return v15 & 0xffffffff;
}

// Address range: 0x18001e750 - 0x18001e803
int64_t function_18001e750(int64_t a1) {
    if (a1 == 0 || *(int64_t *)(a1 + 48) == 0 || *(int64_t *)(a1 + 56) == 0) {
        // 0x18001e7fd
        return 0xfffffffe;
    }
    int64_t v1 = *(int64_t *)(a1 + 40); // 0x18001e76f
    if (v1 == 0 || *(int64_t *)v1 != a1) {
        // 0x18001e7fd
        return 0xfffffffe;
    }
    int64_t v2 = v1 + 8; // 0x18001e781
    if (*(int32_t *)v2 >= 0x3f54) {
        // 0x18001e7fd
        return 0xfffffffe;
    }
    // 0x18001e78e
    *(int32_t *)(v1 + 36) = 0;
    *(int32_t *)(a1 + 28) = 0;
    *(int32_t *)(a1 + 12) = 0;
    *(int64_t *)(a1 + 32) = 0;
    int32_t v3 = *(int32_t *)(v1 + 16); // 0x18001e7a1
    if (v3 != 0) {
        // 0x18001e7a8
        *(int32_t *)(a1 + 76) = v3 & 1;
    }
    int64_t v4 = v1 + 1360; // 0x18001e7ae
    *(int64_t *)v2 = 0x3f34;
    *(int64_t *)(v1 + 136) = v4;
    *(int64_t *)(v1 + 104) = v4;
    *(int64_t *)(v1 + 96) = v4;
    *(int32_t *)(v1 + 20) = 0;
    *(int32_t *)(v1 + 24) = -1;
    *(int32_t *)(v1 + 28) = 0x8000;
    *(int64_t *)(v1 + 40) = 0;
    *(int64_t *)(v1 + 72) = 0;
    *(int32_t *)(v1 + 0x1be0) = 1;
    *(int32_t *)(v1 + 0x1be4) = -1;
    return 0;
}

// Address range: 0x18001e810 - 0x18001e935
int64_t function_18001e810(int64_t * a1, int64_t a2) {
    // 0x18001e810
    if (a1 == NULL) {
        // 0x18001e8ff
        return 0xfffffffe;
    }
    int64_t v1 = (int64_t)a1;
    int64_t * v2 = (int64_t *)(v1 + 48); // 0x18001e82d
    if (*v2 == 0) {
        // 0x18001e8ff
        return 0xfffffffe;
    }
    int64_t * v3 = (int64_t *)(v1 + 56); // 0x18001e838
    if (*v3 == 0) {
        // 0x18001e8ff
        return 0xfffffffe;
    }
    int64_t * v4 = (int64_t *)(v1 + 40); // 0x18001e845
    int64_t v5 = *v4; // 0x18001e845
    if (v5 == 0 || *(int64_t *)v5 != v1 || *(int32_t *)(v5 + 8) >= 0x3f54) {
        // 0x18001e8ff
        return 0xfffffffe;
    }
    int32_t v6 = a2; // 0x18001e879
    int32_t v7; // 0x18001e810
    int64_t v8; // 0x18001e810
    if (v6 >= 0) {
        // 0x18001e88d
        v7 = (v6 >> 4) + 5;
        v8 = (v6 > 47 ? 0xffffffff : 15) & a2;
    } else {
        // 0x18001e87d
        if (v6 < -15) {
            // 0x18001e8ff
            return 0xfffffffe;
        }
        // 0x18001e886
        v7 = 0;
        v8 = -a2 & 0xffffffff;
    }
    int64_t v9 = v8;
    if (v9 != 0 && (v9 & 0xfffffff8) != 8) {
        // 0x18001e8ff
        return 0xfffffffe;
    }
    int64_t * v10 = (int64_t *)(v5 + 64); // 0x18001e8a9
    int32_t * v11; // 0x18001e810
    int32_t v12; // 0x18001e810
    if (*v10 == 0) {
        // 0x18001e8a9
        v11 = (int32_t *)(v5 + 48);
        v12 = v9;
    } else {
        int32_t * v13 = (int32_t *)(v5 + 48);
        int32_t v14 = *v13; // 0x18001e8b2
        int32_t v15 = v9;
        v11 = v13;
        v12 = v14;
        if (v14 != v15) {
            // 0x18001e8b7
            *v10 = 0;
            v11 = v13;
            v12 = v15;
        }
    }
    // 0x18001e8c2
    *(int32_t *)(v5 + 16) = v7;
    *v11 = v12;
    if (*v2 == 0 || *v3 == 0) {
        // 0x18001e8ff
        return 0xfffffffe;
    }
    int64_t v16 = *v4; // 0x18001e8d4
    if (v16 == 0 || *(int64_t *)v16 != v1) {
        // 0x18001e8ff
        return 0xfffffffe;
    }
    int64_t result = 0xfffffffe; // 0x18001e8ed
    if (*(int32_t *)(v16 + 8) < 0x3f54) {
        // 0x18001e8ef
        *(int64_t *)(v16 + 52) = 0;
        *(int32_t *)(v16 + 60) = 0;
        result = function_18001e750(v1);
    }
    // 0x18001e8ff
    return result;
}

// Address range: 0x18001e940 - 0x18001ea2b
int64_t function_18001e940(int64_t a1, int64_t a2, char * a3, int64_t a4) {
    // 0x18001e940
    if (a3 == NULL) {
        // 0x18001ea1b
        return 0xfffffffa;
    }
    int64_t v1; // 0x18001e940
    if ((char)v1 != 49) {
        // 0x18001ea1b
        return 0xfffffffa;
    }
    if ((int32_t)a4 != 88) {
        // 0x18001ea1b
        return 0xfffffffa;
    }
    if (a1 == 0) {
        // 0x18001e971
        return a1 + 0xfffffffe & 0xffffffff;
    }
    // 0x18001e97f
    *(int64_t *)(a1 + 32) = 0;
    int64_t * v2 = (int64_t *)(a1 + 48); // 0x18001e98f
    int64_t v3; // 0x18001e940
    if (*v2 == 0) {
        // 0x18001e995
        *(int64_t *)(a1 + 64) = 0;
        *v2 = 0x180020360;
        v3 = 0x180020360;
    }
    int64_t * v4 = (int64_t *)(a1 + 56); // 0x18001e9a4
    int64_t v5; // 0x18001e940
    if (*v4 != 0) {
        // 0x18001e9b5
        v5 = v3;
        if (v3 == 0) {
            // 0x18001e9d2
            return v3 + 0xfffffffc & 0xffffffff;
        }
    } else {
        // 0x18001e9b5
        *v4 = 0x180020370;
        v5 = 0x180020370;
    }
    int64_t * v6 = (int64_t *)(a1 + 40); // 0x18001e9e7
    *v6 = v5;
    *(int64_t *)v5 = a1;
    *(int64_t *)(v5 + 64) = 0;
    *(int32_t *)(v5 + 8) = 0x3f34;
    int64_t v7 = function_18001e810((int64_t *)a1, a2 & 0xffffffff); // 0x18001e9fe
    if ((int32_t)v7 != 0) {
        // 0x18001ea09
        *v6 = 0;
    }
    // 0x18001e9d2
    return v7 & 0xffffffff & 0xffffffff;
}

// Address range: 0x18001ea30 - 0x18001eb2e
int64_t function_18001ea30(int64_t a1, int64_t a2, uint32_t a3) {
    int64_t v1 = *(int64_t *)(a1 + 40); // 0x18001ea44
    int64_t * v2 = (int64_t *)(v1 + 64); // 0x18001ea56
    if (*v2 == 0) {
        // 0x18001ea5d
        *v2 = a1;
        if (a1 == 0) {
            // 0x18001eb19
            return 1;
        }
    }
    int32_t * v3 = (int32_t *)(v1 + 52); // 0x18001ea86
    int32_t v4 = *v3; // 0x18001ea86
    int32_t v5 = v4; // 0x18001ea8a
    if (v4 == 0) {
        // 0x18001ea8c
        *v3 = 1 << (*(int32_t *)(v1 + 48) & 31);
        *(int64_t *)(v1 + 56) = 0;
        v5 = *v3;
    }
    uint32_t v6 = v5; // 0x18001ea98
    if (v6 <= a3) {
        // 0x18001ea9f
        memcpy((int64_t *)*v2, (int64_t *)(a2 - (int64_t)v6), v6);
        *(int32_t *)(v1 + 60) = 0;
        // 0x18001eb0f
        *(int32_t *)(v1 + 56) = *v3;
        // 0x18001eb19
        return 0;
    }
    int32_t * v7 = (int32_t *)(v1 + 60); // 0x18001eaba
    uint32_t v8 = *v7; // 0x18001eaba
    uint32_t v9 = v6 - v8; // 0x18001eaba
    int32_t v10 = v9 > a3 ? a3 : v9; // 0x18001eac5
    int64_t v11 = *v2; // 0x18001eac8
    memcpy((int64_t *)(v11 + (int64_t)v8), (int64_t *)(a2 - (int64_t)a3), v10);
    uint32_t v12 = a3 - v10; // 0x18001ead7
    if (v12 != 0) {
        // 0x18001eadb
        memcpy((int64_t *)*v2, (int64_t *)(a2 - (int64_t)v12), v12);
        *v7 = v12;
        // 0x18001eb0f
        *(int32_t *)(v1 + 56) = *v3;
        // 0x18001eb19
        return 0;
    }
    int32_t v13 = *v7 + v10; // 0x18001eaf5
    *v7 = v13;
    *v7 = v13 == *v3 ? 0 : v13;
    uint32_t v14 = *(int32_t *)(v1 + 56); // 0x18001eb05
    if (v14 >= *v3) {
        // 0x18001eb19
        return 0;
    }
    // 0x18001eb0f
    *(int32_t *)(v1 + 56) = v14 + v10;
    // 0x18001eb19
    return 0;
}

// Address range: 0x18001eb30 - 0x180020273
int64_t function_18001eb30(int64_t * a1, int32_t a2, int64_t a3, int64_t a4) {
    // 0x18001eb30
    if (a1 == NULL) {
        // 0x18001ec18
        return 0xfffffffe;
    }
    int64_t v1 = (int64_t)a1;
    if (*(int64_t *)(v1 + 48) == 0 || *(int64_t *)(v1 + 56) == 0) {
        // 0x18001ec18
        return 0xfffffffe;
    }
    int64_t v2 = *(int64_t *)(v1 + 40); // 0x18001eb69
    if (v2 == 0 || *(int64_t *)v2 != v1) {
        // 0x18001ec18
        return 0xfffffffe;
    }
    int32_t * v3 = (int32_t *)(v2 + 8); // 0x18001eb80
    int32_t v4 = *v3; // 0x18001eb80
    if (v4 >= 0x3f54 || *(int64_t *)(v1 + 16) == 0) {
        // 0x18001ec18
        return 0xfffffffe;
    }
    int32_t v5 = v4; // 0x18001ebce
    if (v4 == 0x3f3f) {
        // 0x18001ebd0
        *v3 = 0x3f40;
        v5 = 0x3f40;
    }
    // 0x18001ec18
    return v5 < 0x3f53 ? 0x180000000 : 0xfffffffe;
}

// Address range: 0x1800202f0 - 0x18002035f
int64_t function_1800202f0(int64_t a1) {
    if (a1 == 0 || *(int64_t *)(a1 + 48) == 0 || *(int64_t *)(a1 + 56) == 0) {
        // 0x180020354
        return 0xfffffffe;
    }
    int64_t * v1 = (int64_t *)(a1 + 40); // 0x18002030e
    int64_t v2 = *v1; // 0x18002030e
    if (v2 == 0 || *(int64_t *)v2 != a1 || *(int32_t *)(v2 + 8) >= 0x3f54) {
        // 0x180020354
        return 0xfffffffe;
    }
    // 0x180020329
    *v1 = 0;
    return 0;
}

// Address range: 0x180020360 - 0x18002036d
int64_t * function_180020360(int32_t size) {
    // 0x180020360
    int64_t v1; // 0x180020360
    return malloc((int32_t)((0x100000000 * v1 >> 32) * (0x100000000 * v1 >> 32)));
}

// Address range: 0x180020370 - 0x18002037a
void function_180020370(int64_t * ptr) {
    // 0x180020370
    int64_t v1; // 0x180020370
    free((int64_t *)v1);
}

// Address range: 0x180020380 - 0x180020656
int64_t function_180020380(uint32_t a1, int64_t a2, uint64_t a3) {
    int64_t v1 = a1 / 0x10000; // 0x180020386
    int64_t v2 = a1 & 0xffff; // 0x18002038a
    if (a3 == 1) {
        int64_t v3 = (a2 & 255) + v2; // 0x180020396
        int64_t v4 = (int32_t)v3 < 0xfff1 ? v3 : v3 + 0xffff000f; // 0x1800203a4
        int64_t v5 = v4 + v1; // 0x1800203a7
        int64_t v6 = 0x10000 * v5;
        return (((int32_t)v5 < 0xfff1 ? v6 : v6 + 0xf0000) | v4) & 0xffffffff;
    }
    if (a2 == 0) {
        // 0x1800203c7
        return a2 + 1 & 0xffffffff;
    }
    if (a3 < 16) {
        int64_t v7 = a3; // 0x1800203d4
        int64_t v8 = v1; // 0x1800203d4
        int64_t v9 = a2; // 0x1800203d4
        int64_t v10; // 0x180020380
        int64_t v11; // 0x180020380
        int64_t v12; // 0x180020405
        if (a3 == 0) {
            // 0x1800203f3
            v10 = v1;
            v11 = v2;
            v12 = (int32_t)v11 < 0xfff1 ? v11 : v11 + 0xffff000f;
            return (0x10000 * (15 * 0x80078071 * v10 / 0x800000000000 + v10) | v12) & 0xffffffff;
        }
        int64_t v13 = v2 + (int64_t)*(char *)v9; // 0x1800203e8
        int64_t v14 = v13 & 0xffffffff; // 0x1800203e8
        v8 = v13 + v8 & 0xffffffff;
        v7--;
        v9++;
        while (v7 != 0) {
            // 0x1800203e0
            v13 = v14 + (int64_t)*(char *)v9;
            v14 = v13 & 0xffffffff;
            v8 = v13 + v8 & 0xffffffff;
            v7--;
            v9++;
        }
        // 0x1800203f3
        v10 = v8;
        v11 = v14;
        v12 = (int32_t)v11 < 0xfff1 ? v11 : v11 + 0xffff000f;
        return (0x10000 * (15 * 0x80078071 * v10 / 0x800000000000 + v10) | v12) & 0xffffffff;
    }
    int64_t v15 = v2; // 0x180020423
    int64_t v16 = v1; // 0x180020423
    int64_t v17 = a2; // 0x180020423
    if (a3 >= 0x15b0) {
        int64_t v18 = 0; // 0x18002044d
        int32_t v19 = 347; // 0x180020455
        int64_t v20 = v2 + (int64_t)*(char *)a2; // 0x180020464
        int64_t v21 = v20 + (int64_t)*(char *)(a2 + 1); // 0x18002046e
        int64_t v22 = v21 + (int64_t)*(char *)(a2 + 2); // 0x180020478
        int64_t v23 = v22 + (int64_t)*(char *)(a2 + 3); // 0x180020482
        int64_t v24 = v23 + (int64_t)*(char *)(a2 + 4); // 0x18002048c
        int64_t v25 = v24 + (int64_t)*(char *)(a2 + 5); // 0x180020496
        int64_t v26 = v25 + (int64_t)*(char *)(a2 + 6); // 0x1800204a0
        int64_t v27 = v26 + (int64_t)*(char *)(a2 + 7); // 0x1800204aa
        int64_t v28 = v27 + (int64_t)*(char *)(a2 + 8); // 0x1800204b4
        int64_t v29 = v28 + (int64_t)*(char *)(a2 + 9); // 0x1800204be
        int64_t v30 = v29 + (int64_t)*(char *)(a2 + 10); // 0x1800204c8
        int64_t v31 = v30 + (int64_t)*(char *)(a2 + 11); // 0x1800204d2
        int64_t v32 = v31 + (int64_t)*(char *)(a2 + 12); // 0x1800204dc
        int64_t v33 = v32 + (int64_t)*(char *)(a2 + 13); // 0x1800204e6
        int64_t v34 = v33 + (int64_t)*(char *)(a2 + 14); // 0x1800204f0
        v17 = a2 + 16;
        int64_t v35 = v34 + (int64_t)*(char *)(a2 + 15); // 0x1800204fe
        int64_t v36 = v35 & 0xffffffff; // 0x1800204fe
        int64_t v37 = v20 + v1 + v21 + v22 + v23 + v24 + v25 + v26 + v27 + v28 + v29 + v30 + v31 + v32 + v33 + v34 + v35; // 0x180020500
        int64_t v38 = v37 & 0xffffffff; // 0x180020500
        v19--;
        int64_t v39 = v17; // 0x180020506
        while (v19 != 0) {
            // 0x180020460
            v20 = v36 + (int64_t)*(char *)v39;
            v21 = v20 + (int64_t)*(char *)(v39 + 1);
            v22 = v21 + (int64_t)*(char *)(v39 + 2);
            v23 = v22 + (int64_t)*(char *)(v39 + 3);
            v24 = v23 + (int64_t)*(char *)(v39 + 4);
            v25 = v24 + (int64_t)*(char *)(v39 + 5);
            v26 = v25 + (int64_t)*(char *)(v39 + 6);
            v27 = v26 + (int64_t)*(char *)(v39 + 7);
            v28 = v27 + (int64_t)*(char *)(v39 + 8);
            v29 = v28 + (int64_t)*(char *)(v39 + 9);
            v30 = v29 + (int64_t)*(char *)(v39 + 10);
            v31 = v30 + (int64_t)*(char *)(v39 + 11);
            v32 = v31 + (int64_t)*(char *)(v39 + 12);
            v33 = v32 + (int64_t)*(char *)(v39 + 13);
            v34 = v33 + (int64_t)*(char *)(v39 + 14);
            v17 = v39 + 16;
            v35 = v34 + (int64_t)*(char *)(v39 + 15);
            v36 = v35 & 0xffffffff;
            v37 = v20 + v38 + v21 + v22 + v23 + v24 + v25 + v26 + v27 + v28 + v29 + v30 + v31 + v32 + v33 + v34 + v35;
            v38 = v37 & 0xffffffff;
            v19--;
            v39 = v17;
        }
        // 0x18002050c
        v15 = 0xffff000f * 0x80078071 * v36 / 0x800000000000 + v35 & 0xffffffff;
        v16 = 0xffff000f * 0x80078071 * v38 / 0x800000000000 + v37 & 0xffffffff;
        v18--;
        while (v18 != 0) {
            // 0x180020450
            v19 = 347;
            v39 = v17;
            v20 = v15 + (int64_t)*(char *)v39;
            v21 = v20 + (int64_t)*(char *)(v39 + 1);
            v22 = v21 + (int64_t)*(char *)(v39 + 2);
            v23 = v22 + (int64_t)*(char *)(v39 + 3);
            v24 = v23 + (int64_t)*(char *)(v39 + 4);
            v25 = v24 + (int64_t)*(char *)(v39 + 5);
            v26 = v25 + (int64_t)*(char *)(v39 + 6);
            v27 = v26 + (int64_t)*(char *)(v39 + 7);
            v28 = v27 + (int64_t)*(char *)(v39 + 8);
            v29 = v28 + (int64_t)*(char *)(v39 + 9);
            v30 = v29 + (int64_t)*(char *)(v39 + 10);
            v31 = v30 + (int64_t)*(char *)(v39 + 11);
            v32 = v31 + (int64_t)*(char *)(v39 + 12);
            v33 = v32 + (int64_t)*(char *)(v39 + 13);
            v34 = v33 + (int64_t)*(char *)(v39 + 14);
            v17 = v39 + 16;
            v35 = v34 + (int64_t)*(char *)(v39 + 15);
            v36 = v35 & 0xffffffff;
            v37 = v20 + v16 + v21 + v22 + v23 + v24 + v25 + v26 + v27 + v28 + v29 + v30 + v31 + v32 + v33 + v34 + v35;
            v38 = v37 & 0xffffffff;
            v19--;
            v39 = v17;
            while (v19 != 0) {
                // 0x180020460
                v20 = v36 + (int64_t)*(char *)v39;
                v21 = v20 + (int64_t)*(char *)(v39 + 1);
                v22 = v21 + (int64_t)*(char *)(v39 + 2);
                v23 = v22 + (int64_t)*(char *)(v39 + 3);
                v24 = v23 + (int64_t)*(char *)(v39 + 4);
                v25 = v24 + (int64_t)*(char *)(v39 + 5);
                v26 = v25 + (int64_t)*(char *)(v39 + 6);
                v27 = v26 + (int64_t)*(char *)(v39 + 7);
                v28 = v27 + (int64_t)*(char *)(v39 + 8);
                v29 = v28 + (int64_t)*(char *)(v39 + 9);
                v30 = v29 + (int64_t)*(char *)(v39 + 10);
                v31 = v30 + (int64_t)*(char *)(v39 + 11);
                v32 = v31 + (int64_t)*(char *)(v39 + 12);
                v33 = v32 + (int64_t)*(char *)(v39 + 13);
                v34 = v33 + (int64_t)*(char *)(v39 + 14);
                v17 = v39 + 16;
                v35 = v34 + (int64_t)*(char *)(v39 + 15);
                v36 = v35 & 0xffffffff;
                v37 = v20 + v38 + v21 + v22 + v23 + v24 + v25 + v26 + v27 + v28 + v29 + v30 + v31 + v32 + v33 + v34 + v35;
                v38 = v37 & 0xffffffff;
                v19--;
                v39 = v17;
            }
            // 0x18002050c
            v15 = 0xffff000f * 0x80078071 * v36 / 0x800000000000 + v35 & 0xffffffff;
            v16 = 0xffff000f * 0x80078071 * v38 / 0x800000000000 + v37 & 0xffffffff;
            v18--;
        }
    }
    // 0x18002053c
    if (a3 == 0) {
        // 0x18002064b
        return (0x10000 * v16 | v15) & 0xffffffff;
    }
    int64_t v40 = v17; // 0x180020549
    int64_t v41 = v16; // 0x180020549
    int64_t v42 = a3; // 0x180020549
    int64_t v43 = v15; // 0x180020549
    int64_t v44; // 0x180020380
    int64_t v45; // 0x180020380
    if (a3 < 16) {
        goto lab_0x180020612;
    } else {
        int64_t v46 = a3 / 16; // 0x180020552
        int64_t v47 = v46; // 0x18002055d
        int64_t v48 = v15 + (int64_t)*(char *)v17; // 0x180020564
        int64_t v49 = v48 + (int64_t)*(char *)(v17 + 1); // 0x18002056e
        int64_t v50 = v49 + (int64_t)*(char *)(v17 + 2); // 0x180020578
        int64_t v51 = v50 + (int64_t)*(char *)(v17 + 3); // 0x180020582
        int64_t v52 = v51 + (int64_t)*(char *)(v17 + 4); // 0x18002058c
        int64_t v53 = v52 + (int64_t)*(char *)(v17 + 5); // 0x180020596
        int64_t v54 = v53 + (int64_t)*(char *)(v17 + 6); // 0x1800205a0
        int64_t v55 = v54 + (int64_t)*(char *)(v17 + 7); // 0x1800205aa
        int64_t v56 = v55 + (int64_t)*(char *)(v17 + 8); // 0x1800205b4
        int64_t v57 = v56 + (int64_t)*(char *)(v17 + 9); // 0x1800205be
        int64_t v58 = v57 + (int64_t)*(char *)(v17 + 10); // 0x1800205c8
        int64_t v59 = v58 + (int64_t)*(char *)(v17 + 11); // 0x1800205d2
        int64_t v60 = v59 + (int64_t)*(char *)(v17 + 12); // 0x1800205dc
        int64_t v61 = v60 + (int64_t)*(char *)(v17 + 13); // 0x1800205e6
        int64_t v62 = v61 + (int64_t)*(char *)(v17 + 14); // 0x1800205f0
        v40 = v17 + 16;
        int64_t v63 = v62 + (int64_t)*(char *)(v17 + 15); // 0x1800205fe
        v43 = v63 & 0xffffffff;
        v41 = v48 + v16 + v49 + v50 + v51 + v52 + v53 + v54 + v55 + v56 + v57 + v58 + v59 + v60 + v61 + v62 + v63 & 0xffffffff;
        v47--;
        int64_t v64 = v41; // 0x180020607
        int64_t v65 = v40; // 0x180020607
        while (v47 != 0) {
            // 0x180020560
            v48 = v43 + (int64_t)*(char *)v65;
            v49 = v48 + (int64_t)*(char *)(v65 + 1);
            v50 = v49 + (int64_t)*(char *)(v65 + 2);
            v51 = v50 + (int64_t)*(char *)(v65 + 3);
            v52 = v51 + (int64_t)*(char *)(v65 + 4);
            v53 = v52 + (int64_t)*(char *)(v65 + 5);
            v54 = v53 + (int64_t)*(char *)(v65 + 6);
            v55 = v54 + (int64_t)*(char *)(v65 + 7);
            v56 = v55 + (int64_t)*(char *)(v65 + 8);
            v57 = v56 + (int64_t)*(char *)(v65 + 9);
            v58 = v57 + (int64_t)*(char *)(v65 + 10);
            v59 = v58 + (int64_t)*(char *)(v65 + 11);
            v60 = v59 + (int64_t)*(char *)(v65 + 12);
            v61 = v60 + (int64_t)*(char *)(v65 + 13);
            v62 = v61 + (int64_t)*(char *)(v65 + 14);
            v40 = v65 + 16;
            v63 = v62 + (int64_t)*(char *)(v65 + 15);
            v43 = v63 & 0xffffffff;
            v41 = v48 + v64 + v49 + v50 + v51 + v52 + v53 + v54 + v55 + v56 + v57 + v58 + v59 + v60 + v61 + v62 + v63 & 0xffffffff;
            v47--;
            v64 = v41;
            v65 = v40;
        }
        // 0x18002060d
        v42 = -16 * v46 + a3;
        v45 = v43;
        v44 = v41;
        if (v42 == 0) {
            goto lab_0x180020625;
        } else {
            goto lab_0x180020612;
        }
    }
  lab_0x180020612:;
    int64_t v66 = v40; // 0x180020380
    int64_t v67 = v43 + (int64_t)*(char *)v66; // 0x18002061a
    int64_t v68 = v67 & 0xffffffff; // 0x18002061a
    int64_t v69 = v67 + v41 & 0xffffffff; // 0x18002061c
    int64_t v70 = v42 - 1; // 0x18002061f
    int64_t v71 = v70; // 0x180020623
    int64_t v72 = v69; // 0x180020623
    v66++;
    v45 = v68;
    v44 = v69;
    while (v70 != 0) {
        // 0x180020612
        v67 = v68 + (int64_t)*(char *)v66;
        v68 = v67 & 0xffffffff;
        v69 = v67 + v72 & 0xffffffff;
        v70 = v71 - 1;
        v71 = v70;
        v72 = v69;
        v66++;
        v45 = v68;
        v44 = v69;
    }
    goto lab_0x180020625;
  lab_0x180020625:;
    int64_t v73 = v44;
    int64_t v74 = v45;
    int64_t v75 = 0xffff000f * 0x80078071 * v73 / 0x800000000000 + v73 & 0xffffffff;
    int64_t v76 = 0xffff000f * 0x80078071 * v74 / 0x800000000000 + v74 & 0xffffffff;
    return (0x10000 * v75 | v76) & 0xffffffff;
}

// Address range: 0x180020660 - 0x180020b70
// Used cryptographic patterns:
//  - zinflate_distanceStarts (16-bit, little endian)
//  - zinflate_lengthStarts (16-bit, little endian)
int64_t function_180020660(int32_t a1, int64_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6) {
    // 0x180020660
    int64_t v1; // bp-79, 0x180020660
    int64_t v2 = &v1; // 0x18002066b
    int64_t v3 = v2 - 57;
    int64_t v4 = 0; // 0x1800206b5
    int64_t v5; // 0x180020660
    int64_t v6; // 0x180020660
    uint32_t v7; // 0x1800206e7
    while (v4 < 16) {
        int64_t v8 = v4 + 1; // 0x1800206d0
        *(int16_t *)(2 * v4 + v3) = 0;
        v4 = v8 & 0xffffffff;
        if ((int32_t)v8 >= 16) {
            // 0x1800206df
            v7 = (int32_t)a3;
            v5 = a2;
            v6 = a3 & 0xffffffff;
            if (v7 == 0) {
                goto lab_0x180020712;
            } else {
                goto lab_0x180020700;
            }
        }
    }
    // 0x180020b5f
    function_180023f6c();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    __asm_int3();
    return __asm_int3();
  lab_0x180020712:;
    int32_t * v9 = (int32_t *)a5; // 0x180020712
    uint32_t v10 = *v9; // 0x180020712
    int64_t v11 = 13; // 0x18002071a
    int64_t v12 = 15; // 0x18002071a
    goto lab_0x180020720;
  lab_0x180020700:;
    int16_t * v130 = (int16_t *)(2 * (int64_t)*(int16_t *)v5 + v3); // 0x180020707
    *v130 = *v130 + 1;
    int64_t v131 = v6 - 1; // 0x18002070c
    v5 += 2;
    v6 = v131;
    if (v131 != 0) {
        goto lab_0x180020700;
    } else {
        goto lab_0x180020712;
    }
  lab_0x180020720:;
    int64_t v13 = v12;
    int64_t v14 = v13; // 0x18002072d
    if (*(int16_t *)(2 * v13 + v3) != 0) {
        goto lab_0x18002077e;
    } else {
        int64_t v15 = 2 * v11; // 0x18002072f
        if (*(int16_t *)((v15 + 2 & 0x1fffffffe) + v3) != 0) {
            // 0x18002077b
            v14 = v13 + 0xffffffff & 0xffffffff;
            goto lab_0x18002077e;
        } else {
            // 0x18002073a
            if (*(int16_t *)(v15 + v3) != 0) {
                // 0x180020775
                v14 = v13 + 0xfffffffe & 0xffffffff;
                goto lab_0x18002077e;
            } else {
                // 0x180020744
                if (*(int16_t *)((v15 + 0x1fffffffe & 0x1fffffffe) + v3) != 0) {
                    // 0x18002076f
                    v14 = v13 + 0xfffffffd & 0xffffffff;
                    goto lab_0x18002077e;
                } else {
                    // 0x18002074f
                    if (*(int16_t *)((v15 + 0x1fffffffc & 0x1fffffffe) + v3) != 0) {
                        // 0x180020769
                        v14 = v13 + 0xfffffffc & 0xffffffff;
                        goto lab_0x18002077e;
                    } else {
                        int64_t v16 = v13 + 0xfffffffb; // 0x18002075a
                        int64_t v17 = v16 & 0xffffffff; // 0x18002075a
                        v11 = v11 + 0xfffffffb & 0xffffffff;
                        v12 = v17;
                        v14 = v17;
                        if ((int32_t)v16 != 0) {
                            goto lab_0x180020720;
                        } else {
                            goto lab_0x18002077e;
                        }
                    }
                }
            }
        }
    }
  lab_0x18002077e:;
    uint32_t v18 = (int32_t)v14; // 0x18002077e
    if (v18 == 0) {
        // 0x18002078a
        *(int32_t *)v14 = 320;
        *(int64_t *)a4 = v14 + 4;
        *v9 = 1;
        // 0x1800207b1
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v19 = 1; // 0x1800207e0
    int64_t v20; // 0x180020660
    int64_t v21; // 0x180020660
    if (v18 < 2) {
        goto lab_0x1800207f8;
    } else {
        // 0x1800207e2
        int64_t v22; // bp-134, 0x180020660
        v21 = &v22;
        v20 = 1;
        goto lab_0x1800207e6;
    }
  lab_0x1800207f8:;
    int64_t v23 = v10 > v18 ? v14 : (int64_t)v10;
    int64_t v24 = v19;
    int64_t v25 = (int32_t)v23 < (int32_t)v24 ? v24 : v23 & 0xffffffff;
    uint32_t v26 = (int32_t)v25; // 0x180020807
    int64_t v27 = 1; // 0x18002080b
    int32_t v28 = 1; // 0x18002080b
    goto lab_0x180020810;
  lab_0x180020810:;
    int32_t v29 = 2 * v28 - (int32_t)*(int16_t *)(2 * v27 + v3); // 0x18002081a
    if (v29 < 0) {
        // 0x1800207b1
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v30 = v27 + 1; // 0x180020823
    v27 = v30 & 0xffffffff;
    v28 = v29;
    int64_t v31; // 0x180020660
    int64_t v32; // 0x180020660
    if ((int32_t)v30 < 16) {
        goto lab_0x180020810;
    } else {
        if (v29 < 1) {
            // 0x180020841
            v31 = 0;
            v32 = 14;
            goto lab_0x180020850;
        } else {
            if (a1 == 0 || v18 != 1) {
                // 0x1800207b1
                __security_check_cookie(g17);
                return &g47;
            }
            // 0x180020841
            v31 = 0;
            v32 = 14;
            goto lab_0x180020850;
        }
    }
  lab_0x1800207e6:
    // 0x1800207e6
    v19 = v20;
    if (*(int16_t *)v21 != 0) {
        goto lab_0x1800207f8;
    } else {
        int64_t v33 = v20 + 1; // 0x1800207ec
        int64_t v34 = v33 & 0xffffffff; // 0x1800207ec
        v21 += 2;
        v20 = v34;
        v19 = v34;
        if ((int32_t)v33 < v18) {
            goto lab_0x1800207e6;
        } else {
            goto lab_0x1800207f8;
        }
    }
  lab_0x180020850:;
    int64_t v35 = v31 + v2;
    int16_t v36 = *(int16_t *)(v35 - 23); // 0x180020855
    *(int16_t *)(v35 - 21) = v36 + *(int16_t *)(v35 - 55);
    int64_t v37 = v32 - 1; // 0x180020863
    v31 += 2;
    v32 = v37;
    int64_t v38; // 0x180020660
    int64_t v39; // 0x180020660
    int64_t v40; // 0x180020660
    if (v37 != 0) {
        goto lab_0x180020850;
    } else {
        if (v7 == 0) {
            goto lab_0x18002089c;
        } else {
            // 0x180020873
            v40 = v2 - 25;
            v39 = a2;
            v38 = 0;
            goto lab_0x180020873_2;
        }
    }
  lab_0x18002089c:;
    bool v41; // 0x180020660
    int32_t v42; // 0x180020660
    int64_t v43; // 0x180020660
    int64_t v44; // 0x180020660
    switch (a1) {
        case 0: {
            // 0x18002092a
            v41 = true;
            v42 = v26 & 31;
            v43 = 20;
            v44 = a6;
            goto lab_0x180020960;
        }
        case 1: {
            int32_t v45 = v26 & 31; // 0x1800208f9
            v41 = false;
            v42 = v45;
            v43 = 257;
            v44 = &g7;
            if (v45 >= 10) {
                // 0x1800207b1
                __security_check_cookie(g17);
                return &g47;
            }
            goto lab_0x180020960;
        }
        default: {
            int32_t v46 = v26 & 31; // 0x1800208f9
            v41 = true;
            v42 = v46;
            v43 = 0;
            v44 = &g6;
            if (a1 == 2 && v46 >= 10) {
                // 0x1800207b1
                __security_check_cookie(g17);
                return &g47;
            }
            goto lab_0x180020960;
        }
    }
  lab_0x180020873_2:;
    int64_t v47 = v38;
    int16_t * v48 = (int16_t *)v39; // 0x180020873
    uint16_t v49 = *v48; // 0x180020873
    if (v49 == 0) {
        goto lab_0x180020890;
    } else {
        uint16_t v50 = *(int16_t *)(2 * (int64_t)v49 + v40); // 0x18002087e
        *(int16_t *)(2 * (int64_t)v50 + a6) = (int16_t)v47;
        int16_t * v51 = (int16_t *)(2 * (int64_t)*v48 + v40); // 0x18002088b
        *v51 = *v51 + 1;
        goto lab_0x180020890;
    }
  lab_0x180020960:;
    uint32_t v52 = 1 << v42;
    int64_t v53 = v52;
    uint32_t v54 = (int32_t)v43; // 0x180020979
    int32_t v55 = 0; // 0x180020660
    int32_t v56 = 0; // 0x180020660
    int64_t v57 = 0; // 0x180020660
    int64_t v58 = v53; // 0x180020660
    int64_t v59 = 0; // 0x180020660
    int64_t v60 = v24; // 0x180020660
    int64_t v61 = v14; // 0x180020660
    int64_t v62 = v53; // 0x180020660
    int64_t v63 = 0xffffffff; // 0x180020660
    goto lab_0x180020960_2;
  lab_0x180020890:;
    int64_t v129 = v47 + 1; // 0x180020890
    v39 += 2;
    v38 = v129 & 0xffffffff;
    if ((int32_t)v129 < v7) {
        goto lab_0x180020873_2;
    } else {
        goto lab_0x18002089c;
    }
  lab_0x180020960_2:;
    int64_t v64 = v62;
    int64_t v65 = v61;
    int64_t v66 = v58;
    int32_t v67 = v56;
    uint32_t v68 = v67 & 31; // 0x1800209cd
    int32_t v69 = v55; // 0x180020660
    int64_t v70 = v57; // 0x180020660
    int64_t v71 = v59; // 0x180020660
    int64_t v72 = v60; // 0x180020660
    goto lab_0x180020960_3;
  lab_0x180020960_3:;
    int64_t v73 = v70;
    uint16_t v74 = *(int16_t *)(2 * v71 + a6); // 0x180020972
    uint32_t v75 = (int32_t)v74;
    int32_t v76 = 0; // 0x18002097b
    if (v75 + 1 >= v54) {
        // 0x180020989
        v76 = 96;
        if (v75 < v54) {
            goto lab_0x1800209b4;
        } else {
            char v77 = *(char *)((2 * ((int64_t)v74 - v43) & 0x1fffffffe) + v44); // 0x180020996
            v76 = v77;
            goto lab_0x1800209b4;
        }
    } else {
        goto lab_0x1800209b4;
    }
  lab_0x1800209b4:;
    int32_t v78 = v72;
    uint32_t v79 = 1 << (v78 - v67 & 31);
    int64_t v80 = v68 == 0 ? v73 : (int64_t)((int32_t)v73 >> v68);
    int64_t v81 = v80 + v66 & 0xffffffff; // 0x1800209cf
    int64_t v82 = v66 & 0xffffffff; // 0x1800209cf
    goto lab_0x1800209d1;
  lab_0x1800209d1:;
    int64_t v83 = v81 - (int64_t)v79 & 0xffffffff; // 0x1800209d1
    *(int32_t *)(4 * v83 + v65) = v76;
    uint32_t v84 = (int32_t)v82 - v79; // 0x1800209d8
    v81 = v83;
    v82 = v84;
    int64_t v85; // 0x180020660
    int64_t v86; // 0x180020660
    if (v84 != 0) {
        goto lab_0x1800209d1;
    } else {
        int64_t v87 = 1 << (v78 + 31 & 31);
        v85 = v87;
        v86 = v87;
        if ((v73 & v87) == 0) {
            goto lab_0x1800209f6;
        } else {
            goto lab_0x1800209f0;
        }
    }
  lab_0x1800209f6:;
    int64_t v88 = v86;
    int64_t v89 = 0; // 0x1800209f8
    if ((int32_t)v88 == 0) {
        goto lab_0x180020a09;
    } else {
        // 0x1800209fa
        v89 = (v88 + 0xffffffff & v73) + v88 & 0xffffffff;
        goto lab_0x180020a09;
    }
  lab_0x1800209f0:;
    int64_t v90 = v85 / 2; // 0x1800209f0
    v85 = v90;
    v86 = v90;
    if ((v90 & v73) != 0) {
        goto lab_0x1800209f0;
    } else {
        goto lab_0x1800209f6;
    }
  lab_0x180020a09:;
    int64_t v91 = v89;
    int32_t v92 = v69 + 1; // 0x180020a12
    int64_t v93 = v92; // 0x180020a12
    int16_t * v94 = (int16_t *)((2 * v72 & 0x1fffffffe) + v3); // 0x180020a1c
    int16_t v95 = *v94 - 1; // 0x180020a1c
    *v94 = v95;
    int32_t v96 = v78; // 0x180020a21
    int64_t v97 = v72; // 0x180020a21
    if (v95 != 0) {
        goto lab_0x180020a3e;
    } else {
        if (v78 == v18) {
            if (v91 == 0) {
                goto lab_0x180020b3b;
            } else {
                // 0x180020b1f
                *(int32_t *)(4 * v91 + v65) = 64;
                goto lab_0x180020b3b;
            }
        } else {
            uint16_t v98 = *(int16_t *)(2 * (int64_t)*(int16_t *)(2 * v93 + a6) + a2); // 0x180020a39
            v96 = v98;
            v97 = v98;
            goto lab_0x180020a3e;
        }
    }
  lab_0x180020a3e:;
    int64_t v99 = v97;
    uint32_t v100 = v96;
    v69 = v92;
    v70 = v91;
    v71 = v93;
    v72 = v99;
    int64_t v101; // 0x180020660
    int64_t v102; // 0x180020660
    int64_t v103; // 0x180020660
    int64_t v104; // 0x180020660
    int64_t v105; // 0x180020660
    int64_t v106; // 0x180020660
    int64_t v107; // 0x180020660
    int64_t v108; // 0x180020660
    int32_t v109; // 0x180020660
    uint32_t v110; // 0x180020a52
    int32_t v111; // 0x180020a6e
    if (v100 > v26) {
        // 0x180020a4f
        v110 = v52 - 1 & (int32_t)v91;
        v109 = v67;
        v108 = v66;
        v103 = v65;
        v104 = v64;
        v105 = v63;
        if (v110 == (int32_t)v63) {
            goto lab_0x180020950;
        } else {
            // 0x180020a5d
            v111 = v67 == 0 ? v26 : v67;
            uint32_t v112 = v100 - v111; // 0x180020a75
            int64_t v113 = v112; // 0x180020a75
            v102 = v113;
            if (v100 >= v18) {
                goto lab_0x180020aa9;
            } else {
                // 0x180020a90
                v107 = 1 << (v112 & 31);
                v106 = v99;
                v101 = v113;
                goto lab_0x180020a90_2;
            }
        }
    } else {
        goto lab_0x180020960_3;
    }
  lab_0x180020950:
    // 0x180020950
    v55 = v92;
    v56 = v109;
    v57 = v91;
    v58 = v108;
    v59 = v93;
    v60 = v99;
    v61 = v103;
    v62 = v104;
    v63 = v105;
    goto lab_0x180020960_2;
  lab_0x180020b3b:
    // 0x180020b3b
    *(int64_t *)a4 = (4 * v64 & 0x3fffffffc) + v14;
    *v9 = v26;
    // 0x1800207b1
    __security_check_cookie(g17);
    return &g47;
  lab_0x180020aa9:;
    int64_t v114 = 1 << ((int32_t)v102 & 31);
    int64_t v115 = v64 + v114; // 0x180020ab7
    bool v116; // 0x180020660
    bool v117; // 0x180020660
    if (v41) {
        if (a1 != 2) {
            goto lab_0x180020adc;
        } else {
            uint32_t v118 = (int32_t)v115; // 0x180020acf
            v116 = v118 < 592;
            v117 = v118 == 592;
            goto lab_0x180020ad6;
        }
    } else {
        uint32_t v119 = (int32_t)v115; // 0x180020ac0
        v116 = v119 < 852;
        v117 = v119 == 852;
        goto lab_0x180020ad6;
    }
  lab_0x180020a90_2:;
    int64_t v120 = v101;
    int64_t v121 = v106 & 0xffffffff;
    int64_t v122 = v107 - (int64_t)*(int16_t *)(2 * v121 + v3); // 0x180020a96
    v102 = v120;
    if ((int32_t)v122 < 1) {
        goto lab_0x180020aa9;
    } else {
        int64_t v123 = v120 + 1 & 0xffffffff; // 0x180020a9c
        int64_t v124 = v121 + 1; // 0x180020a9f
        v107 = 2 * v122 & 0xfffffffe;
        v106 = v124;
        v101 = v123;
        v102 = v123;
        if ((int32_t)v124 < v18) {
            goto lab_0x180020a90_2;
        } else {
            goto lab_0x180020aa9;
        }
    }
  lab_0x180020adc:;
    int64_t v125 = v110; // 0x180020a52
    int64_t v126 = v65 + 4 * v66; // 0x180020a62
    int64_t v127 = 4 * v125; // 0x180020ae0
    int64_t v128 = v127 + v14;
    *(char *)v128 = (char)v102;
    *(char *)((v127 | 1) + v14) = (char)v25;
    *(int16_t *)(v128 + 2) = (int16_t)((v126 - v14) / 4);
    v109 = v111;
    v108 = v114;
    v103 = v126;
    v104 = v115 & 0xffffffff;
    v105 = v125;
    goto lab_0x180020950;
  lab_0x180020ad6:
    // 0x180020ad6
    if (!v116 && !v117) {
        // 0x1800207b1
        __security_check_cookie(g17);
        return &g47;
    }
    goto lab_0x180020adc;
}

// Address range: 0x180020b70 - 0x180021052
int64_t function_180020b70(int64_t a1, int32_t a2) {
    int64_t v1 = *(int64_t *)(a1 + 40); // 0x180020b85
    int32_t * v2 = (int32_t *)(a1 + 24); // 0x180020b8e
    int32_t v3 = *v2; // 0x180020b8e
    int32_t * v4 = (int32_t *)(a1 + 8); // 0x180020b95
    int64_t * v5 = (int64_t *)(a1 + 16); // 0x180020b99
    int64_t v6 = *v5; // 0x180020b99
    int64_t v7 = *(int64_t *)(v1 + 96); // 0x180020ba7
    int64_t v8 = *(int64_t *)(v1 + 104); // 0x180020bb3
    uint32_t v9 = *(int32_t *)(v1 + 60); // 0x180020bbb
    int32_t * v10 = (int32_t *)(v1 + 72); // 0x180020bc3
    int32_t * v11 = (int32_t *)(v1 + 76); // 0x180020bc8
    int32_t v12 = *(int32_t *)(v1 + 52); // 0x180020bd9
    int64_t v13 = *(int64_t *)(v1 + 64); // 0x180020bf1
    uint32_t v14 = *(int32_t *)(v1 + 112) & 31; // 0x180020c07
    int64_t v15 = 0; // 0x180020c07
    if (v14 != 0) {
        v15 = -1 - (-1 << v14);
    }
    uint32_t v16 = *(int32_t *)(v1 + 116) & 31; // 0x180020c10
    int64_t v17 = 0; // 0x180020c10
    if (v16 != 0) {
        v17 = -1 - (-1 << v16);
    }
    uint64_t v18 = (int64_t)(*v4 - 5) + a1; // 0x180020bb8
    int64_t v19 = v9; // 0x180020bbb
    uint64_t v20 = v6 + (int64_t)(v3 - 257); // 0x180020bc0
    int64_t v21 = v7 + 1; // 0x180020c57
    int64_t v22 = v8 + 1;
    int64_t v23 = (int64_t)*v10; // 0x180020c20
    int64_t v24 = a1; // 0x180020c20
    int64_t v25 = v6; // 0x180020c20
    int64_t v26 = (int64_t)*v11; // 0x180020c20
    int64_t v27; // 0x180020b70
    int64_t v28; // 0x180020b70
    int64_t v29; // 0x180020b70
    int64_t v30; // 0x180020b70
    int64_t v31; // 0x180020b70
    int64_t v32; // 0x180020b70
    int64_t v33; // 0x180020b70
    int64_t v34; // 0x180020b70
    int64_t v35; // 0x180020b70
    int64_t v36; // 0x180020b70
    int64_t v37; // 0x180020b70
    int64_t v38; // 0x180020b70
    int64_t v39; // 0x180020b70
    int64_t v40; // 0x180020b70
    int64_t v41; // 0x180020b70
    int64_t v42; // 0x180020b70
    int64_t v43; // 0x180020b70
    int64_t v44; // 0x180020b70
    int64_t v45; // 0x180020b70
    int64_t v46; // 0x180020b70
    int64_t v47; // 0x180020b70
    int64_t v48; // 0x180020b70
    int64_t v49; // 0x180020b70
    int64_t v50; // 0x180020b70
    int64_t v51; // 0x180020da0
    int64_t v52; // 0x180020da9
    while (true) {
      lab_0x180020c23:;
        int64_t v53 = v26;
        v33 = v25;
        int64_t v54 = v24;
        int64_t v55 = v23;
        uint32_t v56 = (int32_t)v53; // 0x180020c23
        int64_t v57 = v55; // 0x180020c27
        int64_t v58 = v54; // 0x180020c27
        int64_t v59 = v53; // 0x180020c27
        if (v56 < 15) {
            unsigned char v60 = *(char *)v54; // 0x180020c29
            uint32_t v61 = v56 & 31; // 0x180020c2f
            int64_t v62 = v60; // 0x180020c2f
            if (v61 != 0) {
                v62 = (int32_t)v60 << v61;
            }
            unsigned char v63 = *(char *)(v54 + 1); // 0x180020c37
            uint32_t v64 = v56 + 8 & 31; // 0x180020c3b
            int64_t v65 = v63; // 0x180020c3b
            if (v64 != 0) {
                v65 = (int32_t)v63 << v64;
            }
            v57 = v62 + v55 + v65 & 0xffffffff;
            v58 = v54 + 2;
            v59 = v53 + 16 & 0xffffffff;
        }
        // 0x180020c47
        v45 = v58;
        int64_t v66 = v57;
        int64_t v67 = 4 * (v66 & v15); // 0x180020c4e
        int64_t v68 = v67 + v7; // 0x180020c4e
        char v69 = *(char *)v68; // 0x180020c4e
        unsigned char v70 = *(char *)(v67 + v21); // 0x180020c57
        unsigned char v71 = v70 & 31;
        int64_t v72 = v66; // 0x180020c5d
        if (v71 != 0) {
            v72 = (int32_t)v66 >> (int32_t)v71;
        }
        int64_t v73 = v59 - (int64_t)v70 & 0xffffffff; // 0x180020c5f
        char v74 = v69; // 0x180020c64
        int64_t v75 = v72; // 0x180020c64
        int64_t v76 = v68; // 0x180020c64
        int64_t v77 = v73; // 0x180020c64
        v44 = v72;
        v38 = v68;
        v32 = v73;
        if (v69 == 0) {
            goto lab_0x180020ca2;
        } else {
            int64_t v78 = v77;
            int64_t v79 = v76;
            int64_t v80 = v75;
            unsigned char v81 = v74;
            int64_t v82 = v81;
            while ((v82 & 16) == 0) {
                if ((v82 & 64) != 0) {
                    if ((v82 & 32) == 0) {
                        // 0x180020fb6
                        *(int64_t *)(a1 + 32) = (int64_t)"invalid literal/length code";
                        *(int32_t *)(v1 + 8) = 0x3f51;
                        v43 = v80;
                        v49 = v45;
                        v35 = v33;
                        v31 = v78;
                        goto lab_0x180020ffb_2;
                    } else {
                        // 0x180020fab
                        *(int32_t *)(v1 + 8) = 0x3f3f;
                        v43 = v80;
                        v49 = v45;
                        v35 = v33;
                        v31 = v78;
                        goto lab_0x180020ffb_2;
                    }
                }
                uint16_t v83 = *(int16_t *)(v79 + 2); // 0x180020c82
                int64_t v84 = 4 * ((v80 & 0xffffffff & (int64_t)(1 << (int32_t)(v81 & 31)) + 0xffffffff) + (int64_t)v83); // 0x180020c8a
                int64_t v85 = v84 + v7; // 0x180020c8a
                char v86 = *(char *)v85; // 0x180020c8a
                unsigned char v87 = *(char *)(v84 + v21); // 0x180020c93
                unsigned char v88 = v87 & 31;
                int64_t v89 = v80; // 0x180020c99
                if (v88 != 0) {
                    v89 = (int32_t)v80 >> (int32_t)v88;
                }
                int64_t v90 = v78 - (int64_t)v87 & 0xffffffff; // 0x180020c9b
                v74 = v86;
                v75 = v89;
                v76 = v85;
                v77 = v90;
                v44 = v89;
                v38 = v85;
                v32 = v90;
                if (v86 == 0) {
                    goto lab_0x180020ca2;
                }
                v78 = v77;
                v79 = v76;
                v80 = v75;
                v81 = v74;
                v82 = v81;
            }
            int64_t v91 = (int64_t)*(int16_t *)(v79 + 2); // 0x180020cb2
            unsigned char v92 = v81 & 15;
            int64_t v93 = v80; // 0x180020cba
            int64_t v94 = v45; // 0x180020cba
            int64_t v95 = v91; // 0x180020cba
            int64_t v96 = v78; // 0x180020cba
            if (v92 != 0) {
                uint32_t v97 = (int32_t)v92; // 0x180020cb7
                uint32_t v98 = (int32_t)v78; // 0x180020cbc
                int64_t v99 = v80; // 0x180020cbf
                int64_t v100 = v45; // 0x180020cbf
                int64_t v101 = v78; // 0x180020cbf
                if (v97 > v98) {
                    unsigned char v102 = *(char *)v45; // 0x180020cc1
                    uint32_t v103 = v98 & 31; // 0x180020cc7
                    int64_t v104 = v102; // 0x180020cc7
                    if (v103 != 0) {
                        v104 = (int32_t)v102 << v103;
                    }
                    v99 = v104 + v80 & 0xffffffff;
                    v100 = v45 + 1;
                    v101 = v78 + 8 & 0xffffffff;
                }
                // 0x180020cd2
                v93 = (int32_t)v99 >> v97;
                v94 = v100;
                v95 = (v99 & (int64_t)(1 << v97) + 0xffffffff) + v91 & 0xffffffff;
                v96 = v101 - (int64_t)v92 & 0xffffffff;
            }
            int64_t v105 = v96;
            int64_t v106 = v95;
            int64_t v107 = v94;
            int64_t v108 = v93;
            uint32_t v109 = (int32_t)v105; // 0x180020ce4
            int64_t v110 = v108; // 0x180020ce8
            int64_t v111 = v107; // 0x180020ce8
            int64_t v112 = v105; // 0x180020ce8
            if (v109 < 15) {
                unsigned char v113 = *(char *)v107; // 0x180020cea
                uint32_t v114 = v109 & 31; // 0x180020cf0
                int64_t v115 = v113; // 0x180020cf0
                if (v114 != 0) {
                    v115 = (int32_t)v113 << v114;
                }
                unsigned char v116 = *(char *)(v107 + 1); // 0x180020cf8
                uint32_t v117 = v109 + 8 & 31; // 0x180020cfc
                int64_t v118 = v116; // 0x180020cfc
                if (v117 != 0) {
                    v118 = (int32_t)v116 << v117;
                }
                v110 = v115 + v108 + v118 & 0xffffffff;
                v111 = v107 + 2;
                v112 = v105 + 16 & 0xffffffff;
            }
            int64_t v119 = v111;
            int64_t v120 = v110;
            int64_t v121 = 4 * (v120 & v17); // 0x180020d14
            int64_t v122 = v121 + v8; // 0x180020d14
            unsigned char v123 = *(char *)(v121 + v22); // 0x180020d1c
            unsigned char v124 = v123 & 31;
            int64_t v125 = v120; // 0x180020d21
            if (v124 != 0) {
                v125 = (int32_t)v120 >> (int32_t)v124;
            }
            int64_t v126 = (int64_t)*(char *)v122; // 0x180020d14
            int64_t v127 = v112 - (int64_t)v123 & 0xffffffff; // 0x180020d23
            int64_t v128 = v126; // 0x180020d29
            int64_t v129 = v125; // 0x180020d29
            int64_t v130 = v122; // 0x180020d29
            int64_t v131 = v127; // 0x180020d29
            int64_t v132 = v126; // 0x180020d29
            int64_t v133 = v125; // 0x180020d29
            int64_t v134 = v122; // 0x180020d29
            int64_t v135 = v127; // 0x180020d29
            if ((v126 & 16) == 0) {
                int64_t v136 = v131;
                int64_t v137 = v129;
                int64_t v138 = v128;
                v42 = v137;
                v48 = v119;
                v30 = v136;
                v50 = (int64_t)"invalid distance code";
                if ((v138 & 64) != 0) {
                    goto lab_0x180020fd3_2;
                }
                uint16_t v139 = *(int16_t *)(v130 + 2); // 0x180020d47
                int64_t v140 = 4 * ((v137 & 0xffffffff & (int64_t)(1 << ((int32_t)v138 & 31)) + 0xffffffff) + (int64_t)v139); // 0x180020d4f
                int64_t v141 = v140 + v8; // 0x180020d4f
                unsigned char v142 = *(char *)(v140 + v22); // 0x180020d57
                unsigned char v143 = v142 & 31;
                int64_t v144 = v137; // 0x180020d5c
                if (v143 != 0) {
                    v144 = (int32_t)v137 >> (int32_t)v143;
                }
                int64_t v145 = (int64_t)*(char *)v141; // 0x180020d4f
                int64_t v146 = v136 - (int64_t)v142 & 0xffffffff; // 0x180020d5e
                v132 = v145;
                v133 = v144;
                v134 = v141;
                v135 = v146;
                while ((v145 & 16) == 0) {
                    // 0x180020d30
                    v137 = v144;
                    if ((v145 & 64) != 0) {
                        goto lab_0x180020fd3_2;
                    }
                    // 0x180020d39
                    v139 = *(int16_t *)(v141 + 2);
                    v140 = 4 * ((v137 & 0xffffffff & (int64_t)(1 << ((int32_t)v145 & 31)) + 0xffffffff) + (int64_t)v139);
                    v141 = v140 + v8;
                    v142 = *(char *)(v140 + v22);
                    v143 = v142 & 31;
                    v144 = v137;
                    if (v143 != 0) {
                        v144 = (int32_t)v137 >> (int32_t)v143;
                    }
                    v145 = (int64_t)*(char *)v141;
                    v146 = v146 - (int64_t)v142 & 0xffffffff;
                    v132 = v145;
                    v133 = v144;
                    v134 = v141;
                    v135 = v146;
                }
            }
            int64_t v147 = v135;
            int64_t v148 = v133;
            uint16_t v149 = *(int16_t *)(v134 + 2); // 0x180020d66
            int64_t v150 = v132 & 15; // 0x180020d6b
            uint32_t v151 = (int32_t)v147; // 0x180020d6e
            uint32_t v152 = (int32_t)v150; // 0x180020d6e
            int64_t v153 = v148; // 0x180020d71
            int64_t v154 = v119; // 0x180020d71
            int64_t v155 = v147; // 0x180020d71
            if (v151 < v152) {
                unsigned char v156 = *(char *)v119; // 0x180020d73
                uint32_t v157 = v151 & 31; // 0x180020d79
                int64_t v158 = v156; // 0x180020d79
                if (v157 != 0) {
                    v158 = (int32_t)v156 << v157;
                }
                int64_t v159 = v119 + 1; // 0x180020d7b
                int64_t v160 = v158 + v148; // 0x180020d7e
                int64_t v161 = v147 + 8; // 0x180020d80
                uint32_t v162 = (int32_t)v161; // 0x180020d84
                v153 = v160 & 0xffffffff;
                v154 = v159;
                v155 = v161 & 0xffffffff;
                if (v162 < v152) {
                    unsigned char v163 = *(char *)v159; // 0x180020d89
                    uint32_t v164 = v162 & 31; // 0x180020d8f
                    int64_t v165 = v163; // 0x180020d8f
                    if (v164 != 0) {
                        v165 = (int32_t)v163 << v164;
                    }
                    v153 = v165 + v160 & 0xffffffff;
                    v154 = v119 + 2;
                    v155 = v147 + 16 & 0xffffffff;
                }
            }
            // 0x180020d9a
            v46 = v154;
            int64_t v166 = v153;
            v51 = v155 - v150 & 0xffffffff;
            v40 = v152 == 0 ? v166 : (int64_t)((int32_t)v166 >> v152);
            int64_t v167 = (v166 & (int64_t)(-1 - (-1 << v152))) + (int64_t)v149; // 0x180020da9
            v52 = v167 & 0xffffffff;
            uint32_t v168 = a2 - v3 - (int32_t)v6 + (int32_t)v33; // 0x180020dae
            if (v168 < (int32_t)v167) {
                int64_t v169 = v52 - (int64_t)v168; // 0x180020dbc
                uint32_t v170 = (int32_t)v169; // 0x180020dbe
                if (*(int32_t *)(v1 + 56) < v170) {
                    // 0x180020dc7
                    v42 = v40;
                    v48 = v46;
                    v30 = v51;
                    v50 = (int64_t)"invalid distance too far back";
                    if (*(int32_t *)(v1 + 0x1be0) != 0) {
                        goto lab_0x180020fd3_2;
                    }
                }
                int64_t v171 = v169 & 0xffffffff; // 0x180020dbc
                if (v9 != 0) {
                    // 0x180020e18
                    if (v9 >= v170) {
                        // 0x180020e85
                        if (v170 >= (int32_t)v106) {
                            goto lab_0x180020ead;
                        } else {
                            int64_t v172; // 0x180020b70
                            int64_t v173; // 0x180020b70
                            *(char *)v172 = *(char *)v173;
                            int64_t v174 = v172 + 1; // 0x180020e9d
                            int64_t v175; // 0x180020b70
                            uint32_t v176 = (int32_t)v175 - 1; // 0x180020ea0
                            v175 = v176;
                            v172 = v174;
                            v173++;
                            while (v176 != 0) {
                                int64_t v177 = v173;
                                int64_t v178 = v172;
                                int64_t v179 = v175;
                                char v180 = *(char *)v177; // 0x180020e92
                                *(char *)v178 = v180;
                                v174 = v178 + 1;
                                v176 = (int32_t)v179 - 1;
                                v175 = v176;
                                v172 = v174;
                                v173 = v177 + 1;
                            }
                            // 0x180020ea5
                            v36 = v174;
                            v27 = v106 - v171;
                            goto lab_0x180020ea5;
                        }
                    } else {
                        int64_t v181 = v171 - v19; // 0x180020e2b
                        int64_t v182 = v13 + (int64_t)(v12 + (int32_t)(v19 - v169)); // 0x180020e33
                        v37 = v33;
                        v39 = v182;
                        v28 = v106;
                        if ((int32_t)v181 >= (int32_t)v106) {
                            goto lab_0x180020ead;
                        } else {
                            int64_t v183 = v33;
                            *(char *)v183 = *(char *)(v182 - v33 + v183);
                            int64_t v184 = v183 + 1; // 0x180020e58
                            uint32_t v185 = (int32_t)(v181 & 0xffffffff) - 1; // 0x180020e5b
                            int64_t v186 = v185; // 0x180020e5e
                            while (v185 != 0) {
                                // 0x180020e50
                                v183 = v184;
                                *(char *)v183 = *(char *)(v182 - v33 + v183);
                                v184 = v183 + 1;
                                v185 = (int32_t)v186 - 1;
                                v186 = v185;
                            }
                            int64_t v187 = v106 - v181; // 0x180020e3b
                            int64_t v188 = v187 & 0xffffffff; // 0x180020e3b
                            int64_t v189 = v184; // 0x180020e66
                            int64_t v190 = v13; // 0x180020e66
                            v37 = v184;
                            v39 = v13;
                            v28 = v188;
                            if (v9 >= (int32_t)v187) {
                                goto lab_0x180020ead;
                            } else {
                                *(char *)v189 = *(char *)v190;
                                int64_t v191 = v189 + 1; // 0x180020e7b
                                int32_t v192 = v9 - 1; // 0x180020e7e
                                int32_t v193 = v192; // 0x180020e81
                                v189 = v191;
                                v190++;
                                while (v192 != 0) {
                                    // 0x180020e70
                                    *(char *)v189 = *(char *)v190;
                                    v191 = v189 + 1;
                                    v192 = v193 - 1;
                                    v193 = v192;
                                    v189 = v191;
                                    v190++;
                                }
                                // 0x180020ea5
                                v36 = v191;
                                v27 = v188 - v19;
                                goto lab_0x180020ea5;
                            }
                        }
                    }
                } else {
                    int64_t v194 = v13 + (int64_t)(v12 - v170); // 0x180020de6
                    int64_t v195 = v171; // 0x180020dee
                    int64_t v196 = v33; // 0x180020dee
                    int64_t v197 = v194; // 0x180020dee
                    v37 = v33;
                    v39 = v194;
                    v28 = v106;
                    if (v170 >= (int32_t)v106) {
                        goto lab_0x180020ead;
                    } else {
                        *(char *)v196 = *(char *)v197;
                        int64_t v198 = v196 + 1; // 0x180020e0b
                        uint32_t v199 = (int32_t)v195 - 1; // 0x180020e0e
                        v195 = v199;
                        v196 = v198;
                        v197++;
                        while (v199 != 0) {
                            // 0x180020e00
                            *(char *)v196 = *(char *)v197;
                            v198 = v196 + 1;
                            v199 = (int32_t)v195 - 1;
                            v195 = v199;
                            v196 = v198;
                            v197++;
                        }
                        // 0x180020ea5
                        v36 = v198;
                        v27 = v106 - v169;
                        goto lab_0x180020ea5;
                    }
                }
            } else {
                int64_t v200 = v33;
                int64_t v201 = v33 - v52;
                int64_t v202 = v201 + 3; // 0x180020f34
                *(char *)v200 = *(char *)v201;
                int64_t v203 = v106 + 0xfffffffd; // 0x180020f3b
                *(char *)(v200 + 1) = *(char *)(v201 + 1);
                *(char *)(v200 + 2) = *(char *)(v201 + 2);
                int64_t v204 = v200 + 3; // 0x180020f4f
                uint32_t v205 = (int32_t)v203;
                int64_t v206 = v203 & 0xffffffff; // 0x180020f57
                while (v205 >= 3) {
                    // 0x180020f31
                    v200 = v204;
                    v201 = v202;
                    v202 = v201 + 3;
                    *(char *)v200 = *(char *)v201;
                    v203 = v206 + 0xfffffffd;
                    *(char *)(v200 + 1) = *(char *)(v201 + 1);
                    *(char *)(v200 + 2) = *(char *)(v201 + 2);
                    v204 = v200 + 3;
                    v205 = (int32_t)v203;
                    v206 = v203 & 0xffffffff;
                }
                // 0x180020f59
                v41 = v40;
                v47 = v46;
                v34 = v204;
                v29 = v51;
                if (v205 != 0) {
                    // 0x180020f5e
                    *(char *)v204 = *(char *)v202;
                    int64_t v207 = v200 + 4; // 0x180020f69
                    v41 = v40;
                    v47 = v46;
                    v34 = v207;
                    v29 = v51;
                    if (v205 != 1) {
                        // 0x180020f76
                        *(char *)v207 = *(char *)(v201 + 4);
                        v41 = v40;
                        v47 = v46;
                        v34 = v200 + 5;
                        v29 = v51;
                    }
                }
                goto lab_0x180020f8c;
            }
        }
    }
  lab_0x180020ca2:
    // 0x180020ca2
    *(char *)v33 = *(char *)(v38 + 2);
    v41 = v44;
    v47 = v45;
    v34 = v33 + 1;
    v29 = v32;
    goto lab_0x180020f8c;
  lab_0x180020fd3_2:
    // 0x180020fd3
    *(int64_t *)(a1 + 32) = v50;
    *(int32_t *)(v1 + 8) = 0x3f51;
    v43 = v42;
    v49 = v48;
    v35 = v33;
    v31 = v30;
    goto lab_0x180020ffb_2;
  lab_0x180020f8c:
    // 0x180020f8c
    v26 = v29;
    v25 = v34;
    v24 = v47;
    v23 = v41;
    v43 = v23;
    v49 = v24;
    v35 = v25;
    v31 = v26;
    if (v24 < v18 != v25 < v20) {
        // break -> 0x180020ffb
        goto lab_0x180020ffb_2;
    }
    goto lab_0x180020c23;
  lab_0x180020ead:;
    int64_t v208 = v28;
    int64_t v209 = v39;
    int64_t v210 = v37;
    int32_t v211 = v208;
    int32_t v212 = v211; // 0x180020eb1
    int64_t v213 = v210; // 0x180020eb1
    int64_t v214 = v209; // 0x180020eb1
    if (v211 >= 3) {
        int64_t v215 = 0xaaaaaaab * (v208 + 0xfffffffd & 0xffffffff) / 0x200000000 + 1; // 0x180020ec7
        int64_t v216 = v208 + 0xfffffffd; // 0x180020ed4
        *(char *)v210 = *(char *)v209;
        *(char *)(v210 + 1) = *(char *)(v209 + 1);
        int64_t v217 = v209 + 3; // 0x180020ee9
        *(char *)(v210 + 2) = *(char *)(v209 + 2);
        int64_t v218 = v210 + 3; // 0x180020ef1
        v215--;
        int64_t v219 = v218; // 0x180020ef8
        int64_t v220 = v217; // 0x180020ef8
        int64_t v221 = v216 & 0xffffffff; // 0x180020ef8
        while (v215 != 0) {
            // 0x180020ed0
            v216 = v221 + 0xfffffffd;
            *(char *)v219 = *(char *)v220;
            *(char *)(v219 + 1) = *(char *)(v220 + 1);
            v217 = v220 + 3;
            *(char *)(v219 + 2) = *(char *)(v220 + 2);
            v218 = v219 + 3;
            v215--;
            v219 = v218;
            v220 = v217;
            v221 = v216 & 0xffffffff;
        }
        // 0x180020efa
        v212 = v216;
        v213 = v218;
        v214 = v217;
    }
    int64_t v222 = v213;
    int32_t v223 = v212;
    v41 = v40;
    v47 = v46;
    v34 = v222;
    v29 = v51;
    if (v223 != 0) {
        int64_t v224 = v214;
        *(char *)v222 = *(char *)v224;
        int64_t v225 = v222 + 1; // 0x180020f0f
        v41 = v40;
        v47 = v46;
        v34 = v225;
        v29 = v51;
        if (v223 != 1) {
            // 0x180020f1c
            *(char *)v225 = *(char *)(v224 + 1);
            v41 = v40;
            v47 = v46;
            v34 = v222 + 2;
            v29 = v51;
        }
    }
    goto lab_0x180020f8c;
  lab_0x180020ea5:
    // 0x180020ea5
    v37 = v36;
    v39 = v36 - v52;
    v28 = v27 & 0xffffffff;
    goto lab_0x180020ead;
  lab_0x180020ffb_2:
    // 0x180020ffb
    *v5 = v35;
    int64_t v226 = v49 - (v31 / 8 & 0x1fffffff); // 0x180021007
    *(int64_t *)a1 = v226;
    uint32_t v227 = (int32_t)v31 & 7; // 0x18002101d
    *v4 = (int32_t)(v18 - v226) + 5;
    int64_t result = v20 - v35 + 257; // 0x18002102d
    *v2 = (int32_t)result;
    *v10 = (v227 == 0 ? 0 : -1 - (-1 << v227)) & (int32_t)v43;
    *v11 = v227;
    return result;
}

// Address range: 0x180021060 - 0x180021566
int64_t function_180021060(int32_t a1, int64_t a2, int64_t a3) {
    if (a2 == 0) {
        // 0x180021074
        return 0;
    }
    int64_t v1 = (uint32_t)(-1 - a1); // 0x180021088
    int64_t v2 = a3; // 0x18002108f
    int64_t v3 = v1; // 0x18002108f
    int64_t v4 = a2; // 0x18002108f
    int64_t v5 = a3; // 0x18002108f
    int64_t v6 = v1; // 0x18002108f
    int64_t v7 = a2; // 0x18002108f
    if (a3 >= 23) {
        v5 = v2;
        int64_t v8 = v3; // 0x1800210b4
        int64_t v9 = v4; // 0x1800210b4
        while ((v4 & 3) != 0) {
            char v10 = *(char *)v4; // 0x1800210b6
            v4++;
            int32_t v11 = *(int32_t *)(4 * (int64_t)(v10 ^ (char)v3) + 0x180025e90); // 0x1800210c9
            v3 = v11 ^ (int32_t)v3 / 256;
            v2--;
            v5 = v2;
            v8 = v3;
            v9 = v4;
            if (v2 == 0) {
                // break -> 0x1800210da
                break;
            }
            v5 = v2;
            v8 = v3;
            v9 = v4;
        }
        int32_t v12 = 0; // 0x180021111
        int32_t v13 = 0; // 0x180021111
        int64_t v14 = v8; // 0x180021111
        int64_t v15 = v9; // 0x180021111
        int32_t v16 = 0; // 0x180021111
        int32_t v17 = 0; // 0x180021111
        uint32_t v18 = *(int32_t *)v9 ^ (int32_t)v8; // 0x180021137
        uint32_t v19 = *(int32_t *)(v9 + 8); // 0x18002113e
        uint32_t v20 = *(int32_t *)(v9 + 16); // 0x180021144
        uint32_t v21 = *(int32_t *)(v9 + 4); // 0x18002114b
        uint32_t v22 = *(int32_t *)(v9 + 12); // 0x180021150
        uint64_t v23 = 0x100000000000000 * (int64_t)v20 >> 56; // 0x180021238
        int64_t v24 = 1; // 0x1800211be
        int64_t v25 = 256; // 0x1800211be
        int32_t v26 = *(int32_t *)((int64_t)(4 * v20 & 1020) + 0x180026690); // 0x1800211be
        int64_t v27 = v24 + 1; // 0x1800211c7
        uint64_t v28 = 8 * v24 & 56;
        int32_t v29 = *(int32_t *)(4 * ((int64_t)v18 >> v28 & 255 | v25) + 0x180026690); // 0x1800211de
        int32_t v30 = v29 ^ *(int32_t *)((int64_t)(4 * v18 & 1020) + 0x180026690); // 0x1800211de
        int32_t v31 = *(int32_t *)(4 * ((int64_t)v21 >> v28 & 255 | v25) + 0x180026690); // 0x1800211f5
        int32_t v32 = v31 ^ *(int32_t *)((int64_t)(4 * v21 & 1020) + 0x180026690); // 0x1800211f5
        int32_t v33 = *(int32_t *)(4 * ((int64_t)v19 >> v28 & 255 | v25) + 0x180026690); // 0x18002120f
        int32_t v34 = v33 ^ *(int32_t *)((int64_t)(4 * v19 & 1020) + 0x180026690); // 0x18002120f
        int32_t v35 = *(int32_t *)(4 * ((int64_t)v22 >> v28 & 255 | v25) + 0x180026690); // 0x180021229
        int32_t v36 = v35 ^ *(int32_t *)((int64_t)(4 * v22 & 1020) + 0x180026690); // 0x180021229
        int32_t v37 = *(int32_t *)(4 * (v23 >> v28 & 255 | v25) + 0x180026690) ^ v26; // 0x18002124c
        v24 = v27 & 0xffffffff;
        int32_t v38 = v34; // 0x180021257
        int32_t v39 = v32; // 0x180021257
        int32_t v40 = v30; // 0x180021257
        v25 += 256;
        int32_t v41 = v36; // 0x180021257
        v26 = v37;
        while ((int32_t)v27 < 4) {
            // 0x1800211c0
            v27 = v24 + 1;
            v28 = 8 * v24 & 56;
            v29 = *(int32_t *)(4 * ((int64_t)v18 >> v28 & 255 | v25) + 0x180026690);
            v30 = v29 ^ v40;
            v31 = *(int32_t *)(4 * ((int64_t)v21 >> v28 & 255 | v25) + 0x180026690);
            v32 = v31 ^ v39;
            v33 = *(int32_t *)(4 * ((int64_t)v19 >> v28 & 255 | v25) + 0x180026690);
            v34 = v33 ^ v38;
            v35 = *(int32_t *)(4 * ((int64_t)v22 >> v28 & 255 | v25) + 0x180026690);
            v36 = v35 ^ v41;
            v37 = *(int32_t *)(4 * (v23 >> v28 & 255 | v25) + 0x180026690) ^ v26;
            v24 = v27 & 0xffffffff;
            v38 = v34;
            v39 = v32;
            v40 = v30;
            v25 += 256;
            v41 = v36;
            v26 = v37;
        }
        int64_t v42 = v9 + 20; // 0x180021156
        int64_t v43 = v30; // 0x1800211de
        int64_t v44 = -1; // 0x18002125d
        int64_t v45 = v44; // 0x18002126f
        int64_t v46 = v42; // 0x18002126f
        v12 = v34;
        v13 = v32;
        v14 = v43;
        v15 = v42;
        v16 = v36;
        v17 = v37;
        while (v44 != 0) {
            // 0x180021130
            v18 = *(int32_t *)v46 ^ (int32_t)v43;
            v19 = *(int32_t *)(v46 + 8) ^ v34;
            v20 = *(int32_t *)(v46 + 16) ^ v37;
            v21 = *(int32_t *)(v46 + 4) ^ v32;
            v22 = *(int32_t *)(v46 + 12) ^ v36;
            v23 = 0x100000000000000 * (int64_t)v20 >> 56;
            v24 = 1;
            v25 = 256;
            v26 = *(int32_t *)((int64_t)(4 * v20 & 1020) + 0x180026690);
            v27 = v24 + 1;
            v28 = 8 * v24 & 56;
            v29 = *(int32_t *)(4 * ((int64_t)v18 >> v28 & 255 | v25) + 0x180026690);
            v30 = v29 ^ *(int32_t *)((int64_t)(4 * v18 & 1020) + 0x180026690);
            v31 = *(int32_t *)(4 * ((int64_t)v21 >> v28 & 255 | v25) + 0x180026690);
            v32 = v31 ^ *(int32_t *)((int64_t)(4 * v21 & 1020) + 0x180026690);
            v33 = *(int32_t *)(4 * ((int64_t)v19 >> v28 & 255 | v25) + 0x180026690);
            v34 = v33 ^ *(int32_t *)((int64_t)(4 * v19 & 1020) + 0x180026690);
            v35 = *(int32_t *)(4 * ((int64_t)v22 >> v28 & 255 | v25) + 0x180026690);
            v36 = v35 ^ *(int32_t *)((int64_t)(4 * v22 & 1020) + 0x180026690);
            v37 = *(int32_t *)(4 * (v23 >> v28 & 255 | v25) + 0x180026690) ^ v26;
            v24 = v27 & 0xffffffff;
            v38 = v34;
            v39 = v32;
            v40 = v30;
            v25 += 256;
            v41 = v36;
            v26 = v37;
            while ((int32_t)v27 < 4) {
                // 0x1800211c0
                v27 = v24 + 1;
                v28 = 8 * v24 & 56;
                v29 = *(int32_t *)(4 * ((int64_t)v18 >> v28 & 255 | v25) + 0x180026690);
                v30 = v29 ^ v40;
                v31 = *(int32_t *)(4 * ((int64_t)v21 >> v28 & 255 | v25) + 0x180026690);
                v32 = v31 ^ v39;
                v33 = *(int32_t *)(4 * ((int64_t)v19 >> v28 & 255 | v25) + 0x180026690);
                v34 = v33 ^ v38;
                v35 = *(int32_t *)(4 * ((int64_t)v22 >> v28 & 255 | v25) + 0x180026690);
                v36 = v35 ^ v41;
                v37 = *(int32_t *)(4 * (v23 >> v28 & 255 | v25) + 0x180026690) ^ v26;
                v24 = v27 & 0xffffffff;
                v38 = v34;
                v39 = v32;
                v40 = v30;
                v25 += 256;
                v41 = v36;
                v26 = v37;
            }
            // 0x18002125d
            v42 = v46 + 20;
            v43 = v30;
            v44 = v45 - 1;
            v45 = v44;
            v46 = v42;
            v12 = v34;
            v13 = v32;
            v14 = v43;
            v15 = v42;
            v16 = v36;
            v17 = v37;
        }
        uint32_t v47 = *(int32_t *)v15 ^ (int32_t)v14; // 0x18002128e
        uint32_t v48 = v47 / 256 ^ *(int32_t *)((int64_t)(4 * v47 & 1020) + 0x180025e90); // 0x18002129f
        uint32_t v49 = v48 / 256 ^ *(int32_t *)((int64_t)(4 * v48 & 1020) + 0x180025e90); // 0x1800212b1
        uint32_t v50 = v49 / 256 ^ *(int32_t *)((int64_t)(4 * v49 & 1020) + 0x180025e90); // 0x1800212c2
        int32_t v51 = *(int32_t *)((int64_t)(4 * v50 & 1020) + 0x180025e90); // 0x1800212cd
        uint32_t v52 = v51 ^ v13 ^ *(int32_t *)(v15 + 4) ^ v50 / 256; // 0x1800212de
        uint32_t v53 = v52 / 256 ^ *(int32_t *)((int64_t)(4 * v52 & 1020) + 0x180025e90); // 0x1800212f0
        uint32_t v54 = v53 / 256 ^ *(int32_t *)((int64_t)(4 * v53 & 1020) + 0x180025e90); // 0x180021301
        uint32_t v55 = v54 / 256 ^ *(int32_t *)((int64_t)(4 * v54 & 1020) + 0x180025e90); // 0x180021313
        int32_t v56 = *(int32_t *)((int64_t)(4 * v55 & 1020) + 0x180025e90); // 0x180021320
        uint32_t v57 = *(int32_t *)(v15 + 8) ^ v12 ^ v56 ^ v55 / 256; // 0x18002132c
        uint32_t v58 = v57 / 256 ^ *(int32_t *)((int64_t)(4 * v57 & 1020) + 0x180025e90); // 0x18002133e
        uint32_t v59 = v58 / 256 ^ *(int32_t *)((int64_t)(4 * v58 & 1020) + 0x180025e90); // 0x18002134f
        uint32_t v60 = v59 / 256 ^ *(int32_t *)((int64_t)(4 * v59 & 1020) + 0x180025e90); // 0x180021361
        int32_t v61 = *(int32_t *)((int64_t)(4 * v60 & 1020) + 0x180025e90); // 0x18002136e
        uint32_t v62 = *(int32_t *)(v15 + 12) ^ v16 ^ v61 ^ v60 / 256; // 0x18002137a
        uint32_t v63 = v62 / 256 ^ *(int32_t *)((int64_t)(4 * v62 & 1020) + 0x180025e90); // 0x18002138c
        uint32_t v64 = v63 / 256 ^ *(int32_t *)((int64_t)(4 * v63 & 1020) + 0x180025e90); // 0x18002139d
        uint32_t v65 = v64 / 256 ^ *(int32_t *)((int64_t)(4 * v64 & 1020) + 0x180025e90); // 0x1800213af
        int32_t v66 = *(int32_t *)((int64_t)(4 * v65 & 1020) + 0x180025e90); // 0x1800213bc
        uint32_t v67 = *(int32_t *)(v15 + 16) ^ v17 ^ v66 ^ v65 / 256; // 0x1800213c8
        uint32_t v68 = v67 / 256 ^ *(int32_t *)((int64_t)(4 * v67 & 1020) + 0x180025e90); // 0x1800213df
        uint32_t v69 = v68 / 256 ^ *(int32_t *)((int64_t)(4 * v68 & 1020) + 0x180025e90); // 0x1800213ff
        uint32_t v70 = v69 / 256 ^ *(int32_t *)((int64_t)(4 * v69 & 1020) + 0x180025e90); // 0x180021411
        int32_t v71 = *(int32_t *)((int64_t)(4 * v70 & 1020) + 0x180025e90); // 0x18002141a
        v6 = v70 / 256 ^ v71;
        v7 = v15 + 20;
    }
    int64_t v72 = v5; // 0x18002142d
    int64_t v73 = v6; // 0x18002142d
    int64_t v74 = v7; // 0x18002142d
    if (v5 >= 8) {
        int64_t v75 = v5 / 8; // 0x180021436
        int64_t v76 = v75; // 0x18002143e
        char v77 = *(char *)v7; // 0x180021441
        char v78 = *(char *)(v7 + 1); // 0x180021452
        int32_t v79 = *(int32_t *)(4 * (int64_t)(v77 ^ (char)v6) + 0x180025e90); // 0x180021457
        uint32_t v80 = v79 ^ (int32_t)v6 / 256; // 0x18002145e
        char v81 = *(char *)(v7 + 2); // 0x18002146c
        int32_t v82 = *(int32_t *)(4 * (int64_t)(v78 ^ (char)v80) + 0x180025e90); // 0x180021471
        uint32_t v83 = v82 ^ v80 / 256; // 0x180021479
        char v84 = *(char *)(v7 + 3); // 0x180021489
        int32_t v85 = *(int32_t *)(4 * (int64_t)(v81 ^ (char)v83) + 0x180025e90); // 0x18002148e
        uint32_t v86 = v85 ^ v83 / 256; // 0x180021495
        char v87 = *(char *)(v7 + 4); // 0x1800214a3
        int32_t v88 = *(int32_t *)(4 * (int64_t)(v84 ^ (char)v86) + 0x180025e90); // 0x1800214a8
        uint32_t v89 = v88 ^ v86 / 256; // 0x1800214b0
        char v90 = *(char *)(v7 + 5); // 0x1800214c0
        int32_t v91 = *(int32_t *)(4 * (int64_t)(v87 ^ (char)v89) + 0x180025e90); // 0x1800214c5
        uint32_t v92 = v91 ^ v89 / 256; // 0x1800214cc
        char v93 = *(char *)(v7 + 6); // 0x1800214da
        int32_t v94 = *(int32_t *)(4 * (int64_t)(v90 ^ (char)v92) + 0x180025e90); // 0x1800214df
        uint32_t v95 = v94 ^ v92 / 256; // 0x1800214e7
        char v96 = *(char *)(v7 + 7); // 0x1800214f7
        v74 = v7 + 8;
        int32_t v97 = *(int32_t *)(4 * (int64_t)(v93 ^ (char)v95) + 0x180025e90); // 0x180021500
        uint32_t v98 = v97 ^ v95 / 256; // 0x180021507
        int32_t v99 = *(int32_t *)(4 * (int64_t)(v96 ^ (char)v98) + 0x180025e90); // 0x180021515
        v73 = v98 / 256 ^ v99;
        v76--;
        int64_t v100 = v73; // 0x180021524
        int64_t v101 = v74; // 0x180021524
        while (v76 != 0) {
            // 0x180021441
            v77 = *(char *)v101;
            v78 = *(char *)(v101 + 1);
            v79 = *(int32_t *)(4 * (int64_t)(v77 ^ (char)v100) + 0x180025e90);
            v80 = v79 ^ (int32_t)v100 / 256;
            v81 = *(char *)(v101 + 2);
            v82 = *(int32_t *)(4 * (int64_t)(v78 ^ (char)v80) + 0x180025e90);
            v83 = v82 ^ v80 / 256;
            v84 = *(char *)(v101 + 3);
            v85 = *(int32_t *)(4 * (int64_t)(v81 ^ (char)v83) + 0x180025e90);
            v86 = v85 ^ v83 / 256;
            v87 = *(char *)(v101 + 4);
            v88 = *(int32_t *)(4 * (int64_t)(v84 ^ (char)v86) + 0x180025e90);
            v89 = v88 ^ v86 / 256;
            v90 = *(char *)(v101 + 5);
            v91 = *(int32_t *)(4 * (int64_t)(v87 ^ (char)v89) + 0x180025e90);
            v92 = v91 ^ v89 / 256;
            v93 = *(char *)(v101 + 6);
            v94 = *(int32_t *)(4 * (int64_t)(v90 ^ (char)v92) + 0x180025e90);
            v95 = v94 ^ v92 / 256;
            v96 = *(char *)(v101 + 7);
            v74 = v101 + 8;
            v97 = *(int32_t *)(4 * (int64_t)(v93 ^ (char)v95) + 0x180025e90);
            v98 = v97 ^ v95 / 256;
            v99 = *(int32_t *)(4 * (int64_t)(v96 ^ (char)v98) + 0x180025e90);
            v73 = v98 / 256 ^ v99;
            v76--;
            v100 = v73;
            v101 = v74;
        }
        // 0x18002152a
        v72 = -8 * v75 + v5;
    }
    int64_t v102 = v72; // 0x18002152d
    int64_t v103 = v73; // 0x18002152d
    if (v72 == 0) {
        // 0x180021555
        return v73 & 0xffffffff ^ 0xffffffff;
    }
    int64_t v104 = v74; // 0x18002152d
    char v105 = *(char *)v104; // 0x180021530
    int32_t v106 = *(int32_t *)(4 * (int64_t)(v105 ^ (char)v103) + 0x180025e90); // 0x180021544
    v103 = v106 ^ (int32_t)v103 / 256;
    v102--;
    v104++;
    while (v102 != 0) {
        // 0x180021530
        v105 = *(char *)v104;
        v106 = *(int32_t *)(4 * (int64_t)(v105 ^ (char)v103) + 0x180025e90);
        v103 = v106 ^ (int32_t)v103 / 256;
        v102--;
        v104++;
    }
    // 0x180021555
    return v103 & 0xffffffff ^ 0xffffffff;
}

// Address range: 0x180021570 - 0x180021578
int64_t function_180021570(int32_t a1, int64_t a2, int64_t a3) {
    // 0x180021570
    return function_180021060(a1, a2, a3 & 0xffffffff);
}

// Address range: 0x180021580 - 0x180021868
int64_t function_180021580(int64_t a1, uint64_t a2, int64_t a3, int64_t a4) {
    int128_t v1 = __asm_movdqa(g14); // 0x18002159f
    int128_t v2 = __asm_movdqa(g11); // 0x1800215aa
    __asm_movdqu(v1);
    __asm_movdqu(v2);
    if ((int32_t)a4 == 0) {
        // 0x18002184b
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v3 = (0x100000000 * a3 >> 32) + a1; // 0x1800215c5
    uint64_t v4 = (0x100000000 * a4 >> 32) + a2; // 0x1800215c8
    uint64_t v5 = v4 - 12;
    uint64_t v6 = v4 - 7;
    int64_t v7 = a2;
    unsigned char v8 = *(char *)a1; // 0x180021630
    int64_t v9 = a1 + 1; // 0x180021633
    int64_t v10 = v8 / 16; // 0x18002163b
    int64_t v11 = v9; // 0x180021643
    int64_t v12 = v10; // 0x180021643
    int64_t v13 = v9; // 0x180021643
    int64_t v14 = v10; // 0x180021643
    int64_t v15; // 0x180021580
    unsigned char v16; // 0x180021650
    if (v8 > 239) {
        v15 = v11;
        v16 = *(char *)v15;
        v14 = v12 + (int64_t)v16;
        v13 = v15 + 1;
        v12 = v14;
        while (v13 < v3 - 15 == v16 == -1) {
            // 0x180021650
            v15 = v13;
            v16 = *(char *)v15;
            v14 = v12 + (int64_t)v16;
            v13 = v15 + 1;
            v12 = v14;
        }
        // 0x180021672
        if (v14 > -1 - v7 || v14 > -2 - v15) {
            // 0x18002184b
            __security_check_cookie(g17);
            return &g47;
        }
    }
    int64_t v17 = v14;
    int64_t v18 = v13;
    uint64_t v19 = v17 + v7; // 0x18002168c
    uint64_t v20 = v17 + v18;
    while (v19 <= v5 && v20 <= v3 - 8) {
        int64_t v21 = v7;
        *(int64_t *)v21 = *(int64_t *)(v18 - v7 + v21);
        int64_t v22 = v21 + 8; // 0x1800216c7
        while (v22 < v19) {
            // 0x1800216c0
            v21 = v22;
            *(int64_t *)v21 = *(int64_t *)(v18 - v7 + v21);
            v22 = v21 + 8;
        }
        uint16_t v23 = *(int16_t *)v20; // 0x1800216d9
        int64_t v24 = v23; // 0x1800216d9
        uint64_t v25 = v19 - v24; // 0x1800216e0
        if (v25 < a2) {
            // 0x18002184b
            __security_check_cookie(g17);
            return &g47;
        }
        int64_t v26 = v20 + 2; // 0x1800216dc
        unsigned char v27 = v8 & 15;
        int64_t v28 = v27; // 0x1800216ec
        *(int32_t *)v19 = (int32_t)v23;
        int64_t v29 = v26; // 0x1800216f7
        int64_t v30 = v28; // 0x1800216f7
        int64_t v31 = v26; // 0x1800216f7
        int64_t v32 = v28; // 0x1800216f7
        if (v27 == 15) {
            int64_t v33 = v29 + 1; // 0x180021704
            if (v33 > v3 - 5) {
                // 0x18002184b
                __security_check_cookie(g17);
                return &g47;
            }
            unsigned char v34 = *(char *)v29; // 0x180021700
            int64_t v35 = v30 + (int64_t)v34; // 0x180021710
            v29 = v33;
            v30 = v35;
            while (v34 == -1) {
                // 0x180021700
                v33 = v29 + 1;
                if (v33 > v3 - 5) {
                    // 0x18002184b
                    __security_check_cookie(g17);
                    return &g47;
                }
                // 0x180021710
                v34 = *(char *)v29;
                v35 = v30 + (int64_t)v34;
                v29 = v33;
                v30 = v35;
            }
            // 0x18002171c
            v31 = v33;
            v32 = v35;
            if (v35 > -1 - v19) {
                // 0x18002184b
                __security_check_cookie(g17);
                return &g47;
            }
        }
        // 0x180021729
        int64_t v36; // 0x180021580
        if (v23 >= 8) {
            // 0x18002176b
            *(int64_t *)v19 = *(int64_t *)v25;
            v36 = v25 + 8;
        } else {
            // 0x180021736
            *(char *)v19 = *(char *)v25;
            *(char *)(v19 + 1) = *(char *)(v25 + 1);
            *(char *)(v19 + 2) = *(char *)(v25 + 2);
            *(char *)(v19 + 3) = *(char *)(v25 + 3);
            int64_t v37; // bp-168, 0x180021580
            int64_t v38 = 4 * v24 + (int64_t)&v37;
            int64_t v39 = v25 + (int64_t)*(int32_t *)(v38 + 32); // 0x180021758
            *(int32_t *)(v19 + 4) = *(int32_t *)v39;
            v36 = v39 - (int64_t)*(int32_t *)(v38 + 64);
        }
        uint64_t v40 = v32 + 4; // 0x180021729
        uint64_t v41 = v40 + v19; // 0x18002172d
        int64_t v42 = v36;
        int64_t v43 = v19 + 8; // 0x180021775
        if (v41 > v5) {
            if (v41 > v4 - 5) {
                // 0x18002184b
                __security_check_cookie(g17);
                return &g47;
            }
            int64_t v44 = v43; // 0x180021792
            int64_t v45 = v42; // 0x180021792
            if (v6 > v43) {
                int64_t v46 = v42 + -8 - v19;
                int64_t v47 = v43;
                *(int64_t *)v47 = *(int64_t *)(v46 + v47);
                int64_t v48 = v47 + 8; // 0x1800217a7
                while (v48 < v6) {
                    // 0x1800217a0
                    v47 = v48;
                    *(int64_t *)v47 = *(int64_t *)(v46 + v47);
                    v48 = v47 + 8;
                }
                // 0x1800217b0
                v44 = v6;
                v45 = v46 + v6;
            }
            int64_t v49 = v44; // 0x1800217bf
            int64_t v50 = v45; // 0x1800217bf
            if (v44 < v41) {
                *(char *)v49 = *(char *)v50;
                int64_t v51 = v49 + 1; // 0x1800217da
                v49 = v51;
                v50++;
                while (v51 < v41) {
                    // 0x1800217d0
                    *(char *)v49 = *(char *)v50;
                    v51 = v49 + 1;
                    v49 = v51;
                    v50++;
                }
            }
        } else {
            // 0x1800217ea
            *(int64_t *)v43 = *(int64_t *)v42;
            if (v40 >= 17) {
                int64_t v52 = v19 + 16;
                int64_t v53 = v52 + 8;
                *(int64_t *)v52 = *(int64_t *)(-16 - v19 + v42 + v53);
                while (v53 < v41) {
                    // 0x180021800
                    v52 = v53;
                    v53 = v52 + 8;
                    *(int64_t *)v52 = *(int64_t *)(-16 - v19 + v42 + v53);
                }
            }
        }
        v7 = v41;
        v8 = *(char *)v31;
        v9 = v31 + 1;
        v10 = v8 / 16;
        v11 = v9;
        v12 = v10;
        int64_t v54 = v9; // 0x180021643
        int64_t v55 = v10; // 0x180021643
        if (v8 > 239) {
            v15 = v11;
            v16 = *(char *)v15;
            v14 = v12 + (int64_t)v16;
            v13 = v15 + 1;
            v12 = v14;
            while (v13 < v3 - 15 == v16 == -1) {
                // 0x180021650
                v15 = v13;
                v16 = *(char *)v15;
                v14 = v12 + (int64_t)v16;
                v13 = v15 + 1;
                v12 = v14;
            }
            // 0x180021672
            v54 = v13;
            v55 = v14;
            if (v14 > -1 - v7 || v14 > -2 - v15) {
                // 0x18002184b
                __security_check_cookie(g17);
                return &g47;
            }
        }
        // 0x18002168c
        v17 = v55;
        v18 = v54;
        v19 = v17 + v7;
        v20 = v17 + v18;
    }
    if (v19 <= v4 && v20 == v3) {
        // 0x180021827
        memcpy((int64_t *)v7, (int64_t *)v18, (int32_t)v17);
    }
    // 0x18002184b
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x180021870 - 0x180021a8c
int64_t function_180021870(int64_t a1, int64_t * a2, int64_t * a3, int64_t * a4, int64_t a5, int64_t a6) {
    int64_t v1 = a6;
    int64_t v2 = a5;
    *(int32_t *)a2 = 0;
    *a3 = 0;
    *(int32_t *)a4 = 0;
    if ((int32_t)function_180023380(a1) != 0) {
        // 0x1800218af
        return 0xffffffff;
    }
    int64_t * v3 = (int64_t *)(a1 + 96); // 0x1800218c0
    int64_t v4 = function_180022450(a1, *v3, &v2); // 0x1800218d6
    int64_t v5 = 0xffffffff; // 0x1800218e6
    if ((int32_t)v4 == 0) {
        // 0x1800218ec
        v5 = (int32_t)v2 != 0x4034b50 ? 0xffffff99 : 0;
    }
    int64_t v6 = function_1800226a0(a1, *v3, &v2); // 0x180021904
    int64_t v7 = function_1800226a0(a1, *v3, &v1); // 0x18002191a
    int64_t v8 = function_1800226a0(a1, *v3, &v2); // 0x180021930
    int64_t v9 = 0xffffffff; // 0x180021937
    if ((int32_t)v8 == 0) {
        int64_t v10 = (int32_t)(v7 | v6) == 0 ? v5 : 0xffffffff;
        v9 = v10;
        if (v10 != 0) {
            goto lab_0x18002195c;
        } else {
            int32_t v11 = *(int32_t *)(a1 + 188); // 0x180021941
            if (v11 != (int32_t)v2) {
                // 0x180021959
                v9 = 0xffffff99;
                goto lab_0x18002195c;
            } else {
                // 0x18002194d
                v9 = v10;
                if ((v11 & -13) == 0 == (v11 != 4)) {
                    goto lab_0x18002195c;
                } else {
                    // 0x180021959
                    v9 = 0xffffff99;
                    goto lab_0x18002195c;
                }
            }
        }
    } else {
        goto lab_0x18002195c;
    }
  lab_0x18002195c:;
    int64_t v12 = function_180022450(a1, *v3, &v2); // 0x180021968
    int64_t v13 = function_180022450(a1, *v3, &v2); // 0x18002197e
    int64_t v14 = 0xffffffff; // 0x180021989
    if ((int32_t)v13 == 0) {
        int64_t v15 = (int32_t)v12 != 0 ? 0xffffffff : v9 & 0xffffffff; // 0x18002197b
        v14 = v15;
        if (v15 == 0) {
            // 0x180021993
            v14 = v15;
            if (*(int32_t *)(a1 + 196) != (int32_t)v2) {
                // 0x18002199f
                v14 = (v1 & 8) == 0 ? 0xffffff99 : v15;
            }
        }
    }
    int64_t v16 = function_180022450(a1, *v3, &v2); // 0x1800219b3
    int64_t v17 = 0xffffffff; // 0x1800219ba
    if ((int32_t)v16 == 0) {
        // 0x1800219c0
        v17 = v14;
        if ((int32_t)v2 != -1) {
            // 0x1800219c9
            v17 = v14;
            if ((int32_t)v14 == 0) {
                // 0x1800219cd
                v17 = v14;
                if ((v2 & 0xffffffff) != *(int64_t *)(a1 + 200)) {
                    // 0x1800219d6
                    v17 = (v1 & 8) == 0 ? 0xffffff99 : v14 & 0xffffffff;
                }
            }
        }
    }
    int64_t v18 = function_180022450(a1, *v3, &v2); // 0x1800219ea
    int64_t v19 = 0xffffffff; // 0x1800219f1
    if ((int32_t)v18 == 0) {
        // 0x1800219f7
        v19 = v17;
        if ((int32_t)v2 != -1) {
            // 0x180021a00
            v19 = v17;
            if ((int32_t)v17 == 0) {
                // 0x180021a04
                v19 = v17;
                if ((v2 & 0xffffffff) != *(int64_t *)(a1 + 208)) {
                    // 0x180021a0d
                    v19 = (v1 & 8) == 0 ? 0xffffff99 : v17 & 0xffffffff;
                }
            }
        }
    }
    int64_t v20 = function_1800226a0(a1, *v3, &v2); // 0x180021a21
    int64_t v21 = 0xffffffff; // 0x180021a2c
    if ((int32_t)v20 == 0) {
        // 0x180021a32
        v21 = v19;
        if ((int32_t)v19 == 0) {
            int32_t v22 = *(int32_t *)(a1 + 216); // 0x180021a36
            v21 = v22 != (int32_t)v2 ? 0xffffff99 : v19 & 0xffffffff;
        }
    }
    // 0x180021a40
    int64_t v23; // 0x180021870
    int32_t v24 = v23;
    *(int32_t *)a2 = (int32_t)v2 + v24;
    int64_t v25 = function_1800226a0(a1, *v3, &v2); // 0x180021a4f
    *a3 = (v2 & 0xffffffff) + 30 + *(int64_t *)(a1 + 264);
    int32_t v26 = v2; // 0x180021a78
    *(int32_t *)a4 = v26;
    *(int32_t *)a2 = v26 + v24;
    return (int32_t)v25 != 0 ? 0xffffffff : v21 & 0xffffffff;
}

// Address range: 0x180021a90 - 0x180021ae4
int64_t function_180021a90(uint64_t a1, int64_t * a2) {
    int64_t v1 = (int64_t)a2;
    *(int32_t *)(v1 + 12) = (int32_t)(a1 / 0x10000) & 31;
    *(int32_t *)(v1 + 16) = ((int32_t)(a1 / 0x200000) & 15) - 1;
    *(int32_t *)(v1 + 20) = ((int32_t)(a1 / 0x2000000) & 127) + 1980;
    *(int32_t *)(v1 + 8) = (int32_t)(a1 / 2048) & 31;
    int64_t result = a1 / 32 & 63; // 0x180021ad9
    *(int32_t *)(v1 + 4) = (int32_t)result;
    *(int32_t *)a2 = 2 * (int32_t)a1 & 62;
    return result;
}

// Address range: 0x180021af0 - 0x180022031
int64_t function_180021af0(int64_t a1, int64_t a2, int32_t a3, int64_t a4, int64_t a5) {
    // 0x180021af0
    int32_t v1; // 0x180021af0
    uint32_t v2 = v1;
    int64_t v3 = a5;
    if (a1 == 0) {
        // 0x180021b24
        return a1 + 0xffffff9a & 0xffffffff;
    }
    int64_t v4 = function_180023380(a1); // 0x180021b61
    int64_t * v5 = (int64_t *)(a1 + 96);
    int64_t v6 = 0xffffffff; // 0x180021b6b
    if ((int32_t)v4 == 0) {
        int64_t v7 = function_180022450(a1, *v5, &v3); // 0x180021b7c
        v6 = 0xffffffff;
        if ((int32_t)v7 == 0) {
            // 0x180021b89
            v6 = (int32_t)v3 != 0x2014b50 ? 0xffffff99 : 0;
        }
    }
    // 0x180021b9b
    int128_t v8; // bp-184, 0x180021af0
    int64_t v9 = function_1800226a0(a1, *v5, (int64_t *)&v8); // 0x180021ba7
    int64_t v10; // bp-180, 0x180021af0
    int64_t v11 = function_1800226a0(a1, *v5, &v10); // 0x180021bbc
    int64_t v12; // bp-176, 0x180021af0
    int64_t v13 = function_1800226a0(a1, *v5, &v12); // 0x180021bd1
    int64_t v14; // bp-172, 0x180021af0
    int64_t v15 = function_1800226a0(a1, *v5, &v14); // 0x180021be6
    int128_t v16; // bp-168, 0x180021af0
    int64_t v17 = function_180022450(a1, *v5, (int64_t *)&v16); // 0x180021bfb
    int128_t v18; // bp-120, 0x180021af0
    function_180021a90((int64_t)v16 & 0xffffffff, (int64_t *)&v18);
    int64_t v19; // bp-164, 0x180021af0
    int64_t v20 = function_180022450(a1, *v5, &v19); // 0x180021c1c
    int64_t v21 = function_180022450(a1, *v5, &v3); // 0x180021c31
    int64_t v22 = v3 & 0xffffffff; // bp-160, 0x180021c49
    int64_t v23 = function_180022450(a1, *v5, &v3); // 0x180021c4d
    int64_t v24 = v3 & 0xffffffff; // bp-152, 0x180021c65
    int32_t v25; // bp-144, 0x180021af0
    int64_t v26 = function_1800226a0(a1, *v5, (int64_t *)&v25); // 0x180021c69
    int32_t v27; // bp-140, 0x180021af0
    int64_t v28 = function_1800226a0(a1, *v5, (int64_t *)&v27); // 0x180021c7e
    int128_t v29; // bp-136, 0x180021af0
    int64_t v30 = function_1800226a0(a1, *v5, (int64_t *)&v29); // 0x180021c93
    int32_t v31; // bp-132, 0x180021af0
    int64_t v32 = function_1800226a0(a1, *v5, (int64_t *)&v31); // 0x180021ca8
    int64_t v33; // bp-128, 0x180021af0
    int64_t v34 = function_1800226a0(a1, *v5, &v33); // 0x180021cbd
    int64_t v35; // bp-124, 0x180021af0
    int64_t v36 = function_180022450(a1, *v5, &v35); // 0x180021cd2
    int64_t v37 = (int32_t)(v11 | v9 | v13 | v15 | v17 | v20 | v21 | v23 | v26 | v28 | v30 | v32 | v34 | v36) == 0 ? v6 : 0xffffffff;
    int64_t v38 = function_180022450(a1, *v5, &v3); // 0x180021ce7
    int64_t v39 = v25; // 0x180021cec
    int32_t v40 = v38; // 0x180021cf0
    int64_t v41 = v40 != 0 ? 0xffffffff : v37;
    int64_t v42 = v3 & 0xffffffff; // 0x180021cf5
    int64_t v43 = v42; // bp-192, 0x180021cf8
    int64_t v44 = v38; // 0x180021cff
    int64_t v45 = v41; // 0x180021cff
    int64_t v46 = v39; // 0x180021cff
    int64_t v47; // 0x180021af0
    int64_t v48; // 0x180021af0
    int64_t v49; // 0x180021d44
    if (v41 != 0) {
        goto lab_0x180021de1;
    } else {
        // 0x180021d05
        v47 = v38;
        v48 = v41;
        v49 = v39;
        if (a4 == 0) {
            goto lab_0x180021d4f;
        } else {
            int64_t v50; // 0x180021af0
            if (v1 <= v25) {
                // 0x180021d1b
                v50 = v1;
            } else {
                // 0x180021d12
                *(char *)(v39 + a4) = 0;
                v50 = v39;
            }
            int64_t v51 = v38; // 0x180021d21
            int64_t v52 = v41; // 0x180021d21
            if (v1 != 0 && v25 != 0) {
                // 0x180021d27
                v52 = v40 != (int32_t)v50 ? 0xffffffff : v41;
                v51 = 0xffffffff;
            }
            // 0x180021d44
            v48 = v52;
            v47 = v51;
            v49 = v39 - v50 & 0xffffffff;
            v44 = v47;
            v45 = v48;
            v46 = v49;
            if ((int32_t)v48 != 0) {
                goto lab_0x180021de1;
            } else {
                goto lab_0x180021d4f;
            }
        }
    }
  lab_0x180021de1:;
    int64_t v53 = v44; // 0x180021de5
    int64_t v54 = v45; // 0x180021de5
    int64_t v55 = v27; // 0x180021de5
    int64_t v56 = v27 + (int32_t)v46; // 0x180021de5
    goto lab_0x180021de8;
  lab_0x180021de8:
    // 0x180021de8
    if ((int32_t)v54 != 0) {
        // 0x180022007
        return v54 & 0xffffffff;
    }
    int32_t v57 = v55; // 0x180021df0
    int64_t v58 = v53; // 0x180021df3
    int64_t v59 = v42; // 0x180021df3
    int64_t v60 = v54; // 0x180021df3
    int64_t v61 = v56; // 0x180021df3
    if (v57 != 0) {
        int32_t v62 = (int32_t)v56 - v57; // 0x180021df9
        v3 = v62;
        int64_t v63 = v53; // 0x180021e00
        int64_t v64 = v54; // 0x180021e00
        int64_t v65 = 0; // 0x180021e00
        if (v62 != 0) {
            int64_t v66 = function_180023380(a1); // 0x180021e10
            v63 = v66;
            v64 = 0xffffffff;
            v65 = v62;
            if ((int32_t)v66 == 0) {
                // 0x180021e19
                v3 = 0;
                v63 = v66;
                v64 = v54;
                v65 = 0;
            }
        }
        int64_t v67 = v63; // 0x180021e28
        int64_t v68 = v42; // 0x180021e28
        int64_t v69 = v64; // 0x180021e28
        int64_t v70 = v65; // 0x180021e28
        if (v55 != 0) {
            // 0x180021e32
            int32_t v71; // bp-196, 0x180021af0
            int64_t v72 = function_1800226a0(a1, *v5, (int64_t *)&v71); // 0x180021e3e
            int32_t v73; // bp-200, 0x180021af0
            int64_t v74 = function_1800226a0(a1, *v5, (int64_t *)&v73); // 0x180021e55
            int64_t v75 = (int32_t)(v74 | v72) == 0 ? v64 & 0xffffffff : 0xffffffff; // 0x180021e61
            int64_t v76; // 0x180021af0
            int64_t v77; // 0x180021af0
            int64_t v78; // 0x180021af0
            int64_t v79; // 0x180021af0
            int64_t v80; // 0x180021af0
            int64_t v81; // 0x180021af0
            int64_t v82; // 0x180021af0
            int64_t v83; // 0x180021af0
            int64_t v84; // 0x180021af0
            int64_t v85; // 0x180021af0
            int64_t v86; // 0x180021af0
            int64_t v87; // 0x180021af0
            int64_t v88; // bp-88, 0x180021af0
            int64_t v89; // 0x180021eab
            int64_t v90; // 0x180021ebb
            int64_t v91; // 0x180021ed0
            int64_t v92; // 0x180021ed5
            int64_t v93; // 0x180021ee1
            int64_t v94; // 0x180021ef5
            int64_t v95; // 0x180021f13
            int64_t v96; // 0x180021e86
            if (v71 != 1) {
                // 0x180021f03
                v95 = function_180023380(a1);
                v80 = v95;
                v82 = v42;
                v84 = (int32_t)v95 != 0 ? 0xffffffff : v75;
                v79 = v55;
            } else {
                // 0x180021e70
                v85 = v75;
                v76 = v55;
                if (v24 == 0xffffffff) {
                    // 0x180021e7b
                    v96 = function_180022520(a1, *v5, &v24);
                    v85 = (int32_t)v96 != 0 ? 0xffffffff : v75;
                    v76 = v27;
                }
                // 0x180021e9a
                v86 = v85;
                v90 = v86;
                v77 = v76;
                if (v22 == 0xffffffff) {
                    // 0x180021ea0
                    v89 = function_180022520(a1, *v5, &v22);
                    v90 = (int32_t)v89 != 0 ? 0xffffffff : v86 & 0xffffffff;
                    v77 = v27;
                }
                // 0x180021ebf
                v78 = v77;
                v87 = v90;
                v92 = v42;
                v93 = v87;
                if (v42 == 0xffffffff) {
                    // 0x180021ec4
                    v91 = function_180022520(a1, *v5, &v43);
                    v92 = v43;
                    v93 = (int32_t)v91 != 0 ? 0xffffffff : v87 & 0xffffffff;
                }
                // 0x180021ee5
                v83 = v93;
                v81 = v92;
                v80 = 0xffffffff;
                v82 = v81;
                v84 = v83;
                v79 = v78;
                if (v31 == -1) {
                    // 0x180021eea
                    v94 = function_180022450(a1, *v5, &v88);
                    v80 = v94;
                    v82 = v81;
                    v84 = (int32_t)v94 == 0 ? v83 : 0xffffffff;
                    v79 = v78;
                }
            }
            int64_t v97 = v79;
            int64_t v98 = v84;
            int64_t v99 = v82;
            int64_t v100 = 4 + (int64_t)v73; // 0x180021f22
            int64_t v101 = v98; // 0x180021f28
            int64_t v102 = v100 & 0xffffffff; // 0x180021f28
            while ((int32_t)v100 < (int32_t)v97) {
                int64_t v103 = v97;
                int64_t v104 = v99;
                v72 = function_1800226a0(a1, *v5, (int64_t *)&v71);
                v74 = function_1800226a0(a1, *v5, (int64_t *)&v73);
                v75 = (int32_t)(v74 | v72) == 0 ? v101 & 0xffffffff : 0xffffffff;
                if (v71 != 1) {
                    // 0x180021f03
                    v95 = function_180023380(a1);
                    v80 = v95;
                    v82 = v104;
                    v84 = (int32_t)v95 != 0 ? 0xffffffff : v75;
                    v79 = v103;
                } else {
                    // 0x180021e70
                    v85 = v75;
                    v76 = v103;
                    if (v24 == 0xffffffff) {
                        // 0x180021e7b
                        v96 = function_180022520(a1, *v5, &v24);
                        v85 = (int32_t)v96 != 0 ? 0xffffffff : v75;
                        v76 = v27;
                    }
                    // 0x180021e9a
                    v86 = v85;
                    v90 = v86;
                    v77 = v76;
                    if (v22 == 0xffffffff) {
                        // 0x180021ea0
                        v89 = function_180022520(a1, *v5, &v22);
                        v90 = (int32_t)v89 != 0 ? 0xffffffff : v86 & 0xffffffff;
                        v77 = v27;
                    }
                    // 0x180021ebf
                    v78 = v77;
                    v87 = v90;
                    v92 = v104;
                    v93 = v87;
                    if (v104 == 0xffffffff) {
                        // 0x180021ec4
                        v91 = function_180022520(a1, *v5, &v43);
                        v92 = v43;
                        v93 = (int32_t)v91 != 0 ? 0xffffffff : v87 & 0xffffffff;
                    }
                    // 0x180021ee5
                    v83 = v93;
                    v81 = v92;
                    v80 = 0xffffffff;
                    v82 = v81;
                    v84 = v83;
                    v79 = v78;
                    if (v31 == -1) {
                        // 0x180021eea
                        v94 = function_180022450(a1, *v5, &v88);
                        v80 = v94;
                        v82 = v81;
                        v84 = (int32_t)v94 == 0 ? v83 : 0xffffffff;
                        v79 = v78;
                    }
                }
                // 0x180021f1e
                v97 = v79;
                v98 = v84;
                v99 = v82;
                v100 = v102 + 4 + (int64_t)v73;
                v101 = v98;
                v102 = v100 & 0xffffffff;
            }
            // 0x180021f2e
            v67 = v80;
            v68 = v99;
            v69 = v98;
            v70 = v3 & 0xffffffff;
        }
        // 0x180021f36
        v58 = v67;
        v59 = v68;
        v60 = v69;
        v61 = v70;
        if ((int32_t)v69 != 0) {
            // 0x180022007
            return v69 & 0xffffffff;
        }
    }
    int64_t v105 = v60; // 0x180021f45
    int64_t v106; // 0x180021af0
    if (v106 != 0) {
        uint32_t v107 = (int32_t)v29; // 0x180021f4f
        int64_t v108; // 0x180021af0
        if (v1 <= v107) {
            // 0x180021f5f
            v108 = v1;
        } else {
            int64_t v109 = (int64_t)v29 & 0xffffffff; // 0x180021f47
            *(char *)(v109 + v106) = 0;
            v108 = v109;
        }
        // 0x180021f63
        v3 = 0x100000000 * v108 >> 32;
        int64_t v110 = v58; // 0x180021f66
        int64_t v111 = v60; // 0x180021f66
        if ((int32_t)v61 != 0) {
            // 0x180021f68
            v110 = function_180023380(a1);
            v111 = (int32_t)v110 != 0 ? 0xffffffff : v60 & 0xffffffff;
        }
        // 0x180021f93
        if (v1 != 0 && v107 != 0) {
            // 0x180021f9d
            if ((int32_t)v110 != (int32_t)v3) {
                // 0x180022007
                return 0xffffffff;
            }
        }
        // 0x180021fb9
        v105 = v111;
        if ((int32_t)v111 != 0) {
            // 0x180022007
            return v111 & 0xffffffff;
        }
    }
    // 0x180021fbd
    if (a2 != 0) {
        int128_t v112 = __asm_movaps(0); // 0x180021fc2
        int128_t v113 = __asm_movaps(0); // 0x180021fc7
        int64_t v114; // 0x180021af0
        __asm_movups_4(*(int128_t *)&v114, v112);
        int128_t v115 = __asm_movaps((int128_t)v24); // 0x180021fd0
        __asm_movups_4(*(int128_t *)(a2 + 16), v113);
        int128_t v116 = __asm_movaps(0); // 0x180021fd9
        __asm_movups_4(*(int128_t *)(a2 + 32), v115);
        int128_t v117 = __asm_movaps(0); // 0x180021fe2
        __asm_movups_4(*(int128_t *)(a2 + 48), v116);
        int128_t v118 = __asm_movsd(v106); // 0x180021feb
        __asm_movups_4(*(int128_t *)(a2 + 64), v117);
        *(int64_t *)(a2 + 80) = __asm_movsd_5(v118);
    }
    // 0x180021ffb
    if (a3 != 0) {
        // 0x180022004
        *(int64_t *)(int64_t)a3 = v59;
    }
    // 0x180022007
    return v105 & 0xffffffff;
  lab_0x180021d4f:
    // 0x180021d4f
    v44 = v47;
    v45 = v48;
    v46 = v49;
    if (v106 == 0) {
        goto lab_0x180021de1;
    } else {
        uint32_t v119 = v27; // 0x180021d5c
        int64_t v120 = v119 < v2 ? v119 : v2;
        v3 = v120;
        int64_t v121 = v120; // 0x180021d73
        int64_t v122 = v47; // 0x180021d73
        int64_t v123 = v48; // 0x180021d73
        int64_t v124 = 0; // 0x180021d73
        if (v49 != 0) {
            // 0x180021d75
            v122 = function_180023380(a1);
            v121 = v3;
            v123 = (int32_t)v122 != 0 ? 0xffffffff : v48;
            v124 = (int32_t)v122 != 0 ? v49 : 0;
        }
        int64_t v125 = v119; // 0x180021d5c
        if (v2 == 0 || v119 == 0) {
            int64_t v126 = v125 - v121; // 0x180021dda
            v53 = v126 & 0xffffffff;
            v54 = v123;
            v55 = v125;
            v56 = v124 + v126 & 0xffffffff;
        } else {
            int64_t v127 = v125 - v121; // 0x180021dcc
            v53 = v127 & 0xffffffff;
            v54 = (v122 & 0xffffffff) != v121 ? 0xffffffff : v123 & 0xffffffff;
            v55 = v125;
            v56 = v124 + v127 & 0xffffffff;
        }
        goto lab_0x180021de8;
    }
}

// Address range: 0x180022040 - 0x1800221b4
int64_t function_180022040(int64_t * a1, int64_t a2, int64_t a3) {
    int64_t v1 = (int64_t)a1;
    if ((int32_t)function_180023380(v1) != 0) {
        // 0x180022070
        return 0;
    }
    uint64_t v2 = function_1800233b0(v1); // 0x180022089
    int64_t * mem = malloc(1028); // 0x18002209d
    int64_t result = (int64_t)mem; // 0x18002209d
    if (mem == NULL) {
        // 0x180022070
        return result;
    }
    uint64_t v3 = v2 < 0xffff ? v2 : 0xffff; // 0x180022099
    int64_t v4 = 4; // 0x1800220c9
    int64_t v5 = 0; // 0x1800220c9
    if (v3 <= 4) {
        // 0x180022192
        free(mem);
        return 0;
    }
    int64_t v6; // 0x180022040
    int64_t result2; // 0x180022040
    uint64_t v7; // 0x1800220e0
    while (true) {
      lab_0x1800220e0:;
        int64_t v8 = v5;
        int32_t v9 = function_180023380(v1); // 0x180022124
        result2 = v8;
        if (v9 != 0) {
            // break -> 0x180022192
            break;
        }
        // 0x180022128
        v7 = v4 + 1024;
        v4 = v7 > v3 ? v3 : v7;
        int64_t v10 = v4 < 1028 ? v4 : 1028;
        result2 = v8;
        if (v9 != (int32_t)v10) {
            // break -> 0x180022192
            break;
        }
        int64_t v11 = v10 + 0xfffffffd; // 0x18002213f
        v6 = v8;
        if ((int32_t)v11 >= 1) {
            int64_t v12 = v2 - v4; // 0x1800220f7
            int64_t v13 = 0x100000000 * v11 >> 32;
            int64_t v14 = v13 - 1; // 0x180022150
            int64_t v15 = (v11 & 0xffffffff) + 0xffffffff; // 0x180022153
            int64_t v16; // 0x180022040
            int64_t v17; // 0x18002217a
            if (*(char *)(v14 + result) == 80) {
                // 0x18002215b
                v16 = v13 + result;
                if (*(char *)v16 == 75) {
                    // 0x180022162
                    if (*(char *)(v16 + 1) == 5) {
                        // 0x180022169
                        if (*(char *)(v16 + 2) == 6) {
                            // 0x180022177
                            v17 = (0x100000000 * v15 >> 32) + v12;
                            v6 = v17;
                            result2 = v17;
                            if (v17 != 0) {
                                goto lab_0x180022192_2;
                            } else {
                                goto lab_0x18002217f;
                            }
                        }
                    }
                }
            }
            int64_t v18 = v15; // 0x180022173
            v6 = v8;
            while (v14 >= 0 == (v14 != 0)) {
                // 0x180022150
                v13 = v14;
                v14 = v13 - 1;
                v15 = (v18 & 0xffffffff) + 0xffffffff;
                if (*(char *)(v14 + result) == 80) {
                    // 0x18002215b
                    v16 = v13 + result;
                    if (*(char *)v16 == 75) {
                        // 0x180022162
                        if (*(char *)(v16 + 1) == 5) {
                            // 0x180022169
                            if (*(char *)(v16 + 2) == 6) {
                                // 0x180022177
                                v17 = (0x100000000 * v15 >> 32) + v12;
                                v6 = v17;
                                result2 = v17;
                                if (v17 != 0) {
                                    goto lab_0x180022192_2;
                                } else {
                                    goto lab_0x18002217f;
                                }
                            }
                        }
                    }
                }
                // 0x180022170
                v18 = v15;
                v6 = v8;
            }
        }
        goto lab_0x18002217f;
    }
  lab_0x180022192_2:
    // 0x180022192
    free(mem);
    return result2;
  lab_0x18002217f:
    // 0x18002217f
    v5 = v6;
    result2 = v5;
    if (v3 <= v7) {
        // break -> 0x180022192
        goto lab_0x180022192_2;
    }
    goto lab_0x1800220e0;
}

// Address range: 0x1800221c0 - 0x1800223d7
int64_t function_1800221c0(int64_t * a1, int64_t a2, int64_t a3) {
    int64_t v1 = (int64_t)a1;
    if ((int32_t)function_180023380(v1) != 0) {
        // 0x1800221ef
        return 0;
    }
    int64_t v2 = function_1800233b0(v1); // 0x18002220f
    int32_t v3 = v2; // bp+24, 0x180022217
    int64_t * mem = malloc(1028); // 0x180022228
    if (mem == NULL) {
        // 0x1800221ef
        return 0;
    }
    uint64_t v4 = v2 < 0xffff ? v2 : 0xffff; // 0x180022224
    if (v4 <= 4) {
        // 0x1800222f1
        free(mem);
        // 0x1800221ef
        return 0;
    }
    int64_t v5 = (int64_t)mem; // 0x180022228
    int64_t v6 = 4; // 0x180022263
    int64_t v7 = 0;
    int64_t v8; // 0x1800221c0
    int64_t v9; // 0x1800221c0
    uint64_t v10; // 0x180022250
    while (true) {
      lab_0x180022250:;
        int64_t v11 = v7;
        int32_t v12 = function_180023380(v1); // 0x18002228f
        v9 = v11;
        if (v12 != 0) {
            // break -> 0x1800222f1
            break;
        }
        // 0x180022293
        v10 = v6 + 1024;
        v6 = v10 > v4 ? v4 : v10;
        int64_t v13 = v6 < 1028 ? v6 : 1028;
        v9 = v11;
        if (v12 != (int32_t)v13) {
            // break -> 0x1800222f1
            break;
        }
        int64_t v14 = v13 + 0xfffffffd; // 0x1800222a8
        v8 = v11;
        if ((int32_t)v14 >= 1) {
            int64_t v15 = v2 - v6; // 0x180022267
            int64_t v16 = 0x100000000 * v14 >> 32;
            int64_t v17 = v16 - 1; // 0x1800222b2
            int64_t v18 = (v14 & 0xffffffff) + 0xffffffff; // 0x1800222b5
            int64_t v19; // 0x1800221c0
            int64_t v20; // 0x1800222dc
            if (*(char *)(v17 + v5) == 80) {
                // 0x1800222bd
                v19 = v16 + v5;
                if (*(char *)v19 == 75) {
                    // 0x1800222c4
                    if (*(char *)(v19 + 1) == 6) {
                        // 0x1800222cb
                        if (*(char *)(v19 + 2) == 7) {
                            // 0x1800222d9
                            v20 = (0x100000000 * v18 >> 32) + v15;
                            v8 = v20;
                            v9 = v20;
                            if (v20 != 0) {
                                goto lab_0x1800222f1_2;
                            } else {
                                goto lab_0x1800222e1;
                            }
                        }
                    }
                }
            }
            int64_t v21 = v18; // 0x1800222d5
            v8 = v11;
            while (v17 >= 0 == (v17 != 0)) {
                // 0x1800222b2
                v16 = v17;
                v17 = v16 - 1;
                v18 = (v21 & 0xffffffff) + 0xffffffff;
                if (*(char *)(v17 + v5) == 80) {
                    // 0x1800222bd
                    v19 = v16 + v5;
                    if (*(char *)v19 == 75) {
                        // 0x1800222c4
                        if (*(char *)(v19 + 1) == 6) {
                            // 0x1800222cb
                            if (*(char *)(v19 + 2) == 7) {
                                // 0x1800222d9
                                v20 = (0x100000000 * v18 >> 32) + v15;
                                v8 = v20;
                                v9 = v20;
                                if (v20 != 0) {
                                    goto lab_0x1800222f1_2;
                                } else {
                                    goto lab_0x1800222e1;
                                }
                            }
                        }
                    }
                }
                // 0x1800222d2
                v21 = v18;
                v8 = v11;
            }
        }
        goto lab_0x1800222e1;
    }
    goto lab_0x1800222f1_2;
  lab_0x1800222e1:
    // 0x1800222e1
    v7 = v8;
    v9 = v7;
    if (v4 <= v10) {
        // break -> 0x1800222f1
        goto lab_0x1800222f1_2;
    }
    goto lab_0x180022250;
  lab_0x1800222f1_2:
    // 0x1800222f1
    free(mem);
    int64_t result2; // 0x1800221c0
    if (v9 == 0) {
        int64_t result = result2;
        return result;
    }
    // 0x180022308
    if ((int32_t)function_180023380(v1) != 0 || (int32_t)function_180022450(v1, a2, (int64_t *)&v3) != 0) {
        // 0x1800221ef
        return 0;
    }
    int32_t v22 = function_180022450(v1, a2, (int64_t *)&v3); // 0x180022345
    int64_t v23; // bp+32, 0x1800221c0
    if (v22 != 0 || v3 != v22 || (int32_t)function_180022520(v1, a2, &v23) != 0 || (int32_t)function_180022450(v1, a2, (int64_t *)&v3) != 0 || v3 != 1 || (int32_t)function_180023380(v1) != 0) {
        // 0x1800221ef
        return 0;
    }
    int64_t v24 = function_180022450(v1, a2, (int64_t *)&v3); // 0x1800223a3
    result2 = 0;
    if ((int32_t)v24 == 0) {
        // 0x1800223b0
        result2 = v3 != 0x6064b50 ? 0 : v23;
    }
    // 0x1800221ef
    return result2;
}

// Address range: 0x1800223e0 - 0x180022446
int64_t function_1800223e0(int64_t a1, int64_t a2, int32_t * a3) {
    // 0x1800223e0
    int64_t v1; // 0x1800223e0
    int32_t v2 = v1; // 0x18002240a
    if (v2 != 1) {
        // 0x180022428
        return v2 == 0 ? 0 : 0xffffffff;
    }
    // 0x18002240f
    int32_t v3; // 0x1800223e0
    *a3 = v3 & 255;
    return 0;
}

// Address range: 0x180022450 - 0x18002251d
int64_t function_180022450(int64_t a1, int64_t a2, int64_t * a3) {
    int32_t v1 = 0; // bp+32, 0x180022468
    int64_t v2 = function_1800223e0(a1, a2, &v1); // 0x18002247b
    int64_t v3 = v1; // 0x180022480
    int32_t v4 = v2;
    int32_t v5 = v4; // 0x18002248d
    int64_t v6 = v2; // 0x18002248d
    int64_t v7 = v3; // 0x18002248d
    if (v4 == 0) {
        // 0x18002248f
        v6 = function_1800223e0(a1, a2, &v1);
        v5 = v6;
        v7 = v1;
    }
    int32_t v8 = v5; // 0x1800224b2
    int64_t v9 = v6; // 0x1800224b2
    int64_t v10 = v7; // 0x1800224b2
    if (v5 == 0) {
        // 0x1800224b4
        v9 = function_1800223e0(a1, a2, &v1);
        v8 = v9;
        v10 = v1;
    }
    // 0x1800224cc
    if (v8 != 0) {
        // 0x1800224fd
        *(int32_t *)a3 = 0;
        // 0x180022504
        return v9 & 0xffffffff & 0xffffffff;
    }
    int64_t v11 = function_1800223e0(a1, a2, &v1); // 0x1800224e3
    int64_t v12 = v11 & 0xffffffff; // 0x1800224e8
    if ((int32_t)v11 != 0) {
        // 0x1800224fd
        *(int32_t *)a3 = 0;
        // 0x180022504
        return v12 & 0xffffffff;
    }
    // 0x1800224ef
    *(int32_t *)a3 = 0x1000000 * v1 + (int32_t)(256 * v7 | v3 | 0x10000 * v10);
    // 0x180022504
    return v12 & 0xffffffff;
}

// Address range: 0x180022520 - 0x180022691
int64_t function_180022520(int64_t a1, int64_t a2, int64_t * a3) {
    int32_t v1 = 0; // bp+32, 0x180022538
    int64_t v2 = function_1800223e0(a1, a2, &v1); // 0x18002254b
    int64_t v3 = v1; // 0x180022550
    int32_t v4 = v2;
    int32_t v5 = v4; // 0x18002255d
    int64_t v6 = v2; // 0x18002255d
    int64_t v7 = v3; // 0x18002255d
    if (v4 == 0) {
        // 0x18002255f
        v6 = function_1800223e0(a1, a2, &v1);
        v5 = v6;
        v7 = v1;
    }
    int64_t v8 = 0x100000000 * v7;
    int32_t v9 = v5; // 0x180022584
    int64_t v10 = v8; // 0x180022584
    int64_t v11 = v6; // 0x180022584
    int64_t v12 = v7; // 0x180022584
    if (v5 == 0) {
        // 0x180022586
        v11 = function_1800223e0(a1, a2, &v1);
        v12 = v1;
        v9 = v11;
        v10 = 0x100000000 * v12;
    }
    int32_t v13 = v9; // 0x1800225ab
    int64_t v14 = v10; // 0x1800225ab
    int64_t v15 = v11; // 0x1800225ab
    int64_t v16 = v12; // 0x1800225ab
    if (v9 == 0) {
        // 0x1800225ad
        v15 = function_1800223e0(a1, a2, &v1);
        v16 = v1;
        v13 = v15;
        v14 = 0x100000000 * v16;
    }
    int32_t v17 = v13; // 0x1800225d2
    int64_t v18 = v14; // 0x1800225d2
    int64_t v19 = v15; // 0x1800225d2
    int64_t v20 = v16; // 0x1800225d2
    if (v13 == 0) {
        // 0x1800225d4
        v19 = function_1800223e0(a1, a2, &v1);
        v20 = v1;
        v17 = v19;
        v18 = 0x100000000 * v20;
    }
    int32_t v21 = v17; // 0x1800225f9
    int64_t v22 = v19; // 0x1800225f9
    int64_t v23 = v20; // 0x1800225f9
    if (v17 == 0) {
        // 0x1800225fb
        v22 = function_1800223e0(a1, a2, &v1);
        v21 = v22;
        v23 = v1;
    }
    int32_t v24 = v21; // 0x180022620
    int64_t v25 = v22; // 0x180022620
    int64_t v26 = v23; // 0x180022620
    if (v21 == 0) {
        // 0x180022622
        v25 = function_1800223e0(a1, a2, &v1);
        v24 = v25;
        v26 = v1;
    }
    // 0x18002263a
    if (v24 != 0) {
        // 0x180022678
        *a3 = 0;
        return v25 & 0xffffffff;
    }
    int64_t v27 = function_1800223e0(a1, a2, &v1); // 0x180022654
    int64_t v28 = 0; // 0x18002265e
    if ((int32_t)v27 == 0) {
        // 0x180022660
        v28 = v8 >> 24 | v3 | v10 >> 16 | v14 >> 8 | v18 | 0x10000000000 * v23 | 0x1000000000000 * v26 | 0x100000000000000 * (int64_t)v1;
    }
    // 0x180022678
    *a3 = v28;
    return v27 & 0xffffffff;
}

// Address range: 0x1800226a0 - 0x18002271c
int64_t function_1800226a0(int64_t a1, int64_t a2, int64_t * a3) {
    int32_t v1 = 0; // bp+32, 0x1800226b7
    int64_t v2 = function_1800223e0(a1, a2, &v1); // 0x1800226ca
    if ((int32_t)v2 != 0) {
        // 0x1800226fe
        *(int32_t *)a3 = 0;
        // 0x180022704
        return v2 & 0xffffffff & 0xffffffff;
    }
    int64_t v3 = function_1800223e0(a1, a2, &v1); // 0x1800226e5
    int64_t v4 = v3 & 0xffffffff; // 0x1800226ea
    if ((int32_t)v3 != 0) {
        // 0x1800226fe
        *(int32_t *)a3 = 0;
        // 0x180022704
        return v4 & 0xffffffff;
    }
    // 0x1800226f1
    *(int32_t *)a3 = 256 * v1 | v1;
    // 0x180022704
    return v4 & 0xffffffff;
}

// Address range: 0x180022720 - 0x180022762
int64_t function_180022720(int64_t a1) {
    if (a1 == 0) {
        // 0x18002272e
        return a1 + 0xffffff9a & 0xffffffff;
    }
    // 0x180022737
    if (*(int64_t *)(a1 + 272) != 0) {
        // 0x180022741
        function_180022770(a1);
    }
    // 0x180022746
    free((int64_t *)a1);
    return (int32_t)&g47 ^ (int32_t)&g47;
}

// Address range: 0x180022770 - 0x18002282c
int64_t function_180022770(int64_t a1) {
    if (a1 == 0) {
        // 0x180022784
        return a1 + 0xffffff9a & 0xffffffff;
    }
    int64_t * v1 = (int64_t *)(a1 + 272); // 0x180022797
    int64_t v2 = *v1; // 0x180022797
    if (v2 == 0) {
        // 0x1800227a3
        return v2 + 0xffffff9a & 0xffffffff;
    }
    int64_t result = 0; // 0x1800227bd
    if (*(int64_t *)(v2 + 160) == 0) {
        // 0x1800227bf
        result = 0;
        if (*(int32_t *)(v2 + 280) == 0) {
            int32_t v3 = *(int32_t *)(v2 + 148); // 0x1800227c7
            result = *(int32_t *)(v2 + 144) != v3 ? 0xffffff97 : 0;
        }
    }
    int64_t * v4 = (int64_t *)v2; // 0x1800227db
    int64_t v5 = *v4; // 0x1800227db
    if (v5 != 0) {
        // 0x1800227e3
        free((int64_t *)v5);
    }
    int32_t * v6 = (int32_t *)(v2 + 104); // 0x1800227e9
    *v4 = 0;
    if (*v6 == 8) {
        // 0x1800227f6
        function_1800202f0(v2 + 8);
    }
    // 0x1800227ff
    *v6 = 0;
    free(v4);
    *v1 = 0;
    return result;
}

// Address range: 0x180022830 - 0x180022879
int64_t function_180022830(int64_t a1, int64_t * a2, int64_t * a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7, int64_t a8) {
    // 0x180022830
    return function_180021af0(a1, (int64_t)a2, 0, (int64_t)a3, 0x100000000 * a4 >> 32);
}

// Address range: 0x180022880 - 0x180022895
int64_t function_180022880(int64_t a1) {
    if (a1 == 0) {
        // 0x180022885
        return 0xffffff9a;
    }
    // 0x18002288b
    int64_t v1; // 0x180022880
    __asm_movups_4(*(int128_t *)&v1, __asm_movups(*(int128_t *)(a1 + 104)));
    return 0;
}

// Address range: 0x1800228a0 - 0x180022916
int64_t function_1800228a0(int64_t a1) {
    if (a1 == 0) {
        // 0x1800228ae
        return a1 + 0xffffff9a & 0xffffffff;
    }
    // 0x1800228b7
    *(int64_t *)(a1 + 136) = *(int64_t *)(a1 + 168);
    *(int64_t *)(a1 + 128) = 0;
    int64_t result = function_180021af0(a1, a1 + 176, (int32_t)a1 + 264, 0, 0); // 0x1800228fa
    *(int64_t *)(a1 + 144) = (int64_t)((int32_t)result == 0);
    return result;
}

// Address range: 0x180022920 - 0x1800229da
int64_t function_180022920(int64_t a1) {
    if (a1 == 0) {
        // 0x18002292e
        return a1 + 0xffffff9a & 0xffffffff;
    }
    int64_t * v1 = (int64_t *)(a1 + 144); // 0x180022937
    if (*v1 == 0) {
        // 0x180022941
        return 0xffffff9c;
    }
    int64_t v2 = *(int64_t *)(a1 + 104); // 0x18002294c
    int64_t * v3 = (int64_t *)(a1 + 128);
    int64_t v4 = *v3 + 1;
    if (v2 != 0xffff == v4 == v2) {
        // 0x180022941
        return 0xffffff9c;
    }
    int32_t v5 = *(int32_t *)(a1 + 216); // 0x180022975
    int32_t v6 = *(int32_t *)(a1 + 220); // 0x180022982
    *v3 = v4;
    int64_t * v7 = (int64_t *)(a1 + 136); // 0x180022994
    *v7 = *v7 + (int64_t)(*(int32_t *)(a1 + 224) + 46 + v5 + v6);
    int64_t result = function_180021af0(a1, a1 + 176, (int32_t)a1 + 264, 0, 0); // 0x1800229be
    *v1 = (int64_t)((int32_t)result == 0);
    return result;
}

// Address range: 0x1800229e0 - 0x1800229eb
int64_t function_1800229e0(int64_t * a1) {
    // 0x1800229e0
    int64_t v1; // 0x1800229e0
    return function_180022c90((int64_t)a1, 0, 1, v1);
}

// Address range: 0x1800229f0 - 0x180022a0f
int64_t function_1800229f0(int64_t a1, int64_t a2, int64_t a3) {
    // 0x1800229f0
    return function_180022a10(a1, 0, 0, 0, 0);
}

// Address range: 0x180022a10 - 0x180022c8e
int64_t function_180022a10(int64_t a1, int32_t a2, int32_t a3, int32_t a4, int64_t a5) {
    int64_t v1 = a1;
    int64_t v2 = a5;
    if (a1 == 0 || a5 != 0 || *(int64_t *)(a1 + 144) == 0) {
        // 0x180022a31
        return 0xffffff9a;
    }
    int64_t * v3 = (int64_t *)(a1 + 272);
    if (*v3 != 0) {
        // 0x180022a5d
        function_180022770(a1);
    }
    // 0x180022a62
    int64_t v4; // bp-32, 0x180022a10
    int32_t v5; // bp-40, 0x180022a10
    int64_t v6 = function_180021870(a1, (int64_t *)&v5, &v4, &v2, (int64_t)&g47, (int64_t)&g47); // 0x180022a74
    if ((int32_t)v6 != 0) {
        // 0x180022a31
        return 0xffffff99;
    }
    int64_t * mem = malloc(288); // 0x180022a9a
    int64_t v7 = (int64_t)mem; // 0x180022a9a
    if (mem == NULL) {
        // 0x180022a31
        return v7 + 0xffffff98 & 0xffffffff;
    }
    int64_t * mem2 = malloc(0x4000); // 0x180022aba
    *(int64_t *)(v7 + 112) = v4;
    *(int32_t *)(v7 + 120) = (int32_t)v2;
    *mem = (int64_t)mem2;
    *(int64_t *)(v7 + 128) = 0;
    int32_t * v8 = (int32_t *)(v7 + 280); // 0x180022add
    *v8 = a4;
    if (mem2 == NULL) {
        // 0x180022ae8
        free(mem);
        // 0x180022a31
        return 0xffffff98;
    }
    int32_t * v9 = (int32_t *)(v7 + 104); // 0x180022afa
    *v9 = 0;
    if (a2 != 0) {
        // 0x180022b03
        *(int32_t *)(int64_t)a2 = *(int32_t *)(a1 + 188);
    }
    if (a3 != 0) {
        int32_t * v10 = (int32_t *)(int64_t)a3; // 0x180022b11
        *v10 = 6;
        int32_t v11 = *(int32_t *)(a1 + 184) & 6; // 0x180022b1d
        switch (v11) {
            case 2: {
                // 0x180022b3f
                *v10 = 9;
                // break -> 0x180022b45
                break;
            }
            case 4: {
                // 0x180022b37
                *v10 = 2;
                // break -> 0x180022b45
                break;
            }
            default: {
                if (v11 == 6) {
                    // 0x180022b2f
                    *v10 = 1;
                }
                // break -> 0x180022b45
                break;
            }
        }
    }
    // 0x180022b45
    *(int32_t *)(v7 + 148) = *(int32_t *)(a1 + 196);
    *(int32_t *)(v7 + 144) = 0;
    *(int64_t *)(v7 + 136) = 0;
    int32_t * v12 = (int32_t *)(a1 + 188); // 0x180022b5f
    *(int32_t *)(v7 + 264) = *v12;
    *(int64_t *)(v7 + 256) = *(int64_t *)(a1 + 96);
    __asm_movups_4(*(int128_t *)(v7 + 168), __asm_movups(*(int128_t *)&v1));
    __asm_movups_4(*(int128_t *)(v7 + 184), __asm_movups(*(int128_t *)(a1 + 16)));
    __asm_movups_4(*(int128_t *)(v7 + 200), __asm_movups(*(int128_t *)(a1 + 32)));
    __asm_movups_4(*(int128_t *)(v7 + 216), __asm_movups(*(int128_t *)(a1 + 48)));
    __asm_movups_4(*(int128_t *)(v7 + 232), __asm_movups(*(int128_t *)(a1 + 64)));
    *(int64_t *)(v7 + 248) = __asm_movsd_5(__asm_movsd(*(int64_t *)(a1 + 80)));
    *(int64_t *)(v7 + 272) = *(int64_t *)(a1 + 120);
    *(int32_t *)(v7 + 36) = 0;
    int32_t v13 = *v12; // 0x180022bc8
    if (a4 == 0 == v13 == 12) {
        // 0x180022bd7
        *v8 = 1;
    } else {
        if (a4 == 0 == v13 == 8) {
            int64_t v14 = v7 + 8; // 0x180022c45
            *(int64_t *)(v7 + 56) = 0;
            *(int64_t *)v14 = 0;
            *(int64_t *)(v7 + 64) = 0;
            *(int64_t *)(v7 + 72) = 0;
            *(int32_t *)(v7 + 16) = 0;
            int64_t v15 = function_18001e940(v14, 0xfffffff1, "1.2.13", 88); // 0x180022c6a
            if ((int32_t)v15 != 0) {
                // 0x180022c81
                free(mem);
                // 0x180022a31
                return v15 & 0xffffffff;
            }
            // 0x180022c75
            *v9 = 8;
        }
    }
    // 0x180022be1
    *(int64_t *)(v7 + 152) = *(int64_t *)(a1 + 200);
    *(int64_t *)(v7 + 160) = *(int64_t *)(a1 + 208);
    int64_t v16 = *(int64_t *)(a1 + 264); // 0x180022c05
    *(int64_t *)(v7 + 96) = (int64_t)v5 + 30 + v16;
    *(int32_t *)(v7 + 16) = 0;
    *v3 = v7;
    *(int32_t *)(a1 + 280) = 0;
    // 0x180022a31
    return 0;
}

// Address range: 0x180022c90 - 0x18002309e
int64_t function_180022c90(int64_t a1, int32_t a2, int64_t a3, int64_t a4) {
    int64_t v1 = a2;
    int64_t v2; // bp-344, 0x180022c90
    if (a2 != 0) {
        int128_t v3 = *(int128_t *)&v1; // 0x180022cd2
        int128_t v4 = __asm_movups(v3); // 0x180022cd2
        int64_t v5 = v3;
        int128_t v6 = __asm_movups(*(int128_t *)(v5 + 16)); // 0x180022cd5
        v2 = __asm_movaps_9(v4);
        int128_t v7 = __asm_movups(*(int128_t *)(v5 + 32)); // 0x180022cde
        __asm_movaps_9(v6);
        int128_t v8 = __asm_movups(*(int128_t *)(v5 + 48)); // 0x180022ce7
        __asm_movaps_9(v7);
        int128_t v9 = __asm_movups(*(int128_t *)(v5 + 64)); // 0x180022cf0
        __asm_movaps_9(v8);
        int128_t v10 = __asm_movsd(*(int64_t *)(v5 + 80)); // 0x180022cf9
        __asm_movaps_9(v9);
        __asm_movsd_5(v10);
    } else {
        // 0x180022cc6
        function_180023410(&v2);
    }
    int64_t v11 = function_180023360(&v2); // 0x180022d18
    if (v11 == 0) {
        // 0x180023085
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v12 = function_1800221c0(&v2, v11, 5); // 0x180022d3a
    v1 = v11;
    int64_t v13 = &v2; // 0x180022d46
    int32_t v14; // 0x180022c90
    int64_t v15; // bp-240, 0x180022c90
    int32_t v16; // bp-360, 0x180022c90
    int32_t v17; // bp-368, 0x180022c90
    int32_t v18; // bp-376, 0x180022c90
    int64_t v19; // 0x180022e80
    if (v12 == 0) {
        // 0x180022e80
        v19 = function_180022040(&v2, v11, 5);
        int64_t v20 = function_180023380(v13); // 0x180022ea7
        int64_t v21 = function_180022450(v13, v11, (int64_t *)&v18); // 0x180022ebf
        int64_t v22 = function_1800226a0(v13, v11, (int64_t *)&v16); // 0x180022ed7
        int64_t v23 = function_1800226a0(v13, v11, (int64_t *)&v17); // 0x180022eef
        int64_t v24 = function_1800226a0(v13, v11, (int64_t *)&v18); // 0x180022f07
        v15 = v18;
        int64_t v25 = function_1800226a0(v13, v11, (int64_t *)&v18); // 0x180022f27
        if (v15 != (int64_t)v18) {
            // 0x180022f49
            v14 = -103;
            goto lab_0x180022f4e;
        } else {
            // 0x180022f3b
            v14 = v19 == 0 | (int32_t)(v21 | v20 | v22 | v23 | v24 | v25) != 0;
            if ((v16 || v17) == 0) {
                goto lab_0x180022f4e;
            } else {
                // 0x180022f49
                v14 = -103;
                goto lab_0x180022f4e;
            }
        }
    } else {
        // 0x180022d54
        function_180023380(v13);
        function_180022450(v13, v11, (int64_t *)&v18);
        function_180022520(v13, v11, (int64_t *)&v16);
        function_1800226a0(v13, v11, (int64_t *)&v16);
        function_1800226a0(v13, v11, (int64_t *)&v16);
        function_180022450(v13, v11, (int64_t *)&v16);
        function_180022450(v13, v11, (int64_t *)&v17);
        function_180022520(v13, v11, &v15);
        function_180022520(v13, v11, (int64_t *)&v18);
        if (v15 != (int64_t)v18) {
            // 0x180022e49
            goto lab_0x180022e4e;
        } else {
            // 0x180022e3b
            if ((v16 || v17) == 0) {
                goto lab_0x180022e4e;
            } else {
                // 0x180022e49
                goto lab_0x180022e4e;
            }
        }
    }
  lab_0x180022f4e:;
    int64_t v26 = function_180022450(v13, v11, (int64_t *)&v18); // 0x180022f5c
    int64_t v27 = v18; // bp-184, 0x180022f78
    int64_t v28 = function_180022450(v13, v11, (int64_t *)&v18); // 0x180022f7c
    int64_t v29 = v18; // bp-176, 0x180022f97
    int32_t v30; // bp-232, 0x180022c90
    int64_t v31 = function_1800226a0(v13, v11, (int64_t *)&v30); // 0x180022f9b
    int32_t v32 = (int32_t)(v28 | v26) == 0 ? v14 : -1; // 0x180022f9b
    int64_t v33 = v19; // 0x180022f9b
    goto lab_0x180022fa0;
  lab_0x180022e4e:;
    int64_t v42 = function_180022520(v13, v11, &v27); // 0x180022e5b
    int64_t v43 = function_180022520(v13, v11, &v29); // 0x180022e72
    v30 = 0;
    v31 = v43;
    v32 = (int32_t)v42 != 0 ? -1 : -103;
    v33 = v12;
    goto lab_0x180022fa0;
  lab_0x180022fa0:
    // 0x180022fa0
    v1 = v27;
    if (v33 < v27 + v29 || (v32 || (int32_t)v31) != 0) {
        // 0x180023085
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t * mem = malloc(288); // 0x180022fe0
    if (mem == NULL) {
        // 0x180023085
        __security_check_cookie(g17);
        return &g47;
    }
    int64_t v34 = (int64_t)mem; // 0x180022fe0
    v1 = v34;
    int64_t v35 = v13;
    int64_t v36 = v34;
    int64_t v37 = v36 + 128;
    int128_t v38 = __asm_movups(*(int128_t *)v35); // 0x180023007
    int64_t v39 = v35 + 128; // 0x18002300a
    __asm_movups_4(*(int128_t *)v36, v38);
    __asm_movups_4(*(int128_t *)(v36 + 16), __asm_movups(*(int128_t *)(v35 + 16)));
    __asm_movups_4(*(int128_t *)(v36 + 32), __asm_movups(*(int128_t *)(v35 + 32)));
    __asm_movups_4(*(int128_t *)(v36 + 48), __asm_movups(*(int128_t *)(v35 + 48)));
    __asm_movups_4(*(int128_t *)(v36 + 64), __asm_movups(*(int128_t *)(v35 + 64)));
    __asm_movups_4(*(int128_t *)(v36 + 80), __asm_movups(*(int128_t *)(v35 + 80)));
    __asm_movups_4(*(int128_t *)(v36 + 96), __asm_movups(*(int128_t *)(v35 + 96)));
    __asm_movups_4(*(int128_t *)(v36 + 112), __asm_movups(*(int128_t *)(v35 + 112)));
    int64_t v40 = 1; // 0x18002304d
    int64_t v41 = v40; // 0x180023051
    while (v40 != 0) {
        // 0x180023000
        v35 = v39;
        v36 = v37;
        v37 = v36 + 128;
        v38 = __asm_movups(*(int128_t *)v35);
        v39 = v35 + 128;
        __asm_movups_4(*(int128_t *)v36, v38);
        __asm_movups_4(*(int128_t *)(v36 + 16), __asm_movups(*(int128_t *)(v35 + 16)));
        __asm_movups_4(*(int128_t *)(v36 + 32), __asm_movups(*(int128_t *)(v35 + 32)));
        __asm_movups_4(*(int128_t *)(v36 + 48), __asm_movups(*(int128_t *)(v35 + 48)));
        __asm_movups_4(*(int128_t *)(v36 + 64), __asm_movups(*(int128_t *)(v35 + 64)));
        __asm_movups_4(*(int128_t *)(v36 + 80), __asm_movups(*(int128_t *)(v35 + 80)));
        __asm_movups_4(*(int128_t *)(v36 + 96), __asm_movups(*(int128_t *)(v35 + 96)));
        __asm_movups_4(*(int128_t *)(v36 + 112), __asm_movups(*(int128_t *)(v35 + 112)));
        v40 = v41 - 1;
        v41 = v40;
    }
    // 0x180023053
    v1 = v37;
    __asm_movups_4(*(int128_t *)v37, __asm_movups(*(int128_t *)v39));
    __asm_movups_4(*(int128_t *)(v36 + 144), __asm_movups(*(int128_t *)(v35 + 144)));
    function_1800228a0(v34);
    // 0x180023085
    __security_check_cookie(g17);
    return &g47;
}

// Address range: 0x1800230a0 - 0x180023357
int64_t function_1800230a0(int64_t a1, int64_t a2, int64_t a3) {
    if (a1 == 0) {
        // 0x1800230ae
        return a1 + 0xffffff9a & 0xffffffff;
    }
    int64_t v1 = *(int64_t *)(a1 + 272); // 0x1800230bd
    if (v1 == 0) {
        // 0x1800230c9
        return v1 + 0xffffff9a & 0xffffffff;
    }
    int64_t * v2 = (int64_t *)v1; // 0x1800230d8
    if (*v2 == 0) {
        // 0x1800230dd
        return 0xffffff9c;
    }
    int32_t v3 = a3; // 0x1800230ee
    if (v3 == 0) {
        // 0x1800230dd
        return 0;
    }
    uint64_t v4 = a3 & 0xffffffff; // 0x180023101
    int64_t * v5 = (int64_t *)(v1 + 24); // 0x180023104
    *v5 = a2;
    int32_t * v6 = (int32_t *)(v1 + 32); // 0x180023108
    *v6 = v3;
    int64_t v7 = v1 + 160; // 0x18002310c
    int64_t * v8 = (int64_t *)v7; // 0x18002310c
    int32_t v9 = v3; // 0x180023113
    if (v4 > *v8) {
        // 0x180023115
        v9 = v3;
        if (*(int32_t *)(v1 + 280) == 0) {
            int32_t v10 = *(int32_t *)v7; // 0x18002311e
            *v6 = v10;
            v9 = v10;
        }
    }
    int32_t * v11 = (int32_t *)(v1 + 16); // 0x180023127
    uint32_t v12 = *v11; // 0x180023127
    int64_t v13 = v1 + 152; // 0x18002312c
    int64_t * v14 = (int64_t *)v13; // 0x18002312c
    int32_t v15 = v9; // 0x180023136
    if (v4 > *v14 + (int64_t)v12) {
        // 0x180023138
        v15 = v9;
        if (*(int32_t *)(v1 + 280) != 0) {
            int32_t v16 = *(int32_t *)v13 + v12; // 0x180023147
            *v6 = v16;
            v15 = v16;
        }
    }
    int64_t v17 = 0; // 0x18002316e
    if (v15 == 0) {
        // 0x1800230dd
        return v17 & 0xffffffff;
    }
    int64_t * v18 = (int64_t *)(v1 + 96);
    int64_t * v19 = (int64_t *)(v1 + 8);
    int32_t * v20 = (int32_t *)(v1 + 36);
    int32_t * v21 = (int32_t *)(v1 + 144);
    int64_t * v22 = (int64_t *)(v1 + 136);
    int64_t v23 = a3; // 0x1800230a0
    int64_t v24 = 0;
    uint32_t v25; // 0x18002329c
    int64_t v26; // 0x1800230a0
    int64_t v27; // 0x1800230a0
    int64_t v28; // 0x1800230a0
    int64_t v29; // 0x1800230a0
    while (true) {
      lab_0x180023180:
        // 0x180023180
        v26 = v24;
        int64_t v30 = v28;
        int64_t v31 = v23;
        int32_t v32 = *v11; // 0x180023180
        int32_t v33 = v32; // 0x180023184
        int64_t v34 = v31; // 0x180023184
        int64_t v35 = v30; // 0x180023184
        if (v32 == 0) {
            uint64_t v36 = *v14; // 0x18002318a
            v33 = v32;
            v34 = v31;
            v35 = v30;
            if (v36 != 0) {
                int64_t v37 = 0x4000; // 0x18002319e
                if (v36 < 0x4000) {
                    // 0x1800231a0
                    v37 = v36 & 0xffffffff;
                    if ((int32_t)v36 == 0) {
                        // 0x1800230dd
                        return 0;
                    }
                }
                int32_t v38 = function_180023380(v1 + 168); // 0x1800231cb
                if (v38 != 0) {
                    // 0x1800230dd
                    return 0xffffffff;
                }
                int32_t v39 = v37; // 0x1800231ed
                if (v38 != v39) {
                    // 0x1800230dd
                    return 0xffffffff;
                }
                // 0x1800231f5
                *v18 = *v18 + v37;
                *v14 = *v14 - v37;
                *v19 = *v2;
                *v11 = v39;
                v33 = v39;
                v34 = *v2;
                v35 = v37;
            }
        }
        // 0x18002320c
        v29 = v35;
        v25 = v33;
        int32_t v40 = *(int32_t *)(v1 + 264); // 0x18002320c
        if (v40 == 0) {
            goto lab_0x18002329c;
        } else {
            // 0x18002321a
            if (*(int32_t *)(v1 + 280) != 0) {
                goto lab_0x18002329c;
            } else {
                int64_t v41 = v34;
                v23 = v41;
                v27 = v26;
                if (v40 == 12) {
                    goto lab_0x180023317;
                } else {
                    uint32_t v42 = *v20; // 0x18002322c
                    int64_t v43 = function_18001eb30(v19, 2, v41, v29); // 0x18002323d
                    int64_t v44 = v43 & 0xffffffff; // 0x180023242
                    int64_t v45 = v44; // 0x180023246
                    if ((int32_t)v43 >= 0) {
                        // 0x180023248
                        v45 = *(int64_t *)(v1 + 40) != 0 ? 0xfffffffd : v44;
                    }
                    int64_t v46 = v45;
                    uint32_t v47 = *v20; // 0x180023251
                    int64_t v48 = (int64_t)v47 - (int64_t)v42; // 0x18002325f
                    *v22 = *v22 + v48;
                    int64_t v49 = v48 & 0xffffffff; // 0x180023269
                    int64_t v50 = function_180021570(*v21, *v5, v49); // 0x18002326c
                    *v8 = *v8 - v48;
                    int64_t v51 = (int32_t)v26 - v42 + v47; // 0x18002327b
                    *v21 = (int32_t)v50;
                    v23 = v49;
                    v27 = v51;
                    v17 = v51;
                    switch ((int32_t)v46) {
                        case 1: {
                            return v17 & 0xffffffff;
                        }
                        case 0: {
                            goto lab_0x180023317;
                        }
                        default: {
                            // 0x1800230dd
                            return v46 & 0xffffffff;
                        }
                    }
                }
            }
        }
    }
  lab_0x180023321_3:
    // 0x1800230dd
    return v17 & 0xffffffff;
  lab_0x18002329c:
    if (v25 == 0) {
        // 0x1800232a3
        v17 = v26;
        if (*v14 == 0) {
            return v17 & 0xffffffff;
        }
    }
    uint32_t v52 = *v6; // 0x1800232ad
    uint32_t v53 = v52 < v25 ? v52 : v25; // 0x1800232b0
    int64_t v54 = v53; // 0x1800232b0
    int64_t v55 = v54; // 0x1800232b6
    if (v53 != 0) {
        int64_t v56 = 0;
        *(char *)(*v5 + v56) = *(char *)(*v19 + v56);
        int64_t v57 = v55 - 1; // 0x1800232d5
        int64_t v58 = v56 + 1; // 0x1800232d9
        v55 = v57;
        while (v57 != 0) {
            // 0x1800232c0
            v56 = v58;
            *(char *)(*v5 + v56) = *(char *)(*v19 + v56);
            v57 = v55 - 1;
            v58 = v56 + 1;
            v55 = v57;
        }
    }
    // 0x1800232db
    *v22 = *v22 + v54;
    int64_t v59 = function_180021570(*v21, *v5, v54); // 0x1800232f1
    *v8 = *v8 - v54;
    *v11 = *v11 - v53;
    *v6 = *v6 - v53;
    *v5 = *v5 + v54;
    *v19 = *v19 + v54;
    *v20 = *v20 + v53;
    *v21 = (int32_t)v59;
    v23 = v54;
    v27 = v26 + v54 & 0xffffffff;
    goto lab_0x180023317;
  lab_0x180023317:
    // 0x180023317
    v24 = v27;
    v28 = v29;
    v17 = v24;
    if (*v6 == 0) {
        // break -> 0x180023321
        goto lab_0x180023321_3;
    }
    goto lab_0x180023180;
}

// Address range: 0x180023360 - 0x180023376
int64_t function_180023360(int64_t * a1) {
    // 0x180023360
    return (int64_t)a1;
}

// Address range: 0x180023380 - 0x1800233a7
int64_t function_180023380(int64_t a1) {
    // 0x180023380
    int64_t v1; // 0x180023380
    uint64_t v2 = v1;
    int64_t result = *(int64_t *)(a1 + 32); // 0x180023380
    if (result != 0) {
        // 0x18002338c
        return result;
    }
    // 0x180023393
    if (v2 < 0x100000000) {
        // 0x18002339f
        return v2 & 0xffffffff;
    }
    // 0x18002338c
    return 0xffffffff;
}

// Address range: 0x1800233b0 - 0x1800233e2
int64_t function_1800233b0(int64_t result) {
    // 0x1800233b0
    if (*(int64_t *)(result + 32) != 0) {
        // 0x1800233c2
        return result;
    }
    // 0x1800233ca
    if ((int32_t)result != -1) {
        // 0x1800233db
        return result & 0xffffffff;
    }
    // 0x1800233c2
    return -1;
}

// Address range: 0x1800233f0 - 0x1800233fa
int32_t function_1800233f0(struct _IO_FILE * stream) {
    // 0x1800233f0
    int64_t file; // 0x1800233f0
    return fclose((struct _IO_FILE *)file);
}

// Address range: 0x180023400 - 0x18002340a
int32_t function_180023400(struct _IO_FILE * stream) {
    // 0x180023400
    int64_t stream2; // 0x180023400
    return ferror((struct _IO_FILE *)stream2);
}

// Address range: 0x180023410 - 0x180023465
int64_t function_180023410(int64_t * a1) {
    int64_t v1 = (int64_t)a1;
    *(int64_t *)(v1 + 56) = 0;
    *a1 = 0x180023470;
    *(int64_t *)(v1 + 8) = 0x1800234c0;
    *(int64_t *)(v1 + 16) = 0x180023550;
    *(int64_t *)(v1 + 24) = 0x180023540;
    *(int64_t *)(v1 + 32) = 0x1800234e0;
    *(int64_t *)(v1 + 40) = 0x1800233f0;
    *(int64_t *)(v1 + 48) = 0x180023400;
    return 0x180023400;
}

// Address range: 0x180023470 - 0x1800234bd
int64_t function_180023470(int64_t a1, int64_t file_path, int64_t a3) {
    int64_t mode = (int64_t)"rb"; // 0x18002347c
    if ((a3 & 3) != 1) {
        // 0x180023487
        mode = (int64_t)"r+b";
        if ((a3 & 4) == 0) {
            // 0x180023496
            mode = (a3 & 8) == 0 ? 0 : (int64_t)"wb";
        }
    }
    // 0x1800234a5
    if (file_path == 0 || mode == 0) {
        // 0x1800234b9
        return 0;
    }
    // 0x1800234af
    return (int64_t)fopen((char *)file_path, (char *)mode);
}

// Address range: 0x1800234c0 - 0x1800234d5
int64_t function_1800234c0(void) {
    // 0x1800234c0
    int64_t data; // 0x1800234c0
    return fread((int64_t *)data, 1, (int32_t)data, (struct _IO_FILE *)data);
}

// Address range: 0x1800234e0 - 0x180023537
int64_t function_1800234e0(void) {
    int32_t v1 = 0; // 0x1800234e0
    int64_t v2; // 0x1800234e0
    switch ((int32_t)v2) {
        case 1: {
            // 0x180023510
            v1 = 1;
        }
        case 0: {
          lab_0x18002351b:;
            // 0x18002351b
            int64_t v3; // 0x1800234e0
            return _fseeki64((struct _IO_FILE *)v3, v3, v1) != 0 ? 0xffffffff : 0;
        }
        case 2: {
            // 0x18002351b
            v1 = 2;
            // branch (via goto) -> 0x18002351b
            goto lab_0x18002351b;
        }
        default: {
            // 0x1800234ff
            return 0xffffffff;
        }
    }
}

// Address range: 0x180023540 - 0x18002354a
int64_t function_180023540(struct _IO_FILE * Stream) {
    // 0x180023540
    int64_t v1; // 0x180023540
    return _ftelli64((struct _IO_FILE *)v1);
}

// Address range: 0x180023550 - 0x180023565
int64_t function_180023550(void) {
    // 0x180023550
    int64_t data; // 0x180023550
    return fwrite((int64_t *)data, 1, (int32_t)data, (struct _IO_FILE *)data);
}

// Address range: 0x1800235a4 - 0x1800235a9
int64_t function_1800235a4(int64_t a1, int64_t a2) {
    // 0x1800235a4
    free((int64_t *)a1);
    return &g47;
}

// Address range: 0x18002367c - 0x180023681
int64_t function_18002367c(int64_t a1) {
    // 0x18002367c
    free((int64_t *)a1);
    return &g47;
}

// Address range: 0x180023684 - 0x180023689
int64_t function_180023684(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    // 0x180023684
    return function_18002418c(a1);
}

// Address range: 0x180023738 - 0x18002376c
int64_t function_180023738(void) {
    // 0x180023738
    if ((int32_t)function_180024398() != 0) {
        // 0x180023767
        return __isa_available_init() & -256 | 1;
    }
    int32_t v1 = _configure_narrow_argv(function_180024390() & 0xffffffff); // 0x180023753
    if (v1 != 0) {
        // 0x180023767
        return v1 & -256;
    }
    // 0x180023767
    return (int64_t)_initialize_narrow_environment() & -256 | 1;
}

// Address range: 0x18002376c - 0x180023781
int64_t function_18002376c(int64_t a1) {
    int64_t v1 = __scrt_initialize_onexit_tables(0); // 0x180023772
    return v1 & -256 | (int64_t)((char)v1 != 0);
}

// Address range: 0x180023784 - 0x1800237ac
int64_t function_180023784(void) {
    int64_t v1 = function_1800248f0(); // 0x180023788
    if ((char)v1 == 0) {
        // 0x1800237a7
        return v1 & -256;
    }
    int64_t v2 = function_1800248f0(); // 0x180023795
    if ((char)v2 != 0) {
        // 0x1800237a7
        return v2 & -256 | 1;
    }
    // 0x1800237a7
    return function_1800248f0() & -256;
}

// Address range: 0x1800237ac - 0x1800237c1
int64_t function_1800237ac(void) {
    // 0x1800237ac
    function_1800248f0();
    return function_1800248f0() & -256 | 1;
}

// Address range: 0x180023828 - 0x180023858
int64_t function_180023828(void) {
    // 0x180023828
    if ((int32_t)function_180024398() != 0) {
        // 0x180023835
        return _execute_onexit_table((struct _onexit_table_t *)&g21);
    }
    int64_t v1 = function_1800248f4(); // 0x180023845
    int64_t result = v1; // 0x18002384c
    if ((int32_t)v1 == 0) {
        // 0x18002384e
        _cexit();
        result = &g47;
    }
    // 0x180023853
    return result;
}

// Address range: 0x180023858 - 0x18002386c
int64_t function_180023858(int64_t a1) {
    // 0x180023858
    function_1800248f0();
    return function_1800248f0();
}

// Address range: 0x18002386c - 0x1800238b5
int64_t function_18002386c(int32_t a1) {
    // 0x18002386c
    *(char *)&g22 = a1 == 0 ? 1 : *(char *)&g22;
    __isa_available_init();
    int64_t v1 = function_1800248f0(); // 0x18002388e
    if ((char)v1 == 0) {
        // 0x1800238af
        return v1 & -256;
    }
    int64_t v2 = function_1800248f0(); // 0x18002389b
    if ((char)v2 != 0) {
        // 0x1800238af
        return v2 & -256 | 1;
    }
    // 0x1800238af
    return function_1800248f0() & -256;
}

// Address range: 0x180023984 - 0x180023a16
int64_t function_180023984(int64_t a1) {
    // 0x180023984
    if (*(int16_t *)0x180000000 != 0x5a4d) {
        // 0x180023a12
        return function_180023a18();
    }
    int64_t v1 = (int64_t)*(int32_t *)0x18000003c; // 0x180023999
    if (*(int32_t *)(v1 + 0x180000000) != 0x4550 || *(int16_t *)(v1 + 0x180000018) != 523) {
        // 0x180023a12
        return function_180023a18();
    }
    // 0x1800239fb
    return function_180023a18();
}

// Address range: 0x180023a16 - 0x180023a18
int64_t function_180023a16(void) {
    // 0x180023a16
    int64_t v1; // 0x180023a16
    return v1 & -256;
}

// Address range: 0x180023a18 - 0x180023a1d
int64_t function_180023a18(void) {
    // 0x180023a18
    int64_t result; // 0x180023a18
    return result;
}

// Address range: 0x180023a44 - 0x180023a6f
int64_t function_180023a44(int64_t a1, int32_t a2) {
    // 0x180023a44
    if (*(char *)&g22 != 0) {
        if ((char)a2 != 0) {
            // 0x180023a67
            int64_t v1; // 0x180023a44
            return v1 & -256 | 1;
        }
    }
    // 0x180023a59
    function_1800248f0();
    // 0x180023a67
    return function_1800248f0() & -256 | 1;
}

// Address range: 0x180023ac0 - 0x180023ad7
int64_t function_180023ac0(int64_t a1) {
    // 0x180023ac0
    return _onexit((int32_t (*)())a1) == NULL ? 0xffffffff : 0;
}

// Address range: 0x180023ad8 - 0x180023cd6
int64_t function_180023ad8(int64_t a1, int64_t a2, int64_t a3) {
    // 0x180023ad8
    int64_t v1; // 0x180023b5a
    switch ((int32_t)a2) {
        case 0: {
            int32_t v2 = g23; // 0x180023c66
            if (v2 >= 0 != v2 != 0) {
                // 0x180023aef
                return 0;
            }
            int64_t v3 = a3 != 0; // 0x180023b1c
            int64_t v4 = a1 & -256 | v3; // 0x180023b1c
            g23 = v2 - 1;
            int64_t v5 = __scrt_acquire_startup_lock(v4); // 0x180023c7e
            int64_t v6 = v4; // 0x180023c91
            if (g20 != 2) {
                // 0x180023c93
                __scrt_fastfail(7);
                v6 = 7;
            }
            // 0x180023c9d
            function_180023828();
            g20 = 0;
            function_180023858(v6);
            int64_t v7 = v6 & -256; // 0x180023cad
            __scrt_release_startup_lock(v7 | v5 & 255);
            // 0x180023aef
            return (char)function_180023a44(v7 | v3, 0) != 0;
        }
        case 1: {
            // 0x180023b0d
            if ((char)function_18002386c(0) == 0) {
                // 0x180023aef
                return 0;
            }
            int64_t v8 = __scrt_acquire_startup_lock(0); // 0x180023b55
            int64_t v9 = 0; // 0x180023b6a
            if (g20 != 0) {
                // 0x180023b6c
                __scrt_fastfail(7);
                v9 = 7;
            }
            // 0x180023b76
            v1 = v8 & 255;
            g20 = 1;
            if ((char)function_18002376c(v9) == 0) {
                // 0x180023aef
                __scrt_release_startup_lock(v1);
                // 0x180023aef
                return 0;
            }
            // break -> 0x180023b89
            break;
        }
        case 2: {
            // 0x180023b05
            return function_180023784() & 255;
        }
        case 3: {
            // 0x180023b05
            return function_1800237ac() & 255;
        }
        default: {
            // 0x180023aef
            return 1;
        }
    }
    // 0x180023b89
    _RTC_Initialize();
    function_180023ac0(0x180024648);
    InitializeSListHead((int64_t *)0x180024648);
    function_180023ac0(0x1800245cc);
    function_1800245d8();
    if (_initterm_e((int32_t (**)())&g3, (int32_t (**)())&g4) != 0 || (char)function_180023738() == 0) {
        // 0x180023aef
        __scrt_release_startup_lock(v1 | (int64_t)&g3 & -256);
        // 0x180023aef
        return 0;
    }
    // 0x180023bd0
    _initterm((void (**)())&g1, (void (**)())&g2);
    g20 = 2;
    __scrt_release_startup_lock(v1 | (int64_t)&g1 & -256);
    int64_t v10 = function_1800245f4(); // 0x180023c00
    int64_t * v11 = (int64_t *)v10; // 0x180023c08
    if (*v11 != 0) {
        // 0x180023c0e
        if ((char)function_180023984(v10) != 0) {
            // 0x180023c1a
            function_1800010b0(*v11);
        }
    }
    // 0x180023c32
    g23++;
    // 0x180023aef
    return 1;
}

// Address range: 0x180023cd8 - 0x180023dcd
int64_t function_180023cd8(int64_t a1, uint64_t a2, int64_t a3) {
    int32_t v1 = a2; // 0x180023cfa
    if (v1 == 0) {
        // 0x180023cfe
        if ((int64_t)g23 <= a2) {
            // 0x180023dbf
            return 0;
        }
    }
    int64_t v2 = a2 & 0xffffffff; // 0x180023cf5
    if (v1 < 3) {
        // 0x180023d15
        int64_t v3; // 0x180023cd8
        _3f_dllmain_raw_40__40_YAHQEAUHINSTANCE___40__40_KQEAX_40_Z((int64_t *)v3, v3, (int64_t *)v3);
        if (((int32_t)&g47 & (int32_t)&g47) == 0) {
            // 0x180023dbf
            return &g47;
        }
        int64_t v4 = function_180023ad8(a1, v2, a3); // 0x180023d30
        if ((int32_t)v4 == 0) {
            // 0x180023dbf
            return v4 & 0xffffffff;
        }
    }
    int64_t * v5 = (int64_t *)a1; // 0x180023d47
    int64_t * v6 = (int64_t *)a3; // 0x180023d47
    uint32_t result = DllMain(v5, v1, v6); // 0x180023d47
    if (v1 == 1 == result == 0) {
        // 0x180023d5b
        DllMain(v5, 0, v6);
        function_180023ad8(a1, 0, a3);
        _3f_dllmain_raw_40__40_YAHQEAUHINSTANCE___40__40_KQEAX_40_Z((int64_t *)&g47, (int64_t)&g47, (int64_t *)&g47);
    }
    // 0x180023d82
    if (v1 != 0 == (v1 != 3)) {
        // 0x180023dbf
        return result;
    }
    int64_t v7 = function_180023ad8(a1, v2, a3); // 0x180023d93
    int64_t v8 = v7 & 0xffffffff; // 0x180023d98
    int64_t result2 = v8; // 0x180023da0
    if ((int32_t)v7 != 0) {
        // 0x180023da2
        _3f_dllmain_raw_40__40_YAHQEAUHINSTANCE___40__40_KQEAX_40_Z((int64_t *)v8, (int64_t)&g47, (int64_t *)&g47);
        result2 = &g47;
    }
    // 0x180023dbf
    return result2;
}

// Address range: 0x180023e24 - 0x180023e61
int64_t entry_point(int64_t a1, int64_t a2, int64_t a3) {
    if ((int32_t)a2 == 1) {
        // 0x180023e40
        __security_init_cookie();
    }
    // 0x180023e45
    return function_180023cd8(a1, a2 & 0xffffffff, a3);
}

// Address range: 0x180023f6c - 0x180023f7f
int64_t function_180023f6c(void) {
    // 0x180023f6c
    __report_securityfailure(8);
    return &g47;
}

// Address range: 0x180024100 - 0x18002411d
int64_t function_180024100(void) {
    // 0x180024100
    int64_t v1; // 0x180024100
    int64_t v2 = v1;
    function_180024120(v1, v2, *(int64_t *)(v2 + 56));
    return 1;
}

// Address range: 0x180024120 - 0x180024179
int64_t function_180024120(int64_t a1, int64_t a2, int64_t a3) {
    int64_t v1 = a1; // 0x180024136
    if ((a3 & 4) != 0) {
        int32_t v2 = *(int32_t *)(a3 + 4); // 0x18002413c
        v1 = (int64_t)v2 + a1 & (int64_t)-*(int32_t *)(a3 + 8);
    }
    uint32_t v3 = *(int32_t *)(*(int64_t *)(a2 + 16) + 8); // 0x180024156
    char v4 = *(char *)((int64_t)v3 + 3 + *(int64_t *)(a2 + 8)); // 0x18002415d
    int64_t v5 = a1; // 0x180024161
    if ((v4 & 15) != 0) {
        // 0x180024163
        v5 = (int64_t)(v4 & -16) + a1;
    }
    // 0x18002416d
    __security_check_cookie(v5 ^ *(int64_t *)(v1 + (0x100000000 * a3 >> 32 & -8)));
    return &g47;
}

// Address range: 0x18002417c - 0x180024181
int64_t function_18002417c(int64_t a1) {
    // 0x18002417c
    free((int64_t *)a1);
    return &g47;
}

// Address range: 0x180024184 - 0x18002418b
int64_t function_180024184(int64_t a1) {
    // 0x180024184
    return function_1800010b0(a1);
}

// Address range: 0x18002418c - 0x1800241c8
int64_t function_18002418c(int64_t a1) {
    int32_t size = a1; // 0x1800241b8
    int64_t * mem = malloc(size); // 0x1800241b8
    while (mem == NULL) {
        // 0x180024197
        if (_callnewh(size) == 0) {
            if (a1 != -1) {
                // 0x1800241b0
                function_1800247e4();
                // UNREACHABLE
            }
            // 0x1800241a9
            function_180024804();
            // UNREACHABLE
        }
        mem = malloc(size);
    }
    // 0x1800241c2
    return (int64_t)mem;
}

// Address range: 0x180024390 - 0x180024396
int64_t function_180024390(void) {
    // 0x180024390
    return 1;
}

// Address range: 0x180024398 - 0x1800243a4
int64_t function_180024398(void) {
    // 0x180024398
    return g18 != 0;
}

// Address range: 0x1800245bc - 0x1800245ca
void function_1800245bc(int64_t * ListHead) {
    // 0x1800245bc
    InitializeSListHead(&g26);
}

// Address range: 0x1800245cc - 0x1800245d8
int64_t function_1800245cc(void) {
    // 0x1800245cc
    return __std_type_info_destroy_list(&g26);
}

// Address range: 0x1800245d8 - 0x1800245f3
int64_t function_1800245d8(void) {
    int64_t * v1 = (int64_t *)function_180001020(); // 0x1800245e1
    *v1 = *v1 | 4;
    int64_t result = function_180003a30(); // 0x1800245e5
    int64_t * v2 = (int64_t *)result; // 0x1800245ea
    *v2 = *v2 | 2;
    return result;
}

// Address range: 0x1800245f4 - 0x1800245fc
int64_t function_1800245f4(void) {
    // 0x1800245f4
    return &g46;
}

// Address range: 0x1800247e4 - 0x180024803
int64_t function_1800247e4(void) {
    // 0x1800247e4
    _3f__3f_0bad_alloc_40_std_40__40_QEAA_40_XZ();
    int64_t v1; // bp-40, 0x1800247e4
    _CxxThrowException(&v1, &g15);
    // UNREACHABLE
}

// Address range: 0x180024804 - 0x180024823
int64_t function_180024804(void) {
    // 0x180024804
    ??0bad_alloc@std@@QEAA@XZ();
    int64_t v1; // bp-40, 0x180024804
    _CxxThrowException(&v1, &g16);
    // UNREACHABLE
}

// Address range: 0x18002486c - 0x180024872
int64_t function_18002486c(void) {
    // 0x18002486c
    return __std_terminate();
}

// Address range: 0x180024872 - 0x180024878
int64_t function_180024872(void) {
    // 0x180024872
    return __C_specific_handler();
}

// Address range: 0x180024878 - 0x18002487e
int64_t * function_180024878(int64_t * s, int32_t c, int32_t n) {
    // 0x180024878
    return memset(s, c, n);
}

// Address range: 0x18002487e - 0x180024884
int64_t function_18002487e(int64_t * a1) {
    // 0x18002487e
    return __std_type_info_destroy_list(a1);
}

// Address range: 0x180024884 - 0x18002488a
int64_t function_180024884(void) {
    // 0x180024884
    return __std_exception_copy();
}

// Address range: 0x18002488a - 0x180024890
int64_t function_18002488a(void) {
    // 0x18002488a
    return __std_exception_destroy();
}

// Address range: 0x180024890 - 0x180024896
void function_180024890(int64_t * pExceptionObject, int64_t * pThrowInfo) {
    // 0x180024890
    _CxxThrowException(pExceptionObject, pThrowInfo);
}

// Address range: 0x180024896 - 0x18002489c
void function_180024896(int64_t * ptr) {
    // 0x180024896
    free(ptr);
}

// Address range: 0x18002489c - 0x1800248a2
int64_t * function_18002489c(int32_t size) {
    // 0x18002489c
    return malloc(size);
}

// Address range: 0x1800248a2 - 0x1800248a8
int64_t function_1800248a2(void) {
    // 0x1800248a2
    return terminate();
}

// Address range: 0x1800248a8 - 0x1800248ae
int32_t function_1800248a8(int32_t ExceptionNum, struct _EXCEPTION_POINTERS * ExceptionPtr) {
    // 0x1800248a8
    return _seh_filter_dll(ExceptionNum, ExceptionPtr);
}

// Address range: 0x1800248ae - 0x1800248b4
int32_t function_1800248ae(int64_t a1) {
    // 0x1800248ae
    return _configure_narrow_argv(a1);
}

// Address range: 0x1800248b4 - 0x1800248ba
int32_t function_1800248b4(void) {
    // 0x1800248b4
    return _initialize_narrow_environment();
}

// Address range: 0x1800248ba - 0x1800248c0
int32_t function_1800248ba(struct _onexit_table_t * Table) {
    // 0x1800248ba
    return _initialize_onexit_table(Table);
}

// Address range: 0x1800248c0 - 0x1800248c6
int32_t function_1800248c0(struct _onexit_table_t * Table, int32_t (*Function)()) {
    // 0x1800248c0
    return _register_onexit_function(Table, Function);
}

// Address range: 0x1800248c6 - 0x1800248cc
int32_t function_1800248c6(struct _onexit_table_t * Table) {
    // 0x1800248c6
    return _execute_onexit_table(Table);
}

// Address range: 0x1800248cc - 0x1800248d2
int64_t function_1800248cc(void) {
    // 0x1800248cc
    return _crt_atexit();
}

// Address range: 0x1800248d2 - 0x1800248d8
void function_1800248d2(void) {
    // 0x1800248d2
    _cexit();
}

// Address range: 0x1800248d8 - 0x1800248de
void function_1800248d8(void (**First)(), void (**Last)()) {
    // 0x1800248d8
    _initterm(First, Last);
}

// Address range: 0x1800248de - 0x1800248e4
int32_t function_1800248de(int32_t (**First)(), int32_t (**Last)()) {
    // 0x1800248de
    return _initterm_e(First, Last);
}

// Address range: 0x1800248e4 - 0x1800248ea
int32_t function_1800248e4(int32_t Size) {
    // 0x1800248e4
    return _callnewh(Size);
}

// Address range: 0x1800248ea - 0x1800248f0
bool function_1800248ea(int32_t ProcessorFeature) {
    // 0x1800248ea
    return IsProcessorFeaturePresent(ProcessorFeature);
}

// Address range: 0x1800248f0 - 0x1800248f3
int64_t function_1800248f0(void) {
    // 0x1800248f0
    int64_t v1; // 0x1800248f0
    return v1 & -256 | 1;
}

// Address range: 0x1800248f4 - 0x1800248f7
int64_t function_1800248f4(void) {
    // 0x1800248f4
    return 0;
}

// Address range: 0x1800248f8 - 0x180024977
int64_t function_1800248f8(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    int64_t v1 = *(int64_t *)(a4 + 56) + 4; // 0x180024927
    function_180024120(a2, a4, v1);
    int64_t result = 1; // 0x180024949
    if ((((*(int32_t *)(a1 + 4) & 102) == 0 ? 1 : 2) & *(int32_t *)v1) != 0) {
        // 0x18002494b
        result = __CxxFrameHandler3(a1, a2, a3, a4);
    }
    // 0x18002495c
    return result;
}

// Address range: 0x180024978 - 0x18002497e
int64_t function_180024978(int64_t a1, int64_t a2, int64_t a3, int64_t a4) {
    // 0x180024978
    return __CxxFrameHandler3(a1, a2, a3, a4);
}

// Address range: 0x18002497e - 0x180024984
int64_t * function_18002497e(int64_t * dest, int64_t * src, int32_t n) {
    // 0x18002497e
    return memcpy(dest, src, n);
}

// Address range: 0x180024984 - 0x18002498a
float64_t function_180024984(float64_t a1) {
    // 0x180024984
    return sqrt(a1);
}

// Address range: 0x1800249a0 - 0x1800249a2
int64_t function_1800249a0(void) {
    // 0x1800249a0
    int64_t result; // 0x1800249a0
    return result;
}

// Address range: 0x1800249b0 - 0x1800249ca
int64_t function_1800249b0(void) {
    // 0x1800249b0
    return 0x180001676;
}

// Address range: 0x1800249d0 - 0x180024a0e
int64_t function_1800249d0(void) {
    // 0x1800249d0
    int64_t v1; // 0x1800249d0
    int64_t v2 = 24 * *(int64_t *)(v1 + 112); // 0x1800249de
    return function_1800235a4(*(int64_t *)(v1 + 120), v2 == -8 ? -1 : v2 + 8);
}

// Address range: 0x180024a0e - 0x180024a28
int64_t function_180024a0e(void) {
    // 0x180024a0e
    return 0x1800017fd;
}

// Address range: 0x180024a30 - 0x180024a6e
int64_t function_180024a30(void) {
    // 0x180024a30
    int64_t v1; // 0x180024a30
    int64_t v2 = 1480 * *(int64_t *)(v1 + 96); // 0x180024a3e
    return function_1800235a4(*(int64_t *)(v1 + 104), v2 == -8 ? -1 : v2 + 8);
}

// Address range: 0x180024a70 - 0x180024aae
int64_t function_180024a70(void) {
    // 0x180024a70
    int64_t v1; // 0x180024a70
    int64_t v2 = 760 * *(int64_t *)(v1 + 112); // 0x180024a7e
    return function_1800235a4(*(int64_t *)(v1 + 120), v2 == -8 ? -1 : v2 + 8);
}

// Address range: 0x180024aae - 0x180024ac8
int64_t function_180024aae(void) {
    // 0x180024aae
    return 0x180001bee;
}

// Address range: 0x180024ad0 - 0x180024b0e
int64_t function_180024ad0(void) {
    // 0x180024ad0
    int64_t v1; // 0x180024ad0
    uint64_t v2 = 20 * *(int64_t *)(v1 + 112); // 0x180024ade
    return function_1800235a4(*(int64_t *)(v1 + 120), v2 > 0xfffffffffffffff7 ? -1 : v2 + 8);
}

// Address range: 0x180024b0e - 0x180024b28
int64_t function_180024b0e(void) {
    // 0x180024b0e
    return 0x180001e6d;
}

// Address range: 0x180024b30 - 0x180024b6e
int64_t function_180024b30(void) {
    // 0x180024b30
    int64_t v1; // 0x180024b30
    uint64_t v2 = 76 * *(int64_t *)(v1 + 112); // 0x180024b3e
    return function_1800235a4(*(int64_t *)(v1 + 120), v2 > 0xfffffffffffffff7 ? -1 : v2 + 8);
}

// Address range: 0x180024b6e - 0x180024b88
int64_t function_180024b6e(void) {
    // 0x180024b6e
    return 0x180001fb1;
}

// Address range: 0x180024b90 - 0x180024bce
int64_t function_180024b90(void) {
    // 0x180024b90
    int64_t v1; // 0x180024b90
    int64_t v2 = 520 * *(int64_t *)(v1 + 112); // 0x180024b9e
    return function_1800235a4(*(int64_t *)(v1 + 120), v2 == -8 ? -1 : v2 + 8);
}

// Address range: 0x180024bce - 0x180024be8
int64_t function_180024bce(void) {
    // 0x180024bce
    return 0x1800020b4;
}

// Address range: 0x180024bf0 - 0x180024c34
int64_t function_180024bf0(void) {
    // 0x180024bf0
    int64_t v1; // 0x180024bf0
    int64_t v2 = 312 * *(int64_t *)(v1 + 128); // 0x180024bfe
    return function_1800235a4(*(int64_t *)(v1 + 136), v2 == -8 ? -1 : v2 + 8);
}

// Address range: 0x180024c34 - 0x180024c4e
int64_t function_180024c34(void) {
    // 0x180024c34
    return 0x180002205;
}

// Address range: 0x180024c50 - 0x180024c5c
int64_t function_180024c50(void) {
    // 0x180024c50
    int64_t v1; // 0x180024c50
    return function_1800025e0(v1 + 48);
}

// Address range: 0x180024c60 - 0x180024c6c
int64_t function_180024c60(void) {
    // 0x180024c60
    int64_t v1; // 0x180024c60
    return function_1800025e0(v1 + 832);
}

// Address range: 0x180024c6c - 0x180024c78
int64_t function_180024c6c(void) {
    // 0x180024c6c
    int64_t v1; // 0x180024c6c
    return function_1800025e0(v1 + 48);
}

// Address range: 0x180024c80 - 0x180024c8c
int64_t function_180024c80(void) {
    // 0x180024c80
    int64_t v1; // 0x180024c80
    return function_1800025e0(v1 + 80);
}

// Address range: 0x180024c8c - 0x180024c98
int64_t function_180024c8c(void) {
    // 0x180024c8c
    int64_t v1; // 0x180024c8c
    return function_1800025e0(v1 + 80);
}

// Address range: 0x180024ca0 - 0x180024cac
int64_t function_180024ca0(void) {
    // 0x180024ca0
    int64_t v1; // 0x180024ca0
    return function_180003c30(v1 + 56);
}

// Address range: 0x180024cac - 0x180024cb8
int64_t function_180024cac(void) {
    // 0x180024cac
    int64_t v1; // 0x180024cac
    return function_1800025e0(v1 + 128);
}

// Address range: 0x180024cb8 - 0x180024cc4
int64_t function_180024cb8(void) {
    // 0x180024cb8
    int64_t v1; // 0x180024cb8
    return function_180003be0(v1 + 80);
}

// Address range: 0x180024cc4 - 0x180024cd0
int64_t function_180024cc4(void) {
    // 0x180024cc4
    int64_t v1; // 0x180024cc4
    return function_1800025e0(v1 + 128);
}

// Address range: 0x180024cd0 - 0x180024cdc
int64_t function_180024cd0(void) {
    // 0x180024cd0
    int64_t v1; // 0x180024cd0
    return function_180003c30(v1 + 32);
}

// Address range: 0x180024cdc - 0x180024ce8
int64_t function_180024cdc(void) {
    // 0x180024cdc
    int64_t v1; // 0x180024cdc
    return function_1800025e0(v1 + 128);
}

// Address range: 0x180024cf0 - 0x180024cfc
int64_t function_180024cf0(void) {
    // 0x180024cf0
    int64_t v1; // 0x180024cf0
    return function_180003af0(v1 + 56);
}

// Address range: 0x180024d00 - 0x180024d0c
int64_t function_180024d00(void) {
    // 0x180024d00
    int64_t v1; // 0x180024d00
    return function_180003ba0(v1 + 40);
}

// Address range: 0x180024d10 - 0x180024d1c
int64_t function_180024d10(void) {
    // 0x180024d10
    int64_t v1; // 0x180024d10
    return function_1800011c0(v1 + 128);
}

// Address range: 0x180024d20 - 0x180024d2c
int64_t function_180024d20(void) {
    // 0x180024d20
    int64_t v1; // 0x180024d20
    return function_1800011c0(v1 + 64);
}

// Address range: 0x180024d30 - 0x180024d3c
int64_t function_180024d30(void) {
    // 0x180024d30
    int64_t v1; // 0x180024d30
    return function_1800011c0(v1 + 112);
}

// Address range: 0x180024d40 - 0x180024d4c
int64_t function_180024d40(void) {
    // 0x180024d40
    int64_t v1; // 0x180024d40
    return function_1800011c0(v1 + 112);
}

// Address range: 0x180024d4c - 0x180024d8a
int64_t function_180024d4c(void) {
    // 0x180024d4c
    int64_t v1; // 0x180024d4c
    uint64_t v2 = 284 * *(int64_t *)(v1 + 56); // 0x180024d5a
    return function_1800235a4(*(int64_t *)(v1 + 88), v2 > 0xfffffffffffffff7 ? -1 : v2 + 8);
}

// Address range: 0x180024d90 - 0x180024d9c
int64_t function_180024d90(void) {
    // 0x180024d90
    int64_t v1; // 0x180024d90
    return function_1800011c0(v1 + 96);
}

// Address range: 0x180024da0 - 0x180024dac
int64_t function_180024da0(void) {
    // 0x180024da0
    int64_t v1; // 0x180024da0
    return function_1800011c0(v1 + 160);
}

// Address range: 0x180024dac - 0x180024dd9
int64_t function_180024dac(void) {
    // 0x180024dac
    int64_t v1; // 0x180024dac
    _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)v1, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
    return &g47;
}

// Address range: 0x180024de0 - 0x180024dec
int64_t function_180024de0(void) {
    // 0x180024de0
    int64_t v1; // 0x180024de0
    return function_180003c30(v1 + 64);
}

// Address range: 0x180024df0 - 0x180024e14
int64_t function_180024df0(void) {
    // 0x180024df0
    int64_t v1; // 0x180024df0
    function_180022770(*(int64_t *)(v1 + 72));
    return 0x18001e530;
}

// Address range: 0x180024e15 - 0x180024e40
int64_t function_180024e15(void) {
    // 0x180024e15
    int64_t result; // 0x180024e15
    int64_t v1; // 0x180024e15
    if (*(char *)(v1 + 32) == 0) {
        // 0x180024e24
        _3f___ArrayUnwind_40__40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)v1, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        result = &g47;
    }
    // 0x180024e3a
    return result;
}

// Address range: 0x180024e41 - 0x180024e81
int64_t function_180024e41(int64_t a1, int64_t a2) {
    // 0x180024e41
    *(int64_t *)(a2 + 64) = a1;
    *(int64_t *)(a2 + 48) = a1;
    int64_t v1 = *(int64_t *)a1; // 0x180024e56
    *(int64_t *)(a2 + 56) = v1;
    int64_t result; // 0x180024e41
    if (*(int32_t *)v1 == -0x1f928c9d) {
        // 0x180024e75
        result = terminate();
    } else {
        // 0x180024e69
        *(int32_t *)(a2 + 32) = 0;
        result = 0;
    }
    // 0x180024e7b
    return result;
}

// Address range: 0x180024e82 - 0x180024ead
int64_t function_180024e82(void) {
    // 0x180024e82
    int64_t result; // 0x180024e82
    int64_t v1; // 0x180024e82
    if (*(char *)(v1 + 32) == 0) {
        // 0x180024e91
        _3f___ArrayUnwind_40__40_YAXPEAX_K1P6AX0_40_Z_40_Z((int64_t *)v1, (int64_t)&g47, (int64_t)&g47, (void (*)(int64_t *))&g47);
        result = &g47;
    }
    // 0x180024ea7
    return result;
}

// Address range: 0x180024eae - 0x180024ec5
int64_t function_180024eae(int64_t a1, int64_t a2) {
    // 0x180024eae
    int64_t v1; // 0x180024eae
    return (int32_t)v1 == -0x3ffffffb;
}

// Address range: 0x180024ec6 - 0x180024edc
int64_t function_180024ec6(int64_t a1, int64_t a2) {
    // 0x180024ec6
    return __scrt_release_startup_lock(a1 & -256 | (int64_t)*(char *)(a2 + 64));
}

// Address range: 0x180024edd - 0x180024ef8
int64_t function_180024edd(int64_t a1, int64_t a2) {
    // 0x180024edd
    function_180023858(a1);
    return __scrt_release_startup_lock(a1 & -256 | (int64_t)*(char *)(a2 + 56));
}

// Address range: 0x180024ef9 - 0x180024f2e
int64_t function_180024ef9(int64_t a1, int64_t a2) {
    int64_t v1 = *(int64_t *)(a2 + 112); // 0x180024f17
    int32_t v2 = *(int32_t *)(a2 + 104); // 0x180024f1b
    int64_t v3 = *(int64_t *)(a2 + 96); // 0x180024f1e
    int64_t v4; // 0x180024ef9
    return __scrt_dllmain_exception_filter(v3, v2, v1, 0x180023ad8, 0x100000000 * v4 >> 32, a1, v4);
}

// Address range: 0x180024f30 - 0x180024f7c
int64_t function_180024f30(void) {
    int64_t result = function_1800024d0(); // 0x180024f47
    if (g29 != 0) {
        // 0x180024f49
        free((int64_t *)g29);
        g29 = 0;
        result = &g47;
    }
    // 0x180024f6f
    g30 = 0;
    return result;
}

// Address range: 0x180024f80 - 0x180024f85
int64_t function_180024f80(void) {
    // 0x180024f80
    return function_1800024d0();
}

// --------------- Statically Linked Functions ----------------

// void ??0bad_alloc@std@@QEAA@XZ(void);
// void _3f__3f_0bad_alloc_40_std_40__40_QEAA_40_XZ(void);
// void _3f__3f__L_40_YAXPEAX_K1P6AX0_40_Z2_40_Z(int64_t * a1, int64_t a2, int64_t a3, void (*a4)(int64_t *), void (*a5)(int64_t *));
// void _3f__3f__M_40_YAXPEAX_K1P6AX0_40_Z_40_Z(int64_t * a1, int64_t a2, int64_t a3, void (*a4)(int64_t *));
// void _3f___ArrayUnwind_40__40_YAXPEAX_K1P6AX0_40_Z_40_Z(int64_t * a1, int64_t a2, int64_t a3, void (*a4)(int64_t *));
// void _3f_dllmain_raw_40__40_YAHQEAUHINSTANCE___40__40_KQEAX_40_Z(int64_t * a1, int64_t a2, int64_t * a3);
// int64_t __isa_available_init(void);
// void __cdecl __report_securityfailure(unsigned long FailureCode);
// int64_t __scrt_acquire_startup_lock(int64_t a1);
// int64_t __scrt_dllmain_exception_filter(int64_t a1, int32_t a2, int64_t a3, int64_t a4, int64_t a5, int64_t a6, int64_t a7);
// int64_t __scrt_fastfail(int64_t a1);
// int64_t __scrt_initialize_onexit_tables(int32_t a1);
// int64_t __scrt_release_startup_lock(int64_t a1);
// void __fastcall __security_check_cookie(_In_ uintptr_t StackCookie);
// void __cdecl __security_init_cookie(void);
// _onexit_t _onexit(_onexit_t Function);
// void __cdecl _RTC_Initialize(void);
// int __stdcall DllMain(_In_ void * DllHandle, _In_ unsigned long Reason, _In_opt_ void * Reserved);

// --------------------- Meta-Information ---------------------

// Detected compiler/packer: microsoft linker (14.0)
// Detected functions: 318

