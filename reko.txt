// tmpr74rci4q_text_0001.c
// Generated by decompiling tmpr74rci4q
// using Reko decompiler version 0.11.6.0.

#include "tmpr74rci4q.h"

// 0000000180011140: Register word32 fn0000000180011140(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_31297) r8)
// Called from:
//      fn0000000180010580
word32 fn0000000180011140(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_31297 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_8 = g_qw80030008 ^ fp - 440;
	Eq_137 r9_11;
	r9_11.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01C0;
	if (r9_11 != 0x00 && (word64) edx + 4 <= ((rcx->u0).t000C).u0)
	{
		rcx->u0.t0008.u0 = (int32) ((word64) edx + 4);
		uint64 rdx_32 = (uint64) r9_11.u2[(uint64) edx];
		Eq_1342 edx_34 = (word32) rdx_32;
		word32 rdx_32_32_39 = SLICE(rdx_32, word32, 32);
		if ((&rcx->u0)[1] != 0x00)
			rdx_32 = SEQ(rdx_32_32_39, __bswap<word32>(edx_34));
		Eq_32409 tLoc0158;
		fn0000000180005050(rcx, (word32) rdx_32, &tLoc0158);
		Eq_137 r9_53;
		r9_53.u0 = rcx->u0.t0000.u0;
		int32 edx_1204;
		Eq_1342 eax_115;
		for (edx_1204 = 0x00; edx_1204 < 0x06; ++edx_1204)
		{
			if (r9_53 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l000000018001176C;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			eax_115.u0 = rcx->u0.t0008.u0;
		}
		int32 r8d_100 = 22;
		if (g_t800306F0.u0 == 868)
			r8d_100 = 0x11;
		int32 edx_1206 = 0x00;
		if (r8d_100 > 0x00)
		{
			Eq_1342 r10d_1205;
			r10d_1205.u0 = rcx->u0.t000C.u0;
			do
			{
				if (r9_53 == 0x00)
					goto l000000018001176C;
				eax_115.u2 = (word64) eax_115 + 4;
				if (eax_115 > r10d_1205)
					goto l000000018001176C;
				rcx->u0.t0008.u0 = (int32) eax_115;
				++edx_1206;
			} while (edx_1206 < r8d_100);
		}
		if (r9_53 != 0x00)
		{
			Eq_1342 r8d_147;
			r8d_147.u0 = rcx->u0.t000C.u0;
			if ((word64) eax_115 + 4 <= r8d_147)
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_159 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_177 = r9_53.u2[(uint64) ((word32) r10_159 - 0x04)];
				word32 r10d_189 = (word32) r10_159;
				Eq_1342 ebx_179 = (&rcx->u0)[1];
				Eq_1342 dwLoc018C_1233 = eax_177;
				if (ebx_179 != 0x00)
					dwLoc018C_1233 = __bswap<word32>(eax_177);
				if ((word32) r10_159 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_197 = (uint64) (r10d_189 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_197;
				Eq_1342 eax_206 = r9_53.u2[(uint64) ((word32) r10_197 - 0x04)];
				Eq_1342 dwLoc0198_1236 = eax_206;
				if (ebx_179 != 0x00)
					dwLoc0198_1236 = __bswap<word32>(eax_206);
				if ((word32) r10_197 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_227 = (uint64) rcx->u0.t0008.u0;
				word32 r10d_228 = (word32) r10_227;
				if ((word32) r10_227 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_243 = (uint64) (r10d_228 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_243;
				Eq_1342 esi_1003 = r9_53.u2[(uint64) ((word32) r10_243 - 0x04)];
				if (ebx_179 != 0x00)
					esi_1003 = __bswap<word32>(esi_1003);
				if ((word32) r10_243 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_279 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_285 = r9_53.u2[(uint64) ((word32) r10_279 - 0x04)];
				word32 r10d_298 = (word32) r10_279;
				Eq_1342 dwLoc0188_1240 = eax_285;
				if (ebx_179 != 0x00)
					dwLoc0188_1240 = __bswap<word32>(eax_285);
				if ((word32) r10_279 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_306 = (uint64) (r10d_298 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_306;
				Eq_1342 eax_315 = r9_53.u2[(uint64) ((word32) r10_306 - 0x04)];
				Eq_1342 dwLoc0194_1243 = eax_315;
				if (ebx_179 != 0x00)
					dwLoc0194_1243 = __bswap<word32>(eax_315);
				if ((word32) r10_306 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_336 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_342 = r9_53.u2[(uint64) ((word32) r10_336 - 0x04)];
				word32 r10d_355 = (word32) r10_336;
				Eq_1342 dwLoc0184_1245 = eax_342;
				if (ebx_179 != 0x00)
					dwLoc0184_1245 = __bswap<word32>(eax_342);
				if ((word32) r10_336 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_363 = (uint64) (r10d_355 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_363;
				Eq_1342 eax_372 = r9_53.u2[(uint64) ((word32) r10_363 - 0x04)];
				Eq_1342 dwLoc0190_1248 = eax_372;
				if (ebx_179 != 0x00)
					dwLoc0190_1248 = __bswap<word32>(eax_372);
				if ((word32) r10_363 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_393 = (uint64) rcx->u0.t0008.u0;
				word32 edx_399 = (word32) rdx_393;
				if ((word32) rdx_393 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_401 = (uint64) (edx_399 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_401;
				if ((word32) rdx_401 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_412 = (uint64) rcx->u0.t0008.u0;
				word32 edx_418 = (word32) rdx_412;
				if ((word32) rdx_412 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_420 = (uint64) (edx_418 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_420;
				if ((word32) rdx_420 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_431 = (uint64) rcx->u0.t0008.u0;
				word32 edx_437 = (word32) rdx_431;
				if ((word32) rdx_431 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_439 = (uint64) (edx_437 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_439;
				if ((word32) rdx_439 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_450 = (uint64) rcx->u0.t0008.u0;
				word32 edx_456 = (word32) rdx_450;
				if ((word32) rdx_450 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_458 = (uint64) (edx_456 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_458;
				if ((word32) rdx_458 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_469 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_475 = r9_53.u2[(uint64) ((word32) r10_469 - 0x04)];
				word32 r10d_488 = (word32) r10_469;
				Eq_1342 dwLoc0180_1250 = eax_475;
				if (ebx_179 != 0x00)
					dwLoc0180_1250 = __bswap<word32>(eax_475);
				if ((word32) r10_469 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_502 = (uint64) (r10d_488 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_502;
				Eq_1342 ebp_1088 = r9_53.u2[(uint64) ((word32) r10_502 - 0x04)];
				if (ebx_179 != 0x00)
					ebp_1088 = __bswap<word32>(ebp_1088);
				if ((word32) r10_502 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_545 = (uint64) rcx->u0.t0008.u0;
				word32 edx_551 = (word32) rdx_545;
				if ((word32) rdx_545 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_553 = (uint64) (edx_551 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_553;
				if ((word32) rdx_553 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_564 = (uint64) rcx->u0.t0008.u0;
				word32 edx_570 = (word32) rdx_564;
				if ((word32) rdx_564 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_572 = (uint64) (edx_570 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_572;
				if ((word32) rdx_572 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_583 = (uint64) rcx->u0.t0008.u0;
				word32 edx_589 = (word32) rdx_583;
				if ((word32) rdx_583 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_591 = (uint64) (edx_589 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_591;
				if ((word32) rdx_591 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_608 = (uint64) rcx->u0.t0008.u0;
				word32 r10d_641 = (word32) r10_608;
				Eq_1342 r13d_1079 = r9_53.u2[(uint64) ((word32) r10_608 - 0x04)];
				if (ebx_179 != 0x00)
					r13d_1079 = __bswap<word32>(r13d_1079);
				if ((word32) r10_608 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_655 = (uint64) (r10d_641 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_655;
				Eq_1342 edi_1084 = r9_53.u2[(uint64) ((word32) r10_655 - 0x04)];
				if (ebx_179 != 0x00)
					edi_1084 = __bswap<word32>(edi_1084);
				if ((word32) r10_655 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_700 = (uint64) rcx->u0.t0008.u0;
				word32 edx_706 = (word32) rdx_700;
				if ((word32) rdx_700 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_708 = (uint64) (edx_706 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_708;
				if ((word32) rdx_708 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_719 = (uint64) rcx->u0.t0008.u0;
				word32 edx_725 = (word32) rdx_719;
				if ((word32) rdx_719 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_727 = (uint64) (edx_725 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_727;
				if ((word32) rdx_727 + 0x04 > r8d_147)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_744 = (uint64) rcx->u0.t0008.u0;
				word32 r10d_797 = (word32) r10_744;
				Eq_1342 r14d_1098 = r9_53.u2[(uint64) ((word32) r10_744 - 0x04)];
				if (ebx_179 != 0x00)
					r14d_1098 = __bswap<word32>(r14d_1098);
				if ((word32) r10_744 + 0x04 <= r8d_147)
				{
					uint64 r10_805 = (uint64) (r10d_797 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_805;
					uint64 r9_813 = (uint64) r9_53.u2[(uint64) ((word32) r10_805 - 0x04)];
					Eq_1342 r9d_819 = (word32) r9_813;
					word32 r9_32_32_1813 = SLICE(r9_813, word32, 32);
					if (ebx_179 != 0x00)
						r9d_819 = __bswap<word32>(r9d_819);
					if ((word32) r10_805 + 0x04 <= r8d_147)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_833 = (uint64) rcx->u0.t0008.u0;
						word32 edx_839 = (word32) rdx_833;
						if ((word32) rdx_833 + 0x04 <= r8d_147)
						{
							uint64 rdx_841 = (uint64) (edx_839 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_841;
							if ((word32) rdx_841 + 0x04 <= r8d_147)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 rdx_852 = (uint64) rcx->u0.t0008.u0;
								word32 edx_858 = (word32) rdx_852;
								if ((word32) rdx_852 + 0x04 <= r8d_147)
								{
									uint64 rdx_860 = (uint64) (edx_858 + 0x04);
									rcx->u0.t0008.u0 = (int32) (word32) rdx_860;
									if ((word32) rdx_860 + 0x04 <= r8d_147)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 rdx_871 = (uint64) rcx->u0.t0008.u0;
										if ((word32) rdx_871 + 0x04 <= r8d_147)
										{
											rcx->u0.t0008.u0 = (int32) ((word32) rdx_871 + 0x04);
											Eq_1342 r8d_1015 = dwLoc0198_1236;
											if (dwLoc0198_1236 != 0x00)
												r8d_1015.u2 = (word64) dwLoc0198_1236 + r10d_189;
											Eq_1342 edx_1049 = dwLoc0194_1243;
											if (dwLoc0194_1243 != 0x00)
												edx_1049.u2 = (word64) dwLoc0194_1243 + r10d_298;
											Eq_1342 eax_1057 = dwLoc0190_1248;
											if (dwLoc0190_1248 != 0x00)
												eax_1057.u2 = (word64) dwLoc0190_1248 + r10d_355;
											if (edi_1084 != 0x00)
												edi_1084.u2 = (word64) edi_1084 + r10d_641;
											if (ebp_1088 != 0x00)
												ebp_1088.u2 = (word64) ebp_1088 + r10d_488;
											uint64 r9_1857 = SEQ(r9_32_32_1813, r9d_819);
											if (r9d_819 != 0x00)
												r9_1857 = (uint64) ((word64) r9d_819 + r10d_797);
											word32 r9d_1101 = (word32) r9_1857;
											if (esi_1003 != 0x00)
												esi_1003.u2 = (word64) esi_1003 + r10d_228;
											r8->t001C.u0 = (int32) r8d_1015;
											r8->t002C.u0 = (int32) edx_1049;
											r8->t0034.u0 = (int32) eax_1057;
											r8->t0028.u0 = (int32) dwLoc0188_1240;
											r8->t0030.u0 = (int32) dwLoc0184_1245;
											r8->t0040.u0 = (int32) dwLoc0180_1250;
											r8->t0018.u0 = (int32) dwLoc018C_1233;
											r8->t0038.u0 = (int32) r13d_1079;
											r8->t003C.u0 = (int32) edi_1084;
											r8->t0044.u0 = (int32) ebp_1088;
											r8->t0048.u0 = (int32) r14d_1098;
											r8->dw004C = r9d_1101;
											if (esi_1003 != 0x00)
											{
												Eq_137 rdx_1115;
												rdx_1115.u0 = rcx->u0.t0000.u0;
												rcx->u0.t0008.u0 = (int32) esi_1003;
												uint64 r11_1142 = 0x00;
												do
												{
													word32 r11d_1140 = (word32) r11_1142;
													if (rdx_1115 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
														goto l0000000180011754;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													r11_1142 = (uint64) (r11d_1140 + 0x01);
												} while ((word32) r11_1142 < 0x40);
											}
											return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
										}
									}
								}
							}
						}
					}
				}
l0000000180011754:
				return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
			}
		}
	}
l000000018001176C:
	return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
}

// 0000000180011770: Register word32 fn0000000180011770(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_30986) r8)
// Called from:
//      fn0000000180010580
word32 fn0000000180011770(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_30986 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_8 = g_qw80030008 ^ fp - 424;
	Eq_137 r9_11;
	r9_11.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01B0;
	if (r9_11 != 0x00 && (word64) edx + 4 <= ((rcx->u0).t000C).u0)
	{
		rcx->u0.t0008.u0 = (int32) ((word64) edx + 4);
		uint64 rdx_32 = (uint64) r9_11.u2[(uint64) edx];
		Eq_1342 edx_34 = (word32) rdx_32;
		word32 rdx_32_32_39 = SLICE(rdx_32, word32, 32);
		if ((&rcx->u0)[1] != 0x00)
			rdx_32 = SEQ(rdx_32_32_39, __bswap<word32>(edx_34));
		Eq_33375 tLoc0158;
		fn0000000180005050(rcx, (word32) rdx_32, &tLoc0158);
		Eq_137 r9_53;
		r9_53.u0 = rcx->u0.t0000.u0;
		int32 r8d_118 = 0x00;
		int32 edx_1102;
		Eq_1342 eax_111;
		for (edx_1102 = 0x00; edx_1102 < 0x06; ++edx_1102)
		{
			if (r9_53 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l0000000180011D37;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			eax_111.u0 = rcx->u0.t0008.u0;
		}
		int32 edx_94 = 22;
		if (g_t800306F0.u0 == 884)
			edx_94 = 0x14;
		if (edx_94 > 0x00)
		{
			Eq_1342 r10d_1103;
			r10d_1103.u0 = rcx->u0.t000C.u0;
			do
			{
				if (r9_53 == 0x00)
					goto l0000000180011D37;
				eax_111.u2 = (word64) eax_111 + 4;
				if (eax_111 > r10d_1103)
					goto l0000000180011D37;
				rcx->u0.t0008.u0 = (int32) eax_111;
				++r8d_118;
			} while (r8d_118 < edx_94);
		}
		if (r9_53 != 0x00)
		{
			Eq_1342 r8d_143;
			r8d_143.u0 = rcx->u0.t000C.u0;
			if ((word64) eax_111 + 4 <= r8d_143)
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_149 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_156 = r9_53.u2[(uint64) ((word32) r10_149 - 0x04)];
				word32 r10d_172 = (word32) r10_149;
				Eq_1342 r11d_162 = (&rcx->u0)[1];
				Eq_1342 dwLoc0188_1109 = eax_156;
				if (r11d_162 != 0x00)
					dwLoc0188_1109 = __bswap<word32>(eax_156);
				if ((word32) r10_149 + 0x04 <= r8d_143)
				{
					uint64 r10_186 = (uint64) (r10d_172 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_186;
					Eq_1342 r13d_1017 = r9_53.u2[(uint64) ((word32) r10_186 - 0x04)];
					if (r11d_162 != 0x00)
						r13d_1017 = __bswap<word32>(r13d_1017);
					if ((word32) r10_186 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_222 = (uint64) rcx->u0.t0008.u0;
					word32 edx_228 = (word32) rdx_222;
					if ((word32) rdx_222 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_230 = (uint64) (edx_228 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_230;
					if ((word32) rdx_230 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_241 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_247 = r9_53.u2[(uint64) ((word32) r10_241 - 0x04)];
					word32 r10d_260 = (word32) r10_241;
					Eq_1342 dwLoc0184_1113 = eax_247;
					if (r11d_162 != 0x00)
						dwLoc0184_1113 = __bswap<word32>(eax_247);
					if ((word32) r10_241 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 r10_274 = (uint64) (r10d_260 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_274;
					Eq_1342 r15d_1023 = r9_53.u2[(uint64) ((word32) r10_274 - 0x04)];
					if (r11d_162 != 0x00)
						r15d_1023 = __bswap<word32>(r15d_1023);
					if ((word32) r10_274 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_312 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_318 = r9_53.u2[(uint64) ((word32) r10_312 - 0x04)];
					word32 r10d_331 = (word32) r10_312;
					Eq_1342 dwLoc0180_1117 = eax_318;
					if (r11d_162 != 0x00)
						dwLoc0180_1117 = __bswap<word32>(eax_318);
					if ((word32) r10_312 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 r10_345 = (uint64) (r10d_331 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_345;
					Eq_1342 r12d_1028 = r9_53.u2[(uint64) ((word32) r10_345 - 0x04)];
					if (r11d_162 != 0x00)
						r12d_1028 = __bswap<word32>(r12d_1028);
					if ((word32) r10_345 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_385 = (uint64) rcx->u0.t0008.u0;
					word32 edx_391 = (word32) rdx_385;
					if ((word32) rdx_385 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_393 = (uint64) (edx_391 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_393;
					if ((word32) rdx_393 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_404 = (uint64) rcx->u0.t0008.u0;
					word32 edx_410 = (word32) rdx_404;
					if ((word32) rdx_404 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_412 = (uint64) (edx_410 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_412;
					if ((word32) rdx_412 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_423 = (uint64) rcx->u0.t0008.u0;
					word32 edx_429 = (word32) rdx_423;
					if ((word32) rdx_423 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_431 = (uint64) (edx_429 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_431;
					if ((word32) rdx_431 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_442 = (uint64) rcx->u0.t0008.u0;
					word32 edx_448 = (word32) rdx_442;
					if ((word32) rdx_442 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_450 = (uint64) (edx_448 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_450;
					if ((word32) rdx_450 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_461 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_467 = r9_53.u2[(uint64) ((word32) r10_461 - 0x04)];
					word32 r10d_480 = (word32) r10_461;
					Eq_1342 dwLoc0178_1121 = eax_467;
					if (r11d_162 != 0x00)
						dwLoc0178_1121 = __bswap<word32>(eax_467);
					if ((word32) r10_461 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 r10_494 = (uint64) (r10d_480 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_494;
					Eq_1342 ebp_1035 = r9_53.u2[(uint64) ((word32) r10_494 - 0x04)];
					if (r11d_162 != 0x00)
						ebp_1035 = __bswap<word32>(ebp_1035);
					if ((word32) r10_494 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_536 = (uint64) rcx->u0.t0008.u0;
					word32 edx_542 = (word32) rdx_536;
					if ((word32) rdx_536 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_544 = (uint64) (edx_542 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_544;
					if ((word32) rdx_544 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_555 = (uint64) rcx->u0.t0008.u0;
					word32 edx_561 = (word32) rdx_555;
					if ((word32) rdx_555 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_563 = (uint64) (edx_561 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_563;
					if ((word32) rdx_563 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_574 = (uint64) rcx->u0.t0008.u0;
					word32 edx_580 = (word32) rdx_574;
					if ((word32) rdx_574 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_582 = (uint64) (edx_580 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_582;
					if ((word32) rdx_582 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_593 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_599 = r9_53.u2[(uint64) ((word32) r10_593 - 0x04)];
					word32 r10d_612 = (word32) r10_593;
					Eq_1342 dwLoc017C_1125 = eax_599;
					if (r11d_162 != 0x00)
						dwLoc017C_1125 = __bswap<word32>(eax_599);
					if ((word32) r10_593 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 r10_626 = (uint64) (r10d_612 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_626;
					Eq_1342 edi_1032 = r9_53.u2[(uint64) ((word32) r10_626 - 0x04)];
					if (r11d_162 != 0x00)
						edi_1032 = __bswap<word32>(edi_1032);
					if ((word32) r10_626 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_670 = (uint64) rcx->u0.t0008.u0;
					word32 edx_676 = (word32) rdx_670;
					if ((word32) rdx_670 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_678 = (uint64) (edx_676 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_678;
					if ((word32) rdx_678 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_689 = (uint64) rcx->u0.t0008.u0;
					word32 edx_695 = (word32) rdx_689;
					if ((word32) rdx_689 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_697 = (uint64) (edx_695 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_697;
					if ((word32) rdx_697 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rbx_732 = (uint64) rcx->u0.t0008.u0;
					word32 ebx_765 = (word32) rbx_732;
					Eq_1342 r14d_1044 = r9_53.u2[(uint64) ((word32) rbx_732 - 0x04)];
					if (r11d_162 != 0x00)
						r14d_1044 = __bswap<word32>(r14d_1044);
					if ((word32) rbx_732 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rbx_773 = (uint64) (ebx_765 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rbx_773;
					uint64 r10_781 = (uint64) r9_53.u2[(uint64) ((word32) rbx_773 - 0x04)];
					Eq_1342 r10d_787 = (word32) r10_781;
					word32 r10_32_32_1516 = SLICE(r10_781, word32, 32);
					if (r11d_162 != 0x00)
						r10d_787 = __bswap<word32>(r10d_787);
					if ((word32) rbx_773 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_801 = (uint64) rcx->u0.t0008.u0;
					word32 edx_807 = (word32) rdx_801;
					if ((word32) rdx_801 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_809 = (uint64) (edx_807 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_809;
					if ((word32) rdx_809 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_820 = (uint64) rcx->u0.t0008.u0;
					word32 edx_826 = (word32) rdx_820;
					if ((word32) rdx_820 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					uint64 rdx_828 = (uint64) (edx_826 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_828;
					if ((word32) rdx_828 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_839 = (uint64) rcx->u0.t0008.u0;
					if ((word32) rdx_839 + 0x04 > r8d_143)
						return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
					rcx->u0.t0008.u0 = (int32) ((word32) rdx_839 + 0x04);
					if (r13d_1017 != 0x00)
						r13d_1017.u2 = (word64) r13d_1017 + r10d_172;
					if (r15d_1023 != 0x00)
						r15d_1023.u2 = (word64) r15d_1023 + r10d_260;
					if (r12d_1028 != 0x00)
						r12d_1028.u2 = (word64) r12d_1028 + r10d_331;
					if (edi_1032 != 0x00)
						edi_1032.u2 = (word64) edi_1032 + r10d_612;
					if (ebp_1035 != 0x00)
						ebp_1035.u2 = (word64) ebp_1035 + r10d_480;
					uint64 r10_1659 = SEQ(r10_32_32_1516, r10d_787);
					if (r10d_787 != 0x00)
						r10_1659 = (uint64) ((word64) r10d_787 + ebx_765);
					r8->t0018.u0 = (int32) dwLoc0188_1109;
					r8->t0028.u0 = (int32) dwLoc0184_1113;
					r8->t0030.u0 = (int32) dwLoc0180_1117;
					r8->t0038.u0 = (int32) dwLoc017C_1125;
					r8->t0040.u0 = (int32) dwLoc0178_1121;
					r8->t001C.u0 = (int32) r13d_1017;
					r8->t002C.u0 = (int32) r15d_1023;
					r8->t0034.u0 = (int32) r12d_1028;
					r8->t003C.u0 = (int32) edi_1032;
					r8->t0044.u0 = (int32) ebp_1035;
					r8->t0048.u0 = (int32) r14d_1044;
					r8->dw004C = (word32) r10_1659;
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				}
			}
		}
	}
l0000000180011D37:
	return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
}

// 0000000180011D40: Register word32 fn0000000180011D40(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_31235) r8)
// Called from:
//      fn0000000180010580
word32 fn0000000180011D40(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_31235 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_8 = g_qw80030008 ^ fp - 424;
	Eq_137 r9_11;
	r9_11.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01B0;
	if (r9_11 != 0x00 && (word64) edx + 4 <= ((rcx->u0).t000C).u0)
	{
		rcx->u0.t0008.u0 = (int32) ((word64) edx + 4);
		uint64 rdx_32 = (uint64) r9_11.u2[(uint64) edx];
		Eq_1342 edx_34 = (word32) rdx_32;
		word32 rdx_32_32_39 = SLICE(rdx_32, word32, 32);
		if ((&rcx->u0)[1] != 0x00)
			rdx_32 = SEQ(rdx_32_32_39, __bswap<word32>(edx_34));
		Eq_34283 tLoc0158;
		fn0000000180005050(rcx, (word32) rdx_32, &tLoc0158);
		Eq_137 r10_53;
		r10_53.u0 = rcx->u0.t0000.u0;
		int32 edx_1056;
		Eq_1342 eax_1057;
		for (edx_1056 = 0x00; edx_1056 < 0x06; ++edx_1056)
		{
			if (r10_53 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l00000001800122ED;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			eax_1057.u0 = rcx->u0.t0008.u0;
		}
		Eq_1342 r8d_1058;
		r8d_1058.u0 = rcx->u0.t000C.u0;
		uint64 r9_103 = 0x00;
		do
		{
			word32 r9d_101 = (word32) r9_103;
			if (r10_53 == 0x00)
				goto l00000001800122ED;
			eax_1057.u2 = (word64) eax_1057 + 4;
			if (eax_1057 > r8d_1058)
				goto l00000001800122ED;
			rcx->u0.t0008.u0 = (int32) eax_1057;
			r9_103 = (uint64) (r9d_101 + 0x01);
		} while ((word32) r9_103 < 22);
		if (r10_53 != 0x00 && (word64) eax_1057 + 4 <= r8d_1058)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r9_121 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_128 = r10_53.u2[(uint64) ((word32) r9_121 - 0x04)];
			word32 r9d_142 = (word32) r9_121;
			Eq_1342 r11d_132 = (&rcx->u0)[1];
			Eq_1342 dwLoc0188_1063 = eax_128;
			if (r11d_132 != 0x00)
				dwLoc0188_1063 = __bswap<word32>(eax_128);
			if ((word32) r9_121 + 0x04 <= r8d_1058)
			{
				uint64 r9_156 = (uint64) (r9d_142 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r9_156;
				Eq_1342 r13d_176 = r10_53.u2[(uint64) ((word32) r9_156 - 0x04)];
				if (r11d_132 != 0x00)
					r13d_176 = __bswap<word32>(r13d_176);
				if ((word32) r9_156 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_190 = (uint64) rcx->u0.t0008.u0;
				word32 edx_196 = (word32) rdx_190;
				if ((word32) rdx_190 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_198 = (uint64) (edx_196 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_198;
				if ((word32) rdx_198 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_209 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_215 = r10_53.u2[(uint64) ((word32) r9_209 - 0x04)];
				word32 r9d_228 = (word32) r9_209;
				Eq_1342 dwLoc0184_1067 = eax_215;
				if (r11d_132 != 0x00)
					dwLoc0184_1067 = __bswap<word32>(eax_215);
				if ((word32) r9_209 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 r9_242 = (uint64) (r9d_228 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r9_242;
				Eq_1342 r15d_264 = r10_53.u2[(uint64) ((word32) r9_242 - 0x04)];
				if (r11d_132 != 0x00)
					r15d_264 = __bswap<word32>(r15d_264);
				if ((word32) r9_242 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_278 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_284 = r10_53.u2[(uint64) ((word32) r9_278 - 0x04)];
				word32 r9d_297 = (word32) r9_278;
				Eq_1342 dwLoc0180_1071 = eax_284;
				if (r11d_132 != 0x00)
					dwLoc0180_1071 = __bswap<word32>(eax_284);
				if ((word32) r9_278 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 r9_311 = (uint64) (r9d_297 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r9_311;
				Eq_1342 r12d_335 = r10_53.u2[(uint64) ((word32) r9_311 - 0x04)];
				if (r11d_132 != 0x00)
					r12d_335 = __bswap<word32>(r12d_335);
				if ((word32) r9_311 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_349 = (uint64) rcx->u0.t0008.u0;
				word32 edx_355 = (word32) rdx_349;
				if ((word32) rdx_349 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_357 = (uint64) (edx_355 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_357;
				if ((word32) rdx_357 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_368 = (uint64) rcx->u0.t0008.u0;
				word32 edx_374 = (word32) rdx_368;
				if ((word32) rdx_368 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_376 = (uint64) (edx_374 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_376;
				if ((word32) rdx_376 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_387 = (uint64) rcx->u0.t0008.u0;
				word32 edx_393 = (word32) rdx_387;
				if ((word32) rdx_387 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_395 = (uint64) (edx_393 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_395;
				if ((word32) rdx_395 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_406 = (uint64) rcx->u0.t0008.u0;
				word32 edx_412 = (word32) rdx_406;
				if ((word32) rdx_406 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_414 = (uint64) (edx_412 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_414;
				if ((word32) rdx_414 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_425 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_431 = r10_53.u2[(uint64) ((word32) r9_425 - 0x04)];
				word32 r9d_444 = (word32) r9_425;
				Eq_1342 dwLoc0178_1075 = eax_431;
				if (r11d_132 != 0x00)
					dwLoc0178_1075 = __bswap<word32>(eax_431);
				if ((word32) r9_425 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 r9_458 = (uint64) (r9d_444 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r9_458;
				Eq_1342 ebp_484 = r10_53.u2[(uint64) ((word32) r9_458 - 0x04)];
				if (r11d_132 != 0x00)
					ebp_484 = __bswap<word32>(ebp_484);
				if ((word32) r9_458 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_498 = (uint64) rcx->u0.t0008.u0;
				word32 edx_504 = (word32) rdx_498;
				if ((word32) rdx_498 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_506 = (uint64) (edx_504 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_506;
				if ((word32) rdx_506 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_517 = (uint64) rcx->u0.t0008.u0;
				word32 edx_523 = (word32) rdx_517;
				if ((word32) rdx_517 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_525 = (uint64) (edx_523 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_525;
				if ((word32) rdx_525 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_536 = (uint64) rcx->u0.t0008.u0;
				word32 edx_542 = (word32) rdx_536;
				if ((word32) rdx_536 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_544 = (uint64) (edx_542 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_544;
				if ((word32) rdx_544 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_555 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_561 = r10_53.u2[(uint64) ((word32) r9_555 - 0x04)];
				word32 r9d_574 = (word32) r9_555;
				Eq_1342 dwLoc017C_1079 = eax_561;
				if (r11d_132 != 0x00)
					dwLoc017C_1079 = __bswap<word32>(eax_561);
				if ((word32) r9_555 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 r9_588 = (uint64) (r9d_574 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r9_588;
				Eq_1342 esi_616 = r10_53.u2[(uint64) ((word32) r9_588 - 0x04)];
				if (r11d_132 != 0x00)
					esi_616 = __bswap<word32>(esi_616);
				if ((word32) r9_588 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_630 = (uint64) rcx->u0.t0008.u0;
				word32 edx_636 = (word32) rdx_630;
				if ((word32) rdx_630 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_638 = (uint64) (edx_636 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_638;
				if ((word32) rdx_638 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_649 = (uint64) rcx->u0.t0008.u0;
				word32 edx_655 = (word32) rdx_649;
				if ((word32) rdx_649 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_657 = (uint64) (edx_655 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_657;
				if ((word32) rdx_657 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rbx_690 = (uint64) rcx->u0.t0008.u0;
				word32 ebx_721 = (word32) rbx_690;
				Eq_1342 r14d_716 = r10_53.u2[(uint64) ((word32) rbx_690 - 0x04)];
				if (r11d_132 != 0x00)
					r14d_716 = __bswap<word32>(r14d_716);
				if ((word32) rbx_690 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rbx_729 = (uint64) (ebx_721 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rbx_729;
				uint64 r9_737 = (uint64) r10_53.u2[(uint64) ((word32) rbx_729 - 0x04)];
				Eq_1342 r9d_743 = (word32) r9_737;
				word32 r9_32_32_1555 = SLICE(r9_737, word32, 32);
				if (r11d_132 != 0x00)
					r9d_743 = __bswap<word32>(r9d_743);
				if ((word32) rbx_729 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_757 = (uint64) rcx->u0.t0008.u0;
				word32 edx_763 = (word32) rdx_757;
				if ((word32) rdx_757 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_765 = (uint64) (edx_763 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_765;
				if ((word32) rdx_765 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_776 = (uint64) rcx->u0.t0008.u0;
				word32 edx_782 = (word32) rdx_776;
				if ((word32) rdx_776 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				uint64 rdx_784 = (uint64) (edx_782 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_784;
				if ((word32) rdx_784 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_795 = (uint64) rcx->u0.t0008.u0;
				if ((word32) rdx_795 + 0x04 > r8d_1058)
					return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
				rcx->u0.t0008.u0 = (int32) ((word32) rdx_795 + 0x04);
				if (r13d_176 != 0x00)
					r13d_176.u2 = (word64) r13d_176 + r9d_142;
				if (r15d_264 != 0x00)
					r15d_264.u2 = (word64) r15d_264 + r9d_228;
				if (r12d_335 != 0x00)
					r12d_335.u2 = (word64) r12d_335 + r9d_297;
				if (esi_616 != 0x00)
					esi_616.u2 = (word64) esi_616 + r9d_574;
				if (ebp_484 != 0x00)
					ebp_484.u2 = (word64) ebp_484 + r9d_444;
				uint64 r9_1607 = SEQ(r9_32_32_1555, r9d_743);
				if (r9d_743 != 0x00)
					r9_1607 = (uint64) ((word64) r9d_743 + ebx_721);
				r8->t0018.u0 = (int32) dwLoc0188_1063;
				r8->t0028.u0 = (int32) dwLoc0184_1067;
				r8->t0030.u0 = (int32) dwLoc0180_1071;
				r8->t0038.u0 = (int32) dwLoc017C_1079;
				r8->t0040.u0 = (int32) dwLoc0178_1075;
				r8->t001C.u0 = (int32) r13d_176;
				r8->t002C.u0 = (int32) r15d_264;
				r8->t0034.u0 = (int32) r12d_335;
				r8->t003C.u0 = (int32) esi_616;
				r8->t0044.u0 = (int32) ebp_484;
				r8->t0048.u0 = (int32) r14d_716;
				r8->dw004C = (word32) r9_1607;
				return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
			}
		}
	}
l00000001800122ED:
	return (word32) fn0000000180023580(rax_8 ^ fp - 424, qwLoc01B0);
}

// 0000000180012300: Register word32 fn0000000180012300(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180010580
word32 fn0000000180012300(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_11 = g_qw80030008 ^ fp - 0x0278;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (edx == 0x00 || fn0000000180001B50(&g_t800306F0, (word32) rdx) != 0x00)
		{
			uint64 rsi_58 = (uint64) rcx->u0.t0008.u0;
			up32 ebp_298 = 0x00;
			Eq_1342 esi_278 = (word32) rsi_58;
			up32 edi_210 = 0x00;
			Eq_35289 tLoc0258;
			Eq_35293 tLoc0148;
			if (edx != 0x00)
			{
				do
				{
					memset(&tLoc0258, 0, 0x0104);
					memset(&tLoc0148, 0, 0x0104);
					Eq_137 r9_85;
					r9_85.u0 = rcx->u0.t0000.u0;
					if (r9_85 == 0x00)
					{
l00000001800125C3:
						goto l00000001800125FA;
					}
					Eq_1342 r8d_98;
					r8d_98.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_98)
						goto l00000001800125C3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_104 = (uint64) rcx->u0.t0008.u0;
					uint64 rdx_110 = (uint64) r9_85.u2[(uint64) ((word32) r10_104 - 0x04)];
					Eq_1342 r11d_111 = (&rcx->u0)[1];
					Eq_1342 edx_116 = (word32) rdx_110;
					word32 rdx_32_32_177 = SLICE(rdx_110, word32, 32);
					if (r11d_111 != 0x00)
						rdx_110 = SEQ(rdx_32_32_177, __bswap<word32>(edx_116));
					if ((word32) r10_104 + 0x04 > r8d_98)
						goto l00000001800125C3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_130 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_141 = r9_85.u2[(uint64) ((word32) r10_130 - 0x04)];
					if (r11d_111 != 0x00)
						r9d_141 = __bswap<word32>(r9d_141);
					if ((word32) r10_130 + 0x04 > r8d_98)
						goto l00000001800125C3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_98)
						goto l00000001800125C3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, (word32) rdx_110, &tLoc0258);
					fn0000000180005050(rcx, r9d_141, &tLoc0148);
					struct Eq_2417 * r9_203 = g_ptr80030720;
					if (r9_203 != null)
					{
						int64 rax_211 = (int64) edi_210;
						union Eq_35305 * rcx_214 = &tLoc0258;
						byte * rdx_215 = (byte *) (&(r9_203->a0030 + 46)->t0000.u0 + rax_211 *64 0x00BE);
						char al_222;
						do
						{
							al_222 = rcx_214->u0;
							*rdx_215 = al_222;
							rcx_214 = (union Eq_35305 *) ((char *) rcx_214 + 1);
							++rdx_215;
						} while (al_222 != 0x00);
						union Eq_35326 * rcx_232 = &tLoc0148;
						byte * rdx_235 = (byte *) (&(g_ptr80030720->a0030 + 111)->t0000.u0 + rax_211 *64 0x00BE);
						char al_242;
						do
						{
							al_242 = rcx_232->u0;
							*rdx_235 = al_242;
							rcx_232 = (union Eq_35326 *) ((char *) rcx_232 + 1);
							++rdx_235;
						} while (al_242 != 0x00);
					}
					++edi_210;
				} while (edi_210 < edx);
			}
			rcx->u0.t0008.u0 = (int32) esi_278;
			uint64 rsi_308 = rsi_58;
			if (edx != 0x00)
			{
				do
				{
					Eq_137 r9_297;
					r9_297.u0 = rcx->u0.t0000.u0;
					struct Eq_1142 * rdi_301 = (struct Eq_1142 *) (g_ptr80030720 + (int64) ebp_298);
					if (r9_297 == 0x00)
					{
l000000018001262D:
						goto l00000001800125F2;
					}
					uint64 rdx_310 = (uint64) ((word32) rsi_308 + 0x04);
					Eq_1342 r8d_312;
					r8d_312.u0 = rcx->u0.t000C.u0;
					Eq_1342 edx_311 = (word32) rdx_310;
					if (edx_311 > r8d_312)
						goto l000000018001262D;
					Eq_1342 r11d_322 = (&rcx->u0)[1];
					rcx->u0.t0008.u0 = (int32) edx_311;
					Eq_1342 r10d_327 = r9_297.u2[(uint64) ((word32) rdx_310 - 0x04)];
					if (r11d_322 != 0x00)
						r10d_327 = __bswap<word32>(r10d_327);
					if ((word32) rdx_310 + 0x04 > r8d_312)
						goto l000000018001262D;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_341 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_352 = r9_297.u2[(uint64) ((word32) rdx_341 - 0x04)];
					if (r11d_322 != 0x00)
						esi_352 = __bswap<word32>(esi_352);
					if ((word32) rdx_341 + 0x04 > r8d_312)
						goto l000000018001262D;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r14_366 = (uint64) rcx->u0.t0008.u0;
					if ((word32) r14_366 + 0x04 > r8d_312)
						goto l000000018001262D;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_381 = (uint64) r9_297.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					Eq_1342 r9d_387 = (word32) r9_381;
					word32 r9_32_32_431 = SLICE(r9_381, word32, 32);
					if (r11d_322 != 0x00)
						r9_381 = SEQ(r9_32_32_431, __bswap<word32>(r9d_387));
					fn0000000180005050(rcx, r10d_327, &tLoc0148);
					fn0000000180005050(rcx, esi_352, &tLoc0258);
					uint64 rsi_436 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_437 = (word32) r9_381;
					Eq_1753 ecx_444;
					ecx_444.u0 = g_t800306F0.u0;
					Eq_1342 eax_442 = (word32) (r14_366 + r9_381);
					Eq_1342 esi_522 = (word32) rsi_436;
					if (r9d_437 == 0x00)
						eax_442 = r9d_437;
					if (ecx_444 == 868)
					{
						if (rdi_301 == null)
							goto l000000018001262D;
						if (eax_442 != 0x00)
						{
							rcx->u0.t0008.u0 = (int32) eax_442;
							fn0000000180012ED0(rcx, rdi_301);
						}
						goto l00000001800125DF;
					}
					if (fn0000000180012DD0(rcx, rdi_301, eax_442) == 0x00)
						goto l000000018001262D;
l00000001800125DF:
					rcx->u0.t0008.u0 = (int32) esi_522;
					++ebp_298;
					rsi_308 = rsi_436;
				} while (ebp_298 < edx);
			}
l00000001800125F2:
l00000001800125FA:
		}
	}
	word64 qwLoc0280;
	return (word32) fn0000000180023580(rax_11 ^ fp - 0x0278, qwLoc0280);
}

// 0000000180012640: Register word32 fn0000000180012640(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180010580
word32 fn0000000180012640(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	ui64 rax_14 = g_qw80030008 ^ fp - 0x04B8;
	if (r8d != 0x00 && edx != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (fn00000001800020D0(&g_t800306F0, (word32) rdx) != 0x00)
		{
			up32 r14d_382 = 0x00;
			Eq_35803 tLoc0488;
			Eq_35807 tLoc0378;
			Eq_35811 tLoc0268;
			Eq_35815 tLoc0158;
			if (edx != 0x00)
			{
				do
				{
					memset(&tLoc0488, 0, 0x0104);
					Eq_137 rdx_81;
					rdx_81.u0 = rcx->u0.t0000.u0;
					if (rdx_81 == 0x00)
					{
l0000000180012B0C:
						goto l0000000180012B0E;
					}
					Eq_1342 r8d_94;
					r8d_94.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_100 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r10d_107 = (&rcx->u0)[1];
					Eq_1342 r11d_112 = rdx_81.u2[(uint64) ((word32) r9_100 - 0x04)];
					if (r10d_107 != 0x00)
						r11d_112 = __bswap<word32>(r11d_112);
					if ((word32) r9_100 + 0x04 > r8d_94)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_126 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_137 = rdx_81.u2[(uint64) ((word32) r9_126 - 0x04)];
					if (r10d_107 != 0x00)
						esi_137 = __bswap<word32>(esi_137);
					if ((word32) r9_126 + 0x04 > r8d_94)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_151 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_162 = rdx_81.u2[(uint64) ((word32) r9_151 - 0x04)];
					if (r10d_107 != 0x00)
						edi_162 = __bswap<word32>(edi_162);
					if ((word32) r9_151 + 0x04 > r8d_94)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rbp_176 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_187 = rdx_81.u2[(uint64) ((word32) rbp_176 - 0x04)];
					if (r10d_107 != 0x00)
						r9d_187 = __bswap<word32>(r9d_187);
					if ((word32) rbp_176 + 0x04 > r8d_94)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, r11d_112, &tLoc0488);
					fn0000000180005050(rcx, esi_137, &tLoc0378);
					fn0000000180005050(rcx, edi_162, &tLoc0268);
					fn0000000180005050(rcx, r9d_187, &tLoc0158);
					if (rcx->u0.t0000.u0 == 0x00)
						goto l0000000180012B0C;
					Eq_1342 ecx_293;
					ecx_293.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > ecx_293)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > ecx_293)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > ecx_293)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1753 eax_322;
					eax_322.u0 = g_t800306F0.u0;
					uint64 rdx_321 = (uint64) rcx->u0.t0008.u0;
					if (eax_322 != 868)
					{
						Eq_1342 eax_357;
						if (eax_322 == 884)
						{
							eax_357 = (word32) rdx_321 + 0x04;
							goto l000000018001287A;
						}
						if (eax_322 != 0x037D && eax_322 != 0x0386)
							goto l0000000180012886;
						if ((word32) rdx_321 + 0x04 > ecx_293)
							goto l0000000180012B0C;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 > ecx_293)
							goto l0000000180012B0C;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						eax_357 = rcx->u0.t0008.u0 + 0x04;
l000000018001287A:
						if (eax_357 > ecx_293)
							goto l0000000180012B0C;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					}
l0000000180012886:
					struct Eq_1710 * r8_372 = g_ptr80030710;
					if (r8_372 != null)
					{
						union Eq_36019 * rdx_389 = &tLoc0488;
						byte * r8_392 = (byte *) (&(r8_372->a0028 + 3)->t0000.u0 + (int64) r14d_382 *64 78);
						char al_399;
						do
						{
							al_399 = rdx_389->u0;
							*r8_392 = al_399;
							rdx_389 = (union Eq_36019 *) ((char *) rdx_389 + 1);
							++r8_392;
						} while (al_399 != 0x00);
					}
					++r14d_382;
				} while (r14d_382 < edx);
			}
			rcx->u0.t0008.u0 = (int32) r8d;
			up32 r12d_457 = 0x00;
			if (edx != 0x00)
			{
				do
				{
					Eq_137 r8_456;
					r8_456.u0 = rcx->u0.t0000.u0;
					struct Eq_36222 * rax_460 = (struct Eq_36222 *) ((char *) &g_ptr80030710->tFFFFFFF8 + ((int64) r12d_457 *s 0x0138 + 8));
					if (r8_456 == 0x00)
						goto l0000000180012B0C;
					Eq_1342 edx_475;
					edx_475.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > edx_475)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_481 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_488 = (&rcx->u0)[1];
					Eq_1342 r11d_493 = r8_456.u2[(uint64) ((word32) r10_481 - 0x04)];
					if (r9d_488 != 0x00)
						r11d_493 = __bswap<word32>(r11d_493);
					if ((word32) r10_481 + 0x04 > edx_475)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_507 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r14d_518 = r8_456.u2[(uint64) ((word32) r10_507 - 0x04)];
					if (r9d_488 != 0x00)
						r14d_518 = __bswap<word32>(r14d_518);
					if ((word32) r10_507 + 0x04 > edx_475)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_532 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 ebp_543 = r8_456.u2[(uint64) ((word32) r10_532 - 0x04)];
					if (r9d_488 != 0x00)
						ebp_543 = __bswap<word32>(ebp_543);
					if ((word32) r10_532 + 0x04 > edx_475)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_557 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_568 = r8_456.u2[(uint64) ((word32) r10_557 - 0x04)];
					if (r9d_488 != 0x00)
						edi_568 = __bswap<word32>(edi_568);
					if ((word32) r10_557 + 0x04 > edx_475)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r13_582 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r15d_593 = r8_456.u2[(uint64) ((word32) r13_582 - 0x04)];
					if (r9d_488 != 0x00)
						r15d_593 = __bswap<word32>(r15d_593);
					if ((word32) r13_582 + 0x04 > edx_475)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rsi_613 = (uint64) r8_456.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					Eq_1342 esi_619 = (word32) rsi_613;
					word32 rsi_32_32_797 = SLICE(rsi_613, word32, 32);
					if (r9d_488 != 0x00)
						rsi_613 = SEQ(rsi_32_32_797, __bswap<word32>(esi_619));
					fn0000000180005050(rcx, r11d_493, &tLoc0158);
					fn0000000180005050(rcx, r14d_518, &tLoc0268);
					fn0000000180005050(rcx, ebp_543, &tLoc0378);
					fn0000000180005050(rcx, edi_568, &tLoc0488);
					word32 esi_807 = (word32) rsi_613;
					if (rcx->u0.t0000.u0 == 0x00)
						goto l0000000180012B0C;
					Eq_1342 ecx_710;
					ecx_710.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > ecx_710)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > ecx_710)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > ecx_710)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdi_738 = (uint64) rcx->u0.t0008.u0;
					Eq_1753 eax_739;
					eax_739.u0 = g_t800306F0.u0;
					Eq_1342 edi_859 = (word32) rdi_738;
					if (eax_739 != 868)
					{
						Eq_1342 eax_774;
						if (eax_739 == 884)
						{
							eax_774 = (word32) rdi_738 + 0x04;
							goto l0000000180012AA8;
						}
						if (eax_739 == 0x037D || eax_739 == 0x0386)
						{
							if ((word32) rdi_738 + 0x04 > ecx_710)
								goto l0000000180012B0C;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							if (rcx->u0.t0008.u0 + 0x04 > ecx_710)
								goto l0000000180012B0C;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							eax_774 = rcx->u0.t0008.u0 + 0x04;
l0000000180012AA8:
							if (eax_774 > ecx_710)
								goto l0000000180012B0C;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							edi_859.u0 = rcx->u0.t0008.u0;
						}
					}
					uint64 r9_806 = (uint64) (word32) (rsi_613 + r13_582);
					word32 r9_32_32_823 = SLICE(r9_806, word32, 32);
					if (esi_807 == 0x00)
						r9_806 = SEQ(r9_32_32_823, esi_807);
					if (fn0000000180012B60(rcx, rax_460, r15d_593, (word32) r9_806) == 0x00)
						goto l0000000180012B0C;
					rcx->u0.t0008.u0 = (int32) edi_859;
					++r12d_457;
				} while (r12d_457 < edx);
			}
			int32 r15d_900;
			Eq_137 rcx_876;
			rcx_876.u0 = rcx->u0.t0000.u0;
			for (r15d_900 = 0x00; r15d_900 < 77; ++r15d_900)
			{
				if (rcx_876 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
					goto l0000000180012B0C;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			}
l0000000180012B0E:
		}
	}
	word64 qwLoc04C0;
	return (word32) fn0000000180023580(rax_14 ^ fp - 0x04B8, qwLoc04C0);
}

// 0000000180012B60: Register word32 fn0000000180012B60(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_36222) rdx, Register Eq_1342 r8d, Register Eq_1342 r9d)
// Called from:
//      fn0000000180012640
word32 fn0000000180012B60(union Eq_3676 * rcx, struct Eq_36222 * rdx, Eq_1342 r8d, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_14 = g_qw80030008 ^ fp - 0x0278;
	if (rdx != null)
	{
		if (r9d != 0x00 && r8d != 0x00)
		{
			rcx->u0.t0008.u0 = (int32) r9d;
			Eq_1342 esi_337;
			esi_337.u0 = 0x00;
			if (r8d != 0x00)
			{
				do
				{
					Eq_36439 tLoc0258;
					memset(&tLoc0258, 0, 0x0104);
					Eq_137 r8_61;
					r8_61.u0 = rcx->u0.t0000.u0;
					if (r8_61 == 0x00)
					{
l0000000180012DCB:
						goto l0000000180012D8E;
					}
					Eq_1342 edx_74;
					edx_74.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > edx_74)
						goto l0000000180012DCB;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_80 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r11d_87 = (&rcx->u0)[1];
					Eq_1342 r10d_180 = r8_61.u2[(uint64) ((word32) r9_80 - 0x04)];
					if (r11d_87 != 0x00)
						r10d_180 = __bswap<word32>(r10d_180);
					if ((word32) r9_80 + 0x04 > edx_74)
						goto l0000000180012DCB;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_106 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_117 = r8_61.u2[(uint64) ((word32) r9_106 - 0x04)];
					if (r11d_87 != 0x00)
						edi_117 = __bswap<word32>(edi_117);
					if ((word32) r9_106 + 0x04 > edx_74)
						goto l0000000180012DCB;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > edx_74)
						goto l0000000180012DCB;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > edx_74)
						goto l0000000180012DCB;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r14_151 = (uint64) rcx->u0.t0008.u0;
					if ((word32) r14_151 + 0x04 > edx_74)
						goto l0000000180012DCB;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_166 = (uint64) r8_61.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					Eq_1342 r9d_172 = (word32) r9_166;
					word32 r9_32_32_215 = SLICE(r9_166, word32, 32);
					if (r11d_87 != 0x00)
						r9_166 = SEQ(r9_32_32_215, __bswap<word32>(r9d_172));
					fn0000000180005050(rcx, r10d_180, &tLoc0258);
					Eq_36443 tLoc0148;
					fn0000000180005050(rcx, edi_117, &tLoc0148);
					Eq_1342 r9d_219 = (word32) r9_166;
					Eq_1342 ebp_343;
					ebp_343.u0 = rcx->u0.t0008.u0;
					Eq_1342 edi_226 = (word32) (r14_151 + r9_166);
					if (r9d_219 == 0x00)
						edi_226 = r9d_219;
					if (_stricmp(&tLoc0258, "texture0") == 0x00 && edi_226 != 0x00)
					{
						Eq_137 rdx_242;
						rdx_242.u0 = rcx->u0.t0000.u0;
						rcx->u0.t0008.u0 = (int32) edi_226;
						if (rdx_242 == 0x00)
							goto l0000000180012DCB;
						Eq_1342 ecx_256;
						ecx_256.u0 = rcx->u0.t000C.u0;
						Eq_1342 eax_255;
						eax_255.u2 = (word64) edi_226 + 4;
						if (eax_255 > ecx_256)
							goto l0000000180012DCB;
						rcx->u0.t0008.u0 = (int32) eax_255;
						if ((word64) eax_255 + 4 > ecx_256)
							goto l0000000180012DCB;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 > ecx_256)
							goto l0000000180012DCB;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 > ecx_256)
							goto l0000000180012DCB;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 > ecx_256)
							goto l0000000180012DCB;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 > ecx_256)
							goto l0000000180012DCB;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						Eq_1342 eax_322 = rdx_242.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
						if ((&rcx->u0)[1] != 0x00)
							eax_322 = __bswap<word32>(eax_322);
						rdx->t0028.u0 = (int32) eax_322;
					}
					rcx->u0.t0008.u0 = (int32) ebp_343;
					esi_337.u2 = (word64) esi_337 + 1;
				} while (esi_337 < r8d);
			}
l0000000180012D8E:
		}
	}
	word64 qwLoc0280;
	return (word32) fn0000000180023580(rax_14 ^ fp - 0x0278, qwLoc0280);
}

// 0000000180012DD0: Register word32 fn0000000180012DD0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register Eq_1342 r9d)
// Called from:
//      fn0000000180012300
word32 fn0000000180012DD0(union Eq_3676 * rcx, struct Eq_1142 * rdx, Eq_1342 r9d)
{
	word64 r9;
	r9d = (word32) r9;
	if (rdx == null)
		return 0x00;
	if (r9d == 0x00)
		return (word64) r9d + 1;
	Eq_137 r10_19;
	r10_19.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) r9d;
	if (r10_19 == 0x00)
		return 0x00;
	Eq_1342 edx_32;
	edx_32.u0 = rcx->u0.t000C.u0;
	if ((word64) r9d + 4 > edx_32)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) ((word64) r9d + 4);
	if ((word64) r9d + 6 > edx_32)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
	uint64 r9_45 = (uint64) rcx->u0.t0008.u0;
	word16 r11w_144 = (word16) r10_19.u2[(uint64) ((word32) r9_45 - 0x02)];
	if ((&rcx->u0)[1] != 0x00)
		r11w_144 = __rol<word16,byte>(r11w_144, 0x08);
	if ((word32) r9_45 + 0x02 > edx_32)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
	if (rcx->u0.t0008.u0 + 0x04 > edx_32)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rbx_81 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 r9d_136 = r10_19.u2[(uint64) ((word32) rbx_81 - 0x04)];
	if ((&rcx->u0)[1] != 0x00)
		r9d_136 = __bswap<word32>(r9d_136);
	if ((word32) rbx_81 + 0x04 > edx_32)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > edx_32)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > edx_32)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 eax_141;
	eax_141.u0 = rcx->u0.t0008.u0;
	if (r9d_136 != 0x00)
		eax_141 = r9d_136;
	rcx->u0.t0008.u0 = (int32) eax_141;
	return (word32) (fn0000000180013C40(rcx, rdx, (word32) r11w_144) != 0x00);
}

// 0000000180012ED0: Register word32 fn0000000180012ED0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx)
// Called from:
//      fn0000000180012300
//      fn000000018001A2F0
word32 fn0000000180012ED0(union Eq_3676 * rcx, struct Eq_1142 * rdx)
{
	ptr64 fp;
	ui64 rax_30 = g_qw80030008 ^ fp - 664;
	word64 qwLoc02A0;
	if (rdx == null)
		return (word32) fn0000000180023580(rax_30 ^ fp - 664, qwLoc02A0);
	Eq_137 rdx_40;
	rdx_40.u0 = rcx->u0.t0000.u0;
	if (rdx_40 == 0x00)
		return (word32) fn0000000180023580(rax_30 ^ fp - 664, qwLoc02A0);
	Eq_1342 eax_52 = rcx->u0.t0008.u0 + 0x04;
	Eq_1342 ecx_53;
	ecx_53.u0 = rcx->u0.t000C.u0;
	if (eax_52 > ecx_53)
		return (word32) fn0000000180023580(rax_30 ^ fp - 664, qwLoc02A0);
	rcx->u0.t0008.u0 = (int32) eax_52;
	if ((word64) eax_52 + 4 > ecx_53)
		return (word32) fn0000000180023580(rax_30 ^ fp - 664, qwLoc02A0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	Eq_1265 r12d_115 = rdx_40.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
	if ((&rcx->u0)[1] != 0x00)
		r12d_115 = r12d_115 >> 0x18 | r12d_115 >> 0x08 & 0xFF00 | (r12d_115 & 0xFF00) << 0x08 | r12d_115 << 0x18;
	Eq_36817 tLoc0228;
	fn00000001800010C0(&tLoc0228);
	Eq_36820 r14d_291;
	r14d_291.u0 = 0x00;
	Eq_137 rdi_143;
	rdi_143.u0 = rcx->u0.t0000.u0;
	Eq_36826 r10_145;
	r10_145.u1 = 0x00;
	uint64 r15_231;
	do
	{
		if (rdi_143 == 0x00)
			goto l0000000180013BE5;
		Eq_1342 r8d_161;
		r8d_161.u0 = rcx->u0.t000C.u0;
		if (rcx->u0.t0008.u0 + 0x04 > r8d_161)
			goto l0000000180013BE5;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 r11_167 = (uint64) rcx->u0.t0008.u0;
		Eq_36820 r9d_179 = rdi_143.u2[(uint64) ((word32) r11_167 - 0x04)];
		Eq_1342 esi_174 = (&rcx->u0)[1];
		if (esi_174 != 0x00)
			r9d_179 = r9d_179 >> 0x18 | r9d_179 >> 0x08 & 0xFF00 | (r9d_179 & 0xFF00) << 0x08 | r9d_179 << 0x18;
		if ((word32) r11_167 + 0x04 > r8d_161)
			goto l0000000180013BE5;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		r15_231 = (uint64) rcx->u0.t0008.u0;
		uint64 r8_236 = (uint64) rdi_143.u2[(uint64) ((word32) r15_231 - 0x04)];
		uint32 r8d_242 = (word32) r8_236;
		if (esi_174 != 0x00)
			r8_236 = (uint64) (r8d_242 >> 0x18 | r8d_242 >> 0x08 & 0xFF00 | (r8d_242 & 0xFF00) << 0x08 | r8d_242 << 0x18);
		word32 r8d_293 = (word32) r8_236;
		if (r10_145 == 0x00)
			r14d_291 = r9d_179;
		if (r8d_293 != 0x00)
			(fp - 376)[r10_145] = r8d_293 + (word32) r11_167;
		r10_145 = (word64) r10_145 + 1;
	} while (r10_145 < 0x05);
	tLoc0228.t0004.u0 = (int32) r14d_291;
	if (rdi_143 != 0x00)
	{
		Eq_1342 r9d_348;
		r9d_348.u0 = rcx->u0.t000C.u0;
		if ((word32) r15_231 + 0x04 > r9d_348)
			goto l0000000180013BE5;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 r10_354 = (uint64) rcx->u0.t0008.u0;
		uint64 r8_358 = (uint64) rdi_143.u2[(uint64) ((word32) r10_354 - 0x04)];
		uint32 r8d_366 = (word32) r8_358;
		Eq_1342 r11d_361 = (&rcx->u0)[1];
		if (r11d_361 != 0x00)
			r8_358 = (uint64) (r8d_366 >> 0x18 | r8d_366 >> 0x08 & 0xFF00 | (r8d_366 & 0xFF00) << 0x08 | r8d_366 << 0x18);
		Eq_1342 r8d_423 = (word32) r8_358;
		if ((word32) r10_354 + 0x04 <= r9d_348)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 eax_441;
			eax_441.u0 = rcx->u0.t0008.u0;
			Eq_1342 r13d_1323 = (word32) (r15_231 + r8_358);
			if (r8d_423 == 0x00)
				r13d_1323 = r8d_423;
			Eq_1753 ecx_432;
			ecx_432.u0 = g_t800306F0.u0;
			if (ecx_432 != 779 && (ecx_432 != 866 && ecx_432 != 877))
			{
l000000018001313F:
				if ((word64) eax_441 + 4 <= r9d_348)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r8_480 = (uint64) rcx->u0.t0008.u0;
					uint32 r10d_489 = (uint32) rdi_143.u2[(uint64) ((word32) r8_480 - 0x04)];
					uint32 dwLoc0264_2907 = r10d_489;
					if (r11d_361 != 0x00)
						dwLoc0264_2907 = r10d_489 >> 0x18 | r10d_489 >> 0x08 & 0xFF00 | (r10d_489 & 0xFF00) << 0x08 | r10d_489 << 0x18;
					if ((word32) r8_480 + 0x04 <= r9d_348)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						Eq_37136 tLoc0250;
						tLoc0250.qw0004 = 0x00;
						tLoc0250.dw0000 = 0x00;
						Eq_37147 tLoc0260;
						tLoc0260.qw0004 = 0x00;
						tLoc0260.dw0000 = 0x00;
						if (fn000000018001D5C0(rcx, &tLoc0250) != 0x00 && fn000000018001D5C0(rcx, &tLoc0260) != 0x00)
						{
							if (false)
								rcx->u0.t0008.u0 = 0x00;
							Eq_6279 r15d_1387;
							r15d_1387.u0 = 0x00;
							Eq_36820 r9d_2842;
							r9d_2842.u0 = 0x00;
							if (r14d_291 > 0x00)
							{
								Eq_137 r10_628;
								r10_628.u0 = rcx->u0.t0000.u0;
								do
								{
									if (r10_628 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
										goto l0000000180013BE7;
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									Eq_6279 r8d_656 = r10_628.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
									if ((&rcx->u0)[1] != 0x00)
										r8d_656 = r8d_656 >> 0x18 | r8d_656 >> 0x08 & 0xFF00 | (r8d_656 & 0xFF00) << 0x08 | r8d_656 << 0x18;
									if (r9d_2842 == 0x00)
										r15d_1387 = r8d_656;
									r9d_2842 = (word32) r9d_2842.u0 + 1;
								} while (r9d_2842 < r14d_291);
							}
							if (false)
								rcx->u0.t0008.u0 = 0x00;
							int32 r9d_2845 = 0x00;
							Eq_37241 rsi_740;
							rsi_740.u0 = (int64) r14d_291;
							if (r14d_291 > 0x00)
							{
								Eq_137 rdi_748;
								rdi_748.u0 = rcx->u0.t0000.u0;
								Eq_37241 r11_750;
								r11_750.u1 = 0x00;
								struct Eq_37258 * r10_761 = (struct Eq_37258 *) ((char *) &tLoc0228 + 0x0C);
								do
								{
									if (rdi_748 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
										goto l0000000180013BE5;
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint32 r8d_788 = (uint32) rdi_748.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
									if ((&rcx->u0)[1] != 0x00)
										r8d_788 = r8d_788 >> 0x18 | r8d_788 >> 0x08 & 0xFF00 | (r8d_788 & 0xFF00) << 0x08 | r8d_788 << 0x18;
									if (r9d_2845 < tLoc0228.dw0000)
										r10_761->dw0000 = r8d_788;
									++r9d_2845;
									r11_750 = (word64) r11_750 + 1;
									++r10_761;
								} while (r11_750 < rsi_740);
							}
							if (false)
								rcx->u0.t0008.u0 = 0x00;
							int32 r9d_2849 = 0x00;
							if (r14d_291 > 0x00)
							{
								Eq_137 rdi_888;
								rdi_888.u0 = rcx->u0.t0000.u0;
								Eq_37241 r11_890;
								r11_890.u1 = 0x00;
								struct Eq_37340 * r10_892 = (struct Eq_37340 *) ((char *) &tLoc0228 + 16);
								do
								{
									if (rdi_888 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
										goto l0000000180013BE5;
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint32 r8d_919 = (uint32) rdi_888.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
									if ((&rcx->u0)[1] != 0x00)
										r8d_919 = r8d_919 >> 0x18 | r8d_919 >> 0x08 & 0xFF00 | (r8d_919 & 0xFF00) << 0x08 | r8d_919 << 0x18;
									if (r9d_2849 < tLoc0228.dw0000)
										r10_892->dw0000 = r8d_919;
									++r9d_2849;
									r11_890 = (word64) r11_890 + 1;
									++r10_892;
								} while (r11_890 < rsi_740);
							}
							if (false)
								rcx->u0.t0008.u0 = 0x00;
							int32 r9d_1099 = 0x00;
							if (r14d_291 > 0x00)
							{
								Eq_137 rdi_1023;
								rdi_1023.u0 = rcx->u0.t0000.u0;
								Eq_37241 r11_1029;
								r11_1029.u0 = 0x00;
								struct Eq_37422 * r10_1031 = (struct Eq_37422 *) ((char *) &tLoc0228 + 20);
								do
								{
									if (rdi_1023 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
										goto l0000000180013BE5;
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint32 r8d_1058 = (uint32) rdi_1023.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
									if ((&rcx->u0)[1] != 0x00)
										r8d_1058 = r8d_1058 >> 0x18 | r8d_1058 >> 0x08 & 0xFF00 | (r8d_1058 & 0xFF00) << 0x08 | r8d_1058 << 0x18;
									if (r9d_1099 < tLoc0228.dw0000)
										r10_1031->dw0000 = r8d_1058;
									++r9d_1099;
									r11_1029 = (word64) r11_1029.u0 + 1;
									++r10_1031;
								} while (r11_1029 < rsi_740);
							}
							if (false)
								rcx->u0.t0008.u0 = 0x00;
							uint64 r11_1144 = 0x00;
							Eq_36820 r9d_1244;
							r9d_1244.u0 = 0x00;
							if (r14d_291 > 0x00)
							{
								Eq_137 r10_1159;
								r10_1159.u0 = rcx->u0.t0000.u0;
								int32 eax_1237;
								int32 r11d_2864;
								do
								{
									int32 r11d_1236 = (word32) r11_1144;
									if (r10_1159 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
										goto l0000000180013BE7;
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint32 r8d_1187 = (uint32) r10_1159.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
									if ((&rcx->u0)[1] != 0x00)
										r8d_1187 = r8d_1187 >> 0x18 | r8d_1187 >> 0x08 & 0xFF00 | (r8d_1187 & 0xFF00) << 0x08 | r8d_1187 << 0x18;
									eax_1237 = (word32) r11_1144 + 0x01;
									if (r8d_1187 == 0x00)
										eax_1237 = r11d_1236;
									r11_1144 = (uint64) eax_1237;
									r11d_2864 = (word32) r11_1144;
									r9d_1244 = (word32) r9d_1244.u0 + 1;
								} while (r9d_1244 < r14d_291);
								if (eax_1237 > 0x00)
								{
									uint64 r10_1306 = 0x00;
									do
									{
										tLoc0250.qw0004 = 0x00;
										tLoc0250.dw0000 = 0x00;
										tLoc0260.qw0004 = 0x00;
										tLoc0260.dw0000 = 0x00;
										word32 r10d_1304 = (word32) r10_1306;
										if (fn000000018001D5C0(rcx, &tLoc0250) == 0x00 || fn000000018001D5C0(rcx, &tLoc0260) == 0x00)
											goto l0000000180013BE7;
										r10_1306 = (uint64) (r10d_1304 + 0x01);
									} while ((word32) r10_1306 < r11d_2864);
								}
							}
							if (r13d_1323 != 0x00)
								rcx->u0.t0008.u0 = (int32) r13d_1323;
							uint64 r9_1356 = (uint64) rcx->u0.t0008.u0;
							if ((word32) r9_1356 == 0x00 || fn0000000180005100(rcx, rdx, r12d_115, (word32) r9_1356, r15d_1387, &tLoc0228) != 0x00)
							{
								tLoc0250.qw0000 = 0x00;
								Eq_39 r15_1489;
								r15_1489.u1 = (uint64) dwLoc0264_2907;
								uint32 dwLoc0268_3053 = 0x00;
								ptr64 r14_1485 = null;
								uint32 r15d_1490 = (word32) r15_1489;
								if (r15d_1490 != 0x00)
								{
									tLoc0260.t0000.u0 = (int64) r15_1489;
									uint64 rax_1500 = r15_1489 * 0x011C;
									if (OVERFLOW<uint128>(r15_1489 *128 0x011C))
										rax_1500 = ~0x00;
									Eq_486 rax_1506 = rax_1500 + 0x08;
									if (rax_1506 < 0x00)
										rax_1506.u0 = ~0x00;
									Eq_137 rax_1513 = fn0000000180023684(rax_1506);
									if (rax_1513 != 0x00)
									{
										*rax_1513.u1 = (word64) r15_1489;
										tLoc0250.ptr0000 = rax_1513.u2 + 8;
										fn000000018002368C(rax_1513.u2 + 8, 0x011C, (uint64) r15d_1490);
										r14_1485 = rax_1513.u2 + 8;
									}
									else
									{
										tLoc0250.qw0000 = 0x00;
										r14_1485 = null;
									}
								}
								uint32 r8d_2309 = 0x00;
								uint32 dwLoc0240_3088 = 0x00;
								if (r15d_1490 != 0x00)
								{
									tLoc0260.qw0000 = 0x00;
									uint32 ecx_2295;
									do
									{
										Eq_1753 eax_1573;
										eax_1573.u0 = g_t800306F0.u0;
										if (eax_1573 == 866 || eax_1573 == 877)
										{
											if (rcx->u0.t0000.u0 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
												goto l0000000180013BE7;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										}
										word64 qwLoc0158;
										memset(&qwLoc0158, 0, 0x0104);
										Eq_137 r11_1605;
										r11_1605.u0 = rcx->u0.t0000.u0;
										if (r11_1605 == 0x00)
											goto l0000000180013BE7;
										Eq_1342 r8d_1618;
										r8d_1618.u0 = rcx->u0.t000C.u0;
										if (rcx->u0.t0008.u0 + 0x04 > r8d_1618)
											goto l0000000180013BE7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_1618)
											goto l0000000180013BE7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r10_1634 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 r9d_1646 = r11_1605.u2[(uint64) ((word32) r10_1634 - 0x04)];
										Eq_1342 r12d_1641 = (&rcx->u0)[1];
										if (r12d_1641 != 0x00)
											r9d_1646 = r9d_1646 >> 0x18 | r9d_1646 >> 0x08 & 0xFF00 | (r9d_1646 & 0xFF00) << 0x08 | r9d_1646 << 0x18;
										Eq_1753 eax_1689;
										eax_1689.u0 = g_t800306F0.u0;
										if (eax_1689 == 866 || eax_1689 == 877)
										{
											if ((word32) r10_1634 + 0x04 > r8d_1618)
												goto l0000000180013BE7;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											r10_1634 = (uint64) rcx->u0.t0008.u0;
										}
										if ((word32) r10_1634 + 0x04 > r8d_1618)
											goto l0000000180013BE7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r10_1723 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 r10d_1836 = (word32) r10_1723;
										uint32 r13d_1738 = (uint32) r11_1605.u2[(uint64) ((word32) r10_1723 - 0x04)];
										if (r12d_1641 != 0x00)
											r13d_1738 = r13d_1738 >> 0x18 | r13d_1738 >> 0x08 & 0xFF00 | (r13d_1738 & 0xFF00) << 0x08 | r13d_1738 << 0x18;
										if (r9d_1646 > 100)
										{
											rcx->u0.t0008.u0 = (int32) r9d_1646;
											int64 rdx_1793 = 0x00;
											byte al_1817;
											do
											{
												if (rcx->u0.t0008.u0 + 0x01 > ((rcx->u0).t000C).u0)
													goto l0000000180013755;
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
												al_1817 = r11_1605.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
												if (rdx_1793 < 0x0104)
													(&qwLoc0158)[rdx_1793].u0 = al_1817;
												++rdx_1793;
											} while (al_1817 != 0x00);
											if (rdx_1793 < 0x0104)
												(&qwLoc0158)[rdx_1793].u0 = al_1817;
											rcx->u0.t0008.u0 = (int32) r10d_1836;
										}
l0000000180013755:
										if (rcx->u0.t0008.u0 + 0x04 > r8d_1618)
											goto l0000000180013BE7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_1618)
											goto l0000000180013BE7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_1618)
											goto l0000000180013BE7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_1618)
											goto l0000000180013BE7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_1618)
											goto l0000000180013BE7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_1618)
											goto l0000000180013BE7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r9_1909 = (uint64) rcx->u0.t0008.u0;
										uint32 edi_1927 = (uint32) r11_1605.u2[(uint64) ((word32) r9_1909 - 0x04)];
										if (r12d_1641 != 0x00)
											edi_1927 = edi_1927 >> 0x18 | edi_1927 >> 0x08 & 0xFF00 | (edi_1927 & 0xFF00) << 0x08 | edi_1927 << 0x18;
										if ((word32) r9_1909 + 0x04 > r8d_1618)
											goto l0000000180013BE7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r9_1979 = (uint64) rcx->u0.t0008.u0;
										uint32 esi_1990 = (uint32) r11_1605.u2[(uint64) ((word32) r9_1979 - 0x04)];
										if (r12d_1641 != 0x00)
											esi_1990 = esi_1990 >> 0x18 | esi_1990 >> 0x08 & 0xFF00 | (esi_1990 & 0xFF00) << 0x08 | esi_1990 << 0x18;
										if ((word32) r9_1979 + 0x04 > r8d_1618)
											goto l0000000180013BE5;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r14_2042 = (uint64) rcx->u0.t0008.u0;
										uint64 r10_2047 = (uint64) r11_1605.u2[(uint64) ((word32) r14_2042 - 0x04)];
										uint32 r10d_2053 = (word32) r10_2047;
										if (r12d_1641 != 0x00)
											r10_2047 = (uint64) (r10d_2053 >> 0x18 | r10d_2053 >> 0x08 & 0xFF00 | (r10d_2053 & 0xFF00) << 0x08 | r10d_2053 << 0x18);
										word32 r10d_2209 = (word32) r10_2047;
										if ((word32) r14_2042 + 0x04 > r8d_1618)
											goto l0000000180013BE5;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r15_2105 = (uint64) rcx->u0.t0008.u0;
										uint64 r9_2110 = (uint64) r11_1605.u2[(uint64) ((word32) r15_2105 - 0x04)];
										uint32 r9d_2116 = (word32) r9_2110;
										if (r12d_1641 != 0x00)
											r9_2110 = (uint64) (r9d_2116 >> 0x18 | r9d_2116 >> 0x08 & 0xFF00 | (r9d_2116 & 0xFF00) << 0x08 | r9d_2116 << 0x18);
										word32 r9d_2181 = (word32) r9_2110;
										if ((word32) r15_2105 + 0x04 > r8d_1618)
											goto l0000000180013BE5;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_1618)
											goto l0000000180013BE5;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										word32 r11d_2186 = (word32) (r14_2042 + r9_2110);
										if (r9d_2181 == 0x00)
											r11d_2186 = r9d_2181;
										uint32 r8d_2212 = dwLoc0268_3053 + r10d_2209;
										dwLoc0268_3053 = r8d_2212;
										r14_1485 = tLoc0250.ptr0000;
										int64 rdx_2219;
										if (r14_1485 != null)
										{
											union Eq_38455 * rdx_2231 = &qwLoc0158;
											int64 r8_2236 = (int64) dwLoc0240_3088 *s 0x011C - &qwLoc0158 + r14_1485;
											byte al_2242;
											do
											{
												al_2242 = rdx_2231->u0;
												(&rdx_2231->u0)[r8_2236] = al_2242;
												rdx_2231 = (union Eq_38455 *) ((char *) rdx_2231 + 1);
											} while (al_2242 != 0x00);
											rdx_2219 = tLoc0260.qw0000;
											*((word64) (rdx_2219 *s 0x011C + 260) + r14_1485) = (int64) r13d_1738;
											*((word64) (rdx_2219 *s 0x011C + 264) + r14_1485) = (int64) r10d_2209;
											*((word64) (rdx_2219 *s 0x011C + 268) + r14_1485) = (int64) esi_1990;
											*((word64) (rdx_2219 *s 0x011C + 272) + r14_1485) = (int64) r11d_2186;
											*((word64) (rdx_2219 *s 0x011C + 0x0114) + r14_1485) = (int64) edi_1927;
										}
										else
											rdx_2219 = tLoc0260.qw0000;
										r8d_2309 = r8d_2212;
										tLoc0260.qw0000 = rdx_2219 + 0x01;
										ecx_2295 = dwLoc0240_3088 + 0x01;
										dwLoc0240_3088 = ecx_2295;
										r15d_1490 = dwLoc0264_2907;
									} while (ecx_2295 < dwLoc0264_2907);
								}
								uint64 rdx_2319 = (uint64) (SLICE(r8d_2309 *64 ~0x55555554, word32, 32) >> 0x01);
								int32 edx_2320 = (word32) rdx_2319;
								if (edx_2320 != 0x00)
								{
									if (edx_2320 <= 0x00 || fn0000000180001DD0(rdx, (word32) rdx_2319) == 0x00)
										goto l0000000180013BE7;
									int32 ecx_2362 = 0x00;
									if (rdx->dw0000 > 0x00)
									{
										ptr64 rdx_2356 = null;
										do
										{
											*((char *) &rdx->ptr0008->dw0000 + rdx_2356) = (struct Eq_1145 *) 0x03;
											++ecx_2362;
											rdx_2356 += 20;
										} while (ecx_2362 < rdx->dw0000);
									}
								}
								uint32 dwLoc0268_3170 = 0x00;
								if (r15d_1490 != 0x00)
								{
									ui64 r12_2385 = 0x00;
									struct Eq_37921 * r13_2392 = r14_1485 + 260;
									up32 esi_4503 = 0x00;
									uint32 ecx_2710;
									do
									{
										rcx->u0.t0008.u0 = r13_2392->dw000C;
										tLoc0260.dw0000 = r13_2392->dw0010;
										cu16 r15w_2542 = (word16) esi_4503;
										up32 r14d_2645 = esi_4503;
										if (r13_2392->dw0000 > 0x00)
										{
											int64 r10_2416 = r12_2385 << 0x02;
											do
											{
												Eq_137 rdx_2420;
												rdx_2420.u0 = rcx->u0.t0000.u0;
												if (rdx_2420 == 0x00)
													goto l0000000180013BE5;
												Eq_1342 r11d_2433;
												r11d_2433.u0 = rcx->u0.t000C.u0;
												if (rcx->u0.t0008.u0 + 0x02 > r11d_2433)
													goto l0000000180013BE5;
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
												uint64 r8_2439 = (uint64) rcx->u0.t0008.u0;
												cu16 r9w_2451 = (cu16) rdx_2420.u2[(uint64) ((word32) r8_2439 - 0x02)];
												Eq_1342 edi_2446 = (&rcx->u0)[1];
												if (edi_2446 != 0x00)
													r9w_2451 = r9w_2451 >> 0x08 | r9w_2451 << 0x08;
												if ((word32) r8_2439 + 0x02 > r11d_2433)
													goto l0000000180013BE5;
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
												uint64 rsi_2473 = (uint64) rcx->u0.t0008.u0;
												cu16 r8w_2484 = (cu16) rdx_2420.u2[(uint64) ((word32) rsi_2473 - 0x02)];
												if (edi_2446 != 0x00)
													r8w_2484 = r8w_2484 >> 0x08 | r8w_2484 << 0x08;
												if ((word32) rsi_2473 + 0x02 > r11d_2433)
													goto l0000000180013BE5;
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
												cu16 dx_2524 = (cu16) rdx_2420.u2[(uint64) (rcx->u0.t0008.u0 + ~0x01)];
												if (edi_2446 != 0x00)
													dx_2524 = dx_2524 >> 0x08 | dx_2524 << 0x08;
												cu16 ax_2545 = r9w_2451;
												if (r15w_2542 > r9w_2451)
													ax_2545 = r15w_2542;
												cu16 cx_2555 = r8w_2484;
												if (ax_2545 > r8w_2484)
													cx_2555 = ax_2545;
												r15w_2542 = dx_2524;
												if (cx_2555 > dx_2524)
													r15w_2542 = cx_2555;
												struct Eq_1145 * rcx_2578 = rdx->ptr0008;
												if (rcx_2578 != null)
												{
													word32 r9d_2591 = tLoc0260.dw0000;
													*((word32) &rcx_2578->a0004[0] + r10_2416) = (word32[]) ((word32) r9w_2451 + r9d_2591);
													*((word32) &rdx->ptr0008->a0008[0] + r10_2416) = (word32[]) ((word32) r8w_2484 + r9d_2591);
													*((word32) &rdx->ptr0008->a000C[0] + r10_2416) = (word32[]) ((word32) dx_2524 + r9d_2591);
												}
												++r12_2385;
												r10_2416 += 0x14;
												++r14d_2645;
											} while (r14d_2645 < r13_2392->dw0000);
											esi_4503 = 0x00;
										}
										r13_2392->dw0014 = (word32) r15w_2542;
										uint64 rax_2682 = (uint64) rcx->u0.t0008.u0;
										uint64 rcx_2688 = (uint64) ((word32) rax_2682 & ~0x03);
										Eq_1342 ecx_2697 = (word32) rcx_2688;
										Eq_1342 eax_2698 = (word32) rcx_2688 + 0x04;
										if (((byte) rax_2682 & 0x03) <= 0x00)
											eax_2698 = ecx_2697;
										rcx->u0.t0008.u0 = (int32) eax_2698;
										ecx_2710 = dwLoc0268_3170 + 0x01;
										dwLoc0268_3170 = ecx_2710;
										++r13_2392;
									} while (ecx_2710 < dwLoc0264_2907);
								}
								struct Eq_37914 * rcx_2718 = tLoc0250.ptr0000;
								if (rcx_2718 != null)
								{
									fn00000001800235AC(rcx_2718->tFFFFFFF8.u0);
									fn00000001800235A4(rcx_2718 - 8);
								}
							}
l0000000180013BE7:
							fn00000001800235AC(0x0A);
							return (word32) fn0000000180023580(rax_30 ^ fp - 664, qwLoc02A0);
						}
					}
				}
				goto l0000000180013BE5;
			}
			if ((word64) eax_441 + 4 > r9d_348)
				goto l0000000180013BE5;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			if (rcx->u0.t0008.u0 + 0x04 <= r9d_348)
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				eax_441.u0 = rcx->u0.t0008.u0;
				goto l000000018001313F;
			}
		}
	}
l0000000180013BE5:
	goto l0000000180013BE7;
}

// 0000000180013C40: Register word32 fn0000000180013C40(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register up32 r9d)
// Called from:
//      fn0000000180012DD0
word32 fn0000000180013C40(union Eq_3676 * rcx, struct Eq_1142 * rdx, up32 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_30 = g_qw80030008 ^ fp - 0x0178;
	word64 qwLoc0180;
	if (rdx != null)
	{
		Eq_137 r11_43;
		r11_43.u0 = rcx->u0.t0000.u0;
		if (r11_43 != 0x00)
		{
			Eq_38571 rax_49;
			rax_49.u0 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 edi_54 = (word32) rax_49 + 0x04;
			Eq_1342 r9d_55;
			r9d_55.u0 = rcx->u0.t000C.u0;
			if (edi_54 <= r9d_55)
			{
				uint32 r8d_103 = (uint32) *(rax_49 + r11_43);
				Eq_1342 esi_62 = (&rcx->u0)[1];
				if (esi_62 != 0x00)
					r8d_103 = r8d_103 >> 0x18 | r8d_103 >> 0x08 & 0xFF00 | (r8d_103 & 0xFF00) << 0x08 | r8d_103 << 0x18;
				if (r8d_103 == 0x00)
					rcx->u0.t0008.u0 = (int32) edi_54;
				up32 ecx_140 = 0x00;
				if (r9d != 0x00)
				{
					do
					{
						if (rcx->u0.t0008.u0 + 0x04 > r9d_55)
							goto l00000001800145E7;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						++ecx_140;
					} while (ecx_140 < r9d);
				}
				if (rcx->u0.t0008.u0 + 0x04 <= r9d_55)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 <= r9d_55)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						Eq_1265 r8d_192 = r11_43.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
						Eq_1265 dwLoc0144_2212 = r8d_192;
						if (esi_62 != 0x00)
							dwLoc0144_2212 = r8d_192 >> 0x18 | r8d_192 >> 0x08 & 0xFF00 | (r8d_192 & 0xFF00) << 0x08 | r8d_192 << 0x18;
						Eq_38673 tLoc0108;
						fn00000001800010C0(&tLoc0108);
						Eq_38676 r14d_418;
						r14d_418.u0 = 0x00;
						Eq_137 rdi_271;
						rdi_271.u0 = rcx->u0.t0000.u0;
						Eq_38682 r10_272;
						r10_272.u1 = 0x00;
						uint64 r15_358;
						do
						{
							if (rdi_271 == 0x00)
								goto l00000001800145C7;
							Eq_1342 r8d_288;
							r8d_288.u0 = rcx->u0.t000C.u0;
							if (rcx->u0.t0008.u0 + 0x04 > r8d_288)
								goto l00000001800145C7;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r11_294 = (uint64) rcx->u0.t0008.u0;
							Eq_38676 r9d_306 = rdi_271.u2[(uint64) ((word32) r11_294 - 0x04)];
							Eq_1342 esi_301 = (&rcx->u0)[1];
							if (esi_301 != 0x00)
								r9d_306 = r9d_306 >> 0x18 | r9d_306 >> 0x08 & 0xFF00 | (r9d_306 & 0xFF00) << 0x08 | r9d_306 << 0x18;
							if ((word32) r11_294 + 0x04 > r8d_288)
								goto l00000001800145C7;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							r15_358 = (uint64) rcx->u0.t0008.u0;
							uint64 r8_3309 = (uint64) rdi_271.u2[(uint64) ((word32) r15_358 - 0x04)];
							uint32 r8d_369 = (word32) r8_3309;
							if (esi_301 != 0x00)
								r8_3309 = (uint64) (r8d_369 >> 0x18 | r8d_369 >> 0x08 & 0xFF00 | (r8d_369 & 0xFF00) << 0x08 | r8d_369 << 0x18);
							word32 r8d_420 = (word32) r8_3309;
							if (r10_272 == 0x00)
								r14d_418 = r9d_306;
							if (r8d_420 != 0x00)
								(fp - 88)[r10_272] = r8d_420 + (word32) r11_294;
							r10_272 = (word64) r10_272 + 1;
						} while (r10_272 < 0x05);
						tLoc0108.t0004.u0 = (int32) r14d_418;
						if (rdi_271 != 0x00)
						{
							Eq_1342 r8d_475;
							r8d_475.u0 = rcx->u0.t000C.u0;
							if ((word32) r15_358 + 0x04 > r8d_475)
								goto l00000001800145C7;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							if (rcx->u0.t0008.u0 + 0x04 <= r8d_475)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								if (rcx->u0.t0008.u0 + 0x04 > r8d_475)
									goto l00000001800145C7;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 r9_501 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 r11d_506 = rdi_271.u2[(uint64) ((word32) r9_501 - 0x04)];
								Eq_1342 dwLoc0148_2217 = r11d_506;
								Eq_1342 r10d_510 = (&rcx->u0)[1];
								if (r10d_510 != 0x00)
									dwLoc0148_2217 = r11d_506 >> 0x18 | r11d_506 >> 0x08 & 0xFF00 | (r11d_506 & 0xFF00) << 0x08 | r11d_506 << 0x18;
								if ((word32) r9_501 + 0x04 <= r8d_475)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									int32 edx_2173 = 0x03;
									if (g_t800306F0.u0 == 884)
										edx_2173 = 0x02;
									int32 ecx_2172 = 0x00;
									Eq_1342 eax_604;
									do
									{
										if (rcx->u0.t0008.u0 + 0x04 > ((rcx->u0).t000C).u0)
											goto l00000001800145C7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										eax_604.u0 = rcx->u0.t0008.u0;
										++ecx_2172;
									} while (ecx_2172 < edx_2173);
									if ((word64) eax_604 + 4 <= r8d_475)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r9_615 = (uint64) rcx->u0.t0008.u0;
										if ((word32) r9_615 + 0x04 > r8d_475)
											goto l00000001800145C7;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r8_632 = (uint64) rdi_271.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
										uint32 r8d_640 = (word32) r8_632;
										if (r10d_510 != 0x00)
											r8_632 = (uint64) (r8d_640 >> 0x18 | r8d_640 >> 0x08 & 0xFF00 | (r8d_640 & 0xFF00) << 0x08 | r8d_640 << 0x18);
										Eq_1342 r8d_684 = (word32) r8_632;
										Eq_1342 eax_689 = (word32) (r9_615 + r8_632);
										if (r8d_684 == 0x00)
											eax_689 = r8d_684;
										Eq_39017 tLoc0138;
										tLoc0138.qw0004 = 0x00;
										tLoc0138.dw0000 = 0x00;
										Eq_39028 tLoc0128;
										tLoc0128.qw0004 = 0x00;
										tLoc0128.dw0000 = 0x00;
										if (fn000000018001D5C0(rcx, &tLoc0138) != 0x00 && fn000000018001D5C0(rcx, &tLoc0128) != 0x00)
										{
											if (false)
												rcx->u0.t0008.u0 = 0x00;
											Eq_6279 r15d_1692;
											r15d_1692.u0 = 0x00;
											Eq_38676 r9d_2177;
											r9d_2177.u0 = 0x00;
											if (r14d_418 > 0x00)
											{
												Eq_137 r10_773;
												r10_773.u0 = rcx->u0.t0000.u0;
												do
												{
													if (r10_773 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
														goto l00000001800145C7;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													Eq_6279 r8d_800 = r10_773.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
													if ((&rcx->u0)[1] != 0x00)
														r8d_800 = r8d_800 >> 0x18 | r8d_800 >> 0x08 & 0xFF00 | (r8d_800 & 0xFF00) << 0x08 | r8d_800 << 0x18;
													if (r9d_2177 == 0x00)
														r15d_1692 = r8d_800;
													r9d_2177 = (word32) r9d_2177.u0 + 1;
												} while (r9d_2177 < r14d_418);
											}
											if (false)
												rcx->u0.t0008.u0 = 0x00;
											int32 r9d_2180 = 0x00;
											int64 rsi_885 = (int64) r14d_418;
											if (r14d_418 > 0x00)
											{
												Eq_137 rdi_893;
												rdi_893.u0 = rcx->u0.t0000.u0;
												int64 r11_1002 = 0x00;
												struct Eq_39136 * r10_1005 = (struct Eq_39136 *) ((char *) &tLoc0108 + 0x0C);
												do
												{
													if (rdi_893 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
														goto l00000001800145C7;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													uint32 r8d_946 = (uint32) rdi_893.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
													if ((&rcx->u0)[1] != 0x00)
														r8d_946 = r8d_946 >> 0x18 | r8d_946 >> 0x08 & 0xFF00 | (r8d_946 & 0xFF00) << 0x08 | r8d_946 << 0x18;
													if (r9d_2180 < tLoc0108.dw0000)
														r10_1005->dw0000 = r8d_946;
													++r9d_2180;
													++r11_1002;
													++r10_1005;
												} while (r11_1002 < rsi_885);
											}
											if (false)
												rcx->u0.t0008.u0 = 0x00;
											int32 r9d_1125 = 0x00;
											if (r14d_418 > 0x00)
											{
												Eq_137 rdi_1048;
												rdi_1048.u0 = rcx->u0.t0000.u0;
												int64 r11_1055 = 0x00;
												struct Eq_39206 * r10_1057 = (struct Eq_39206 *) ((char *) &tLoc0108 + 16);
												do
												{
													if (rdi_1048 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
														goto l00000001800145C7;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													uint32 r8d_1084 = (uint32) rdi_1048.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
													if ((&rcx->u0)[1] != 0x00)
														r8d_1084 = r8d_1084 >> 0x18 | r8d_1084 >> 0x08 & 0xFF00 | (r8d_1084 & 0xFF00) << 0x08 | r8d_1084 << 0x18;
													if (r9d_1125 < tLoc0108.dw0000)
														r10_1057->dw0000 = r8d_1084;
													++r9d_1125;
													++r11_1055;
													++r10_1057;
												} while (r11_1055 < rsi_885);
											}
											if (false)
												rcx->u0.t0008.u0 = 0x00;
											int32 r9d_1262 = 0x00;
											if (r14d_418 > 0x00)
											{
												Eq_137 rdi_1185;
												rdi_1185.u0 = rcx->u0.t0000.u0;
												int64 r11_1192 = 0x00;
												struct Eq_39300 * r10_1194 = (struct Eq_39300 *) ((char *) &tLoc0108 + 20);
												do
												{
													if (rdi_1185 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
														goto l00000001800145C7;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													uint32 r8d_1221 = (uint32) rdi_1185.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
													if ((&rcx->u0)[1] != 0x00)
														r8d_1221 = r8d_1221 >> 0x18 | r8d_1221 >> 0x08 & 0xFF00 | (r8d_1221 & 0xFF00) << 0x08 | r8d_1221 << 0x18;
													if (r9d_1262 < tLoc0108.dw0000)
														r10_1194->dw0000 = r8d_1221;
													++r9d_1262;
													++r11_1192;
													++r10_1194;
												} while (r11_1192 < rsi_885);
											}
											if (false)
												rcx->u0.t0008.u0 = 0x00;
											Eq_38676 ecx_1340;
											ecx_1340.u0 = 0x00;
											if (r14d_418 > 0x00)
											{
												Eq_137 rdx_1322;
												rdx_1322.u0 = rcx->u0.t0000.u0;
												do
												{
													if (rdx_1322 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
														goto l00000001800145C7;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													ecx_1340 = (word32) ecx_1340.u0 + 1;
												} while (ecx_1340 < r14d_418);
											}
											if (eax_689 != 0x00)
												rcx->u0.t0008.u0 = (int32) eax_689;
											Eq_137 r9_1370;
											r9_1370.u0 = rcx->u0.t0000.u0;
											if (r9_1370 != 0x00)
											{
												Eq_1342 r8d_1383;
												r8d_1383.u0 = rcx->u0.t000C.u0;
												if (rcx->u0.t0008.u0 + 0x04 > r8d_1383)
													goto l00000001800145C7;
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
												if (rcx->u0.t0008.u0 + 0x04 <= r8d_1383)
												{
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													if (rcx->u0.t0008.u0 + 0x04 > r8d_1383)
														goto l00000001800145C7;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													if (rcx->u0.t0008.u0 + 0x04 <= r8d_1383)
													{
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														if (rcx->u0.t0008.u0 + 0x04 > r8d_1383)
															goto l00000001800145C7;
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														if (rcx->u0.t0008.u0 + 0x04 <= r8d_1383)
														{
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															if (rcx->u0.t0008.u0 + 0x04 > r8d_1383)
																goto l00000001800145C7;
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															if (rcx->u0.t0008.u0 + 0x04 <= r8d_1383)
															{
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																if (rcx->u0.t0008.u0 + 0x04 > r8d_1383)
																	goto l00000001800145C7;
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																if (rcx->u0.t0008.u0 + 0x04 <= r8d_1383)
																{
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	if (rcx->u0.t0008.u0 + 0x04 > r8d_1383)
																		goto l00000001800145C7;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint64 r10_1489 = (uint64) rcx->u0.t0008.u0;
																	uint32 esi_1501 = (uint32) r9_1370.u2[(uint64) ((word32) r10_1489 - 0x04)];
																	Eq_1342 r11d_1496 = (&rcx->u0)[1];
																	if (r11d_1496 != 0x00)
																		esi_1501 = esi_1501 >> 0x18 | esi_1501 >> 0x08 & 0xFF00 | (esi_1501 & 0xFF00) << 0x08 | esi_1501 << 0x18;
																	if ((word32) r10_1489 + 0x04 <= r8d_1383)
																	{
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_1383)
																			goto l00000001800145C7;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 <= r8d_1383)
																		{
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			uint64 r10_1573 = (uint64) rcx->u0.t0008.u0;
																			Eq_1342 edi_1584 = r9_1370.u2[(uint64) ((word32) r10_1573 - 0x04)];
																			if (r11d_1496 != 0x00)
																				edi_1584 = edi_1584 >> 0x18 | edi_1584 >> 0x08 & 0xFF00 | (edi_1584 & 0xFF00) << 0x08 | edi_1584 << 0x18;
																			if ((word32) r10_1573 + 0x04 <= r8d_1383)
																			{
																				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																				if (rcx->u0.t0008.u0 + 0x04 > r8d_1383)
																					goto l00000001800145C7;
																				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																				if (rcx->u0.t0008.u0 + 0x04 <= r8d_1383)
																				{
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x18);
																					if (dwLoc0148_2217 != 0x00)
																						rcx->u0.t0008.u0 = (int32) dwLoc0148_2217;
																					uint64 r9_1671 = (uint64) rcx->u0.t0008.u0;
																					if ((word32) r9_1671 == 0x00 || fn0000000180005100(rcx, rdx, dwLoc0144_2212, (word32) r9_1671, r15d_1692, &tLoc0108) != 0x00)
																					{
																						if (edi_1584 != 0x00)
																							rcx->u0.t0008.u0 = (int32) edi_1584;
																						Eq_1168 r15d_1799 = SLICE(esi_1501 *64 ~0x55555554, word32, 32) >> 0x01;
																						if (r15d_1799 != 0x00)
																						{
																							if (r15d_1799 <= 0x00 || fn0000000180001DD0(rdx, r15d_1799) == 0x00)
																								goto l00000001800145C7;
																							int32 ecx_1861 = 0x00;
																							if (rdx->dw0000 > 0x00)
																							{
																								ptr64 rdx_1855 = null;
																								do
																								{
																									*((char *) &rdx->ptr0008->dw0000 + rdx_1855) = (struct Eq_1145 *) 0x03;
																									++ecx_1861;
																									rdx_1855 += 20;
																								} while (ecx_1861 < rdx->dw0000);
																							}
																						}
																						Eq_1168 esi_2030;
																						esi_2030.u0 = 0x00;
																						if (r15d_1799 != 0x00)
																						{
																							int64 r10_1881 = 0x00;
																							do
																							{
																								Eq_137 rdx_1884;
																								rdx_1884.u0 = rcx->u0.t0000.u0;
																								if (rdx_1884 == 0x00)
																									goto l00000001800145C7;
																								Eq_1342 r11d_1897;
																								r11d_1897.u0 = rcx->u0.t000C.u0;
																								if (rcx->u0.t0008.u0 + 0x02 > r11d_1897)
																									goto l00000001800145C7;
																								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																								uint64 r9_1903 = (uint64) rcx->u0.t0008.u0;
																								cu16 r8w_1915 = (cu16) rdx_1884.u2[(uint64) ((word32) r9_1903 - 0x02)];
																								Eq_1342 edi_1910 = (&rcx->u0)[1];
																								if (edi_1910 != 0x00)
																									r8w_1915 = r8w_1915 >> 0x08 | r8w_1915 << 0x08;
																								if ((word32) r9_1903 + 0x02 > r11d_1897)
																									goto l00000001800145C7;
																								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																								uint64 r14_1937 = (uint64) rcx->u0.t0008.u0;
																								cu16 r9w_1948 = (cu16) rdx_1884.u2[(uint64) ((word32) r14_1937 - 0x02)];
																								if (edi_1910 != 0x00)
																									r9w_1948 = r9w_1948 >> 0x08 | r9w_1948 << 0x08;
																								if ((word32) r14_1937 + 0x02 > r11d_1897)
																									goto l00000001800145C7;
																								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																								cu16 dx_1982 = (cu16) rdx_1884.u2[(uint64) (rcx->u0.t0008.u0 + ~0x01)];
																								if (edi_1910 != 0x00)
																									dx_1982 = dx_1982 >> 0x08 | dx_1982 << 0x08;
																								struct Eq_1145 * rcx_1997 = rdx->ptr0008;
																								if (rcx_1997 != null)
																								{
																									*((word64) (rcx_1997 + (struct Eq_39922 *) 4) + r10_1881) = (word64) (word32) r8w_1915;
																									*((word32) &rdx->ptr0008->a0008[0] + r10_1881) = (word32[]) (word32) r9w_1948;
																									*((word32) &rdx->ptr0008->a000C[0] + r10_1881) = (word32[]) (word32) dx_1982;
																								}
																								esi_2030 = (word32) esi_2030 + 1;
																								r10_1881 += 0x14;
																							} while (esi_2030 < r15d_1799);
																						}
																						uint64 rax_2053 = (uint64) rcx->u0.t0008.u0;
																						uint64 rcx_2059 = (uint64) ((word32) rax_2053 & ~0x03);
																						Eq_1342 ecx_2068 = (word32) rcx_2059;
																						Eq_1342 eax_2069 = (word32) rcx_2059 + 0x04;
																						if (((byte) rax_2053 & 0x03) <= 0x00)
																							eax_2069 = ecx_2068;
																						rcx->u0.t0008.u0 = (int32) eax_2069;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
l00000001800145C7:
						fn00000001800235AC(0x0A);
						return (word32) fn0000000180023580(rax_30 ^ fp - 0x0178, qwLoc0180);
					}
				}
			}
		}
	}
l00000001800145E7:
	return (word32) fn0000000180023580(rax_30 ^ fp - 0x0178, qwLoc0180);
}

// 0000000180014610: Register word32 fn0000000180014610(Register (ptr64 Eq_3676) rcx, Register word32 r8d)
// Called from:
//      fn0000000180010580
word32 fn0000000180014610(union Eq_3676 * rcx, word32 r8d)
{
	ptr64 fp;
	word64 r8;
	r8d = (word32) r8;
	uint64 rdi_14 = (uint64) r8d;
	ui64 rax_10 = g_qw80030008 ^ fp - 600;
	Eq_1342 edi_21 = (word32) rdi_14;
	word64 qwLoc0260;
	if (r8d == 0x00)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	rcx->u0.t0008.u0 = (int32) edi_21;
	Eq_39970 tLoc0238;
	memset(&tLoc0238, 0, 0x0104);
	Eq_39980 tLoc0128;
	memset(&tLoc0128, 0, 0x0104);
	Eq_137 r9_35;
	r9_35.u0 = rcx->u0.t0000.u0;
	if (r9_35 == 0x00)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	uint64 rdx_43 = (uint64) ((word32) rdi_14 + 0x04);
	Eq_1342 r8d_45;
	r8d_45.u0 = rcx->u0.t000C.u0;
	Eq_1342 edx_44 = (word32) rdx_43;
	if (edx_44 > r8d_45)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	Eq_1342 r11d_55 = (&rcx->u0)[1];
	rcx->u0.t0008.u0 = (int32) edx_44;
	Eq_1342 r10d_166 = r9_35.u2[(uint64) ((word32) rdx_43 - 0x04)];
	if (r11d_55 != 0x00)
		r10d_166 = __bswap<word32>(r10d_166);
	if ((word32) rdx_43 + 0x04 > r8d_45)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rdx_74 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 edi_184 = r9_35.u2[(uint64) ((word32) rdx_74 - 0x04)];
	if (r11d_55 != 0x00)
		edi_184 = __bswap<word32>(edi_184);
	if ((word32) rdx_74 + 0x04 > r8d_45)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r14_115 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 esi_126 = r9_35.u2[(uint64) ((word32) r14_115 - 0x04)];
	if (r11d_55 != 0x00)
		esi_126 = __bswap<word32>(esi_126);
	if ((word32) r14_115 + 0x04 <= r8d_45)
	{
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		Eq_1342 r9d_158 = r9_35.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
		if (r11d_55 != 0x00)
			r9d_158 = __bswap<word32>(r9d_158);
		fn0000000180005050(rcx, r10d_166, &tLoc0238);
		fn0000000180005050(rcx, edi_184, &tLoc0128);
		Eq_1342 edi_209;
		edi_209.u2 = (word64) r9d_158 + (word32) r14_115;
		if (r9d_158 == 0x00)
			edi_209 = r9d_158;
		struct Eq_14187 * rax_213 = fn0000000180001A00(&g_t800306F0);
		if (rax_213 != null)
		{
			int64 r8_229 = rax_213 - &tLoc0238;
			union Eq_40137 * rdx_231 = &tLoc0238;
			char cl_236;
			do
			{
				cl_236 = rdx_231->u0;
				(&rdx_231->u0)[r8_229] = cl_236;
				rdx_231 = (union Eq_40137 *) ((char *) rdx_231 + 1);
			} while (cl_236 != 0x00);
			word64 rax_248 = rax_213 - &tLoc0128;
			union Eq_40152 * rdx_250 = &tLoc0128;
			char al_256;
			do
			{
				al_256 = rdx_250->u0;
				(&rdx_250->u0)[rax_248 + 260] = al_256;
				rdx_250 = (union Eq_40152 *) ((char *) rdx_250 + 1);
			} while (al_256 != 0x00);
			rax_213->dw0514 = ~0x00;
		}
		g_dw80030748 = 0x00;
		fn0000000180014820(rcx, 0x00, edi_209, esi_126);
	}
	return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
}

// 0000000180014820: void fn0000000180014820(Register (ptr64 Eq_3676) rcx, Register word32 edx, Register Eq_1342 r8d, Register Eq_1342 r9d)
// Called from:
//      fn0000000180014610
//      fn0000000180014820
void fn0000000180014820(union Eq_3676 * rcx, word32 edx, Eq_1342 r8d, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_12 = g_qw80030008 ^ fp - 1000;
	if (r8d != 0x00 && (r8d >= 100 && r8d < ((rcx->u0).t000C).u0))
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		word32 eax_39 = g_dw80030728 - 0x01;
		Eq_1342 dwLoc03AC_660;
		dwLoc03AC_660.u0 = 0x00;
		if (r9d != 0x00)
		{
			Eq_1342 ebx_600;
			do
			{
				Eq_40300 tLoc0358;
				memset(&tLoc0358, 0, 0x0104);
				Eq_40304 tLoc0248;
				memset(&tLoc0248, 0, 0x0104);
				Eq_40308 tLoc0138;
				memset(&tLoc0138, 0, 0x0104);
				Eq_137 r9_67;
				r9_67.u0 = rcx->u0.t0000.u0;
				if (r9_67 == 0x00)
				{
l0000000180014C52:
					goto l0000000180014C29;
				}
				Eq_1342 r8d_80;
				r8d_80.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_80)
					goto l0000000180014C52;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_86 = (uint64) rcx->u0.t0008.u0;
				uint64 rdx_159 = (uint64) r9_67.u2[(uint64) ((word32) r11_86 - 0x04)];
				Eq_1342 r10d_93 = (&rcx->u0)[1];
				Eq_1342 edx_98 = (word32) rdx_159;
				word32 rdx_32_32_160 = SLICE(rdx_159, word32, 32);
				if (r10d_93 != 0x00)
					rdx_159 = SEQ(rdx_32_32_160, __bswap<word32>(edx_98));
				if ((word32) r11_86 + 0x04 > r8d_80)
					goto l0000000180014C52;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_112 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 ebx_123 = r9_67.u2[(uint64) ((word32) r11_112 - 0x04)];
				if (r10d_93 != 0x00)
					ebx_123 = __bswap<word32>(ebx_123);
				if ((word32) r11_112 + 0x04 > r8d_80)
					goto l0000000180014C52;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 r9d_149 = r9_67.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if (r10d_93 != 0x00)
					r9d_149 = __bswap<word32>(r9d_149);
				fn0000000180005050(rcx, (word32) rdx_159, &tLoc0358);
				fn0000000180005050(rcx, ebx_123, &tLoc0248);
				fn0000000180005050(rcx, r9d_149, &tLoc0138);
				Eq_40312 tLoc0390;
				tLoc0390.qw0004 = 0x00;
				tLoc0390.dw0000 = 0x00;
				Eq_40323 tLoc0370;
				tLoc0370.qw0008 = 0x00;
				tLoc0370.qw0000 = 0x00;
				Eq_40334 tLoc0380;
				tLoc0380.qw0004 = 0x00;
				tLoc0380.dw0000 = 0x00;
				if (fn000000018001D5C0(rcx, &tLoc0390) == 0x00 || (fn000000018001D710(rcx, &tLoc0370) == 0x00 || (fn000000018001D5C0(rcx, &tLoc0380) == 0x00 || (((rcx->u0).t0000).u0 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0))))
					goto l0000000180014C52;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				++g_dw80030748;
				Eq_137 r8_275;
				r8_275.u0 = rcx->u0.t0000.u0;
				if (r8_275 == 0x00)
					goto l0000000180014C52;
				Eq_1342 edx_288;
				edx_288.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > edx_288)
					goto l0000000180014C52;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_294 = (uint64) rcx->u0.t0008.u0;
				word32 r10d_297 = (word32) r10_294;
				Eq_1342 r9d_305 = (&rcx->u0)[1];
				if ((word32) r10_294 + 0x04 > edx_288)
					goto l0000000180014C52;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_324 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_330 = r8_275.u2[(uint64) ((word32) r10_324 - 0x04)];
				Eq_1342 dwLoc03B8_664 = eax_330;
				if (r9d_305 != 0x00)
					dwLoc03B8_664 = __bswap<word32>(eax_330);
				if ((word32) r10_324 + 0x04 > edx_288)
					goto l0000000180014C52;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 eax_353;
				eax_353.u0 = rcx->u0.t0008.u0;
				if ((word64) eax_353 + 4 > edx_288)
					goto l0000000180014C52;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_364 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_370 = r8_275.u2[(uint64) ((word32) r10_364 - 0x04)];
				Eq_1342 dwLoc03B0_667 = eax_370;
				if (r9d_305 != 0x00)
					dwLoc03B0_667 = __bswap<word32>(eax_370);
				if ((word32) r10_364 + 0x04 > edx_288)
					goto l0000000180014C52;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > edx_288)
					goto l0000000180014C52;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				struct Eq_14187 * rax_410 = fn0000000180001A00(&g_t800306F0);
				if (rax_410 != null)
				{
					int64 r8_428 = rax_410 - &tLoc0358;
					union Eq_40539 * rdx_430 = &tLoc0358;
					char cl_435;
					do
					{
						cl_435 = rdx_430->u1.b0000;
						(&rdx_430->u1.b0000)[r8_428] = cl_435;
						rdx_430 = (union Eq_40539 *) ((char *) rdx_430 + 1);
					} while (cl_435 != 0x00);
					int64 rdx_447 = rax_410 - &tLoc0248;
					union Eq_40554 * rcx_449 = &tLoc0248;
					char al_454;
					do
					{
						al_454 = rcx_449->u0;
						((char *) rcx_449 + 260)[rdx_447] = al_454;
						rcx_449 = (union Eq_40554 *) ((char *) rcx_449 + 1);
					} while (al_454 != 0x00);
					int64 rdx_466 = rax_410 - &tLoc0138;
					union Eq_40571 * rcx_468 = &tLoc0138;
					char al_473;
					do
					{
						al_473 = rcx_468->u0;
						((char *) rcx_468 + 520)[rdx_466] = al_473;
						rcx_468 = (union Eq_40571 *) ((char *) rcx_468 + 1);
					} while (al_473 != 0x00);
					rax_410->r0520 = tLoc0390.r0000;
					word128 xmm0_490 = (word128) tLoc0370;
					rax_410->dw0514 = eax_39;
					word32 eax_496 = tLoc0390.dw0008;
					rax_410->ow0538 = xmm0_490;
					rax_410->dw0528 = eax_496;
					word32 eax_502 = tLoc0380.dw0008;
					rax_410->r052C = tLoc0380.r0000;
					rax_410->dw0534 = eax_502;
				}
				Eq_1342 r8d_529;
				r8d_529.u2 = (word64) dwLoc03B8_664 + r10d_297;
				Eq_1342 ebx_591;
				ebx_591.u0 = rcx->u0.t0008.u0;
				if (dwLoc03B8_664 == 0x00)
					r8d_529 = dwLoc03B8_664;
				fn0000000180014820(rcx, edx + 0x01, r8d_529, r9d);
				uint64 r9_567 = (uint64) (eax_353 + dwLoc03B0_667);
				word32 r9_32_32_574 = SLICE(r9_567, word32, 32);
				if (dwLoc03B0_667 == 0x00)
					r9_567 = SEQ(r9_32_32_574, dwLoc03B0_667);
				fn0000000180014C60(rcx, rax_410, (word32) r9_567);
				rcx->u0.t0008.u0 = (int32) ebx_591;
				ebx_600.u2 = (word64) dwLoc03AC_660 + 1;
				dwLoc03AC_660 = ebx_600;
			} while (ebx_600 < r9d);
		}
l0000000180014C29:
	}
	word64 qwLoc03F0;
	fn0000000180023580(rax_12 ^ fp - 1000, qwLoc03F0);
}

// 0000000180014C60: void fn0000000180014C60(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_14187) rdx, Register Eq_1342 r9d)
// Called from:
//      fn0000000180014820
void fn0000000180014C60(union Eq_3676 * rcx, struct Eq_14187 * rdx, Eq_1342 r9d)
{
	word64 r9;
	r9d = (word32) r9;
	if (r9d == 0x00 || (r9d < 100 || r9d >= ((rcx->u0).t000C).u0))
		return;
	rcx->u0.t0008.u0 = (int32) r9d;
	++g_dw80030748;
	Eq_137 r9_25;
	r9_25.u0 = rcx->u0.t0000.u0;
	if (r9_25 == 0x00)
		return;
	uint64 r8_36 = (uint64) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 r10d_38;
	r10d_38.u0 = rcx->u0.t000C.u0;
	Eq_1342 r8d_37 = (word32) r8_36;
	if (r8d_37 > r10d_38)
		return;
	Eq_1342 r11d_48 = (&rcx->u0)[1];
	rcx->u0.t0008.u0 = (int32) r8d_37;
	Eq_1342 edx_53 = r9_25.u2[(uint64) ((word32) r8_36 - 0x04)];
	if (r11d_48 != 0x00)
		edx_53 = __bswap<word32>(edx_53);
	if ((word32) r8_36 + 0x04 > r10d_38)
		return;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rax_100 = (uint64) r9_25.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
	Eq_1342 eax_92 = (word32) rax_100;
	word32 rax_32_32_101 = SLICE(rax_100, word32, 32);
	if (r11d_48 != 0x00)
		rax_100 = SEQ(rax_32_32_101, __bswap<word32>(eax_92));
	rdx->t0518.u0 = (int32) edx_53;
	uint64 r9_104 = (uint64) (word32) (r8_36 + rax_100);
	word32 eax_108 = (word32) rax_100;
	word32 r9_32_32_118 = SLICE(r9_104, word32, 32);
	Eq_1342 ebx_137;
	ebx_137.u0 = rcx->u0.t0008.u0;
	if (eax_108 == 0x00)
		r9_104 = SEQ(r9_32_32_118, eax_108);
	fn0000000180014D40(rcx, rdx, (word32) r9_104, edx_53);
	rcx->u0.t0008.u0 = (int32) ebx_137;
}

// 0000000180014D40: void fn0000000180014D40(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_14187) rdx, Register Eq_1342 r9d, Stack Eq_1342 dwArg28)
// Called from:
//      fn0000000180014C60
void fn0000000180014D40(union Eq_3676 * rcx, struct Eq_14187 * rdx, Eq_1342 r9d, Eq_1342 dwArg28)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_14 = g_qw80030008 ^ fp - 0x0278;
	if (r9d == 0x00)
	{
l0000000180014EEC:
		word64 qwLoc0280;
		fn0000000180023580(rax_14 ^ fp - 0x0278, qwLoc0280);
		return;
	}
	if (r9d >= 100)
	{
		Eq_1342 esi_34;
		esi_34.u0 = rcx->u0.t000C.u0;
		if (r9d >= esi_34)
			goto l0000000180014EDF;
		rcx->u0.t0008.u0 = (int32) r9d;
		if (dwArg28 == 0x03)
		{
			Eq_40831 tLoc0248;
			memset(&tLoc0248, 0, 0x0104);
			Eq_137 rdx_46;
			rdx_46.u0 = rcx->u0.t0000.u0;
			if (rdx_46 != 0x00)
			{
				uint64 rbx_52 = (uint64) ((word64) r9d + 4);
				Eq_1342 ebx_53 = (word32) rbx_52;
				if (ebx_53 <= esi_34)
				{
					Eq_1342 r8d_63 = (&rcx->u0)[1];
					rcx->u0.t0008.u0 = (int32) ebx_53;
					Eq_1342 r10d_127 = rdx_46.u2[(uint64) ((word32) rbx_52 - 0x04)];
					if (r8d_63 != 0x00)
						r10d_127 = __bswap<word32>(r10d_127);
					if ((word32) rbx_52 + 0x04 <= esi_34)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r9_82 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 ebx_144 = rdx_46.u2[(uint64) ((word32) r9_82 - 0x04)];
						if (r8d_63 != 0x00)
							ebx_144 = __bswap<word32>(ebx_144);
						if ((word32) r9_82 + 0x04 <= esi_34)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 r9d_119 = rdx_46.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							if (r8d_63 != 0x00)
								r9d_119 = __bswap<word32>(r9d_119);
							Eq_40919 tLoc0138;
							fn0000000180005050(rcx, r10d_127, &tLoc0138);
							fn0000000180005050(rcx, ebx_144, &tLoc0248);
							fn0000000180005050(rcx, r9d_119, &tLoc0138);
							Eq_137 r9_172;
							r9_172.u0 = rcx->u0.t0000.u0;
							if (r9_172 != 0x00)
							{
								Eq_1342 ecx_185;
								ecx_185.u0 = rcx->u0.t000C.u0;
								if (rcx->u0.t0008.u0 + 0x04 <= ecx_185)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint64 r10_191 = (uint64) rcx->u0.t0008.u0;
									if ((word32) r10_191 + 0x04 <= ecx_185)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r8_212 = (uint64) r9_172.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
										Eq_1342 r8d_214 = (word32) r8_212;
										word32 r8_32_32_246 = SLICE(r8_212, word32, 32);
										if ((&rcx->u0)[1] != 0x00)
											r8_212 = SEQ(r8_32_32_246, __bswap<word32>(r8d_214));
										word32 r8d_250 = (word32) r8_212;
										ui64 r9_223 = rdx - &tLoc0248;
										union Eq_40995 * rcx_225 = &tLoc0248;
										char al_230;
										do
										{
											al_230 = rcx_225->u0;
											(&rcx_225->u0)[r9_223 + 780] = al_230;
											rcx_225 = (union Eq_40995 *) ((char *) rcx_225 + 1);
										} while (al_230 != 0x00);
										uint64 r9_249 = (uint64) (word32) (r10_191 + r8_212);
										Eq_1342 ebx_277;
										ebx_277.u0 = rcx->u0.t0008.u0;
										word32 r9_32_32_260 = SLICE(r9_249, word32, 32);
										if (r8d_250 == 0x00)
											r9_249 = SEQ(r9_32_32_260, r8d_250);
										fn0000000180009870(rcx, rdx, (word32) r9_249);
										rcx->u0.t0008.u0 = (int32) ebx_277;
										goto l0000000180014EDF;
									}
								}
							}
						}
					}
				}
			}
l0000000180014EE4:
			goto l0000000180014EEC;
		}
	}
l0000000180014EDF:
	goto l0000000180014EE4;
}

// 0000000180014F10: Register word32 fn0000000180014F10(Register (ptr64 Eq_3676) rcx, Register up32 edx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180010580
word32 fn0000000180014F10(union Eq_3676 * rcx, up32 edx, Eq_1342 r8d)
{
	ptr64 fp;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_14 = g_qw80030008 ^ fp - 344;
	word64 qwLoc0160;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		Eq_41134 tLoc0138;
		if (edx != 0x00)
		{
			uint64 r9_115 = 0x00;
			do
			{
				word32 r9d_113 = (word32) r9_115;
				Eq_137 rdx_39;
				rdx_39.u0 = rcx->u0.t0000.u0;
				if (rdx_39 == 0x00)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				Eq_1342 r8d_52;
				r8d_52.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_69 = (uint64) rcx->u0.t0008.u0;
				uint64 rdx_101 = (uint64) rdx_39.u2[(uint64) ((word32) r10_69 - 0x04)];
				Eq_1342 edx_75 = (word32) rdx_101;
				word32 rdx_32_32_100 = SLICE(rdx_101, word32, 32);
				if ((&rcx->u0)[1] != 0x00)
					rdx_101 = SEQ(rdx_32_32_100, __bswap<word32>(edx_75));
				if ((word32) r10_69 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				fn0000000180005050(rcx, (word32) rdx_101, &tLoc0138);
				r9_115 = (uint64) (r9d_113 + 0x01);
			} while ((word32) r9_115 < edx);
		}
		rcx->u0.t0008.u0 = (int32) r8d;
		up32 esi_324 = 0x00;
		if (edx != 0x00)
		{
			do
			{
				Eq_137 r9_146;
				r9_146.u0 = rcx->u0.t0000.u0;
				if (r9_146 == 0x00)
				{
l00000001800150E9:
					goto l00000001800150BA;
				}
				Eq_1342 r8d_159;
				r8d_159.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_159)
					goto l00000001800150E9;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_159)
					goto l00000001800150E9;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r14_175 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r10d_182 = (&rcx->u0)[1];
				Eq_1342 edx_187 = r9_146.u2[(uint64) ((word32) r14_175 - 0x04)];
				if (r10d_182 != 0x00)
					edx_187 = __bswap<word32>(edx_187);
				if ((word32) r14_175 + 0x04 > r8d_159)
					goto l00000001800150E9;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdi_201 = (uint64) rcx->u0.t0008.u0;
				uint64 r11_206 = (uint64) r9_146.u2[(uint64) ((word32) rdi_201 - 0x04)];
				Eq_1342 edi_264 = (word32) rdi_201;
				Eq_1342 r11d_212 = (word32) r11_206;
				word32 r11_32_32_278 = SLICE(r11_206, word32, 32);
				if (r10d_182 != 0x00)
					r11_206 = SEQ(r11_32_32_278, __bswap<word32>(r11d_212));
				word32 r11d_284 = (word32) r11_206;
				if (edx_187 > 100)
				{
					rcx->u0.t0008.u0 = (int32) edx_187;
					Eq_41257 rdx_221;
					rdx_221.u1 = 0x00;
					byte al_249;
					do
					{
						if (rcx->u0.t0008.u0 + 0x01 > r8d_159)
							goto l000000018001508E;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
						rdx_221 = (word64) rdx_221 + 1;
						al_249 = r9_146.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
					} while (al_249 != 0x00);
					if (rdx_221 < 0x0104)
						*(&tLoc0138 + rdx_221) = (word64) al_249;
					rcx->u0.t0008.u0 = (int32) edi_264;
				}
l000000018001508E:
				uint64 r8_283 = (uint64) (word32) (r14_175 + r11_206);
				Eq_1342 edi_330;
				edi_330.u0 = rcx->u0.t0008.u0;
				word32 r8_32_32_292 = SLICE(r8_283, word32, 32);
				if (r11d_284 == 0x00)
					r8_283 = SEQ(r8_32_32_292, r11d_284);
				if (fn00000001800150F0(rcx, (word32) r8_283) == 0x00)
					goto l00000001800150E9;
				rcx->u0.t0008.u0 = (int32) edi_330;
				++esi_324;
			} while (esi_324 < edx);
		}
l00000001800150BA:
	}
	return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
}

// 00000001800150F0: Register word32 fn00000001800150F0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180014F10
word32 fn00000001800150F0(union Eq_3676 * rcx, Eq_1342 r8d)
{
	ptr64 fp;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_12 = g_qw80030008 ^ fp - 0x01F8;
	word64 qwLoc0200;
	if (r8d == 0x00)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	Eq_137 rdx_21;
	rdx_21.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) r8d;
	if (rdx_21 == 0x00)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	uint64 r8_30 = (uint64) ((word64) r8d + 4);
	Eq_1342 r9d_33;
	r9d_33.u0 = rcx->u0.t000C.u0;
	Eq_1342 r8d_31 = (word32) r8_30;
	if (r8d_31 > r9d_33)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	Eq_1342 r10d_51 = (&rcx->u0)[1];
	rcx->u0.t0008.u0 = (int32) r8d_31;
	Eq_1342 r14d_56 = rdx_21.u2[(uint64) ((word32) r8_30 - 0x04)];
	if (r10d_51 != 0x00)
		r14d_56 = __bswap<word32>(r14d_56);
	if ((word32) r8_30 + 0x04 > r9d_33)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 edi_492 = rdx_21.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
	if (r10d_51 != 0x00)
		edi_492 = __bswap<word32>(edi_492);
	word128 xmm1_98 = g_ow80028E70;
	Eq_41395 tLoc0188;
	tLoc0188.ow0000 = g_ow80028E60;
	tLoc0188.ow0010 = xmm1_98;
	if (fn000000018001D8D0(rcx, &tLoc0188) == 0x00)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	Eq_137 rdx_127;
	rdx_127.u0 = rcx->u0.t0000.u0;
	if (rdx_127 == 0x00)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	Eq_1342 r8d_140;
	r8d_140.u0 = rcx->u0.t000C.u0;
	if (rcx->u0.t0008.u0 + 0x04 > r8d_140)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_146 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 r9d_153 = (&rcx->u0)[1];
	Eq_1342 r10d_158 = rdx_127.u2[(uint64) ((word32) r11_146 - 0x04)];
	if (r9d_153 != 0x00)
		r10d_158 = __bswap<word32>(r10d_158);
	if ((word32) r11_146 + 0x04 > r8d_140)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_178 = (uint64) rcx->u0.t0008.u0;
	word32 r11d_185 = (word32) r11_178;
	Eq_1342 r12d_197 = rdx_127.u2[(uint64) ((word32) r11_178 - 0x04)];
	if (r9d_153 != 0x00)
		r12d_197 = __bswap<word32>(r12d_197);
	if ((word32) r11_178 + 0x04 > r8d_140)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_211 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 eax_217 = rdx_127.u2[(uint64) ((word32) r11_211 - 0x04)];
	Eq_1342 dwLoc01C8_1184 = eax_217;
	if (r9d_153 != 0x00)
		dwLoc01C8_1184 = __bswap<word32>(eax_217);
	if ((word32) r11_211 + 0x04 > r8d_140)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_245 = (uint64) rcx->u0.t0008.u0;
	word32 r11d_254 = (word32) r11_245;
	Eq_1342 r15d_266 = rdx_127.u2[(uint64) ((word32) r11_245 - 0x04)];
	if (r9d_153 != 0x00)
		r15d_266 = __bswap<word32>(r15d_266);
	if ((word32) r11_245 + 0x04 > r8d_140)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_280 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 eax_286 = rdx_127.u2[(uint64) ((word32) r11_280 - 0x04)];
	Eq_1342 dwLoc01C4_1188 = eax_286;
	if (r9d_153 != 0x00)
		dwLoc01C4_1188 = __bswap<word32>(eax_286);
	if ((word32) r11_280 + 0x04 > r8d_140)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 eax_309;
	eax_309.u0 = rcx->u0.t0008.u0;
	if ((word64) eax_309 + 4 > r8d_140)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_320 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 eax_326 = rdx_127.u2[(uint64) ((word32) r11_320 - 0x04)];
	Eq_1342 dwLoc01C0_1191 = eax_326;
	if (r9d_153 != 0x00)
		dwLoc01C0_1191 = __bswap<word32>(eax_326);
	if ((word32) r11_320 + 0x04 > r8d_140)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_353 = (uint64) rcx->u0.t0008.u0;
	word32 r11d_365 = (word32) r11_353;
	Eq_1342 r13d_377 = rdx_127.u2[(uint64) ((word32) r11_353 - 0x04)];
	if (r9d_153 != 0x00)
		r13d_377 = __bswap<word32>(r13d_377);
	if ((word32) r11_353 + 0x04 > r8d_140)
		return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_397 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 esi_420 = rdx_127.u2[(uint64) ((word32) r11_397 - 0x04)];
	if (r9d_153 != 0x00)
		esi_420 = __bswap<word32>(esi_420);
	if ((word32) r11_397 + 0x04 <= r8d_140)
	{
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		if (rcx->u0.t0008.u0 + 0x04 <= r8d_140)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_41702 tLoc0148;
			fn0000000180005050(rcx, r10d_158, &tLoc0148);
			Eq_1342 r8d_499 = r8d_31 + edi_492;
			if (edi_492 == 0x00)
				r8d_499 = edi_492;
			Eq_1342 ecx_510;
			ecx_510.u2 = (word64) dwLoc01C8_1184 + r11d_185;
			if (dwLoc01C8_1184 == 0x00)
				ecx_510 = dwLoc01C8_1184;
			Eq_1342 edx_530;
			edx_530.u2 = (word64) dwLoc01C4_1188 + r11d_254;
			if (dwLoc01C4_1188 == 0x00)
				edx_530 = dwLoc01C4_1188;
			Eq_1342 edx_548 = eax_309 + dwLoc01C0_1191;
			if (dwLoc01C0_1191 == 0x00)
				edx_548 = dwLoc01C0_1191;
			Eq_1342 eax_568;
			eax_568.u2 = (word64) esi_420 + r11d_365;
			if (esi_420 == 0x00)
				eax_568 = esi_420;
			if (r8d_499 != 0x00)
			{
				rcx->u0.t0008.u0 = (int32) r8d_499;
				uint32 r14d_611 = r14d_56 >> 0x04;
				uint32 esi_1151 = 0x00;
				if (r14d_611 != 0x00)
				{
					do
					{
						word128 xmm1_620 = g_ow80028E70;
						tLoc0188.ow0000 = g_ow80028E60;
						tLoc0188.ow0010 = xmm1_620;
						if (fn000000018001D8D0(rcx, &tLoc0188) == 0x00)
							goto l0000000180015679;
						++esi_1151;
					} while (esi_1151 < r14d_611);
				}
			}
			if (ecx_510 != 0x00)
			{
				rcx->u0.t0008.u0 = (int32) ecx_510;
				if (r12d_197 != 0x00)
				{
					uint64 r9_1919 = 0x00;
					do
					{
						word32 r9d_737 = (word32) r9_1919;
						Eq_137 rdx_691;
						rdx_691.u0 = rcx->u0.t0000.u0;
						if (rdx_691 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
							goto l0000000180015679;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_712 = (uint64) rdx_691.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
						Eq_1342 edx_716 = (word32) rdx_712;
						word32 rdx_32_32_724 = SLICE(rdx_712, word32, 32);
						if ((&rcx->u0)[1] != 0x00)
							rdx_712 = SEQ(rdx_32_32_724, __bswap<word32>(edx_716));
						fn0000000180005050(rcx, (word32) rdx_712, &tLoc0148);
						r9_1919 = (uint64) (r9d_737 + 0x01);
					} while ((word32) r9_1919 < r12d_197);
				}
			}
			Eq_41841 tLoc01B8;
			if (edx_530 != 0x00)
			{
				rcx->u0.t0008.u0 = (int32) edx_530;
				if (r15d_266 != 0x00)
				{
					uint64 r10_1921 = 0x00;
					do
					{
						tLoc01B8.qw0004 = 0x00;
						tLoc01B8.dw0000 = 0x00;
						word32 r10d_807 = (word32) r10_1921;
						if (fn000000018001D5C0(rcx, &tLoc01B8) == 0x00)
							goto l0000000180015679;
						r10_1921 = (uint64) (r10d_807 + 0x01);
					} while ((word32) r10_1921 < r15d_266);
				}
			}
			Eq_1342 edi_1057;
			edi_1057.u0 = 0x00;
			if (edx_548 == 0x00)
			{
l00000001800155CD:
				if (eax_568 != 0x00)
				{
					rcx->u0.t0008.u0 = (int32) eax_568;
					if (r13d_377 != 0x00)
					{
						do
						{
							tLoc01B8.qw0004 = 0x00;
							tLoc01B8.dw0000 = 0x00;
							Eq_41966 tLoc01A0;
							tLoc01A0.qw0004 = 0x00;
							tLoc01A0.dw0000 = 0x00;
							if (fn000000018001D5C0(rcx, &tLoc01B8) == 0x00 || fn000000018001D5C0(rcx, &tLoc01A0) == 0x00)
								goto l0000000180015679;
							edi_1057.u2 = (word64) edi_1057 + 1;
						} while (edi_1057 < r13d_377);
					}
				}
				return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
			}
			Eq_137 r14_824;
			r14_824.u0 = rcx->u0.t0000.u0;
			rcx->u0.t0008.u0 = (int32) edx_548;
			if (r14_824 != 0x00)
			{
				uint64 rdx_833 = (uint64) ((word64) edx_548 + 4);
				Eq_1342 r8d_835;
				r8d_835.u0 = rcx->u0.t000C.u0;
				Eq_1342 edx_834 = (word32) rdx_833;
				if (edx_834 <= r8d_835)
				{
					Eq_1342 r15d_845 = (&rcx->u0)[1];
					rcx->u0.t0008.u0 = (int32) edx_834;
					Eq_1342 esi_850 = r14_824.u2[(uint64) ((word32) rdx_833 - 0x04)];
					if (r15d_845 != 0x00)
						esi_850 = __bswap<word32>(esi_850);
					if ((word32) rdx_833 + 0x04 <= r8d_835)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r9_1923 = 0x00;
						uint64 r10_1925 = 0x00;
						r9_1923 = 0x00;
						if (esi_850 != 0x00)
						{
							do
							{
								word32 r10d_918 = (word32) r10_1925;
								word32 r9d_913 = (word32) r9_1923;
								if (rcx->u0.t0008.u0 + 0x04 > r8d_835)
									goto l0000000180015679;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 r11_888 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 edx_899 = r14_824.u2[(uint64) ((word32) r11_888 - 0x04)];
								if (r15d_845 != 0x00)
									edx_899 = __bswap<word32>(edx_899);
								if ((word32) r11_888 + 0x04 > r8d_835)
									goto l0000000180015679;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								r10_1925 = (uint64) (r10d_918 + 0x01);
								r9_1923 = (uint64) ((word64) edx_899 + r9d_913);
							} while ((word32) r10_1925 < esi_850);
						}
						int32 r9d_931 = (word32) r9_1923;
						int32 ecx_1167 = 0x00;
						if (r9d_931 > 0x00)
						{
							do
							{
								if (rcx->u0.t0008.u0 + 0x04 > r8d_835)
									goto l0000000180015679;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								if (rcx->u0.t0008.u0 + 0x04 > r8d_835)
									goto l0000000180015679;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								++ecx_1167;
							} while (ecx_1167 < r9d_931);
						}
						goto l00000001800155CD;
					}
				}
			}
		}
	}
l0000000180015679:
	return (word32) fn0000000180023580(rax_12 ^ fp - 0x01F8, qwLoc0200);
}

// 00000001800156B0: Register word32 fn00000001800156B0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_6013) rdx)
// Called from:
//      fn0000000180003F40
word32 fn00000001800156B0(union Eq_3676 * rcx, struct Eq_6013 * rdx)
{
	Eq_42047 fp;
	ui64 rax_12 = g_qw80030008 ^ fp - 1016;
	Eq_137 r10_15;
	r10_15.u0 = rcx->u0.t0000.u0;
	word64 qwLoc0400;
	if (r10_15 == 0x00)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	uint64 r8_29 = (uint64) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 ecx_31;
	ecx_31.u0 = rcx->u0.t000C.u0;
	Eq_1342 r8d_30 = (word32) r8_29;
	if (r8d_30 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	rcx->u0.t0008.u0 = (int32) r8d_30;
	if ((word32) r8_29 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	uint64 r8_41 = (uint64) ((word64) r8d_30 + 4);
	rcx->u0.t0008.u0 = (int32) (word32) r8_41;
	if ((word32) r8_41 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rdx_52 = (uint64) rcx->u0.t0008.u0;
	if ((word32) rdx_52 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	rcx->u0.t0008.u0 = (int32) ((word32) rdx_52 + 0x04);
	uint64 rax_63 = (uint64) rdx->dw0008;
	Eq_1342 eax_64 = (word32) rax_63;
	if (eax_64 == 0x00)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	rcx->u0.t0008.u0 = (int32) eax_64;
	Eq_1342 edx_74 = (word32) rax_63 + 0x04;
	int32 r8d_148 = rdx->dw0010;
	if (edx_74 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	rcx->u0.t0008.u0 = (int32) edx_74;
	uint64 rdx_79 = (uint64) ((word64) edx_74 + 4);
	Eq_1342 edx_80 = (word32) rdx_79;
	if (edx_80 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	rcx->u0.t0008.u0 = (int32) edx_80;
	if ((word32) rdx_79 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	uint64 rdx_90 = (uint64) ((word64) edx_80 + 4);
	Eq_1342 edx_91 = (word32) rdx_90;
	rcx->u0.t0008.u0 = (int32) edx_91;
	if ((word32) rdx_90 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	uint64 rdx_99 = (uint64) ((word64) edx_91 + 4);
	Eq_1342 edx_100 = (word32) rdx_99;
	rcx->u0.t0008.u0 = (int32) edx_100;
	if ((word32) rdx_99 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	uint64 rdx_108 = (uint64) ((word64) edx_100 + 4);
	Eq_1342 edx_109 = (word32) rdx_108;
	rcx->u0.t0008.u0 = (int32) edx_109;
	if ((word32) rdx_108 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	uint64 rdx_117 = (uint64) ((word64) edx_109 + 4);
	Eq_1342 edx_118 = (word32) rdx_117;
	rcx->u0.t0008.u0 = (int32) edx_118;
	if ((word32) rdx_117 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	uint64 rdx_126 = (uint64) ((word64) edx_118 + 4);
	rcx->u0.t0008.u0 = (int32) (word32) rdx_126;
	if ((word32) rdx_126 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
	Eq_1342 eax_146 = (word32) rdx_126 + 0x04;
	rcx->u0.t0008.u0 = (int32) eax_146;
	int32 edx_185 = 0x00;
	if (r8d_148 > 0x04)
	{
		do
		{
			if ((word64) eax_146 + 4 > ecx_31)
			{
l0000000180015960:
				goto l000000018001596E;
			}
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			eax_146 = rcx->u0.t0008.u0 + 0x04;
			if (eax_146 > ecx_31)
				goto l0000000180015960;
			rcx->u0.t0008.u0 = (int32) eax_146;
			++edx_185;
		} while (edx_185 < r8d_148 - 0x04);
	}
	Eq_1342 edi_204;
	edi_204.u0 = rdx->t001C.u0;
	Eq_42323 tLoc0378;
	if (eax_146 < edi_204)
	{
		Eq_1342 ecx_334;
		do
		{
			if (fp == 888 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
			{
l0000000180015964:
				goto l0000000180015966;
			}
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 r9d_236 = r10_15.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
			if ((&rcx->u0)[1] != 0x00)
				r9d_236 = __bswap<word32>(r9d_236);
			Eq_1342 r8d_2074;
			r8d_2074.u0 = 0x00;
			Eq_42310 rdx_244;
			rdx_244.u1 = (uint64) 0x00;
			if (r9d_236 != 0x00)
			{
				do
				{
					if (rcx->u0.t0008.u0 + 0x01 > ((rcx->u0).t000C).u0)
						goto l0000000180015964;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
					byte al_279 = r10_15.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
					if (rdx_244 < 0x0104)
						*(&tLoc0378 + rdx_244) = (word64) al_279;
					if (al_279 == 0x00)
						break;
					r8d_2074.u2 = (word64) r8d_2074 + 1;
					rdx_244 = (word64) rdx_244 + 1;
				} while (r8d_2074 < r9d_236);
				if (rdx_244 < 0x0104)
					goto l00000001800158A0;
			}
			else
			{
l00000001800158A0:
				*(&tLoc0378 + rdx_244) = (word64) 0x00;
			}
			uint64 rax_321 = (uint64) rcx->u0.t0008.u0;
			ecx_334 = (word32) rax_321 & ~0x03;
			if (((byte) rax_321 & 0x03) > 0x00)
				ecx_334 = (word32) ecx_334.u1 + 4;
			rcx->u0.t0008.u0 = (int32) ecx_334;
		} while (ecx_334 < edi_204);
	}
	uint64 r14_474 = (uint64) 0x00;
	Eq_1342 ecx_382;
	ecx_382.u0 = rdx->t001C.u0;
	up32 edi_1815 = 0x00;
	Eq_1342 eax_411;
	eax_411.u0 = rcx->u0.t0008.u0;
	Eq_1342 r14d_1139 = (word32) r14_474;
	Eq_1342 esi_1805;
	esi_1805.u0 = 0x00;
	if (ecx_382 != 0x00)
		eax_411 = ecx_382;
	rcx->u0.t0008.u0 = (int32) eax_411;
	uint64 rcx_3035 = (uint64) g_t800306F0.u0;
	Eq_42357 tLoc03C8;
	tLoc03C8.qw0000 = r14_474;
	tLoc03C8.qw0008 = r14_474;
	tLoc03C8.qw0010 = r14_474;
	tLoc03C8.qw0018 = r14_474;
	tLoc03C8.qw0020 = r14_474;
	tLoc03C8.qw0028 = r14_474;
	tLoc03C8.qw0030 = r14_474;
	tLoc03C8.qw0038 = r14_474;
	tLoc03C8.qw0040 = r14_474;
	tLoc03C8.qw0048 = r14_474;
	word32 ecx_485 = (word32) rcx_3035;
	if (ecx_485 == 779)
	{
		uint64 rdx_674 = (uint64) rdx->t001C.u0;
		if ((word32) rdx_674 == 0x00 || fn00000001800160E0(rcx, (word32) rdx_674, &tLoc03C8) == 0x00)
			goto l00000001800160A4;
		goto l0000000180015AA9;
	}
	if (ecx_485 == 866)
	{
		uint64 rdx_648 = (uint64) rdx->t001C.u0;
		if ((word32) rdx_648 == 0x00 || fn00000001800166C0(rcx, (word32) rdx_648, &tLoc03C8) == 0x00)
			goto l00000001800160A4;
		goto l0000000180015AA9;
	}
	if (ecx_485 == 877)
	{
		uint64 rdx_622 = (uint64) rdx->t001C.u0;
		if ((word32) rdx_622 == 0x00 || fn0000000180016CF0(rcx, (word32) rdx_622, &tLoc03C8) == 0x00)
			goto l00000001800160A4;
		goto l0000000180015AA9;
	}
	Eq_2072 eax_494 = (word32) rcx_3035 - 911;
	word32 eax_613;
	if (eax_494 <= 0x17 && !__bt<word32>(0x00880081, eax_494))
	{
		uint64 rdx_593 = (uint64) rdx->t001C.u0;
		if ((word32) rdx_593 == 0x00)
			goto l00000001800160A4;
		eax_613 = fn00000001800172F0(rcx, (word32) rdx_593, &tLoc03C8);
	}
	else
	{
		if (ecx_485 == 944)
		{
			uint64 rdx_567 = (uint64) rdx->t001C.u0;
			if ((word32) rdx_567 == 0x00 || fn0000000180017AB0(rcx, (word32) rdx_567, &tLoc03C8) == 0x00)
				goto l00000001800160A4;
l0000000180015AA9:
			Eq_1342 eax_705;
			eax_705.u0 = tLoc03C8.t0004.u0;
			if (eax_705 != 0x00)
			{
				up32 esi_715 = tLoc03C8.dw0000;
				rcx->u0.t0008.u0 = (int32) eax_705;
				if (esi_715 != 0x00)
				{
					do
					{
						Eq_137 r10_722;
						r10_722.u0 = rcx->u0.t0000.u0;
						if (r10_722 == 0x00)
							goto l00000001800160A4;
						Eq_1342 r8d_735;
						r8d_735.u0 = rcx->u0.t000C.u0;
						if (rcx->u0.t0008.u0 + 0x04 > r8d_735)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r9_741 = (uint64) rcx->u0.t0008.u0;
						uint64 rdx_747 = (uint64) r10_722.u2[(uint64) ((word32) r9_741 - 0x04)];
						word32 r9d_756 = (word32) r9_741;
						Eq_1342 r11d_748 = (&rcx->u0)[1];
						Eq_1342 edx_753 = (word32) rdx_747;
						word32 rdx_32_32_821 = SLICE(rdx_747, word32, 32);
						if (r11d_748 != 0x00)
							rdx_747 = SEQ(rdx_32_32_821, __bswap<word32>(edx_753));
						uint64 r9_758 = (uint64) (r9d_756 + 0x04);
						word32 rdx_32_32_823 = SLICE(rdx_747, word32, 32);
						Eq_1342 r9d_759 = (word32) r9_758;
						if (r9d_759 > r8d_735)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) r9d_759;
						Eq_1342 eax_775 = r10_722.u2[(uint64) ((word32) r9_758 - 0x04)];
						if (r11d_748 != 0x00)
						{
							Eq_1342 eax_776 = __bswap<word32>(eax_775);
							rdx_747 = SEQ(rdx_32_32_823, eax_776);
						}
						if ((word32) r9_758 + 0x04 > r8d_735)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						Eq_1342 eax_794 = rcx->u0.t0008.u0 + 0x04;
						if (eax_794 > r8d_735)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) eax_794;
						if ((word64) eax_794 + 4 > r8d_735)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						Eq_1342 eax_810 = rcx->u0.t0008.u0 + 0x04;
						if (eax_810 > r8d_735)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) eax_810;
						fn0000000180005050(rcx, (word32) rdx_747, &tLoc0378);
						++edi_1815;
					} while (edi_1815 < esi_715);
				}
			}
			Eq_1342 eax_853;
			eax_853.u0 = tLoc03C8.t000C.u0;
			if (eax_853 != 0x00)
			{
				Eq_1342 edx_873;
				edx_873.u0 = tLoc03C8.t0008.u0;
				rcx->u0.t0008.u0 = (int32) eax_853;
				Eq_1342 ecx_2078 = r14d_1139;
				if (edx_873 != 0x00)
				{
					Eq_137 r8_878;
					r8_878.u0 = rcx->u0.t0000.u0;
					do
					{
						if (r8_878 == 0x00)
							goto l00000001800160A4;
						Eq_1342 eax_891 = rcx->u0.t0008.u0 + 0x02;
						if (eax_891 > ((rcx->u0).t000C).u0)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) eax_891;
						ecx_2078.u2 = (word64) ecx_2078 + 1;
					} while (ecx_2078 < edx_873);
				}
			}
			Eq_1342 eax_907;
			eax_907.u0 = tLoc03C8.t0014.u0;
			Eq_43068 tLoc0268;
			if (eax_907 != 0x00)
			{
				rcx->u0.t0008.u0 = (int32) eax_907;
				Eq_1342 esi_1125 = r14d_1139;
				Eq_1342 r14d_920;
				r14d_920.u0 = tLoc03C8.t0010.u0;
				if (r14d_920 != 0x00)
				{
					Eq_137 rdx_1090;
					rdx_1090.u0 = rcx->u0.t0000.u0;
					do
					{
						if (rdx_1090 == 0x00)
							goto l00000001800160A4;
						Eq_1342 r8d_941;
						r8d_941.u0 = rcx->u0.t000C.u0;
						if (rcx->u0.t0008.u0 + 0x04 > r8d_941)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r9_947 = (uint64) rcx->u0.t0008.u0;
						word32 r9d_962 = (word32) r9_947;
						Eq_1342 r11d_954 = (&rcx->u0)[1];
						Eq_1342 r10d_1060 = rdx_1090.u2[(uint64) ((word32) r9_947 - 0x04)];
						if (r11d_954 != 0x00)
							r10d_1060 = __bswap<word32>(r10d_1060);
						uint64 r9_964 = (uint64) (r9d_962 + 0x04);
						Eq_1342 r9d_965 = (word32) r9_964;
						if (r9d_965 > r8d_941)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) r9d_965;
						Eq_1342 eax_981 = rdx_1090.u2[(uint64) ((word32) r9_964 - 0x04)];
						if (r11d_954 != 0x00)
						{
							Eq_1342 eax_982 = __bswap<word32>(eax_981);
							r10d_1060 = eax_982;
						}
						if ((word32) r9_964 + 0x04 > r8d_941)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdi_996 = (uint64) rcx->u0.t0008.u0;
						word32 edi_1010 = (word32) rdi_996;
						Eq_1342 r9d_1007 = rdx_1090.u2[(uint64) ((word32) rdi_996 - 0x04)];
						if (r11d_954 != 0x00)
							r9d_1007 = __bswap<word32>(r9d_1007);
						uint64 rdi_1012 = (uint64) (edi_1010 + 0x04);
						Eq_1342 edi_1013 = (word32) rdi_1012;
						if (edi_1013 > r8d_941)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) edi_1013;
						Eq_1342 eax_1029 = rdx_1090.u2[(uint64) ((word32) rdi_1012 - 0x04)];
						if (r11d_954 != 0x00)
						{
							Eq_1342 eax_1030 = __bswap<word32>(eax_1029);
							r9d_1007 = eax_1030;
						}
						if ((word32) rdi_1012 + 0x04 > r8d_941)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						Eq_1342 eax_1048 = rcx->u0.t0008.u0 + 0x04;
						if (eax_1048 > r8d_941)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) eax_1048;
						fn0000000180005050(rcx, r10d_1060, &tLoc0378);
						fn0000000180005050(rcx, r9d_1007, &tLoc0268);
						rdx_1090.u0 = rcx->u0.t0000.u0;
						int32 ecx_1093;
						for (ecx_1093 = 0x00; ecx_1093 < 0x0A; ++ecx_1093)
						{
							if (rdx_1090 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						}
						esi_1125.u2 = (word64) esi_1125 + 1;
					} while (esi_1125 < r14d_920);
				}
				r14d_1139.u0 = 0x00;
			}
			Eq_1342 eax_1155;
			eax_1155.u0 = tLoc03C8.t001C.u0;
			uint64 rcx_1198;
			if (eax_1155 != 0x00)
			{
				Eq_1342 r12d_1165;
				r12d_1165.u0 = tLoc03C8.t0018.u0;
				rcx->u0.t0008.u0 = (int32) eax_1155;
				if (r12d_1165 != 0x00 && fn0000000180001FD0(&g_t800306F0, r12d_1165) == 0x00)
					goto l00000001800160A4;
				Eq_1342 r15d_1639 = r14d_1139;
				if (r12d_1165 != 0x00)
				{
					uint64 rcx_1694;
					do
					{
						memset(&tLoc0378, 0, 0x0104);
						Eq_137 r9_1208;
						r9_1208.u0 = rcx->u0.t0000.u0;
						Eq_1342 edi_1393 = r14d_1139;
						if (r9_1208 == 0x00)
							goto l00000001800160A4;
						Eq_1342 edx_1224;
						edx_1224.u0 = rcx->u0.t000C.u0;
						if (rcx->u0.t0008.u0 + 0x04 > edx_1224)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_1230 = (uint64) rcx->u0.t0008.u0;
						word32 r10d_1245 = (word32) r10_1230;
						Eq_1342 r8d_1237 = (&rcx->u0)[1];
						Eq_1342 r11d_1242 = r9_1208.u2[(uint64) ((word32) r10_1230 - 0x04)];
						if (r8d_1237 != 0x00)
							r11d_1242 = __bswap<word32>(r11d_1242);
						uint64 r10_1247 = (uint64) (r10d_1245 + 0x04);
						Eq_1342 r10d_1248 = (word32) r10_1247;
						if (r10d_1248 > edx_1224)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) r10d_1248;
						Eq_1342 eax_1264 = r9_1208.u2[(uint64) ((word32) r10_1247 - 0x04)];
						if (r8d_1237 != 0x00)
						{
							Eq_1342 eax_1265 = __bswap<word32>(eax_1264);
							r11d_1242 = eax_1265;
						}
						if ((word32) r10_1247 + 0x04 > edx_1224)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_1279 = (uint64) rcx->u0.t0008.u0;
						word32 r10d_1293 = (word32) r10_1279;
						Eq_1342 r14d_1290 = r9_1208.u2[(uint64) ((word32) r10_1279 - 0x04)];
						if (r8d_1237 != 0x00)
							r14d_1290 = __bswap<word32>(r14d_1290);
						uint64 r10_1295 = (uint64) (r10d_1293 + 0x04);
						Eq_1342 r10d_1296 = (word32) r10_1295;
						if (r10d_1296 > edx_1224)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) r10d_1296;
						Eq_1342 eax_1312 = r9_1208.u2[(uint64) ((word32) r10_1295 - 0x04)];
						if (r8d_1237 != 0x00)
						{
							Eq_1342 eax_1313 = __bswap<word32>(eax_1312);
							r14d_1290 = eax_1313;
						}
						if ((word32) r10_1295 + 0x04 > edx_1224)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_1327 = (uint64) rcx->u0.t0008.u0;
						word32 r10d_1341 = (word32) r10_1327;
						Eq_1342 esi_1338 = r9_1208.u2[(uint64) ((word32) r10_1327 - 0x04)];
						if (r8d_1237 != 0x00)
							esi_1338 = __bswap<word32>(esi_1338);
						uint64 r10_1343 = (uint64) (r10d_1341 + 0x04);
						Eq_1342 r10d_1344 = (word32) r10_1343;
						if (r10d_1344 > edx_1224)
							goto l00000001800160A4;
						rcx->u0.t0008.u0 = (int32) r10d_1344;
						Eq_1342 eax_1360 = r9_1208.u2[(uint64) ((word32) r10_1343 - 0x04)];
						if (r8d_1237 != 0x00)
						{
							Eq_1342 eax_1361 = __bswap<word32>(eax_1360);
							esi_1338 = eax_1361;
						}
						Eq_1753 eax_1366;
						eax_1366.u0 = g_t800306F0.u0;
						if (eax_1366 == 779)
						{
							if ((word32) r10_1343 + 0x04 > edx_1224)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r10_1425 = (uint64) rcx->u0.t0008.u0;
							word32 r10d_1437 = (word32) r10_1425;
							edi_1393 = r9_1208.u2[(uint64) ((word32) r10_1425 - 0x04)];
							if (r8d_1237 != 0x00)
								edi_1393 = __bswap<word32>(edi_1393);
							uint64 r10_1439 = (uint64) (r10d_1437 + 0x04);
							Eq_1342 r10d_1440 = (word32) r10_1439;
							if (r10d_1440 > edx_1224)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) r10d_1440;
							Eq_1342 eax_1456 = r9_1208.u2[(uint64) ((word32) r10_1439 - 0x04)];
							if (r8d_1237 != 0x00)
							{
								Eq_1342 eax_1457 = __bswap<word32>(eax_1456);
								edi_1393 = eax_1457;
							}
							if ((word32) r10_1439 + 0x04 > edx_1224)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 eax_1475 = rcx->u0.t0008.u0 + 0x04;
							if (eax_1475 > edx_1224)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) eax_1475;
							if ((word64) eax_1475 + 4 > edx_1224)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 eax_1491 = rcx->u0.t0008.u0 + 0x04;
							if (eax_1491 > edx_1224)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) eax_1491;
							if ((word64) eax_1491 + 4 > edx_1224)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 eax_1507 = rcx->u0.t0008.u0 + 0x04;
							if (eax_1507 > edx_1224)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) eax_1507;
						}
						else if (eax_1366 > 911)
						{
							if ((word32) r10_1343 + 0x04 > edx_1224)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r10_1382 = (uint64) rcx->u0.t0008.u0;
							edi_1393 = r9_1208.u2[(uint64) ((word32) r10_1382 - 0x04)];
							if (r8d_1237 != 0x00)
								edi_1393 = __bswap<word32>(edi_1393);
							Eq_1342 eax_1398 = (word32) r10_1382 + 0x04;
							if (eax_1398 > edx_1224)
								goto l00000001800160A4;
							rcx->u0.t0008.u0 = (int32) eax_1398;
							Eq_1342 eax_1414 = r9_1208.u2[(uint64) ((word64) eax_1398 - 4)];
							if (r8d_1237 != 0x00)
							{
								Eq_1342 eax_1415 = __bswap<word32>(eax_1414);
								edi_1393 = eax_1415;
							}
						}
						fn0000000180005050(rcx, r11d_1242, &tLoc0378);
						fn0000000180005050(rcx, r14d_1290, &tLoc0268);
						Eq_43317 tLoc0158;
						fn0000000180005050(rcx, esi_1338, &tLoc0158);
						uint64 rcx_1588 = (uint64) g_t800306F0.u0;
						int32 ecx_1589 = (word32) rcx_1588;
						if (ecx_1589 > 911 || ecx_1589 == 779)
						{
							fn0000000180005050(rcx, edi_1393, &tLoc0158);
							rcx_1588 = (uint64) g_t800306F0.u0;
						}
						struct Eq_1702 * rdx_1626 = g_ptr80030700;
						rcx_1694 = rcx_1588;
						if (rdx_1626 != null)
						{
							MultiByteToWideChar(0x00, 0x01, &tLoc0378, -1, rdx_1626 + (int64) r15d_1639 *s 0x0208, 0xFF);
							rcx_1694 = (uint64) g_t800306F0.u0;
						}
						r15d_1639.u2 = (word64) r15d_1639 + 1;
						r14d_1139.u0 = 0x00;
					} while (r15d_1639 < r12d_1165);
					rcx_1198 = rcx_1694;
l0000000180015FE5:
					edi_1815 = tLoc03C8.dw0028;
					esi_1805.u0 = tLoc03C8.t002C.u0;
					rcx_3035 = rcx_1198;
l0000000180015FED:
					Eq_1753 ecx_1728 = (word32) rcx_3035;
					if (ecx_1728 == 866 || (ecx_1728 == 877 || (ecx_1728 <= 990 && ecx_1728 >= 0x03B2) && !__bt<word64>(0x1080481C0101, (int64) (ecx_1728 - 0x03B2))))
					{
						if (fn00000001800198F0(rcx, (uint64) tLoc03C8.dw0020, tLoc03C8.t0024.u0) == 0x00)
							goto l00000001800160A4;
						ecx_1728.u0 = g_t800306F0.u0;
					}
					up32 ecx_1796 = (up32) ((word64) ecx_1728 - 946);
					word32 eax_1859;
					if (ecx_1796 <= 44 && !__bt<word64>(0x1080481C0101, (int64) ecx_1796))
						eax_1859 = fn0000000180019C40(rcx, (uint64) edi_1815, esi_1805);
					else
						eax_1859 = fn00000001800190D0(rcx, (uint64) edi_1815, esi_1805);
					if (eax_1859 != 0x00 && (fn0000000180019F30(rcx, (uint64) tLoc03C8.dw0030, (tLoc03C8.t0034).u0) != 0x00 && (fn000000018001C9D0(rcx, tLoc03C8.dw0038, (tLoc03C8.t003C).u0) != 0x00 && fn000000018001AC20(rcx, tLoc03C8.dw0044) != 0x00)))
					{
l0000000180015966:
l000000018001596E:
						return (word32) fn0000000180023580(rax_12 ^ fp - 1016, qwLoc0400);
					}
l00000001800160A4:
					goto l00000001800160A7;
				}
			}
			rcx_1198 = (uint64) g_t800306F0.u0;
			goto l0000000180015FE5;
		}
		if (ecx_485 == 0x03B2 || ecx_485 == 0x03BA)
			eax_613 = fn0000000180018190(rcx, rdx->t001C.u0, &tLoc03C8);
		else
		{
			Eq_2072 eax_513 = (word32) rcx_3035 - 0x03C4;
			if (eax_513 > 0x1A || __bt<word32>(0x04201207, eax_513))
				goto l0000000180015FED;
			uint64 rdx_524 = (uint64) rdx->t001C.u0;
			if ((word32) rdx_524 == 0x00)
				goto l00000001800160A4;
			eax_613 = fn00000001800188D0(rcx, (word32) rdx_524, &tLoc03C8);
		}
	}
	if (eax_613 == 0x00)
		goto l00000001800160A4;
	goto l0000000180015AA9;
}

// 00000001800160E0: Register word32 fn00000001800160E0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_42446) r8)
// Called from:
//      fn00000001800156B0
word32 fn00000001800160E0(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_42446 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_11 = g_qw80030008 ^ fp - 424;
	Eq_137 r11_14;
	r11_14.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01B0;
	if (r11_14 != 0x00)
	{
		uint64 r10_28 = (uint64) ((word64) edx + 4);
		Eq_1342 ebx_30;
		ebx_30.u0 = rcx->u0.t000C.u0;
		Eq_1342 r10d_29 = (word32) r10_28;
		if (r10d_29 <= ebx_30)
		{
			Eq_1342 r8d_40 = (&rcx->u0)[1];
			rcx->u0.t0008.u0 = (int32) r10d_29;
			Eq_1342 r9d_45 = r11_14.u2[(uint64) ((word32) r10_28 - 0x04)];
			if (r8d_40 != 0x00)
				r9d_45 = __bswap<word32>(r9d_45);
			Eq_1342 eax_50 = (word32) r10_28 + 0x04;
			if (eax_50 <= ebx_30)
			{
				rcx->u0.t0008.u0 = (int32) eax_50;
				Eq_1342 eax_66 = r11_14.u2[(uint64) ((word64) eax_50 - 4)];
				if (r8d_40 != 0x00)
				{
					Eq_1342 eax_67 = __bswap<word32>(eax_66);
					r9d_45 = eax_67;
				}
				Eq_43582 tLoc0158;
				fn0000000180005050(rcx, r9d_45, &tLoc0158);
				Eq_137 r9_88;
				r9_88.u0 = rcx->u0.t0000.u0;
				int32 edx_123;
				for (edx_123 = 0x00; edx_123 < 0x05; ++edx_123)
				{
					if (r9_88 == 0x00)
						goto l00000001800166BA;
					Eq_1342 r8d_110;
					r8d_110.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_110)
						goto l00000001800166BA;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 eax_120 = rcx->u0.t0008.u0 + 0x04;
					if (eax_120 > r8d_110)
						goto l00000001800166BA;
					rcx->u0.t0008.u0 = (int32) eax_120;
				}
				int32 edx_132;
				uint64 rbx_157;
				word32 ebx_175;
				for (edx_132 = 0x00; edx_132 < 0x10; ++edx_132)
				{
					if (r9_88 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
						goto l00000001800166BA;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					rbx_157 = (uint64) rcx->u0.t0008.u0;
					ebx_175 = (word32) rbx_157;
				}
				if (r9_88 != 0x00)
				{
					Eq_1342 r8d_170;
					r8d_170.u0 = rcx->u0.t000C.u0;
					if ((word32) rbx_157 + 0x04 <= r8d_170)
					{
						uint64 rbx_177 = (uint64) (ebx_175 + 0x04);
						Eq_1342 r11d_188 = (&rcx->u0)[1];
						Eq_1342 ebx_178 = (word32) rbx_177;
						rcx->u0.t0008.u0 = (int32) ebx_178;
						Eq_1342 eax_184 = r9_88.u2[(uint64) ((word32) rbx_177 - 0x04)];
						Eq_1342 dwLoc017C_1121 = eax_184;
						if (r11d_188 != 0x00)
							dwLoc017C_1121 = __bswap<word32>(eax_184);
						if ((word32) rbx_177 + 0x04 <= r8d_170)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rsi_221 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_227 = r9_88.u2[(uint64) ((word32) rsi_221 - 0x04)];
							word32 esi_243 = (word32) rsi_221;
							Eq_1342 dwLoc0188_1124 = eax_227;
							if (r11d_188 != 0x00)
								dwLoc0188_1124 = __bswap<word32>(eax_227);
							if ((word32) rsi_221 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 rsi_245 = (uint64) (esi_243 + 0x04);
							Eq_1342 esi_246 = (word32) rsi_245;
							rcx->u0.t0008.u0 = (int32) esi_246;
							Eq_1342 eax_254 = r9_88.u2[(uint64) ((word32) rsi_245 - 0x04)];
							Eq_1342 dwLoc0174_1126 = eax_254;
							if (r11d_188 != 0x00)
								dwLoc0174_1126 = __bswap<word32>(eax_254);
							if ((word32) rsi_245 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r14_292 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_298 = r9_88.u2[(uint64) ((word32) r14_292 - 0x04)];
							word32 r14d_314 = (word32) r14_292;
							Eq_1342 dwLoc0184_1129 = eax_298;
							if (r11d_188 != 0x00)
								dwLoc0184_1129 = __bswap<word32>(eax_298);
							if ((word32) r14_292 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 r14_316 = (uint64) (r14d_314 + 0x04);
							Eq_1342 r14d_317 = (word32) r14_316;
							rcx->u0.t0008.u0 = (int32) r14d_317;
							Eq_1342 eax_325 = r9_88.u2[(uint64) ((word32) r14_316 - 0x04)];
							Eq_1342 dwLoc0170_1131 = eax_325;
							if (r11d_188 != 0x00)
								dwLoc0170_1131 = __bswap<word32>(eax_325);
							if ((word32) r14_316 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r10_347 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_353 = r9_88.u2[(uint64) ((word32) r10_347 - 0x04)];
							word32 r10d_370 = (word32) r10_347;
							Eq_1342 dwLoc0180_1133 = eax_353;
							if (r11d_188 != 0x00)
								dwLoc0180_1133 = __bswap<word32>(eax_353);
							if ((word32) r10_347 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 r10_372 = (uint64) (r10d_370 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r10_372;
							if ((word32) r10_372 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_384 = (uint64) rcx->u0.t0008.u0;
							word32 edx_390 = (word32) rdx_384;
							if ((word32) rdx_384 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 rdx_392 = (uint64) (edx_390 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_392;
							if ((word32) rdx_392 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r13_422 = (uint64) rcx->u0.t0008.u0;
							word32 r13d_428 = (word32) r13_422;
							if ((word32) r13_422 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 r13_430 = (uint64) (r13d_428 + 0x04);
							Eq_1342 r13d_431 = (word32) r13_430;
							rcx->u0.t0008.u0 = (int32) r13d_431;
							Eq_1342 eax_438 = r9_88.u2[(uint64) ((word32) r13_430 - 0x04)];
							Eq_1342 dwLoc0178_1136 = eax_438;
							if (r11d_188 != 0x00)
								dwLoc0178_1136 = __bswap<word32>(eax_438);
							if ((word32) r13_430 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r10_465 = (uint64) rcx->u0.t0008.u0;
							word32 r10d_499 = (word32) r10_465;
							Eq_1342 r12d_1047 = r9_88.u2[(uint64) ((word32) r10_465 - 0x04)];
							if (r11d_188 != 0x00)
								r12d_1047 = __bswap<word32>(r12d_1047);
							if ((word32) r10_465 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 r10_501 = (uint64) (r10d_499 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r10_501;
							if ((word32) r10_501 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r10_513 = (uint64) rcx->u0.t0008.u0;
							word32 r10d_519 = (word32) r10_513;
							if ((word32) r10_513 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 r10_521 = (uint64) (r10d_519 + 0x04);
							Eq_1342 r10d_522 = (word32) r10_521;
							rcx->u0.t0008.u0 = (int32) r10d_522;
							Eq_1342 eax_531 = r9_88.u2[(uint64) ((word32) r10_521 - 0x04)];
							Eq_1342 dwLoc016C_1140 = eax_531;
							if (r11d_188 != 0x00)
								dwLoc016C_1140 = __bswap<word32>(eax_531);
							if ((word32) r10_521 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r10_558 = (uint64) rcx->u0.t0008.u0;
							word32 r10d_594 = (word32) r10_558;
							Eq_1342 ebp_1052 = r9_88.u2[(uint64) ((word32) r10_558 - 0x04)];
							if (r11d_188 != 0x00)
								ebp_1052 = __bswap<word32>(ebp_1052);
							if ((word32) r10_558 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 r10_596 = (uint64) (r10d_594 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r10_596;
							if ((word32) r10_596 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_608 = (uint64) rcx->u0.t0008.u0;
							word32 edx_614 = (word32) rdx_608;
							if ((word32) rdx_608 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 rdx_616 = (uint64) (edx_614 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_616;
							if ((word32) rdx_616 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_627 = (uint64) rcx->u0.t0008.u0;
							word32 edx_633 = (word32) rdx_627;
							if ((word32) rdx_627 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 rdx_635 = (uint64) (edx_633 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_635;
							if ((word32) rdx_635 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r15_669 = (uint64) rcx->u0.t0008.u0;
							word32 r15d_675 = (word32) r15_669;
							if ((word32) r15_669 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 r15_677 = (uint64) (r15d_675 + 0x04);
							Eq_1342 r15d_678 = (word32) r15_677;
							rcx->u0.t0008.u0 = (int32) r15d_678;
							Eq_1342 eax_685 = r9_88.u2[(uint64) ((word32) r15_677 - 0x04)];
							Eq_1342 dwLoc0168_1144 = eax_685;
							if (r11d_188 != 0x00)
								dwLoc0168_1144 = __bswap<word32>(eax_685);
							if ((word32) r15_677 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r10_706 = (uint64) rcx->u0.t0008.u0;
							uint64 r9_711 = (uint64) r9_88.u2[(uint64) ((word32) r10_706 - 0x04)];
							word32 r10d_726 = (word32) r10_706;
							Eq_1342 r9d_717 = (word32) r9_711;
							word32 r9_32_32_1650 = SLICE(r9_711, word32, 32);
							if (r11d_188 != 0x00)
								r9d_717 = __bswap<word32>(r9d_717);
							if ((word32) r10_706 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 r10_728 = (uint64) (r10d_726 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r10_728;
							if ((word32) r10_728 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_740 = (uint64) rcx->u0.t0008.u0;
							word32 edx_746 = (word32) rdx_740;
							if ((word32) rdx_740 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 rdx_748 = (uint64) (edx_746 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_748;
							if ((word32) rdx_748 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_759 = (uint64) rcx->u0.t0008.u0;
							word32 edx_765 = (word32) rdx_759;
							if ((word32) rdx_759 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 rdx_767 = (uint64) (edx_765 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_767;
							if ((word32) rdx_767 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_778 = (uint64) rcx->u0.t0008.u0;
							word32 edx_784 = (word32) rdx_778;
							if ((word32) rdx_778 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 rdx_786 = (uint64) (edx_784 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_786;
							if ((word32) rdx_786 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_797 = (uint64) rcx->u0.t0008.u0;
							word32 edx_803 = (word32) rdx_797;
							if ((word32) rdx_797 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 rdx_805 = (uint64) (edx_803 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_805;
							if ((word32) rdx_805 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_816 = (uint64) rcx->u0.t0008.u0;
							word32 edx_822 = (word32) rdx_816;
							if ((word32) rdx_816 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							uint64 rdx_824 = (uint64) (edx_822 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_824;
							if ((word32) rdx_824 + 0x04 > r8d_170)
								return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 edx_844 = dwLoc0188_1124;
							if (dwLoc0188_1124 != 0x00)
								edx_844 = dwLoc0188_1124 + ebx_178;
							if (r12d_1047 != 0x00)
								r12d_1047 += r13d_431;
							Eq_1342 ecx_1031 = dwLoc0184_1129;
							if (dwLoc0184_1129 != 0x00)
								ecx_1031 = dwLoc0184_1129 + esi_246;
							Eq_1342 eax_1013 = dwLoc0180_1133;
							if (dwLoc0180_1133 != 0x00)
								eax_1013 = dwLoc0180_1133 + r14d_317;
							if (ebp_1052 != 0x00)
								ebp_1052 += r10d_522;
							uint64 r9_1686 = SEQ(r9_32_32_1650, r9d_717);
							if (r9d_717 != 0x00)
								r9_1686 = (uint64) (r9d_717 + r15d_678);
							r8->t001C.u0 = (int32) edx_844;
							r8->t003C.u0 = (int32) eax_1013;
							r8->qw0028 = 0x00;
							r8->t0040.u0 = (int32) dwLoc016C_1140;
							r8->t0020.u0 = (int32) dwLoc0178_1136;
							r8->t0034.u0 = (int32) ecx_1031;
							r8->t0048.u0 = (int32) dwLoc0168_1144;
							r8->t0030.u0 = (int32) dwLoc0174_1126;
							r8->t0018.u0 = (int32) dwLoc017C_1121;
							r8->t0024.u0 = (int32) r12d_1047;
							r8->t0038.u0 = (int32) dwLoc0170_1131;
							r8->t0044.u0 = (int32) ebp_1052;
							r8->dw004C = (word32) r9_1686;
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						}
					}
				}
			}
		}
	}
l00000001800166BA:
	return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
}

// 00000001800166C0: Register word32 fn00000001800166C0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_42689) r8)
// Called from:
//      fn00000001800156B0
word32 fn00000001800166C0(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_42689 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_11 = g_qw80030008 ^ fp - 424;
	Eq_137 r11_14;
	r11_14.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01B0;
	if (r11_14 != 0x00)
	{
		uint64 r10_28 = (uint64) ((word64) edx + 4);
		Eq_1342 ebx_30;
		ebx_30.u0 = rcx->u0.t000C.u0;
		Eq_1342 r10d_29 = (word32) r10_28;
		if (r10d_29 > ebx_30)
			goto l0000000180016CDD;
		Eq_1342 r8d_40 = (&rcx->u0)[1];
		rcx->u0.t0008.u0 = (int32) r10d_29;
		Eq_1342 r9d_45 = r11_14.u2[(uint64) ((word32) r10_28 - 0x04)];
		if (r8d_40 != 0x00)
			r9d_45 = __bswap<word32>(r9d_45);
		Eq_1342 eax_50 = (word32) r10_28 + 0x04;
		if (eax_50 <= ebx_30)
		{
			rcx->u0.t0008.u0 = (int32) eax_50;
			Eq_1342 eax_66 = r11_14.u2[(uint64) ((word64) eax_50 - 4)];
			if (r8d_40 != 0x00)
			{
				Eq_1342 eax_67 = __bswap<word32>(eax_66);
				r9d_45 = eax_67;
			}
			Eq_44508 tLoc0158;
			fn0000000180005050(rcx, r9d_45, &tLoc0158);
			Eq_137 r9_88;
			r9_88.u0 = rcx->u0.t0000.u0;
			int32 edx_123;
			Eq_1342 eax_120;
			for (edx_123 = 0x00; edx_123 < 0x05; ++edx_123)
			{
				if (r9_88 == 0x00)
					goto l0000000180016CDD;
				Eq_1342 r8d_110;
				r8d_110.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_110)
					goto l0000000180016CDD;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				eax_120 = rcx->u0.t0008.u0 + 0x04;
				if (eax_120 > r8d_110)
					goto l0000000180016CDD;
				rcx->u0.t0008.u0 = (int32) eax_120;
			}
			Eq_1753 edx_134;
			edx_134.u0 = g_t800306F0.u0;
			int32 r8d_1162 = 0x15;
			int32 edx_1161;
			if (edx_134 == 779)
			{
				edx_1161 = 0x00;
				r8d_1162 = 0x10;
			}
			else
			{
				if (edx_134 == 866)
					r8d_1162 = 0x12;
				edx_1161 = 0x00;
				if (r8d_1162 <= 0x00)
					goto l00000001800167E6;
			}
			do
			{
				if (r9_88 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
					goto l0000000180016CDD;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				++edx_1161;
				eax_120.u0 = rcx->u0.t0008.u0;
			} while (edx_1161 < r8d_1162);
l00000001800167E6:
			if (r9_88 != 0x00)
			{
				Eq_1342 r8d_204;
				r8d_204.u0 = rcx->u0.t000C.u0;
				if ((word64) eax_120 + 4 <= r8d_204)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_210 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_217 = r9_88.u2[(uint64) ((word32) r10_210 - 0x04)];
					word32 r10d_233 = (word32) r10_210;
					Eq_1342 r11d_223 = (&rcx->u0)[1];
					Eq_1342 dwLoc0188_1167 = eax_217;
					if (r11d_223 != 0x00)
						dwLoc0188_1167 = __bswap<word32>(eax_217);
					if ((word32) r10_210 + 0x04 <= r8d_204)
					{
						uint64 r10_247 = (uint64) (r10d_233 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) r10_247;
						Eq_1342 r13d_1075 = r9_88.u2[(uint64) ((word32) r10_247 - 0x04)];
						if (r11d_223 != 0x00)
							r13d_1075 = __bswap<word32>(r13d_1075);
						if ((word32) r10_247 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_284 = (uint64) rcx->u0.t0008.u0;
						word32 edx_290 = (word32) rdx_284;
						if ((word32) rdx_284 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_292 = (uint64) (edx_290 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_292;
						if ((word32) rdx_292 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_303 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 eax_309 = r9_88.u2[(uint64) ((word32) r10_303 - 0x04)];
						word32 r10d_322 = (word32) r10_303;
						Eq_1342 dwLoc0184_1171 = eax_309;
						if (r11d_223 != 0x00)
							dwLoc0184_1171 = __bswap<word32>(eax_309);
						if ((word32) r10_303 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 r10_336 = (uint64) (r10d_322 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) r10_336;
						Eq_1342 r12d_1081 = r9_88.u2[(uint64) ((word32) r10_336 - 0x04)];
						if (r11d_223 != 0x00)
							r12d_1081 = __bswap<word32>(r12d_1081);
						if ((word32) r10_336 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_375 = (uint64) rcx->u0.t0008.u0;
						word32 edx_381 = (word32) rdx_375;
						if ((word32) rdx_375 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_383 = (uint64) (edx_381 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_383;
						if ((word32) rdx_383 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_394 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 eax_400 = r9_88.u2[(uint64) ((word32) r10_394 - 0x04)];
						word32 r10d_413 = (word32) r10_394;
						Eq_1342 dwLoc0180_1175 = eax_400;
						if (r11d_223 != 0x00)
							dwLoc0180_1175 = __bswap<word32>(eax_400);
						if ((word32) r10_394 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 r10_427 = (uint64) (r10d_413 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) r10_427;
						Eq_1342 r14d_1086 = r9_88.u2[(uint64) ((word32) r10_427 - 0x04)];
						if (r11d_223 != 0x00)
							r14d_1086 = __bswap<word32>(r14d_1086);
						if ((word32) r10_427 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_468 = (uint64) rcx->u0.t0008.u0;
						word32 edx_474 = (word32) rdx_468;
						if ((word32) rdx_468 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_476 = (uint64) (edx_474 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_476;
						if ((word32) rdx_476 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_487 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 eax_493 = r9_88.u2[(uint64) ((word32) r10_487 - 0x04)];
						word32 r10d_506 = (word32) r10_487;
						Eq_1342 dwLoc017C_1179 = eax_493;
						if (r11d_223 != 0x00)
							dwLoc017C_1179 = __bswap<word32>(eax_493);
						if ((word32) r10_487 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 r10_520 = (uint64) (r10d_506 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) r10_520;
						Eq_1342 ebp_1090 = r9_88.u2[(uint64) ((word32) r10_520 - 0x04)];
						if (r11d_223 != 0x00)
							ebp_1090 = __bswap<word32>(ebp_1090);
						if ((word32) r10_520 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_563 = (uint64) rcx->u0.t0008.u0;
						word32 edx_569 = (word32) rdx_563;
						if ((word32) rdx_563 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_571 = (uint64) (edx_569 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_571;
						if ((word32) rdx_571 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_582 = (uint64) rcx->u0.t0008.u0;
						word32 edx_588 = (word32) rdx_582;
						if ((word32) rdx_582 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_590 = (uint64) (edx_588 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_590;
						if ((word32) rdx_590 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_601 = (uint64) rcx->u0.t0008.u0;
						word32 edx_607 = (word32) rdx_601;
						if ((word32) rdx_601 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_609 = (uint64) (edx_607 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_609;
						if ((word32) rdx_609 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_620 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 eax_626 = r9_88.u2[(uint64) ((word32) r10_620 - 0x04)];
						word32 r10d_639 = (word32) r10_620;
						Eq_1342 dwLoc0178_1183 = eax_626;
						if (r11d_223 != 0x00)
							dwLoc0178_1183 = __bswap<word32>(eax_626);
						if ((word32) r10_620 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 r10_653 = (uint64) (r10d_639 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) r10_653;
						Eq_1342 esi_1093 = r9_88.u2[(uint64) ((word32) r10_653 - 0x04)];
						if (r11d_223 != 0x00)
							esi_1093 = __bswap<word32>(esi_1093);
						if ((word32) r10_653 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_698 = (uint64) rcx->u0.t0008.u0;
						word32 edx_704 = (word32) rdx_698;
						if ((word32) rdx_698 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_706 = (uint64) (edx_704 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_706;
						if ((word32) rdx_706 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_717 = (uint64) rcx->u0.t0008.u0;
						word32 edx_723 = (word32) rdx_717;
						if ((word32) rdx_717 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_725 = (uint64) (edx_723 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_725;
						if ((word32) rdx_725 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_736 = (uint64) rcx->u0.t0008.u0;
						word32 edx_742 = (word32) rdx_736;
						if ((word32) rdx_736 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_744 = (uint64) (edx_742 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_744;
						if ((word32) rdx_744 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rbx_761 = (uint64) rcx->u0.t0008.u0;
						word32 ebx_796 = (word32) rbx_761;
						Eq_1342 r15d_1102 = r9_88.u2[(uint64) ((word32) rbx_761 - 0x04)];
						if (r11d_223 != 0x00)
							r15d_1102 = __bswap<word32>(r15d_1102);
						if ((word32) rbx_761 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rbx_804 = (uint64) (ebx_796 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rbx_804;
						uint64 r10_812 = (uint64) r9_88.u2[(uint64) ((word32) rbx_804 - 0x04)];
						Eq_1342 r10d_1004 = (word32) r10_812;
						word32 r10_32_32_1600 = SLICE(r10_812, word32, 32);
						if (r11d_223 != 0x00)
							r10d_1004 = __bswap<word32>(r10d_1004);
						if ((word32) rbx_804 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_832 = (uint64) rcx->u0.t0008.u0;
						word32 edx_838 = (word32) rdx_832;
						if ((word32) rdx_832 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_840 = (uint64) (edx_838 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_840;
						if ((word32) rdx_840 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_851 = (uint64) rcx->u0.t0008.u0;
						word32 edx_857 = (word32) rdx_851;
						if ((word32) rdx_851 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_859 = (uint64) (edx_857 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_859;
						if ((word32) rdx_859 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_870 = (uint64) rcx->u0.t0008.u0;
						word32 edx_876 = (word32) rdx_870;
						if ((word32) rdx_870 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						uint64 rdx_878 = (uint64) (edx_876 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_878;
						if ((word32) rdx_878 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_889 = (uint64) rcx->u0.t0008.u0;
						if ((word32) rdx_889 + 0x04 > r8d_204)
							return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
						rcx->u0.t0008.u0 = (int32) ((word32) rdx_889 + 0x04);
						if (r13d_1075 != 0x00)
							r13d_1075.u2 = (word64) r13d_1075 + r10d_233;
						if (r12d_1081 != 0x00)
							r12d_1081.u2 = (word64) r12d_1081 + r10d_322;
						if (r14d_1086 != 0x00)
							r14d_1086.u2 = (word64) r14d_1086 + r10d_413;
						if (ebp_1090 != 0x00)
							ebp_1090.u2 = (word64) ebp_1090 + r10d_506;
						if (esi_1093 != 0x00)
							esi_1093.u2 = (word64) esi_1093 + r10d_639;
						uint64 r10_1012 = SEQ(r10_32_32_1600, r10d_1004);
						if (r10d_1004 != 0x00)
							r10_1012 = (uint64) ((word64) r10d_1004 + ebx_796);
						r8->t0018.u0 = (int32) dwLoc0188_1167;
						r8->qw0028 = 0x00;
						r8->t0020.u0 = (int32) dwLoc0184_1171;
						r8->t0030.u0 = (int32) dwLoc0180_1175;
						r8->t0038.u0 = (int32) dwLoc017C_1179;
						r8->t0040.u0 = (int32) dwLoc0178_1183;
						r8->t001C.u0 = (int32) r13d_1075;
						r8->t0024.u0 = (int32) r12d_1081;
						r8->t0034.u0 = (int32) r14d_1086;
						r8->t003C.u0 = (int32) ebp_1090;
						r8->t0044.u0 = (int32) esi_1093;
						r8->t0048.u0 = (int32) r15d_1102;
						r8->dw004C = (word32) r10_1012;
						return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
					}
				}
			}
			goto l0000000180016CDD;
		}
	}
l0000000180016CDD:
	return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
}

// 0000000180016CF0: Register word32 fn0000000180016CF0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_42759) r8)
// Called from:
//      fn00000001800156B0
word32 fn0000000180016CF0(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_42759 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_11 = g_qw80030008 ^ fp - 424;
	Eq_137 r11_14;
	r11_14.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01B0;
	if (r11_14 != 0x00)
	{
		uint64 r10_28 = (uint64) ((word64) edx + 4);
		Eq_1342 ebx_30;
		ebx_30.u0 = rcx->u0.t000C.u0;
		Eq_1342 r10d_29 = (word32) r10_28;
		if (r10d_29 <= ebx_30)
		{
			Eq_1342 r8d_40 = (&rcx->u0)[1];
			rcx->u0.t0008.u0 = (int32) r10d_29;
			Eq_1342 r9d_45 = r11_14.u2[(uint64) ((word32) r10_28 - 0x04)];
			if (r8d_40 != 0x00)
				r9d_45 = __bswap<word32>(r9d_45);
			Eq_1342 eax_50 = (word32) r10_28 + 0x04;
			if (eax_50 <= ebx_30)
			{
				rcx->u0.t0008.u0 = (int32) eax_50;
				Eq_1342 eax_66 = r11_14.u2[(uint64) ((word64) eax_50 - 4)];
				if (r8d_40 != 0x00)
				{
					Eq_1342 eax_67 = __bswap<word32>(eax_66);
					r9d_45 = eax_67;
				}
				Eq_45462 tLoc0158;
				fn0000000180005050(rcx, r9d_45, &tLoc0158);
				Eq_137 r9_88;
				r9_88.u0 = rcx->u0.t0000.u0;
				int32 edx_123;
				Eq_1342 eax_120;
				for (edx_123 = 0x00; edx_123 < 0x05; ++edx_123)
				{
					if (r9_88 == 0x00)
						goto l00000001800172DE;
					Eq_1342 r8d_110;
					r8d_110.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_110)
						goto l00000001800172DE;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					eax_120 = rcx->u0.t0008.u0 + 0x04;
					if (eax_120 > r8d_110)
						goto l00000001800172DE;
					rcx->u0.t0008.u0 = (int32) eax_120;
				}
				int32 r8d_137 = 0x15;
				if (g_t800306F0.u0 == 779)
					r8d_137 = 0x10;
				int32 edx_1133 = 0x00;
				if (r8d_137 > 0x00)
				{
					do
					{
						if (r9_88 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
							goto l00000001800172DE;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						++edx_1133;
						eax_120.u0 = rcx->u0.t0008.u0;
					} while (edx_1133 < r8d_137);
				}
				if (r9_88 != 0x00)
				{
					Eq_1342 r8d_191;
					r8d_191.u0 = rcx->u0.t000C.u0;
					if ((word64) eax_120 + 4 <= r8d_191)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_197 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 eax_204 = r9_88.u2[(uint64) ((word32) r10_197 - 0x04)];
						word32 r10d_220 = (word32) r10_197;
						Eq_1342 r11d_210 = (&rcx->u0)[1];
						Eq_1342 dwLoc0184_1138 = eax_204;
						if (r11d_210 != 0x00)
							dwLoc0184_1138 = __bswap<word32>(eax_204);
						if ((word32) r10_197 + 0x04 <= r8d_191)
						{
							uint64 r10_228 = (uint64) (r10d_220 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r10_228;
							Eq_1342 eax_237 = r9_88.u2[(uint64) ((word32) r10_228 - 0x04)];
							Eq_1342 dwLoc0188_1141 = eax_237;
							if (r11d_210 != 0x00)
								dwLoc0188_1141 = __bswap<word32>(eax_237);
							if ((word32) r10_228 + 0x04 <= r8d_191)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 rdx_258 = (uint64) rcx->u0.t0008.u0;
								word32 edx_264 = (word32) rdx_258;
								if ((word32) rdx_258 + 0x04 <= r8d_191)
								{
									uint64 rdx_266 = (uint64) (edx_264 + 0x04);
									rcx->u0.t0008.u0 = (int32) (word32) rdx_266;
									if ((word32) rdx_266 + 0x04 <= r8d_191)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r10_277 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_283 = r9_88.u2[(uint64) ((word32) r10_277 - 0x04)];
										word32 r10d_296 = (word32) r10_277;
										Eq_1342 dwLoc0180_1143 = eax_283;
										if (r11d_210 != 0x00)
											dwLoc0180_1143 = __bswap<word32>(eax_283);
										if ((word32) r10_277 + 0x04 <= r8d_191)
										{
											uint64 r10_310 = (uint64) (r10d_296 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) r10_310;
											Eq_1342 r12d_1054 = r9_88.u2[(uint64) ((word32) r10_310 - 0x04)];
											if (r11d_210 != 0x00)
												r12d_1054 = __bswap<word32>(r12d_1054);
											if ((word32) r10_310 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 r15_368 = (uint64) rcx->u0.t0008.u0;
											word32 r15d_374 = (word32) r15_368;
											if ((word32) r15_368 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 r15_376 = (uint64) (r15d_374 + 0x04);
											Eq_1342 r15d_377 = (word32) r15_376;
											rcx->u0.t0008.u0 = (int32) r15d_377;
											Eq_1342 eax_384 = r9_88.u2[(uint64) ((word32) r15_376 - 0x04)];
											Eq_1342 dwLoc017C_1148 = eax_384;
											if (r11d_210 != 0x00)
												dwLoc017C_1148 = __bswap<word32>(eax_384);
											if ((word32) r15_376 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 r10_411 = (uint64) rcx->u0.t0008.u0;
											word32 r10d_445 = (word32) r10_411;
											Eq_1342 r14d_1059 = r9_88.u2[(uint64) ((word32) r10_411 - 0x04)];
											if (r11d_210 != 0x00)
												r14d_1059 = __bswap<word32>(r14d_1059);
											if ((word32) r10_411 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 r10_447 = (uint64) (r10d_445 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) r10_447;
											if ((word32) r10_447 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 r10_459 = (uint64) rcx->u0.t0008.u0;
											Eq_1342 eax_465 = r9_88.u2[(uint64) ((word32) r10_459 - 0x04)];
											word32 r10d_478 = (word32) r10_459;
											Eq_1342 dwLoc0178_1151 = eax_465;
											if (r11d_210 != 0x00)
												dwLoc0178_1151 = __bswap<word32>(eax_465);
											if ((word32) r10_459 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 r10_492 = (uint64) (r10d_478 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) r10_492;
											Eq_1342 ebp_1063 = r9_88.u2[(uint64) ((word32) r10_492 - 0x04)];
											if (r11d_210 != 0x00)
												ebp_1063 = __bswap<word32>(ebp_1063);
											if ((word32) r10_492 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rdx_535 = (uint64) rcx->u0.t0008.u0;
											word32 edx_541 = (word32) rdx_535;
											if ((word32) rdx_535 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 rdx_543 = (uint64) (edx_541 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) rdx_543;
											if ((word32) rdx_543 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rdx_554 = (uint64) rcx->u0.t0008.u0;
											word32 edx_560 = (word32) rdx_554;
											if ((word32) rdx_554 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 rdx_562 = (uint64) (edx_560 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) rdx_562;
											if ((word32) rdx_562 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rdx_573 = (uint64) rcx->u0.t0008.u0;
											word32 edx_579 = (word32) rdx_573;
											if ((word32) rdx_573 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 rdx_581 = (uint64) (edx_579 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) rdx_581;
											if ((word32) rdx_581 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 r10_592 = (uint64) rcx->u0.t0008.u0;
											Eq_1342 eax_598 = r9_88.u2[(uint64) ((word32) r10_592 - 0x04)];
											word32 r10d_611 = (word32) r10_592;
											Eq_1342 dwLoc0174_1155 = eax_598;
											if (r11d_210 != 0x00)
												dwLoc0174_1155 = __bswap<word32>(eax_598);
											if ((word32) r10_592 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 r10_625 = (uint64) (r10d_611 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) r10_625;
											Eq_1342 esi_1066 = r9_88.u2[(uint64) ((word32) r10_625 - 0x04)];
											if (r11d_210 != 0x00)
												esi_1066 = __bswap<word32>(esi_1066);
											if ((word32) r10_625 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rdx_670 = (uint64) rcx->u0.t0008.u0;
											word32 edx_676 = (word32) rdx_670;
											if ((word32) rdx_670 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 rdx_678 = (uint64) (edx_676 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) rdx_678;
											if ((word32) rdx_678 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rdx_689 = (uint64) rcx->u0.t0008.u0;
											word32 edx_695 = (word32) rdx_689;
											if ((word32) rdx_689 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 rdx_697 = (uint64) (edx_695 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) rdx_697;
											if ((word32) rdx_697 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rdx_708 = (uint64) rcx->u0.t0008.u0;
											word32 edx_714 = (word32) rdx_708;
											if ((word32) rdx_708 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 rdx_716 = (uint64) (edx_714 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) rdx_716;
											if ((word32) rdx_716 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rbx_733 = (uint64) rcx->u0.t0008.u0;
											word32 ebx_768 = (word32) rbx_733;
											Eq_1342 r13d_1075 = r9_88.u2[(uint64) ((word32) rbx_733 - 0x04)];
											if (r11d_210 != 0x00)
												r13d_1075 = __bswap<word32>(r13d_1075);
											if ((word32) rbx_733 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 rbx_776 = (uint64) (ebx_768 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) rbx_776;
											uint64 r10_784 = (uint64) r9_88.u2[(uint64) ((word32) rbx_776 - 0x04)];
											Eq_1342 r10d_790 = (word32) r10_784;
											word32 r10_32_32_1566 = SLICE(r10_784, word32, 32);
											if (r11d_210 != 0x00)
												r10d_790 = __bswap<word32>(r10d_790);
											if ((word32) rbx_776 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rdx_804 = (uint64) rcx->u0.t0008.u0;
											word32 edx_810 = (word32) rdx_804;
											if ((word32) rdx_804 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 rdx_812 = (uint64) (edx_810 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) rdx_812;
											if ((word32) rdx_812 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rdx_823 = (uint64) rcx->u0.t0008.u0;
											word32 edx_829 = (word32) rdx_823;
											if ((word32) rdx_823 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 rdx_831 = (uint64) (edx_829 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) rdx_831;
											if ((word32) rdx_831 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rdx_842 = (uint64) rcx->u0.t0008.u0;
											word32 edx_848 = (word32) rdx_842;
											if ((word32) rdx_842 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											uint64 rdx_850 = (uint64) (edx_848 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) rdx_850;
											if ((word32) rdx_850 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rdx_861 = (uint64) rcx->u0.t0008.u0;
											if ((word32) rdx_861 + 0x04 > r8d_191)
												return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
											rcx->u0.t0008.u0 = (int32) ((word32) rdx_861 + 0x04);
											Eq_1342 eax_880 = dwLoc0188_1141;
											if (dwLoc0188_1141 != 0x00)
												eax_880.u2 = (word64) dwLoc0188_1141 + r10d_220;
											if (r12d_1054 != 0x00)
												r12d_1054.u2 = (word64) r12d_1054 + r10d_296;
											if (r14d_1059 != 0x00)
												r14d_1059 += r15d_377;
											if (ebp_1063 != 0x00)
												ebp_1063.u2 = (word64) ebp_1063 + r10d_478;
											if (esi_1066 != 0x00)
												esi_1066.u2 = (word64) esi_1066 + r10d_611;
											uint64 r10_1695 = SEQ(r10_32_32_1566, r10d_790);
											if (r10d_790 != 0x00)
												r10_1695 = (uint64) ((word64) r10d_790 + ebx_768);
											r8->t001C.u0 = (int32) eax_880;
											r8->qw0028 = 0x00;
											r8->t0020.u0 = (int32) dwLoc0180_1143;
											r8->t0030.u0 = (int32) dwLoc017C_1148;
											r8->t0038.u0 = (int32) dwLoc0178_1151;
											r8->t0040.u0 = (int32) dwLoc0174_1155;
											r8->t0018.u0 = (int32) dwLoc0184_1138;
											r8->t0024.u0 = (int32) r12d_1054;
											r8->t0034.u0 = (int32) r14d_1059;
											r8->t003C.u0 = (int32) ebp_1063;
											r8->t0044.u0 = (int32) esi_1066;
											r8->t0048.u0 = (int32) r13d_1075;
											r8->dw004C = (word32) r10_1695;
											return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
l00000001800172DE:
	return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
}

// 00000001800172F0: Register word32 fn00000001800172F0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_42801) r8)
// Called from:
//      fn00000001800156B0
word32 fn00000001800172F0(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_42801 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_11 = g_qw80030008 ^ fp - 0x01C8;
	Eq_137 r11_14;
	r11_14.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01D0;
	if (r11_14 != 0x00)
	{
		uint64 r10_28 = (uint64) ((word64) edx + 4);
		Eq_1342 ebx_30;
		ebx_30.u0 = rcx->u0.t000C.u0;
		Eq_1342 r10d_29 = (word32) r10_28;
		if (r10d_29 <= ebx_30)
		{
			Eq_1342 r8d_40 = (&rcx->u0)[1];
			rcx->u0.t0008.u0 = (int32) r10d_29;
			Eq_1342 r9d_45 = r11_14.u2[(uint64) ((word32) r10_28 - 0x04)];
			if (r8d_40 != 0x00)
				r9d_45 = __bswap<word32>(r9d_45);
			Eq_1342 eax_50 = (word32) r10_28 + 0x04;
			if (eax_50 <= ebx_30)
			{
				rcx->u0.t0008.u0 = (int32) eax_50;
				Eq_1342 eax_66 = r11_14.u2[(uint64) ((word64) eax_50 - 4)];
				if (r8d_40 != 0x00)
				{
					Eq_1342 eax_67 = __bswap<word32>(eax_66);
					r9d_45 = eax_67;
				}
				Eq_46383 tLoc0158;
				fn0000000180005050(rcx, r9d_45, &tLoc0158);
				Eq_137 r10_88;
				r10_88.u0 = rcx->u0.t0000.u0;
				int32 edx_131;
				for (edx_131 = 0x00; edx_131 < 0x05; ++edx_131)
				{
					if (r10_88 == 0x00)
						goto l0000000180017A9F;
					Eq_1342 r8d_112;
					r8d_112.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_112)
						goto l0000000180017A9F;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 eax_122 = rcx->u0.t0008.u0 + 0x04;
					if (eax_122 > r8d_112)
						goto l0000000180017A9F;
					rcx->u0.t0008.u0 = (int32) eax_122;
				}
				int32 edx_1468;
				uint64 rdi_168;
				word32 edi_186;
				for (edx_1468 = 0x00; edx_1468 < 0x09; ++edx_1468)
				{
					if (r10_88 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
						goto l0000000180017A9B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					rdi_168 = (uint64) rcx->u0.t0008.u0;
					edi_186 = (word32) rdi_168;
				}
				if (r10_88 != 0x00)
				{
					Eq_1342 r8d_181;
					r8d_181.u0 = rcx->u0.t000C.u0;
					if ((word32) rdi_168 + 0x04 <= r8d_181)
					{
						uint64 rdi_188 = (uint64) (edi_186 + 0x04);
						Eq_1342 ebx_198 = (&rcx->u0)[1];
						Eq_1342 edi_189 = (word32) rdi_188;
						rcx->u0.t0008.u0 = (int32) edi_189;
						Eq_1342 eax_195 = r10_88.u2[(uint64) ((word32) rdi_188 - 0x04)];
						Eq_1342 dwLoc0190_1478 = eax_195;
						if (ebx_198 != 0x00)
							dwLoc0190_1478 = __bswap<word32>(eax_195);
						if ((word32) rdi_188 + 0x04 <= r8d_181)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r15_231 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_237 = r10_88.u2[(uint64) ((word32) r15_231 - 0x04)];
							word32 r15d_253 = (word32) r15_231;
							Eq_1342 dwLoc01A8_1481 = eax_237;
							if (ebx_198 != 0x00)
								dwLoc01A8_1481 = __bswap<word32>(eax_237);
							if ((word32) r15_231 + 0x04 <= r8d_181)
							{
								uint64 r15_255 = (uint64) (r15d_253 + 0x04);
								Eq_1342 r15d_256 = (word32) r15_255;
								rcx->u0.t0008.u0 = (int32) r15d_256;
								Eq_1342 eax_264 = r10_88.u2[(uint64) ((word32) r15_255 - 0x04)];
								Eq_1342 dwLoc018C_1483 = eax_264;
								if (ebx_198 != 0x00)
									dwLoc018C_1483 = __bswap<word32>(eax_264);
								if ((word32) r15_255 + 0x04 <= r8d_181)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint64 r9_286 = (uint64) rcx->u0.t0008.u0;
									Eq_1342 eax_292 = r10_88.u2[(uint64) ((word32) r9_286 - 0x04)];
									Eq_1342 dwLoc01A4_1485 = eax_292;
									uint64 r11_2305 = 0x00;
									if (ebx_198 != 0x00)
									{
										dwLoc01A4_1485 = __bswap<word32>(eax_292);
										r11_2305 = 0x00;
									}
									do
									{
										word32 r11d_321 = (word32) r11_2305;
										if ((word32) r9_286 + 0x04 > r8d_181)
											goto l0000000180017A97;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										r9_286 = (uint64) (rcx->u0.t0008.u0 + 0x04);
										Eq_1342 r9d_318 = (word32) r9_286;
										if (r9d_318 > r8d_181)
											goto l0000000180017A97;
										rcx->u0.t0008.u0 = (int32) r9d_318;
										r11_2305 = (uint64) (r11d_321 + 0x01);
									} while ((word32) r11_2305 < 0x04);
									if ((word32) r9_286 + 0x04 <= r8d_181)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r9_336 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_342 = r10_88.u2[(uint64) ((word32) r9_336 - 0x04)];
										word32 r9d_355 = (word32) r9_336;
										Eq_1342 dwLoc0188_1487 = eax_342;
										if (ebx_198 != 0x00)
											dwLoc0188_1487 = __bswap<word32>(eax_342);
										if ((word32) r9_336 + 0x04 <= r8d_181)
										{
											uint64 r9_363 = (uint64) (r9d_355 + 0x04);
											rcx->u0.t0008.u0 = (int32) (word32) r9_363;
											Eq_1342 eax_372 = r10_88.u2[(uint64) ((word32) r9_363 - 0x04)];
											Eq_1342 dwLoc01A0_1490 = eax_372;
											if (ebx_198 != 0x00)
												dwLoc01A0_1490 = __bswap<word32>(eax_372);
											if ((word32) r9_363 + 0x04 <= r8d_181)
											{
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
												uint64 r9_393 = (uint64) rcx->u0.t0008.u0;
												Eq_1342 eax_399 = r10_88.u2[(uint64) ((word32) r9_393 - 0x04)];
												word32 r9d_412 = (word32) r9_393;
												Eq_1342 dwLoc0184_1492 = eax_399;
												if (ebx_198 != 0x00)
													dwLoc0184_1492 = __bswap<word32>(eax_399);
												if ((word32) r9_393 + 0x04 <= r8d_181)
												{
													uint64 r9_420 = (uint64) (r9d_412 + 0x04);
													rcx->u0.t0008.u0 = (int32) (word32) r9_420;
													Eq_1342 eax_429 = r10_88.u2[(uint64) ((word32) r9_420 - 0x04)];
													Eq_1342 dwLoc019C_1495 = eax_429;
													if (ebx_198 != 0x00)
														dwLoc019C_1495 = __bswap<word32>(eax_429);
													if ((word32) r9_420 + 0x04 <= r8d_181)
													{
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														uint64 rdx_450 = (uint64) rcx->u0.t0008.u0;
														word32 edx_456 = (word32) rdx_450;
														if ((word32) rdx_450 + 0x04 <= r8d_181)
														{
															uint64 rdx_458 = (uint64) (edx_456 + 0x04);
															rcx->u0.t0008.u0 = (int32) (word32) rdx_458;
															if ((word32) rdx_458 + 0x04 <= r8d_181)
															{
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 r9_469 = (uint64) rcx->u0.t0008.u0;
																Eq_1342 eax_475 = r10_88.u2[(uint64) ((word32) r9_469 - 0x04)];
																word32 r9d_488 = (word32) r9_469;
																Eq_1342 dwLoc0180_1497 = eax_475;
																if (ebx_198 != 0x00)
																	dwLoc0180_1497 = __bswap<word32>(eax_475);
																if ((word32) r9_469 + 0x04 <= r8d_181)
																{
																	uint64 r9_496 = (uint64) (r9d_488 + 0x04);
																	rcx->u0.t0008.u0 = (int32) (word32) r9_496;
																	Eq_1342 eax_505 = r10_88.u2[(uint64) ((word32) r9_496 - 0x04)];
																	Eq_1342 dwLoc0198_1500 = eax_505;
																	if (ebx_198 != 0x00)
																		dwLoc0198_1500 = __bswap<word32>(eax_505);
																	if ((word32) r9_496 + 0x04 <= r8d_181)
																	{
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 r9_526 = (uint64) rcx->u0.t0008.u0;
																		Eq_1342 eax_532 = r10_88.u2[(uint64) ((word32) r9_526 - 0x04)];
																		word32 r9d_545 = (word32) r9_526;
																		Eq_1342 dwLoc017C_1502 = eax_532;
																		if (ebx_198 != 0x00)
																			dwLoc017C_1502 = __bswap<word32>(eax_532);
																		if ((word32) r9_526 + 0x04 <= r8d_181)
																		{
																			uint64 r9_553 = (uint64) (r9d_545 + 0x04);
																			rcx->u0.t0008.u0 = (int32) (word32) r9_553;
																			Eq_1342 eax_562 = r10_88.u2[(uint64) ((word32) r9_553 - 0x04)];
																			Eq_1342 dwLoc0194_1505 = eax_562;
																			if (ebx_198 != 0x00)
																				dwLoc0194_1505 = __bswap<word32>(eax_562);
																			if ((word32) r9_553 + 0x04 <= r8d_181)
																			{
																				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																				uint64 r9_583 = (uint64) rcx->u0.t0008.u0;
																				Eq_1342 eax_589 = r10_88.u2[(uint64) ((word32) r9_583 - 0x04)];
																				word32 r9d_602 = (word32) r9_583;
																				Eq_1342 dwLoc0178_1507 = eax_589;
																				if (ebx_198 != 0x00)
																					dwLoc0178_1507 = __bswap<word32>(eax_589);
																				if ((word32) r9_583 + 0x04 <= r8d_181)
																				{
																					uint64 r9_616 = (uint64) (r9d_602 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) r9_616;
																					Eq_1342 r13d_1221 = r10_88.u2[(uint64) ((word32) r9_616 - 0x04)];
																					if (ebx_198 != 0x00)
																						r13d_1221 = __bswap<word32>(r13d_1221);
																					if ((word32) r9_616 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_663 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_669 = (word32) rdx_663;
																					if ((word32) rdx_663 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_671 = (uint64) (edx_669 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_671;
																					if ((word32) rdx_671 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_682 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_688 = (word32) rdx_682;
																					if ((word32) rdx_682 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_690 = (uint64) (edx_688 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_690;
																					if ((word32) rdx_690 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_701 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_707 = (word32) rdx_701;
																					if ((word32) rdx_701 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_709 = (uint64) (edx_707 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_709;
																					if ((word32) rdx_709 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 r9_720 = (uint64) rcx->u0.t0008.u0;
																					Eq_1342 eax_726 = r10_88.u2[(uint64) ((word32) r9_720 - 0x04)];
																					word32 r9d_739 = (word32) r9_720;
																					Eq_1342 dwLoc0174_1511 = eax_726;
																					if (ebx_198 != 0x00)
																						dwLoc0174_1511 = __bswap<word32>(eax_726);
																					if ((word32) r9_720 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 r9_753 = (uint64) (r9d_739 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) r9_753;
																					Eq_1342 ebp_1241 = r10_88.u2[(uint64) ((word32) r9_753 - 0x04)];
																					if (ebx_198 != 0x00)
																						ebp_1241 = __bswap<word32>(ebp_1241);
																					if ((word32) r9_753 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_802 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_808 = (word32) rdx_802;
																					if ((word32) rdx_802 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_810 = (uint64) (edx_808 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_810;
																					if ((word32) rdx_810 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_821 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_827 = (word32) rdx_821;
																					if ((word32) rdx_821 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_829 = (uint64) (edx_827 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_829;
																					if ((word32) rdx_829 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_840 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_846 = (word32) rdx_840;
																					if ((word32) rdx_840 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_848 = (uint64) (edx_846 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_848;
																					if ((word32) rdx_848 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_859 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_865 = (word32) rdx_859;
																					if ((word32) rdx_859 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_867 = (uint64) (edx_865 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_867;
																					if ((word32) rdx_867 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_878 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_884 = (word32) rdx_878;
																					if ((word32) rdx_878 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_886 = (uint64) (edx_884 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_886;
																					if ((word32) rdx_886 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_897 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_903 = (word32) rdx_897;
																					if ((word32) rdx_897 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_905 = (uint64) (edx_903 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_905;
																					if ((word32) rdx_905 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 r9_922 = (uint64) rcx->u0.t0008.u0;
																					word32 r9d_983 = (word32) r9_922;
																					Eq_1342 r14d_1410 = r10_88.u2[(uint64) ((word32) r9_922 - 0x04)];
																					if (ebx_198 != 0x00)
																						r14d_1410 = __bswap<word32>(r14d_1410);
																					if ((word32) r9_922 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 r9_991 = (uint64) (r9d_983 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) r9_991;
																					uint64 r11_999 = (uint64) r10_88.u2[(uint64) ((word32) r9_991 - 0x04)];
																					Eq_1342 r11d_1005 = (word32) r11_999;
																					word32 r11_32_32_2217 = SLICE(r11_999, word32, 32);
																					if (ebx_198 != 0x00)
																						r11d_1005 = __bswap<word32>(r11d_1005);
																					if ((word32) r9_991 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_1019 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_1025 = (word32) rdx_1019;
																					if ((word32) rdx_1019 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_1027 = (uint64) (edx_1025 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_1027;
																					if ((word32) rdx_1027 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_1038 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_1044 = (word32) rdx_1038;
																					if ((word32) rdx_1038 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_1046 = (uint64) (edx_1044 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_1046;
																					if ((word32) rdx_1046 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_1057 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_1063 = (word32) rdx_1057;
																					if ((word32) rdx_1057 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_1065 = (uint64) (edx_1063 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_1065;
																					if ((word32) rdx_1065 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rdx_1076 = (uint64) rcx->u0.t0008.u0;
																					word32 edx_1082 = (word32) rdx_1076;
																					if ((word32) rdx_1076 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					uint64 rdx_1084 = (uint64) (edx_1082 + 0x04);
																					rcx->u0.t0008.u0 = (int32) (word32) rdx_1084;
																					if ((word32) rdx_1084 + 0x04 > r8d_181)
																						return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					Eq_1342 r9d_1104 = dwLoc01A8_1481;
																					if (dwLoc01A8_1481 != 0x00)
																						r9d_1104 = dwLoc01A8_1481 + edi_189;
																					uint64 r10_1133 = (uint64) dwLoc01A4_1485;
																					word32 r10d_1134 = (word32) r10_1133;
																					if (r10d_1134 != 0x00)
																						r10_1133 = (uint64) ((word64) r15d_256 + r10d_1134);
																					word32 r10d_1383 = (word32) r10_1133;
																					Eq_1342 r8d_1163 = dwLoc01A0_1490;
																					if (dwLoc01A0_1490 != 0x00)
																						r8d_1163.u2 = (word64) dwLoc01A0_1490 + r9d_355;
																					Eq_1342 edx_1176 = dwLoc019C_1495;
																					if (dwLoc019C_1495 != 0x00)
																						edx_1176.u2 = (word64) dwLoc019C_1495 + r9d_412;
																					Eq_1342 ecx_1189 = dwLoc0198_1500;
																					if (dwLoc0198_1500 != 0x00)
																						ecx_1189.u2 = (word64) dwLoc0198_1500 + r9d_488;
																					Eq_1342 eax_1202 = dwLoc0194_1505;
																					if (dwLoc0194_1505 != 0x00)
																						eax_1202.u2 = (word64) dwLoc0194_1505 + r9d_545;
																					if (r13d_1221 != 0x00)
																						r13d_1221.u2 = (word64) r13d_1221 + r9d_602;
																					if (ebp_1241 != 0x00)
																						ebp_1241.u2 = (word64) ebp_1241 + r9d_739;
																					uint64 r11_1276 = SEQ(r11_32_32_2217, r11d_1005);
																					if (r11d_1005 != 0x00)
																						r11_1276 = (uint64) ((word64) r11d_1005 + r9d_983);
																					r8->t0034.u0 = (int32) eax_1202;
																					r8->t0004.u0 = (int32) r9d_1104;
																					r8->t0038.u0 = (int32) dwLoc0178_1507;
																					r8->t0008.u0 = (int32) dwLoc018C_1483;
																					r8->t0014.u0 = (int32) r8d_1163;
																					r8->t001C.u0 = (int32) edx_1176;
																					r8->t002C.u0 = (int32) ecx_1189;
																					r8->t0040.u0 = (int32) dwLoc0174_1511;
																					r8->t0000.u0 = (int32) dwLoc0190_1478;
																					r8->dw000C = r10d_1383;
																					r8->t0010.u0 = (int32) dwLoc0188_1487;
																					r8->t0018.u0 = (int32) dwLoc0184_1492;
																					r8->t0028.u0 = (int32) dwLoc0180_1497;
																					r8->t0030.u0 = (int32) dwLoc017C_1502;
																					r8->t003C.u0 = (int32) r13d_1221;
																					r8->t0044.u0 = (int32) ebp_1241;
																					r8->t0048.u0 = (int32) r14d_1410;
																					r8->dw004C = (word32) r11_1276;
																					return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
l0000000180017A97:
							return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
						}
					}
				}
l0000000180017A9B:
				return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
			}
		}
	}
l0000000180017A9F:
	return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
}

// 0000000180017AB0: Register word32 fn0000000180017AB0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_43277) r8)
// Called from:
//      fn00000001800156B0
word32 fn0000000180017AB0(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_43277 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_11 = g_qw80030008 ^ fp - 440;
	Eq_137 r11_14;
	r11_14.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01C0;
	if (r11_14 != 0x00)
	{
		uint64 r10_28 = (uint64) ((word64) edx + 4);
		Eq_1342 ebx_30;
		ebx_30.u0 = rcx->u0.t000C.u0;
		Eq_1342 r10d_29 = (word32) r10_28;
		if (r10d_29 <= ebx_30)
		{
			Eq_1342 r8d_40 = (&rcx->u0)[1];
			rcx->u0.t0008.u0 = (int32) r10d_29;
			Eq_1342 r9d_45 = r11_14.u2[(uint64) ((word32) r10_28 - 0x04)];
			if (r8d_40 != 0x00)
				r9d_45 = __bswap<word32>(r9d_45);
			Eq_1342 eax_50 = (word32) r10_28 + 0x04;
			if (eax_50 <= ebx_30)
			{
				rcx->u0.t0008.u0 = (int32) eax_50;
				Eq_1342 eax_66 = r11_14.u2[(uint64) ((word64) eax_50 - 4)];
				if (r8d_40 != 0x00)
				{
					Eq_1342 eax_67 = __bswap<word32>(eax_66);
					r9d_45 = eax_67;
				}
				Eq_47615 tLoc0158;
				fn0000000180005050(rcx, r9d_45, &tLoc0158);
				Eq_137 r10_88;
				r10_88.u0 = rcx->u0.t0000.u0;
				int32 edx_125;
				for (edx_125 = 0x00; edx_125 < 0x05; ++edx_125)
				{
					if (r10_88 == 0x00)
						goto l000000018001818C;
					Eq_1342 r8d_112;
					r8d_112.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_112)
						goto l000000018001818C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 eax_122 = rcx->u0.t0008.u0 + 0x04;
					if (eax_122 > r8d_112)
						goto l000000018001818C;
					rcx->u0.t0008.u0 = (int32) eax_122;
				}
				uint64 r9_151 = 0x00;
				uint64 rbx_153;
				word32 ebx_171;
				do
				{
					word32 r9d_149 = (word32) r9_151;
					if (r10_88 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
						goto l000000018001818C;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					rbx_153 = (uint64) rcx->u0.t0008.u0;
					r9_151 = (uint64) (r9d_149 + 0x01);
					ebx_171 = (word32) rbx_153;
				} while ((word32) r9_151 < 0x15);
				if (r10_88 != 0x00)
				{
					Eq_1342 r8d_166;
					r8d_166.u0 = rcx->u0.t000C.u0;
					if ((word32) rbx_153 + 0x04 <= r8d_166)
					{
						uint64 rbx_173 = (uint64) (ebx_171 + 0x04);
						Eq_1342 r11d_184 = (&rcx->u0)[1];
						Eq_1342 ebx_174 = (word32) rbx_173;
						rcx->u0.t0008.u0 = (int32) ebx_174;
						Eq_1342 eax_180 = r10_88.u2[(uint64) ((word32) rbx_173 - 0x04)];
						Eq_1342 dwLoc0184_1284 = eax_180;
						if (r11d_184 != 0x00)
							dwLoc0184_1284 = __bswap<word32>(eax_180);
						if ((word32) rbx_173 + 0x04 <= r8d_166)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rbp_217 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_223 = r10_88.u2[(uint64) ((word32) rbp_217 - 0x04)];
							word32 ebp_239 = (word32) rbp_217;
							Eq_1342 dwLoc0198_1287 = eax_223;
							if (r11d_184 != 0x00)
								dwLoc0198_1287 = __bswap<word32>(eax_223);
							if ((word32) rbp_217 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rbp_241 = (uint64) (ebp_239 + 0x04);
							Eq_1342 ebp_242 = (word32) rbp_241;
							rcx->u0.t0008.u0 = (int32) ebp_242;
							Eq_1342 eax_250 = r10_88.u2[(uint64) ((word32) rbp_241 - 0x04)];
							Eq_1342 dwLoc0180_1289 = eax_250;
							if (r11d_184 != 0x00)
								dwLoc0180_1289 = __bswap<word32>(eax_250);
							if ((word32) rbp_241 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_272 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_278 = r10_88.u2[(uint64) ((word32) r9_272 - 0x04)];
							word32 r9d_295 = (word32) r9_272;
							Eq_1342 dwLoc0194_1291 = eax_278;
							if (r11d_184 != 0x00)
								dwLoc0194_1291 = __bswap<word32>(eax_278);
							if ((word32) r9_272 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 r9_297 = (uint64) (r9d_295 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r9_297;
							if ((word32) r9_297 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_309 = (uint64) rcx->u0.t0008.u0;
							word32 edx_315 = (word32) rdx_309;
							if ((word32) rdx_309 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_317 = (uint64) (edx_315 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_317;
							if ((word32) rdx_317 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_328 = (uint64) rcx->u0.t0008.u0;
							word32 r9d_334 = (word32) r9_328;
							if ((word32) r9_328 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 r9_336 = (uint64) (r9d_334 + 0x04);
							Eq_1342 r9d_337 = (word32) r9_336;
							rcx->u0.t0008.u0 = (int32) r9d_337;
							Eq_1342 eax_346 = r10_88.u2[(uint64) ((word32) r9_336 - 0x04)];
							Eq_1342 dwLoc017C_1294 = eax_346;
							if (r11d_184 != 0x00)
								dwLoc017C_1294 = __bswap<word32>(eax_346);
							if ((word32) r9_336 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r13_385 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_391 = r10_88.u2[(uint64) ((word32) r13_385 - 0x04)];
							word32 r13d_407 = (word32) r13_385;
							Eq_1342 dwLoc0190_1297 = eax_391;
							if (r11d_184 != 0x00)
								dwLoc0190_1297 = __bswap<word32>(eax_391);
							if ((word32) r13_385 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 r13_409 = (uint64) (r13d_407 + 0x04);
							Eq_1342 r13d_410 = (word32) r13_409;
							rcx->u0.t0008.u0 = (int32) r13d_410;
							Eq_1342 eax_418 = r10_88.u2[(uint64) ((word32) r13_409 - 0x04)];
							Eq_1342 dwLoc0178_1299 = eax_418;
							if (r11d_184 != 0x00)
								dwLoc0178_1299 = __bswap<word32>(eax_418);
							if ((word32) r13_409 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_440 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_446 = r10_88.u2[(uint64) ((word32) r9_440 - 0x04)];
							word32 r9d_463 = (word32) r9_440;
							Eq_1342 dwLoc018C_1301 = eax_446;
							if (r11d_184 != 0x00)
								dwLoc018C_1301 = __bswap<word32>(eax_446);
							if ((word32) r9_440 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 r9_465 = (uint64) (r9d_463 + 0x04);
							Eq_1342 r9d_466 = (word32) r9_465;
							rcx->u0.t0008.u0 = (int32) r9d_466;
							Eq_1342 eax_476 = r10_88.u2[(uint64) ((word32) r9_465 - 0x04)];
							Eq_1342 dwLoc0174_1304 = eax_476;
							if (r11d_184 != 0x00)
								dwLoc0174_1304 = __bswap<word32>(eax_476);
							if ((word32) r9_465 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_497 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_503 = r10_88.u2[(uint64) ((word32) r9_497 - 0x04)];
							word32 r9d_520 = (word32) r9_497;
							Eq_1342 dwLoc0188_1306 = eax_503;
							if (r11d_184 != 0x00)
								dwLoc0188_1306 = __bswap<word32>(eax_503);
							if ((word32) r9_497 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 r9_522 = (uint64) (r9d_520 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r9_522;
							if ((word32) r9_522 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_534 = (uint64) rcx->u0.t0008.u0;
							word32 edx_540 = (word32) rdx_534;
							if ((word32) rdx_534 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_542 = (uint64) (edx_540 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_542;
							if ((word32) rdx_542 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_553 = (uint64) rcx->u0.t0008.u0;
							word32 edx_559 = (word32) rdx_553;
							if ((word32) rdx_553 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_561 = (uint64) (edx_559 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_561;
							if ((word32) rdx_561 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_572 = (uint64) rcx->u0.t0008.u0;
							word32 r9d_578 = (word32) r9_572;
							if ((word32) r9_572 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 r9_580 = (uint64) (r9d_578 + 0x04);
							Eq_1342 r9d_581 = (word32) r9_580;
							rcx->u0.t0008.u0 = (int32) r9d_581;
							Eq_1342 eax_590 = r10_88.u2[(uint64) ((word32) r9_580 - 0x04)];
							Eq_1342 dwLoc0170_1309 = eax_590;
							if (r11d_184 != 0x00)
								dwLoc0170_1309 = __bswap<word32>(eax_590);
							if ((word32) r9_580 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_617 = (uint64) rcx->u0.t0008.u0;
							word32 r9d_655 = (word32) r9_617;
							Eq_1342 r15d_1087 = r10_88.u2[(uint64) ((word32) r9_617 - 0x04)];
							if (r11d_184 != 0x00)
								r15d_1087 = __bswap<word32>(r15d_1087);
							if ((word32) r9_617 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 r9_657 = (uint64) (r9d_655 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r9_657;
							if ((word32) r9_657 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_669 = (uint64) rcx->u0.t0008.u0;
							word32 edx_675 = (word32) rdx_669;
							if ((word32) rdx_669 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_677 = (uint64) (edx_675 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_677;
							if ((word32) rdx_677 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_688 = (uint64) rcx->u0.t0008.u0;
							word32 edx_694 = (word32) rdx_688;
							if ((word32) rdx_688 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_696 = (uint64) (edx_694 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_696;
							if ((word32) rdx_696 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_707 = (uint64) rcx->u0.t0008.u0;
							word32 edx_713 = (word32) rdx_707;
							if ((word32) rdx_707 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_715 = (uint64) (edx_713 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_715;
							if ((word32) rdx_715 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_726 = (uint64) rcx->u0.t0008.u0;
							word32 edx_732 = (word32) rdx_726;
							if ((word32) rdx_726 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_734 = (uint64) (edx_732 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_734;
							if ((word32) rdx_734 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_745 = (uint64) rcx->u0.t0008.u0;
							word32 edx_751 = (word32) rdx_745;
							if ((word32) rdx_745 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_753 = (uint64) (edx_751 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_753;
							if ((word32) rdx_753 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r14_789 = (uint64) rcx->u0.t0008.u0;
							word32 r14d_801 = (word32) r14_789;
							if ((word32) r14_789 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 r14_803 = (uint64) (r14d_801 + 0x04);
							Eq_1342 r14d_822 = (word32) r14_803;
							rcx->u0.t0008.u0 = (int32) r14d_822;
							Eq_1342 r12d_1216 = r10_88.u2[(uint64) ((word32) r14_803 - 0x04)];
							if (r11d_184 != 0x00)
								r12d_1216 = __bswap<word32>(r12d_1216);
							if ((word32) r14_803 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdi_874 = (uint64) rcx->u0.t0008.u0;
							uint64 r9_879 = (uint64) r10_88.u2[(uint64) ((word32) rdi_874 - 0x04)];
							word32 edi_894 = (word32) rdi_874;
							Eq_1342 r9d_1104 = (word32) r9_879;
							word32 r9_32_32_1876 = SLICE(r9_879, word32, 32);
							if (r11d_184 != 0x00)
								r9d_1104 = __bswap<word32>(r9d_1104);
							if ((word32) rdi_874 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdi_896 = (uint64) (edi_894 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdi_896;
							if ((word32) rdi_896 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_908 = (uint64) rcx->u0.t0008.u0;
							word32 edx_914 = (word32) rdx_908;
							if ((word32) rdx_908 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_916 = (uint64) (edx_914 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_916;
							if ((word32) rdx_916 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_927 = (uint64) rcx->u0.t0008.u0;
							word32 edx_933 = (word32) rdx_927;
							if ((word32) rdx_927 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_935 = (uint64) (edx_933 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_935;
							if ((word32) rdx_935 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_946 = (uint64) rcx->u0.t0008.u0;
							word32 edx_952 = (word32) rdx_946;
							if ((word32) rdx_946 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							uint64 rdx_954 = (uint64) (edx_952 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_954;
							if ((word32) rdx_954 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_965 = (uint64) rcx->u0.t0008.u0;
							if ((word32) rdx_965 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
							rcx->u0.t0008.u0 = (int32) ((word32) rdx_965 + 0x04);
							Eq_1342 r8d_1004 = dwLoc0198_1287;
							if (dwLoc0198_1287 != 0x00)
								r8d_1004 = dwLoc0198_1287 + ebx_174;
							uint64 r10_1009 = (uint64) dwLoc0194_1291;
							word32 r10d_1010 = (word32) r10_1009;
							if (r10d_1010 != 0x00)
								r10_1009 = (uint64) ((word64) ebp_242 + r10d_1010);
							word32 r10d_1199 = (word32) r10_1009;
							Eq_1342 edx_1035 = dwLoc0190_1297;
							if (dwLoc0190_1297 != 0x00)
								edx_1035 = dwLoc0190_1297 + r9d_337;
							Eq_1342 ecx_1048 = dwLoc018C_1301;
							if (dwLoc018C_1301 != 0x00)
								ecx_1048 = dwLoc018C_1301 + r13d_410;
							Eq_1342 eax_1071 = dwLoc0188_1306;
							if (dwLoc0188_1306 != 0x00)
								eax_1071 = dwLoc0188_1306 + r9d_466;
							if (r15d_1087 != 0x00)
								r15d_1087 += r9d_581;
							uint64 r9_1117 = SEQ(r9_32_32_1876, r9d_1104);
							if (r9d_1104 != 0x00)
								r9_1117 = (uint64) (r9d_1104 + r14d_822);
							r8->t0014.u0 = (int32) r8d_1004;
							r8->t003C.u0 = (int32) eax_1071;
							r8->t0018.u0 = (int32) dwLoc0180_1289;
							r8->t002C.u0 = (int32) edx_1035;
							r8->t0034.u0 = (int32) ecx_1048;
							r8->t0040.u0 = (int32) dwLoc0170_1309;
							r8->t0028.u0 = (int32) dwLoc017C_1294;
							r8->t0010.u0 = (int32) dwLoc0184_1284;
							r8->dw001C = r10d_1199;
							r8->t0030.u0 = (int32) dwLoc0178_1299;
							r8->t0038.u0 = (int32) dwLoc0174_1304;
							r8->t0044.u0 = (int32) r15d_1087;
							r8->t0048.u0 = (int32) r12d_1216;
							r8->dw004C = (word32) r9_1117;
							return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
						}
					}
				}
			}
		}
	}
l000000018001818C:
	return (word32) fn0000000180023580(rax_11 ^ fp - 440, qwLoc01C0);
}

// 0000000180018190: Register word32 fn0000000180018190(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_43289) r8)
// Called from:
//      fn00000001800156B0
word32 fn0000000180018190(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_43289 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_6 = g_qw80030008 ^ fp - 440;
	word64 qwLoc01C0;
	if (edx == 0x00)
		return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
	Eq_137 r10_16;
	r10_16.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	if (r10_16 != 0x00)
	{
		uint64 r8_29 = (uint64) ((word64) edx + 4);
		Eq_1342 ebx_31;
		ebx_31.u0 = rcx->u0.t000C.u0;
		Eq_1342 r8d_30 = (word32) r8_29;
		if (r8d_30 <= ebx_31)
		{
			Eq_1342 r11d_41 = (&rcx->u0)[1];
			rcx->u0.t0008.u0 = (int32) r8d_30;
			Eq_1342 r9d_46 = r10_16.u2[(uint64) ((word32) r8_29 - 0x04)];
			if (r11d_41 != 0x00)
				r9d_46 = __bswap<word32>(r9d_46);
			if ((word32) r8_29 + 0x04 <= ebx_31)
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 eax_72 = r10_16.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if (r11d_41 != 0x00)
				{
					Eq_1342 eax_73 = __bswap<word32>(eax_72);
					r9d_46 = eax_73;
				}
				Eq_48736 tLoc0158;
				fn0000000180005050(rcx, r9d_46, &tLoc0158);
				Eq_137 r9_94;
				r9_94.u0 = rcx->u0.t0000.u0;
				int32 edx_156 = 0x00;
				int32 r8d_1306;
				for (r8d_1306 = 0x00; r8d_1306 < 0x05; ++r8d_1306)
				{
					if (r9_94 == 0x00)
						goto l00000001800188C3;
					Eq_1342 r10d_118;
					r10d_118.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r10d_118)
						goto l00000001800188C3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r10d_118)
						goto l00000001800188C3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				}
				Eq_1342 eax_170;
				do
				{
					if (r9_94 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
						goto l00000001800188C3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					++edx_156;
					eax_170.u0 = rcx->u0.t0008.u0;
				} while (edx_156 < 0x15);
				if (r9_94 != 0x00)
				{
					Eq_1342 r8d_174;
					r8d_174.u0 = rcx->u0.t000C.u0;
					if ((word64) eax_170 + 4 <= r8d_174)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 <= r8d_174)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							if (rcx->u0.t0008.u0 + 0x04 <= r8d_174)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								if (rcx->u0.t0008.u0 + 0x04 <= r8d_174)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									if (rcx->u0.t0008.u0 + 0x04 <= r8d_174)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_226 = (uint64) rcx->u0.t0008.u0;
										word32 r11d_237 = (word32) r11_226;
										Eq_1342 r10d_243 = (&rcx->u0)[1];
										Eq_1342 r12d_1064 = r9_94.u2[(uint64) ((word32) r11_226 - 0x04)];
										if (r10d_243 != 0x00)
											r12d_1064 = __bswap<word32>(r12d_1064);
										if ((word32) r11_226 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_268 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 r15d_1045 = r9_94.u2[(uint64) ((word32) r11_268 - 0x04)];
										if (r10d_243 != 0x00)
											r15d_1045 = __bswap<word32>(r15d_1045);
										if ((word32) r11_268 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_321 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_330 = r9_94.u2[(uint64) ((word32) r11_321 - 0x04)];
										word32 r11d_322 = (word32) r11_321;
										Eq_1342 dwLoc0198_1316 = eax_330;
										if (r10d_243 != 0x00)
											dwLoc0198_1316 = __bswap<word32>(eax_330);
										if ((word32) r11_321 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_357 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 r13d_1100 = r9_94.u2[(uint64) ((word32) r11_357 - 0x04)];
										if (r10d_243 != 0x00)
											r13d_1100 = __bswap<word32>(r13d_1100);
										if ((word32) r11_357 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_392 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_401 = r9_94.u2[(uint64) ((word32) r11_392 - 0x04)];
										word32 r11d_393 = (word32) r11_392;
										Eq_1342 dwLoc0194_1320 = eax_401;
										if (r10d_243 != 0x00)
											dwLoc0194_1320 = __bswap<word32>(eax_401);
										if ((word32) r11_392 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_422 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_428 = r9_94.u2[(uint64) ((word32) r11_422 - 0x04)];
										Eq_1342 dwLoc0190_1322 = eax_428;
										if (r10d_243 != 0x00)
											dwLoc0190_1322 = __bswap<word32>(eax_428);
										if ((word32) r11_422 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_450 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_459 = r9_94.u2[(uint64) ((word32) r11_450 - 0x04)];
										word32 r11d_451 = (word32) r11_450;
										Eq_1342 dwLoc018C_1325 = eax_459;
										if (r10d_243 != 0x00)
											dwLoc018C_1325 = __bswap<word32>(eax_459);
										if ((word32) r11_450 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_480 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_486 = r9_94.u2[(uint64) ((word32) r11_480 - 0x04)];
										Eq_1342 dwLoc0188_1327 = eax_486;
										if (r10d_243 != 0x00)
											dwLoc0188_1327 = __bswap<word32>(eax_486);
										if ((word32) r11_480 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_508 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_517 = r9_94.u2[(uint64) ((word32) r11_508 - 0x04)];
										word32 r11d_509 = (word32) r11_508;
										Eq_1342 dwLoc0184_1330 = eax_517;
										if (r10d_243 != 0x00)
											dwLoc0184_1330 = __bswap<word32>(eax_517);
										if ((word32) r11_508 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_538 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_544 = r9_94.u2[(uint64) ((word32) r11_538 - 0x04)];
										Eq_1342 dwLoc0180_1332 = eax_544;
										if (r10d_243 != 0x00)
											dwLoc0180_1332 = __bswap<word32>(eax_544);
										if ((word32) r11_538 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_632 = (uint64) rcx->u0.t0008.u0;
										word32 r11d_650 = (word32) r11_632;
										Eq_1342 ebp_1069 = r9_94.u2[(uint64) ((word32) r11_632 - 0x04)];
										if (r10d_243 != 0x00)
											ebp_1069 = __bswap<word32>(ebp_1069);
										if ((word32) r11_632 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_682 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 esi_1191 = r9_94.u2[(uint64) ((word32) r11_682 - 0x04)];
										if (r10d_243 != 0x00)
											esi_1191 = __bswap<word32>(esi_1191);
										if ((word32) r11_682 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r14_870 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 ebx_1075 = r9_94.u2[(uint64) ((word32) r14_870 - 0x04)];
										if (r10d_243 != 0x00)
											ebx_1075 = __bswap<word32>(ebx_1075);
										if ((word32) r14_870 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 rdi_915 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 r11d_1205 = r9_94.u2[(uint64) ((word32) rdi_915 - 0x04)];
										if (r10d_243 != 0x00)
											r11d_1205 = __bswap<word32>(r11d_1205);
										if ((word32) rdi_915 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 > r8d_174)
											return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										r8->t0018.u0 = (int32) r12d_1064;
										r8->t0040.u0 = (int32) ebp_1069;
										Eq_1342 eax_1072;
										eax_1072.u2 = (word64) r15d_1045 + r11d_237;
										if (r15d_1045 == 0x00)
											eax_1072 = r15d_1045;
										r8->t0048.u0 = (int32) ebx_1075;
										r8->t001C.u0 = (int32) eax_1072;
										r8->t0020.u0 = (int32) dwLoc0198_1316;
										Eq_1342 eax_1107;
										eax_1107.u2 = (word64) r13d_1100 + r11d_322;
										if (r13d_1100 == 0x00)
											eax_1107 = r13d_1100;
										r8->t0024.u0 = (int32) eax_1107;
										r8->t0028.u0 = (int32) dwLoc0194_1320;
										Eq_1342 eax_1129;
										eax_1129.u2 = (word64) dwLoc0190_1322 + r11d_393;
										if (dwLoc0190_1322 == 0x00)
											eax_1129 = dwLoc0190_1322;
										r8->t002C.u0 = (int32) eax_1129;
										r8->t0030.u0 = (int32) dwLoc018C_1325;
										Eq_1342 eax_1152;
										eax_1152.u2 = (word64) dwLoc0188_1327 + r11d_451;
										if (dwLoc0188_1327 == 0x00)
											eax_1152 = dwLoc0188_1327;
										r8->t0034.u0 = (int32) eax_1152;
										r8->t0038.u0 = (int32) dwLoc0184_1330;
										Eq_1342 eax_1175;
										eax_1175.u2 = (word64) dwLoc0180_1332 + r11d_509;
										if (dwLoc0180_1332 == 0x00)
											eax_1175 = dwLoc0180_1332;
										r8->t003C.u0 = (int32) eax_1175;
										Eq_1342 eax_1198;
										eax_1198.u2 = (word64) esi_1191 + r11d_650;
										if (esi_1191 == 0x00)
											eax_1198 = esi_1191;
										r8->t0044.u0 = (int32) eax_1198;
										Eq_1342 eax_1232;
										eax_1232.u2 = (word64) r11d_1205 + (word32) r14_870;
										if (r11d_1205 == 0x00)
											eax_1232 = r11d_1205;
										r8->t004C.u0 = (int32) eax_1232;
										return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
									}
								}
							}
						}
					}
				}
			}
		}
	}
l00000001800188C3:
	return (word32) fn0000000180023580(rax_6 ^ fp - 440, qwLoc01C0);
}

// 00000001800188D0: Register word32 fn00000001800188D0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_43383) r8)
// Called from:
//      fn00000001800156B0
word32 fn00000001800188D0(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_43383 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_11 = g_qw80030008 ^ fp - 0x01C8;
	Eq_137 r11_14;
	r11_14.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01D0;
	if (r11_14 != 0x00)
	{
		uint64 r10_28 = (uint64) ((word64) edx + 4);
		Eq_1342 ebx_30;
		ebx_30.u0 = rcx->u0.t000C.u0;
		Eq_1342 r10d_29 = (word32) r10_28;
		if (r10d_29 <= ebx_30)
		{
			Eq_1342 r8d_40 = (&rcx->u0)[1];
			rcx->u0.t0008.u0 = (int32) r10d_29;
			Eq_1342 r9d_45 = r11_14.u2[(uint64) ((word32) r10_28 - 0x04)];
			if (r8d_40 != 0x00)
				r9d_45 = __bswap<word32>(r9d_45);
			Eq_1342 eax_50 = (word32) r10_28 + 0x04;
			if (eax_50 <= ebx_30)
			{
				rcx->u0.t0008.u0 = (int32) eax_50;
				Eq_1342 eax_66 = r11_14.u2[(uint64) ((word64) eax_50 - 4)];
				if (r8d_40 != 0x00)
				{
					Eq_1342 eax_67 = __bswap<word32>(eax_66);
					r9d_45 = eax_67;
				}
				Eq_49836 tLoc0158;
				fn0000000180005050(rcx, r9d_45, &tLoc0158);
				Eq_137 r10_88;
				r10_88.u0 = rcx->u0.t0000.u0;
				int32 edx_125;
				for (edx_125 = 0x00; edx_125 < 0x05; ++edx_125)
				{
					if (r10_88 == 0x00)
						goto l00000001800190C2;
					Eq_1342 r8d_112;
					r8d_112.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_112)
						goto l00000001800190C2;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 eax_122 = rcx->u0.t0008.u0 + 0x04;
					if (eax_122 > r8d_112)
						goto l00000001800190C2;
					rcx->u0.t0008.u0 = (int32) eax_122;
				}
				uint64 r9_151 = 0x00;
				uint64 rbx_153;
				word32 ebx_171;
				do
				{
					word32 r9d_149 = (word32) r9_151;
					if (r10_88 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
						goto l00000001800190C2;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					rbx_153 = (uint64) rcx->u0.t0008.u0;
					r9_151 = (uint64) (r9d_149 + 0x01);
					ebx_171 = (word32) rbx_153;
				} while ((word32) r9_151 < 0x09);
				if (r10_88 != 0x00)
				{
					Eq_1342 r8d_166;
					r8d_166.u0 = rcx->u0.t000C.u0;
					if ((word32) rbx_153 + 0x04 <= r8d_166)
					{
						uint64 rbx_173 = (uint64) (ebx_171 + 0x04);
						Eq_1342 r11d_184 = (&rcx->u0)[1];
						Eq_1342 ebx_174 = (word32) rbx_173;
						rcx->u0.t0008.u0 = (int32) ebx_174;
						Eq_1342 eax_180 = r10_88.u2[(uint64) ((word32) rbx_173 - 0x04)];
						Eq_1342 dwLoc0190_1529 = eax_180;
						if (r11d_184 != 0x00)
							dwLoc0190_1529 = __bswap<word32>(eax_180);
						if ((word32) rbx_173 + 0x04 <= r8d_166)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rbp_217 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_223 = r10_88.u2[(uint64) ((word32) rbp_217 - 0x04)];
							word32 ebp_239 = (word32) rbp_217;
							Eq_1342 dwLoc01A8_1532 = eax_223;
							if (r11d_184 != 0x00)
								dwLoc01A8_1532 = __bswap<word32>(eax_223);
							if ((word32) rbp_217 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rbp_241 = (uint64) (ebp_239 + 0x04);
							Eq_1342 ebp_242 = (word32) rbp_241;
							rcx->u0.t0008.u0 = (int32) ebp_242;
							Eq_1342 eax_250 = r10_88.u2[(uint64) ((word32) rbp_241 - 0x04)];
							Eq_1342 dwLoc018C_1534 = eax_250;
							if (r11d_184 != 0x00)
								dwLoc018C_1534 = __bswap<word32>(eax_250);
							if ((word32) rbp_241 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_272 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_278 = r10_88.u2[(uint64) ((word32) r9_272 - 0x04)];
							word32 r9d_295 = (word32) r9_272;
							Eq_1342 dwLoc01A4_1536 = eax_278;
							if (r11d_184 != 0x00)
								dwLoc01A4_1536 = __bswap<word32>(eax_278);
							if ((word32) r9_272 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r9_297 = (uint64) (r9d_295 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r9_297;
							if ((word32) r9_297 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_309 = (uint64) rcx->u0.t0008.u0;
							word32 edx_315 = (word32) rdx_309;
							if ((word32) rdx_309 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_317 = (uint64) (edx_315 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_317;
							if ((word32) rdx_317 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_328 = (uint64) rcx->u0.t0008.u0;
							word32 edx_334 = (word32) rdx_328;
							if ((word32) rdx_328 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_336 = (uint64) (edx_334 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_336;
							if ((word32) rdx_336 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_347 = (uint64) rcx->u0.t0008.u0;
							word32 edx_353 = (word32) rdx_347;
							if ((word32) rdx_347 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_355 = (uint64) (edx_353 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_355;
							if ((word32) rdx_355 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_366 = (uint64) rcx->u0.t0008.u0;
							word32 edx_372 = (word32) rdx_366;
							if ((word32) rdx_366 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_374 = (uint64) (edx_372 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_374;
							if ((word32) rdx_374 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_385 = (uint64) rcx->u0.t0008.u0;
							word32 edx_391 = (word32) rdx_385;
							if ((word32) rdx_385 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_393 = (uint64) (edx_391 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_393;
							if ((word32) rdx_393 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_404 = (uint64) rcx->u0.t0008.u0;
							word32 edx_410 = (word32) rdx_404;
							if ((word32) rdx_404 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_412 = (uint64) (edx_410 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_412;
							if ((word32) rdx_412 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r14_440 = (uint64) rcx->u0.t0008.u0;
							word32 r14d_446 = (word32) r14_440;
							if ((word32) r14_440 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r14_448 = (uint64) (r14d_446 + 0x04);
							Eq_1342 r14d_449 = (word32) r14_448;
							rcx->u0.t0008.u0 = (int32) r14d_449;
							Eq_1342 eax_456 = r10_88.u2[(uint64) ((word32) r14_448 - 0x04)];
							Eq_1342 dwLoc0188_1539 = eax_456;
							if (r11d_184 != 0x00)
								dwLoc0188_1539 = __bswap<word32>(eax_456);
							if ((word32) r14_448 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_477 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_483 = r10_88.u2[(uint64) ((word32) r9_477 - 0x04)];
							word32 r9d_500 = (word32) r9_477;
							Eq_1342 dwLoc01A0_1541 = eax_483;
							if (r11d_184 != 0x00)
								dwLoc01A0_1541 = __bswap<word32>(eax_483);
							if ((word32) r9_477 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r9_502 = (uint64) (r9d_500 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r9_502;
							if ((word32) r9_502 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r13_533 = (uint64) rcx->u0.t0008.u0;
							word32 r13d_539 = (word32) r13_533;
							if ((word32) r13_533 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r13_541 = (uint64) (r13d_539 + 0x04);
							Eq_1342 r13d_542 = (word32) r13_541;
							rcx->u0.t0008.u0 = (int32) r13d_542;
							Eq_1342 eax_549 = r10_88.u2[(uint64) ((word32) r13_541 - 0x04)];
							Eq_1342 dwLoc0184_1544 = eax_549;
							if (r11d_184 != 0x00)
								dwLoc0184_1544 = __bswap<word32>(eax_549);
							if ((word32) r13_541 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r15_590 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_596 = r10_88.u2[(uint64) ((word32) r15_590 - 0x04)];
							word32 r15d_612 = (word32) r15_590;
							Eq_1342 dwLoc019C_1547 = eax_596;
							if (r11d_184 != 0x00)
								dwLoc019C_1547 = __bswap<word32>(eax_596);
							if ((word32) r15_590 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r15_614 = (uint64) (r15d_612 + 0x04);
							Eq_1342 r15d_615 = (word32) r15_614;
							rcx->u0.t0008.u0 = (int32) r15d_615;
							Eq_1342 eax_623 = r10_88.u2[(uint64) ((word32) r15_614 - 0x04)];
							Eq_1342 dwLoc0180_1549 = eax_623;
							if (r11d_184 != 0x00)
								dwLoc0180_1549 = __bswap<word32>(eax_623);
							if ((word32) r15_614 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_645 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_651 = r10_88.u2[(uint64) ((word32) r9_645 - 0x04)];
							word32 r9d_668 = (word32) r9_645;
							Eq_1342 dwLoc0198_1551 = eax_651;
							if (r11d_184 != 0x00)
								dwLoc0198_1551 = __bswap<word32>(eax_651);
							if ((word32) r9_645 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r9_670 = (uint64) (r9d_668 + 0x04);
							Eq_1342 r9d_671 = (word32) r9_670;
							rcx->u0.t0008.u0 = (int32) r9d_671;
							Eq_1342 eax_681 = r10_88.u2[(uint64) ((word32) r9_670 - 0x04)];
							Eq_1342 dwLoc017C_1554 = eax_681;
							if (r11d_184 != 0x00)
								dwLoc017C_1554 = __bswap<word32>(eax_681);
							if ((word32) r9_670 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_702 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_708 = r10_88.u2[(uint64) ((word32) r9_702 - 0x04)];
							word32 r9d_725 = (word32) r9_702;
							Eq_1342 dwLoc0194_1556 = eax_708;
							if (r11d_184 != 0x00)
								dwLoc0194_1556 = __bswap<word32>(eax_708);
							if ((word32) r9_702 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r9_727 = (uint64) (r9d_725 + 0x04);
							Eq_1342 r9d_728 = (word32) r9_727;
							rcx->u0.t0008.u0 = (int32) r9d_728;
							Eq_1342 eax_738 = r10_88.u2[(uint64) ((word32) r9_727 - 0x04)];
							Eq_1342 dwLoc0178_1559 = eax_738;
							if (r11d_184 != 0x00)
								dwLoc0178_1559 = __bswap<word32>(eax_738);
							if ((word32) r9_727 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_765 = (uint64) rcx->u0.t0008.u0;
							word32 r9d_805 = (word32) r9_765;
							Eq_1342 r12d_1274 = r10_88.u2[(uint64) ((word32) r9_765 - 0x04)];
							if (r11d_184 != 0x00)
								r12d_1274 = __bswap<word32>(r12d_1274);
							if ((word32) r9_765 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r9_807 = (uint64) (r9d_805 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r9_807;
							if ((word32) r9_807 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_819 = (uint64) rcx->u0.t0008.u0;
							word32 edx_825 = (word32) rdx_819;
							if ((word32) rdx_819 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_827 = (uint64) (edx_825 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_827;
							if ((word32) rdx_827 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_838 = (uint64) rcx->u0.t0008.u0;
							word32 edx_844 = (word32) rdx_838;
							if ((word32) rdx_838 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_846 = (uint64) (edx_844 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_846;
							if ((word32) rdx_846 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_857 = (uint64) rcx->u0.t0008.u0;
							word32 r9d_863 = (word32) r9_857;
							if ((word32) r9_857 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r9_865 = (uint64) (r9d_863 + 0x04);
							Eq_1342 r9d_866 = (word32) r9_865;
							rcx->u0.t0008.u0 = (int32) r9d_866;
							Eq_1342 eax_875 = r10_88.u2[(uint64) ((word32) r9_865 - 0x04)];
							Eq_1342 dwLoc0174_1563 = eax_875;
							if (r11d_184 != 0x00)
								dwLoc0174_1563 = __bswap<word32>(eax_875);
							if ((word32) r9_865 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_902 = (uint64) rcx->u0.t0008.u0;
							word32 r9d_944 = (word32) r9_902;
							Eq_1342 esi_1294 = r10_88.u2[(uint64) ((word32) r9_902 - 0x04)];
							if (r11d_184 != 0x00)
								esi_1294 = __bswap<word32>(esi_1294);
							if ((word32) r9_902 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r9_946 = (uint64) (r9d_944 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) r9_946;
							if ((word32) r9_946 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_958 = (uint64) rcx->u0.t0008.u0;
							word32 edx_964 = (word32) rdx_958;
							if ((word32) rdx_958 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_966 = (uint64) (edx_964 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_966;
							if ((word32) rdx_966 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_977 = (uint64) rcx->u0.t0008.u0;
							word32 edx_983 = (word32) rdx_977;
							if ((word32) rdx_977 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_985 = (uint64) (edx_983 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_985;
							if ((word32) rdx_985 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_996 = (uint64) rcx->u0.t0008.u0;
							word32 edx_1002 = (word32) rdx_996;
							if ((word32) rdx_996 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_1004 = (uint64) (edx_1002 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_1004;
							if ((word32) rdx_1004 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_1015 = (uint64) rcx->u0.t0008.u0;
							word32 edx_1021 = (word32) rdx_1015;
							if ((word32) rdx_1015 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_1023 = (uint64) (edx_1021 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_1023;
							if ((word32) rdx_1023 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_1034 = (uint64) rcx->u0.t0008.u0;
							word32 edx_1040 = (word32) rdx_1034;
							if ((word32) rdx_1034 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 rdx_1042 = (uint64) (edx_1040 + 0x04);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_1042;
							if ((word32) rdx_1042 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r9_1053 = (uint64) rcx->u0.t0008.u0;
							word32 r9d_1059 = (word32) r9_1053;
							if ((word32) r9_1053 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							uint64 r9_1061 = (uint64) (r9d_1059 + 0x04);
							Eq_1342 r9d_1062 = (word32) r9_1061;
							rcx->u0.t0008.u0 = (int32) r9d_1062;
							Eq_1342 edx_1074 = r10_88.u2[(uint64) ((word32) r9_1061 - 0x04)];
							if (r11d_184 != 0x00)
								edx_1074 = __bswap<word32>(edx_1074);
							if ((word32) r9_1061 + 0x04 > r8d_166)
								return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 eax_1106 = r10_88.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							if (r11d_184 != 0x00)
								eax_1106 = __bswap<word32>(eax_1106);
							if (dwLoc01A8_1532 != 0x00)
								dwLoc01A8_1532 += ebx_174;
							Eq_1342 ebx_1145 = dwLoc01A4_1536;
							if (dwLoc01A4_1536 != 0x00)
								ebx_1145 = dwLoc01A4_1536 + ebp_242;
							uint64 r11_1173 = (uint64) dwLoc01A0_1541;
							word32 r11d_1174 = (word32) r11_1173;
							if (r11d_1174 != 0x00)
								r11_1173 = (uint64) ((word64) r14d_449 + r11d_1174);
							uint64 r10_1201 = (uint64) dwLoc019C_1547;
							word32 r11d_1428 = (word32) r11_1173;
							word32 r10d_1202 = (word32) r10_1201;
							if (r10d_1202 != 0x00)
								r10_1201 = (uint64) ((word64) r13d_542 + r10d_1202);
							word32 r10d_1435 = (word32) r10_1201;
							Eq_1342 r8d_1229 = dwLoc0198_1551;
							if (dwLoc0198_1551 != 0x00)
								r8d_1229 = dwLoc0198_1551 + r15d_615;
							Eq_1342 ecx_1255 = dwLoc0194_1556;
							if (dwLoc0194_1556 != 0x00)
								ecx_1255 = dwLoc0194_1556 + r9d_671;
							if (r12d_1274 != 0x00)
								r12d_1274 += r9d_728;
							if (esi_1294 != 0x00)
								esi_1294 += r9d_866;
							if (eax_1106 != 0x00)
								eax_1106 += r9d_1062;
							r8->t0000.u0 = (int32) dwLoc0190_1529;
							r8->t0004.u0 = (int32) dwLoc01A8_1532;
							r8->t0008.u0 = (int32) dwLoc018C_1534;
							r8->t0018.u0 = (int32) dwLoc0188_1539;
							r8->t0034.u0 = (int32) ecx_1255;
							r8->t0020.u0 = (int32) dwLoc0184_1544;
							r8->t002C.u0 = (int32) r8d_1229;
							r8->t0038.u0 = (int32) dwLoc0178_1559;
							r8->t004C.u0 = (int32) eax_1106;
							r8->t0028.u0 = (int32) dwLoc0180_1549;
							r8->t000C.u0 = (int32) ebx_1145;
							r8->dw001C = r11d_1428;
							r8->dw0024 = r10d_1435;
							r8->t0030.u0 = (int32) dwLoc017C_1554;
							r8->t003C.u0 = (int32) r12d_1274;
							r8->t0040.u0 = (int32) dwLoc0174_1563;
							r8->t0044.u0 = (int32) esi_1294;
							r8->t0048.u0 = (int32) edx_1074;
							return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
						}
					}
				}
			}
		}
	}
l00000001800190C2:
	return (word32) fn0000000180023580(rax_11 ^ fp - 0x01C8, qwLoc01D0);
}

// 00000001800190D0: Register word32 fn00000001800190D0(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn00000001800156B0
word32 fn00000001800190D0(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	ui64 rax_14 = g_qw80030008 ^ fp - 0x04B8;
	if (r8d != 0x00 && edx != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (fn00000001800020D0(&g_t800306F0, (word32) rdx) != 0x00)
		{
			up32 r14d_1169 = 0x00;
			Eq_51622 tLoc0488;
			Eq_51626 tLoc0378;
			Eq_51630 tLoc0268;
			Eq_51634 tLoc0158;
			if (edx != 0x00)
			{
				do
				{
					memset(&tLoc0488, 0, 0x0104);
					Eq_137 r9_81;
					r9_81.u0 = rcx->u0.t0000.u0;
					if (r9_81 == 0x00)
					{
l00000001800196A4:
						goto l00000001800196A6;
					}
					Eq_1342 r8d_94;
					r8d_94.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_100 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edx_107 = (&rcx->u0)[1];
					Eq_1342 r10d_112 = r9_81.u2[(uint64) ((word32) r11_100 - 0x04)];
					if (edx_107 != 0x00)
						r10d_112 = __bswap<word32>(r10d_112);
					if ((word32) r11_100 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_126 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_137 = r9_81.u2[(uint64) ((word32) r11_126 - 0x04)];
					if (edx_107 != 0x00)
					{
						Eq_1342 eax_138 = __bswap<word32>(eax_137);
						r10d_112 = eax_138;
					}
					if ((word32) r11_126 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_152 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 ebp_163 = r9_81.u2[(uint64) ((word32) r11_152 - 0x04)];
					if (edx_107 != 0x00)
						ebp_163 = __bswap<word32>(ebp_163);
					if ((word32) r11_152 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_177 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_188 = r9_81.u2[(uint64) ((word32) r11_177 - 0x04)];
					if (edx_107 != 0x00)
					{
						Eq_1342 eax_189 = __bswap<word32>(eax_188);
						ebp_163 = eax_189;
					}
					if ((word32) r11_177 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_203 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_214 = r9_81.u2[(uint64) ((word32) r11_203 - 0x04)];
					if (edx_107 != 0x00)
						esi_214 = __bswap<word32>(esi_214);
					if ((word32) r11_203 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_228 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_239 = r9_81.u2[(uint64) ((word32) r11_228 - 0x04)];
					if (edx_107 != 0x00)
					{
						Eq_1342 eax_240 = __bswap<word32>(eax_239);
						esi_214 = eax_240;
					}
					if ((word32) r11_228 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_254 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_265 = r9_81.u2[(uint64) ((word32) r11_254 - 0x04)];
					if (edx_107 != 0x00)
						edi_265 = __bswap<word32>(edi_265);
					if ((word32) r11_254 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_279 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_290 = r9_81.u2[(uint64) ((word32) r11_279 - 0x04)];
					if (edx_107 != 0x00)
					{
						Eq_1342 eax_291 = __bswap<word32>(eax_290);
						edi_265 = eax_291;
					}
					if ((word32) r11_279 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, r10d_112, &tLoc0488);
					fn0000000180005050(rcx, ebp_163, &tLoc0378);
					fn0000000180005050(rcx, esi_214, &tLoc0268);
					fn0000000180005050(rcx, edi_265, &tLoc0158);
					up32 r9d_1166 = 0x07;
					Eq_2072 eax_433 = g_t800306F0.u0 + ~0x038E;
					if (eax_433 <= 0x17 && !__bt<word32>(0x00880081, eax_433))
						r9d_1166 = 0x05;
					Eq_137 rdx_444;
					rdx_444.u0 = rcx->u0.t0000.u0;
					up32 ecx_1165 = 0x00;
					do
					{
						if (rdx_444 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
							goto l00000001800196A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						++ecx_1165;
					} while (ecx_1165 < r9d_1166);
					struct Eq_1710 * r8_481 = g_ptr80030710;
					if (r8_481 != null)
					{
						union Eq_51709 * rdx_500 = &tLoc0488;
						byte * r8_503 = (byte *) (&(r8_481->a0028 + 3)->t0000.u0 + (int64) r14d_1169 *64 78);
						char al_510;
						do
						{
							al_510 = rdx_500->u0;
							*r8_503 = al_510;
							rdx_500 = (union Eq_51709 *) ((char *) rdx_500 + 1);
							++r8_503;
						} while (al_510 != 0x00);
					}
					++r14d_1169;
				} while (r14d_1169 < edx);
			}
			rcx->u0.t0008.u0 = (int32) r8d;
			up32 r13d_1080 = 0x00;
			if (edx > 0x00)
			{
				do
				{
					Eq_137 r9_569;
					r9_569.u0 = rcx->u0.t0000.u0;
					int64 rax_573 = (char *) &g_ptr80030710->tFFFFFFF8 + ((int64) r13d_1080 *s 0x0138 + 8);
					if (r9_569 == 0x00)
						goto l00000001800196A4;
					Eq_1342 r8d_588;
					r8d_588.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_594 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edx_601 = (&rcx->u0)[1];
					Eq_1342 r11d_606 = r9_569.u2[(uint64) ((word32) r10_594 - 0x04)];
					if (edx_601 != 0x00)
						r11d_606 = __bswap<word32>(r11d_606);
					if ((word32) r10_594 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_620 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_631 = r9_569.u2[(uint64) ((word32) r10_620 - 0x04)];
					if (edx_601 != 0x00)
					{
						Eq_1342 eax_632 = __bswap<word32>(eax_631);
						r11d_606 = eax_632;
					}
					if ((word32) r10_620 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_646 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 ebp_657 = r9_569.u2[(uint64) ((word32) r10_646 - 0x04)];
					if (edx_601 != 0x00)
						ebp_657 = __bswap<word32>(ebp_657);
					if ((word32) r10_646 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_671 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_682 = r9_569.u2[(uint64) ((word32) r10_671 - 0x04)];
					if (edx_601 != 0x00)
					{
						Eq_1342 eax_683 = __bswap<word32>(eax_682);
						ebp_657 = eax_683;
					}
					if ((word32) r10_671 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_697 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_708 = r9_569.u2[(uint64) ((word32) r10_697 - 0x04)];
					if (edx_601 != 0x00)
						esi_708 = __bswap<word32>(esi_708);
					if ((word32) r10_697 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_722 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_733 = r9_569.u2[(uint64) ((word32) r10_722 - 0x04)];
					if (edx_601 != 0x00)
					{
						Eq_1342 eax_734 = __bswap<word32>(eax_733);
						esi_708 = eax_734;
					}
					if ((word32) r10_722 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_748 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_759 = r9_569.u2[(uint64) ((word32) r10_748 - 0x04)];
					if (edx_601 != 0x00)
						edi_759 = __bswap<word32>(edi_759);
					if ((word32) r10_748 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_773 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_784 = r9_569.u2[(uint64) ((word32) r10_773 - 0x04)];
					if (edx_601 != 0x00)
					{
						Eq_1342 eax_785 = __bswap<word32>(eax_784);
						edi_759 = eax_785;
					}
					if ((word32) r10_773 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r12_799 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r15d_1031 = r9_569.u2[(uint64) ((word32) r12_799 - 0x04)];
					if (edx_601 != 0x00)
						r15d_1031 = __bswap<word32>(r15d_1031);
					if ((word32) r12_799 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_824 = (uint64) rcx->u0.t0008.u0;
					uint64 r14_1019 = (uint64) r9_569.u2[(uint64) ((word32) r10_824 - 0x04)];
					Eq_1342 r14d_835 = (word32) r14_1019;
					word32 r14_32_32_1020 = SLICE(r14_1019, word32, 32);
					if (edx_601 != 0x00)
						r14_1019 = SEQ(r14_32_32_1020, __bswap<word32>(r14d_835));
					word32 r14d_1024 = (word32) r14_1019;
					if ((word32) r10_824 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_588)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, r11d_606, &tLoc0158);
					fn0000000180005050(rcx, ebp_657, &tLoc0268);
					fn0000000180005050(rcx, esi_708, &tLoc0378);
					fn0000000180005050(rcx, edi_759, &tLoc0488);
					up32 edx_1171 = 0x07;
					Eq_2072 eax_967 = g_t800306F0.u0 + ~0x038E;
					if (eax_967 <= 0x17 && !__bt<word32>(0x00880081, eax_967))
						edx_1171 = 0x05;
					Eq_137 r9_978;
					r9_978.u0 = rcx->u0.t0000.u0;
					up32 ecx_1002 = 0x00;
					Eq_1342 edi_1077;
					do
					{
						if (r9_978 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
							goto l00000001800196A4;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						++ecx_1002;
						edi_1077.u0 = rcx->u0.t0008.u0;
					} while (ecx_1002 < edx_1171);
					uint64 r9_1023 = (uint64) (word32) (r12_799 + r14_1019);
					word32 r9_32_32_1038 = SLICE(r9_1023, word32, 32);
					if (r14d_1024 == 0x00)
						r9_1023 = SEQ(r9_32_32_1038, r14d_1024);
					if (fn00000001800196F0(rcx, rax_573, r15d_1031, (word32) r9_1023) == 0x00)
						goto l00000001800196A4;
					rcx->u0.t0008.u0 = (int32) edi_1077;
					++r13d_1080;
				} while (r13d_1080 < edx);
			}
			int32 r15d_1116;
			Eq_137 rcx_1092;
			rcx_1092.u0 = rcx->u0.t0000.u0;
			for (r15d_1116 = 0x00; r15d_1116 < 0x40; ++r15d_1116)
			{
				if (rcx_1092 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
					goto l00000001800196A4;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			}
l00000001800196A6:
		}
	}
	word64 qwLoc04C0;
	return (word32) fn0000000180023580(rax_14 ^ fp - 0x04B8, qwLoc04C0);
}

// 00000001800196F0: Register word32 fn00000001800196F0(Register (ptr64 Eq_3676) rcx, Register int64 rdx, Register Eq_1342 r8d, Register Eq_1342 r9d)
// Called from:
//      fn00000001800190D0
word32 fn00000001800196F0(union Eq_3676 * rcx, int64 rdx, Eq_1342 r8d, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_8 = g_qw80030008 ^ fp - 600;
	if (rdx != 0x00)
	{
		if (r9d != 0x00 && r8d != 0x00)
		{
			rcx->u0.t0008.u0 = (int32) r9d;
			Eq_1342 esi_317;
			esi_317.u0 = 0x00;
			if (r8d != 0x00)
			{
				do
				{
					Eq_137 r9_44;
					r9_44.u0 = rcx->u0.t0000.u0;
					if (r9_44 == 0x00)
					{
l00000001800198E7:
						goto l00000001800198B6;
					}
					Eq_1342 r8d_57;
					r8d_57.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_57)
						goto l00000001800198E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rbx_63 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r10d_70 = (&rcx->u0)[1];
					Eq_1342 r11d_102 = r9_44.u2[(uint64) ((word32) rbx_63 - 0x04)];
					if (r10d_70 != 0x00)
						r11d_102 = __bswap<word32>(r11d_102);
					if ((word32) rbx_63 + 0x04 > r8d_57)
						goto l00000001800198E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rbx_89 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_100 = r9_44.u2[(uint64) ((word32) rbx_89 - 0x04)];
					if (r10d_70 != 0x00)
					{
						Eq_1342 eax_101 = __bswap<word32>(eax_100);
						r11d_102 = eax_101;
					}
					if ((word32) rbx_89 + 0x04 > r8d_57)
						goto l00000001800198E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdi_115 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 ebx_126 = r9_44.u2[(uint64) ((word32) rdi_115 - 0x04)];
					if (r10d_70 != 0x00)
						ebx_126 = __bswap<word32>(ebx_126);
					if ((word32) rdi_115 + 0x04 > r8d_57)
						goto l00000001800198E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdi_140 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_151 = r9_44.u2[(uint64) ((word32) rdi_140 - 0x04)];
					if (r10d_70 != 0x00)
					{
						Eq_1342 eax_152 = __bswap<word32>(eax_151);
						ebx_126 = eax_152;
					}
					if ((word32) rdi_140 + 0x04 > r8d_57)
						goto l00000001800198E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_57)
						goto l00000001800198E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_57)
						goto l00000001800198E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdi_186 = (uint64) rcx->u0.t0008.u0;
					if ((word32) rdi_186 + 0x04 > r8d_57)
						goto l00000001800198E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 r9d_207 = r9_44.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					if (r10d_70 != 0x00)
						r9d_207 = __bswap<word32>(r9d_207);
					Eq_52180 tLoc0238;
					fn0000000180005050(rcx, r11d_102, &tLoc0238);
					Eq_52184 tLoc0128;
					fn0000000180005050(rcx, ebx_126, &tLoc0128);
					Eq_1342 eax_261;
					eax_261.u2 = (word64) r9d_207 + (word32) rdi_186;
					if (r9d_207 == 0x00)
						eax_261 = r9d_207;
					Eq_1342 r9d_322;
					r9d_322.u0 = rcx->u0.t0008.u0;
					if (eax_261 != 0x00)
					{
						Eq_137 r8_273;
						r8_273.u0 = rcx->u0.t0000.u0;
						rcx->u0.t0008.u0 = (int32) eax_261;
						int32 edx_276;
						for (edx_276 = 0x00; edx_276 < 0x20; ++edx_276)
						{
							if (r8_273 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
								goto l00000001800198E7;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						}
					}
					rcx->u0.t0008.u0 = (int32) r9d_322;
					esi_317.u2 = (word64) esi_317 + 1;
				} while (esi_317 < r8d);
			}
l00000001800198B6:
		}
	}
	word64 qwLoc0260;
	return (word32) fn0000000180023580(rax_8 ^ fp - 600, qwLoc0260);
}

// 00000001800198F0: Register word32 fn00000001800198F0(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn00000001800156B0
word32 fn00000001800198F0(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	ui64 rax_11 = g_qw80030008 ^ fp - 1176;
	if (r8d != 0x00 && edx != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		Eq_1753 eax_31;
		eax_31.u0 = g_t800306F0.u0;
		if (eax_31 != 866 && eax_31 != 877 || fn00000001800020D0(&g_t800306F0, (word32) rdx) != 0x00)
		{
			up32 r14d_493 = 0x00;
			if (edx != 0x00)
			{
				do
				{
					Eq_52604 tLoc0478;
					memset(&tLoc0478, 0, 0x0104);
					Eq_137 r9_89;
					r9_89.u0 = rcx->u0.t0000.u0;
					if (r9_89 == 0x00)
					{
l0000000180019C2E:
						goto l0000000180019BF3;
					}
					Eq_1342 r8d_102;
					r8d_102.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_108 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edx_115 = (&rcx->u0)[1];
					Eq_1342 r10d_120 = r9_89.u2[(uint64) ((word32) r11_108 - 0x04)];
					if (edx_115 != 0x00)
						r10d_120 = __bswap<word32>(r10d_120);
					if ((word32) r11_108 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_134 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_145 = r9_89.u2[(uint64) ((word32) r11_134 - 0x04)];
					if (edx_115 != 0x00)
					{
						Eq_1342 eax_146 = __bswap<word32>(eax_145);
						r10d_120 = eax_146;
					}
					if ((word32) r11_134 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_160 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 ebp_171 = r9_89.u2[(uint64) ((word32) r11_160 - 0x04)];
					if (edx_115 != 0x00)
						ebp_171 = __bswap<word32>(ebp_171);
					if ((word32) r11_160 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_185 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_196 = r9_89.u2[(uint64) ((word32) r11_185 - 0x04)];
					if (edx_115 != 0x00)
					{
						Eq_1342 eax_197 = __bswap<word32>(eax_196);
						ebp_171 = eax_197;
					}
					if ((word32) r11_185 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_211 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_222 = r9_89.u2[(uint64) ((word32) r11_211 - 0x04)];
					if (edx_115 != 0x00)
						esi_222 = __bswap<word32>(esi_222);
					if ((word32) r11_211 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_236 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_247 = r9_89.u2[(uint64) ((word32) r11_236 - 0x04)];
					if (edx_115 != 0x00)
					{
						Eq_1342 eax_248 = __bswap<word32>(eax_247);
						esi_222 = eax_248;
					}
					if ((word32) r11_236 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_262 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_273 = r9_89.u2[(uint64) ((word32) r11_262 - 0x04)];
					if (edx_115 != 0x00)
						edi_273 = __bswap<word32>(edi_273);
					if ((word32) r11_262 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_287 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_298 = r9_89.u2[(uint64) ((word32) r11_287 - 0x04)];
					if (edx_115 != 0x00)
					{
						Eq_1342 eax_299 = __bswap<word32>(eax_298);
						edi_273 = eax_299;
					}
					if ((word32) r11_287 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_102)
						goto l0000000180019C2E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 eax_366;
					eax_366.u0 = rcx->u0.t0008.u0;
					if (g_t800306F0.u0 >= 0x03C4)
					{
						if ((word64) eax_366 + 4 > r8d_102)
							goto l0000000180019C2E;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 > r8d_102)
							goto l0000000180019C2E;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					}
					fn0000000180005050(rcx, r10d_120, &tLoc0478);
					Eq_52608 tLoc0368;
					fn0000000180005050(rcx, ebp_171, &tLoc0368);
					Eq_52612 tLoc0258;
					fn0000000180005050(rcx, esi_222, &tLoc0258);
					Eq_52616 tLoc0148;
					fn0000000180005050(rcx, edi_273, &tLoc0148);
					struct Eq_1710 * r9_479 = g_ptr80030710;
					if (r9_479 != null)
					{
						union Eq_52651 * rdx_497 = &tLoc0478;
						byte * r8_498 = (byte *) (&(r9_479->a0028 + 3)->t0000.u0 + (int64) r14d_493 *64 78);
						char al_505;
						do
						{
							al_505 = rdx_497->u0;
							*r8_498 = al_505;
							rdx_497 = (union Eq_52651 *) ((char *) rdx_497 + 1);
							++r8_498;
						} while (al_505 != 0x00);
					}
					++r14d_493;
				} while (r14d_493 < edx);
			}
l0000000180019BF3:
		}
	}
	word64 qwLoc04A0;
	return (word32) fn0000000180023580(rax_11 ^ fp - 1176, qwLoc04A0);
}

// 0000000180019C40: Register word32 fn0000000180019C40(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn00000001800156B0
word32 fn0000000180019C40(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	ui64 rax_11 = g_qw80030008 ^ fp - 616;
	if (r8d != 0x00 && edx != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (fn00000001800020D0(&g_t800306F0, (word32) rdx) != 0x00)
		{
			up32 esi_389 = 0x00;
			if (edx != 0x00)
			{
				do
				{
					Eq_53066 tLoc0248;
					memset(&tLoc0248, 0, 0x0104);
					Eq_137 rdx_65;
					rdx_65.u0 = rcx->u0.t0000.u0;
					if (rdx_65 == 0x00)
					{
l0000000180019F2B:
						goto l0000000180019F01;
					}
					Eq_1342 r8d_78;
					r8d_78.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_84 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_91 = (&rcx->u0)[1];
					Eq_1342 r11d_123 = rdx_65.u2[(uint64) ((word32) r10_84 - 0x04)];
					if (r9d_91 != 0x00)
						r11d_123 = __bswap<word32>(r11d_123);
					if ((word32) r10_84 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_110 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_121 = rdx_65.u2[(uint64) ((word32) r10_110 - 0x04)];
					if (r9d_91 != 0x00)
					{
						Eq_1342 eax_122 = __bswap<word32>(eax_121);
						r11d_123 = eax_122;
					}
					if ((word32) r10_110 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_136 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_147 = rdx_65.u2[(uint64) ((word32) r10_136 - 0x04)];
					if (r9d_91 != 0x00)
						edi_147 = __bswap<word32>(edi_147);
					if ((word32) r10_136 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_161 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_172 = rdx_65.u2[(uint64) ((word32) r10_161 - 0x04)];
					if (r9d_91 != 0x00)
					{
						Eq_1342 eax_173 = __bswap<word32>(eax_172);
						edi_147 = eax_173;
					}
					if ((word32) r10_161 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_78)
						goto l0000000180019F2B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, r11d_123, &tLoc0248);
					Eq_53070 tLoc0138;
					fn0000000180005050(rcx, edi_147, &tLoc0138);
					struct Eq_1710 * r9_380 = g_ptr80030710;
					if (r9_380 != null)
					{
						union Eq_53080 * rdx_393 = &tLoc0248;
						byte * r8_394 = (byte *) (&(r9_380->a0028 + 3)->t0000.u0 + (int64) esi_389 *64 78);
						char al_401;
						do
						{
							al_401 = rdx_393->u0;
							*r8_394 = al_401;
							rdx_393 = (union Eq_53080 *) ((char *) rdx_393 + 1);
							++r8_394;
						} while (al_401 != 0x00);
					}
					++esi_389;
				} while (esi_389 < edx);
			}
l0000000180019F01:
		}
	}
	word64 qwLoc0270;
	return (word32) fn0000000180023580(rax_11 ^ fp - 616, qwLoc0270);
}

// 0000000180019F30: Register word32 fn0000000180019F30(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn00000001800156B0
word32 fn0000000180019F30(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_11 = g_qw80030008 ^ fp - 0x0288;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (edx == 0x00 || fn0000000180001B50(&g_t800306F0, (word32) rdx) != 0x00)
		{
			uint64 r13_59 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 r13d_358 = (word32) r13_59;
			up32 r15d_380 = 0x00;
			up32 esi_274 = 0x00;
			Eq_53169 tLoc0268;
			Eq_53179 tLoc0158;
			if (edx != 0x00)
			{
				do
				{
					memset(&tLoc0268, 0, 0x0104);
					memset(&tLoc0158, 0, 0x0104);
					Eq_137 r11_88;
					r11_88.u0 = rcx->u0.t0000.u0;
					if (r11_88 == 0x00)
					{
l000000018001A2E3:
						goto l000000018001A2A8;
					}
					Eq_1342 r8d_101;
					r8d_101.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_101)
						goto l000000018001A2E3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_107 = (uint64) rcx->u0.t0008.u0;
					uint64 rdx_113 = (uint64) r11_88.u2[(uint64) ((word32) r9_107 - 0x04)];
					Eq_1342 r10d_114 = (&rcx->u0)[1];
					Eq_1342 edx_119 = (word32) rdx_113;
					word32 rdx_32_32_236 = SLICE(rdx_113, word32, 32);
					if (r10d_114 != 0x00)
						rdx_113 = SEQ(rdx_32_32_236, __bswap<word32>(edx_119));
					word32 rdx_32_32_238 = SLICE(rdx_113, word32, 32);
					if ((word32) r9_107 + 0x04 > r8d_101)
						goto l000000018001A2E3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_133 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_144 = r11_88.u2[(uint64) ((word32) r9_133 - 0x04)];
					if (r10d_114 != 0x00)
					{
						Eq_1342 eax_145 = __bswap<word32>(eax_144);
						rdx_113 = SEQ(rdx_32_32_238, eax_145);
					}
					if ((word32) r9_133 + 0x04 > r8d_101)
						goto l000000018001A2E3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdi_159 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_170 = r11_88.u2[(uint64) ((word32) rdi_159 - 0x04)];
					if (r10d_114 != 0x00)
						r9d_170 = __bswap<word32>(r9d_170);
					if ((word32) rdi_159 + 0x04 > r8d_101)
						goto l000000018001A2E3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdi_184 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_195 = r11_88.u2[(uint64) ((word32) rdi_184 - 0x04)];
					if (r10d_114 != 0x00)
					{
						Eq_1342 eax_196 = __bswap<word32>(eax_195);
						r9d_170 = eax_196;
					}
					if ((word32) rdi_184 + 0x04 > r8d_101)
						goto l000000018001A2E3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_101)
						goto l000000018001A2E3;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, (word32) rdx_113, &tLoc0268);
					fn0000000180005050(rcx, r9d_170, &tLoc0158);
					struct Eq_2417 * r9_265 = g_ptr80030720;
					if (r9_265 != null)
					{
						int64 rax_275 = (int64) esi_274;
						union Eq_53457 * rcx_278 = &tLoc0268;
						byte * rdx_279 = (byte *) (&(r9_265->a0030 + 46)->t0000.u0 + rax_275 *64 0x00BE);
						char al_286;
						do
						{
							al_286 = rcx_278->u0;
							*rdx_279 = al_286;
							rcx_278 = (union Eq_53457 *) ((char *) rcx_278 + 1);
							++rdx_279;
						} while (al_286 != 0x00);
						union Eq_53478 * rcx_296 = &tLoc0158;
						byte * rdx_299 = (byte *) (&(g_ptr80030720->a0030 + 111)->t0000.u0 + rax_275 *64 0x00BE);
						char al_306;
						do
						{
							al_306 = rcx_296->u0;
							*rdx_299 = al_306;
							rcx_296 = (union Eq_53478 *) ((char *) rcx_296 + 1);
							++rdx_299;
						} while (al_306 != 0x00);
					}
					++esi_274;
				} while (esi_274 < edx);
			}
			rcx->u0.t0008.u0 = (int32) r13d_358;
			uint64 r13_390 = r13_59;
			if (edx != 0x00)
			{
				do
				{
					Eq_137 r9_379;
					r9_379.u0 = rcx->u0.t0000.u0;
					struct Eq_1142 * rbp_383 = (struct Eq_1142 *) (g_ptr80030720 + (int64) r15d_380);
					if (r9_379 == 0x00)
					{
l000000018001A2E7:
						goto l000000018001A298;
					}
					uint64 r11_392 = (uint64) ((word32) r13_390 + 0x04);
					Eq_1342 edx_394;
					edx_394.u0 = rcx->u0.t000C.u0;
					Eq_1342 r11d_393 = (word32) r11_392;
					if (r11d_393 > edx_394)
						goto l000000018001A2E7;
					Eq_1342 r8d_404 = (&rcx->u0)[1];
					rcx->u0.t0008.u0 = (int32) r11d_393;
					Eq_1342 r10d_409 = r9_379.u2[(uint64) ((word32) r11_392 - 0x04)];
					if (r8d_404 != 0x00)
						r10d_409 = __bswap<word32>(r10d_409);
					if ((word32) r11_392 + 0x04 > edx_394)
						goto l000000018001A2E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_423 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_434 = r9_379.u2[(uint64) ((word32) r11_423 - 0x04)];
					if (r8d_404 != 0x00)
					{
						Eq_1342 eax_435 = __bswap<word32>(eax_434);
						r10d_409 = eax_435;
					}
					if ((word32) r11_423 + 0x04 > edx_394)
						goto l000000018001A2E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_449 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_460 = r9_379.u2[(uint64) ((word32) r11_449 - 0x04)];
					if (r8d_404 != 0x00)
						esi_460 = __bswap<word32>(esi_460);
					if ((word32) r11_449 + 0x04 > edx_394)
						goto l000000018001A2E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_474 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_485 = r9_379.u2[(uint64) ((word32) r11_474 - 0x04)];
					if (r8d_404 != 0x00)
					{
						Eq_1342 eax_486 = __bswap<word32>(eax_485);
						esi_460 = eax_486;
					}
					if ((word32) r11_474 + 0x04 > edx_394)
						goto l000000018001A2E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r14_500 = (uint64) rcx->u0.t0008.u0;
					if ((word32) r14_500 + 0x04 > edx_394)
						goto l000000018001A2E7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdi_515 = (uint64) r9_379.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					Eq_1342 edi_521 = (word32) rdi_515;
					word32 rdi_32_32_570 = SLICE(rdi_515, word32, 32);
					if (r8d_404 != 0x00)
						rdi_515 = SEQ(rdi_32_32_570, __bswap<word32>(edi_521));
					fn0000000180005050(rcx, r10d_409, &tLoc0158);
					fn0000000180005050(rcx, esi_460, &tLoc0268);
					uint64 r13_567 = (uint64) rcx->u0.t0008.u0;
					uint64 r9_573 = (uint64) (word32) (r14_500 + rdi_515);
					word32 edi_574 = (word32) rdi_515;
					Eq_1342 r13d_627 = (word32) r13_567;
					word32 r9_32_32_587 = SLICE(r9_573, word32, 32);
					if (edi_574 == 0x00)
						r9_573 = SEQ(r9_32_32_587, edi_574);
					r13_390 = r13_567;
					if (fn000000018001A2F0(rcx, rbp_383, (word32) r9_573) == 0x00)
						goto l000000018001A2E7;
					rcx->u0.t0008.u0 = (int32) r13d_627;
					++r15d_380;
				} while (r15d_380 < edx);
			}
l000000018001A298:
l000000018001A2A8:
		}
	}
	word64 qwLoc0290;
	return (word32) fn0000000180023580(rax_11 ^ fp - 0x0288, qwLoc0290);
}

// 000000018001A2F0: Register word32 fn000000018001A2F0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register Eq_1342 r9d)
// Called from:
//      fn0000000180019F30
word32 fn000000018001A2F0(union Eq_3676 * rcx, struct Eq_1142 * rdx, Eq_1342 r9d)
{
	word64 r9;
	r9d = (word32) r9;
	if (rdx == null)
		return 0x00;
	if (r9d == 0x00)
		return (word64) r9d + 1;
	rcx->u0.t0008.u0 = (int32) r9d;
	Eq_1753 eax_22;
	eax_22.u0 = g_t800306F0.u0;
	if (eax_22 == 779)
		return (word32) (fn000000018001A460(rcx, rdx) != 0x00);
	if (eax_22 == 866 || eax_22 == 877)
		return (word32) (fn0000000180012ED0(rcx, rdx) != 0x00);
	Eq_137 r10_63;
	r10_63.u0 = rcx->u0.t0000.u0;
	if (r10_63 == 0x00)
		return 0x00;
	Eq_1342 edx_75;
	edx_75.u0 = rcx->u0.t000C.u0;
	if ((word64) r9d + 4 > edx_75)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) ((word64) r9d + 4);
	if ((word64) r9d + 6 > edx_75)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
	uint64 r9_88 = (uint64) rcx->u0.t0008.u0;
	word16 r11w_199 = (word16) r10_63.u2[(uint64) ((word32) r9_88 - 0x02)];
	if ((&rcx->u0)[1] != 0x00)
		r11w_199 = __rol<word16,byte>(r11w_199, 0x08);
	if ((word32) r9_88 + 0x02 > edx_75)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
	if (rcx->u0.t0008.u0 + 0x04 > edx_75)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rdi_124 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 r9d_131 = r10_63.u2[(uint64) ((word32) rdi_124 - 0x04)];
	if ((&rcx->u0)[1] != 0x00)
		r9d_131 = __bswap<word32>(r9d_131);
	if ((word32) rdi_124 + 0x04 > edx_75)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > edx_75)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > edx_75)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > edx_75)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > edx_75)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 eax_196;
	eax_196.u0 = rcx->u0.t0008.u0;
	if (r9d_131 != 0x00)
		eax_196 = r9d_131;
	rcx->u0.t0008.u0 = (int32) eax_196;
	return (word32) (fn000000018001B7D0(rcx, rdx, (word32) r11w_199) != 0x00);
}

// 000000018001A460: Register word32 fn000000018001A460(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx)
// Called from:
//      fn000000018001A2F0
word32 fn000000018001A460(union Eq_3676 * rcx, struct Eq_1142 * rdx)
{
	ptr64 fp;
	ui64 rax_30 = g_qw80030008 ^ fp - 0x0168;
	word64 qwLoc0170;
	if (rdx == null)
		return (word32) fn0000000180023580(rax_30 ^ fp - 0x0168, qwLoc0170);
	Eq_6279 dwLoc0138_1761;
	dwLoc0138_1761.u0 = 0x00;
	Eq_137 r9_44;
	r9_44.u0 = rcx->u0.t0000.u0;
	if (r9_44 == 0x00)
		return (word32) fn0000000180023580(rax_30 ^ fp - 0x0168, qwLoc0170);
	Eq_1342 eax_56 = rcx->u0.t0008.u0 + 0x04;
	Eq_1342 r8d_57;
	r8d_57.u0 = rcx->u0.t000C.u0;
	if (eax_56 > r8d_57)
		return (word32) fn0000000180023580(rax_30 ^ fp - 0x0168, qwLoc0170);
	rcx->u0.t0008.u0 = (int32) eax_56;
	if ((word64) eax_56 + 4 > r8d_57)
		return (word32) fn0000000180023580(rax_30 ^ fp - 0x0168, qwLoc0170);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r10_69 = (uint64) rcx->u0.t0008.u0;
	Eq_1265 edi_74 = r9_44.u2[(uint64) ((word32) r10_69 - 0x04)];
	Eq_1265 dwLoc0134_1762 = edi_74;
	Eq_1342 r11d_78 = (&rcx->u0)[1];
	if (r11d_78 != 0x00)
		dwLoc0134_1762 = edi_74 >> 0x18 | edi_74 >> 0x08 & 0xFF00 | (edi_74 & 0xFF00) << 0x08 | edi_74 << 0x18;
	if ((word32) r10_69 + 0x04 > r8d_57)
		return (word32) fn0000000180023580(rax_30 ^ fp - 0x0168, qwLoc0170);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > r8d_57)
		return (word32) fn0000000180023580(rax_30 ^ fp - 0x0168, qwLoc0170);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > r8d_57)
		return (word32) fn0000000180023580(rax_30 ^ fp - 0x0168, qwLoc0170);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r10_155 = (uint64) rcx->u0.t0008.u0;
	uint64 r8_160 = (uint64) r9_44.u2[(uint64) ((word32) r10_155 - 0x04)];
	uint32 r8d_166 = (word32) r8_160;
	if (r11d_78 != 0x00)
		r8_160 = (uint64) (r8d_166 >> 0x18 | r8d_166 >> 0x08 & 0xFF00 | (r8d_166 & 0xFF00) << 0x08 | r8d_166 << 0x18);
	Eq_1342 r8d_210 = (word32) r8_160;
	Eq_1342 eax_215 = (word32) (r10_155 + r8_160);
	if (r8d_210 == 0x00)
		eax_215 = r8d_210;
	Eq_53993 tLoc0120;
	tLoc0120.qw0004 = 0x00;
	tLoc0120.dw0000 = 0x00;
	Eq_54004 tLoc58;
	tLoc58.qw0004 = 0x00;
	tLoc58.dw0000 = 0x00;
	if (fn000000018001D5C0(rcx, &tLoc0120) == 0x00 || fn000000018001D5C0(rcx, &tLoc58) == 0x00)
		return (word32) fn0000000180023580(rax_30 ^ fp - 0x0168, qwLoc0170);
	Eq_54025 tLoc0108;
	fn00000001800010C0(&tLoc0108);
	tLoc58.qw0000 = 0x00;
	tLoc58.qw0008 = 0x00;
	int32 esi_405 = 0x00;
	Eq_137 rdi_289;
	rdi_289.u0 = rcx->u0.t0000.u0;
	Eq_54044 r9_290;
	r9_290.u1 = 0x00;
	uint64 r11_321;
	do
	{
		if (rdi_289 == 0x00)
			goto l000000018001ABC8;
		Eq_1342 ecx_306;
		ecx_306.u0 = rcx->u0.t000C.u0;
		if (rcx->u0.t0008.u0 + 0x04 > ecx_306)
			goto l000000018001ABC8;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 r10_312 = (uint64) rcx->u0.t0008.u0;
		if ((word32) r10_312 + 0x04 > ecx_306)
			goto l000000018001ABC8;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		r11_321 = (uint64) rcx->u0.t0008.u0;
		uint64 r8_2686 = (uint64) rdi_289.u2[(uint64) ((word32) r11_321 - 0x04)];
		uint32 r8d_328 = (word32) r8_2686;
		if ((&rcx->u0)[1] != 0x00)
			r8_2686 = (uint64) (r8d_328 >> 0x18 | r8d_328 >> 0x08 & 0xFF00 | (r8d_328 & 0xFF00) << 0x08 | r8d_328 << 0x18);
		Eq_6279 r8d_376 = (word32) r8_2686;
		if (r9_290 == 0x00)
		{
			esi_405 = (word32) r9_290 + 0x05;
			dwLoc0138_1761 = r8d_376;
		}
		if (r8d_376 != 0x00)
			tLoc58.a0000[r9_290] = (word32) r8d_376 + (word32) r10_312;
		r9_290 = (word64) r9_290 + 1;
	} while (r9_290 < 0x05);
	tLoc0108.dw0004 = esi_405;
	if (rdi_289 != 0x00)
	{
		Eq_1342 r15d_431;
		r15d_431.u0 = rcx->u0.t000C.u0;
		if ((word32) r11_321 + 0x04 > r15d_431)
			goto l000000018001ABC8;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		if (rcx->u0.t0008.u0 + 0x04 <= r15d_431)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r8_447 = (uint64) rcx->u0.t0008.u0;
			uint32 r9d_459 = (uint32) rdi_289.u2[(uint64) ((word32) r8_447 - 0x04)];
			Eq_1342 r13d_454 = (&rcx->u0)[1];
			if (r13d_454 != 0x00)
				r9d_459 = r9d_459 >> 0x18 | r9d_459 >> 0x08 & 0xFF00 | (r9d_459 & 0xFF00) << 0x08 | r9d_459 << 0x18;
			if ((word32) r8_447 + 0x04 <= r15d_431)
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r15d_431)
					goto l000000018001ABC8;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 <= r15d_431)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 r9d_533 = r9d_459 + 0x04;
					Eq_1342 eax_540;
					eax_540.u0 = tLoc58.t0000.u0;
					if (eax_540 != 0x00)
						rcx->u0.t0008.u0 = (int32) eax_540;
					int32 ecx_1732 = 0x00;
					if (esi_405 > 0x00)
					{
						do
						{
							if (rcx->u0.t0008.u0 + 0x04 > ((rcx->u0).t000C).u0)
								goto l000000018001ABC8;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							++ecx_1732;
						} while (ecx_1732 < esi_405);
					}
					Eq_1342 eax_587;
					eax_587.u0 = tLoc58.t0004.u0;
					if (eax_587 != 0x00)
						rcx->u0.t0008.u0 = (int32) eax_587;
					int32 r9d_1733 = 0x00;
					int64 r14_602 = (int64) esi_405;
					if (esi_405 > 0x00)
					{
						int64 r11_619 = 0x00;
						struct Eq_54320 * r10_624 = (struct Eq_54320 *) ((char *) &tLoc0108 + 0x0C);
						do
						{
							if (rcx->u0.t0008.u0 + 0x04 > ((rcx->u0).t000C).u0)
								goto l000000018001ABC8;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint32 r8d_650 = (uint32) rdi_289.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							if (r13d_454 != 0x00)
								r8d_650 = r8d_650 >> 0x18 | r8d_650 >> 0x08 & 0xFF00 | (r8d_650 & 0xFF00) << 0x08 | r8d_650 << 0x18;
							if (r9d_1733 < tLoc0108.dw0000)
								r10_624->dw0000 = r8d_650;
							++r9d_1733;
							++r11_619;
							++r10_624;
						} while (r11_619 < r14_602);
					}
					Eq_1342 eax_725;
					eax_725.u0 = tLoc58.t0008.u0;
					if (eax_725 != 0x00)
						rcx->u0.t0008.u0 = (int32) eax_725;
					int32 r9d_1735 = 0x00;
					if (esi_405 > 0x00)
					{
						int64 r11_758 = 0x00;
						struct Eq_54394 * r10_762 = (struct Eq_54394 *) ((char *) &tLoc0108 + 16);
						do
						{
							if (rcx->u0.t0008.u0 + 0x04 > ((rcx->u0).t000C).u0)
								goto l000000018001ABC8;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint32 r8d_788 = (uint32) rdi_289.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							if (r13d_454 != 0x00)
								r8d_788 = r8d_788 >> 0x18 | r8d_788 >> 0x08 & 0xFF00 | (r8d_788 & 0xFF00) << 0x08 | r8d_788 << 0x18;
							if (r9d_1735 < tLoc0108.dw0000)
								r10_762->dw0000 = r8d_788;
							++r9d_1735;
							++r11_758;
							++r10_762;
						} while (r11_758 < r14_602);
					}
					Eq_1342 dwLoc4C;
					if (dwLoc4C != 0x00)
						rcx->u0.t0008.u0 = (int32) dwLoc4C;
					int32 r9d_1739 = 0x00;
					if (esi_405 > 0x00)
					{
						int64 r11_896 = 0x00;
						struct Eq_54466 * r10_900 = (struct Eq_54466 *) ((char *) &tLoc0108 + 20);
						do
						{
							if (rcx->u0.t0008.u0 + 0x04 > ((rcx->u0).t000C).u0)
								goto l000000018001ABC8;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint32 r8d_926 = (uint32) rdi_289.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							if (r13d_454 != 0x00)
								r8d_926 = r8d_926 >> 0x18 | r8d_926 >> 0x08 & 0xFF00 | (r8d_926 & 0xFF00) << 0x08 | r8d_926 << 0x18;
							if (r9d_1739 < tLoc0108.dw0000)
								r10_900->dw0000 = r8d_926;
							++r9d_1739;
							++r11_896;
							++r10_900;
						} while (r11_896 < r14_602);
					}
					if (false)
						rcx->u0.t0008.u0 = 0x00;
					int32 ecx_1040 = 0x00;
					if (esi_405 > 0x00)
					{
						do
						{
							if (rcx->u0.t0008.u0 + 0x04 > ((rcx->u0).t000C).u0)
								goto l000000018001ABC8;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							++ecx_1040;
						} while (ecx_1040 < esi_405);
					}
					if (rcx->u0.t0008.u0 + 0x04 <= r15d_431)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 > r15d_431)
							goto l000000018001ABC8;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (eax_215 != 0x00)
							rcx->u0.t0008.u0 = (int32) eax_215;
						if (rcx->u0.t0008.u0 + 0x04 <= r15d_431)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							if (rcx->u0.t0008.u0 + 0x04 > r15d_431)
								goto l000000018001ABC8;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							if (rcx->u0.t0008.u0 + 0x04 <= r15d_431)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								if (rcx->u0.t0008.u0 + 0x04 > r15d_431)
									goto l000000018001ABC8;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint32 esi_1199 = (uint32) rdi_289.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
								if (r13d_454 != 0x00)
									esi_1199 = esi_1199 >> 0x18 | esi_1199 >> 0x08 & 0xFF00 | (esi_1199 & 0xFF00) << 0x08 | esi_1199 << 0x18;
								if (r9d_533 != 0x00)
									rcx->u0.t0008.u0 = (int32) r9d_533;
								uint64 r9_1254 = (uint64) rcx->u0.t0008.u0;
								if ((word32) r9_1254 == 0x00 || fn0000000180005100(rcx, rdx, dwLoc0134_1762, (word32) r9_1254, dwLoc0138_1761, &tLoc0108) != 0x00)
								{
									Eq_137 rdx_1295;
									rdx_1295.u0 = rcx->u0.t0000.u0;
									if (rdx_1295 == 0x00)
										goto l000000018001ABC8;
									Eq_1342 r10d_1308;
									r10d_1308.u0 = rcx->u0.t000C.u0;
									if (rcx->u0.t0008.u0 + 0x04 <= r10d_1308)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r11_1314 = (uint64) rcx->u0.t0008.u0;
										uint32 r9d_1321 = (uint32) rdx_1295.u2[(uint64) ((word32) r11_1314 - 0x04)];
										if ((&rcx->u0)[1] != 0x00)
											r9d_1321 = r9d_1321 << 0x18 | r9d_1321 >> 0x18 | r9d_1321 >> 0x08 & 0xFF00 | (r9d_1321 & 0xFF00) << 0x08;
										if (r9d_1321 == 0x00)
										{
											if ((word32) r11_1314 + 0x04 > r10d_1308)
												goto l000000018001ABC8;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										}
										if (esi_1199 == 0x00 || fn0000000180001E80(rdx, (uint64) esi_1199) != 0x00)
										{
											uint32 r14d_1594 = 0x00;
											if (esi_1199 != 0x00)
											{
												int64 r10_1445 = 0x00;
												do
												{
													Eq_137 rdx_1448;
													rdx_1448.u0 = rcx->u0.t0000.u0;
													if (rdx_1448 == 0x00)
														goto l000000018001ABC8;
													Eq_1342 r11d_1461;
													r11d_1461.u0 = rcx->u0.t000C.u0;
													if (rcx->u0.t0008.u0 + 0x02 > r11d_1461)
														goto l000000018001ABC8;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
													uint64 r9_1467 = (uint64) rcx->u0.t0008.u0;
													cu16 r8w_1479 = (cu16) rdx_1448.u2[(uint64) ((word32) r9_1467 - 0x02)];
													Eq_1342 edi_1474 = (&rcx->u0)[1];
													if (edi_1474 != 0x00)
														r8w_1479 = r8w_1479 >> 0x08 | r8w_1479 << 0x08;
													if ((word32) r9_1467 + 0x02 > r11d_1461)
														goto l000000018001ABC8;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
													uint64 r15_1501 = (uint64) rcx->u0.t0008.u0;
													cu16 r9w_1512 = (cu16) rdx_1448.u2[(uint64) ((word32) r15_1501 - 0x02)];
													if (edi_1474 != 0x00)
														r9w_1512 = r9w_1512 >> 0x08 | r9w_1512 << 0x08;
													if ((word32) r15_1501 + 0x02 > r11d_1461)
														goto l000000018001ABC8;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
													cu16 dx_1546 = (cu16) rdx_1448.u2[(uint64) (rcx->u0.t0008.u0 + ~0x01)];
													if (edi_1474 != 0x00)
														dx_1546 = dx_1546 >> 0x08 | dx_1546 << 0x08;
													struct Eq_1145 * rcx_1561 = rdx->ptr0008;
													if (rcx_1561 != null)
													{
														*((word32) &rcx_1561->a0004[0] + r10_1445) = (word32[]) (word32) r8w_1479;
														*((word32) &rdx->ptr0008->a0008[0] + r10_1445) = (word32[]) (word32) r9w_1512;
														*((word32) &rdx->ptr0008->a000C[0] + r10_1445) = (word32[]) (word32) dx_1546;
													}
													++r14d_1594;
													r10_1445 += 0x14;
												} while (r14d_1594 < esi_1199);
											}
											uint64 rax_1617 = (uint64) rcx->u0.t0008.u0;
											uint64 rcx_1623 = (uint64) ((word32) rax_1617 & ~0x03);
											Eq_1342 ecx_1632 = (word32) rcx_1623;
											Eq_1342 eax_1633 = (word32) rcx_1623 + 0x04;
											if (((byte) rax_1617 & 0x03) <= 0x00)
												eax_1633 = ecx_1632;
											rcx->u0.t0008.u0 = (int32) eax_1633;
										}
										goto l000000018001ABC8;
									}
								}
							}
						}
					}
				}
			}
		}
	}
l000000018001ABC8:
	fn00000001800235AC(0x0A);
	return (word32) fn0000000180023580(rax_30 ^ fp - 0x0168, qwLoc0170);
}

// 000000018001AC20: Register word32 fn000000018001AC20(Register (ptr64 Eq_3676) rcx, Register word32 r8d)
// Called from:
//      fn00000001800156B0
word32 fn000000018001AC20(union Eq_3676 * rcx, word32 r8d)
{
	ptr64 fp;
	word64 r8;
	r8d = (word32) r8;
	uint64 rdi_14 = (uint64) r8d;
	ui64 rax_10 = g_qw80030008 ^ fp - 600;
	Eq_1342 edi_21 = (word32) rdi_14;
	word64 qwLoc0260;
	if (r8d == 0x00)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	rcx->u0.t0008.u0 = (int32) edi_21;
	Eq_54956 tLoc0238;
	memset(&tLoc0238, 0, 0x0104);
	Eq_54966 tLoc0128;
	memset(&tLoc0128, 0, 0x0104);
	Eq_137 r9_35;
	r9_35.u0 = rcx->u0.t0000.u0;
	if (r9_35 == 0x00)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	uint64 r11_43 = (uint64) ((word32) rdi_14 + 0x04);
	Eq_1342 edx_45;
	edx_45.u0 = rcx->u0.t000C.u0;
	Eq_1342 r11d_44 = (word32) r11_43;
	if (r11d_44 > edx_45)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	Eq_1342 r8d_55 = (&rcx->u0)[1];
	rcx->u0.t0008.u0 = (int32) r11d_44;
	Eq_1342 r10d_225 = r9_35.u2[(uint64) ((word32) r11_43 - 0x04)];
	if (r8d_55 != 0x00)
		r10d_225 = __bswap<word32>(r10d_225);
	if ((word32) r11_43 + 0x04 > edx_45)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_74 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 eax_85 = r9_35.u2[(uint64) ((word32) r11_74 - 0x04)];
	if (r8d_55 != 0x00)
	{
		Eq_1342 eax_86 = __bswap<word32>(eax_85);
		r10d_225 = eax_86;
	}
	if ((word32) r11_74 + 0x04 > edx_45)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_100 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 edi_111 = r9_35.u2[(uint64) ((word32) r11_100 - 0x04)];
	if (r8d_55 != 0x00)
		edi_111 = __bswap<word32>(edi_111);
	if ((word32) r11_100 + 0x04 > edx_45)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_125 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 eax_136 = r9_35.u2[(uint64) ((word32) r11_125 - 0x04)];
	if (r8d_55 != 0x00)
	{
		Eq_1342 eax_137 = __bswap<word32>(eax_136);
		edi_111 = eax_137;
	}
	if ((word32) r11_125 + 0x04 > edx_45)
		return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r14_173 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 esi_184 = r9_35.u2[(uint64) ((word32) r14_173 - 0x04)];
	if (r8d_55 != 0x00)
		esi_184 = __bswap<word32>(esi_184);
	if ((word32) r14_173 + 0x04 <= edx_45)
	{
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		Eq_1342 r9d_216 = r9_35.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
		if (r8d_55 != 0x00)
			r9d_216 = __bswap<word32>(r9d_216);
		fn0000000180005050(rcx, r10d_225, &tLoc0238);
		fn0000000180005050(rcx, edi_111, &tLoc0128);
		Eq_1342 edi_270;
		edi_270.u2 = (word64) r9d_216 + (word32) r14_173;
		if (r9d_216 == 0x00)
			edi_270 = r9d_216;
		struct Eq_14187 * rax_274 = fn0000000180001A00(&g_t800306F0);
		if (rax_274 != null)
		{
			int64 r8_290 = rax_274 - &tLoc0238;
			union Eq_55181 * rdx_292 = &tLoc0238;
			char cl_297;
			do
			{
				cl_297 = rdx_292->u0;
				(&rdx_292->u0)[r8_290] = cl_297;
				rdx_292 = (union Eq_55181 *) ((char *) rdx_292 + 1);
			} while (cl_297 != 0x00);
			word64 rax_309 = rax_274 - &tLoc0128;
			union Eq_55196 * rdx_311 = &tLoc0128;
			char al_317;
			do
			{
				al_317 = rdx_311->u0;
				(&rdx_311->u0)[rax_309 + 260] = al_317;
				rdx_311 = (union Eq_55196 *) ((char *) rdx_311 + 1);
			} while (al_317 != 0x00);
			rax_274->dw0514 = ~0x00;
		}
		g_dw80030748 = 0x00;
		fn000000018001AE80(rcx, 0x00, edi_270, esi_184);
	}
	return (word32) fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
}

// 000000018001AE80: void fn000000018001AE80(Register (ptr64 Eq_3676) rcx, Register word32 edx, Register Eq_1342 r8d, Register Eq_1342 r9d)
// Called from:
//      fn000000018001AC20
//      fn000000018001AE80
void fn000000018001AE80(union Eq_3676 * rcx, word32 edx, Eq_1342 r8d, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_12 = g_qw80030008 ^ fp - 1000;
	if (r8d != 0x00 && (r8d >= 100 && r8d < ((rcx->u0).t000C).u0))
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		word32 eax_39 = g_dw80030728 - 0x01;
		Eq_1342 dwLoc03AC_772;
		dwLoc03AC_772.u0 = 0x00;
		if (r9d != 0x00)
		{
			Eq_1342 ebx_712;
			do
			{
				Eq_55430 tLoc0358;
				memset(&tLoc0358, 0, 0x0104);
				Eq_55434 tLoc0248;
				memset(&tLoc0248, 0, 0x0104);
				Eq_55438 tLoc0138;
				memset(&tLoc0138, 0, 0x0104);
				Eq_137 rdx_67;
				rdx_67.u0 = rcx->u0.t0000.u0;
				if (rdx_67 == 0x00)
				{
l000000018001B332:
					goto l000000018001B309;
				}
				Eq_1342 r9d_80;
				r9d_80.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r9d_80)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_86 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r8d_93 = (&rcx->u0)[1];
				Eq_1342 r10d_125 = rdx_67.u2[(uint64) ((word32) r11_86 - 0x04)];
				if (r8d_93 != 0x00)
					r10d_125 = __bswap<word32>(r10d_125);
				if ((word32) r11_86 + 0x04 > r9d_80)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_112 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_123 = rdx_67.u2[(uint64) ((word32) r11_112 - 0x04)];
				if (r8d_93 != 0x00)
				{
					Eq_1342 eax_124 = __bswap<word32>(eax_123);
					r10d_125 = eax_124;
				}
				if ((word32) r11_112 + 0x04 > r9d_80)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_138 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 ebx_149 = rdx_67.u2[(uint64) ((word32) r11_138 - 0x04)];
				if (r8d_93 != 0x00)
					ebx_149 = __bswap<word32>(ebx_149);
				if ((word32) r11_138 + 0x04 > r9d_80)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_163 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_174 = rdx_67.u2[(uint64) ((word32) r11_163 - 0x04)];
				if (r8d_93 != 0x00)
				{
					Eq_1342 eax_175 = __bswap<word32>(eax_174);
					ebx_149 = eax_175;
				}
				if ((word32) r11_163 + 0x04 > r9d_80)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_189 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 esi_200 = rdx_67.u2[(uint64) ((word32) r11_189 - 0x04)];
				if (r8d_93 != 0x00)
					esi_200 = __bswap<word32>(esi_200);
				if ((word32) r11_189 + 0x04 > r9d_80)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 eax_226 = rdx_67.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if (r8d_93 != 0x00)
					eax_226 = __bswap<word32>(eax_226);
				uint64 rdx_242 = (uint64) r10d_125;
				if (r8d_93 != 0x00)
					esi_200 = eax_226;
				fn0000000180005050(rcx, (word32) rdx_242, &tLoc0358);
				fn0000000180005050(rcx, ebx_149, &tLoc0248);
				fn0000000180005050(rcx, esi_200, &tLoc0138);
				Eq_55442 tLoc0390;
				tLoc0390.qw0004 = 0x00;
				tLoc0390.dw0000 = 0x00;
				Eq_55453 tLoc0370;
				tLoc0370.qw0008 = 0x00;
				tLoc0370.qw0000 = 0x00;
				Eq_55464 tLoc0380;
				tLoc0380.qw0004 = 0x00;
				tLoc0380.dw0000 = 0x00;
				if (fn000000018001D5C0(rcx, &tLoc0390) == 0x00 || (fn000000018001D710(rcx, &tLoc0370) == 0x00 || (fn000000018001D5C0(rcx, &tLoc0380) == 0x00 || ((rcx->u0).t0000).u0 == 0x00)))
					goto l000000018001B332;
				Eq_1342 ecx_371;
				ecx_371.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > ecx_371)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > ecx_371)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				++g_dw80030748;
				Eq_137 r8_388;
				r8_388.u0 = rcx->u0.t0000.u0;
				if (r8_388 == 0x00)
					goto l000000018001B332;
				Eq_1342 edx_401;
				edx_401.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > edx_401)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_407 = (uint64) rcx->u0.t0008.u0;
				word32 r10d_410 = (word32) r10_407;
				Eq_1342 r9d_418 = (&rcx->u0)[1];
				if ((word32) r10_407 + 0x04 > edx_401)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_437 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_443 = r8_388.u2[(uint64) ((word32) r10_437 - 0x04)];
				Eq_1342 dwLoc03B8_776 = eax_443;
				if (r9d_418 != 0x00)
					dwLoc03B8_776 = __bswap<word32>(eax_443);
				if ((word32) r10_437 + 0x04 > edx_401)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 eax_466;
				eax_466.u0 = rcx->u0.t0008.u0;
				if ((word64) eax_466 + 4 > edx_401)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_477 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_483 = r8_388.u2[(uint64) ((word32) r10_477 - 0x04)];
				Eq_1342 dwLoc03B0_779 = eax_483;
				if (r9d_418 != 0x00)
					dwLoc03B0_779 = __bswap<word32>(eax_483);
				if ((word32) r10_477 + 0x04 > edx_401)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > edx_401)
					goto l000000018001B332;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				struct Eq_14187 * rax_523 = fn0000000180001A00(&g_t800306F0);
				if (rax_523 != null)
				{
					int64 rax_540 = rax_523 - &tLoc0358;
					union Eq_55682 * rdx_542 = &tLoc0358;
					char cl_547;
					do
					{
						cl_547 = rdx_542->u0;
						(&rdx_542->u0)[rax_540] = cl_547;
						rdx_542 = (union Eq_55682 *) ((char *) rdx_542 + 1);
					} while (cl_547 != 0x00);
					word64 rdx_559 = rax_523 - &tLoc0248;
					union Eq_55697 * rcx_561 = &tLoc0248;
					char al_566;
					do
					{
						al_566 = rcx_561->u0;
						(&rcx_561->u0)[rdx_559 + 260] = al_566;
						rcx_561 = (union Eq_55697 *) ((char *) rcx_561 + 1);
					} while (al_566 != 0x00);
					word64 rdx_578 = rax_523 - &tLoc0138;
					union Eq_55714 * rcx_580 = &tLoc0138;
					char al_585;
					do
					{
						al_585 = rcx_580->u0;
						(&rcx_580->u0)[rdx_578 + 520] = al_585;
						rcx_580 = (union Eq_55714 *) ((char *) rcx_580 + 1);
					} while (al_585 != 0x00);
					rax_523->r0520 = tLoc0390.r0000;
					word128 xmm0_602 = (word128) tLoc0370;
					rax_523->dw0514 = eax_39;
					word32 eax_608 = tLoc0390.dw0008;
					rax_523->ow0538 = xmm0_602;
					rax_523->dw0528 = eax_608;
					word32 eax_614 = tLoc0380.dw0008;
					rax_523->r052C = tLoc0380.r0000;
					rax_523->dw0534 = eax_614;
				}
				Eq_1342 r8d_641;
				r8d_641.u2 = (word64) dwLoc03B8_776 + r10d_410;
				Eq_1342 ebx_703;
				ebx_703.u0 = rcx->u0.t0008.u0;
				if (dwLoc03B8_776 == 0x00)
					r8d_641 = dwLoc03B8_776;
				fn000000018001AE80(rcx, edx + 0x01, r8d_641, r9d);
				uint64 r9_679 = (uint64) (eax_466 + dwLoc03B0_779);
				word32 r9_32_32_686 = SLICE(r9_679, word32, 32);
				if (dwLoc03B0_779 == 0x00)
					r9_679 = SEQ(r9_32_32_686, dwLoc03B0_779);
				fn000000018001B340(rcx, rax_523, (word32) r9_679);
				rcx->u0.t0008.u0 = (int32) ebx_703;
				ebx_712.u2 = (word64) dwLoc03AC_772 + 1;
				dwLoc03AC_772 = ebx_712;
			} while (ebx_712 < r9d);
		}
l000000018001B309:
	}
	word64 qwLoc03F0;
	fn0000000180023580(rax_12 ^ fp - 1000, qwLoc03F0);
}

// 000000018001B340: void fn000000018001B340(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_14187) rdx, Register Eq_1342 r9d)
// Called from:
//      fn000000018001AE80
void fn000000018001B340(union Eq_3676 * rcx, struct Eq_14187 * rdx, Eq_1342 r9d)
{
	word64 r9;
	r9d = (word32) r9;
	if (r9d == 0x00 || (r9d < 100 || r9d >= ((rcx->u0).t000C).u0))
		return;
	rcx->u0.t0008.u0 = (int32) r9d;
	++g_dw80030748;
	Eq_137 r9_25;
	r9_25.u0 = rcx->u0.t0000.u0;
	if (r9_25 == 0x00)
		return;
	uint64 r8_36 = (uint64) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 r10d_38;
	r10d_38.u0 = rcx->u0.t000C.u0;
	Eq_1342 r8d_37 = (word32) r8_36;
	if (r8d_37 > r10d_38)
		return;
	Eq_1342 r11d_48 = (&rcx->u0)[1];
	rcx->u0.t0008.u0 = (int32) r8d_37;
	Eq_1342 edx_53 = r9_25.u2[(uint64) ((word32) r8_36 - 0x04)];
	if (r11d_48 != 0x00)
		edx_53 = __bswap<word32>(edx_53);
	if ((word32) r8_36 + 0x04 > r10d_38)
		return;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rax_100 = (uint64) r9_25.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
	Eq_1342 eax_92 = (word32) rax_100;
	word32 rax_32_32_101 = SLICE(rax_100, word32, 32);
	if (r11d_48 != 0x00)
		rax_100 = SEQ(rax_32_32_101, __bswap<word32>(eax_92));
	rdx->t0518.u0 = (int32) edx_53;
	uint64 r9_104 = (uint64) (word32) (r8_36 + rax_100);
	word32 eax_108 = (word32) rax_100;
	word32 r9_32_32_118 = SLICE(r9_104, word32, 32);
	Eq_1342 ebx_137;
	ebx_137.u0 = rcx->u0.t0008.u0;
	if (eax_108 == 0x00)
		r9_104 = SEQ(r9_32_32_118, eax_108);
	fn000000018001B420(rcx, rdx, (word32) r9_104, edx_53);
	rcx->u0.t0008.u0 = (int32) ebx_137;
}

// 000000018001B420: void fn000000018001B420(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_14187) rdx, Register Eq_1342 r9d, Stack Eq_1342 dwArg28)
// Called from:
//      fn000000018001B340
void fn000000018001B420(union Eq_3676 * rcx, struct Eq_14187 * rdx, Eq_1342 r9d, Eq_1342 dwArg28)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_14 = g_qw80030008 ^ fp - 0x0278;
	if (r9d == 0x00)
	{
l000000018001B63C:
		word64 qwLoc0280;
		fn0000000180023580(rax_14 ^ fp - 0x0278, qwLoc0280);
		return;
	}
	if (r9d >= 100)
	{
		Eq_1342 esi_34;
		esi_34.u0 = rcx->u0.t000C.u0;
		if (r9d >= esi_34)
			goto l000000018001B62F;
		rcx->u0.t0008.u0 = (int32) r9d;
		if (dwArg28 == 0x03)
		{
			Eq_55974 tLoc0248;
			memset(&tLoc0248, 0, 0x0104);
			Eq_137 r8_46;
			r8_46.u0 = rcx->u0.t0000.u0;
			if (r8_46 != 0x00)
			{
				uint64 rbx_52 = (uint64) ((word64) r9d + 4);
				Eq_1342 ebx_53 = (word32) rbx_52;
				if (ebx_53 <= esi_34)
				{
					Eq_1342 edx_63 = (&rcx->u0)[1];
					rcx->u0.t0008.u0 = (int32) ebx_53;
					Eq_1342 r10d_209 = r8_46.u2[(uint64) ((word32) rbx_52 - 0x04)];
					if (edx_63 != 0x00)
						r10d_209 = __bswap<word32>(r10d_209);
					if ((word32) rbx_52 + 0x04 <= esi_34)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r9_82 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 eax_93 = r8_46.u2[(uint64) ((word32) r9_82 - 0x04)];
						if (edx_63 != 0x00)
						{
							Eq_1342 eax_94 = __bswap<word32>(eax_93);
							r10d_209 = eax_94;
						}
						if ((word32) r9_82 + 0x04 <= esi_34)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r11_108 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 r9d_119 = r8_46.u2[(uint64) ((word32) r11_108 - 0x04)];
							if (edx_63 != 0x00)
								r9d_119 = __bswap<word32>(r9d_119);
							if ((word32) r11_108 + 0x04 <= esi_34)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 r11_133 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 eax_144 = r8_46.u2[(uint64) ((word32) r11_133 - 0x04)];
								if (edx_63 != 0x00)
								{
									Eq_1342 eax_145 = __bswap<word32>(eax_144);
									r9d_119 = eax_145;
								}
								if ((word32) r11_133 + 0x04 <= esi_34)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint64 r11_159 = (uint64) rcx->u0.t0008.u0;
									Eq_1342 ebx_170 = r8_46.u2[(uint64) ((word32) r11_159 - 0x04)];
									if (edx_63 != 0x00)
										ebx_170 = __bswap<word32>(ebx_170);
									if ((word32) r11_159 + 0x04 <= esi_34)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										Eq_1342 eax_196 = r8_46.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
										if (edx_63 != 0x00)
											eax_196 = __bswap<word32>(eax_196);
										uint64 rdx_212 = (uint64) r10d_209;
										if (edx_63 != 0x00)
											ebx_170 = eax_196;
										Eq_56155 tLoc0138;
										fn0000000180005050(rcx, (word32) rdx_212, &tLoc0138);
										fn0000000180005050(rcx, r9d_119, &tLoc0248);
										fn0000000180005050(rcx, ebx_170, &tLoc0138);
										Eq_137 r9_269;
										r9_269.u0 = rcx->u0.t0000.u0;
										if (r9_269 != 0x00)
										{
											Eq_1342 ecx_282;
											ecx_282.u0 = rcx->u0.t000C.u0;
											if (rcx->u0.t0008.u0 + 0x04 <= ecx_282)
											{
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
												uint64 r10_288 = (uint64) rcx->u0.t0008.u0;
												if ((word32) r10_288 + 0x04 <= ecx_282)
												{
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													uint64 r8_309 = (uint64) r9_269.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
													Eq_1342 r8d_311 = (word32) r8_309;
													word32 r8_32_32_347 = SLICE(r8_309, word32, 32);
													if ((&rcx->u0)[1] != 0x00)
														r8_309 = SEQ(r8_32_32_347, __bswap<word32>(r8d_311));
													word32 r8d_351 = (word32) r8_309;
													ui64 r9_324 = rdx - &tLoc0248;
													union Eq_56229 * rcx_326 = &tLoc0248;
													char al_331;
													do
													{
														al_331 = rcx_326->u0;
														(&rcx_326->u0)[r9_324 + 780] = al_331;
														rcx_326 = (union Eq_56229 *) ((char *) rcx_326 + 1);
													} while (al_331 != 0x00);
													uint64 r9_350 = (uint64) (word32) (r10_288 + r8_309);
													Eq_1342 ebx_378;
													ebx_378.u0 = rcx->u0.t0008.u0;
													word32 r9_32_32_361 = SLICE(r9_350, word32, 32);
													if (r8d_351 == 0x00)
														r9_350 = SEQ(r9_32_32_361, r8d_351);
													fn000000018001B660(rcx, rdx, (word32) r9_350);
													rcx->u0.t0008.u0 = (int32) ebx_378;
													goto l000000018001B62F;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
l000000018001B634:
			goto l000000018001B63C;
		}
	}
l000000018001B62F:
	goto l000000018001B634;
}

// 000000018001B660: void fn000000018001B660(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_14187) rdx, Register Eq_1342 r9d)
// Called from:
//      fn000000018001B420
void fn000000018001B660(union Eq_3676 * rcx, struct Eq_14187 * rdx, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_14 = g_qw80030008 ^ fp - 616;
	if (r9d == 0x00)
	{
l000000018001B7AF:
		word64 qwLoc0270;
		fn0000000180023580(rax_14 ^ fp - 616, qwLoc0270);
		return;
	}
	if (r9d < 100)
	{
l000000018001B7A2:
		goto l000000018001B7A7;
	}
	else
	{
		Eq_1342 esi_34;
		esi_34.u0 = rcx->u0.t000C.u0;
		if (r9d >= esi_34)
			goto l000000018001B7A2;
		rcx->u0.t0008.u0 = (int32) r9d;
		Eq_56299 tLoc0248;
		memset(&tLoc0248, 0, 0x0104);
		Eq_137 r10_44;
		r10_44.u0 = rcx->u0.t0000.u0;
		if (r10_44 != 0x00)
		{
			uint64 rdi_50 = (uint64) ((word64) r9d + 4);
			Eq_1342 edi_51 = (word32) rdi_50;
			if (edi_51 <= esi_34)
			{
				Eq_1342 r8d_61 = (&rcx->u0)[1];
				rcx->u0.t0008.u0 = (int32) edi_51;
				uint64 rdx_164 = (uint64) r10_44.u2[(uint64) ((word32) rdi_50 - 0x04)];
				Eq_1342 edx_66 = (word32) rdx_164;
				word32 rdx_32_32_166 = SLICE(rdx_164, word32, 32);
				if (r8d_61 != 0x00)
					rdx_164 = SEQ(rdx_32_32_166, __bswap<word32>(edx_66));
				word32 rdx_32_32_168 = SLICE(rdx_164, word32, 32);
				if ((word32) rdi_50 + 0x04 <= esi_34)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_80 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_91 = r10_44.u2[(uint64) ((word32) r9_80 - 0x04)];
					if (r8d_61 != 0x00)
					{
						Eq_1342 eax_92 = __bswap<word32>(eax_91);
						rdx_164 = SEQ(rdx_32_32_168, eax_92);
					}
					if ((word32) r9_80 + 0x04 <= esi_34)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r11_106 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 r9d_117 = r10_44.u2[(uint64) ((word32) r11_106 - 0x04)];
						if (r8d_61 != 0x00)
							r9d_117 = __bswap<word32>(r9d_117);
						if ((word32) r11_106 + 0x04 <= esi_34)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 eax_149 = r10_44.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							if (r8d_61 != 0x00)
								eax_149 = __bswap<word32>(eax_149);
							if (r8d_61 != 0x00)
								r9d_117 = eax_149;
							Eq_56430 tLoc0138;
							fn0000000180005050(rcx, (word32) rdx_164, &tLoc0138);
							fn0000000180005050(rcx, r9d_117, &tLoc0248);
							int64 rbp_205 = rdx - &tLoc0248;
							union Eq_56439 * rcx_207 = &tLoc0248;
							char al_212;
							do
							{
								al_212 = rcx_207->u0.b0000;
								(&(&rcx_207->u0 + 1040)->u0)[rbp_205] = (struct Eq_75633) al_212;
								rcx_207 = (union Eq_56439 *) ((char *) rcx_207 + 1);
							} while (al_212 != 0x00);
							goto l000000018001B7A2;
						}
					}
				}
			}
		}
l000000018001B7A7:
		goto l000000018001B7AF;
	}
}

// 000000018001B7D0: Register word32 fn000000018001B7D0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register up32 r9d)
// Called from:
//      fn000000018001A2F0
word32 fn000000018001B7D0(union Eq_3676 * rcx, struct Eq_1142 * rdx, up32 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_30 = g_qw80030008 ^ fp - 1448;
	word64 qwLoc05B0;
	if (rdx != null)
	{
		Eq_137 r11_44;
		r11_44.u0 = rcx->u0.t0000.u0;
		if (r11_44 != 0x00)
		{
			Eq_56473 rax_50;
			rax_50.u0 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 edi_55 = (word32) rax_50 + 0x04;
			Eq_1342 r8d_56;
			r8d_56.u0 = rcx->u0.t000C.u0;
			if (edi_55 <= r8d_56)
			{
				uint64 r9_103 = (uint64) *(rax_50 + r11_44);
				uint32 r9d_68 = (word32) r9_103;
				Eq_1342 esi_63 = (&rcx->u0)[1];
				if (esi_63 != 0x00)
					r9_103 = (uint64) (r9d_68 >> 0x18 | r9d_68 >> 0x08 & 0xFF00 | (r9d_68 & 0xFF00) << 0x08 | r9d_68 << 0x18);
				if ((word32) r9_103 == 0x00)
					rcx->u0.t0008.u0 = (int32) edi_55;
				up32 ecx_151 = 0x00;
				if (r9d != 0x00)
				{
					do
					{
						if (rcx->u0.t0008.u0 + 0x04 > r8d_56)
							goto l000000018001C99D;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 > r8d_56)
							goto l000000018001C99D;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						++ecx_151;
					} while (ecx_151 < r9d);
				}
				if (rcx->u0.t0008.u0 + 0x04 <= r8d_56)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 <= r8d_56)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r9_187 = (uint64) rcx->u0.t0008.u0;
						Eq_1265 r10d_196 = r11_44.u2[(uint64) ((word32) r9_187 - 0x04)];
						Eq_1265 dwLoc0560_3864 = r10d_196;
						if (esi_63 != 0x00)
							dwLoc0560_3864 = r10d_196 >> 0x18 | r10d_196 >> 0x08 & 0xFF00 | (r10d_196 & 0xFF00) << 0x08 | r10d_196 << 0x18;
						Eq_1753 eax_253;
						eax_253.u0 = g_t800306F0.u0;
						if (eax_253 != 0x03D9 && eax_253 != 990)
						{
l000000018001B94C:
							Eq_56622 tLoc0508;
							fn00000001800010C0(&tLoc0508);
							Eq_56625 r10d_454;
							r10d_454.u0 = 0x00;
							Eq_137 rdi_307;
							rdi_307.u0 = rcx->u0.t0000.u0;
							Eq_56631 r11_308;
							r11_308.u1 = 0x00;
							uint64 r15_394;
							do
							{
								if (rdi_307 == 0x00)
									goto l000000018001C97E;
								Eq_1342 r8d_324;
								r8d_324.u0 = rcx->u0.t000C.u0;
								if (rcx->u0.t0008.u0 + 0x04 > r8d_324)
									goto l000000018001C97E;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 rsi_330 = (uint64) rcx->u0.t0008.u0;
								Eq_56625 r9d_342 = rdi_307.u2[(uint64) ((word32) rsi_330 - 0x04)];
								Eq_1342 r14d_337 = (&rcx->u0)[1];
								if (r14d_337 != 0x00)
									r9d_342 = r9d_342 >> 0x18 | r9d_342 >> 0x08 & 0xFF00 | (r9d_342 & 0xFF00) << 0x08 | r9d_342 << 0x18;
								if ((word32) rsi_330 + 0x04 > r8d_324)
									goto l000000018001C97E;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								r15_394 = (uint64) rcx->u0.t0008.u0;
								uint64 r8_399 = (uint64) rdi_307.u2[(uint64) ((word32) r15_394 - 0x04)];
								uint32 r8d_405 = (word32) r8_399;
								if (r14d_337 != 0x00)
									r8_399 = (uint64) (r8d_405 >> 0x18 | r8d_405 >> 0x08 & 0xFF00 | (r8d_405 & 0xFF00) << 0x08 | r8d_405 << 0x18);
								word32 r8d_456 = (word32) r8_399;
								if (r11_308 == 0x00)
									r10d_454 = r9d_342;
								if (r8d_456 != 0x00)
									(fp - 1112)[r11_308] = r8d_456 + (word32) rsi_330;
								r11_308 = (word64) r11_308 + 1;
							} while (r11_308 < 0x05);
							tLoc0508.t0004.u0 = (int32) r10d_454;
							if (rdi_307 != 0x00)
							{
								Eq_1342 r9d_507;
								r9d_507.u0 = rcx->u0.t000C.u0;
								if ((word32) r15_394 + 0x04 > r9d_507)
									goto l000000018001C97E;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								if (rcx->u0.t0008.u0 + 0x04 <= r9d_507)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									Eq_1342 eax_532;
									eax_532.u0 = rcx->u0.t0008.u0;
									Eq_1753 ecx_526;
									ecx_526.u0 = g_t800306F0.u0;
									if (ecx_526 == 0x03D9 || ecx_526 == 990)
									{
										if ((word64) eax_532 + 4 > r9d_507)
											goto l000000018001C97E;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										eax_532.u0 = rcx->u0.t0008.u0;
									}
									if ((word64) eax_532 + 4 <= r9d_507)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r8_559 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 esi_566 = rdi_307.u2[(uint64) ((word32) r8_559 - 0x04)];
										Eq_1342 dwLoc0568_3869 = esi_566;
										Eq_1342 r11d_580 = (&rcx->u0)[1];
										if (r11d_580 != 0x00)
											dwLoc0568_3869 = esi_566 >> 0x18 | esi_566 >> 0x08 & 0xFF00 | (esi_566 & 0xFF00) << 0x08 | esi_566 << 0x18;
										if ((word32) r8_559 + 0x04 <= r9d_507)
										{
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											if (rcx->u0.t0008.u0 + 0x04 > r9d_507)
												goto l000000018001C97E;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 rsi_647 = (uint64) rcx->u0.t0008.u0;
											uint32 r14d_653 = (uint32) rdi_307.u2[(uint64) ((word32) rsi_647 - 0x04)];
											uint32 dwLoc0554_3871 = r14d_653;
											if (r11d_580 != 0x00)
												dwLoc0554_3871 = (r14d_653 & 0xFF00) << 0x08 | r14d_653 << 0x18 | r14d_653 >> 0x18 | r14d_653 >> 0x08 & 0xFF00;
											if ((word32) rsi_647 + 0x04 <= r9d_507)
											{
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
												uint32 r8d_726 = (uint32) rdi_307.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
												uint32 dwLoc0550_3873 = r8d_726;
												if (r11d_580 != 0x00)
													dwLoc0550_3873 = r8d_726 >> 0x18 | r8d_726 >> 0x08 & 0xFF00 | (r8d_726 & 0xFF00) << 0x08 | r8d_726 << 0x18;
												int32 ecx_3809;
												Eq_1342 eax_806;
												for (ecx_3809 = 0x00; ecx_3809 < 0x04; ++ecx_3809)
												{
													if (rcx->u0.t0008.u0 + 0x04 > ((rcx->u0).t000C).u0)
														goto l000000018001C97E;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													eax_806.u0 = rcx->u0.t0008.u0;
												}
												if ((word64) eax_806 + 4 <= r9d_507)
												{
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													uint64 r8_817 = (uint64) rcx->u0.t0008.u0;
													uint32 r14d_2169 = (uint32) rdi_307.u2[(uint64) ((word32) r8_817 - 0x04)];
													word32 r8d_940 = (word32) r8_817;
													uint32 dwLoc0558_3875 = r14d_2169;
													if (r11d_580 != 0x00)
													{
														r14d_2169 = r14d_2169 >> 0x18 | r14d_2169 >> 0x08 & 0xFF00 | (r14d_2169 & 0xFF00) << 0x08 | r14d_2169 << 0x18;
														dwLoc0558_3875 = r14d_2169;
													}
													if ((word32) r8_817 + 0x04 <= r9d_507)
													{
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														uint32 esi_898 = (uint32) rdi_307.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
														if (r11d_580 != 0x00)
															esi_898 = esi_898 >> 0x18 | esi_898 >> 0x08 & 0xFF00 | (esi_898 & 0xFF00) << 0x08 | esi_898 << 0x18;
														Eq_57059 tLoc0548;
														tLoc0548.qw0004 = 0x00;
														tLoc0548.dw0000 = 0x00;
														Eq_57070 tLoc0530;
														tLoc0530.qw0004 = 0x00;
														tLoc0530.dw0000 = 0x00;
														Eq_1342 esi_943 = esi_898 + r8d_940;
														if (fn000000018001D5C0(rcx, &tLoc0548) != 0x00 && fn000000018001D5C0(rcx, &tLoc0530) != 0x00)
														{
															if (false)
																rcx->u0.t0008.u0 = 0x00;
															Eq_6279 r15d_1117;
															r15d_1117.u0 = 0x00;
															Eq_6279 dwLoc0564_3891;
															dwLoc0564_3891.u0 = 0x00;
															if (r10d_454 != 0x00)
															{
																Eq_137 rdi_1026;
																rdi_1026.u0 = rcx->u0.t0000.u0;
																ui64 r9_1043 = 0x00;
																uint64 r11_1141 = 0x00;
																do
																{
																	int32 r11d_1127 = (word32) r11_1141;
																	if (rdi_1026 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																		goto l000000018001C97E;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	Eq_6279 r8d_1070 = rdi_1026.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
																	if ((&rcx->u0)[1] != 0x00)
																		r8d_1070 = r8d_1070 >> 0x18 | r8d_1070 >> 0x08 & 0xFF00 | (r8d_1070 & 0xFF00) << 0x08 | r8d_1070 << 0x18;
																	if (r9_1043 == 0x00)
																		r15d_1117 = r8d_1070;
																	dwLoc0564_3891 = r15d_1117;
																	if (r11d_1127 < tLoc0508.dw0000)
																		tLoc0508.a0008[r9_1043].t0000.u0 = (int32) r8d_1070;
																	r11_1141 = (uint64) (r11d_1127 + 0x01);
																	++r9_1043;
																} while ((word32) r11_1141 < r10d_454);
															}
															if (false)
																rcx->u0.t0008.u0 = 0x00;
															Eq_56625 r9d_1254;
															r9d_1254.u0 = 0x00;
															if (r10d_454 != 0x00)
															{
																Eq_137 rdi_1184;
																rdi_1184.u0 = rcx->u0.t0000.u0;
																struct Eq_57190 * r11_1186 = (struct Eq_57190 *) ((char *) &tLoc0508 + 0x0C);
																do
																{
																	if (rdi_1184 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																		goto l000000018001C97E;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint32 r8d_1213 = (uint32) rdi_1184.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
																	if ((&rcx->u0)[1] != 0x00)
																		r8d_1213 = r8d_1213 >> 0x18 | r8d_1213 >> 0x08 & 0xFF00 | (r8d_1213 & 0xFF00) << 0x08 | r8d_1213 << 0x18;
																	if (r9d_1254 < (tLoc0508.t0000).u0)
																		r11_1186->dw0000 = r8d_1213;
																	r9d_1254 = (word32) r9d_1254 + 1;
																	++r11_1186;
																} while (r9d_1254 < r10d_454);
															}
															if (false)
																rcx->u0.t0008.u0 = 0x00;
															Eq_56625 r9d_1375;
															r9d_1375.u0 = 0x00;
															if (r10d_454 != 0x00)
															{
																Eq_137 rdi_1305;
																rdi_1305.u0 = rcx->u0.t0000.u0;
																struct Eq_57290 * r11_1307 = (struct Eq_57290 *) ((char *) &tLoc0508 + 16);
																do
																{
																	if (rdi_1305 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																		goto l000000018001C97E;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint32 r8d_1334 = (uint32) rdi_1305.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
																	if ((&rcx->u0)[1] != 0x00)
																		r8d_1334 = r8d_1334 >> 0x18 | r8d_1334 >> 0x08 & 0xFF00 | (r8d_1334 & 0xFF00) << 0x08 | r8d_1334 << 0x18;
																	if (r9d_1375 < (tLoc0508.t0000).u0)
																		r11_1307->dw0000 = r8d_1334;
																	r9d_1375 = (word32) r9d_1375 + 1;
																	++r11_1307;
																} while (r9d_1375 < r10d_454);
															}
															if (false)
																rcx->u0.t0008.u0 = 0x00;
															Eq_56625 r9d_1496;
															r9d_1496.u0 = 0x00;
															if (r10d_454 != 0x00)
															{
																Eq_137 rdi_1426;
																rdi_1426.u0 = rcx->u0.t0000.u0;
																struct Eq_57368 * r11_1428 = (struct Eq_57368 *) ((char *) &tLoc0508 + 20);
																do
																{
																	if (rdi_1426 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																		goto l000000018001C97E;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint32 r8d_1455 = (uint32) rdi_1426.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
																	if ((&rcx->u0)[1] != 0x00)
																		r8d_1455 = r8d_1455 >> 0x18 | r8d_1455 >> 0x08 & 0xFF00 | (r8d_1455 & 0xFF00) << 0x08 | r8d_1455 << 0x18;
																	if (r9d_1496 < (tLoc0508.t0000).u0)
																		r11_1428->dw0000 = r8d_1455;
																	r9d_1496 = (word32) r9d_1496 + 1;
																	++r11_1428;
																} while (r9d_1496 < r10d_454);
															}
															if (false)
																rcx->u0.t0008.u0 = 0x00;
															Eq_56625 ecx_1565;
															ecx_1565.u0 = 0x00;
															if (r10d_454 != 0x00)
															{
																Eq_137 rdx_1547;
																rdx_1547.u0 = rcx->u0.t0000.u0;
																do
																{
																	if (rdx_1547 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																		goto l000000018001C97E;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	ecx_1565 = (word32) ecx_1565 + 1;
																} while (ecx_1565 < r10d_454);
															}
															if (esi_943 != 0x00)
																rcx->u0.t0008.u0 = (int32) esi_943;
															fn000000018002368C(fp - 1080, 0x14, 0x32);
															word32 r15d_3142 = 0x00;
															Eq_1753 eax_1647;
															eax_1647.u0 = g_t800306F0.u0;
															if (eax_1647 == 911 || eax_1647 == 0x0396)
															{
																if (rcx->u0.t0000.u0 == 0x00)
																	goto l000000018001C964;
																Eq_1342 r8d_1668;
																r8d_1668.u0 = rcx->u0.t000C.u0;
																if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																	goto l000000018001C964;
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																	goto l000000018001C964;
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																{
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																		goto l000000018001C964;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																	{
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																		{
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																				goto l000000018001C964;
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																			{
																				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																				if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																					goto l000000018001C964;
																				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																				if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																				{
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																						goto l000000018001C964;
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																					{
																						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																						uint64 r10_1794 = (uint64) rcx->u0.t0008.u0;
																						Eq_1342 esi_1801 = (&rcx->u0)[1];
																						if ((word32) r10_1794 + 0x04 > r8d_1668)
																							goto l000000018001C964;
																						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																						if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																						{
																							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																							if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																								goto l000000018001C964;
																							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																							if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																							{
																								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																								uint64 r10_1888 = (uint64) rcx->u0.t0008.u0;
																								if ((word32) r10_1888 + 0x04 > r8d_1668)
																									goto l000000018001C964;
																								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																								if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																								{
																									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																									uint64 r14_1961 = (uint64) rcx->u0.t0008.u0;
																									if ((word32) r14_1961 + 0x04 > r8d_1668)
																										goto l000000018001C964;
																									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																									uint64 r14_2024 = (uint64) rcx->u0.t0008.u0;
																									if ((word32) r14_2024 + 0x04 <= r8d_1668)
																									{
																										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																										if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																											goto l000000018001C964;
																										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																										if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																										{
																											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																											if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																												goto l000000018001C964;
																											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																											if (rcx->u0.t0008.u0 + 0x04 <= r8d_1668)
																											{
																												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																												if (rcx->u0.t0008.u0 + 0x04 > r8d_1668)
																													goto l000000018001C964;
																												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
l000000018001C694:
																												int32 ecx_3053;
																												Eq_137 r9_3035;
																												r9_3035.u0 = rcx->u0.t0000.u0;
																												for (ecx_3053 = 0x00; ecx_3053 < 0x06; ++ecx_3053)
																												{
																													if (r9_3035 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																														goto l000000018001C964;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																												}
																												int32 edx_3075 = 0x08;
																												Eq_1753 eax_3063;
																												eax_3063.u0 = g_t800306F0.u0;
																												if (eax_3063 == 0x03D9 || eax_3063 == 990)
																													edx_3075 = 0x00;
																												int32 ecx_3099 = 0x00;
																												if (edx_3075 != 0x00)
																												{
																													do
																													{
																														if (r9_3035 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																															goto l000000018001C964;
																														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																														++ecx_3099;
																													} while (ecx_3099 < edx_3075);
																													eax_3063.u0 = g_t800306F0.u0;
																												}
																												Eq_1342 r15d_3154;
																												if (eax_3063 != 0x03D9 && eax_3063 != 990 || dwLoc0554_3871 != 0x00)
																													r15d_3154 = dwLoc0568_3869;
																												else
																												{
																													r15d_3154 = r15d_3142 + 0x10;
																													rcx->u0.t0008.u0 = (int32) r15d_3154;
																													uint64 r10_3243 = 0x00;
																													do
																													{
																														word32 r10d_3241 = (word32) r10_3243;
																														if (r9_3035 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																															goto l000000018001C964;
																														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																														uint64 r11_3184 = (uint64) rcx->u0.t0008.u0;
																														uint32 r8d_3191 = (uint32) r9_3035.u2[(uint64) ((word32) r11_3184 - 0x04)];
																														if ((&rcx->u0)[1] != 0x00)
																															r8d_3191 = r8d_3191 >> 0x18 | r8d_3191 >> 0x08 & 0xFF00 | (r8d_3191 & 0xFF00) << 0x08 | r8d_3191 << 0x18;
																														if (r8d_3191 > 0x18)
																														{
																															r15d_3154 = (word32) r11_3184 - 0x04;
																															rcx->u0.t0008.u0 = (int32) r15d_3154;
																															break;
																														}
																														r10_3243 = (uint64) (r10d_3241 + 0x01);
																													} while ((word32) r10_3243 < 0x06);
																												}
																												Eq_1342 eax_3253;
																												eax_3253.u0 = rcx->u0.t0008.u0;
																												while (eax_3253 < r15d_3154)
																												{
																													if (r9_3035 == 0x00 || (word64) eax_3253 + 4 > ((rcx->u0).t000C).u0)
																														goto l000000018001C964;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																													eax_3253.u0 = rcx->u0.t0008.u0;
																												}
																												if (r15d_3154 != 0x00)
																													rcx->u0.t0008.u0 = (int32) r15d_3154;
																												uint64 r9_3300 = (uint64) rcx->u0.t0008.u0;
																												word32 r9d_3306 = (word32) r9_3300;
																												if (dwLoc0550_3873 != 0x00)
																												{
																													if (fn0000000180005C80(rcx, rdx, dwLoc0560_3864, (word32) r9_3300, dwLoc0564_3891, &tLoc0508, dwLoc0550_3873) == 0x00)
																														goto l000000018001C964;
																												}
																												else if (r9d_3306 != 0x00 && fn0000000180005100(rcx, rdx, dwLoc0560_3864, (word32) r9_3300, dwLoc0564_3891, &tLoc0508) == 0x00)
																													goto l000000018001C964;
																												Eq_1168 ecx_3503;
																												ecx_3503.u0 = 0x00;
																												int64 r9_3484;
																												struct Eq_58021 * r8_3486 = fp - 0x0424;
																												for (r9_3484 = 0x00; r9_3484 < 0x32; r9_3484 += 0x05)
																												{
																													uint32 edx_3491 = r8_3486->dwFFFFFFEC;
																													if (edx_3491 == 0x00)
																														break;
																													ecx_3503 = (word32) ecx_3503 + (SLICE(edx_3491 *64 ~0x55555554, word32, 32) >> 0x01);
																													uint32 edx_3509 = r8_3486->dw0000;
																													if (edx_3509 == 0x00)
																														break;
																													ecx_3503 += SLICE(edx_3509 *64 ~0x55555554, word32, 32) >> 0x01;
																													uint32 edx_3527 = r8_3486->dw0014;
																													if (edx_3527 == 0x00)
																														break;
																													ecx_3503 += SLICE(edx_3527 *64 ~0x55555554, word32, 32) >> 0x01;
																													uint32 edx_3545 = r8_3486->dw0028;
																													if (edx_3545 == 0x00)
																														break;
																													ecx_3503 += SLICE(edx_3545 *64 ~0x55555554, word32, 32) >> 0x01;
																													uint32 edx_3563 = r8_3486->dw003C;
																													if (edx_3563 == 0x00)
																														break;
																													ecx_3503 += SLICE(edx_3563 *64 ~0x55555554, word32, 32) >> 0x01;
																													++r8_3486;
																												}
																												if (ecx_3503 > 0x00)
																												{
																													if (fn0000000180001DD0(rdx, ecx_3503) == 0x00)
																														goto l000000018001C964;
																													int32 ecx_3628 = 0x00;
																													if (rdx->dw0000 > 0x00)
																													{
																														ptr64 rdx_3622 = null;
																														do
																														{
																															*((char *) &rdx->ptr0008->dw0000 + rdx_3622) = (struct Eq_1145 *) 0x03;
																															++ecx_3628;
																															rdx_3622 += 20;
																														} while (ecx_3628 < rdx->dw0000);
																													}
																												}
																												rdx->dw00E0 = 0x00;
																												int64 rsi_3642 = 0x00;
																												struct Eq_8449 * rdi_3647 = fp - 1080;
																												while (rdi_3647->dw0000 != 0x00)
																												{
																													word32 eax_3686;
																													if (rdi_3647->dw000C > 0x00)
																													{
																														ui32 tLoc05A0;
																														Eq_8693 tLoc0590;
																														eax_3686 = fn0000000180006420(rcx, rdx, rdi_3647, tLoc05A0, tLoc0590);
																													}
																													else
																														eax_3686 = fn0000000180006250(rcx, rdx, rdi_3647);
																													if (eax_3686 == 0x00)
																														goto l000000018001C964;
																													rdx->dw00E0 += SLICE(rdi_3647->dw0000 *64 ~0x55555554, word32, 32) >> 0x01;
																													++rsi_3642;
																													++rdi_3647;
																													if (rsi_3642 >= 0x32)
																														break;
																												}
																												goto l000000018001C964;
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
l000000018001C964:
																fn00000001800235AC(0x32);
																goto l000000018001C97E;
															}
															else
															{
																uint32 dwLoc055C_4007 = 0x00;
																if (r14d_2169 != 0x00)
																{
																	Eq_137 rdx_2188;
																	rdx_2188.u0 = rcx->u0.t0000.u0;
																	tLoc0548.qw0000 = 0x00;
																	word32 eax_2423;
																	uint32 eax_3008;
																	do
																	{
																		if (rdx_2188 == 0x00)
																			goto l000000018001C964;
																		Eq_1342 r8d_2230;
																		r8d_2230.u0 = rcx->u0.t000C.u0;
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 rsi_2286 = (uint64) rcx->u0.t0008.u0;
																		if ((word32) rsi_2286 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 r10_2295 = (uint64) rcx->u0.t0008.u0;
																		uint64 r9_2299 = (uint64) rdx_2188.u2[(uint64) ((word32) r10_2295 - 0x04)];
																		uint32 r9d_2307 = (word32) r9_2299;
																		Eq_1342 r11d_2302 = (&rcx->u0)[1];
																		if (r11d_2302 != 0x00)
																		{
																			r9_2299 = (uint64) (r9d_2307 >> 0x18 | r9d_2307 >> 0x08 & 0xFF00 | (r9d_2307 & 0xFF00) << 0x08 | r9d_2307 << 0x18);
																			rdx_2188.u0 = rcx->u0.t0000.u0;
																		}
																		word32 r9d_2418 = (word32) r9_2299;
																		if ((word32) r10_2295 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 rdi_2360 = (uint64) rcx->u0.t0008.u0;
																		uint32 r12d_2371 = (uint32) rdx_2188.u2[(uint64) ((word32) rdi_2360 - 0x04)];
																		if (r11d_2302 != 0x00)
																		{
																			r12d_2371 = r12d_2371 >> 0x18 | r12d_2371 >> 0x08 & 0xFF00 | (r12d_2371 & 0xFF00) << 0x08 | r12d_2371 << 0x18;
																			rdx_2188.u0 = rcx->u0.t0000.u0;
																		}
																		eax_2423 = (word32) (rsi_2286 + r9_2299);
																		if (r9d_2418 == 0x00)
																			eax_2423 = r9d_2418;
																		if ((word32) rdi_2360 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 r9_2451 = (uint64) rcx->u0.t0008.u0;
																		Eq_1753 eax_2454;
																		eax_2454.u0 = g_t800306F0.u0;
																		uint64 r10_2478;
																		if (eax_2454 != 0x03D9)
																		{
																			r10_2478 = 0x00;
																			if (eax_2454 == 990)
																				goto l000000018001C0E0;
																		}
																		else
																		{
l000000018001C0E0:
																			if ((word32) r9_2451 + 0x04 > r8d_2230)
																				goto l000000018001C964;
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			r9_2451 = (uint64) rcx->u0.t0008.u0;
																			r10_2478 = (uint64) rdx_2188.u2[(uint64) ((word32) r9_2451 - 0x04)];
																			uint32 r10d_2486 = (word32) r10_2478;
																			if (r11d_2302 != 0x00)
																				r10_2478 = (uint64) (r10d_2486 >> 0x18 | r10d_2486 >> 0x08 & 0xFF00 | (r10d_2486 & 0xFF00) << 0x08 | r10d_2486 << 0x18);
																		}
																		word32 r10d_2971 = (word32) r10_2478;
																		if ((word32) r9_2451 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 r9_2538 = (uint64) rcx->u0.t0008.u0;
																		rdx_2188.u0 = rcx->u0.t0000.u0;
																		uint32 r15d_2549 = (uint32) rdx_2188.u2[(uint64) ((word32) r9_2538 - 0x04)];
																		if (r11d_2302 != 0x00)
																		{
																			r15d_2549 = r15d_2549 >> 0x18 | r15d_2549 >> 0x08 & 0xFF00 | (r15d_2549 & 0xFF00) << 0x08 | r15d_2549 << 0x18;
																			rdx_2188.u0 = rcx->u0.t0000.u0;
																		}
																		if ((word32) r9_2538 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C964;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 r13_2612 = (uint64) rcx->u0.t0008.u0;
																		Eq_1753 eax_2615;
																		eax_2615.u0 = g_t800306F0.u0;
																		if (eax_2615 == 0x03D9 || eax_2615 == 990)
																		{
																			if ((word32) r13_2612 + 0x04 > r8d_2230)
																			{
l000000018001C961:
																				goto l000000018001C964;
																			}
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			r13_2612 = (uint64) rcx->u0.t0008.u0;
																		}
																		if ((word32) r13_2612 + 0x04 > r8d_2230)
																			goto l000000018001C961;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 r9_2646 = (uint64) rcx->u0.t0008.u0;
																		uint64 rdi_2653 = (uint64) rdx_2188.u2[(uint64) ((word32) r9_2646 - 0x04)];
																		uint32 edi_2661 = (word32) rdi_2653;
																		if (r11d_2302 != 0x00)
																		{
																			rdi_2653 = (uint64) (edi_2661 >> 0x18 | edi_2661 >> 0x08 & 0xFF00 | (edi_2661 & 0xFF00) << 0x08 | edi_2661 << 0x18);
																			rdx_2188.u0 = rcx->u0.t0000.u0;
																		}
																		word32 edi_2940 = (word32) rdi_2653;
																		if ((word32) r9_2646 + 0x04 > r8d_2230)
																			goto l000000018001C961;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C961;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 r9_2724 = (uint64) rcx->u0.t0008.u0;
																		uint32 esi_2735 = (uint32) rdx_2188.u2[(uint64) ((word32) r9_2724 - 0x04)];
																		if (r11d_2302 != 0x00)
																		{
																			esi_2735 = esi_2735 >> 0x18 | esi_2735 >> 0x08 & 0xFF00 | (esi_2735 & 0xFF00) << 0x08 | esi_2735 << 0x18;
																			rdx_2188.u0 = rcx->u0.t0000.u0;
																		}
																		if ((word32) r9_2724 + 0x04 > r8d_2230)
																			goto l000000018001C961;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 r14_2788 = (uint64) rcx->u0.t0008.u0;
																		uint32 r9d_2799 = (uint32) rdx_2188.u2[(uint64) ((word32) r14_2788 - 0x04)];
																		if (r11d_2302 != 0x00)
																		{
																			r9d_2799 = r9d_2799 >> 0x18 | r9d_2799 >> 0x08 & 0xFF00 | (r9d_2799 & 0xFF00) << 0x08 | r9d_2799 << 0x18;
																			rdx_2188.u0 = rcx->u0.t0000.u0;
																		}
																		if ((word32) r14_2788 + 0x04 > r8d_2230)
																			goto l000000018001C961;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C961;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C961;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C961;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C961;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 > r8d_2230)
																			goto l000000018001C961;
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		int64 r8_2915 = tLoc0548.qw0000;
																		if (r8_2915 < 0x32)
																		{
																			(fp - 1080)[r8_2915].dw0000 = r15d_2549;
																			(fp - 0x0434)[r8_2915].dw0000 = edi_2940;
																			(fp - 0x0430)[r8_2915].dw0000 = esi_2735;
																			(fp - 0x042C)[r8_2915].dw0000 = r9d_2799;
																			(fp - 0x0428)[r8_2915].dw0000 = r12d_2371;
																			Eq_1753 eax_2960;
																			eax_2960.u0 = g_t800306F0.u0;
																			if ((eax_2960 == 0x03D9 || eax_2960 == 990) && r10d_2971 != 0x00)
																				(fp - 0x0434)[r8_2915].dw0000 = edi_2940 + (word32) r13_2612 + r10d_2971;
																		}
																		tLoc0548.qw0000 = r8_2915 + 0x01;
																		eax_3008 = dwLoc055C_4007 + 0x01;
																		dwLoc055C_4007 = eax_3008;
																	} while (eax_3008 < dwLoc0558_3875);
																	r15d_3142 = eax_2423;
																}
																goto l000000018001C694;
															}
														}
													}
												}
											}
										}
									}
								}
							}
l000000018001C97E:
							fn00000001800235AC(0x0A);
							return (word32) fn0000000180023580(rax_30 ^ fp - 1448, qwLoc05B0);
						}
						if ((word32) r9_187 + 0x04 <= r8d_56)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							goto l000000018001B94C;
						}
					}
				}
			}
		}
	}
l000000018001C99D:
	return (word32) fn0000000180023580(rax_30 ^ fp - 1448, qwLoc05B0);
}

// 000000018001C9D0: Register word32 fn000000018001C9D0(Register (ptr64 Eq_3676) rcx, Register up32 edx, Register Eq_1342 r8d)
// Called from:
//      fn00000001800156B0
word32 fn000000018001C9D0(union Eq_3676 * rcx, up32 edx, Eq_1342 r8d)
{
	ptr64 fp;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_14 = g_qw80030008 ^ fp - 616;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		up32 esi_223 = 0x00;
		Eq_59175 tLoc0248;
		if (edx != 0x00)
		{
			do
			{
				Eq_137 rdx_43;
				rdx_43.u0 = rcx->u0.t0000.u0;
				if (rdx_43 == 0x00)
				{
l000000018001CCEA:
					goto l000000018001CCBE;
				}
				Eq_1342 r8d_56;
				r8d_56.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_56)
					goto l000000018001CCEA;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_62 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r11d_69 = (&rcx->u0)[1];
				Eq_1342 r10d_101 = rdx_43.u2[(uint64) ((word32) r9_62 - 0x04)];
				if (r11d_69 != 0x00)
					r10d_101 = __bswap<word32>(r10d_101);
				if ((word32) r9_62 + 0x04 > r8d_56)
					goto l000000018001CCEA;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_88 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_99 = rdx_43.u2[(uint64) ((word32) r9_88 - 0x04)];
				if (r11d_69 != 0x00)
				{
					Eq_1342 eax_100 = __bswap<word32>(eax_99);
					r10d_101 = eax_100;
				}
				if ((word32) r9_88 + 0x04 > r8d_56)
					goto l000000018001CCEA;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdi_114 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r9d_125 = rdx_43.u2[(uint64) ((word32) rdi_114 - 0x04)];
				if (r11d_69 != 0x00)
					r9d_125 = __bswap<word32>(r9d_125);
				if ((word32) rdi_114 + 0x04 > r8d_56)
					goto l000000018001CCEA;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdi_139 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_150 = rdx_43.u2[(uint64) ((word32) rdi_139 - 0x04)];
				if (r11d_69 != 0x00)
				{
					Eq_1342 eax_151 = __bswap<word32>(eax_150);
					r9d_125 = eax_151;
				}
				if ((word32) rdi_139 + 0x04 > r8d_56)
					goto l000000018001CCEA;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_56)
					goto l000000018001CCEA;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				fn0000000180005050(rcx, r10d_101, &tLoc0248);
				Eq_59179 tLoc0138;
				fn0000000180005050(rcx, r9d_125, &tLoc0138);
				++esi_223;
			} while (esi_223 < edx);
		}
		rcx->u0.t0008.u0 = (int32) r8d;
		up32 r14d_578 = 0x00;
		if (edx != 0x00)
		{
			do
			{
				Eq_137 r10_260;
				r10_260.u0 = rcx->u0.t0000.u0;
				if (r10_260 == 0x00)
				{
l000000018001CCEE:
					goto l000000018001CCB6;
				}
				Eq_1342 r9d_273;
				r9d_273.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r9d_273)
					goto l000000018001CCEE;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_279 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r8d_286 = (&rcx->u0)[1];
				Eq_1342 edx_291 = r10_260.u2[(uint64) ((word32) r11_279 - 0x04)];
				if (r8d_286 != 0x00)
					edx_291 = __bswap<word32>(edx_291);
				if ((word32) r11_279 + 0x04 > r9d_273)
					goto l000000018001CCEE;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_305 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_316 = r10_260.u2[(uint64) ((word32) r11_305 - 0x04)];
				if (r8d_286 != 0x00)
				{
					Eq_1342 eax_317 = __bswap<word32>(eax_316);
					edx_291 = eax_317;
				}
				if ((word32) r11_305 + 0x04 > r9d_273)
					goto l000000018001CCEE;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_331 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 edi_342 = r10_260.u2[(uint64) ((word32) r11_331 - 0x04)];
				if (r8d_286 != 0x00)
					edi_342 = __bswap<word32>(edi_342);
				if ((word32) r11_331 + 0x04 > r9d_273)
					goto l000000018001CCEE;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rbp_356 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_367 = r10_260.u2[(uint64) ((word32) rbp_356 - 0x04)];
				if (r8d_286 != 0x00)
				{
					Eq_1342 eax_368 = __bswap<word32>(eax_367);
					edi_342 = eax_368;
				}
				if ((word32) rbp_356 + 0x04 > r9d_273)
					goto l000000018001CCEE;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_382 = (uint64) rcx->u0.t0008.u0;
				uint64 rsi_387 = (uint64) r10_260.u2[(uint64) ((word32) r11_382 - 0x04)];
				Eq_1342 esi_393 = (word32) rsi_387;
				word32 rsi_32_32_530 = SLICE(rsi_387, word32, 32);
				if (r8d_286 != 0x00)
					rsi_387 = SEQ(rsi_32_32_530, __bswap<word32>(esi_393));
				if ((word32) r11_382 + 0x04 > r9d_273)
					goto l000000018001CCEE;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 r8d_462;
				r8d_462.u0 = rcx->u0.t0008.u0;
				if (edx_291 > 100)
				{
					rcx->u0.t0008.u0 = (int32) edx_291;
					Eq_59295 rdx_417;
					rdx_417.u1 = 0x00;
					byte al_445;
					do
					{
						if (rcx->u0.t0008.u0 + 0x01 > r9d_273)
							goto l000000018001CC4F;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
						rdx_417 = (word64) rdx_417 + 1;
						al_445 = r10_260.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
					} while (al_445 != 0x00);
					if (rdx_417 < 0x0104)
						*(&tLoc0248 + rdx_417) = (word64) al_445;
					rcx->u0.t0008.u0 = (int32) r8d_462;
				}
l000000018001CC4F:
				if (edi_342 > 100)
				{
					Eq_1342 r8d_520;
					r8d_520.u0 = rcx->u0.t0008.u0;
					rcx->u0.t0008.u0 = (int32) edi_342;
					Eq_59352 rdx_478;
					rdx_478.u1 = 0x00;
					byte al_507;
					do
					{
						if (rcx->u0.t0008.u0 + 0x01 > r9d_273)
							goto l000000018001CC8F;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
						rdx_478 = (word64) rdx_478 + 1;
						al_507 = r10_260.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
					} while (al_507 != 0x00);
					if (rdx_478 < 0x0104)
						*(&tLoc0248 + rdx_478) = (word64) al_507;
					rcx->u0.t0008.u0 = (int32) r8d_520;
				}
l000000018001CC8F:
				Eq_1342 edi_585;
				edi_585.u0 = rcx->u0.t0008.u0;
				if (fn000000018001CD00(rcx, (word32) (rsi_387 + rbp_356)) == 0x00)
					goto l000000018001CCEE;
				rcx->u0.t0008.u0 = (int32) edi_585;
				++r14d_578;
			} while (r14d_578 < edx);
		}
l000000018001CCB6:
l000000018001CCBE:
	}
	word64 qwLoc0270;
	return (word32) fn0000000180023580(rax_14 ^ fp - 616, qwLoc0270);
}

// 000000018001CD00: Register word32 fn000000018001CD00(Register (ptr64 Eq_3676) rcx, Register Eq_1342 r8d)
// Called from:
//      fn000000018001C9D0
word32 fn000000018001CD00(union Eq_3676 * rcx, Eq_1342 r8d)
{
	word64 r8;
	r8d = (word32) r8;
	if (r8d == 0x00)
		return (word64) r8d + 1;
	rcx->u0.t0008.u0 = (int32) r8d;
	Eq_1753 eax_13;
	eax_13.u0 = g_t800306F0.u0;
	if (eax_13 == 779 || (eax_13 == 866 || eax_13 == 877))
		return (word32) (fn000000018001CE80(rcx, 0x00, r8d) != 0x00);
	Eq_137 r10_57;
	r10_57.u0 = rcx->u0.t0000.u0;
	if (r10_57 == 0x00)
		return 0x00;
	Eq_1342 r8d_69;
	r8d_69.u0 = rcx->u0.t000C.u0;
	if ((word64) r8d + 4 > r8d_69)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) ((word64) r8d + 4);
	if ((word64) r8d + 6 > r8d_69)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
	uint64 r9_86 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 ebx_95 = (&rcx->u0)[1];
	word16 r11w_100 = (word16) r10_57.u2[(uint64) ((word32) r9_86 - 0x02)];
	if (ebx_95 != 0x00)
		r11w_100 = __rol<word16,byte>(r11w_100, 0x08);
	if ((word32) r9_86 + 0x02 > r8d_69)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
	if (rcx->u0.t0008.u0 + 0x04 > r8d_69)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rdi_134 = (uint64) rcx->u0.t0008.u0;
	uint64 r9_139 = (uint64) r10_57.u2[(uint64) ((word32) rdi_134 - 0x04)];
	Eq_1342 r9d_145 = (word32) r9_139;
	word32 r9_32_32_232 = SLICE(r9_139, word32, 32);
	if (ebx_95 != 0x00)
		r9_139 = SEQ(r9_32_32_232, __bswap<word32>(r9d_145));
	word32 r9_32_32_234 = SLICE(r9_139, word32, 32);
	if ((word32) rdi_134 + 0x04 > r8d_69)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rdi_159 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 eax_170 = r10_57.u2[(uint64) ((word32) rdi_159 - 0x04)];
	if (ebx_95 != 0x00)
	{
		Eq_1342 eax_171 = __bswap<word32>(eax_170);
		r9_139 = SEQ(r9_32_32_234, eax_171);
	}
	if ((word32) rdi_159 + 0x04 > r8d_69)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > r8d_69)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > r8d_69)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > r8d_69)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	return (word32) (fn000000018001CE80(rcx, (word32) r11w_100, (word32) r9_139) != 0x00);
}

// 000000018001CE80: Register word32 fn000000018001CE80(Register (ptr64 Eq_3676) rcx, Register up32 r8d, Register Eq_1342 r9d)
// Called from:
//      fn000000018001CD00
word32 fn000000018001CE80(union Eq_3676 * rcx, up32 r8d, Eq_1342 r9d)
{
	Eq_59620 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_8 = g_qw80030008 ^ fp - 0x0198;
	word64 qwLoc01A0;
	if (r9d == 0x00)
		return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
	rcx->u0.t0008.u0 = (int32) r9d;
	up32 ecx_56 = 0x00;
	if (r8d != 0x00)
	{
		Eq_137 r9_25;
		r9_25.u0 = rcx->u0.t0000.u0;
		do
		{
			if (r9_25 == 0x00)
				goto l000000018001D1DD;
			Eq_1342 edx_41;
			edx_41.u0 = rcx->u0.t000C.u0;
			if (rcx->u0.t0008.u0 + 0x04 > edx_41)
				goto l000000018001D1DD;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			if (rcx->u0.t0008.u0 + 0x04 > edx_41)
				goto l000000018001D1DD;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			++ecx_56;
		} while (ecx_56 < r8d);
	}
	Eq_137 rdx_65;
	rdx_65.u0 = rcx->u0.t0000.u0;
	if (rdx_65 != 0x00)
	{
		Eq_1342 r8d_78;
		r8d_78.u0 = rcx->u0.t000C.u0;
		if (rcx->u0.t0008.u0 + 0x04 <= r8d_78)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r9_90 = (uint64) rcx->u0.t0008.u0;
			word32 r9d_158 = (word32) r9_90;
			Eq_1342 r10d_103 = (&rcx->u0)[1];
			Eq_1342 esi_108 = rdx_65.u2[(uint64) ((word32) r9_90 - 0x04)];
			if (r10d_103 != 0x00)
				esi_108 = __bswap<word32>(esi_108);
			if ((word32) r9_90 + 0x04 > r8d_78)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 edi_146 = rdx_65.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
			if (r10d_103 != 0x00)
				edi_146 = __bswap<word32>(edi_146);
			word128 xmm1_152 = g_ow80028E70;
			Eq_59753 tLoc0178;
			tLoc0178.ow0000 = g_ow80028E60;
			tLoc0178.ow0010 = xmm1_152;
			Eq_1342 edi_161;
			edi_161.u2 = (word64) edi_146 + r9d_158;
			if (fn000000018001D8D0(rcx, &tLoc0178) == 0x00)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			Eq_137 r8_185;
			r8_185.u0 = rcx->u0.t0000.u0;
			if (r8_185 == 0x00)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			Eq_1342 edx_198;
			edx_198.u0 = rcx->u0.t000C.u0;
			if (rcx->u0.t0008.u0 + 0x04 > edx_198)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			if (rcx->u0.t0008.u0 + 0x04 > edx_198)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			if (rcx->u0.t0008.u0 + 0x04 > edx_198)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_230 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_313 = (word32) r10_230;
			Eq_1342 r9d_243 = (&rcx->u0)[1];
			Eq_1342 r14d_248 = r8_185.u2[(uint64) ((word32) r10_230 - 0x04)];
			if (r9d_243 != 0x00)
				r14d_248 = __bswap<word32>(r14d_248);
			if ((word32) r10_230 + 0x04 <= edx_198)
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_269 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 ebp_280 = r8_185.u2[(uint64) ((word32) r11_269 - 0x04)];
				if (r9d_243 != 0x00)
					ebp_280 = __bswap<word32>(ebp_280);
				if ((word32) r11_269 + 0x04 <= edx_198)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 eax_306 = r8_185.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					if (r9d_243 != 0x00)
					{
						Eq_1342 eax_307 = __bswap<word32>(eax_306);
						ebp_280 = eax_307;
					}
					Eq_1342 ebp_404;
					ebp_404.u2 = (word64) ebp_280 + r10d_313;
					int32 ecx_318;
					for (ecx_318 = 0x00; ecx_318 < 0x15; ++ecx_318)
					{
						if (rcx->u0.t0008.u0 + 0x04 > edx_198)
							goto l000000018001D1E1;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					}
					if (edi_161 != 0x00)
					{
						rcx->u0.t0008.u0 = (int32) edi_161;
						uint32 edi_395 = 0x00;
						uint32 esi_360 = esi_108 >> 0x04;
						if (esi_360 != 0x00)
						{
							do
							{
								word128 xmm1_369 = g_ow80028E70;
								tLoc0178.ow0000 = g_ow80028E60;
								tLoc0178.ow0010 = xmm1_369;
								if (fn000000018001D8D0(rcx, &tLoc0178) == 0x00)
									goto l000000018001D1E1;
								++edi_395;
							} while (edi_395 < esi_360);
						}
					}
					if (ebp_404 != 0x00)
					{
						rcx->u0.t0008.u0 = (int32) ebp_404;
						Eq_1342 esi_559;
						esi_559.u0 = 0x00;
						if (r14d_248 != 0x00)
						{
							Eq_137 r8_424;
							r8_424.u0 = rcx->u0.t0000.u0;
							do
							{
								uint64 rdi_428 = (uint64) rcx->u0.t0008.u0;
								if (r8_424 == 0x00)
									goto l000000018001D1E1;
								Eq_1342 r9d_439;
								r9d_439.u0 = rcx->u0.t000C.u0;
								if ((word32) rdi_428 + 0x04 > r9d_439)
									goto l000000018001D1E1;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 r10_445 = (uint64) rcx->u0.t0008.u0;
								uint64 rdx_451 = (uint64) r8_424.u2[(uint64) ((word32) r10_445 - 0x04)];
								Eq_1342 r11d_452 = (&rcx->u0)[1];
								Eq_1342 edx_457 = (word32) rdx_451;
								word32 rdx_32_32_493 = SLICE(rdx_451, word32, 32);
								if (r11d_452 != 0x00)
									rdx_451 = SEQ(rdx_32_32_493, __bswap<word32>(edx_457));
								word32 rdx_32_32_495 = SLICE(rdx_451, word32, 32);
								if ((word32) r10_445 + 0x04 > r9d_439)
									goto l000000018001D1E1;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 r9_477 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 r9d_553 = (word32) r9_477;
								Eq_1342 eax_488 = r8_424.u2[(uint64) ((word32) r9_477 - 0x04)];
								if (r11d_452 != 0x00)
								{
									Eq_1342 eax_489 = __bswap<word32>(eax_488);
									rdx_451 = SEQ(rdx_32_32_495, eax_489);
								}
								Eq_1342 eax_501 = (word32) (rdx_451 + rdi_428);
								if (eax_501 > 100)
								{
									rcx->u0.t0008.u0 = (int32) eax_501;
									Eq_60053 rdx_507;
									rdx_507.u1 = 0x00;
									byte al_538;
									do
									{
										if (r8_424 == 0x00 || ((rcx->u0).t0008).u0 + 0x01 > ((rcx->u0).t000C).u0)
											goto l000000018001D194;
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
										rdx_507 = (word64) rdx_507 + 1;
										al_538 = r8_424.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
									} while (al_538 != 0x00);
									if (rdx_507 < 0x0104)
										*(fp - 0x0138 + rdx_507) = (word64) al_538;
									rcx->u0.t0008.u0 = (int32) r9d_553;
								}
l000000018001D194:
								esi_559.u2 = (word64) esi_559 + 1;
							} while (esi_559 < r14d_248);
						}
					}
					return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
				}
			}
l000000018001D1E1:
			return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
		}
	}
l000000018001D1DD:
	return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
}

// 000000018001D1F0: void fn000000018001D1F0(Register Eq_1756 rcx, Register (ptr64 Eq_2135) rdx)
// Called from:
//      fn0000000180002A70
//      fn000000018001DFF0
void fn000000018001D1F0(Eq_1756 rcx, struct Eq_2135 * rdx)
{
	ptr64 fp;
	ui64 rax_10 = g_qw80030008 ^ fp - 600;
	if (rdx != null)
	{
		wchar_t wLoc0228 = 0x00;
		word64 qwLoc0218;
		memset(&qwLoc0218, 0, 0x0200);
		_wsplitpath(rcx, &wLoc0228, &qwLoc0218, null, null);
		wchar_t * rcx_45 = &wLoc0228;
		int64 rdx_46 = rdx - &wLoc0228;
		word16 ax_52;
		do
		{
			ax_52 = *rcx_45;
			*((char *) rcx_45 + rdx_46) = (wchar_t *) ax_52;
			++rcx_45;
		} while (ax_52 != 0x00);
		word16 rcx_61[] = rdx - 2 + 2;
		word16 rcx_240[];
		do
		{
			rcx_61 = (word16 (*)[]) (rcx_240 + 1);
			rcx_240 = rcx_61;
		} while (rcx_240[0] != 0x00);
		uint64 rdx_71 = 0x00;
		word16 ax_81;
		do
		{
			ax_81 = (&qwLoc0218)[rdx_71].u0;
			rcx_61[rdx_71] = ax_81;
			++rdx_71;
		} while (ax_81 != 0x00);
		ui64 rax_115 = ~0x00;
		ui64 rcx_93 = ~0x00;
		do
			++rcx_93;
		while (rdx[rcx_93] != 0x00);
		if (rcx_93 != 0x00)
		{
			ui64 rcx_105 = ~0x00;
			ui64 rcx_241;
			do
			{
				rcx_105 = rcx_241 + 1;
				rcx_241 = rcx_105;
			} while (rdx->a0002[rcx_241] != 0x00);
			if ((rdx - 2)[rcx_105] != 0x5C)
			{
				ui64 rax_242;
				do
				{
					rax_115 = rax_242 + 1;
					rax_242 = rax_115;
				} while (rdx->a0002[rax_242] != 0x00);
				if ((rdx - 2)[rax_115] != 0x2F)
				{
					struct Eq_60237 * rbx_122 = rdx - 0x02 + 2;
					struct Eq_60237 * rbx_243;
					do
					{
						rbx_122 = rbx_243 + 1;
						rbx_243 = rbx_122;
					} while (rbx_243->dw0000 != 0x00);
					rbx_122->dw0000 = g_dw800288E4;
				}
			}
		}
	}
	word64 qwLoc0260;
	fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
}

// 000000018001D360: void fn000000018001D360(Register Eq_2084 rcx, Register Eq_2084 rdx)
// Called from:
//      fn0000000180003990
void fn000000018001D360(Eq_2084 rcx, Eq_2084 rdx)
{
	ptr64 fp;
	ui64 rax_12 = g_qw80030008 ^ fp - 0xA8;
	if (rcx != null && rdx != null)
	{
		Eq_60266 tLoc58;
		GetWindowRect(rcx, &tLoc58);
		uint64 r15_54 = (uint64) (tLoc58.right - tLoc58.left);
		uint64 rbp_57 = (uint64) (tLoc58.bottom - tLoc58.top);
		Eq_60295 tLoc68;
		GetWindowRect(rdx, &tLoc68);
		Eq_60306 edi_87 = tLoc68.right - tLoc68.left;
		Eq_60316 r14d_135 = tLoc68.bottom - tLoc68.top;
		Eq_60321 rax_70 = GetDC(rcx);
		int32 r12d_118 = GetDeviceCaps(rax_70, 8);
		int32 r13d_170 = GetDeviceCaps(rax_70, 0x0A);
		ReleaseDC(rcx, rax_70);
		Eq_60342 r15d_88 = (word32) r15_54;
		int64 edx_eax_98 = (int64) (edi_87 - r15d_88);
		uint64 r8_111 = (uint64) (((word32) edx_eax_98 - SLICE(edx_eax_98, word32, 32) >> 0x01) + tLoc68.left);
		Eq_60359 ebp_137 = (word32) rbp_57;
		if ((word32) r8_111 < 0x00)
			r8_111 = 0x00;
		else if ((word32) (r8_111 + r15_54) > r12d_118)
			r8_111 = (uint64) (r12d_118 - r15d_88);
		int64 edx_eax_146 = (int64) (r14d_135 - ebp_137);
		uint64 r9_159 = (uint64) (((word32) edx_eax_146 - SLICE(edx_eax_146, word32, 32) >> 0x01) + tLoc68.top);
		if ((word32) r9_159 < 0x00)
			r9_159 = 0x00;
		else if ((word32) (r9_159 + rbp_57) > r13d_170)
			r9_159 = (uint64) (r13d_170 - ebp_137);
		SetWindowPos(rcx, null, (int32) r8_111, (int32) r9_159, 0x00, 0x00, 0x05);
	}
	word64 qwLocB0;
	fn0000000180023580(rax_12 ^ fp - 0xA8, qwLocB0);
}

// 000000018001D4E0: Register word32 fn000000018001D4E0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_6788) rdx)
// Called from:
//      fn0000000180005100
//      fn0000000180005C80
word32 fn000000018001D4E0(union Eq_3676 * rcx, struct Eq_6788 * rdx)
{
	Eq_137 rdx_8;
	rdx_8.u0 = rcx->u0.t0000.u0;
	if (rdx_8 != 0x00)
	{
		Eq_1342 eax_18 = rcx->u0.t0008.u0 + 0x04;
		if (eax_18 <= ((rcx->u0).t000C).u0)
		{
			rcx->u0.t0008.u0 = (int32) eax_18;
			rdx->dw0000 = (ui32) rdx_8.u2[(uint64) ((word64) eax_18 - 4)];
			if ((&rcx->u0)[1] != 0x00)
			{
				uint32 edx_38 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
				rdx->dw0000 = (edx_38 & 0x00FF0000 | edx_38 >> 0x10) >> 0x08 | (edx_38 & 0xFF00 | edx_38 << 0x10) << 0x08;
			}
			Eq_137 rdx_81;
			rdx_81.u0 = rcx->u0.t0000.u0;
			if (rdx_81 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
			{
				rdx->dw0004 = 0x00;
				return 0x00;
			}
			else
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				rdx->dw0004 = (ui32) rdx_81.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if ((&rcx->u0)[1] != 0x00)
				{
					uint32 edx_116 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
					rdx->dw0004 = (edx_116 & 0x00FF0000 | edx_116 >> 0x10) >> 0x08 | (edx_116 & 0xFF00 | edx_116 << 0x10) << 0x08;
				}
				return 0x01;
			}
		}
	}
	rdx->dw0000 = 0x00;
	return 0x00;
}

// 000000018001D5C0: Register word32 fn000000018001D5C0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_6567) rdx)
// Called from:
//      fn0000000180005100
//      fn0000000180005C80
//      fn0000000180007D40
//      fn0000000180008870
//      fn0000000180008FC0
//      fn000000018000AA90
//      fn000000018000BA90
//      fn000000018000DE40
//      fn000000018000E860
//      fn000000018000F210
//      fn0000000180012ED0
//      fn0000000180013C40
//      fn0000000180014820
//      fn00000001800150F0
//      fn000000018001A460
//      fn000000018001AE80
//      fn000000018001B7D0
word32 fn000000018001D5C0(union Eq_3676 * rcx, union Eq_6567 * rdx)
{
	Eq_137 rdx_8;
	rdx_8.u0 = rcx->u0.t0000.u0;
	if (rdx_8 != 0x00)
	{
		Eq_1342 eax_18 = rcx->u0.t0008.u0 + 0x04;
		if (eax_18 <= ((rcx->u0).t000C).u0)
		{
			rcx->u0.t0008.u0 = (int32) eax_18;
			rdx->u0.dw0000 = (ui32) rdx_8.u2[(uint64) ((word64) eax_18 - 4)];
			if ((&rcx->u0)[1] != 0x00)
			{
				uint32 edx_38 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
				rdx->u0.dw0000 = (edx_38 & 0x00FF0000 | edx_38 >> 0x10) >> 0x08 | (edx_38 & 0xFF00 | edx_38 << 0x10) << 0x08;
			}
			Eq_137 rdx_81;
			rdx_81.u0 = rcx->u0.t0000.u0;
			if (rdx_81 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
			{
				rdx->u0.dw0004 = 0x00;
				return 0x00;
			}
			else
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				rdx->u0.dw0004 = (ui32) rdx_81.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if ((&rcx->u0)[1] != 0x00)
				{
					uint32 edx_116 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
					rdx->u0.dw0004 = (edx_116 & 0x00FF0000 | edx_116 >> 0x10) >> 0x08 | (edx_116 & 0xFF00 | edx_116 << 0x10) << 0x08;
				}
				Eq_137 rdx_159;
				rdx_159.u0 = rcx->u0.t0000.u0;
				if (rdx_159 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				{
					rdx->u0.dw0008 = 0x00;
					return 0x00;
				}
				else
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					rdx->u0.dw0008 = (ui32) rdx_159.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					if ((&rcx->u0)[1] != 0x00)
					{
						uint32 edx_194 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
						rdx->u0.dw0008 = (edx_194 & 0x00FF0000 | edx_194 >> 0x10) >> 0x08 | (edx_194 << 0x10 | edx_194 & 0xFF00) << 0x08;
					}
					return 0x01;
				}
			}
		}
	}
	rdx->u0.dw0000 = 0x00;
	return 0x00;
}

// 000000018001D710: Register word32 fn000000018001D710(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_14424) rdx)
// Called from:
//      fn0000000180008FC0
//      fn000000018000BA90
//      fn000000018000C020
//      fn000000018000DE40
//      fn0000000180014820
//      fn000000018001AE80
word32 fn000000018001D710(union Eq_3676 * rcx, struct Eq_14424 * rdx)
{
	Eq_137 rdx_8;
	rdx_8.u0 = rcx->u0.t0000.u0;
	if (rdx_8 != 0x00)
	{
		Eq_1342 eax_18 = rcx->u0.t0008.u0 + 0x04;
		if (eax_18 <= ((rcx->u0).t000C).u0)
		{
			rcx->u0.t0008.u0 = (int32) eax_18;
			rdx->dw0000 = (ui32) rdx_8.u2[(uint64) ((word64) eax_18 - 4)];
			if ((&rcx->u0)[1] != 0x00)
			{
				uint32 edx_38 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
				rdx->dw0000 = (edx_38 & 0x00FF0000 | edx_38 >> 0x10) >> 0x08 | (edx_38 & 0xFF00 | edx_38 << 0x10) << 0x08;
			}
			Eq_137 rdx_81;
			rdx_81.u0 = rcx->u0.t0000.u0;
			if (rdx_81 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
			{
				rdx->dw0004 = 0x00;
				return 0x00;
			}
			else
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				rdx->dw0004 = (ui32) rdx_81.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if ((&rcx->u0)[1] != 0x00)
				{
					uint32 edx_116 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
					rdx->dw0004 = (edx_116 & 0x00FF0000 | edx_116 >> 0x10) >> 0x08 | (edx_116 & 0xFF00 | edx_116 << 0x10) << 0x08;
				}
				Eq_137 rdx_159;
				rdx_159.u0 = rcx->u0.t0000.u0;
				if (rdx_159 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				{
					rdx->dw0008 = 0x00;
					return 0x00;
				}
				else
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					rdx->dw0008 = (ui32) rdx_159.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					if ((&rcx->u0)[1] != 0x00)
					{
						uint32 edx_194 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
						rdx->dw0008 = (edx_194 & 0x00FF0000 | edx_194 >> 0x10) >> 0x08 | (edx_194 << 0x10 | edx_194 & 0xFF00) << 0x08;
					}
					Eq_137 rdx_237;
					rdx_237.u0 = rcx->u0.t0000.u0;
					if (rdx_237 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
					{
						rdx->dw000C = 0x00;
						return 0x00;
					}
					else
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						rdx->dw000C = (ui32) rdx_237.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
						if ((&rcx->u0)[1] != 0x00)
						{
							uint32 edx_272 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
							rdx->dw000C = (edx_272 & 0x00FF0000 | edx_272 >> 0x10) >> 0x08 | (edx_272 << 0x10 | edx_272 & 0xFF00) << 0x08;
						}
						return 0x01;
					}
				}
			}
		}
	}
	rdx->dw0000 = 0x00;
	return 0x00;
}

// 000000018001D8D0: Register word32 fn000000018001D8D0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_13384) rdx)
// Called from:
//      fn0000000180008870
//      fn000000018000BA90
//      fn000000018000DD30
//      fn000000018000DE40
//      fn00000001800150F0
//      fn000000018001CE80
word32 fn000000018001D8D0(union Eq_3676 * rcx, struct Eq_13384 * rdx)
{
	Eq_137 rdx_9;
	rdx_9.u0 = rcx->u0.t0000.u0;
	if (rdx_9 != 0x00)
	{
		Eq_1342 eax_19 = rcx->u0.t0008.u0 + 0x04;
		if (eax_19 <= ((rcx->u0).t000C).u0)
		{
			rcx->u0.t0008.u0 = (int32) eax_19;
			rdx->dw0000 = (ui32) rdx_9.u2[(uint64) ((word64) eax_19 - 4)];
			if ((&rcx->u0)[1] != 0x00)
			{
				uint32 edx_39 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
				rdx->dw0000 = (edx_39 & 0x00FF0000 | edx_39 >> 0x10) >> 0x08 | (edx_39 & 0xFF00 | edx_39 << 0x10) << 0x08;
			}
			Eq_137 rdx_82;
			rdx_82.u0 = rcx->u0.t0000.u0;
			if (rdx_82 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
			{
				rdx->dw0004 = 0x00;
				return 0x00;
			}
			else
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				rdx->dw0004 = (ui32) rdx_82.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if ((&rcx->u0)[1] != 0x00)
				{
					uint32 edx_117 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
					rdx->dw0004 = (edx_117 & 0x00FF0000 | edx_117 >> 0x10) >> 0x08 | (edx_117 & 0xFF00 | edx_117 << 0x10) << 0x08;
				}
				Eq_137 rdx_160;
				rdx_160.u0 = rcx->u0.t0000.u0;
				if (rdx_160 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				{
					rdx->dw0008 = 0x00;
					return 0x00;
				}
				else
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					rdx->dw0008 = (ui32) rdx_160.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					if ((&rcx->u0)[1] != 0x00)
					{
						uint32 edx_195 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
						rdx->dw0008 = (edx_195 & 0x00FF0000 | edx_195 >> 0x10) >> 0x08 | (edx_195 << 0x10 | edx_195 & 0xFF00) << 0x08;
					}
					Eq_137 rdx_238;
					rdx_238.u0 = rcx->u0.t0000.u0;
					if (rdx_238 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
					{
						rdx->dw000C = 0x00;
						return 0x00;
					}
					else
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						rdx->dw000C = (ui32) rdx_238.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
						if ((&rcx->u0)[1] != 0x00)
						{
							uint32 edx_273 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
							rdx->dw000C = (edx_273 & 0x00FF0000 | edx_273 >> 0x10) >> 0x08 | (edx_273 << 0x10 | edx_273 & 0xFF00) << 0x08;
						}
						Eq_137 rdx_316;
						rdx_316.u0 = rcx->u0.t0000.u0;
						if (rdx_316 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
						{
							rdx->dw0010 = 0x00;
							return 0x00;
						}
						else
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							rdx->dw0010 = (ui32) rdx_316.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							if ((&rcx->u0)[1] != 0x00)
							{
								uint32 edx_351 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
								rdx->dw0010 = (edx_351 & 0x00FF0000 | edx_351 >> 0x10) >> 0x08 | (edx_351 << 0x10 | edx_351 & 0xFF00) << 0x08;
							}
							if (fn0000000180006F20(rcx, rdx + 1) == 0x00 || (fn0000000180006F20(rcx, &rdx->dw0010 + 2) == 0x00 || (fn0000000180006F20(rcx, &rdx->dw0010 + 3) == 0x00 || (fn0000000180006F20(rcx, &rdx->dw0010 + 4) == 0x00 || (fn0000000180006F20(rcx, &rdx->dw0010 + 5) == 0x00 || (fn0000000180006F20(rcx, rdx + 2) == 0x00 || (fn0000000180006F20(rcx, &rdx->dw0010 + 7) == 0x00 || (fn0000000180006F20(rcx, &rdx->dw0010 + 8) == 0x00 || (fn0000000180006F20(rcx, &rdx->dw0010 + 9) == 0x00 || fn0000000180006F20(rcx, &rdx->dw0010 + 0x0A) == 0x00)))))))))
								return 0x00;
							return (word32) (fn0000000180006F20(rcx, rdx + 3) != 0x00);
						}
					}
				}
			}
		}
	}
	rdx->dw0000 = 0x00;
	return 0x00;
}

// 000000018001DBF0: void fn000000018001DBF0(Register (ptr64 Eq_9415) rcx, Register (arr real32) rdx, Register (arr real32) r8)
// Called from:
//      fn00000001800068E0
void fn000000018001DBF0(struct Eq_9415 * rcx, real32 rdx[], real32 r8[])
{
	ptr64 fp;
	ui64 rax_21 = g_qw80030008 ^ fp - 0x68;
	cup16 bp_103;
	for (bp_103 = 0x00; bp_103 < 0x04; ++bp_103)
	{
		cup16 r9w_144;
		uint64 r11_55 = (uint64) ((word32) bp_103 * 0x04);
		for (r9w_144 = 0x00; r9w_144 < 0x04; ++r9w_144)
		{
			uint64 r10_58 = (uint64) r9w_144;
			uint64 rax_64 = (uint64) (word32) (r11_55 + r10_58);
			cup16 r8w_147;
			word128 xmm1_67 = SEQ(0, (fp - 0x68)[rax_64]);
			uint64 rbx_70 = (uint64) (word32) rax_64;
			real32 v40_89;
			for (r8w_147 = 0x00; r8w_147 < 0x04; ++r8w_147)
			{
				uint64 rcx_73 = (uint64) r8w_147;
				v40_89 = (real32) xmm1_67 + r8[(uint64) ((word32) r10_58 + (word32) rcx_73 * 0x04)] * rdx[(uint64) ((word32) (r11_55 + rcx_73))];
				xmm1_67 = SEQ(SLICE(xmm1_67, word96, 32), v40_89);
			}
			(fp - 0x68)[rbx_70] = v40_89;
		}
	}
	rcx->ow0000 = 0;
	rcx->ow0010 = 0;
	rcx->ow0020 = 0;
	rcx->ow0030 = 0;
	word64 qwLoc70;
	fn0000000180023580(rax_21 ^ fp - 0x68, qwLoc70);
}

// 000000018001DD00: void fn000000018001DD00(Register (ptr64 Eq_9347) rcx, Register (ptr64 Eq_9348) rdx)
// Called from:
//      fn00000001800068E0
void fn000000018001DD00(struct Eq_9347 * rcx, struct Eq_9348 * rdx)
{
	rdx->r0000 = 1.0F - (rcx->r0004 + rcx->r0004) * rcx->r0004 - (rcx->r0008 + rcx->r0008) * rcx->r0008;
	rdx->r0010 = (rcx->r0000 + rcx->r0000) * rcx->r0004 + (rcx->r000C + rcx->r000C) * rcx->r0008;
	rdx->r0020 = (rcx->r0000 + rcx->r0000) * rcx->r0008 - (rcx->r000C + rcx->r000C) * rcx->r0004;
	rdx->r0004 = (rcx->r0000 + rcx->r0000) * rcx->r0004 - (rcx->r000C + rcx->r000C) * rcx->r0008;
	rdx->r0014 = 1.0F - (rcx->r0000 + rcx->r0000) * rcx->r0000 - (rcx->r0008 + rcx->r0008) * rcx->r0008;
	rdx->r0024 = (rcx->r000C + rcx->r000C) * rcx->r0000 + (rcx->r0004 + rcx->r0004) * rcx->r0008;
	rdx->r0008 = (rcx->r0000 + rcx->r0000) * rcx->r0008 + (rcx->r000C + rcx->r000C) * rcx->r0004;
	rdx->r0018 = (rcx->r0004 + rcx->r0004) * rcx->r0008 - (rcx->r000C + rcx->r000C) * rcx->r0000;
	real32 v101_176 = 1.0F - (rcx->r0000 + rcx->r0000) * rcx->r0000;
	real32 v108_185 = (rcx->r0004 + rcx->r0004) * rcx->r0004;
	rdx->dw000C = 0x00;
	rdx->dw001C = 0x00;
	rdx->qw002C = 0x00;
	rdx->qw0034 = 0x00;
	rdx->dw003C = 0x3F800000;
	rdx->r0028 = v101_176 - v108_185;
}

// 000000018001DE90: Register uint128 fn000000018001DE90(Register word16 cx)
// Called from:
//      fn0000000180005100
uint128 fn000000018001DE90(word16 cx)
{
	uint32 edx_6 = (word32) cx;
	uint64 rdx_15 = (uint64) (edx_6 & 0x03FF);
	ui32 edx_29 = (word32) rdx_15;
	ui32 ecx_22 = edx_6 >> 0x0A & 0x1F;
	if (ecx_22 != 0x00)
	{
		if (ecx_22 != 0x1F)
			return (uint128) ((edx_6 >> 0x0F << 0x12 | (word32) rdx_15) << 0x0D | (ecx_22 << 0x17) + 0x38000000);
		if (edx_29 != 0x00)
			return (uint128) ((edx_6 >> 0x0F << 0x12 | edx_29 | 0x0003FC00) << 0x0D);
		return (uint128) (edx_6 >> 0x0F << 0x1F | 0x7F800000);
	}
	else
	{
		if (edx_29 == 0x00)
			return (uint128) (edx_6 >> 0x0F << 0x1F);
		word32 rdx_32_32_137;
		do
		{
			uint64 rdx_67 = (uint64) (edx_29 * 0x02);
			edx_29 = (word32) rdx_67;
			rdx_32_32_137 = SLICE(rdx_67, word32, 32);
			--ecx_22;
		} while (__bt<word32>(edx_29, 0x0A));
		word32 edx_79;
		__btr<word32>(edx_29, 0x0A, out edx_79);
		++ecx_22;
		rdx_15 = SEQ(rdx_32_32_137, edx_79);
		return (uint128) ((edx_6 >> 0x0F << 0x12 | (word32) rdx_15) << 0x0D | (ecx_22 << 0x17) + 0x38000000);
	}
}

// 000000018001DF30: void fn000000018001DF30(Register word64 rdx, Register Eq_1756 r8)
// Called from:
//      fn0000000180003C80
void fn000000018001DF30(word64 rdx, Eq_1756 r8)
{
	ptr64 fp;
	ui64 rax_12 = g_qw80030008 ^ fp - 0x0168;
	word64 qwLoc0128;
	memset(&qwLoc0128, 0, 0x0104);
	WideCharToMultiByte(65001, 0x00, r8, -1, &qwLoc0128, 0x0103, 0x00, null);
	union Eq_61952 * rax_48 = fn00000001800229E0();
	if (rax_48 != null)
	{
		fn000000018001DFF0(rdx, r8, rax_48);
		fn0000000180022720(rax_48);
	}
	word64 qwLoc0170;
	fn0000000180023580(rax_12 ^ fp - 0x0168, qwLoc0170);
}

// 000000018001DFF0: void fn000000018001DFF0(Register word64 rdx, Register Eq_1756 r8, Register (ptr64 Eq_61952) r9)
// Called from:
//      fn000000018001DF30
void fn000000018001DFF0(word64 rdx, Eq_1756 r8, union Eq_61952 * r9)
{
	ptr64 fp;
	ui64 rax_30 = g_qw80030008 ^ fp - 3432;
	if (rdx != 0x00 && (r8 != 0x00 && r9 != null))
	{
		Eq_61989 tLoc0D00;
		tLoc0D00.qw0000 = 0x00;
		tLoc0D00.dw0008 = 0x00;
		Eq_61999 rbx_1110;
		rbx_1110.u1 = 0x00;
		if (fn0000000180022880(r9, &tLoc0D00) == 0x00)
		{
			word64 qwLoc0468;
			memset(&qwLoc0468, 0, 0x0208);
			int32 r15d_322 = ~0x00;
			uint64 r12_261 = 0x00;
			int32 edi_256 = 0x00;
			Eq_62028 r8_289;
			r8_289.u0 = tLoc0D00.t0000.u0;
			word64 qwLoc0668;
			word64 qwLoc0C88;
			word64 qwLoc0A78;
			word64 qwLoc0868;
			if (r8_289 != 0x00)
			{
				rbx_1110.u0 = 0x00;
				do
				{
					memset(&qwLoc0668, 0, 0x0104);
					up32 ebx_102 = (word32) rbx_1110;
					fn0000000180022830(r9, fp - 3304, &qwLoc0668, 0x0104, rbx_1110, ebx_102, rbx_1110, ebx_102);
					memset(&qwLoc0C88, 0, 0x0208);
					MultiByteToWideChar(65001, 0x00, &qwLoc0668, -1, &qwLoc0C88, 0x0103);
					word16 bx_674 = (word16) ebx_102;
					up32 esi_236 = ebx_102;
					ui64 rax_153 = ~0x00;
					word48 rbx_48_16_218 = SEQ(SLICE(rbx_1110, word32, 32), SLICE(ebx_102, word16, 16));
					int32 eax_164;
					do
					{
						++rax_153;
						eax_164 = (word32) rax_153;
					} while ((&qwLoc0C88)[rax_153].u0 != bx_674);
					if (eax_164 > 0x00)
					{
						word16 ax_177 = (&qwLoc0C88)[(int64) (eax_164 - 0x01)].u0;
						if (ax_177 == 0x5C || ax_177 == 0x2F)
							esi_236 = 0x01;
					}
					memset(&qwLoc0A78, 0, 0x0208);
					memset(&qwLoc0868, 0, 0x0200);
					_wsplitpath(&qwLoc0C88, null, null, null, &qwLoc0868);
					rbx_1110 = SEQ(rbx_48_16_218, bx_674);
					if (qwLoc0868 == 0x2E)
					{
						Eq_61999 rcx_221 = rbx_1110;
						word16 ax_227;
						do
						{
							ax_227 = (word16) *(qwLoc0868.a0002 + rcx_221);
							*(&qwLoc0A78 + rcx_221) = (word64) ax_227;
							rcx_221 = (word64) rcx_221 + 2;
						} while (ax_227 != 0x00);
					}
					else
					{
						qwLoc0A78 = (word64) bx_674;
						rbx_1110 = SEQ(rbx_48_16_218, bx_674);
					}
					if (esi_236 == 0x00 && _wcsicmp(&qwLoc0A78, "b\0d\0a\0e\0\0") == 0x00)
					{
						r15d_322 = edi_256;
						uint64 qwLoc0CC8;
						r12_261 = qwLoc0CC8;
						Eq_61999 rax_265 = rbx_1110;
						word16 cx_271;
						do
						{
							cx_271 = (word16) *(&qwLoc0C88 + rax_265);
							*(&qwLoc0468 + rax_265) = (word64) cx_271;
							rax_265 = (word64) rax_265 + 2;
						} while (cx_271 != 0x00);
					}
					++edi_256;
					r8_289.u0 = tLoc0D00.t0000.u0;
					if ((int64) edi_256 < r8_289)
					{
						fn0000000180022920(r9);
						r8_289.u0 = tLoc0D00.t0000.u0;
					}
				} while ((int64) edi_256 < r8_289);
			}
			word16 bx_677 = (word16) rbx_1110;
			word32 r12d_567 = (word32) r12_261;
			if (r15d_322 >= 0x00)
			{
				Eq_137 rax_360 = fn000000018001E410(r9, r8_289, r15d_322, r12_261);
				if (rax_360 != 0x00)
				{
					word64 qwLoc0258;
					memset(&qwLoc0258, 0, 0x0208);
					fn000000018001D1F0(r8, &qwLoc0258);
					memset(&qwLoc0A78, 0, 0x0208);
					memset(&qwLoc0868, 0, 0x0200);
					memset(&qwLoc0668, 0, 0x0200);
					_wsplitpath(&qwLoc0468, null, null, &qwLoc0868, &qwLoc0668);
					Eq_61999 rcx_444 = rbx_1110;
					word16 ax_450;
					do
					{
						ax_450 = (word16) *(&qwLoc0868 + rcx_444);
						*(&qwLoc0A78 + rcx_444) = (word64) ax_450;
						rcx_444 = (word64) rcx_444 + 2;
					} while (ax_450 != 0x00);
					struct Eq_62206 * rcx_458 = fp - 0x0A7A;
					word16 bx_679;
					do
					{
						++rcx_458;
						bx_679 = (word16) rbx_1110;
					} while (rcx_458->t0000 != bx_677);
					uint64 rdx_469 = 0x00;
					word16 ax_479;
					do
					{
						ax_479 = (&qwLoc0668)[rdx_469].u0;
						rcx_458[rdx_469] = (struct Eq_62206) ax_479;
						++rdx_469;
					} while (ax_479 != 0x00);
					memset(&qwLoc0C88, 0, 0x0208);
					Eq_61999 rcx_503 = rbx_1110;
					word16 ax_509;
					do
					{
						ax_509 = (word16) *(&qwLoc0258 + rcx_503);
						*(&qwLoc0C88 + rcx_503) = (word64) ax_509;
						rcx_503 = (word64) rcx_503 + 2;
					} while (ax_509 != 0x00);
					struct Eq_62252 * rcx_517 = fp - 0x0C8A;
					word32 ebx_559;
					do
					{
						++rcx_517;
						ebx_559 = (word32) rbx_1110;
					} while (rcx_517->t0000 != bx_679);
					uint64 rdx_528 = 0x00;
					word16 ax_538;
					do
					{
						ax_538 = (&qwLoc0A78)[rdx_528].u0;
						rcx_517[rdx_528] = (struct Eq_62252) ax_538;
						++rdx_528;
					} while (ax_538 != 0x00);
					Eq_62276 tLoc0D28;
					tLoc0D28.t0000.u0 = (int64) rbx_1110;
					tLoc0D28.t0008.u0 = (int64) rbx_1110;
					tLoc0D28.dw0010 = ebx_559;
					if (r12d_567 != 0x00)
					{
						tLoc0D28.t0000.u0 = (byte *) rax_360;
						tLoc0D28.dw000C = r12d_567;
						tLoc0D28.dw0008 = ebx_559;
						fn0000000180003F40(&tLoc0D28, rdx, &qwLoc0C88);
					}
					fn000000018002367C(rax_360);
				}
			}
l000000018001E3E0:
			word64 qwLoc0D70;
			fn0000000180023580(rax_30 ^ fp - 3432, qwLoc0D70);
			return;
		}
	}
	goto l000000018001E3E0;
}

// 000000018001E410: Register uint64 fn000000018001E410(Register (ptr64 Eq_61952) rdx, Register Eq_62028 r8, Register int32 r9d, Stack uint64 qwArg28)
// Called from:
//      fn000000018001DFF0
uint64 fn000000018001E410(union Eq_61952 * rdx, Eq_62028 r8, int32 r9d, uint64 qwArg28)
{
	word64 r9;
	r9d = (word32) r9;
	if (rdx == null || fn00000001800228A0(rdx) != 0x00)
		return 0x00;
	int32 ebx_123 = 0x00;
	if (r8 != 0x00)
	{
		while (r9d != ebx_123)
		{
			++ebx_123;
			if ((int64) ebx_123 < r8)
				fn0000000180022920(rdx);
			if ((int64) ebx_123 >= r8)
				return fn000000018001E4A0(rdx, qwArg28);
		}
	}
	return fn000000018001E4A0(rdx, qwArg28);
}

// 000000018001E4A0: Register Eq_137 fn000000018001E4A0(Register (ptr64 Eq_61952) rdx, Register uint64 r8)
// Called from:
//      fn000000018001E410
Eq_137 fn000000018001E4A0(union Eq_61952 * rdx, uint64 r8)
{
	Eq_62434 esi_46 = (word32) r8;
	Eq_137 rax_110;
	if (rdx != null && r8 != 0x00)
	{
		if (fn00000001800229F0(rdx) == 0x00)
		{
			uint64 r14_48 = (uint64) esi_46;
			Eq_137 rax_51 = fn0000000180023684((uint64) esi_46);
			if (rax_51 == 0x00)
			{
				fn0000000180022770(rdx);
				rax_110.u0 = 0x00;
			}
			else
			{
				memset(rax_51, 0, (size_t) r14_48);
				fn00000001800230A0(rdx, rax_51, esi_46);
				fn0000000180022770(rdx);
				rax_110 = rax_51;
			}
			return rax_110;
		}
		fn0000000180022770(rdx);
	}
	rax_110.u0 = 0x00;
	return rax_110;
}

// 000000018001E550: Register word32 fn000000018001E550(Register Eq_137 rcx, Register (ptr64 up32) rdx, Register Eq_137 r8, Register (ptr64 Eq_8431) r9)
// Called from:
//      fn0000000180005C80
//      fn0000000180006420
word32 fn000000018001E550(Eq_137 rcx, up32 * rdx, Eq_137 r8, union Eq_8431 * r9)
{
	word64 r8_600;
	up32 ebx_149 = *rdx;
	up32 esi_176 = r9->u1.dw0000;
	Eq_137 r13_131 = rcx;
	ptr64 fp;
	if (ebx_149 != 0x00)
		*rdx = 0x00;
	else
	{
		ebx_149 = 0x01;
		r13_131 = fp - 0x0098;
	}
	Eq_62499 tLoc88;
	tLoc88.t0000.u0 = (byte *) r8;
	tLoc88.ptr0030 = &g_t80020360;
	tLoc88.ptr0038 = &g_t80020370;
	tLoc88.dw0008 = 0x00;
	tLoc88.qw0020 = 0x00;
	tLoc88.qw0040 = 0x00;
	struct Eq_62535 * rax_81 = fn0000000180020360(0x01, 0x1BF0);
	uint64 rax_352;
	if (rax_81 == null)
	{
		rax_352 = 0xFFFFFFFC;
		return (word32) rax_352;
	}
	tLoc88.ptr0028 = rax_81;
	rax_81->ptr0000 = &tLoc88;
	rax_81->ptr0040 = null;
	rax_81->dw0008 = 0x3F34;
	word32 eax_110 = fn000000018001E810(&tLoc88, 0x0F, out r8_600);
	if (eax_110 != 0x00)
	{
		fn0000000180020370(rax_81);
		tLoc88.qw0028 = 0x00;
	}
	if (eax_110 != 0x00)
	{
		rax_352 = (uint64) eax_110;
		return (word32) rax_352;
	}
	tLoc88.t0010.u0 = (byte *) r13_131;
	tLoc88.dw0018 = 0x00;
	word32 eax_134 = 0x00;
	uint64 rdi_215;
	word32 edi_243;
	while (true)
	{
		if (eax_134 == 0x00)
		{
			up32 eax_155 = ebx_149;
			if (ebx_149 > ~0x00)
				eax_155 = ~0x00;
			tLoc88.dw0018 = eax_155;
			ebx_149 -= eax_155;
		}
		if (tLoc88.dw0008 == 0x00)
		{
			up32 eax_183 = esi_176;
			if (esi_176 > ~0x00)
				eax_183 = ~0x00;
			tLoc88.dw0008 = eax_183;
			esi_176 -= eax_183;
		}
		int32 eax_213 = fn000000018001EB30(&tLoc88);
		rdi_215 = (uint64) eax_213;
		edi_243 = (word32) rdi_215;
		if (eax_213 != 0x00)
			break;
		eax_134 = tLoc88.dw0018;
	}
	r9->u1.dw0000 -= tLoc88.dw0008 + esi_176;
	if (r13_131 != fp - 0x0098)
		*rdx = tLoc88.dw001C;
	else if (tLoc88.dw001C != 0x00 && edi_243 == ~0x04)
		ebx_149 = 0x01;
	word32 r14d_344 = 0x00;
	if (tLoc88.qw0030 != 0x00 && tLoc88.qw0038 != 0x00)
	{
		struct Eq_62535 * rdx_276 = tLoc88.ptr0028;
		if (rdx_276 != null && (rdx_276->ptr0000 == &tLoc88 && (rdx_276->dw0008 <= 16211 && rdx_276->dw0008 >= 0x3F34)))
		{
			struct Eq_62535 * rax_292 = rdx_276->ptr0040;
			if (rax_292 != null)
			{
				fn0000000180020370(rax_292);
				rdx_276 = tLoc88.ptr0028;
			}
			fn0000000180020370(rdx_276);
		}
	}
	if (edi_243 != 0x01)
	{
		if (edi_243 == 0x02)
		{
			r14d_344 = (word32) rdi_215 - 0x05;
			goto l000000018001E71D;
		}
		if (edi_243 != ~0x04)
		{
l000000018001E71A:
			r14d_344 = edi_243;
			goto l000000018001E71D;
		}
		r14d_344 = (word32) rdi_215 + 0x02;
		if (tLoc88.dw0018 + ebx_149 == 0x00)
			goto l000000018001E71A;
	}
l000000018001E71D:
	rax_352 = (uint64) r14d_344;
	return (word32) rax_352;
}

// 000000018001E750: Register word32 fn000000018001E750(Register (ptr64 Eq_62557) rcx, Register out (ptr64 code) r8Out)
// Called from:
//      fn000000018001E810
word32 fn000000018001E750(struct Eq_62557 * rcx, <anonymous> & r8Out)
{
	if (rcx != null && (rcx->ptr0030 != null && rcx->ptr0038 != null))
	{
		struct Eq_62756 * rdx_13 = rcx->ptr0028;
		if (rdx_13 != null && (rdx_13->ptr0000 == rcx && ((rdx_13->t0008).u0 <= 16211 && (rdx_13->t0008).u0 >= 0x3F34)))
		{
			rdx_13->dw0024 = 0x00;
			rcx->dw001C = 0x00;
			rcx->dw000C = 0x00;
			rcx->qw0020 = 0x00;
			ui32 eax_39 = rdx_13->dw0010;
			if (eax_39 != 0x00)
				rcx->dw004C = eax_39 & 0x01;
			rdx_13->t0008.u1 = 0x3F34;
			rdx_13->ptr0088 = &rdx_13->ptr0088 + 0x0099;
			rdx_13->ptr0068 = &rdx_13->ptr0088 + 0x0099;
			rdx_13->ptr0060 = &rdx_13->ptr0088 + 0x0099;
			rdx_13->dw0014 = 0x00;
			rdx_13->dw0018 = ~0x00;
			rdx_13->dw001C = 0x8000;
			rdx_13->qw0028 = 0x00;
			rdx_13->qw0048 = 0x00;
			rdx_13->dw1BE0 = 0x01;
			rdx_13->dw1BE4 = ~0x00;
			r8Out = null;
			return 0x00;
		}
	}
	<anonymous> * r8;
	r8Out = r8;
	return ~0x01;
}

// 000000018001E810: Register word32 fn000000018001E810(Register (ptr64 Eq_62557) rcx, Register int32 edx, Register out (ptr64 code) r8Out)
// Called from:
//      fn000000018001E550
//      fn000000018001E940
word32 fn000000018001E810(struct Eq_62557 * rcx, int32 edx, <anonymous> & r8Out)
{
	word64 rdx_132;
	word64 rdx;
	edx = (word32) rdx;
	uint64 rdi_13 = (uint64) edx;
	int32 edi_62 = (word32) rdi_13;
	<anonymous> * r8;
	if (rcx != null && rcx->ptr0030 != null)
	{
		r8 = rcx->ptr0038;
		if (r8 != null)
		{
			struct Eq_62756 * rsi_27 = rcx->ptr0028;
			if (rsi_27 != null && (rsi_27->ptr0000 == rcx && ((rsi_27->t0008).u0 <= 16211 && (rsi_27->t0008).u0 >= 0x3F34)))
			{
				uint64 rbp_127;
				if (edx < 0x00)
				{
					if (edx < ~0x0E)
						goto l000000018001E919;
					rbp_127 = 0x00;
					rdi_13 = (uint64) -edi_62;
				}
				else
				{
					rbp_127 = (uint64) ((edi_62 >> 0x04) + 0x05);
					if (edi_62 < 0x30)
						rdi_13 = (uint64) (edi_62 & 0x0F);
				}
				ui32 ebp_139 = (word32) rbp_127;
				up32 edi_89 = (word32) rdi_13;
				uint64 rax_166;
				if (edi_89 == 0x00 || edi_89 <= 0x0F && edi_89 >= 0x08)
				{
					uint64 rdx_108 = rsi_27->qw0040;
					word32 edx_125 = (word32) rdx_108;
					if (rdx_108 != 0x00 && rsi_27->dw0030 != edi_89)
					{
						r8();
						rsi_27->qw0040 = 0x00;
						word32 rdx_32_32_285 = SLICE(rdx_132, word32, 32);
					}
					rsi_27->dw0010 = ebp_139;
					rsi_27->dw0030 = edi_89;
					if (rcx->ptr0030 != null && rcx->ptr0038 != null)
					{
						struct Eq_62756 * rcx_150 = rcx->ptr0028;
						if (rcx_150 != null && (rcx_150->ptr0000 == rcx && ((rcx_150->t0008).u0 <= 16211 && (rcx_150->t0008).u0 >= 0x3F34)))
						{
							rcx_150->qw0034 = 0x00;
							rcx_150->dw003C = 0x00;
							rax_166 = (uint64) fn000000018001E750(rcx, out r8);
l000000018001E8FF:
							r8Out = r8;
							return (word32) rax_166;
						}
					}
				}
l000000018001E919:
				rax_166 = 0xFFFFFFFE;
				goto l000000018001E8FF;
			}
		}
	}
	r8Out = r8;
	return ~0x01;
}

// 000000018001E940: Register word32 fn000000018001E940(Register (ptr64 Eq_62557) rcx, Register int32 edx, Register (ptr64 byte) r8, Register word32 r9d)
// Called from:
//      fn0000000180022A10
word32 fn000000018001E940(struct Eq_62557 * rcx, int32 edx, byte * r8, word32 r9d)
{
	word64 r8_95;
	word64 rdx;
	edx = (word32) rdx;
	if (r8 == null || (*r8 != 0x31 || r9d != 88))
		return ~0x05;
	if (rcx == null)
		return (word32) rcx - 0x02;
	rcx->qw0020 = 0x00;
	if (rcx->ptr0030 == null)
	{
		rcx->qw0040 = 0x00;
		rcx->ptr0030 = &g_t80020360;
	}
	if (rcx->ptr0038 == null)
		rcx->ptr0038 = &g_t80020370;
	rcx->ptr0030();
	struct Eq_62756 * rax_78;
	uint64 rax_121;
	if (rax_78 == null)
		rax_121 = (uint64) ((word32) rax_78 - 0x04);
	else
	{
		rcx->ptr0028 = rax_78;
		rax_78->ptr0000 = rcx;
		rax_78->qw0040 = 0x00;
		rax_78->t0008.u0 = 0x3F34;
		word32 eax_102 = fn000000018001E810(rcx, edx, out r8_95);
		if (eax_102 != 0x00)
		{
			rcx->ptr0038();
			rcx->ptr0028 = null;
		}
		rax_121 = (uint64) eax_102;
	}
	return (word32) rax_121;
}

// 000000018001EA30: Register word32 fn000000018001EA30(Register (ptr64 Eq_63077) rcx, Register word64 rdx, Register word32 r8d)
// Called from:
//      fn000000018001EB30
word32 fn000000018001EA30(struct Eq_63077 * rcx, word64 rdx, word32 r8d)
{
	uint64 rbp_19 = (uint64) r8d;
	struct Eq_63084 * rbx_14 = rcx->ptr0028;
	Eq_734 ebp_75 = (word32) rbp_19;
	uint64 rax_168;
	if (rbx_14->ptr0040 == null)
	{
		rcx->ptr0030();
		void * rax_42;
		rbx_14->ptr0040 = rax_42;
		if (rax_42 == null)
		{
			rax_168 = 0x01;
			return (word32) rax_168;
		}
	}
	if (rbx_14->t0034.u0 == 0x00)
	{
		rbx_14->t0034.u0 = (uint32) (0x01 << rbx_14->b0030);
		rbx_14->t0038.u1 = 0x00;
	}
	uint64 rdi_72 = (uint64) rbx_14->t0034.u0;
	Eq_734 edi_76 = (word32) rdi_72;
	word32 ebp_105 = (word32) rbp_19;
	Eq_63095 eax_132;
	if (ebp_75 >= edi_76)
	{
		memcpy(rbx_14->ptr0040, rdx - rdi_72, edi_76);
		eax_132.u0 = rbx_14->t0034.u0;
		rbx_14->t003C.u0 = 0x00;
	}
	else
	{
		Eq_734 edi_86 = edi_76 - (rbx_14->t003C).u0;
		uint64 rcx_85 = (uint64) rbx_14->t003C.u0;
		if (edi_86 > ebp_75)
			edi_86 = ebp_75;
		memcpy((char *) rbx_14->ptr0040 + rcx_85, rdx - rbp_19, edi_86);
		Eq_63095 ebp_108 = ebp_105 - edi_86;
		if (ebp_108 != 0x00)
		{
			uint64 r8_136 = (uint64) ebp_108;
			memcpy(rbx_14->ptr0040, rdx - r8_136, (size_t) r8_136);
			eax_132.u0 = rbx_14->t0034.u0;
			rbx_14->t003C.u0 = (uint32) ebp_108;
		}
		else
		{
			rbx_14->t003C.u0 = (uint32) ((word64) edi_86 + (rbx_14->t003C).u0);
			Eq_63095 eax_115;
			eax_115.u0 = rbx_14->t003C.u0;
			if (eax_115 == (rbx_14->t0034).u0)
				eax_115.u0 = 0x00;
			rbx_14->t003C.u0 = (uint32) eax_115;
			Eq_63095 eax_126;
			eax_126.u0 = rbx_14->t0038.u0;
			if (eax_126 >= (rbx_14->t0034).u0)
			{
l000000018001EB12:
				rax_168 = 0x00;
				return (word32) rax_168;
			}
			eax_132 = eax_126 + edi_86;
		}
	}
	rbx_14->t0038.u0 = (uint32) eax_132;
	goto l000000018001EB12;
}

// 000000018001EB30: Register word32 fn000000018001EB30(Register (ptr64 Eq_62611) rcx)
// Called from:
//      fn000000018001E550
//      fn00000001800230A0
word32 fn000000018001EB30(struct Eq_62611 * rcx)
{
	word64 r10_7340;
	struct Eq_63966 * rbp_4699;
	word64 r10_7361;
	word64 r10_7353;
	word32 ebx_3776;
	byte * r14_3772;
	word32 r15d_3785;
	word32 edi_3610;
	word32 r12d_4290;
	word64 r10_7342;
	struct Eq_63656 * rbp_3920;
	struct Eq_66241 * rbp_3916;
	struct Eq_63551 * rbp_3899;
	word32 edi_3481;
	word32 ebx_3195;
	byte * r14_3191;
	word32 r15d_3204;
	uint32 r15d_7354;
	word32 ebx_348;
	byte * r14_344;
	word32 r15d_357;
	word64 r10_7358;
	uint32 r15d_259;
	word32 ebx_151;
	byte * r14_147;
	word32 r15d_160;
	word64 rdx_2246;
	word32 ecx_2230;
	word32 eax_2216;
	word64 rdx_2206;
	struct Eq_64215 * r13_2150;
	word64 r10_7332;
	word64 rdx_7343;
	word64 r10_7335;
	struct Eq_63589 * rbp_2132;
	word32 ebx_2107;
	word32 ebx_2078;
	byte * r14_2074;
	word32 r15d_2087;
	struct Eq_63494 * r13_2056;
	uint32 r15d_2028;
	word32 ebx_2024;
	uint32 eax_2008;
	word32 ebx_1992;
	uint32 r15d_1988;
	word32 ebx_1912;
	byte * r14_1908;
	word32 r15d_1921;
	ui32 r15d_1865;
	word32 ebx_1765;
	byte * r14_1761;
	word32 r15d_1777;
	struct Eq_63467 * r13_1720;
	word32 ebx_1689;
	word32 ebx_1660;
	byte * r14_1656;
	word32 r15d_1669;
	word64 r10_7360;
	struct Eq_64864 * rbp_4520;
	struct Eq_65146 * rbp_4516;
	uint32 r15d_1602;
	word32 ebx_1599;
	uint32 eax_1582;
	word32 ebx_1573;
	uint32 r15d_1569;
	word32 ebx_1493;
	byte * r14_1489;
	word32 r15d_1502;
	ui32 r15d_1446;
	uint32 eax_7350;
	word32 ebx_1346;
	byte * r14_1342;
	word32 r15d_1358;
	byte * r8_1279;
	struct Eq_65194 * rbp_2360;
	word64 r14_1222;
	struct Eq_65125 * r13_1221;
	word64 r12_7369;
	word64 rdi_7368;
	word32 esi_7367;
	struct Eq_65117 * rbp_1226;
	word32 ebx_7366;
	word64 r14_1178;
	Eq_67849 (* r12_1176)[];
	word64 rdi_7365;
	word32 esi_7364;
	word32 ebx_7363;
	word64 r8_7347;
	word64 rdx_7349;
	word64 rdx_7362;
	word32 eax_930;
	word32 ebx_946;
	word32 r12d_5080;
	uint32 r15d_853;
	word32 ebx_826;
	byte * r14_822;
	word32 r15d_835;
	uint32 r15d_912;
	word32 ebx_886;
	byte * r14_882;
	word32 r15d_895;
	uint32 r15d_1008;
	word32 ebx_974;
	byte * r14_970;
	word32 r15d_983;
	uint32 r15d_854;
	uint32 eax_795;
	word32 ebx_745;
	byte * r14_741;
	word32 r15d_757;
	word32 r15d_713;
	byte * r8_701;
	word64 r14_663;
	struct Eq_65656 * r13_662;
	word64 r12_661;
	struct Eq_65652 * rdi_670;
	word32 esi_7371;
	struct Eq_65648 * rbp_667;
	word32 ebx_7370;
	word32 ebx_588;
	word32 ebx_549;
	byte * r14_545;
	word32 r15d_558;
	word32 r15d_7351;
	word32 ebx_473;
	uint32 r15d_469;
	word32 ebx_450;
	byte * r14_446;
	word32 r15d_459;
	word32 r15d_2419;
	word32 ebx_2400;
	byte * r14_2396;
	word32 r15d_2409;
	word32 ebx_2705;
	word32 ebx_2680;
	byte * r14_2676;
	word32 r15d_2689;
	uint32 r15d_2700;
	uint32 r15d_2566;
	word32 ebx_2547;
	byte * r14_2543;
	word32 r15d_2556;
	uint32 r15d_2976;
	word32 ebx_2949;
	byte * r14_2945;
	word32 r15d_2958;
	word32 ebx_2839;
	byte * r14_2836;
	word32 r15d_2848;
	word32 ebx_4408;
	uint32 r15d_4322;
	word32 ebx_4031;
	byte * r14_3964;
	word32 r15d_4049;
	ptr64 fp;
	struct Eq_63230 * rbp_1182 = fp - 24;
	struct Eq_63233 * rsp_1149 = fp - 0x98;
	struct Eq_62611 * rdi_1252 = rcx;
	if (rcx == null || (rcx->qw0030 == 0x00 || rcx->qw0038 == 0x00))
		return ~0x01;
	struct Eq_63251 * r13_1177 = rcx->ptr0028;
	if (r13_1177 == null || (r13_1177->ptr0000 != rcx || ((r13_1177->dw0008 > 16211 || r13_1177->dw0008 < 0x3F34) || (rcx->qw0010 == 0x00 || rcx->qw0000 == 0x00 && rcx->dw0008 != 0x00))))
		return ~0x01;
	if (r13_1177->dw0008 == 16191)
		r13_1177->dw0008 = 0x3F40;
	uint64 r10_1264 = (uint64) rcx->dw0018;
	uint64 rdx_1262 = (uint64) (word32) r10_1264;
	word64 r9_1254 = rcx->qw0010;
	up32 eax_115 = r13_1177->dw0008 - 0x3F34;
	up32 esi_109 = rcx->dw0008;
	word64 r14_100 = rcx->qw0000;
	Eq_63317 r15_3066;
	r15_3066.u1 = r13_1177->t0048.u1;
	uint32 ebx_1004 = r13_1177->dw004C;
	uint64 rax_2628;
	word64 rax_5825;
	if (eax_115 > 0x1E)
	{
l0000000180020258:
		rax_2628 = 0xFFFFFFFE;
		return (word32) rax_5825;
	}
l000000018001EC18:
	word32 r12d_312 = 0x00;
	up32 r10d_174 = (word32) r10_1264;
	word32 edx_171 = (word32) rdx_1262;
	word32 * r11_123 = &r13_1177->dw0074;
	ptr64 r8_1099 = &r13_1177->qw0068 + 1;
	struct Eq_63511 * r13_122;
	struct Eq_63527 * rbp_132;
	switch (eax_115)
	{
	case 0x00:
		uint64 rdx_3886 = (uint64) r13_1177->dw0010;
		byte dl_4316 = (byte) rdx_3886;
		if ((word32) rdx_3886 == 0x00)
		{
			r13_122->dw0008 = 0x3F40;
			goto l000000018001ECC5;
		}
		up32 ebx_139;
		if (ebx_139 < 0x10)
		{
			up32 ebx_4312;
			do
			{
				word32 esi_3894;
				if (esi_3894 == 0x00)
					goto l0000000180020120;
				word32 esi_5105 = esi_3894 - 0x01;
				word32 r15d_4323 = r15d_4049 + ((word32) (*r14_3964) << (byte) ebx_4031);
				ptr64 r14_4309 = r14_3964 + 1;
				ebx_4312 = ebx_4031 + 0x08;
			} while (ebx_4312 < 0x10);
		}
		byte r15b_4344 = (byte) r15d_4322;
		if ((dl_4316 & 0x02) != 0x00 && r15d_4322 == 35615)
		{
			if (r13_122->dw0030 == 0x00)
				r13_122->dw0030 = 0x0F;
			r13_122->t0020.u0 = 0x00;
			rbp_132->tFFFFFFB0.u1 = 35615;
			r13_122->t0020.u0 = (uint32) fn0000000180021060(0x00, rbp_132 - 80, 0x02);
			r13_122->dw0008 = 16181;
			word32 r15d_5016 = 0x00;
			word32 ebx_4883 = 0x00;
			goto l000000018001ECBD;
		}
		struct Eq_63544 * rax_4330 = r13_122->ptr0028;
		if (rax_4330 != null)
			rax_4330->dw0040 = ~0x00;
		uint32 r15d_4350 = r15d_4322;
		struct Eq_63750 * rdi_179;
		if ((r13_122->t0010.u0 & 0x01) != 0x00)
		{
			Eq_66982 ecx_4365 = ((word32) r15b_4344 << 0x08) + (r15d_4322 >> 0x08);
			uint32 edx_4371 = SLICE(ecx_4365 *64 138547333, word32, 32);
			if (ecx_4365 == ((ecx_4365 - edx_4371 >> 0x01) + edx_4371 >> 0x04) *s 0x1F)
			{
				if (((byte) r15d_4322 & 0x0F) != 0x08)
					goto l000000018001ED32;
				uint32 r15d_4411 = r15d_4322 >> 0x04;
				uint32 ecx_4422 = (r15d_4411 & 0x0F) + 0x08;
				word32 ebx_4898 = ebx_4408 + ~0x03;
				byte cl_4446 = (byte) ecx_4422;
				if (r13_122->dw0030 == 0x00)
					r13_122->dw0030 = ecx_4422;
				if (ecx_4422 <= 0x0F && ecx_4422 <= r13_122->dw0030)
				{
					r13_122->dw001C = 0x01 << cl_4446;
					r13_122->t0018.u0 = 0x00;
					r13_122->t0020.u0 = 0x01;
					rdi_179->t004C.u0 = 0x01;
					r13_122->dw0008 = ~(r15d_4411 >> 0x08) & 0x02 | 0x3F3D;
					word32 ebx_4895 = 0x00;
					word32 r15d_5028 = 0x00;
				}
				else
				{
					rdi_179->ptr0020 = &g_t80028928;
					r13_122->dw0008 = 0x3F51;
				}
				goto l000000018001ECC5;
			}
		}
		rdi_179->ptr0020 = &g_t800288F0;
		r13_122->dw0008 = 0x3F51;
		goto l000000018001ECC5;
	case 0x01:
		if (ebx_1004 < 0x10)
		{
			up32 ebx_2855;
			do
			{
				word32 esi_2825;
				if (esi_2825 == 0x00)
				{
					word32 r12d_4277 = rbp_132->dw0030;
					word32 ecx_4068 = rbp_132->dw0028;
					goto l0000000180020127;
				}
				word32 esi_5118 = esi_2825 - 0x01;
				word32 r15d_2859 = r15d_2848 + ((word32) (*r14_2836) << (byte) ebx_2839);
				ptr64 r14_2852 = r14_2836 + 1;
				ebx_2855 = ebx_2839 + 0x08;
			} while (ebx_2855 < 0x10);
		}
		Eq_63705 r15d_2858;
		r13_122->t0018.u0 = (int32) r15d_2858;
		Eq_66349 r15b_2863 = (byte) r15d_2858;
		if (r15b_2863 != 0x08)
		{
l000000018001ED32:
			rdi_179->ptr0020 = &g_t80028908;
			r13_122->dw0008 = 0x3F51;
			goto l000000018001ECC5;
		}
		if ((r15d_2858 & 0xE000) == 0x00)
		{
			struct Eq_63544 * rcx_2870 = r13_122->ptr0028;
			if (rcx_2870 != null)
				rcx_2870->dw0000 = r15d_2858 >> 0x08 & 0x01;
			if ((r13_122->t0018.u0 & 0x0200) != 0x00 && ((r13_122->t0010).u0 & 0x04) != 0x00)
			{
				uint64 rcx_2899 = (uint64) r13_122->t0020.u0;
				rbp_132->tFFFFFFB0.u0 = (byte) r15b_2863;
				rbp_132->bFFFFFFB1 = (byte) (r15d_2858 >> 0x08);
				r13_122->t0020.u0 = (uint32) fn0000000180021060((word32) rcx_2899, rbp_132 - 80, 0x02);
			}
			r13_122->dw0008 = 0x3F36;
			word32 r15d_5165 = 0x00;
			word32 ebx_5164 = 0x00;
			goto l000000018001EE90;
		}
		else
		{
			rdi_179->ptr0020 = &g_t80028940;
			r13_122->dw0008 = 0x3F51;
			goto l000000018001ECC5;
		}
	case 0x02:
		if (ebx_1004 < 0x20)
		{
l000000018001EE90:
			up32 ebx_2965;
			do
			{
				word32 esi_2940;
				if (esi_2940 == 0x00)
					goto l0000000180020120;
				word32 esi_5159 = esi_2940 - 0x01;
				word32 r15d_2977 = r15d_2958 + ((word32) (*r14_2945) << (byte) ebx_2949);
				ptr64 r14_2962 = r14_2945 + 1;
				ebx_2965 = ebx_2949 + 0x08;
			} while (ebx_2965 < 0x20);
		}
		Eq_66349 r15b_2999 = (byte) r15d_2976;
		struct Eq_63544 * rax_2971 = r13_122->ptr0028;
		if (rax_2971 != null)
			rax_2971->dw0004 = r15d_2976;
		if ((r13_122->t0018.u0 & 0x0200) != 0x00 && ((r13_122->t0010).u0 & 0x04) != 0x00)
		{
			uint64 rcx_2990 = (uint64) r13_122->t0020.u0;
			rbp_132->tFFFFFFB0.u0 = (byte) r15b_2999;
			rbp_132->bFFFFFFB1 = (byte) (r15d_2976 >> 0x08);
			rbp_132->bFFFFFFB2 = (byte) (r15d_2976 >> 0x10);
			rbp_132->bFFFFFFB3 = (byte) (r15d_2976 >> 0x18);
			r13_122->t0020.u0 = (uint32) fn0000000180021060((word32) rcx_2990, rbp_132 - 80, 0x04);
		}
		r13_122->dw0008 = 0x3F37;
		word32 r15d_5174 = 0x00;
		word32 ebx_5172 = 0x00;
		break;
	case 0x03:
		if (ebx_1004 >= 0x10)
			goto l000000018001EF38;
		break;
	case 0x04:
		goto l000000018001EF97;
	case 0x05:
		goto l000000018001F028;
	case 0x06:
		goto l000000018001F0C6;
	case 0x07:
		goto l000000018001F167;
	case 0x08:
		goto l000000018001F20F;
	case 0x09:
		if (ebx_1004 < 0x20)
		{
			up32 ebx_2563;
			do
			{
				word32 esi_2538;
				if (esi_2538 == 0x00)
					goto l0000000180020120;
				word32 esi_2638 = esi_2538 - 0x01;
				word32 r15d_2567 = r15d_2556 + ((word32) (*r14_2543) << (byte) ebx_2547);
				ptr64 r14_2560 = r14_2543 + 1;
				ebx_2563 = ebx_2547 + 0x08;
			} while (ebx_2563 < 0x20);
		}
		Eq_63842 eax_2607 = (r15d_2566 >> 0x08 & 0xFF00) + ((r15d_2566 & 0xFF00) + (r15d_2566 << 0x10) << 0x08) + (r15d_2566 >> 0x18);
		r13_122->t0020.u0 = (uint32) eax_2607;
		rdi_179->t004C.u0 = (uint32) eax_2607;
		r13_122->dw0008 = 0x3F3E;
		word32 ebx_2644 = 0x00;
		word32 r15d_2641 = 0x00;
		goto l000000018001F30D;
	case 0x0A:
l000000018001F30D:
		union Eq_63570 * r9_202;
		if (r13_1177->dw0014 == 0x00)
		{
			rdi_179->ptr0010 = r9_202;
			rdi_179->dw0018 = r10d_174;
			word64 r14_2633;
			rdi_179->qw0000 = r14_2633;
			word32 esi_2636;
			rdi_179->dw0008 = esi_2636;
			word32 r15d_2640;
			r13_122->dw0048 = r15d_2640;
			word32 ebx_2643;
			r13_122->dw004C = ebx_2643;
			rax_2628 = 0x02;
			return (word32) rax_5825;
		}
		else
		{
			r13_122->t0020.u0 = 0x01;
			rdi_179->t004C.u0 = 0x01;
			r13_122->dw0008 = 16191;
			goto l000000018001F32F;
		}
	case 11:
l000000018001F32F:
		if (rbp_1182->dw0028 > 0x06)
			goto l000000018001F33E;
		goto l0000000180020120;
	case 0x0C:
l000000018001F33E:
		uint32 ebx_2667;
		if (r13_1177->dw000C != 0x00)
		{
			r13_122->dw0008 = 16206;
			uint64 rcx_2810 = (uint64) (ebx_2667 & 0x07);
			uint32 r15d_5022 = r15d_2700 >> (byte) rcx_2810;
			uint32 ebx_2817 = ebx_2667 - (word32) rcx_2810;
			goto l000000018001ECC5;
		}
		if (ebx_2667 < 0x03)
		{
			up32 ebx_2696;
			do
			{
				word32 esi_2671;
				if (esi_2671 == 0x00)
					goto l0000000180020120;
				word32 esi_4009 = esi_2671 - 0x01;
				word32 r15d_2702 = r15d_2689 + ((word32) (*r14_2676) << (byte) ebx_2680);
				ptr64 r14_2693 = r14_2676 + 1;
				ebx_2696 = ebx_2680 + 0x08;
			} while (ebx_2696 < 0x03);
		}
		uint32 r15d_2699;
		r13_122->dw000C = r15d_2699 & 0x01;
		uint32 r15d_2717 = r15d_2699 >> 0x01;
		word32 ebx_2765 = ebx_2705 - 0x01;
		word32 * r8_124;
		if ((r15d_2717 & 0x03) != 0x00)
		{
			ui32 eax_2731 = (r15d_2717 & 0x03) - 0x01;
			if (eax_2731 != 0x00)
			{
				if (eax_2731 == 0x01)
				{
					r13_122->dw0008 = 16196;
					uint32 r15d_5025 = r15d_2717 >> 0x02;
					word32 ebx_2779 = ebx_2765 + ~0x01;
					goto l000000018001ECC5;
				}
				if (eax_2731 == 0x02)
				{
					rdi_179->ptr0020 = &g_t80028978;
					r13_122->dw0008 = 0x3F51;
					uint32 r15d_5023 = r15d_2717 >> 0x02;
					word32 ebx_2802 = ebx_2765 + ~0x01;
					goto l000000018001ECC5;
				}
			}
			else
			{
				word32 ecx_2760 = rbp_132->dw0028;
				r13_122->ptr0060 = &g_t800254E0;
				r13_122->ptr0068 = &g_t80025CE0;
				*r8_124 = 0x09;
				*r11_123 = 0x05;
				r13_122->dw0008 = 16199;
				if (ecx_2760 == 0x06)
				{
					uint32 r15d_4050 = r15d_2717 >> 0x02;
					word32 ebx_2768 = ebx_2765 + ~0x01;
					goto l0000000180020123;
				}
			}
		}
		else
			r13_122->dw0008 = 16193;
		uint32 r15d_5024 = r15d_2717 >> 0x02;
		word32 ebx_2790 = ebx_2765 + ~0x01;
		goto l000000018001ECC5;
	case 0x0D:
		uint64 rcx_2381 = (uint64) (ebx_1004 & 0x07);
		r15_3066 >>= (byte) rcx_2381;
		ebx_1004 -= (word32) rcx_2381;
		if (ebx_1004 < 0x20)
		{
			up32 ebx_2416;
			do
			{
				word32 esi_2391;
				if (esi_2391 == 0x00)
					goto l0000000180020120;
				word32 esi_2468 = esi_2391 - 0x01;
				word32 r15d_2421 = r15d_2409 + ((word32) (*r14_2396) << (byte) ebx_2400);
				ptr64 r14_2413 = r14_2396 + 1;
				ebx_2416 = ebx_2400 + 0x08;
			} while (ebx_2416 < 0x20);
		}
		Eq_63570 ecx_2433 = (word32) (word16) r15d_2419;
		if (ecx_2433 == ~r15d_2419 >> 0x10)
		{
			r13_122->t0050.u0 = (uint32) ecx_2433;
			word32 ecx_2451 = rbp_132->dw0028;
			r13_122->dw0008 = 16194;
			word32 r15d_4048 = 0x00;
			word32 ebx_4030 = 0x00;
			if (ecx_2451 != 0x06)
				goto l000000018001F4A7;
			goto l0000000180020123;
		}
		else
		{
			rdi_179->ptr0020 = &g_t80028990;
			r13_122->dw0008 = 0x3F51;
			goto l000000018001ECC5;
		}
	case 0x0E:
l000000018001F4A7:
		r13_1177->dw0008 = 0x3F43;
		goto l000000018001F4AF;
	case 0x0F:
l000000018001F4AF:
		up32 r12d_2460 = r13_1177->dw0050;
		if (r12d_2460 == 0x00)
			goto l000000018001F298;
		up32 esi_2465;
		if (r12d_2460 > esi_2465)
		{
			up32 r12d_2471 = esi_2465;
		}
		up32 r12d_2472;
		if (r12d_2472 > r10d_174)
		{
			up32 r12d_2480 = r10d_174;
		}
		Eq_734 r12d_2481;
		if (r12d_2481 == 0x00)
			goto l0000000180020120;
		void * r14_2490;
		memcpy(r9_202, r14_2490, r12d_2481);
		Eq_65859 rdi_2502;
		rdi_2502.u1 = (uint64) r12d_2481;
		uint64 r10_2516 = (uint64) (rbp_132->dw0038 - r12d_2481);
		ptr64 r9_2517 = (word64) rdi_2502 + rbp_132->ptrFFFFFFC0;
		rbp_132->dw0038 = (word32) r10_2516;
		word64 rdi_2520 = rbp_132->qw0020;
		r13_122->t0050.u0 = (uint32) (r13_122->t0050.u0 - r12d_2481);
		rbp_132->ptrFFFFFFC0 = r9_2517;
		ptr64 r14_2512 = r14_2490 + rdi_2502;
		up32 esi_5115 = esi_2465 - r12d_2481;
		goto l000000018001ECC5;
	case 0x10:
		if (ebx_1004 < 0x0E)
		{
			up32 ebx_466;
			do
			{
				word32 esi_441;
				if (esi_441 == 0x00)
					goto l0000000180020120;
				word32 esi_5030 = esi_441 - 0x01;
				word32 r15d_470 = r15d_459 + ((word32) (*r14_446) << (byte) ebx_450);
				ptr64 r14_463 = r14_446 + 1;
				ebx_466 = ebx_450 + 0x08;
			} while (ebx_466 < 0x0E);
		}
		uint32 r15d_481 = r15d_469 >> 0x05;
		uint32 ecx_495 = (r15d_469 & 0x1F) + 0x0101;
		r13_122->dw007C = ecx_495;
		uint32 edx_510 = (r15d_481 & 0x1F) + 0x01;
		r13_122->dw0080 = edx_510;
		r13_122->dw0078 = (r15d_481 >> 0x05 & 0x0F) + 0x04;
		word32 ebx_4889 = ebx_473 + ~0x0D;
		uint32 r15d_1308 = r15d_481 >> 0x09;
		if (ecx_495 > 0x011E || edx_510 > 0x1E)
		{
			rdi_179->ptr0020 = &g_t800289B0;
			r13_122->dw0008 = 0x3F51;
			goto l000000018001ECC5;
		}
		else
		{
			r13_122->dw0084 = 0x00;
			r13_122->dw0008 = 16197;
			goto l000000018001F591;
		}
	case 0x11:
l000000018001F591:
		if (r13_1177->dw0084 < r13_1177->dw0078)
		{
			do
			{
				word32 r15d_5042 = r15d_7351;
				up32 ebx_537;
				if (ebx_537 < 0x03)
				{
					up32 ebx_565;
					do
					{
						word32 esi_540;
						if (esi_540 == 0x00)
							goto l0000000180020120;
						uint64 r15_561 = (uint64) (r15d_558 + ((word32) (*r14_545) << (byte) ebx_549));
						word32 esi_5037 = esi_540 - 0x01;
						word32 r15d_5043 = (word32) r15_561;
						ptr64 r14_562 = r14_545 + 1;
						ebx_565 = ebx_549 + 0x08;
					} while (ebx_565 < 0x03);
				}
				uint32 r15d_7352;
				r13_122->a0090[(uint64) g_a80025D60[(uint64) r13_122->dw0084]] = (word16) r15d_7352 & 0x07;
				++r13_122->dw0084;
				uint64 r15_587 = (uint64) (r15d_7352 >> 0x03);
				word32 r15d_1309 = (word32) r15_587;
				word32 ebx_5032 = ebx_588 + ~0x02;
			} while (r13_122->dw0084 < r13_122->dw0078);
		}
		while (r13_122->dw0084 < 0x13)
		{
			r13_122->a0090[(uint64) g_a80025D60[(uint64) r13_122->dw0084]] = 0x00;
			++r13_122->dw0084;
		}
		*r8_124 = 0x07;
		ptr64 rax_622 = (ptr64) (r13_122->a0090 + 608);
		r13_122->ptr0060 = rax_622;
		word64 * r9_633 = (word64 *) (&r13_122->dw0084 + 1);
		*r9_633 = rax_622;
		struct Eq_65628 * rsp_647;
		rsp_647->ptr0028 = (Eq_67849 (*)[]) (r13_122->a0090 + 320);
		rsp_647->ptr0020 = r8_124;
		word32 eax_681 = fn0000000180020660(0x00, r13_122->a0090, 0x13, r9_633, rsp_647->ptr0020, rsp_647->ptr0028, out ebx_7370, out rbp_667, out esi_7371, out rdi_670, out r12_661, out r13_662, out r14_663);
		uint64 r10_680 = (uint64) rbp_667->dw0038;
		rbp_667->dw0030 = eax_681;
		struct Eq_64945 * rbx_668 = (struct Eq_64945 *) <invalid>;
		struct Eq_64945 * rsi_672 = (struct Eq_64945 *) <invalid>;
		struct Eq_64945 * rsp_673 = (struct Eq_64945 *) <invalid>;
		word32 r12d_687 = (word32) r12_661;
		word32 ebx_4874 = (word32) rbx_668;
		word32 esi_5057 = (word32) rsi_672;
		if (eax_681 == 0x00)
		{
			r13_662->dw0084 = r12d_687;
			r13_662->dw0008 = 16198;
			ptr64 r8_689 = &r13_662->dw0008 + 26;
			goto l000000018001F6D6;
		}
		else
		{
			rdi_670->ptr0020 = &g_t800289D8;
			r13_662->dw0008 = 0x3F51;
			goto l000000018001ECC1;
		}
	case 0x12:
l000000018001F6D6:
		struct Eq_64728 * r13_691;
		struct Eq_64956 * rdi_2369;
		if (r13_1177->dw0084 < r13_1177->dw0080 + r13_1177->dw007C)
		{
			word64 rcx_7346;
			do
			{
				uint32 eax_721 = r13_691->ptr0060[(uint64) ((0x01 << *r8_701) - 0x01) & (uint64) r15d_713];
				struct Eq_64770 * rbp_4522;
				rbp_4522->dwFFFFFFB8 = eax_721;
				up32 ebx_733;
				if ((word32) (byte) (eax_721 >> 0x08) > ebx_733)
				{
					uint32 eax_780;
					up32 ebx_792;
					do
					{
						word32 esi_736;
						if (esi_736 == 0x00)
							goto l0000000180020120;
						word32 r15d_772 = r15d_757 + ((word32) (*r14_741) << (byte) ebx_745);
						eax_780 = r13_691->ptr0060[(uint64) ((0x01 << *r8_701) - 0x01) & (uint64) r15d_772];
						rbp_4522->dwFFFFFFB8 = eax_780;
						word32 esi_5060 = esi_736 - 0x01;
						ptr64 r14_763 = r14_741 + 1;
						ebx_792 = ebx_745 + 0x08;
					} while ((word32) (byte) (eax_780 >> 0x08) > ebx_792);
				}
				cu16 dx_801 = (word16) (eax_795 >> 0x10);
				up32 ebx_813;
				if (dx_801 < 0x10)
				{
					r13_691->a0090[(uint64) r13_691->dw0084] = dx_801;
					++r13_691->dw0084;
					uint64 rcx_1104 = (uint64) (byte) (eax_795 >> 0x08);
					word32 ebx_4876 = ebx_813 - (word32) rcx_1104;
					uint32 r15d_1113 = r15d_854 >> (byte) rcx_1104;
					uint64 rcx_1120 = (uint64) r13_691->dw0084;
					goto l000000018001F8E7;
				}
				if (dx_801 == 0x10)
				{
					up32 edx_962 = (word32) (byte) (eax_795 >> 0x08) + 0x02;
					if (ebx_813 < edx_962)
					{
						up32 ebx_990;
						do
						{
							word32 esi_965;
							if (esi_965 == 0x00)
								goto l0000000180020120;
							word32 esi_5064 = esi_965 - 0x01;
							word32 r15d_1009 = r15d_983 + ((word32) (*r14_970) << (byte) ebx_974);
							ptr64 r14_987 = r14_970 + 1;
							ebx_990 = ebx_974 + 0x08;
						} while (ebx_990 < edx_962);
					}
					uint64 rcx_998 = (uint64) rbp_4522->bFFFFFFB9;
					up32 eax_1013 = r13_691->dw0084;
					uint32 ebx_1031 = ebx_1004 - (word32) rcx_998;
					uint32 r15d_1018 = r15d_1008 >> (byte) rcx_998;
					if (eax_1013 == 0x00)
						goto l000000018001F92B;
					uint32 r15d_1314 = r15d_1018 >> 0x02;
					uint64 rdx_1030 = (uint64) ((r15d_1018 & 0x03) + 0x03);
					uint32 ebx_1034 = ebx_1031 + ~0x01;
					uint64 r8_1037 = (uint64) r13_691->a0090[(uint64) (eax_1013 - 0x01)];
				}
				else
				{
					uint64 r9_809 = (uint64) rbp_4522->bFFFFFFB9;
					word32 r9d_847 = (word32) r9_809;
					if (rbp_4522->wFFFFFFBA == 0x11)
					{
						up32 edx_874 = (word32) r9_809 + 0x03;
						if (ebx_813 < edx_874)
						{
							up32 ebx_902;
							do
							{
								word32 esi_877;
								if (esi_877 == 0x00)
									goto l0000000180020120;
								word32 esi_5067 = esi_877 - 0x01;
								word32 r15d_913 = r15d_895 + ((word32) (*r14_882) << (byte) ebx_886);
								ptr64 r14_899 = r14_882 + 1;
								ebx_902 = ebx_886 + 0x08;
							} while (ebx_902 < edx_874);
						}
						uint32 r15d_917 = r15d_912 >> (byte) r9d_847;
						word32 eax_931 = ~0x02;
						uint64 rdx_925 = (uint64) ((r15d_917 & 0x07) + 0x03);
						uint32 r15d_928 = r15d_917 >> 0x03;
					}
					else
					{
						up32 edx_814 = (word32) r9_809 + 0x07;
						if (ebx_813 < edx_814)
						{
							up32 ebx_842;
							do
							{
								word32 esi_817;
								if (esi_817 == 0x00)
									goto l0000000180020120;
								word32 esi_5069 = esi_817 - 0x01;
								word32 r15d_855 = r15d_835 + ((word32) (*r14_822) << (byte) ebx_826);
								ptr64 r14_839 = r14_822 + 1;
								ebx_842 = ebx_826 + 0x08;
							} while (ebx_842 < edx_814);
						}
						uint32 r15d_859 = r15d_853 >> (byte) r9d_847;
						word32 eax_932 = ~0x06;
						uint64 rdx_867 = (uint64) ((r15d_859 & 0x7F) + 11);
						uint32 r15d_870 = r15d_859 >> 0x07;
					}
					uint64 r8_945 = (uint64) r12d_5080;
					word32 ebx_952 = ebx_946 + (eax_930 - r9d_847);
					word64 rdx_7348 = rdx_7362;
				}
				up32 edx_1053 = (word32) rdx_7349;
				cu16 r8w_5086 = (word16) r8_7347;
				if (r13_691->dw0084 + edx_1053 > r13_691->dw0080 + r13_691->dw007C)
				{
l000000018001F92B:
					rdi_2369->ptr0020 = &g_t800289F8;
					r13_691->dw0008 = 0x3F51;
					goto l000000018001ECC1;
				}
				word32 edx_1096;
				do
				{
					r13_691->a0090[(uint64) r13_691->dw0084] = r8w_5086;
					++r13_691->dw0084;
					uint64 rcx_1092 = (uint64) r13_691->dw0084;
					word32 edx_1093;
					edx_1096 = edx_1093 + ~0x00;
				} while (edx_1096 != 0x00);
				r8_1099 = (char *) &r13_691->ptr0060 + 16;
l000000018001F8E7:
			} while ((word32) rcx_7346 < r13_691->dw0080 + r13_691->dw007C);
		}
		if (r13_691->dw0008 == 0x3F51)
			goto l000000018001ECC1;
		if (r13_691->w0290 == 0x00)
		{
			rdi_2369->ptr0020 = &g_t80028A18;
			r13_691->dw0008 = 0x3F51;
			goto l000000018001ECC1;
		}
		word32 * r8_1141;
		*r8_1141 = 0x09;
		uint32 (* rax_1140)[] = (uint32 (*)[]) (&r13_691->w0290 + 352);
		r13_691->ptr0088 = rax_1140;
		rsp_1149->ptr0028 = (Eq_67849 (*)[]) (&r13_691->w0290 + 64);
		rsp_1149->ptr0020 = r8_1141;
		up32 r8d_1172 = r13_691->dw007C;
		r13_691->ptr0060 = rax_1140;
		word32 eax_1194 = fn0000000180020660(0x01, r13_691->a0090, r8d_1172, &r13_691->ptr0088, rsp_1149->ptr0020, rsp_1149->ptr0028, out ebx_7363, out rbp_1182, out esi_7364, out rdi_7365, out r12_1176, out r13_1177, out r14_1178);
		rbp_1182->dw0030 = eax_1194;
		struct Eq_64945 * rbx_1183 = (struct Eq_64945 *) <invalid>;
		struct Eq_64945 * rsi_1187 = (struct Eq_64945 *) <invalid>;
		struct Eq_64945 * rsp_1188 = (struct Eq_64945 *) <invalid>;
		word32 ebx_4882 = (word32) rbx_1183;
		word32 esi_5102 = (word32) rsi_1187;
		if (eax_1194 != 0x00)
		{
			ptr64 rax_2359 = &g_t80028A40;
		}
		else
		{
			up32 r8d_1216 = r13_1177->dw0080;
			r13_1177->qw0068 = r13_1177->qw0088;
			uint64 rax_1207 = (uint64) r13_1177->dw007C;
			r13_1177->dw0074 = 0x06;
			rsp_1188->ptr0028 = r12_1176;
			rsp_1188->ptr0020 = &r13_1177->dw0074;
			word32 eax_1238 = fn0000000180020660(0x02, (char *) &r13_1177->ptr0000 + (rax_1207 * 0x02 + 144), r8d_1216, &r13_1177->qw0088, rsp_1188->ptr0020, rsp_1188->ptr0028, out ebx_7366, out rbp_1226, out esi_7367, out rdi_7368, out r12_7369, out r13_1221, out r14_1222);
			rbp_1226->dw0030 = eax_1238;
			struct Eq_64945 * rsi_1231 = (struct Eq_64945 *) <invalid>;
			struct Eq_64945 * rbx_1227 = (struct Eq_64945 *) <invalid>;
			struct Eq_64945 * rsp_1232 = (struct Eq_64945 *) <invalid>;
			word32 esi_1270 = (word32) rsi_1231;
			word32 ebx_1334 = (word32) rbx_1227;
			word32 r12d_4275 = eax_1238;
			if (eax_1238 == 0x00)
			{
				word32 ecx_1249 = rbp_1226->dw0028;
				r13_1221->dw0008 = 16199;
				if (ecx_1249 == 0x06)
					goto l0000000180020127;
				rdi_1252 = rbp_1226->ptr0020;
				ptr64 r8_1253 = &r13_1221->dw0008 + 26;
				r9_1254 = rbp_1226->qwFFFFFFC0;
				rdx_1262 = (uint64) rbp_1226->dwFFFFFFB4;
				r10_1264 = (uint64) rbp_1226->dw0038;
				goto l000000018001FA2F;
			}
			ptr64 rax_2358 = &g_t80028A60;
		}
		struct Eq_65197 * rdi_2362 = rbp_2360->ptr0020;
		word64 rax_2363;
		rdi_2362->qw0020 = rax_2363;
		struct Eq_65204 * r13_2365;
		r13_2365->dw0008 = 0x3F51;
		goto l000000018001ECBD;
	case 0x13:
l000000018001FA2F:
		r13_1177->dw0008 = 16200;
		goto l000000018001FA37;
	case 0x14:
l000000018001FA37:
		word32 edx_2327 = (word32) rdx_1262;
		up32 r10d_1273 = (word32) r10_1264;
		struct Eq_64660 * rdi_2292;
		struct Eq_64621 * r13_1288;
		word32 r15d_1301;
		up32 ebx_1332;
		struct Eq_64711 * rbp_1430;
		if (esi_109 >= 0x06 && r10d_1273 >= 0x0102)
		{
			union Eq_64659 * r9_2315;
			rdi_2292->ptr0010 = r9_2315;
			rdi_2292->dw0018 = r10d_1273;
			Eq_64667 r14_2320;
			rdi_2292->t0000.u0 = (byte *) r14_2320;
			word32 esi_1267;
			rdi_2292->dw0008 = esi_1267;
			r13_1288->dw0048 = r15d_1301;
			r13_1288->dw004C = ebx_1332;
			fn0000000180020B70(rdi_2292, edx_2327);
			uint64 r10_2345 = (uint64) rdi_2292->dw0018;
			union Eq_64659 * r9_2343 = rdi_2292->ptr0010;
			Eq_64667 r14_2346;
			r14_2346.u0 = rdi_2292->t0000.u0;
			word32 esi_5096 = rdi_2292->dw0008;
			word32 r15d_5011 = r13_1288->dw0048;
			up32 ebx_4870 = r13_1288->dw004C;
			rbp_1430->ptrFFFFFFC0 = r9_2343;
			rbp_1430->dw0038 = (word32) r10_2345;
			if (r13_1288->dw0008 == 16191)
				r13_1288->dw1BE4 = ~0x00;
			goto l000000018001ECC5;
		}
		uint32 r11_1289[] = r13_1288->ptr0060;
		uint64 rax_1293 = (uint64) (0x01 << *r8_1279);
		r13_1288->dw1BE4 = 0x00;
		uint64 rax_1320 = (uint64) r11_1289[(uint64) ((word32) rax_1293 - 0x01) & (uint64) r15d_1301];
		if ((word32) (byte) ((word32) rax_1320 >> 0x08) > ebx_1332)
		{
			uint64 rax_1380;
			up32 ebx_1391;
			do
			{
				word32 esi_1337;
				if (esi_1337 == 0x00)
					goto l0000000180020120;
				word32 r15d_1373 = r15d_1358 + ((word32) (*r14_1342) << (byte) ebx_1346);
				rax_1380 = (uint64) r13_1288->ptr0060[(uint64) ((0x01 << *r8_1279) - 0x01) & (uint64) r15d_1373];
				word32 esi_3995 = esi_1337 - 0x01;
				ptr64 r14_1364 = r14_1342 + 1;
				ebx_1391 = ebx_1346 + 0x08;
			} while ((word32) (byte) ((word32) rax_1380 >> 0x08) > ebx_1391);
		}
		byte al_1394 = (byte) eax_7350;
		uint32 eax_1583 = eax_7350;
		if (al_1394 != 0x00)
		{
			uint32 eax_1408 = eax_7350;
			if ((al_1394 & 0xF0) == 0x00)
			{
				byte r10b_1418 = (byte) (eax_7350 >> 0x08);
				rbp_1430->dwFFFFFFB8 = eax_7350;
				word32 r8d_1425 = (word32) r10b_1418;
				uint32 eax_1461 = r11_1289[(uint64) ((((0x01 << al_1394 + (byte) r8d_1425) - 0x01 & r15d_1446) >> (byte) r8d_1425) + (eax_7350 >> 0x10))];
				byte dl_5126 = (byte) eax_7350;
				byte r11b_1566 = rbp_1430->bFFFFFFB9;
				up32 ebx_1479;
				if ((word32) ((byte) (eax_1461 >> 0x08) + r10b_1418) > ebx_1479)
				{
					word16 r10w_5125 = rbp_1430->wFFFFFFBA;
					up32 r9d_1519;
					uint32 eax_1549;
					up32 ebx_1562;
					do
					{
						word32 esi_1484;
						if (esi_1484 == 0x00)
							goto l0000000180020120;
						r9d_1519 = (word32) r11b_1566;
						ui32 r15d_1534 = r15d_1502 + ((word32) (*r14_1489) << (byte) ebx_1493);
						eax_1549 = r13_1288->ptr0060[(uint64) ((((0x01 << dl_5126 + (byte) r9d_1519) - 0x01 & r15d_1534) >> (byte) r9d_1519) + (word32) r10w_5125)];
						word32 esi_3997 = esi_1484 - 0x01;
						ptr64 r14_1517 = r14_1489 + 1;
						ebx_1562 = ebx_1493 + 0x08;
					} while ((word32) (byte) (eax_1549 >> 0x08) + r9d_1519 > ebx_1562);
				}
				uint64 rcx_1568 = (uint64) r11b_1566;
				word32 ecx_1574 = (word32) rcx_1568;
				r13_1288->dw1BE4 = ecx_1574;
				uint32 r15d_1603 = r15d_1569 >> (byte) rcx_1568;
				word32 ebx_1577 = ebx_1573 - ecx_1574;
			}
		}
		uint64 rcx_1592 = (uint64) (byte) (eax_1582 >> 0x08);
		word32 ecx_1596 = (word32) rcx_1592;
		r13_1288->dw1BE4 += ecx_1596;
		r13_1288->dw0050 = eax_1582 >> 0x10;
		byte al_1614 = (byte) eax_1582;
		word32 ebx_1648 = ebx_1599 - ecx_1596;
		uint32 r15d_1698 = r15d_1602 >> (byte) rcx_1592;
		if (al_1614 == 0x00)
			r13_1288->dw0008 = 0x3F4D;
		else if ((al_1614 & 0x20) != 0x00)
		{
			r13_1288->dw1BE4 = ~0x00;
			r13_1288->dw0008 = 16191;
		}
		else
		{
			if ((al_1614 & 0x40) == 0x00)
			{
				r13_1288->dw0008 = 16201;
				r13_1288->dw0058 = (word32) al_1614 & 0x0F;
				goto l000000018001FC57;
			}
			rdi_2292->ptr0020 = &g_t80028A78;
			r13_1288->dw0008 = 0x3F51;
		}
l000000018001ECBD:
		uint64 r10_4519 = (uint64) rbp_4516->dw0038;
l000000018001ECC1:
		word64 r9_4531 = rbp_4520->qwFFFFFFC0;
		word64 r10_7337 = r10_7360;
		goto l000000018001ECC5;
	case 0x15:
l000000018001FC57:
		up32 edx_1642 = r13_1177->dw0058;
		struct Eq_64557 * r13_1638;
		if (edx_1642 != 0x00)
		{
			up32 ebx_1647;
			if (ebx_1647 < edx_1642)
			{
				up32 ebx_1676;
				do
				{
					word32 esi_1651;
					if (esi_1651 == 0x00)
						goto l0000000180020120;
					word32 esi_3999 = esi_1651 - 0x01;
					word32 r15d_1699 = r15d_1669 + ((word32) (*r14_1656) << (byte) ebx_1660);
					ptr64 r14_1673 = r14_1656 + 1;
					ebx_1676 = ebx_1660 + 0x08;
				} while (ebx_1676 < edx_1642);
			}
			byte cl_1686 = (byte) edx_1642;
			uint32 r15d_1696;
			r13_1638->dw0050 += (0x01 << cl_1686) - 0x01 & r15d_1696;
			r13_1638->dw1BE4 += edx_1642;
			word32 ebx_1753 = ebx_1689 - edx_1642;
			uint32 r15d_1735 = r15d_1696 >> cl_1686;
		}
		r13_1638->dw1BE8 = r13_1638->dw0050;
		r13_1638->dw0008 = 16202;
		goto l000000018001FCB3;
	case 22:
l000000018001FCB3:
		uint32 r11_1726[] = r13_1720->ptr0068;
		Eq_63486 eax_7344;
		word32 r15d_1733;
		eax_7344.u0 = (uint64) r11_1726[(uint64) ((0x01 << r13_1720->b0074) - 0x01) & (uint64) r15d_1733];
		if ((word32) (byte) ((word32) eax_7344 >> 0x08) > ebx_1004)
		{
			uint64 rax_1798;
			up32 ebx_1809;
			do
			{
				word32 esi_1756;
				if (esi_1756 == 0x00)
					goto l0000000180020120;
				word32 r15d_1792 = r15d_1777 + ((word32) (*r14_1761) << (byte) ebx_1765);
				rax_1798 = (uint64) r13_1720->ptr0068[(uint64) ((0x01 << r13_1720->b0074) - 0x01) & (uint64) r15d_1792];
				word32 esi_4000 = esi_1756 - 0x01;
				ptr64 r14_1783 = r14_1761 + 1;
				ebx_1809 = ebx_1765 + 0x08;
			} while ((word32) (byte) ((word32) rax_1798 >> 0x08) > ebx_1809);
		}
		byte al_1812 = (byte) eax_7344;
		Eq_63486 eax_1822 = eax_7344;
		struct Eq_64391 * rbp_1843;
		if ((al_1812 & 0xF0) == 0x00)
		{
			byte r10b_1832 = (byte) (eax_7344 >> 0x08);
			rbp_1843->tFFFFFFB8.u1 = (word32) eax_7344;
			word32 r8d_1839 = (word32) r10b_1832;
			uint32 eax_1880 = r11_1726[(uint64) ((((0x01 << al_1812 + (byte) r8d_1839) - 0x01 & r15d_1865) >> (byte) r8d_1839) + (eax_7344 >> 0x10))];
			byte dl_5128 = (byte) eax_7344;
			byte r11b_1985 = rbp_1843->bFFFFFFB9;
			up32 ebx_1898;
			if ((word32) ((byte) (eax_1880 >> 0x08) + r10b_1832) > ebx_1898)
			{
				word16 r10w_5127 = rbp_1843->wFFFFFFBA;
				up32 r9d_1938;
				uint32 eax_1968;
				up32 ebx_1981;
				do
				{
					word32 esi_1903;
					if (esi_1903 == 0x00)
						goto l0000000180020120;
					r9d_1938 = (word32) r11b_1985;
					ui32 r15d_1953 = r15d_1921 + ((word32) (*r14_1908) << (byte) ebx_1912);
					eax_1968 = r13_1720->ptr0068[(uint64) ((((0x01 << dl_5128 + (byte) r9d_1938) - 0x01 & r15d_1953) >> (byte) r9d_1938) + (word32) r10w_5127)];
					word32 esi_4002 = esi_1903 - 0x01;
					ptr64 r14_1936 = r14_1908 + 1;
					ebx_1981 = ebx_1912 + 0x08;
				} while ((word32) (byte) (eax_1968 >> 0x08) + r9d_1938 > ebx_1981);
			}
			uint64 rcx_1987 = (uint64) r11b_1985;
			word32 ecx_1993 = (word32) rcx_1987;
			r13_1720->dw1BE4 += ecx_1993;
			uint32 r15d_2029 = r15d_1988 >> (byte) rcx_1987;
			word32 ebx_2025 = ebx_1992 - ecx_1993;
		}
		uint64 rcx_2019 = (uint64) (byte) (eax_2008 >> 0x08);
		word32 ecx_2021 = (word32) rcx_2019;
		word64 r9_2007 = rbp_1843->qwFFFFFFC0;
		uint64 r10_2013 = (uint64) rbp_1843->dw0038;
		r13_1720->dw1BE4 += ecx_2021;
		byte al_2033 = (byte) eax_2008;
		word32 ebx_2066 = ebx_2024 - ecx_2021;
		uint32 r15d_2116 = r15d_2028 >> (byte) rcx_2019;
		if ((al_2033 & 0x40) == 0x00)
		{
			r13_1720->dw0008 = 0x3F4B;
			r13_1720->dw0054 = eax_2008 >> 0x10;
			r13_1720->dw0058 = (word32) al_2033 & 0x0F;
			goto l000000018001FE3D;
		}
		else
		{
			struct Eq_64549 * rdi_2286;
			rdi_2286->ptr0020 = &g_t80028A98;
			r13_1720->dw0008 = 0x3F51;
			goto l000000018001ECC5;
		}
	case 0x17:
l000000018001FE3D:
		up32 edx_2060 = r13_2056->dw0058;
		if (edx_2060 != 0x00)
		{
			up32 ebx_2065;
			if (ebx_2065 < edx_2060)
			{
				up32 ebx_2094;
				do
				{
					word32 esi_2069;
					if (esi_2069 == 0x00)
						goto l0000000180020120;
					word32 esi_4004 = esi_2069 - 0x01;
					word32 r15d_2117 = r15d_2087 + ((word32) (*r14_2074) << (byte) ebx_2078);
					ptr64 r14_2091 = r14_2074 + 1;
					ebx_2094 = ebx_2078 + 0x08;
				} while (ebx_2094 < edx_2060);
			}
			byte cl_2104 = (byte) edx_2060;
			uint32 r15d_2114;
			r13_2056->dw0054 += (0x01 << cl_2104) - 0x01 & r15d_2114;
			r13_2056->dw1BE4 += edx_2060;
			word32 ebx_4025 = ebx_2107 - edx_2060;
			uint32 r15d_4043 = r15d_2114 >> cl_2104;
		}
		uint64 rdx_2137 = (uint64) rbp_2132->dwFFFFFFB4;
		r13_2056->dw0008 = 0x3F4C;
		word64 r10_7331 = r10_7335;
		goto l000000018001FE98;
	case 0x18:
l000000018001FE98:
		word32 edx_2154 = (word32) rdx_7343;
		up32 r10d_2140 = (word32) r10_7332;
		if (r10d_2140 == 0x00)
			goto l0000000180020120;
		uint64 rcx_2153 = (uint64) r13_2150->dw0054;
		up32 ecx_2161 = (word32) rcx_2153;
		up32 eax_2162 = edx_2154 - r10d_2140;
		word64 r9_2167;
		if (ecx_2161 > eax_2162)
		{
			up32 ecx_2177 = ecx_2161 - eax_2162;
			if (ecx_2177 > r13_2150->dw0038 && r13_2150->dw1BE0 != 0x00)
			{
				struct Eq_64250 * rdi_2281;
				rdi_2281->ptr0020 = &g_t80028AB0;
				r13_2150->dw0008 = 0x3F51;
				goto l000000018001ECC5;
			}
			up32 eax_2187 = r13_2150->dw003C;
			if (ecx_2177 > eax_2187)
			{
				up32 ecx_2201 = ecx_2177 - eax_2187;
				uint64 rdx_2203 = (uint64) (r13_2150->dw0034 - ecx_2201);
			}
			else
			{
				uint64 rdx_2195 = (uint64) (eax_2187 - ecx_2177);
			}
			word64 rdx_2209 = rdx_2206 + r13_2150->qw0040;
			up32 eax_2213 = r13_2150->dw0050;
			up32 ecx_2212;
			if (ecx_2212 > eax_2213)
				goto l000000018001FF06;
		}
		else
		{
			up32 eax_2217 = r13_2150->dw0050;
			word64 rdx_2173 = r9_2167 - rcx_2153;
l000000018001FF06:
			word32 ecx_2221 = eax_2216;
		}
		up32 ecx_2220;
		if (ecx_2220 > r10d_2140)
		{
			up32 ecx_2228 = r10d_2140;
		}
		uint64 r10_2232 = (uint64) (r10d_2140 - ecx_2230);
		struct Eq_64286 * rbp_2242;
		rbp_2242->dw0038 = (word32) r10_2232;
		word32 eax_2234;
		r13_2150->dw0050 = eax_2234 - ecx_2230;
		ptr64 rdx_2253 = rdx_2246 - r9_2167;
		ptr64 r9_2267;
		up32 ecx_2271;
		do
		{
			byte * r9_2261;
			*r9_2261 = r9_2261[rdx_2253];
			r9_2267 = r9_2261 + 1;
			word32 ecx_2268;
			ecx_2271 = ecx_2268 + ~0x00;
		} while (ecx_2271 != 0x00);
		rbp_2242->ptrFFFFFFC0 = r9_2267;
		if (r13_2150->dw0050 == ecx_2271)
			r13_2150->dw0008 = 16200;
		goto l000000018001ECC5;
	case 0x19:
		if (r10d_174 == 0x00)
			goto l0000000180020120;
		r9_202->u1 = r13_122->t0050.u1;
		ptr64 r9_431 = (char *) r9_202 + 1;
		rbp_132->ptrFFFFFFC0 = r9_431;
		uint64 r10_433 = (uint64) (r10d_174 - 0x01);
		rbp_132->dw0038 = (word32) r10_433;
		r13_122->dw0008 = 16200;
		goto l000000018001ECC5;
	case 0x1A:
		if (r13_122->t0010.u1 != 0x00)
		{
			if (ebx_139 < 0x20)
			{
				up32 ebx_167;
				do
				{
					word32 esi_142;
					if (esi_142 == 0x00)
						goto l0000000180020120;
					word32 esi_3976 = esi_142 - 0x01;
					word32 r15d_261 = r15d_160 + ((word32) (*r14_147) << (byte) ebx_151);
					ptr64 r14_164 = r14_147 + 1;
					ebx_167 = ebx_151 + 0x08;
				} while (ebx_167 < 0x20);
			}
			word32 edx_182 = edx_171 - r10d_174;
			rdi_179->dw001C += edx_182;
			r13_122->dw0024 += edx_182;
			if ((r13_122->t0010.u0 & 0x04) != 0x00 && edx_182 != 0x00)
			{
				uint64 rcx_198 = (uint64) r13_122->t0020.u0;
				uint64 r8_200 = (uint64) edx_182;
				uint32 ecx_208 = (word32) rcx_198;
				Eq_137 rdx_205 = r9_202 - r8_200;
				if (r13_122->t0018.u0 != 0x00)
				{
					Eq_63842 eax_241 = fn0000000180021060((word32) rcx_198, rdx_205, r8_200);
				}
				else
				{
					word32 eax_242 = fn0000000180020380(ecx_208, rdx_205, r8_200);
				}
				ptr64 r9_237 = rbp_132->ptrFFFFFFC0;
				uint64 r10_239 = (uint64) rbp_132->dw0038;
				Eq_63842 eax_240;
				r13_122->t0020.u0 = (uint32) eax_240;
				rdi_179->t004C.u0 = (uint32) eax_240;
			}
			word64 r10_7359;
			rbp_132->dwFFFFFFB4 = (word32) r10_7359;
			if ((r13_122->t0010.u0 & 0x04) != 0x00)
			{
				uint64 rcx_264 = (uint64) r15d_259;
				ui32 ecx_266 = (word32) rcx_264;
				if (r13_122->t0018.u0 == 0x00)
				{
					uint64 rcx_301 = (uint64) (((ecx_266 & 0xFF00) + (r15d_259 << 0x10) << 0x08) + (r15d_259 >> 0x08 & 0xFF00) + (r15d_259 >> 0x18));
				}
				word64 rcx_7341;
				if ((word32) rcx_7341 != (r13_122->t0020).u0)
				{
					rdi_179->ptr0020 = &g_t80028AD0;
					r13_122->dw0008 = 0x3F51;
					word64 r10_7336 = r10_7359;
					goto l000000018001ECC5;
				}
			}
			word32 r15d_377 = 0x00;
			word32 ebx_336 = 0x00;
			word64 r10_7357 = r10_7359;
		}
		r13_122->dw0008 = 0x3F4F;
		word64 r10_7333 = r10_7358;
		goto l0000000180020052;
	case 0x1B:
l0000000180020052:
		uint64 rdx_326 = (uint64) r13_122->t0010.u1;
		byte dl_368 = (byte) rdx_326;
		if ((word32) rdx_326 != 0x00 && (r13_122->t0018).u0 != 0x00)
		{
			up32 ebx_334;
			if (ebx_334 < 0x20)
			{
				up32 ebx_364;
				do
				{
					word32 esi_339;
					if (esi_339 == 0x00)
						goto l0000000180020120;
					word32 esi_3981 = esi_339 - 0x01;
					word32 r15d_378 = r15d_357 + ((word32) (*r14_344) << (byte) ebx_348);
					ptr64 r14_361 = r14_344 + 1;
					ebx_364 = ebx_348 + 0x08;
				} while (ebx_364 < 0x20);
			}
			word32 r15d_374;
			if ((dl_368 & 0x04) != 0x00 && r15d_374 != r13_122->dw0024)
			{
				rdi_179->ptr0020 = &g_t80028AE8;
				r13_122->dw0008 = 0x3F51;
				goto l000000018001ECC5;
			}
			word32 r15d_4038 = 0x00;
			word32 ebx_4020 = 0x00;
		}
		r13_122->dw0008 = 0x3F50;
		goto l0000000180020101;
	case 0x1C:
l0000000180020101:
		word32 ecx_4065 = rbp_132->dw0028;
		word32 r12d_4274 = 0x01;
		goto l0000000180020127;
	case 0x1D:
		word32 ecx_4064 = rbp_132->dw0028;
		word32 r12d_4273 = ~0x02;
		goto l0000000180020127;
	case 0x1E:
		goto l000000018002018C;
	}
	up32 ebx_3070;
	do
	{
		word32 esi_3045;
		if (esi_3045 == 0x00)
			goto l0000000180020120;
		word32 r15d_3063;
		byte * r14_3050;
		word32 ebx_3054;
		r15_3066.u0 = (uint64) (r15d_3063 + ((word32) (*r14_3050) << (byte) ebx_3054));
		word32 esi_3301 = esi_3045 - 0x01;
		word32 r15d_5173 = (word32) r15_3066;
		ptr64 r14_3067 = r14_3050 + 1;
		ebx_3070 = ebx_3054 + 0x08;
	} while (ebx_3070 < 0x10);
l000000018001EF38:
	Eq_66349 r15b_3081 = (byte) r15d_7354;
	struct Eq_63544 * rcx_3076 = r13_122->ptr0028;
	if (rcx_3076 != null)
	{
		rcx_3076->dw0008 = (word32) r15b_3081;
		r13_122->ptr0028->dw000C = r15d_7354 >> 0x08;
	}
	if ((r13_122->t0018.u0 & 0x0200) != 0x00 && ((r13_122->t0010).u0 & 0x04) != 0x00)
	{
		uint64 rcx_3112 = (uint64) r13_122->t0020.u0;
		rbp_132->tFFFFFFB0.u0 = (byte) r15b_3081;
		rbp_132->bFFFFFFB1 = (byte) (r15d_7354 >> 0x08);
		r13_122->t0020.u0 = (uint32) fn0000000180021060((word32) rcx_3112, rbp_132 - 80, 0x02);
	}
	r13_122->dw0008 = 0x3F38;
	word32 r15d_3220 = 0x00;
	word32 ebx_3183 = 0x00;
l000000018001EF97:
	if ((r13_1177->dw0018 & 0x0400) != 0x00)
	{
		up32 ebx_3182;
		if (ebx_3182 < 0x10)
		{
			up32 ebx_3211;
			do
			{
				word32 esi_3186;
				if (esi_3186 == 0x00)
					goto l0000000180020120;
				word32 esi_3305 = esi_3186 - 0x01;
				word32 r15d_3221 = r15d_3204 + ((word32) (*r14_3191) << (byte) ebx_3195);
				ptr64 r14_3208 = r14_3191 + 1;
				ebx_3211 = ebx_3195 + 0x08;
			} while (ebx_3211 < 0x10);
		}
		struct Eq_63544 * rax_3217 = r13_122->ptr0028;
		Eq_63570 r15d_3218;
		r13_122->t0050.u0 = (uint32) r15d_3218;
		Eq_66349 r15b_3247 = (byte) r15d_3218;
		if (rax_3217 != null)
			rax_3217->t0018.u0 = (uint32) r15d_3218;
		if ((r13_122->t0018.u0 & 0x0200) != 0x00 && ((r13_122->t0010).u0 & 0x04) != 0x00)
		{
			uint64 rcx_3239 = (uint64) r13_122->t0020.u0;
			rbp_132->tFFFFFFB0.u0 = (byte) r15b_3247;
			rbp_132->bFFFFFFB1 = (byte) (r15d_3218 >> 0x08);
			r13_122->t0020.u0 = (uint32) fn0000000180021060((word32) rcx_3239, rbp_132 - 80, 0x02);
		}
		word32 r15d_3813 = 0x00;
		word32 ebx_3751 = 0x00;
	}
	else
	{
		struct Eq_63544 * rax_3160 = r13_122->ptr0028;
		if (rax_3160 != null)
			rax_3160->qw0010 = 0x00;
	}
	r13_122->dw0008 = 0x3F39;
l000000018001F028:
	if ((r13_1177->dw0018 & 0x0400) != 0x00)
	{
		Eq_63570 ecx_3294;
		ecx_3294.u0 = r13_122->t0050.u0;
		Eq_63570 edi_3312 = ecx_3294;
		Eq_63570 esi_3295;
		if (ecx_3294 > esi_3295)
		{
			Eq_63570 edi_3310 = esi_3295;
		}
		up32 edi_3311;
		if (edi_3311 != 0x00)
		{
			struct Eq_63544 * rax_3319 = r13_122->ptr0028;
			Eq_137 r14_3364;
			if (rax_3319 != null)
			{
				word64 r9_3324 = rax_3319->qw0010;
				if (r9_3324 != 0x00)
				{
					uint64 rdx_3334 = (uint64) (rax_3319->t0018.u0 - ecx_3294);
					up32 edx_3337 = (word32) rdx_3334;
					up32 ecx_3338 = rax_3319->dw001C;
					if (edx_3337 < ecx_3338)
					{
						if (edi_3311 + (word32) rdx_3334 > ecx_3338)
						{
							up32 ecx_3353 = ecx_3338 - edx_3337;
						}
						else
						{
							up32 ecx_3356 = edi_3311;
						}
						Eq_734 ecx_3355;
						memcpy((uint64) edx_3337 + r9_3324, r14_3364, ecx_3355);
					}
				}
			}
			if ((r13_122->t0018.u0 & 0x0200) != 0x00 && ((r13_122->t0010).u0 & 0x04) != 0x00)
				r13_122->t0020.u0 = (uint32) fn0000000180021060(r13_122->t0020.u0, r14_3364, (uint64) edi_3311);
			r13_122->t0050.u0 = (uint32) (r13_122->t0050.u0 - edi_3311);
			up32 esi_3473 = esi_3295 - edi_3311;
			ptr64 r14_3422 = (char *) r14_3364.u4 + (uint64) edi_3311;
		}
		if (r13_122->t0050.u0 != 0x00)
			goto l0000000180020120;
	}
	r13_122->t0050.u0 = 0x00;
	r13_122->dw0008 = 16186;
l000000018001F0C6:
	if ((r13_1177->dw0018 & 0x0800) != 0x00)
	{
		up32 esi_3470;
		if (esi_3470 == 0x00)
			goto l0000000180020120;
		word32 edi_5177 = 0x00;
		Eq_137 r14_3945;
		up32 edi_3518;
		word32 r12d_3512;
		do
		{
			uint64 r12_3489 = (uint64) r14_3945.u0[(uint64) edi_3481];
			edi_3518 = edi_3481 + 0x01;
			byte r12b_3506 = (byte) r12_3489;
			r12d_3512 = (word32) r12_3489;
			struct Eq_63544 * rax_3491 = r13_122->ptr0028;
			if (rax_3491 != null)
			{
				int64 rdx_3496 = rax_3491->qw0020;
				if (rdx_3496 != 0x00)
				{
					Eq_66295 rcx_3502;
					rcx_3502.u0 = (uint64) r13_122->t0050.u0;
					if ((word32) rcx_3502 < rax_3491->dw0028)
					{
						*((word64) rcx_3502 + rdx_3496) = r12b_3506;
						r13_122->t0050.u0 = (uint32) (r13_122->t0050.u0 + 0x01);
					}
				}
			}
		} while (r12d_3512 != 0x00 && edi_3518 < esi_3470);
		if ((r13_122->t0018.u0 & 0x0200) != 0x00 && ((r13_122->t0010).u0 & 0x04) != 0x00)
			r13_122->t0020.u0 = (uint32) fn0000000180021060(r13_122->t0020.u0, r14_3945, (uint64) edi_3518);
		up32 esi_3602 = esi_3470 - edi_3518;
		ptr64 r14_3565 = r14_3945.u0 + (uint64) edi_3518;
		if (r12d_3512 != 0x00)
		{
l0000000180020120:
			word32 ecx_4067 = rbp_3899->dw0028;
l0000000180020123:
			word32 r12d_4276 = rbp_3916->dw0030;
l0000000180020127:
			struct Eq_63077 * rdi_3922 = rbp_3920->ptr0020;
			rdi_3922->qw0010 = rbp_3920->qwFFFFFFC0;
			rdi_3922->dw0018 = rbp_3920->dw0038;
			word64 r14_3929;
			rdi_3922->qw0000 = r14_3929;
			word32 esi_3968;
			rdi_3922->dw0008 = esi_3968;
			struct Eq_63682 * r13_4011;
			word32 ebx_4017;
			r13_4011->dw004C = ebx_4017;
			word32 ebx_4053 = rbp_3920->dwFFFFFFB4;
			word32 r15d_4035;
			r13_4011->dw0048 = r15d_4035;
			if (r13_4011->dw0034 != 0x00)
			{
l000000018002016D:
				if (fn000000018001EA30(rdi_3922, rdi_3922->qw0010, ebx_4053 - rdi_3922->dw0018) != 0x00)
				{
					r13_4011->dw0008 = 16210;
l000000018002018C:
					uint64 rax_4295 = 0xFFFFFFFC;
					return (word32) rax_5825;
				}
				goto l0000000180020196;
			}
			else
			{
				if (ebx_4053 != rdi_3922->dw0018)
				{
					int32 eax_4058 = r13_4011->dw0008;
					word32 ecx_4063;
					if (eax_4058 < 0x3F51 && (eax_4058 < 16206 || ecx_4063 != 0x04))
						goto l000000018002016D;
				}
l0000000180020196:
				uint64 r10_4108 = (uint64) (rbp_3920->dwFFFFFFBC - rdi_3922->dw0008);
				word32 r10d_4109 = (word32) r10_4108;
				word32 ebx_4112 = ebx_4053 - rdi_3922->dw0018;
				rdi_3922->dw000C += r10d_4109;
				rdi_3922->dw001C += ebx_4112;
				r13_4011->dw0024 += ebx_4112;
				rbp_3920->dwFFFFFFBC = r10d_4109;
				if ((r13_4011->b0010 & 0x04) != 0x00 && ebx_4112 != 0x00)
				{
					uint64 rcx_4130 = (uint64) r13_4011->dw0020;
					uint64 r8_4132 = (uint64) ebx_4112;
					uint32 ecx_4136 = (word32) rcx_4130;
					Eq_137 rdx_4133 = rdi_3922->qw0010 - r8_4132;
					if (r13_4011->dw0018 != 0x00)
					{
						Eq_63842 eax_4166 = fn0000000180021060((word32) rcx_4130, rdx_4133, r8_4132);
					}
					else
					{
						word32 eax_4167 = fn0000000180020380(ecx_4136, rdx_4133, r8_4132);
					}
					uint64 r10_4164 = (uint64) rbp_3920->dwFFFFFFBC;
					word32 eax_4165;
					r13_4011->dw0020 = eax_4165;
					rdi_3922->dw004C = eax_4165;
				}
				word32 r10d_4243 = (word32) r10_7342;
				int32 edx_4176 = r13_4011->dw0008;
				if (edx_4176 != 16199 && edx_4176 != 16194)
				{
					uint64 r8_4196 = 0x00;
				}
				else
				{
					uint64 r8_4182 = 0x0100;
				}
				word32 r9d_4226 = 0x00;
				uint64 rcx_4213 = (uint64) (0x00 - (r13_4011->dw000C != 0x00) & 0x40);
				if (edx_4176 == 16191)
				{
					word32 r9d_4219 = 0x80;
				}
				word32 r9d_4225;
				word64 r8_4221;
				rdi_3922->dw0048 = r9d_4225 + (word32) (r8_4221 + rcx_4213) + r13_4011->dw004C;
				word32 r12d_4272;
				if ((r10d_4243 == 0x00 && ebx_4112 == 0x00 || rbp_3920->dw0028 == 0x04) && r12d_4272 == 0x00)
				{
					word32 r12d_4289 = ~0x04;
				}
				uint64 rax_4292 = (uint64) r12d_4290;
				return (word32) rax_5825;
			}
		}
	}
	else
	{
		struct Eq_63544 * rax_3449 = r13_122->ptr0028;
		if (rax_3449 != null)
			rax_3449->qw0020 = 0x00;
	}
	r13_122->t0050.u0 = 0x00;
	r13_122->dw0008 = 0x3F3B;
l000000018001F167:
	if ((r13_1177->dw0018 & 0x1000) == 0x00)
	{
		struct Eq_63544 * rax_3589 = r13_122->ptr0028;
		if (rax_3589 != null)
			rax_3589->qw0030 = 0x00;
		goto l000000018001F1FB;
	}
	up32 esi_3600;
	if (esi_3600 != 0x00)
	{
		word32 edi_5178 = 0x00;
		Eq_137 r14_3943;
		up32 edi_3647;
		word32 r12d_3641;
		do
		{
			uint64 r12_3618 = (uint64) r14_3943.u0[(uint64) edi_3610];
			edi_3647 = edi_3610 + 0x01;
			byte r12b_3635 = (byte) r12_3618;
			r12d_3641 = (word32) r12_3618;
			struct Eq_63544 * rax_3620 = r13_122->ptr0028;
			if (rax_3620 != null)
			{
				int64 rdx_3625 = rax_3620->qw0030;
				if (rdx_3625 != 0x00)
				{
					Eq_63571 rcx_3631;
					rcx_3631.u0 = (uint64) r13_122->t0050.u0;
					if ((word32) rcx_3631 < rax_3620->dw0038)
					{
						*((word64) rcx_3631 + rdx_3625) = r12b_3635;
						r13_122->t0050.u0 = (uint32) (r13_122->t0050.u0 + 0x01);
					}
				}
			}
		} while (r12d_3641 != 0x00 && edi_3647 < esi_3600);
		if ((r13_122->t0018.u0 & 0x0200) != 0x00 && ((r13_122->t0010).u0 & 0x04) != 0x00)
			r13_122->t0020.u0 = (uint32) fn0000000180021060(r13_122->t0020.u0, r14_3943, (uint64) edi_3647);
		up32 esi_4005 = esi_3600 - edi_3647;
		ptr64 r14_3694 = r14_3943.u0 + (uint64) edi_3647;
		if (r12d_3641 == 0x00)
		{
l000000018001F1FB:
			word64 rdi_3730 = rbp_132->qw0020;
			ptr64 r9_3731 = rbp_132->ptrFFFFFFC0;
			uint64 r10_3733 = (uint64) rbp_132->dw0038;
			r13_122->dw0008 = 16188;
l000000018001F20F:
			struct Eq_66113 * rdi_3870;
			if ((r13_1177->dw0018 & 0x0200) != 0x00)
			{
				up32 ebx_3743;
				if (ebx_3743 < 0x10)
				{
					up32 ebx_3792;
					do
					{
						word32 esi_3767;
						if (esi_3767 == 0x00)
							goto l0000000180020120;
						word32 esi_5113 = esi_3767 - 0x01;
						word32 r15d_3827 = r15d_3785 + ((word32) (*r14_3772) << (byte) ebx_3776);
						ptr64 r14_3789 = r14_3772 + 1;
						ebx_3792 = ebx_3776 + 0x08;
					} while (ebx_3792 < 0x10);
				}
				word32 r15d_3804;
				if ((r13_122->t0010.u0 & 0x04) != 0x00 && r15d_3804 != (word32) (r13_122->t0020).u1)
				{
					rdi_3870->ptr0020 = &g_t80028960;
					r13_122->dw0008 = 0x3F51;
					word64 r10_7339 = r10_7353;
					goto l000000018001ECC5;
				}
				word32 r15d_5020 = 0x00;
				word32 ebx_4887 = 0x00;
			}
			struct Eq_63544 * rcx_3844 = r13_122->ptr0028;
			if (rcx_3844 != null)
			{
				rcx_3844->dw003C = r13_122->t0018.u0 >> 0x09 & 0x01;
				r13_122->ptr0028->dw0040 = 0x01;
			}
			r13_122->t0020.u0 = 0x00;
			rdi_3870->dw004C = 0x00;
l000000018001F298:
			r13_122->dw0008 = 16191;
			word64 r10_7338 = r10_7361;
l000000018001ECC5:
			struct Eq_63758 * r13_4533;
			if (r13_4533->dw0008 <= 16210 && r13_4533->dw0008 >= 0x3F34)
			{
				uint64 rdx_4714 = (uint64) rbp_4699->dwFFFFFFB4;
				word64 r10_7324 = r10_7340;
				goto l000000018001EC18;
			}
			goto l0000000180020258;
		}
	}
	goto l0000000180020120;
}

// 00000001800202F0: void fn00000001800202F0(Register (ptr64 Eq_67069) rcx)
// Called from:
//      fn0000000180022770
void fn00000001800202F0(struct Eq_67069 * rcx)
{
	if (rcx == null || rcx->qw0030 == 0x00)
		return;
	<anonymous> * r8_15 = rcx->ptr0038;
	if (r8_15 == null)
		return;
	struct Eq_67085 * rcx_20 = rcx->ptr0028;
	if (rcx_20 == null || (rcx_20->ptr0000 != rcx || (rcx_20->dw0008 > 16211 || rcx_20->dw0008 < 0x3F34)))
		return;
	if (rcx_20->qw0040 != 0x00)
		r8_15();
	rcx->ptr0038();
	rcx->ptr0028 = null;
}

// 0000000180020360: Register (ptr64 void) fn0000000180020360(Register int32 edx, Register int32 r8d)
// Called from:
//      fn000000018001E550
void * fn0000000180020360(int32 edx, int32 r8d)
{
	return malloc(edx *s r8d);
}

// 0000000180020370: void fn0000000180020370(Register (ptr64 Eq_62535) rdx)
// Called from:
//      fn000000018001E550
void fn0000000180020370(struct Eq_62535 * rdx)
{
	free(rdx);
}

// 0000000180020380: Register ui32 fn0000000180020380(Register uint32 ecx, Register Eq_137 rdx, Register uint64 r8)
// Called from:
//      fn000000018001EB30
ui32 fn0000000180020380(uint32 ecx, Eq_137 rdx, uint64 r8)
{
	word16 cx_11 = (word16) ecx;
	uint64 r9_10 = (uint64) (ecx >> 0x10);
	uint64 rcx_13 = (uint64) cx_11;
	Eq_137 r10_178 = rdx;
	uint32 r9d_207 = (word32) r9_10;
	uint32 ecx_183 = (word32) rcx_13;
	if (r8 != 0x01)
	{
		if (rdx == 0x00)
			return (word32) rdx + 0x01;
		if (r8 >= 0x10)
		{
			if (r8 >= 5552)
			{
				uint64 rdx_28 = SLICE(r8 *128 8771506548017510135, word64, 64);
				uint64 r11_31 = (r8 - rdx_28 >> 0x01) + rdx_28;
				uint64 r11_220 = r11_31 >> 0x0C;
				r8 += (r11_31 >> 0x0C) *s ~0x15AF;
				do
				{
					word32 edx_186;
					for (edx_186 = 0x015B; edx_186 != 0x00; edx_186 += ~0x00)
					{
						word32 ecx_49 = ecx_183 + (word32) (*r10_178.u0);
						word32 ecx_58 = ecx_49 + (word32) (r10_178.u2)[1];
						word32 ecx_67 = ecx_58 + (word32) (r10_178.u2)[2];
						word32 ecx_76 = ecx_67 + (word32) (r10_178.u2)[3];
						word32 ecx_85 = ecx_76 + (word32) (r10_178.u2)[4];
						word32 ecx_94 = ecx_85 + (word32) (r10_178.u2)[5];
						word32 ecx_103 = ecx_94 + (word32) (r10_178.u2)[6];
						word32 ecx_112 = ecx_103 + (word32) (r10_178.u2)[7];
						word32 ecx_121 = ecx_112 + (word32) (r10_178.u2)[8];
						word32 ecx_130 = ecx_121 + (word32) (r10_178.u2)[9];
						word32 ecx_139 = ecx_130 + (word32) (r10_178.u2)[0x0A];
						word32 ecx_148 = ecx_139 + (word32) (r10_178.u2)[11];
						word32 ecx_157 = ecx_148 + (word32) (r10_178.u2)[0x0C];
						word32 ecx_166 = ecx_157 + (word32) (r10_178.u2)[0x0D];
						word32 ecx_175 = ecx_166 + (word32) (r10_178.u2)[0x0E];
						ecx_183 = ecx_175 + (word32) (r10_178.u2)[0x0F];
						r10_178.u0 = (word64) r10_178 + 16;
						r9d_207 = r9d_207 + ecx_49 + ecx_58 + ecx_67 + ecx_76 + ecx_85 + ecx_94 + ecx_103 + ecx_112 + ecx_121 + ecx_130 + ecx_139 + ecx_148 + ecx_157 + ecx_166 + ecx_175 + ecx_183;
					}
					rcx_13 = (uint64) (ecx_183 + (SLICE(ecx_183 *64 0x80078071, word32, 32) >> 0x0F) *s ~0xFFF0);
					ecx_183 = (word32) rcx_13;
					r9d_207 += (SLICE(r9d_207 *64 0x80078071, word32, 32) >> 0x0F) *s ~0xFFF0;
					--r11_220;
				} while (r11_220 != 0x00);
			}
			uint32 ecx_242 = (word32) rcx_13;
			uint64 rcx_432 = rcx_13;
			if (r8 != 0x00)
			{
				if (r8 >= 0x10)
				{
					Eq_67388 rdx_234 = r8 >> 0x04;
					r8 += rdx_234 *s ~0x0F;
					do
					{
						word32 ecx_249 = ecx_242 + (word32) (*r10_178.u0);
						word32 ecx_258 = ecx_249 + (word32) (r10_178.u2)[1];
						word32 ecx_267 = ecx_258 + (word32) (r10_178.u2)[2];
						word32 ecx_276 = ecx_267 + (word32) (r10_178.u2)[3];
						word32 ecx_285 = ecx_276 + (word32) (r10_178.u2)[4];
						word32 ecx_294 = ecx_285 + (word32) (r10_178.u2)[5];
						word32 ecx_303 = ecx_294 + (word32) (r10_178.u2)[6];
						word32 ecx_312 = ecx_303 + (word32) (r10_178.u2)[7];
						word32 ecx_321 = ecx_312 + (word32) (r10_178.u2)[8];
						word32 ecx_330 = ecx_321 + (word32) (r10_178.u2)[9];
						word32 ecx_339 = ecx_330 + (word32) (r10_178.u2)[0x0A];
						word32 ecx_348 = ecx_339 + (word32) (r10_178.u2)[11];
						word32 ecx_357 = ecx_348 + (word32) (r10_178.u2)[0x0C];
						word32 ecx_366 = ecx_357 + (word32) (r10_178.u2)[0x0D];
						word32 ecx_375 = ecx_366 + (word32) (r10_178.u2)[0x0E];
						ecx_242 = ecx_375 + (word32) (r10_178.u2)[0x0F];
						r10_178.u0 = (word64) r10_178 + 16;
						r9d_207 = r9d_207 + ecx_249 + ecx_258 + ecx_267 + ecx_276 + ecx_285 + ecx_294 + ecx_303 + ecx_312 + ecx_321 + ecx_330 + ecx_339 + ecx_348 + ecx_357 + ecx_366 + ecx_375 + ecx_242;
						--rdx_234;
					} while (rdx_234 != 0x00);
				}
				for (; r8 != 0x00; --r8)
				{
					ecx_242 += (word32) *r10_178.u0;
					++r10_178.u2;
					r9d_207 += ecx_242;
				}
				rcx_432 = (uint64) (ecx_242 + (SLICE(ecx_242 *64 0x80078071, word32, 32) >> 0x0F) *s ~0xFFF0);
				r9d_207 += (SLICE(r9d_207 *64 0x80078071, word32, 32) >> 0x0F) *s ~0xFFF0;
			}
			return r9d_207 << 0x10 | (word32) rcx_432;
		}
		else
		{
			for (; r8 != 0x00; --r8)
			{
				rcx_13 = (uint64) (ecx_183 + (word32) (*r10_178.u0));
				ecx_183 = (word32) rcx_13;
				r9_10 = (uint64) (r9d_207 + ecx_183);
				++r10_178.u2;
				r9d_207 = (word32) r9_10;
			}
			uint32 ecx_488 = (word32) rcx_13;
			uint32 r9d_501 = (word32) r9_10;
			uint32 r8d_499 = ecx_488 - 0xFFF1;
			if (ecx_488 < 0xFFF1)
				r8d_499 = ecx_488;
			return (SLICE(r9d_501 *64 0x80078071, word32, 32) >> 0x0F) *s 0x0F + r9d_501 << 0x10 | r8d_499;
		}
	}
	else
	{
		uint64 rcx_534 = (uint64) (ecx_183 + (word32) (*rdx.u0));
		uint32 ecx_535 = (word32) rcx_534;
		uint32 edx_540 = (word32) rcx_534 - 0xFFF1;
		if (ecx_535 < 0xFFF1)
			edx_540 = ecx_535;
		uint64 r9_545 = (uint64) (r9d_207 + edx_540);
		uint32 r9d_546 = (word32) r9_545;
		uint32 eax_551 = (word32) r9_545 - 0xFFF1;
		if (r9d_546 < 0xFFF1)
			eax_551 = r9d_546;
		return eax_551 << 0x10 | edx_540;
	}
}

// 0000000180020660: Register word32 fn0000000180020660(Register word32 ecx, Register (ptr64 Eq_64905) rdx, Register up32 r8d, Register (ptr64 word64) r9, Stack (ptr64 word32) qwArg28, Stack (arr Eq_67849) qwArg30, Register out Eq_64910 ebxOut, Register out (ptr64 Eq_64911) rbpOut, Register out Eq_64910 esiOut, Register out (ptr64 (arr Eq_67849)) rdiOut, Register out (ptr64 Eq_64905) r12Out, Register out (ptr64 Eq_64915) r13Out, Register out (ptr64 word64) r14Out)
// Called from:
//      fn000000018001EB30
word32 fn0000000180020660(word32 ecx, struct Eq_64905 * rdx, up32 r8d, word64 * r9, word32 * qwArg28, Eq_67849 qwArg30[], union Eq_64910 & ebxOut, struct Eq_64911 & rbpOut, union Eq_64910 & esiOut, Eq_67849 (& rdiOut, struct Eq_64905 & r12Out, struct Eq_64915 & r13Out, word64 & r14Out)
{
	word64 qwLoc0100;
	word32 edx_2010;
	ptr64 fp;
	uint64 rbx_38 = (uint64) r8d;
	ui64 rax_27 = g_qw80030008 ^ fp - 0xF8;
	up32 ebx_95 = (word32) rbx_38;
	up32 r10d_1038;
	for (r10d_1038 = 0x00; r10d_1038 <= 0x0F; ++r10d_1038)
	{
		uint64 rax_56 = (uint64) r10d_1038;
		if (rax_56 * 0x02 >= 0x20)
		{
			struct Eq_64945 * rdx_63 = (struct Eq_64945 *) <invalid>;
			struct Eq_64660 * rcx_62 = fn0000000180023F6C(out edx_2010);
			int3();
			int3();
			int3();
			int3();
			int3();
			int3();
			int3();
			int3();
			int3();
			int3();
			int3();
			int3();
			word32 edx_69 = (word32) rdx_63;
			uint64 rax_74 = (uint64) fn0000000180020B70(rcx_62, edx_69);
			ebxOut.u0 = <invalid>;
			rbpOut = fp - 79;
			esiOut.u0 = (<unknown>*) <invalid>;
			rdiOut = qwArg30;
			r12Out = rdx;
			r13Out = null;
			r14Out = r9;
			return (word32) rax_74;
		}
		(fp - 0x0088)[rax_56] = 0x00;
	}
	if (ebx_95 != 0x00)
	{
		struct Eq_64905 * rcx_101 = rdx;
		uint64 rdx_105 = rbx_38;
		do
		{
			uint64 rax_109 = CONVERT(Mem107[rcx_101 + 0x00:word16], word16, uint64);
			++(fp - 0x0088)[rax_109];
			++rcx_101;
			--rdx_105;
		} while (rdx_105 != 0x00);
	}
	up32 r10d_183 = *qwArg28;
	uint64 rdx_125 = 0x0D;
	uint64 r9_146 = 0x0F;
	word32 r15d_1173;
	do
	{
		word32 r9d_128 = (word32) r9_146;
		word32 edx_149 = (word32) rdx_125;
		r15d_1173 = ~0x00;
		if ((fp - 0x0088)[(uint64) r9d_128] != 0x00)
			break;
		if ((fp - 0x0088)[(uint64) ((word32) rdx_125 + 0x01)] != 0x00)
		{
			r9_146 = (uint64) (r9d_128 + ~0x00);
			break;
		}
		if ((fp - 0x0088)[(uint64) edx_149] != 0x00)
		{
			r9_146 = (uint64) (r9d_128 + ~0x01);
			break;
		}
		if ((fp - 0x0088)[(uint64) ((word32) rdx_125 - 0x01)] != 0x00)
		{
			r9_146 = (uint64) (r9d_128 + ~0x02);
			break;
		}
		if ((fp - 0x0088)[(uint64) ((word32) rdx_125 - 0x02)] != 0x00)
		{
			r9_146 = (uint64) (r9d_128 + ~0x03);
			break;
		}
		r9_146 = (uint64) (r9d_128 + ~0x04);
		rdx_125 = (uint64) (edx_149 + ~0x04);
	} while ((word32) r9_146 >= 0x01);
	up32 r9d_184 = (word32) r9_146;
	if (r10d_183 > r9d_184)
		r10d_183 = r9d_184;
	if (r9d_184 == 0x00)
	{
		**r9 = (word64) 0x0140;
		*r9 += 0x04;
		**r9 = (word64) 0x0140;
		*r9 += 0x04;
		*qwArg28 = 0x01;
		goto l00000001800207AF;
	}
	uint64 r11_1982 = 0x01;
	if (r9d_184 > 0x01)
	{
		word16 * rax_200 = fp - 0x0086;
		r11_1982 = 0x01;
		do
		{
			word32 r11d_206 = (word32) r11_1982;
			if (*rax_200 != 0x00)
				break;
			r11_1982 = (uint64) (r11d_206 + 0x01);
			++rax_200;
		} while ((word32) r11_1982 < r9d_184);
	}
	up32 r11d_1987 = (word32) r11_1982;
	up32 edx_221 = 0x01;
	int32 r8d_1049 = 0x01;
	if (r10d_183 < r11d_1987)
		r10d_183 = r11d_1987;
	do
	{
		r8d_1049 = r8d_1049 * 0x02 - (word32) (fp - 0x0088)[(uint64) edx_221];
		if (r8d_1049 < 0x00)
		{
l0000000180020B57:
			goto l00000001800207B1;
		}
		++edx_221;
	} while (edx_221 <= 0x0F);
	if (r8d_1049 > 0x00 && (ecx == 0x00 || r9d_184 != 0x01))
		goto l0000000180020B57;
	int64 rcx_307 = 0x00;
	uint64 rdx_309;
	for (rdx_309 = 0x0E; rdx_309 != 0x00; --rdx_309)
	{
		*((char *) &(fp - 100)[0] + rcx_307) = (word16 (*)[]) ((char *) *((char *) &(fp - 0x0066)[0] + rcx_307) + *((word64) (fp - 0x0086) + rcx_307));
		rcx_307 += 2;
	}
	if (ebx_95 != 0x00)
	{
		struct Eq_64905 * rdx_354 = rdx;
		Eq_67840 r8_382;
		r8_382.u1 = 0x00;
		do
		{
			Eq_67849 r8w_369 = (word16) r8_382;
			word16 ax_359 = Mem356[rdx_354 + 0x00:word16];
			if (ax_359 != 0x00)
			{
				qwArg30[(uint64) (fp - 0x0068)[(uint64) ax_359]].u1 = (word16) r8w_369;
				uint64 rax_373 = CONVERT(Mem371[rdx_354 + 0x00:word16], word16, uint64);
				++(fp - 0x0068)[rax_373];
			}
			r8_382.u0 = (uint64) ((word64) r8_382 + 1);
			++rdx_354;
		} while ((word32) r8_382 < ebx_95);
	}
	Eq_67849 qwLocB8_1204[];
	up32 edx_496;
	Eq_67849 qwLocB0_1205[];
	switch (ecx)
	{
	case 0x00:
		qwLocB8_1204 = qwArg30;
		edx_496 = 0x14;
		qwLocB0_1205 = qwArg30;
		break;
	case 0x01:
		edx_496 = 0x0101;
		qwLocB0_1205 = g_a80025E10;
		qwLocB8_1204 = g_a80025DD0;
		break;
	default:
		edx_496 = 0x00;
		qwLocB0_1205 = g_a80025E50;
		qwLocB8_1204 = g_a80025D90;
		break;
	}
	uint64 rsi_1993 = (uint64) (0x01 << (byte) r10d_183);
	up32 esi_501 = (word32) rsi_1993;
	struct Eq_67734 * r12_1119 = *r9;
	uint32 ebx_1108 = 0x00;
	uipr32 dwLocCC_1226 = 0x00;
	uipr32 r8d_1074 = 0x00;
	up32 dwLocD0_1227 = 0x00;
	up32 r13d_1157 = esi_501;
	ui32 eax_506 = (word32) rsi_1993 - 0x01;
	Eq_67934 edi_1988;
	if (ecx == 0x01)
	{
		if (esi_501 > 0x0354)
			goto l0000000180020938;
		edi_1988.u0 = 0x00;
	}
	else
	{
		edi_1988.u0 = 0x00;
		if (ecx == 0x02)
		{
			edi_1988.u0 = 0x00;
			if (esi_501 > 0x0250)
				goto l0000000180020938;
		}
	}
l0000000180020960:
	uint64 rsi_2011;
	do
	{
		byte r11b_520 = (byte) r11d_1987;
		byte dil_524 = (byte) edi_1988;
		uint64 rcx_532 = (uint64) qwArg30[(uint64) r8d_1074].u1;
		word32 esi_587 = (word32) rsi_2011;
		byte al_525 = r11b_520 - dil_524;
		up32 ecx_539 = (word32) rcx_532;
		word16 cx_567 = (word16) rcx_532;
		word32 dwLocD8_1239;
		if ((word32) rcx_532 + 0x01 < edx_496)
			dwLocD8_1239 = SEQ(cx_567, al_525, 0x00);
		else
		{
			Eq_67849 ax_561;
			word16 wLocD8_1241;
			if (ecx_539 >= edx_496)
			{
				uint64 rcx_551 = (uint64) (ecx_539 - edx_496);
				ax_561.u1 = qwLocB0_1205[rcx_551].u1;
				wLocD8_1241 = SEQ(al_525, qwLocB8_1204[rcx_551].u0);
			}
			else
			{
				ax_561.u1 = 0x00;
				wLocD8_1241 = SEQ(al_525, 0x60);
			}
			dwLocD8_1239 = SEQ(ax_561, wLocD8_1241);
		}
		word32 r8d_1122 = esi_587;
		uint32 r10d_1116 = 0x01 << (byte) (r11d_1987 - edi_1988);
		uint32 edx_1115 = (ebx_1108 >> (byte) edi_1988) + esi_587;
		do
		{
			uint64 rdx_616 = (uint64) (edx_1115 - r10d_1116);
			r12_1119[rdx_616 *64 2] = (struct Eq_67734) dwLocD8_1239;
			edx_1115 = (word32) rdx_616;
			r8d_1122 -= r10d_1116;
		} while (r8d_1122 != 0x00);
		uint64 rdx_1996 = (uint64) (0x01 << (byte) r11d_1987 - 0x01);
		uint32 edx_640 = (word32) rdx_1996;
		while ((ebx_1108 & edx_640) != 0x00)
		{
			rdx_1996 = (uint64) (edx_640 >> 0x01);
			edx_640 = (word32) rdx_1996;
		}
		ui32 edx_654 = (word32) rdx_1996;
		if (edx_654 != 0x00)
			ebx_1108 = (ebx_1108 & edx_654 - 0x01) + edx_654;
		else
			ebx_1108 = 0x00;
		uint64 r8_701 = (uint64) (dwLocCC_1226 + 0x01);
		uint64 rax_707 = (uint64) r11d_1987;
		word16 v54_711 = (fp - 0x0088)[rax_707] + ~0x00;
		(fp - 0x0088)[rax_707] = v54_711;
		r8d_1074 = (word32) r8_701;
		dwLocCC_1226 = r8d_1074;
		if (v54_711 == 0x00)
		{
			if (r11d_1987 == r9d_184)
			{
				if (ebx_1108 != 0x00)
					r12_1119[(uint64) ebx_1108 *64 2] = (struct Eq_67734) SEQ(0x00, r11b_520 - dil_524, 0x40);
				*r9 += (uint64) r13d_1157 << 0x02;
				*qwArg28 = r10d_183;
l00000001800207B1:
				word64 rax_1014 = fn0000000180023580(rax_27 ^ fp - 0xF8, qwLoc0100);
				ebxOut.u0 = (<unknown>*) <invalid>;
				struct Eq_64911 * rbp;
				rbpOut = rbp;
				esiOut.u0 = (<unknown>*) <invalid>;
				Eq_67849 (* rdi)[];
				rdiOut = rdi;
				struct Eq_64905 * r12;
				r12Out = r12;
				struct Eq_64915 * r13;
				r13Out = r13;
				word64 * r14;
				r14Out = r14;
				return (word32) rax_1014;
			}
			r11d_1987 = (word32) rdx[(uint64) qwArg30[r8_701].u1];
		}
		rsi_1993 = rsi_2011;
		rsi_2011 = rsi_1993;
	} while (r11d_1987 <= r10d_183);
	uint64 rdi_803 = (uint64) (eax_506 & ebx_1108);
	word32 edi_804 = (word32) rdi_803;
	uint64 rsi_2001 = rsi_2011;
	if (edi_804 == r15d_1173)
	{
l0000000180020950:
		edi_1988.u0 = (uint64) dwLocD0_1227;
		rsi_1993 = rsi_2001;
		goto l0000000180020960;
	}
	up32 r8d_828 = dwLocD0_1227;
	r12_1119 += rsi_2011 *64 2;
	if (dwLocD0_1227 == 0x00)
		r8d_828 = r10d_183;
	up32 r10d_845 = r11d_1987 - r8d_828;
	uint64 r8_849 = (uint64) (r8d_828 + r10d_845);
	dwLocD0_1227 = r8d_828;
	ui32 edx_1181 = 0x01 << (byte) r10d_845;
	while ((word32) r8_849 < r9d_184)
	{
		word32 r8d_878 = (word32) r8_849;
		int32 edx_869 = edx_1181 - (word32) (fp - 0x0088)[r8_849];
		if (edx_869 <= 0x00)
			break;
		r8_849 = (uint64) (r8d_878 + 0x01);
		++r10d_845;
		edx_1181 = edx_869 * 0x02;
	}
	rsi_2001 = (uint64) (0x01 << (byte) r10d_845);
	byte r10b_940 = (byte) r10d_845;
	r13d_1157 += (word32) rsi_2001;
	bool v232_1183;
	if (ecx == 0x01)
		v232_1183 = r13d_1157 > 0x0354;
	else
	{
		if (ecx != 0x02)
			goto l0000000180020ADC;
		v232_1183 = r13d_1157 > 0x0250;
	}
	if (!v232_1183)
	{
l0000000180020ADC:
		*((word64) *r9 + rdi_803 * 0x04) = (word64) r10b_940;
		*((word64) (rdi_803 * 0x04 + 1) + *r9) = (int64) (byte) r10d_183;
		struct Eq_67734 * rcx_951 = *r9;
		rcx_951->a0002[rdi_803].w0000 = (word16) (r12_1119 - rcx_951 >> 0x02);
		r15d_1173 = edi_804;
		goto l0000000180020950;
	}
l0000000180020938:
	goto l00000001800207B1;
}

// 0000000180020B70: Register word32 fn0000000180020B70(Register (ptr64 Eq_64660) rcx, Register word32 edx)
// Called from:
//      fn000000018001EB30
//      fn0000000180020660
word32 fn0000000180020B70(struct Eq_64660 * rcx, word32 edx)
{
	struct Eq_68182 * r12_30 = rcx->ptr0028;
	Eq_64667 rdi_108;
	rdi_108.u0 = rcx->t0000.u0;
	uint64 r9_34 = (uint64) rcx->dw0018;
	union Eq_64659 * r8_41 = rcx->ptr0010;
	Eq_75309 (* r10_47)[] = r12_30->ptr0060;
	Eq_75315 (* rsi_50)[] = r12_30->ptr0068;
	Eq_64667 r13_51;
	r13_51.u0 = rdi_108.u0 + (uint64) (rcx->dw0008 - 0x05);
	up32 r14d_1114 = r12_30->dw003C;
	union Eq_64659 * r15_54 = &r8_41->u0 + (uint64) ((word32) r9_34 - 0x0101);
	uint32 ebx_1008 = r12_30->dw0048;
	uint64 r11_1601 = (uint64) r12_30->dw004C;
	word32 eax_69 = r12_30->dw0034;
	up32 eax_73 = r12_30->dw0038;
	struct Eq_68242 * rax_75 = r12_30->ptr0040;
	word32 dwLoc58_1504 = (word32) r8_41 - (edx - (word32) r9_34);
	ui32 edx_103 = (0x01 << r12_30->b0070) - 0x01;
	ui32 eax_99 = (0x01 << r12_30->b0074) - 0x01;
	Eq_75309 (* r10_1098)[] = r10_47;
	Eq_75315 (* rsi_1105)[] = rsi_50;
	uint32 r11d_188;
	while (true)
	{
		word32 r8d_1110 = (word32) r8_41;
		up32 r11d_105 = (word32) r11_1601;
		if (r11d_105 < 0x0F)
		{
			rdi_108.u0 = (word64) rdi_108 + 2;
			ebx_1008 = ebx_1008 + ((word32) (*rdi_108.u0) << (byte) r11d_105) + ((word32) (rdi_108.u1)[1] << (byte) r11d_105 + 0x08);
			r11d_105 += 0x10;
		}
		ui64 rcx_149 = (uint64) edx_103 & (uint64) ebx_1008;
		uint64 rcx_157 = (uint64) r10_1098[rcx_149].b0001;
		Eq_68281 edx_1603;
		edx_1603.u0 = (uint64) r10_1098[rcx_149].b0000;
		struct Eq_68285 * r9_155 = (struct Eq_68285 *) &(r10_1098 + rcx_149)->b0000;
		ebx_1008 >>= (byte) rcx_157;
		uint64 r11_1612 = (uint64) (r11d_105 - (word32) rcx_157);
		uint64 r11_1610;
		while ((word32) edx_1603 != 0x00)
		{
			r11d_188 = (word32) r11_1612;
			byte dl_170 = (byte) edx_1603;
			if ((dl_170 & 0x10) != 0x00)
			{
				uint64 r10_1607 = (uint64) r9_155->t0002.u1;
				word32 r10d_231 = (word32) r10_1607;
				uint32 edx_183 = edx_1603 & 0x0F;
				uint64 r11_1604 = r11_1612;
				if (edx_183 != 0x00)
				{
					if (r11d_188 < edx_183)
					{
						++rdi_108.u1;
						ebx_1008 += (word32) *rdi_108.u0 << (byte) r11d_188;
						r11d_188 += 0x08;
					}
					byte cl_217 = (byte) edx_183;
					ebx_1008 >>= cl_217;
					r10_1607 = (uint64) (r10d_231 + ((0x01 << cl_217) - 0x01 & ebx_1008));
					r11_1604 = (uint64) (r11d_188 - edx_183);
				}
				up32 r10d_487 = (word32) r10_1607;
				up32 r11d_240 = (word32) r11_1604;
				if (r11d_240 < 0x0F)
				{
					rdi_108.u0 = (word64) rdi_108 + 2;
					ebx_1008 = ebx_1008 + ((word32) (*rdi_108.u0) << (byte) r11d_240) + ((word32) (rdi_108.u1)[1] << (byte) r11d_240 + 0x08);
					r11d_240 += 0x10;
				}
				ui64 rcx_292 = (uint64) eax_99 & (uint64) ebx_1008;
				Eq_68496 edx_1606;
				edx_1606.u0 = (uint64) rsi_1105[rcx_292].b0000;
				uint64 rcx_301 = (uint64) rsi_1105[rcx_292].b0001;
				ui32 edx_364 = (word32) edx_1606;
				struct Eq_68509 * r9_299 = (struct Eq_68509 *) &(rsi_1105 + rcx_292)->b0000;
				ebx_1008 >>= (byte) rcx_301;
				r11d_188 = r11d_240 - (word32) rcx_301;
				ptr64 rax_319;
				while (((byte) edx_1606 & 0x10) == 0x00)
				{
					if (((byte) edx_1606 & 0x40) != 0x00)
					{
						rax_319 = &g_t80028A98;
						goto l0000000180020FD3;
					}
					uint64 rcx_341 = ((uint64) ((0x01 << (byte) edx_1606) - 0x01) & (uint64) ebx_1008) + (uint64) r9_299->w0002;
					edx_1606.u0 = (uint64) rsi_1105[rcx_341].b0000;
					uint64 rcx_347 = (uint64) rsi_1105[rcx_341].b0001;
					edx_364 = (word32) edx_1606;
					r9_299 = (struct Eq_68509 *) &(rsi_1105 + rcx_341)->b0000;
					ebx_1008 >>= (byte) rcx_347;
					r11d_188 -= (word32) rcx_347;
				}
				word32 esi_442 = (word32) r9_299->w0002;
				uint32 edx_372 = edx_364 & 0x0F;
				if (r11d_188 < edx_372)
				{
					++rdi_108.u1;
					ebx_1008 += (word32) *rdi_108.u0 << (byte) r11d_188;
					r11d_188 += 0x08;
					if (r11d_188 < edx_372)
					{
						++rdi_108.u1;
						ebx_1008 += (word32) *rdi_108.u0 << (byte) r11d_188;
						r11d_188 += 0x08;
					}
				}
				r11_1610 = (uint64) (r11d_188 - edx_372);
				byte cl_425 = (byte) edx_372;
				r11d_188 = (word32) r11_1610;
				ebx_1008 >>= cl_425;
				up32 esi_462 = esi_442 + ((0x01 << cl_425) - 0x01 & ebx_1008);
				up32 eax_463 = r8d_1110 - dwLoc58_1504;
				if (esi_462 <= eax_463)
				{
					struct Eq_68633 * rcx_477 = r8_41 - (uint64) esi_462;
					do
					{
						r8_41->u0.b0000 = rcx_477->b0000;
						++rcx_477;
						(&r8_41->u0)[1] = (struct Eq_75639) rcx_477->bFFFFFFFE;
						(&r8_41->u0)[2] = (struct Eq_75639) rcx_477->bFFFFFFFF;
						r10d_487 += ~0x02;
						r8_41 = (union Eq_64659 *) ((char *) r8_41 + 3);
					} while (r10d_487 > 0x02);
					if (r10d_487 != 0x00)
					{
						r8_41->u0.b0000 = rcx_477->b0000;
						rsi_1105 = rsi_50;
						r8_41 = &r8_41->u0 + 1;
						r10_1098 = r10_47;
						if (r10d_487 > 0x01)
						{
							(&r8_41->u0)[1] = (struct Eq_75639) rcx_477->b0001;
							r8_41 = &r8_41->u0 + 2;
						}
						goto l0000000180020F8C;
					}
					goto l0000000180020F82;
				}
				up32 ecx_528 = esi_462 - eax_463;
				if (ecx_528 > eax_73 && r12_30->dw1BE0 != 0x00)
				{
					rax_319 = &g_t80028AB0;
l0000000180020FD3:
					rcx->ptr0020 = rax_319;
					r12_30->dw0008 = 0x3F51;
					goto l0000000180020FFB;
				}
				struct Eq_68242 * r9_570;
				uint64 r10_1613;
				if (r14d_1114 == 0x00)
				{
					r9_570 = rax_75 + (uint64) (eax_69 - ecx_528);
					if (ecx_528 >= r10d_487)
						goto l0000000180020EAD;
					r10_1613 = (uint64) (r10d_487 - ecx_528);
					do
					{
						r8_41->u0.b0000 = r9_570->b0000;
						++r9_570;
						r8_41 = &r8_41->u0 + 1;
						ecx_528 += ~0x00;
					} while (ecx_528 != 0x00);
					goto l0000000180020EA5;
				}
				uint64 r9_565 = (uint64) (r14d_1114 - ecx_528);
				word32 r9d_599 = (word32) r9_565;
				if (r14d_1114 >= ecx_528)
				{
					r9_570 = rax_75 + r9_565;
					if (ecx_528 < r10d_487)
					{
						r10_1613 = (uint64) (r10d_487 - ecx_528);
						do
						{
							r8_41->u0.b0000 = r9_570->b0000;
							++r9_570;
							r8_41 = &r8_41->u0 + 1;
							ecx_528 += ~0x00;
						} while (ecx_528 != 0x00);
l0000000180020EA5:
						r9_570 = r8_41 - (uint64) esi_462;
						r10_1607 = r10_1613;
					}
l0000000180020EAD:
					uint32 r10d_695 = (word32) r10_1607;
					if (r10d_695 > 0x02)
					{
						uint64 rcx_734 = (uint64) ((SLICE((r10d_695 - 0x03) *64 ~0x55555554, word32, 32) >> 0x01) + 0x01);
						do
						{
							r8_41->u0.b0000 = r9_570->b0000;
							(&r8_41->u0)[1] = r9_570[1];
							(&r8_41->u0)[2] = r9_570[2];
							r10d_695 += ~0x02;
							r9_570 += 3;
							r8_41 = (union Eq_64659 *) ((char *) r8_41 + 3);
							--rcx_734;
						} while (rcx_734 != 0x00);
					}
					if (r10d_695 != 0x00)
					{
						r8_41->u0.b0000 = r9_570->b0000;
						rsi_1105 = rsi_50;
						r8_41 = &r8_41->u0 + 1;
						r10_1098 = r10_47;
						if (r10d_695 > 0x01)
						{
							r8_41->u0.b0000 = (byte) r9_570[1];
							r8_41 = &r8_41->u0 + 1;
						}
						goto l0000000180020F8C;
					}
l0000000180020F82:
					rsi_1105 = rsi_50;
					r10_1098 = r10_47;
					goto l0000000180020F8C;
				}
				else
				{
					up32 ecx_606 = ecx_528 - r14d_1114;
					r9_570 = rax_75 + (uint64) (r9d_599 + eax_69);
					if (ecx_606 >= r10d_487)
						goto l0000000180020EAD;
					r10_1607 = (uint64) (r10d_487 - ecx_606);
					up32 r10d_632 = (word32) r10_1607;
					int64 r9_612 = r9_570 - r8_41;
					do
					{
						r8_41->u0.b0000 = (byte) (&r8_41->u0)[r9_612];
						r8_41 = &r8_41->u0 + 1;
						ecx_606 += ~0x00;
					} while (ecx_606 != 0x00);
					r9_570 = rax_75;
					if (r14d_1114 >= r10d_632)
						goto l0000000180020EAD;
					up32 ecx_1126 = r14d_1114;
					r10_1613 = (uint64) (r10d_632 - r14d_1114);
					do
					{
						r8_41->u0.b0000 = r9_570->b0000;
						++r9_570;
						r8_41 = &r8_41->u0 + 1;
						ecx_1126 += ~0x00;
					} while (ecx_1126 != 0x00);
					goto l0000000180020EA5;
				}
			}
			if ((dl_170 & 0x40) != 0x00)
			{
				if ((dl_170 & 0x20) != 0x00)
					r12_30->dw0008 = 16191;
				else
				{
					rcx->ptr0020 = &g_t80028A78;
					r12_30->dw0008 = 0x3F51;
				}
				goto l0000000180020FFB;
			}
			uint64 rcx_838 = ((uint64) ((0x01 << (byte) edx_1603) - 0x01) & (uint64) ebx_1008) + (uint64) (r9_155->t0002).u1;
			uint64 rcx_844 = (uint64) r10_1098[rcx_838].b0001;
			edx_1603.u0 = (uint64) r10_1098[rcx_838].b0000;
			r9_155 = (struct Eq_68285 *) &(r10_1098 + rcx_838)->b0000;
			ebx_1008 >>= (byte) rcx_844;
			r11_1612 = (uint64) (r11d_188 - (word32) rcx_844);
		}
		r8_41->u0.b0000 = r9_155->t0002.u0;
		r8_41 = &r8_41->u0 + 1;
		r11_1610 = r11_1612;
l0000000180020F8C:
		r11d_188 = (word32) r11_1610;
		if (rdi_108 >= r13_51 || r8_41 >= r15_54)
			break;
		r11_1601 = r11_1610;
	}
l0000000180020FFB:
	rcx->ptr0010 = r8_41;
	uint64 rcx_970 = (uint64) (r11d_188 >> 0x03);
	Eq_64667 rdi_977 = rdi_108 - (uint64) ((word32) rcx_970);
	rcx->t0000.u0 = (byte *) rdi_977;
	rcx->dw0008 = (word32) (r13_51 - rdi_977) + 0x05;
	word64 r15_1033 = r15_54 - r8_41;
	rcx->dw0018 = (word32) r15_1033 + 0x0101;
	uint32 r11d_988 = r11d_188 - (word32) rcx_970 * 0x08;
	r12_30->dw0048 = ebx_1008 & (0x01 << (byte) r11d_988) - 0x01;
	r12_30->dw004C = r11d_988;
	return (word32) r15_1033 + 0x0101;
}

// tmpr74rci4q_text_0000.c
// Generated by decompiling tmpr74rci4q
// using Reko decompiler version 0.11.6.0.

#include "tmpr74rci4q.h"

// 0000000180001020: Register ptr64 fn0000000180001020()
// Called from:
//      fn0000000180001030
//      fn0000000180002920
//      fn00000001800245D8
ptr64 fn0000000180001020()
{
	return &g_t800306C0;
}

// 0000000180001030: void fn0000000180001030(Register int64 rcx, Register ptr64 rdx)
// Called from:
//      fn0000000180001A00
void fn0000000180001030(int64 rcx, ptr64 rdx)
{
	ptr64 fp;
	(word32) _stdio_common_vsprintf(~0x00, rdx, *fn0000000180001020() | 0x01, rcx, 0x00, fp + 0x18) >= 0x00;
}

// 0000000180001090: void fn0000000180001090(Register (ptr64 Eq_25) rcx)
// Called from:
//      fn000000018002368C
void fn0000000180001090(struct Eq_25 * rcx)
{
	rcx->qw0000 = ~0x00;
	rcx->qw0008 = ~0x00;
}

// 00000001800010B0: void fn00000001800010B0()
// Called from:
//      fn00000001800235AC
void fn00000001800010B0()
{
}

// 00000001800010C0: void fn00000001800010C0(Register (ptr64 Eq_34) rcx)
// Called from:
//      fn0000000180001570
//      fn0000000180007D40
//      fn000000018000B390
//      fn000000018000E860
//      fn000000018000F210
//      fn0000000180012ED0
//      fn0000000180013C40
//      fn000000018001A460
//      fn000000018001B7D0
void fn00000001800010C0(struct Eq_34 * rcx)
{
	fn000000018002368C(&rcx->qw0008, 0x10, 0x0A);
	rcx->qw0000 = 0x0A;
	rcx->qw0008 = ~0x00;
	rcx->qw0010 = ~0x00;
	rcx->qw0018 = ~0x00;
	rcx->qw0020 = ~0x00;
	rcx->qw0028 = ~0x00;
	rcx->qw0030 = ~0x00;
	rcx->qw0038 = ~0x00;
	rcx->qw0040 = ~0x00;
	rcx->qw0048 = ~0x00;
	rcx->qw0050 = ~0x00;
	rcx->qw0058 = ~0x00;
	rcx->qw0060 = ~0x00;
	rcx->qw0068 = ~0x00;
	rcx->qw0070 = ~0x00;
	rcx->qw0078 = ~0x00;
	rcx->qw0080 = ~0x00;
	rcx->qw0088 = ~0x00;
	rcx->qw0090 = ~0x00;
	rcx->qw0098 = ~0x00;
	rcx->qw00A0 = ~0x00;
}

// 00000001800011C0: void fn00000001800011C0()
void fn00000001800011C0()
{
	fn00000001800235AC(0x0A);
}

// 0000000180001200: void fn0000000180001200(Register (ptr64 Eq_134) rcx)
void fn0000000180001200(struct Eq_134 * rcx)
{
	Eq_137 rcx_9;
	rcx_9.u0 = rcx->t0010.u0;
	if (rcx_9 == 0x00)
		rcx->dw0008 = 0x00;
	else
	{
		fn000000018002367C(rcx_9);
		rcx->t0010.u0 = 0x00;
		rcx->dw0008 = 0x00;
	}
}

// 00000001800012A0: void fn00000001800012A0(Register (ptr64 Eq_157) rcx)
void fn00000001800012A0(struct Eq_157 * rcx)
{
	rcx->qw0524 = 0x00;
	rcx->qw0530 = 0x00;
	rcx->qw0548 = 0x3F800000;
	rcx->qw055C = 0x3F800000;
	rcx->qw0570 = 0x3F800000;
	rcx->dw0584 = 0x3F800000;
	rcx->qw0588 = 0x3F800000;
	rcx->qw059C = 0x3F800000;
	rcx->qw05B0 = 0x3F800000;
	rcx->dw05C4 = 0x3F800000;
	rcx->b0000 = 0x00;
	rcx->b0104 = 0x00;
	rcx->b0208 = 0x00;
	rcx->b030C = 0x00;
	rcx->b0410 = 0x00;
	rcx->qw0514 = ~0x00;
	rcx->dw051C = ~0x00;
	real32 xmm0_30[4] = __unpcklp<real32[4]>(0, 0);
	real32 xmm1_31[4] = SEQ(0, 1.0F);
	rcx->r0520 = (real64) xmm0_30;
	rcx->dw0528 = 0x00;
	rcx->r052C = (real64) __unpcklp<real32[4]>(xmm1_31, xmm1_31);
	Eq_254 xmm0_37;
	xmm0_37.u3 = g_t80028EA0.u3;
	rcx->dw0534 = 0x3F800000;
	rcx->t0538.u3 = (word128) xmm0_37;
	rcx->qw0548 = 0x3F800000;
	rcx->qw0550 = 0x00;
	rcx->dw0558 = 0x00;
	rcx->qw055C = 0x3F800000;
	rcx->qw0564 = 0x00;
	rcx->dw056C = 0x00;
	rcx->qw0570 = 0x3F800000;
	rcx->qw0578 = 0x00;
	rcx->dw0580 = 0x00;
	rcx->dw0584 = 0x3F800000;
	rcx->qw0588 = 0x3F800000;
	rcx->qw0590 = 0x00;
	rcx->dw0598 = 0x00;
	rcx->qw059C = 0x3F800000;
	rcx->qw05A4 = 0x00;
	rcx->dw05AC = 0x00;
	rcx->qw05B0 = 0x3F800000;
	rcx->qw05B8 = 0x00;
	rcx->dw05C0 = 0x00;
	rcx->dw05C4 = 0x3F800000;
}

// 0000000180001460: void fn0000000180001460(Register (ptr64 Eq_343) rcx)
void fn0000000180001460(struct Eq_343 * rcx)
{
	rcx->qw0004 = 0x00;
	rcx->t0000.u1 = 0x00;
	rcx->qw0010 = 0x00;
	rcx->t000C.u1 = 0x00;
	word64 * rax_18 = &rcx->r0018;
	uint64 rdx_23;
	for (rdx_23 = 0x02; rdx_23 != 0x00; --rdx_23)
	{
		*rax_18 = 0x00;
		++rax_18;
	}
	fn000000018002368C(&rcx->dw0028 + 1, 0x08, 0x04);
	Mem59[rcx + 0x00:real64] = SLICE(__unpcklp<real32[4]>(0, 0), real64, 0);
	Mem62[rcx + 0x0C:real64] = SLICE(__unpcklp<real32[4]>(0, 0), real64, 0);
	rcx->dw0008 = 0x00;
	rcx->dw0014 = 0x00;
	Mem69[rcx + 24:real64] = SLICE(__unpcklp<real32[4]>(0, 0), real64, 0);
	Mem72[rcx + 32:real64] = SLICE(__unpcklp<real32[4]>(0, 0), real64, 0);
	rcx->dw0028 = 0x00;
}

// 0000000180001520: void fn0000000180001520()
void fn0000000180001520()
{
	fn00000001800235AC(0x04);
}

// 0000000180001570: void fn0000000180001570(Register (ptr64 Eq_428) rcx)
void fn0000000180001570(struct Eq_428 * rcx)
{
	fn00000001800010C0(&rcx->qw0030 + 1);
	rcx->dw0000 = 0x00;
	rcx->qw0008 = 0x00;
	rcx->dw0010 = 0x00;
	rcx->qw0018 = 0x00;
	rcx->qw0020 = 0x00;
	rcx->qw0028 = 0x00;
	rcx->qw0030 = 0x00;
	rcx->qw00E0 = 0x00;
	rcx->b00E8 = 0x00;
	rcx->b01EC = 0x00;
	rcx->dw02F0 = ~0x00;
}

// 00000001800015D0: void fn00000001800015D0()
void fn00000001800015D0()
{
	fn00000001800235AC(0x0A);
}

// 0000000180001620: Register word32 fn0000000180001620(Register (ptr64 Eq_482) rcx, Register Eq_483 edx)
// Called from:
//      fn0000000180003F40
word32 fn0000000180001620(struct Eq_482 * rcx, Eq_483 edx)
{
	word64 rdx;
	edx = (word32) rdx;
	Eq_486 rdi_11;
	rdi_11.u0 = (int64) edx;
	word32 edi_47 = (word32) rdi_11;
	Eq_137 rax_20;
	if (edx > 0x00)
	{
		Eq_137 rcx_25;
		rcx_25.u0 = rcx->t0010.u0;
		if (rcx_25 != 0x00)
		{
			fn000000018002367C(rcx_25);
			rcx->t0010.u0 = 0x00;
		}
		rcx->dw0008 = 0x00;
		rax_20 = fn0000000180023684(rdi_11);
		rcx->t0010.u0 = (byte *) rax_20;
		if (rax_20 != 0x00)
		{
			rcx->dw0008 = edi_47;
			rax_20.u0 = 0x01;
		}
	}
	else
		rax_20.u0 = 0x00;
	return (word32) rax_20;
}

// 0000000180001690: void fn0000000180001690(Register (ptr64 Eq_524) rcx)
// Called from:
//      fn0000000180001760
//      fn0000000180003AF0
//      fn0000000180003F40
void fn0000000180001690(struct Eq_524 * rcx)
{
	if (rcx->ptr0008 != null)
	{
		int32 ebp_100 = 0x00;
		if (rcx->dw0000 > 0x00)
		{
			struct Eq_547 * r14_29 = null;
			do
			{
				struct Eq_527 * rdi_32 = rcx->ptr0008;
				Eq_137 rcx_34;
				rcx_34.u0 = *((char *) &r14_29->t0000.u0 + (rdi_32 + (struct Eq_574 *) 16));
				if (rcx_34 != 0x00)
				{
					fn000000018002367C(rcx_34);
					*((char *) &r14_29->t0000.u0 + (rdi_32 + (struct Eq_567 *) 16)) = 0x00;
				}
				*(rdi_32->a0008 + r14_29) = (word64) 0x00;
				++ebp_100;
				r14_29 = (struct Eq_547 *) (r14_29->a0008 + 4);
			} while (ebp_100 < rcx->dw0000);
		}
		struct Eq_527 * rcx_57 = rcx->ptr0008;
		if (rcx_57 != null)
		{
			fn00000001800235AC(rcx_57->tFFFFFFF8.u0);
			fn00000001800235A4(rcx_57 - 8);
		}
		rcx->ptr0008 = null;
		rcx->dw0000 = 0x00;
	}
	else
		rcx->dw0000 = 0x00;
}

// 0000000180001760: Register word32 fn0000000180001760(Register (ptr64 Eq_524) rcx, Register int32 edx)
// Called from:
//      fn0000000180003F40
word32 fn0000000180001760(struct Eq_524 * rcx, int32 edx)
{
	word64 rdx;
	edx = (word32) rdx;
	Eq_39 rsi_17;
	rsi_17.u0 = (int64) edx;
	int32 esi_105 = (word32) rsi_17;
	uint64 rax_108;
	if (edx > 0x00)
	{
		fn0000000180001690(rcx);
		uint64 rax_46 = rsi_17 * 0x18;
		if (OVERFLOW<uint128>(rsi_17 *128 0x18))
			rax_46 = ~0x00;
		Eq_486 rax_52 = rax_46 + 0x08;
		if (rax_52 < 0x00)
			rax_52.u0 = ~0x00;
		Eq_137 rax_59 = fn0000000180023684(rax_52);
		struct Eq_527 * rbx_74;
		if (rax_59 != 0x00)
		{
			*rax_59.u1 = (word64) rsi_17;
			fn000000018002368C(rax_59.u2 + 8, 0x18, rsi_17);
			rbx_74 = (struct Eq_527 *) (rax_59.u2 + 8);
		}
		else
			rbx_74 = null;
		rcx->ptr0008 = rbx_74;
		if (rbx_74 == null)
			rax_108 = 0x00;
		else
		{
			rcx->dw0000 = esi_105;
			rax_108 = 0x01;
		}
	}
	else
		rax_108 = 0x00;
	return (word32) rax_108;
}

// 0000000180001810: Register Eq_137 fn0000000180001810(Register (ptr64 Eq_659) rcx, Register (ptr64 word32) rdx)
// Called from:
//      fn0000000180003F40
Eq_137 fn0000000180001810(struct Eq_659 * rcx, word32 * rdx)
{
	int64 r9_11 = (int64) rcx->dw0000;
	*rdx = 0x00;
	word32 edi_14 = 0x00;
	if (r9_11 <= 0x00)
		return 0x00;
	word32 r8d_227 = 0x00;
	struct Eq_681 * rax_26 = (struct Eq_681 *) rcx->ptr0008->a0004;
	do
	{
		r8d_227 += rax_26->dw0000;
		++rax_26;
		--r9_11;
	} while (r9_11 != 0x00);
	*rdx = r8d_227;
	if (r8d_227 == 0x00)
		return 0x00;
	Eq_137 rax_47 = fn0000000180023684((uint64) r8d_227);
	if (rax_47 == 0x00)
		return 0x00;
	int32 esi_194 = 0x00;
	if (rcx->dw0000 > 0x00)
	{
		int64 rbp_102 = 0x00;
		do
		{
			struct Eq_679 * rax_101 = rcx->ptr0008;
			Eq_734 ebx_105 = *((word64) &rax_101->a0004[0].t0000 + rbp_102);
			if (ebx_105 != 0x00)
			{
				Eq_483 r14d_112 = *((char *) rax_101 + rbp_102);
				if (r14d_112 != 0x00)
				{
					Eq_137 rax_117;
					rax_117.u0 = *((char *) &rax_101->a0010[0].u1 + rbp_102);
					if (rax_117 != 0x00 && (r14d_112 != 0x00 && ebx_105 != 0x00))
					{
						Eq_137 rax_134 = fn0000000180023684((uint64) ebx_105);
						if (rax_134 != 0x00)
						{
							memset(rax_134, 0, ebx_105);
							fn0000000180021580(rax_117, rax_134, r14d_112, ebx_105);
							memcpy(rax_47.u0 + (uint64) edi_14, rax_134, ebx_105);
							fn000000018002367C(rax_134);
						}
					}
					edi_14 = (word32) ((word64) ebx_105 + edi_14);
				}
			}
			++esi_194;
			rbp_102 += 0x18;
		} while (esi_194 < rcx->dw0000);
	}
	return rax_47;
}

// 0000000180001960: void fn0000000180001960(Register (ptr64 Eq_779) rcx)
// Called from:
//      fn0000000180003F40
void fn0000000180001960(struct Eq_779 * rcx)
{
	struct Eq_782 * rax_24 = rcx->ptr0030;
	if (rax_24 != null)
	{
		int32 r11d_13 = 0x00;
		if (rcx->dw0028 > 0x00)
		{
			struct Eq_793 * r8_18 = null;
			do
			{
				if (*((char *) &rax_24->a0000[0].u1 + (r8_18 + (struct Eq_75425 *) 24)) != 0x00)
				{
					Eq_803 r10d_30;
					r10d_30.u0 = 0x00;
					if (*((char *) &rax_24->a0000[0].u0 + (r8_18 + (struct Eq_75415 *) 16)) > 0x00)
					{
						Eq_811 rdx_34;
						rdx_34.u1 = 0x00;
						do
						{
							Eq_803 rcx_48;
							rcx_48.u1 = *((char *) &rcx->ptr0030->a0000[0].u1 + (r8_18 + (struct Eq_75416 *) 24));
							*(rcx_48.u1->a001C + rdx_34) = (word64) (1.0F - *((rcx_48.u1)->a001C + rdx_34));
							Eq_803 rcx_56;
							rcx_56.u1 = *((char *) &rcx->ptr0030->a0000[0].u1 + (r8_18 + (struct Eq_75419 *) 24));
							*((word64) rdx_34 + ((word64) rcx_56 + 36)) = 1.0F - *((word64) rdx_34 + ((word64) rcx_56 + 36));
							r10d_30.u1 = (word32) r10d_30.u0 + 1;
							rdx_34 = (word64) rdx_34 + 76;
							rax_24 = rcx->ptr0030;
						} while (r10d_30 < *((char *) (&((rax_24->a0000))[0].u0) + (r8_18 + (struct Eq_75422 *) 16)));
					}
				}
				++r11d_13;
				++r8_18;
			} while (r11d_13 < rcx->dw0028);
		}
	}
}

// 0000000180001A00: Register uint64 fn0000000180001A00(Register (ptr64 Eq_779) rcx)
// Called from:
//      fn0000000180008DC0
//      fn0000000180008FC0
//      fn000000018000B660
//      fn0000000180014610
//      fn0000000180014820
//      fn000000018001AC20
//      fn000000018001AE80
uint64 fn0000000180001A00(struct Eq_779 * rcx)
{
	uint64 rbx_22 = (uint64) (rcx->dw0038 + 0x01);
	int32 ebx_23 = (word32) rbx_22;
	Eq_39 rbp_24;
	rbp_24.u0 = (int64) ebx_23;
	uint64 rax_30 = rbp_24 * 0x05C8;
	if (OVERFLOW<uint128>(rbp_24 *128 0x05C8))
		rax_30 = ~0x00;
	Eq_486 rax_36 = rax_30 + 0x08;
	if (rax_36 < 0x00)
		rax_36.u0 = ~0x00;
	Eq_137 rax_43 = fn0000000180023684(rax_36);
	struct Eq_899 * rsi_58;
	if (rax_43 != 0x00)
	{
		*rax_43.u1 = (word64) rbp_24;
		fn000000018002368C(rax_43.u2 + 8, 0x05C8, rbp_24);
		rsi_58 = (struct Eq_899 *) (rax_43.u2 + 8);
	}
	else
		rsi_58 = null;
	uint64 rax_155;
	if (rsi_58 == null)
		rax_155 = 0x00;
	else
	{
		int64 rax_88 = (int64) rcx->dw0038;
		if ((word32) rax_88 > 0x00)
			memcpy(rsi_58, rcx->ptr0040, (size_t) rax_88 *s 0x05C8);
		struct Eq_899 * rcx_102 = rcx->ptr0040;
		if (rcx_102 != null)
		{
			fn0000000180001B00(rcx_102);
			rcx->ptr0040 = null;
		}
		rcx->ptr0040 = rsi_58;
		rcx->dw0038 = ebx_23;
		int64 rax_138 = (int64) ((word32) rbx_22 - 0x01);
		fn0000000180001030((char *) &rsi_58->a0000->u0 + (rax_138 *s 0x05C8 + 260), &g_t80025410);
		rax_155 = rcx->ptr0040 + rax_138;
	}
	return rax_155;
}

// 0000000180001B00: void fn0000000180001B00(Register (ptr64 Eq_899) rcx)
// Called from:
//      fn0000000180001A00
void fn0000000180001B00(struct Eq_899 * rcx)
{
	fn00000001800235AC(rcx->tFFFFFFF8.u0);
	fn00000001800235A4(rcx - 8);
}

// 0000000180001B50: Register word32 fn0000000180001B50(Register (ptr64 Eq_779) rcx, Register int32 edx)
// Called from:
//      fn0000000180007A40
//      fn000000018000A7F0
//      fn000000018000E400
//      fn0000000180012300
//      fn0000000180019F30
word32 fn0000000180001B50(struct Eq_779 * rcx, int32 edx)
{
	word64 rdx;
	edx = (word32) rdx;
	Eq_39 rsi_17;
	rsi_17.u0 = (int64) edx;
	int32 esi_105 = (word32) rsi_17;
	uint64 rax_108;
	if (edx > 0x00)
	{
		fn0000000180001C00(rcx);
		uint64 rax_46 = rsi_17 * 0x02F8;
		if (OVERFLOW<uint128>(rsi_17 *128 0x02F8))
			rax_46 = ~0x00;
		Eq_486 rax_52 = rax_46 + 0x08;
		if (rax_52 < 0x00)
			rax_52.u0 = ~0x00;
		Eq_137 rax_59 = fn0000000180023684(rax_52);
		struct Eq_782 * rbx_74;
		if (rax_59 != 0x00)
		{
			*rax_59.u1 = (word64) rsi_17;
			fn000000018002368C(rax_59.u2 + 8, 0x02F8, rsi_17);
			rbx_74 = (struct Eq_782 *) (rax_59.u2 + 8);
		}
		else
			rbx_74 = null;
		rcx->ptr0030 = rbx_74;
		if (rbx_74 == null)
			rax_108 = 0x00;
		else
		{
			rcx->dw0028 = esi_105;
			rax_108 = 0x01;
		}
	}
	else
		rax_108 = 0x00;
	return (word32) rax_108;
}

// 0000000180001C00: void fn0000000180001C00(Register (ptr64 Eq_779) rcx)
// Called from:
//      fn0000000180001B50
//      fn00000001800024D0
void fn0000000180001C00(struct Eq_779 * rcx)
{
	if (rcx->ptr0030 != null)
	{
		int32 edi_17 = 0x00;
		if (rcx->dw0028 > 0x00)
		{
			do
			{
				fn0000000180001CB0(rcx->ptr0030 + (int64) edi_17);
				++edi_17;
			} while (edi_17 < rcx->dw0028);
		}
		struct Eq_782 * rcx_44 = rcx->ptr0030;
		if (rcx_44 != null)
		{
			fn00000001800235AC(rcx_44->tFFFFFFF8.u0);
			fn00000001800235A4(rcx_44 - 8);
		}
		rcx->ptr0030 = null;
		rcx->dw0028 = 0x00;
	}
	else
		rcx->dw0028 = 0x00;
}

// 0000000180001CB0: void fn0000000180001CB0(Register (ptr64 Eq_1064) rcx)
// Called from:
//      fn0000000180001C00
void fn0000000180001CB0(struct Eq_1064 * rcx)
{
	struct Eq_1098 * rcx_14 = rcx->ptr0008;
	if (rcx_14 != null)
	{
		fn00000001800235AC(rcx_14->tFFFFFFF8.u0);
		fn00000001800235A4(rcx_14 - 8);
		rcx->ptr0008 = null;
	}
	rcx->dw0000 = 0x00;
	struct Eq_1108 * rcx_41 = rcx->ptr0018;
	if (rcx_41 != null)
	{
		fn00000001800235AC(rcx_41->tFFFFFFF8.u0);
		fn00000001800235A4(rcx_41 - 8);
		rcx->ptr0018 = null;
	}
	rcx->dw0010 = 0x00;
}

// 0000000180001D60: void fn0000000180001D60(Register (ptr64 Eq_1142) rcx)
// Called from:
//      fn0000000180001DD0
void fn0000000180001D60(struct Eq_1142 * rcx)
{
	struct Eq_1145 * rcx_12 = rcx->ptr0008;
	if (rcx_12 != null)
	{
		fn00000001800235AC(rcx_12->tFFFFFFF8.u0);
		fn00000001800235A4(rcx_12 - 8);
		rcx->ptr0008 = null;
	}
	rcx->dw0000 = 0x00;
}

// 0000000180001DD0: Register word32 fn0000000180001DD0(Register (ptr64 Eq_1142) rcx, Register Eq_1168 edx)
// Called from:
//      fn0000000180001E80
//      fn0000000180012ED0
//      fn0000000180013C40
//      fn000000018001B7D0
word32 fn0000000180001DD0(struct Eq_1142 * rcx, Eq_1168 edx)
{
	word64 rdx;
	edx = (word32) rdx;
	Eq_39 rsi_17;
	rsi_17.u0 = (int64) edx;
	int32 esi_105 = (word32) rsi_17;
	uint64 rax_108;
	if (edx > 0x00)
	{
		fn0000000180001D60(rcx);
		uint64 rax_46 = rsi_17 * 0x14;
		if (OVERFLOW<uint128>(rsi_17 *128 0x14))
			rax_46 = ~0x00;
		Eq_486 rax_52 = rax_46 + 0x08;
		if (rax_52 < 0x00)
			rax_52.u0 = ~0x00;
		Eq_137 rax_59 = fn0000000180023684(rax_52);
		struct Eq_1145 * rbx_74;
		if (rax_59 != 0x00)
		{
			*rax_59.u1 = (word64) rsi_17;
			fn000000018002368C(rax_59.u2 + 8, 0x14, rsi_17);
			rbx_74 = (struct Eq_1145 *) (rax_59.u2 + 8);
		}
		else
			rbx_74 = null;
		rcx->ptr0008 = rbx_74;
		if (rbx_74 == null)
			rax_108 = 0x00;
		else
		{
			rcx->dw0000 = esi_105;
			rax_108 = 0x01;
		}
	}
	else
		rax_108 = 0x00;
	return (word32) rax_108;
}

// 0000000180001E80: Register word32 fn0000000180001E80(Register (ptr64 Eq_1142) rcx, Register uint64 rdx)
// Called from:
//      fn0000000180006250
//      fn0000000180006420
//      fn0000000180007D40
//      fn000000018000B390
//      fn000000018000E860
//      fn000000018000F210
//      fn000000018001A460
word32 fn0000000180001E80(struct Eq_1142 * rcx, uint64 rdx)
{
	int32 edx = (word32) rdx;
	if (edx <= 0x00 || fn0000000180001DD0(rcx, (word32) rdx) == 0x00)
		return 0x00;
	int32 ecx_34 = 0x00;
	if (rcx->dw0000 > 0x00)
	{
		Eq_1245 rdx_38;
		rdx_38.u1 = 0x00;
		do
		{
			rdx_38 = (word64) rdx_38 + 20;
			*(rdx_38 - 20 + rcx->ptr0008) = (word64) 0x03;
			++ecx_34;
		} while (ecx_34 < rcx->dw0000);
	}
	return 0x01;
}

// 0000000180001ED0: Register word32 fn0000000180001ED0(Register (ptr64 Eq_1142) rcx, Register Eq_1265 edx)
// Called from:
//      fn0000000180005100
//      fn0000000180005C80
word32 fn0000000180001ED0(struct Eq_1142 * rcx, Eq_1265 edx)
{
	word64 rdx;
	edx = (word32) rdx;
	Eq_39 rsi_19;
	rsi_19.u0 = (int64) edx;
	word32 esi_139 = (word32) rsi_19;
	uint64 rax_142;
	if (edx > 0x00)
	{
		struct Eq_1278 * rcx_33 = rcx->ptr0018;
		if (rcx_33 != null)
		{
			fn00000001800235AC(rcx_33->tFFFFFFF8.u0);
			fn00000001800235A4(rcx_33 - 8);
			rcx->ptr0018 = null;
		}
		rcx->dw0010 = 0x00;
		uint64 rax_78 = rsi_19 * 0x4C;
		struct Eq_1278 * rbx_108 = null;
		if (OVERFLOW<uint128>(rsi_19 *128 0x4C))
			rax_78 = ~0x00;
		Eq_486 rax_84 = rax_78 + 0x08;
		if (rax_84 < 0x00)
			rax_84.u0 = ~0x00;
		Eq_137 rax_91 = fn0000000180023684(rax_84);
		if (rax_91 != 0x00)
		{
			*rax_91.u1 = (word64) rsi_19;
			fn000000018002368C(rax_91.u2 + 8, 0x4C, rsi_19);
			rbx_108 = (struct Eq_1278 *) (rax_91.u2 + 8);
		}
		rcx->ptr0018 = rbx_108;
		if (rbx_108 == null)
			rax_142 = 0x00;
		else
		{
			rcx->dw0010 = esi_139;
			rax_142 = 0x01;
		}
	}
	else
		rax_142 = 0x00;
	return (word32) rax_142;
}

// 0000000180001FD0: Register word32 fn0000000180001FD0(Register (ptr64 Eq_779) rcx, Register Eq_1342 edx)
// Called from:
//      fn0000000180006F90
//      fn0000000180009990
//      fn000000018000C1B0
//      fn000000018000FBF0
//      fn0000000180010580
//      fn00000001800156B0
word32 fn0000000180001FD0(struct Eq_779 * rcx, Eq_1342 edx)
{
	word64 rdx;
	edx = (word32) rdx;
	Eq_39 rsi_19;
	rsi_19.u0 = (int64) edx;
	word32 esi_139 = (word32) rsi_19;
	uint64 rax_142;
	if (edx > 0x00)
	{
		struct Eq_1355 * rcx_33 = rcx->ptr0010;
		if (rcx_33 != null)
		{
			fn00000001800235AC(rcx_33->tFFFFFFF8.u0);
			fn00000001800235A4(rcx_33 - 8);
			rcx->ptr0010 = null;
		}
		rcx->dw0008 = 0x00;
		uint64 rax_78 = rsi_19 * 0x0208;
		struct Eq_1355 * rbx_108 = null;
		if (OVERFLOW<uint128>(rsi_19 *128 0x0208))
			rax_78 = ~0x00;
		Eq_486 rax_84 = rax_78 + 0x08;
		if (rax_84 < 0x00)
			rax_84.u0 = ~0x00;
		Eq_137 rax_91 = fn0000000180023684(rax_84);
		if (rax_91 != 0x00)
		{
			*rax_91.u1 = (word64) rsi_19;
			fn000000018002368C(rax_91.u2 + 8, 0x0208, rsi_19);
			rbx_108 = (struct Eq_1355 *) (rax_91.u2 + 8);
		}
		rcx->ptr0010 = rbx_108;
		if (rbx_108 == null)
			rax_142 = 0x00;
		else
		{
			rcx->dw0008 = esi_139;
			rax_142 = 0x01;
		}
	}
	else
		rax_142 = 0x00;
	return (word32) rax_142;
}

// 00000001800020D0: Register word32 fn00000001800020D0(Register (ptr64 Eq_779) rcx, Register int32 edx)
// Called from:
//      fn00000001800077E0
//      fn000000018000A190
//      fn000000018000D570
//      fn0000000180012640
//      fn00000001800190D0
//      fn00000001800198F0
//      fn0000000180019C40
word32 fn00000001800020D0(struct Eq_779 * rcx, int32 edx)
{
	word64 rdx;
	edx = (word32) rdx;
	Eq_39 r14_23;
	r14_23.u0 = (int64) edx;
	int32 r14d_144 = (word32) r14_23;
	uint64 rax_172;
	if (edx > 0x00)
	{
		struct Eq_1432 * rcx_37 = rcx->ptr0020;
		if (rcx_37 != null)
		{
			fn00000001800235AC(rcx_37->tFFFFFFF8.u0);
			fn00000001800235A4(rcx_37 - 8);
			rcx->ptr0020 = null;
		}
		rcx->dw0018 = 0x00;
		uint64 rax_82 = r14_23 * 0x0138;
		int32 ebx_164 = 0x00;
		if (OVERFLOW<uint128>(r14_23 *128 0x0138))
			rax_82 = ~0x00;
		Eq_486 rax_88 = rax_82 + 0x08;
		if (rax_88 < 0x00)
			rax_88.u0 = ~0x00;
		Eq_137 rax_95 = fn0000000180023684(rax_88);
		struct Eq_1432 * rsi_115;
		if (rax_95 != 0x00)
		{
			*rax_95.u1 = (word64) r14_23;
			fn000000018002368C(rax_95.u2 + 8, 0x0138, r14_23);
			rsi_115 = (struct Eq_1432 *) (rax_95.u2 + 8);
		}
		else
			rsi_115 = null;
		rcx->ptr0020 = rsi_115;
		if (rsi_115 == null)
			rax_172 = 0x00;
		else
		{
			rcx->dw0018 = r14d_144;
			if (r14d_144 > 0x00)
			{
				word128 xmm1_151 = g_ow80028EB0;
				ptr64 rcx_153 = null;
				do
				{
					rcx->ptr0020[rcx_153] = (struct Eq_1432) xmm1_151;
					rcx->ptr0020[rcx_153 + 32] = (struct Eq_1432) 0x43000000;
					rcx->ptr0020[rcx_153 + 36] = (struct Eq_1432) 0x3F800000;
					++ebx_164;
					rcx_153 += 312;
				} while (ebx_164 < rcx->dw0018);
			}
			rax_172 = 0x01;
		}
	}
	else
		rax_172 = 0x00;
	return (word32) rax_172;
}

// 0000000180002220: void fn0000000180002220()
// Called from:
//      fn00000001800024D0
void fn0000000180002220()
{
	word64 r10_21 = g_qw80030740;
	if (r10_21 != 0x00)
	{
		int32 ebx_15 = 0x00;
		if (g_dw80030738 > 0x00)
		{
			do
			{
				fn00000001800022D0((int64) ebx_15 *s 0x0118 + r10_21);
				++ebx_15;
				r10_21 = g_qw80030740;
			} while (ebx_15 < g_dw80030738);
		}
		if (r10_21 != 0x00)
		{
			Eq_137 rbx_46 = r10_21 - 8;
			fn00000001800235AC(*rbx_46.u1);
			fn00000001800235A4(rbx_46);
		}
		g_qw80030740 = 0x00;
	}
	g_dw80030738 = 0x00;
}

// 00000001800022D0: void fn00000001800022D0(Register (ptr64 Eq_1549) rcx)
// Called from:
//      fn0000000180002220
void fn00000001800022D0(struct Eq_1549 * rcx)
{
	if (rcx->ptr0110 != null)
	{
		int32 edi_17 = 0x00;
		if (rcx->dw0108 > 0x00)
		{
			do
			{
				fn0000000180002390(rcx->ptr0110 + (int64) edi_17 *s 0x0138);
				++edi_17;
			} while (edi_17 < rcx->dw0108);
		}
		struct Eq_1574 * rcx_44 = rcx->ptr0110;
		if (rcx_44 != null)
		{
			fn00000001800235AC(rcx_44->tFFFFFFF8.u0);
			fn00000001800235A4(rcx_44 - 8);
		}
		rcx->ptr0110 = null;
		rcx->dw0108 = 0x00;
	}
	else
		rcx->dw0108 = 0x00;
}

// 0000000180002390: void fn0000000180002390(Register (ptr64 Eq_1596) rcx)
// Called from:
//      fn00000001800022D0
void fn0000000180002390(struct Eq_1596 * rcx)
{
	struct Eq_1630 * rcx_14 = rcx->ptr0110;
	if (rcx_14 != null)
	{
		fn00000001800235AC(rcx_14->tFFFFFFF8.u0);
		fn00000001800235A4(rcx_14 - 8);
		rcx->ptr0110 = null;
	}
	rcx->dw0108 = 0x00;
	fn0000000180002450(rcx);
	struct Eq_1644 * rcx_53 = rcx->ptr0120;
	if (rcx_53 != null)
	{
		fn00000001800235AC(rcx_53->tFFFFFFF8.u0);
		fn00000001800235A4(rcx_53 - 8);
		rcx->ptr0120 = null;
	}
	rcx->dw0118 = 0x00;
}

// 0000000180002450: void fn0000000180002450(Register (ptr64 Eq_1596) rcx)
// Called from:
//      fn0000000180002390
void fn0000000180002450(struct Eq_1596 * rcx)
{
	struct Eq_1680 * rcx_12 = rcx->ptr0130;
	if (rcx_12 != null)
	{
		fn00000001800235AC(rcx_12->tFFFFFFF8.u0);
		fn00000001800235A4(rcx_12 - 8);
		rcx->ptr0130 = null;
	}
	rcx->dw0128 = 0x00;
}

// 00000001800024D0: void fn00000001800024D0()
// Called from:
//      fn0000000180002980
//      fn0000000180024F30
void fn00000001800024D0()
{
	struct Eq_1702 * rcx_12 = g_ptr80030700;
	if (rcx_12 != null)
	{
		fn00000001800235AC(rcx_12->tFFFFFFF8.u0);
		fn00000001800235A4(rcx_12 - 8);
		g_ptr80030700 = null;
	}
	g_dw800306F8 = 0x00;
	struct Eq_1710 * rcx_36 = g_ptr80030710;
	if (rcx_36 != null)
	{
		fn00000001800235AC(rcx_36->tFFFFFFF8.u0);
		fn00000001800235A4(rcx_36 - 8);
		g_ptr80030710 = null;
	}
	g_dw80030708 = 0x00;
	fn0000000180001C00(&g_t800306F0);
	struct Eq_1732 * rcx_73 = g_ptr80030730;
	if (rcx_73 != null)
	{
		fn00000001800235AC(rcx_73->tFFFFFFF8.u0);
		fn00000001800235A4(rcx_73 - 8);
		g_ptr80030730 = null;
	}
	g_dw80030728 = 0x00;
	fn0000000180002220();
	g_t800306F0.u2 = 0x00;
	6442649420 = (word64 *) 0x00;
}

// 00000001800025F0: void PluginVersion()
void PluginVersion()
{
}

// 0000000180002600: void PluginProc(Register word32 ecx, Register Eq_1770 rdx)
void PluginProc(word32 ecx, Eq_1770 rdx)
{
	Eq_1773 fp;
	ui64 rax_15 = g_qw80030008 ^ fp - 0x0358;
	if (ecx == 65558 && rdx != 0x00)
	{
		rdx.u1->dw0018 = 0x01;
		rdx.u1->dw001C = 0x02;
		rdx.u1->ptr0028 = &g_t800028B0;
		rdx.u1->ow0008 = g_ow800254D0;
		struct Eq_1809 * rcx_48 = null;
		word16 ax_55;
		do
		{
			ax_55 = (word16) *(rcx_48 + "G\0a\0m\0e\0L\0o\0f\0t\0 \0B\0D\0A\0E\0 \0I\0m\0p\0o\0r\0t\0e\0r\0\r\0\n\0\0");
			*(fp - (word16 *) 808 + rcx_48) = (word64) ax_55;
			++rcx_48;
		} while (ax_55 != 0x00);
		char bLoc0120;
		wcstombs(&bLoc0120, "G\0a\0m\0e\0L\0o\0f\0t\0 \0B\0D\0A\0E\0 \0I\0m\0p\0o\0r\0t\0e\0r\0\r\0\n\0\0", 0x0104);
		if (rdx + 48 != fp - (word16 *) 808)
		{
			char * rcx_73 = &bLoc0120;
			int64 rax_76 = rdx + (char *) 48 - &bLoc0120;
			byte al_83;
			do
			{
				al_83 = *rcx_73;
				rcx_73[rax_76 + 520] = al_83;
				++rcx_73;
			} while (al_83 != 0x00);
			Eq_1858 rcx_104 = fp - (word16 *) 808;
			Eq_1863 rdx_95 = rdx + (char *) 48 - (fp - 808);
			Eq_1867 ax_101;
			do
			{
				ax_101.u0 = rcx_104.u1->w0000;
				*(rdx_95 + rcx_104) = (word64) ax_101;
				rcx_104.u0 = rcx_104 + 2;
			} while (ax_101 != 0x00);
		}
		Eq_1837 rcx_113;
		rcx_113.u0 = 0x00;
		Eq_1867 ax_120;
		do
		{
			ax_120 = *(rcx_113 + "3\0.\05\00\0.\07\07\0b\0\0");
			*(fp - 808 + rcx_113) = (word64) ax_120;
			rcx_113.u0 = rcx_113 + 2;
		} while (ax_120 != 0x00);
		wcstombs(&bLoc0120, "3\0.\05\00\0.\07\07\0b\0\0", 0x0104);
		if (rdx + 828 != fp - 808)
		{
			char * rcx_144 = &bLoc0120;
			word64 rax_147 = rdx + (char *) 828 - &bLoc0120;
			byte al_154;
			do
			{
				al_154 = *rcx_144;
				rcx_144[rax_147 + 520] = al_154;
				++rcx_144;
			} while (al_154 != 0x00);
			Eq_1921 rcx_163 = fp - 808;
			Eq_1926 rdx_166 = rdx + (char *) 828 - (fp - 808);
			Eq_1867 ax_172;
			do
			{
				ax_172.u0 = rcx_163.u1->w0000;
				*(rdx_166 + rcx_163) = (word64) ax_172;
				rcx_163.u0 = rcx_163 + 2;
			} while (ax_172 != 0x00);
		}
		Eq_1900 rcx_184;
		rcx_184.u0 = 0x00;
		Eq_1867 ax_191;
		do
		{
			ax_191 = *(rcx_184 + "G\0a\0m\0e\0L\0o\0f\0t\0 \0B\0D\0A\0E\0 \0f\0i\0l\0e\0s\0 \0(\0*\0.\0b\0d\0a\0e\0)\0\0");
			*(fp - 808 + rcx_184) = (word64) ax_191;
			rcx_184.u0 = rcx_184 + 2;
		} while (ax_191 != 0x00);
		wcstombs(&bLoc0120, "G\0a\0m\0e\0L\0o\0f\0t\0 \0B\0D\0A\0E\0 \0f\0i\0l\0e\0s\0 \0(\0*\0.\0b\0d\0a\0e\0)\0\0", 0x0104);
		if (rdx + 0x0648 != fp - 808)
		{
			char * rcx_215 = &bLoc0120;
			word64 rax_218 = rdx + (char *) 0x0648 - &bLoc0120;
			byte al_225;
			do
			{
				al_225 = *rcx_215;
				rcx_215[rax_218 + 520] = al_225;
				++rcx_215;
			} while (al_225 != 0x00);
			Eq_1984 rcx_234 = fp - 808;
			Eq_1989 rdx_237 = rdx + (char *) 0x0648 - (fp - 808);
			Eq_1867 ax_243;
			do
			{
				ax_243.u0 = rcx_234.u1->w0000;
				*(rdx_237 + rcx_234) = (word64) ax_243;
				rcx_234.u0 = rcx_234 + 2;
			} while (ax_243 != 0x00);
		}
		Eq_1963 r9_255;
		r9_255.u0 = 0x00;
		Eq_1867 ax_262;
		do
		{
			ax_262 = *(r9_255 + "b\0d\0a\0e\0\0");
			*(fp - 808 + r9_255) = (word64) ax_262;
			r9_255.u0 = r9_255 + 2;
		} while (ax_262 != 0x00);
		Eq_734 eax_277 = wcstombs(&bLoc0120, "b\0d\0a\0e\0\0", 0x0104);
		Eq_1867 r8_282;
		r8_282.u1 = rdx.u1->t0000.u1;
		r8_282.u1->ptr0018();
	}
	word64 qwLoc0360;
	fn0000000180023580(rax_15 ^ fp - 0x0358, qwLoc0360);
}

// 0000000180002920: void fn0000000180002920(Register (ptr64 word64) rcx, Register ptr64 rdx)
// Called from:
//      fn00000001800035C0
//      fn0000000180003F40
void fn0000000180002920(word64 * rcx, ptr64 rdx)
{
	ptr64 fp;
	(word32) _stdio_common_vswprintf(~0x00, rdx, *fn0000000180001020(), rcx, 0x00, fp + 0x18) >= 0x00;
}

// 0000000180002980: void fn0000000180002980(Register (ptr64 Eq_2047) rcx, Register Eq_2048 rdx)
void fn0000000180002980(struct Eq_2047 * rcx, Eq_2048 rdx)
{
	Eq_2084 rax_56;
	if (rcx != null && rdx != null)
	{
		Eq_1753 eax_23;
		eax_23.u0 = g_t800306F0.u0;
		if (eax_23 != 779 && (eax_23 != 811 && (eax_23 > 911 || !__bt<word32>(0x08000201, (word64) eax_23 - 884))))
			g_t80030034.u0 = 0x01;
		else
			g_t80030034.u0 = 0x00;
		struct Eq_2079 * rax_43 = rcx->ptr0000;
		rax_43->ptr0088();
		up64 rax_68 = SEQ(SLICE(rax_56, word32, 32), DialogBoxParamW(rdx, 101, rax_56, &g_t80003990, 0));
		if (rax_68 == 0x02 || rax_68 <= 0x00)
		{
			fn00000001800024D0();
			return;
		}
		if (fn0000000180002D40(rcx) != 0x00)
		{
			fn00000001800024D0();
			return;
		}
	}
	fn00000001800024D0();
}

// 0000000180002A70: void fn0000000180002A70(Register (ptr64 Eq_2047) rdx)
// Called from:
//      fn0000000180002D40
void fn0000000180002A70(struct Eq_2047 * rdx)
{
	Eq_2115 fp;
	ui64 rax_27 = g_qw80030008 ^ fp - 0x0AA8;
	if (rdx == null)
	{
l0000000180002AB3:
	}
	else
	{
		word64 qwLoc0248;
		memset(&qwLoc0248, 0, 0x0208);
		fn000000018001D1F0(&g_w8003074C, &qwLoc0248);
		SetCurrentDirectoryW(&qwLoc0248);
		if (g_dw80030708 > 0x00)
		{
			Eq_2151 r14_128;
			r14_128.u0 = 0x28;
			uint64 rsi_338 = 0x00;
			do
			{
				word32 esi_68 = (word32) rsi_338;
				char * rbx_74 = (char *) (&(g_ptr80030710->a0028 + 3)->t0000.u0 + (int64) esi_68 *64 78);
				wchar_t wLoc0768;
				if (rbx_74 != null)
				{
					char * rcx_77 = rbx_74;
					Eq_2175 r8_80 = fp - 0x0560 - rbx_74;
					byte al_86;
					do
					{
						al_86 = *rcx_77;
						*(r8_80 + rcx_77) = (word64) al_86;
						++rcx_77;
					} while (al_86 != 0x00);
					mbstowcs(&wLoc0768, rbx_74, (word32) mbstowcs(null, rbx_74, 0x00) + 1);
				}
				struct Eq_2079 * rax_116 = rdx->ptr0000;
				rax_116->ptr04B0();
				wLoc0768 = 0x00;
				struct Eq_2311 ** rax_137;
				if (rax_137 == null)
					goto l0000000180002AB3;
				int64 rdx_153 = (int64) *(r14_128 + g_ptr80030710);
				int32 edx_159 = (word32) rdx_153;
				struct Eq_1702 * r8_154 = g_ptr80030700;
				if (r8_154 != null && (edx_159 >= 0x00 && edx_159 < g_dw800306F8))
				{
					word16 rbx_167[] = (word16 (*)[]) (r8_154 + rdx_153 *s 0x0208);
					if (rbx_167[0] != 0x00)
					{
						word64 qwLoc0458;
						memset(&qwLoc0458, 0, 0x0208);
						Eq_2249 rcx_180;
						rcx_180.u1 = 0x00;
						word16 ax_186;
						do
						{
							ax_186 = (word16) *(&qwLoc0248 + rcx_180);
							*(&qwLoc0458 + rcx_180) = (word64) ax_186;
							rcx_180 = (word64) rcx_180 + 2;
						} while (ax_186 != 0x00);
						struct Eq_2263 * rcx_194 = fp - 1114;
						do
							++rcx_194;
						while (rcx_194->t0000 != 0x00);
						uint64 rdx_202 = 0x00;
						word16 ax_212;
						do
						{
							ax_212 = rbx_167[rdx_202];
							rcx_194[rdx_202] = (struct Eq_2263) ax_212;
							++rdx_202;
						} while (ax_212 != 0x00);
						Eq_2285 rax_223;
						rax_223.u1 = 0x00;
						word16 cx_229;
						do
						{
							cx_229 = (word16) *(&qwLoc0458 + rax_223);
							*(fp - (word16 *) 0x0A78 + rax_223) = (word64) cx_229;
							rax_223 = (word64) rax_223 + 2;
						} while (cx_229 != 0x00);
						char bLoc0870;
						wcstombs(&bLoc0870, &qwLoc0458, 0x0104);
						struct Eq_2311 * rax_246 = (struct Eq_2311 *) *rax_137;
						rax_246->ptr0030();
						Eq_2316 rax_270;
						word16 wLoc0A78;
						if (rax_270 != 0x00 && wLoc0A78 != 0x00)
						{
							if (rax_270 + 48 != fp - (word16 *) 0x0A78)
							{
								char * rdx_288 = &bLoc0870;
								int64 rcx_291 = rax_270 + (char *) 48 - &bLoc0870;
								byte al_297;
								do
								{
									al_297 = *rdx_288;
									rdx_288[rcx_291 + 520] = al_297;
									++rdx_288;
								} while (al_297 != 0x00);
								Eq_2354 rcx_306 = fp - (word16 *) 0x0A78;
								Eq_2359 r8_309 = rax_270 + (char *) 48 - (fp - 0x0A78);
								word16 ax_315;
								do
								{
									ax_315 = rcx_306.u1->w0000;
									*(r8_309 + rcx_306) = (word64) ax_315;
									rcx_306.u0 = rcx_306 + 2;
								} while (ax_315 != 0x00);
							}
							rax_270.u1->dw0008 |= 0x01;
						}
					}
				}
				rsi_338 = (uint64) (esi_68 + 0x01);
				r14_128 = (word64) r14_128 + 312;
			} while ((word32) rsi_338 < g_dw80030708);
		}
	}
	word64 qwLoc0AB0;
	fn0000000180023580(rax_27 ^ fp - 0x0AA8, qwLoc0AB0);
}

// 0000000180002D40: Register word32 fn0000000180002D40(Register (ptr64 Eq_2047) rdx)
// Called from:
//      fn0000000180002980
word32 fn0000000180002D40(struct Eq_2047 * rdx)
{
	Eq_2383 fp;
	ui64 rax_39 = g_qw80030008 ^ fp - 1272;
	word64 qwLoc0500;
	if (rdx != null)
	{
		fn0000000180002A70(rdx);
		Eq_2394 eax_164;
		eax_164.u0 = g_t80030718.u0;
		if (eax_164 > 0x00)
		{
			struct Eq_2417 * rcx_71 = g_ptr80030720;
			uint64 r8_73 = (uint64) eax_164;
			uint64 rdx_2295 = 0x00;
			int32 edx_91;
			do
			{
				word32 edx_79 = (word32) rdx_2295;
				if (rcx_71->dw0000 != 0x00)
					rdx_2295 = (uint64) (edx_79 + rcx_71->dw0010);
				edx_91 = (word32) rdx_2295;
				++rcx_71;
				--r8_73;
			} while (r8_73 != 0x00);
			if (edx_91 > 0x00)
			{
				struct Eq_2079 * rax_100 = rdx->ptr0000;
				rax_100->ptr0320();
				word64 rax_133;
				if ((word32) rax_133 == 0x00)
					goto l0000000180002D9F;
				eax_164.u0 = g_t80030718.u0;
			}
		}
		uint64 rdx_1404 = 0x00;
		word32 dwLoc04D8_1455 = 0x00;
		Eq_2394 r8d_1407;
		r8d_1407.u0 = 0x00;
		Eq_2394 dwLoc04D4_1456;
		dwLoc04D4_1456.u0 = 0x00;
		union Eq_2412 * r9_2297 = null;
		if (eax_164 > 0x00)
		{
			struct Eq_2463 * rdi_181 = null;
			r9_2297 = null;
			do
			{
				word32 r9d_187 = (word32) r9_2297;
				struct Eq_2417 * rsi_183 = g_ptr80030720;
				if (*(rdi_181 + rsi_183) != 0x00)
				{
					uint64 r13_189 = (uint64) r9d_187;
					if (*(rdi_181->a0010 + rsi_183) > 0x00)
					{
						union Eq_2412 * rbx_194 = r9_2297;
						do
						{
							int64 rax_201 = *(rdi_181->a0018 + rsi_183);
							struct Eq_2715 * rcx_203 = rdx->ptr1EC8;
							rcx_203->r000C = *((char *) rbx_194 + rax_201);
							rcx_203->dw0014 = (word32) *((char *) &(&rbx_194->u0.a0008)[0] + rax_201);
							Eq_2508 r14_212;
							r14_212.u0 = (int64) ((char *) rbx_194 + 40)[*(rdi_181->a0018 + rsi_183)];
							word32 r13d_363 = (word32) r13_189;
							int32 r14d_213 = (word32) r14_212;
							if (r14d_213 > 0x00)
							{
								struct Eq_2079 * rax_219 = rdx->ptr0000;
								rax_219->ptr0498();
								struct Eq_2505 * rax_233;
								if (rax_233 != null)
								{
									Eq_2508 r8_247;
									r8_247.u1 = 0x00;
									if (r14_212 >= 0x04)
									{
										do
										{
											rax_233->ptr0050->a0000[r8_247].dw0004 = *((word32) (&rbx_194->u1.a0000 + r8_247 *64 2 + 11) + *(rdi_181->a0018 + rsi_183));
											rax_233->ptr0050->a0000[r8_247].dw0000 = *((word32) (&rbx_194->u1.a0000 + r8_247 *64 2 + 0x0C) + *(rdi_181->a0018 + rsi_183));
											rax_233->ptr0050->a0008[r8_247].dw0004 = *((word32) (&rbx_194->u1.a0000 + r8_247 *64 2 + 0x0D) + *(rdi_181->a0018 + rsi_183));
											rax_233->ptr0050->a0008[r8_247].dw0000 = *((word32) (&rbx_194->u1.a0000 + r8_247 *64 2 + 0x0E) + *(rdi_181->a0018 + rsi_183));
											rax_233->ptr0050->a0010[r8_247].dw0004 = *((word32) (&rbx_194->u1.a0000 + r8_247 *64 2 + 0x0F) + *(rdi_181->a0018 + rsi_183));
											rax_233->ptr0050->a0010[r8_247].dw0000 = *((word32) (&rbx_194->u1.a0000 + r8_247 *64 2 + 16) + *(rdi_181->a0018 + rsi_183));
											rax_233->ptr0050->a0018[r8_247].dw0004 = *((word32) (&rbx_194->u1.a0000 + r8_247 *64 2 + 0x0011) + *(rdi_181->a0018 + rsi_183));
											rax_233->ptr0050->a0018[r8_247].dw0000 = *((word32) (&rbx_194->u1.a0000 + r8_247 *64 2 + 18) + *(rdi_181->a0018 + rsi_183));
											r8_247 = (word64) r8_247 + 4;
										} while (r8_247 < r14_212 - 3);
									}
									while (r8_247 < r14_212)
									{
										rax_233->ptr0050->a0000[r8_247].dw0004 = *((word32) (&rbx_194->u1.a0000 + r8_247 *64 2 + 11) + *(rdi_181->a0018 + rsi_183));
										rax_233->ptr0050->a0000[r8_247].dw0000 = *((word32) (&rbx_194->u1.a0000 + r8_247 *64 2 + 0x0C) + *(rdi_181->a0018 + rsi_183));
										r8_247 = (word64) r8_247 + 1;
									}
								}
							}
							word32 v38_352 = dwLoc04D8_1455 + 0x01;
							r13_189 = (uint64) (r13d_363 + 0x01);
							dwLoc04D8_1455 = v38_352;
							rbx_194 = (union Eq_2412 *) ((char *) rbx_194 + 76);
							rdx_1404 = (uint64) v38_352;
						} while ((word32) r13_189 < *(rdi_181->a0010 + rsi_183));
						eax_164.u0 = g_t80030718.u0;
						r8d_1407 = dwLoc04D4_1456;
						r9_2297 = null;
					}
				}
				r8d_1407 = (word32) r8d_1407.u0 + 1;
				dwLoc04D4_1456 = r8d_1407;
				++rdi_181;
			} while (r8d_1407 < eax_164);
		}
		uint64 rdi_2303 = (uint64) (word32) r9_2297;
		union Eq_2412 * r9_2300 = r9_2297;
		wchar_t wLoc04A8;
		if (eax_164 > 0x00)
		{
			do
			{
				word32 edi_417 = (word32) rdi_2303;
				char * rbx_422 = (char *) &g_ptr80030720->dw0000 + ((int64) edi_417 *s 0x02F8 + 0x01EC);
				if (rbx_422 != null)
				{
					char * rcx_425 = rbx_422;
					Eq_2787 r8_428 = fp - 672 - rbx_422;
					byte al_434;
					do
					{
						al_434 = *rcx_425;
						*(rcx_425 + r8_428) = (word64) al_434;
						++rcx_425;
					} while (al_434 != 0x00);
					mbstowcs(&wLoc04A8, rbx_422, (word32) mbstowcs(null, rbx_422, 0x00) + 1);
				}
				struct Eq_2079 * rax_465 = rdx->ptr0000;
				rax_465->ptr04B8();
				word64 rax_512;
				if (rax_512 == 0x00)
					goto l0000000180002D9F;
				rdi_2303 = (uint64) (edi_417 + 0x01);
				eax_164.u0 = g_t80030718.u0;
			} while ((word32) rdi_2303 < eax_164);
			r9_2300 = null;
		}
		Eq_2394 r9d_539 = (word32) r9_2300;
		Eq_2394 dwLoc04D8_1485 = r9d_539;
		uint64 r13_544 = (uint64) r9d_539;
		Eq_2394 dwLoc04BC_1486 = r9d_539;
		uint64 r14_547 = (uint64) r9d_539;
		Eq_2394 dwLoc04B8_1487 = r9d_539;
		if (eax_164 > 0x00)
		{
			union Eq_2412 * rbx_562 = r9_2300;
			Eq_2394 r14d_851;
			do
			{
				Eq_2394 r14d_845 = (word32) r14_547;
				word32 r13d_836 = (word32) r13_544;
				struct Eq_2417 * rdi_564 = g_ptr80030720;
				if (*(rbx_562 + rdi_564) > 0x00)
				{
					struct Eq_2079 * rax_569 = rdx->ptr0000;
					rax_569->ptr04E0();
					struct Eq_2856 * rax_583;
					if (rax_583 == null)
						goto l0000000180002D9F;
					struct Eq_2861 * r8_596 = rax_583->ptr0000;
					r8_596->ptr0030();
					word64 rax_600;
					if ((word32) rax_600 == 0x00)
						goto l0000000180002D9F;
					rdx_1404 = 0x00;
					int32 dwLoc04C0_1490 = 0x00;
					if (*(rbx_562 + rdi_564) > 0x00)
					{
						uint64 r12_623 = 0x00;
						word32 * rcx_625 = null;
						word32 * qwLoc04D0_1491 = null;
						Eq_2890 r14_628;
						r14_628.u1 = 0x00;
						int32 edx_799;
						do
						{
							word32 ecx_636 = (word32) *((char *) rcx_625 + *(&(rbx_562->u0).a0008 + rdi_564));
							struct Eq_2861 * rax_640 = rax_583->ptr0000;
							rax_640->ptr0040();
							int32 r13d_673 = (word32) r13_544;
							word64 rax_655;
							if (rax_655 == 0x00)
								goto l0000000180002D9F;
							int32 edx_681 = (int32) *(*(&rbx_562->u0.a0008 + rdi_564) + 16 + qwLoc04D0_1491);
							if (rdx->qw1F08 != 0x00 && r13d_673 >= rdx->dw1F00 || rdx->qw1EB8 != 0x00 && edx_681 >= rdx->dw1EB0)
								goto l0000000180002D9F;
							*(rax_583->ptr0018->a0014 + r14_628) = (word64) r13d_673;
							*((word64) r14_628 + (rax_583->ptr0018 + (struct Eq_2926 *) 16)) = edx_681;
							Eq_2930 r13_700;
							r13_700.u1 = 0x00;
							if ((int64) ecx_636 > 0x00)
							{
								Eq_2956 r11_710;
								r11_710.u1 = 0x00;
								word32 * r10_713 = qwLoc04D0_1491;
								do
								{
									int32 edx_725 = dwLoc04D8_1485 + *((char *) r10_713 + (*(&(rbx_562->u0).a0008 + rdi_564) + 4));
									if (edx_725 < 0x00 || edx_725 >= rdx->dw1EC0)
										goto l0000000180002D9F;
									*((char *) r10_713 + ((word64) (*((word64) r14_628 + (rax_583->ptr0018 + (struct Eq_2967 *) 48))) + r12_623)) = (word32 *) edx_725;
									int64 rcx_739 = (int64) *((char *) r10_713 + (*(&(rbx_562->u0).a0008 + rdi_564) + 4));
									int32 ecx_740 = (word32) rcx_739;
									if (ecx_740 < 0x00 || ecx_740 >= *(&(rbx_562->u1).a0010 + rdi_564))
										goto l0000000180002D9F;
									*((word64) r11_710 + ((word64) (*((word64) (*((word64) r14_628 + (rax_583->ptr0018 + (struct Eq_3006 *) 80))) + 24)) + 4)) = *((word64) ((word64) (rcx_739 *s 0x4C) + 24) + *(&(rbx_562->u1).a0018 + rdi_564));
									*((word64) r11_710 + ((word64) (*((word64) (*((word64) r14_628 + (rax_583->ptr0018 + (struct Eq_3031 *) 80))) + 24)) + 8)) = 1.0F - *((word64) ((word64) (rcx_739 *s 0x4C) + 28) + *(&(rbx_562->u1).a0018 + rdi_564));
									*((word64) r11_710 + ((word64) (*((word64) (*((word64) r14_628 + (rax_583->ptr0018 + (struct Eq_3054 *) 80))) + 56)) + 4)) = *((word64) ((word64) (rcx_739 *s 0x4C) + 32) + *(&(rbx_562->u1).a0018 + rdi_564));
									*((word64) r11_710 + ((word64) (*((word64) (*((word64) r14_628 + (rax_583->ptr0018 + (struct Eq_3079 *) 80))) + 56)) + 8)) = 1.0F - *((word64) ((word64) (rcx_739 *s 0x4C) + 36) + *(&(rbx_562->u1).a0018 + rdi_564));
									r13_700 = (word64) r13_700 + 1;
									r10_713 += (word32 *) 0x04;
									r11_710 = (word64) r11_710 + 16;
								} while (r13_700 < (int64) ecx_636);
							}
							rdx_1404 = (uint64) (dwLoc04C0_1490 + 0x01);
							edx_799 = (word32) rdx_1404;
							rcx_625 = qwLoc04D0_1491 + (word32 *) 0x14;
							r13_544 = (uint64) dwLoc04BC_1486;
							dwLoc04C0_1490 = edx_799;
							r14_628 = (word64) r14_628 + 88;
							qwLoc04D0_1491 = rcx_625;
							r12_623 -= 0x14;
							r13d_836 = (word32) r13_544;
						} while (edx_799 < *(rbx_562 + rdi_564));
						r14d_845 = dwLoc04B8_1487;
					}
					dwLoc04D8_1485 = (word32) dwLoc04D8_1485 + *(&(rbx_562->u1).a0010 + rdi_564);
					eax_164.u0 = g_t80030718.u0;
				}
				r14_547 = (uint64) ((word32) r14d_845 + 1);
				r13_544 = (uint64) (r13d_836 + 0x01);
				r14d_851 = (word32) r14_547;
				dwLoc04BC_1486 = (word32) r13_544;
				dwLoc04B8_1487 = r14d_851;
				rbx_562 = (union Eq_2412 *) ((char *) rbx_562 + 760);
			} while (r14d_851 < eax_164);
		}
		struct Eq_2079 * rax_875 = rdx->ptr0000;
		rax_875->ptr03C8();
		if (g_dw80030728 > 0x00)
		{
			struct Eq_3112 * rdi_1009 = null;
			uint64 rsi_1284 = 0x00;
			do
			{
				word64 qwLoc0198;
				memset(&qwLoc0198, 0, 0x0104);
				word32 esi_1019 = (word32) rsi_1284;
				struct Eq_1732 * r9_1023 = g_ptr80030730;
				byte * rdx_1024 = (byte *) (r9_1023 + (int64) esi_1019);
				byte * rcx_1025 = rdx_1024 + 260;
				int64 r8_1027 = &qwLoc0198 - (rdx_1024 + 260);
				byte al_1033;
				do
				{
					al_1033 = *rcx_1025;
					rcx_1025[r8_1027] = al_1033;
					++rcx_1025;
				} while (al_1033 != 0x00);
				if (*((char *) &r9_1023->a0000[0] + (rdi_1009 + (union Eq_254 *) 260)) == al_1033)
				{
					Eq_3139 rcx_1049 = &qwLoc0198 - rdx_1024;
					byte al_1055;
					do
					{
						al_1055 = *rdx_1024;
						*(rcx_1049 + rdx_1024) = (word64) al_1055;
						++rdx_1024;
					} while (al_1055 != 0x00);
				}
				Eq_3134 rcx_1067;
				rcx_1067.u1 = 0x00;
				byte al_1073;
				do
				{
					al_1073 = (byte) *(&qwLoc0198 + rcx_1067);
					*(fp - 672 + rcx_1067) = (word64) al_1073;
					rcx_1067 = (word64) rcx_1067 + 1;
				} while (al_1073 != 0x00);
				mbstowcs(&wLoc04A8, &qwLoc0198, (word32) mbstowcs(null, &qwLoc0198, 0x00) + 1);
				struct Eq_2079 * rax_1102 = rdx->ptr0000;
				rax_1102->ptr04C0();
				wLoc04A8 = 0x00;
				struct Eq_3194 * rax_1162;
				if (rax_1162 == null)
					goto l0000000180002D9F;
				rax_1162->t0318.u1 = (real32) *((char *) &g_ptr80030730->a0000[0].u1 + (rdi_1009 + (union Eq_254 *) 1300));
				struct Eq_1732 * rcx_1183 = g_ptr80030730;
				rax_1162->t0340.u2 = *((char *) &rcx_1183->a0000[0].u2 + (rdi_1009 + (struct Eq_75456 *) 1312));
				rax_1162->t0348.u1 = (real32) *((char *) &rcx_1183->a0000[0].u1 + (rdi_1009 + (struct Eq_75459 *) 0x0528));
				rax_1162->t0398.u3 = (word128) *((char *) &g_ptr80030730->a0000[0].u3 + (rdi_1009 + (struct Eq_75462 *) 1336));
				real32 v66_1217 = rax_1162->t0398.u1 * (rax_1162->t0398).u1 + rax_1162->r039C * rax_1162->r039C + rax_1162->r03A0 * rax_1162->r03A0 + rax_1162->r03A4 * rax_1162->r03A4;
				real32 xmm3_1219[4] = SEQ(0, v66_1217);
				if (PARITY_EVEN(v66_1217 - 0.0F) || v66_1217 != 0.0F)
				{
					Eq_3269 xmm0_1227 = __cvtps2pd<real32[4],real64[4]>(xmm3_1219);
					sqrt((real64) xmm0_1227);
					xmm3_1219 = SEQ(0, (real32) sqrt((real64) xmm0_1227));
				}
				Eq_254 xmm0_1241;
				if ((real32) xmm3_1219 > g_t80028E4C.u0)
				{
					real32 v74_1248 = 1.0F / (real32) xmm3_1219;
					xmm0_1241 = SEQ(rax_1162->r03A4 * v74_1248, rax_1162->r03A0 * v74_1248, v74_1248 * rax_1162->r039C, v74_1248 * (rax_1162->t0398).u1);
				}
				else
					xmm0_1241.u3 = g_t80028EA0.u3;
				rax_1162->t0398.u3 = (word128) xmm0_1241;
				rsi_1284 = (uint64) (esi_1019 + 0x01);
				rdi_1009 += (struct Eq_75465 *) 0x05C8;
			} while ((word32) rsi_1284 < g_dw80030728);
		}
		if (g_t80030034.u0 == 0x01)
		{
			struct Eq_2079 * r8_1299 = rdx->ptr0000;
			r8_1299->ptr0148();
		}
		return (word32) fn0000000180023580(rax_39 ^ fp - 1272, qwLoc0500);
	}
	else
	{
l0000000180002D9F:
		return (word32) fn0000000180023580(rax_39 ^ fp - 1272, qwLoc0500);
	}
}

// 00000001800035C0: Register word64 fn00000001800035C0(Register Eq_2084 rcx)
// Called from:
//      fn0000000180003990
word64 fn00000001800035C0(Eq_2084 rcx)
{
	ptr64 fp;
	ui64 rax_8 = g_qw80030008 ^ fp - 0x0278;
	if (rcx != null)
	{
		word32 r11d_174 = 0x00;
		Eq_2394 ebx_37;
		ebx_37.u0 = g_t80030718.u0;
		uint64 r11_216 = 0x00;
		if (ebx_37 > 0x00)
		{
			r11_216 = 0x00;
			if (ebx_37 >= 0x08)
			{
				Eq_3400 ecx_58 = ebx_37 & 0x80000007;
				if ((ebx_37 & 0x80000007) < 0x00)
					ecx_58 = ((ebx_37 & 0x80000007) - 0x01 | ~0x07) + 0x01;
				Eq_3406 rdx_83;
				rdx_83.u0 = (int64) (ebx_37 - ecx_58);
				Eq_3406 rcx_100;
				rcx_100.u1 = 0x00;
				do
				{
					r11_216 = (uint64) (r11d_174 + 0x08);
					r11d_174 = (word32) r11_216;
					rcx_100 = (word64) rcx_100 + 8;
				} while (rcx_100 < rdx_83);
			}
		}
		Eq_2394 r11d_173 = (word32) r11_216;
		if (r11d_173 < ebx_37)
		{
			if (ebx_37 - r11d_173 >= 0x02)
			{
				uint64 rcx_208 = (uint64) ((ebx_37 - r11d_173 - 0x02 >> 0x01) + 0x01);
				r11_216 = (uint64) (r11d_173 + (word32) rcx_208 * 0x02);
				do
					--rcx_208;
				while (rcx_208 != 0x00);
			}
		}
		word64 qwLoc0248;
		memset(&qwLoc0248, 0, 0x0200);
		fn0000000180002920(&qwLoc0248, &g_t8002872C);
		SetDlgItemTextW(rcx, 1002, &qwLoc0248);
		fn0000000180002920(&qwLoc0248, &g_t8002872C);
		SetDlgItemTextW(rcx, 1008, &qwLoc0248);
		fn0000000180002920(&qwLoc0248, &g_t8002872C);
		SetDlgItemTextW(rcx, 1003, &qwLoc0248);
		fn0000000180002920(&qwLoc0248, &g_t8002872C);
		SetDlgItemTextW(rcx, 1004, &qwLoc0248);
		fn0000000180002920(&qwLoc0248, &g_t8002872C);
		SetDlgItemTextW(rcx, 1005, &qwLoc0248);
		SendDlgItemMessageW(rcx, 2003, 0xF1, g_t80030034.u0, 0);
	}
	word64 qwLoc0280;
	return fn0000000180023580(rax_8 ^ fp - 0x0278, qwLoc0280);
}

// 0000000180003990: void fn0000000180003990(Register Eq_2084 rcx, Register word32 edx, Register word16 r8w)
void fn0000000180003990(Eq_2084 rcx, word32 edx, word16 r8w)
{
	word64 r8;
	r8w = (word16) r8;
	if (edx == 0x0110)
		fn000000018001D360(rcx, SEQ(SLICE(fn00000001800035C0(rcx), word32, 32), GetDesktopWindow()));
	else
	{
		if (edx != 0x0111)
			return;
		word32 edx_64 = (word32) r8w - 0x01;
		if (edx_64 == 0x00)
		{
			g_t80030034.u0 = (LRESULT) SendDlgItemMessageW(rcx, 2003, 242, 0x00, 0);
			EndDialog(rcx, 1);
		}
		else
		{
			if (edx_64 != 0x01)
				return;
			EndDialog(rcx, 0);
		}
	}
}

// 0000000180003A30: Register ptr64 fn0000000180003A30()
// Called from:
//      fn0000000180003A40
//      fn00000001800245D8
ptr64 fn0000000180003A30()
{
	return &g_t80030958;
}

// 0000000180003A40: Register word32 fn0000000180003A40(Register (ptr64 Eq_3584) rcx, Register ptr64 rdx)
// Called from:
//      fn0000000180003F40
word32 fn0000000180003A40(struct Eq_3584 * rcx, ptr64 rdx)
{
	ptr64 fp;
	return (word32) _stdio_common_vsscanf(~0x00, rdx, *fn0000000180003A30(), rcx, 0x00, fp + 0x18);
}

// 0000000180003A90: Register ptr64 fn0000000180003A90(Register word64 rcx, Register ptr64 rdx)
// Called from:
//      fn0000000180003C80
ptr64 fn0000000180003A90(word64 rcx, ptr64 rdx)
{
	word16 * rax_30 = rcx + 0x0C;
	if (rdx != rcx + 0x0C)
	{
		byte * r8_13 = rcx + 532;
		int64 rdx_11 = rdx + 0x0208 - (rcx + 532);
		byte cl_17;
		do
		{
			cl_17 = *r8_13;
			r8_13[rdx_11] = cl_17;
			++r8_13;
		} while (cl_17 != 0x00);
		int64 rdx_28 = rdx - (rcx + 0x0C);
		word16 cx_34;
		do
		{
			cx_34 = *rax_30;
			*((char *) rax_30 + rdx_28) = (word16 *) cx_34;
			++rax_30;
		} while (cx_34 != 0x00);
	}
	return rdx;
}

// 0000000180003AF0: void fn0000000180003AF0(Register (ptr64 Eq_524) rcx)
void fn0000000180003AF0(struct Eq_524 * rcx)
{
	fn0000000180001690(rcx);
	Eq_137 rcx_22;
	rcx_22.u0 = rcx[1];
	if (rcx_22 != 0x00)
	{
		fn000000018002367C(rcx_22);
		rcx[1] = (struct Eq_524) 0x00;
	}
	rcx->dw0018 = 0x00;
	Eq_137 rcx_34;
	rcx_34.u0 = rcx[1];
	if (rcx_34 != 0x00)
	{
		fn000000018002367C(rcx_34);
		rcx[1] = (struct Eq_524) 0x00;
	}
	rcx->dw0018 = 0x00;
}

// 0000000180003B40: Register word32 fn0000000180003B40(Register (ptr64 Eq_3676) rcx, Register Eq_137 rdx, Register Eq_483 r8d)
// Called from:
//      fn0000000180003F40
//      fn0000000180005C80
//      fn0000000180006420
word32 fn0000000180003B40(union Eq_3676 * rcx, Eq_137 rdx, Eq_483 r8d)
{
	word64 r8;
	r8d = (word32) r8;
	uint64 rdi_15 = (uint64) r8d;
	Eq_137 r10_10;
	r10_10.u0 = rcx->u0.t0000.u0;
	word32 edi_36 = (word32) rdi_15;
	if (r10_10 == 0x00 || rdx == 0x00)
		return 0x00;
	uint64 rcx_26 = (uint64) rcx->u0.t0008.u0;
	if ((word32) (rcx_26 + rdi_15) > ((rcx->u0).t000C).u0)
		return 0x00;
	memcpy(rdx, r10_10.u0 + rcx_26, (size_t) rdi_15);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + edi_36);
	return 0x01;
}

// 0000000180003BA0: void fn0000000180003BA0(Register (ptr64 Eq_3676) rcx)
// Called from:
//      fn0000000180003E10
//      fn00000001800067D0
void fn0000000180003BA0(union Eq_3676 * rcx)
{
	Eq_137 rcx_9;
	rcx_9.u0 = rcx->u0.t0000.u0;
	if (rcx_9 == 0x00)
		rcx->u0.t0008.u2 = 0x00;
	else
	{
		fn000000018002367C(rcx_9);
		rcx->u0.t0000.u0 = 0x00;
		rcx->u0.t0008.u2 = 0x00;
	}
}

// 0000000180003BE0: void fn0000000180003BE0(Register (ptr64 Eq_3742) rcx)
void fn0000000180003BE0(struct Eq_3742 * rcx)
{
	rcx->qw0018 = 0x00;
	Eq_137 rcx_14;
	rcx_14.u0 = rcx->t0000.u0;
	if (rcx_14 != 0x00)
	{
		fn000000018002367C(rcx_14);
		rcx->t0000.u0 = 0x00;
	}
	Eq_137 rcx_22;
	rcx_22.u0 = rcx->t0000.u0;
	rcx->qw0008 = 0x00;
	if (rcx_22 != 0x00)
	{
		fn000000018002367C(rcx_22);
		rcx->t0000.u0 = 0x00;
	}
	rcx->qw0008 = 0x00;
}

// 0000000180003C30: void fn0000000180003C30(Register (ptr64 Eq_3779) rcx)
void fn0000000180003C30(struct Eq_3779 * rcx)
{
	Eq_137 rcx_13;
	rcx_13.u0 = rcx->t0000.u0;
	if (rcx_13 != 0x00)
	{
		fn000000018002367C(rcx_13);
		rcx->t0000.u0 = 0x00;
	}
	Eq_137 rcx_21;
	rcx_21.u0 = rcx->t0000.u0;
	rcx->qw0008 = 0x00;
	if (rcx_21 != 0x00)
	{
		fn000000018002367C(rcx_21);
		rcx->t0000.u0 = 0x00;
	}
	rcx->qw0008 = 0x00;
}

// 0000000180003C80: void fn0000000180003C80(Register word64 rcx)
void fn0000000180003C80(word64 rcx)
{
	ptr64 fp;
	ui64 rax_17 = g_qw80030008 ^ fp - 0x03A8;
	Eq_1756 rax_26 = fn0000000180003A90(rcx, fp - 808);
	Eq_3825 rdx_36 = &g_w8003074C - rax_26;
	word16 cx_42;
	do
	{
		cx_42 = *rax_26.u1;
		*(rdx_36 + rax_26) = (word64) cx_42;
		rax_26.u0 = (word64) rax_26 + 2;
	} while (cx_42 != 0x00);
	Eq_3838 tLoc0370;
	tLoc0370.qw0000 = 0x00;
	tLoc0370.qw0008 = 0x00;
	tLoc0370.dw0010 = 0x00;
	Eq_137 rsi_219;
	rsi_219.u0 = 0x00;
	Eq_1756 rax_67 = fn0000000180003A90(rcx, fp - 808);
	word32 eax_95;
	if (rax_67 == 0x00)
		eax_95 = 0x00;
	else
	{
		eax_95 = fn00000001800067D0(&tLoc0370, rax_67);
		rsi_219.u0 = tLoc0370.t0000.u0;
	}
	if (eax_95 != 0x00)
	{
		Eq_1756 rax_171 = fn0000000180003A90(rcx, fp - 808);
		if (rax_171 != 0x00)
			fn000000018001DF30(rcx, rax_171);
		if (false)
			fn000000018002367C(0x00);
	}
	else
	{
		Eq_3877 tLoc0388;
		tLoc0388.qw0000 = 0x00;
		tLoc0388.qw0008 = 0x00;
		fn0000000180003E10(&tLoc0388, rcx, fn0000000180003A90(rcx, fp - 808));
		Eq_137 rcx_145;
		rcx_145.u0 = tLoc0388.t0000.u0;
		if (rcx_145 != 0x00)
		{
			fn000000018002367C(rcx_145);
			tLoc0388.qw0000 = 0x00;
			rcx_145.u0 = 0x00;
		}
		tLoc0388.qw0008 = 0x00;
		if (rcx_145 != 0x00)
		{
			fn000000018002367C(rcx_145);
			tLoc0388.qw0000 = 0x00;
		}
		tLoc0388.qw0008 = 0x00;
	}
	if (rsi_219 != 0x00)
		fn000000018002367C(rsi_219);
	word64 qwLoc03B0;
	fn0000000180023580(rax_17 ^ fp - 0x03A8, qwLoc03B0);
}

// 0000000180003E10: void fn0000000180003E10(Register (ptr64 Eq_3676) rcx, Register word64 rdx, Register Eq_1756 r8)
// Called from:
//      fn0000000180003C80
void fn0000000180003E10(union Eq_3676 * rcx, word64 rdx, Eq_1756 r8)
{
	if (r8 == 0x00)
		return;
	Eq_137 rcx_21;
	rcx_21.u0 = rcx->u0.t0000.u0;
	if (rcx_21 != 0x00)
	{
		fn000000018002367C(rcx_21);
		rcx->u0.t0000.u0 = 0x00;
	}
	rcx->u0.t0008.u2 = 0x00;
	FILE * rax_46 = wfopen(r8, &g_t80028734);
	if (rax_46 == null)
		return;
	fseek(rax_46, 0, 2);
	Eq_734 eax_61 = ftell(rax_46);
	rcx->u0.t000C.u0 = (int32) eax_61;
	if (eax_61 != 0x00)
	{
		Eq_137 rax_69 = fn0000000180023684((uint64) eax_61);
		rcx->u0.t0000.u0 = (byte *) rax_69;
		if (rax_69 == 0x00)
		{
l0000000180003EDB:
			fclose(rax_46);
			return;
		}
		fseek(rax_46, 0, 0);
		Eq_734 ebx_91;
		ebx_91.u0 = rcx->u0.t000C.u0;
		if (fread(rcx->u0.t0000.u0, 0x01, ebx_91, rax_46) == ebx_91)
		{
			fclose(rax_46);
			ui32 ebx_133 = fn0000000180003F40(rcx, rdx, r8);
			fn0000000180003BA0(rcx);
			if ((ebx_133 & ~0x03) != 0x00 || ebx_133 == 0x01)
				;
			return;
		}
		fn0000000180003BA0(rcx);
	}
	goto l0000000180003EDB;
}

// 0000000180003F40: Register word32 fn0000000180003F40(Register (ptr64 Eq_3676) rcx, Register word64 rdx, Register Eq_1756 r8)
// Called from:
//      fn0000000180003E10
//      fn0000000180003F40
//      fn000000018001DFF0
word32 fn0000000180003F40(union Eq_3676 * rcx, word64 rdx, Eq_1756 r8)
{
	Eq_4061 fp;
	ui64 rax_18 = g_qw80030008 ^ fp - 0x0808;
	word64 qwLoc0810;
	if (rdx == 0x00 || r8 == 0x00)
	{
l0000000180004F61:
		return (word32) fn0000000180023580(rax_18 ^ fp - 0x0808, qwLoc0810);
	}
	Eq_4071 tLoc07D0;
	tLoc07D0.qw0004 = 0x00;
	tLoc07D0.qw000C = 0x00;
	tLoc07D0.qw0014 = 0x00;
	tLoc07D0.dw001C = 0x00;
	Eq_137 r10_41;
	r10_41.u0 = rcx->u0.t0000.u0;
	if (r10_41 == 0x00)
		goto l0000000180004F61;
	uint64 r11_50 = (uint64) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 r11d_53 = (word32) r11_50;
	Eq_1342 r8d_54;
	r8d_54.u0 = rcx->u0.t000C.u0;
	if (r11d_53 > r8d_54)
		goto l0000000180004F61;
	rcx->u0.t0008.u0 = (int32) r11d_53;
	uint64 r9_105 = (uint64) r10_41.u2[(uint64) ((word32) r11_50 - 0x04)];
	uint32 r9d_62 = (word32) r9_105;
	tLoc07D0.dw0000 = r9d_62;
	Eq_1342 esi_66 = (&rcx->u0)[1];
	if (esi_66 != 0x00)
	{
		r9_105 = (uint64) (r9d_62 >> 0x18 | r9d_62 >> 0x08 & 0xFF00 | (r9d_62 & 0xFF00) << 0x08 | r9d_62 << 0x18);
		tLoc07D0.dw0000 = (word32) r9_105;
	}
	word32 r9d_186 = (word32) r9_105;
	if ((word32) r11_50 + 0x02 > r8d_54)
		goto l0000000180004F61;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
	uint64 rdx_123 = (uint64) rcx->u0.t0008.u0;
	cu16 r11w_129 = (cu16) r10_41.u2[(uint64) ((word32) rdx_123 - 0x02)];
	tLoc07D0.w0004 = r11w_129;
	if (esi_66 != 0x00)
	{
		r11w_129 = r11w_129 >> 0x08 | r11w_129 << 0x08;
		tLoc07D0.w0004 = r11w_129;
	}
	if ((word32) rdx_123 + 0x02 > r8d_54)
		goto l0000000180004F61;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
	cu16 dx_166 = (cu16) r10_41.u2[(uint64) (rcx->u0.t0008.u0 + ~0x01)];
	tLoc07D0.w0006 = dx_166;
	if (esi_66 != 0x00)
		tLoc07D0.w0006 = dx_166 >> 0x08 | dx_166 << 0x08;
	struct Eq_4223 * rdi_1690 = null;
	Eq_4364 tLoc07D4;
	word64 qwLoc0758;
	char bLoc0550;
	if (r9d_186 == 1178747719)
	{
		rcx->u0.t0008.u0 = 0x04;
		if (r8d_54 < 0x08)
			goto l0000000180004F61;
		rcx->u0.t0008.u0 = 0x08;
		uint64 r9_1812 = (uint64) *((word64) r10_41 + 4);
		uint32 r9d_1818 = (word32) r9_1812;
		if (esi_66 != 0x00)
			r9_1812 = (uint64) (r9d_1818 >> 0x18 | r9d_1818 >> 0x08 & 0xFF00 | (r9d_1818 & 0xFF00) << 0x08 | r9d_1818 << 0x18);
		up32 r9d_1861 = (word32) r9_1812;
		up32 ecx_1889 = 0x00;
		if (r9d_1861 != 0x00)
		{
			do
			{
				if (rcx->u0.t0008.u0 + 0x04 > r8d_54)
					goto l0000000180004F61;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_54)
					goto l0000000180004F61;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				++ecx_1889;
			} while (ecx_1889 < r9d_1861);
		}
		tLoc07D0.qw0010 = 0x00;
		tLoc07D0.dw0018 = 0x00;
		tLoc07D0.dw0000 = 0x00;
		tLoc07D0.qw0008 = 0x00;
		int32 esi_1923 = (word32) r9_1812 - 0x01;
		word64 rax_1921 = 0x00;
		if (esi_1923 > 0x00)
		{
			if (fn0000000180001760(&tLoc07D0, esi_1923) == 0x00)
				goto l0000000180004500;
			rax_1921 = tLoc07D0.qw0008;
		}
		word32 dwLoc07D8_2881 = 0x00;
		int64 rcx_1952 = (int64) esi_1923;
		word64 qwLoc0780_2883 = 0x01;
		if (esi_1923 > 0x00)
		{
			struct Eq_4560 * qwLoc0798_2884 = rax_1921 + 16;
			word64 rdi_1970 = tLoc07D0.qw0008;
			word64 qwLoc0780_4143;
			do
			{
				Eq_137 r9_1973;
				r9_1973.u0 = rcx->u0.t0000.u0;
				if (r9_1973 == 0x00)
					break;
				Eq_1342 r8d_1986;
				r8d_1986.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_1986)
					break;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_1992 = (uint64) rcx->u0.t0008.u0;
				uint64 r11_1996 = (uint64) r9_1973.u2[(uint64) ((word32) r10_1992 - 0x04)];
				uint32 r11d_2004 = (word32) r11_1996;
				Eq_1342 edx_1999 = (&rcx->u0)[1];
				if (edx_1999 != 0x00)
				{
					r11_1996 = (uint64) (r11d_2004 >> 0x18 | r11d_2004 >> 0x08 & 0xFF00 | (r11d_2004 & 0xFF00) << 0x08 | r11d_2004 << 0x18);
					edx_1999 = (&rcx->u0)[1];
				}
				word32 r11d_2303 = (word32) r11_1996;
				if ((word32) r10_1992 + 0x04 > r8d_1986)
					break;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rsi_2058 = (uint64) rcx->u0.t0008.u0;
				uint32 r10d_2064 = (uint32) r9_1973.u2[(uint64) ((word32) rsi_2058 - 0x04)];
				tLoc07D4 = (Eq_4364) r10d_2064;
				if (edx_1999 != 0x00)
				{
					tLoc07D4 = (Eq_4364) (r10d_2064 >> 0x18 | r10d_2064 >> 0x08 & 0xFF00 | (r10d_2064 & 0xFF00) << 0x08 | r10d_2064 << 0x18);
					edx_1999 = (&rcx->u0)[1];
				}
				if ((word32) rsi_2058 + 0x04 > r8d_1986)
					break;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_2128 = (uint64) rcx->u0.t0008.u0;
				uint64 rsi_2133 = (uint64) r9_1973.u2[(uint64) ((word32) r10_2128 - 0x04)];
				uint32 esi_2140 = (word32) rsi_2133;
				if (edx_1999 != 0x00)
				{
					rsi_2133 = (uint64) (esi_2140 >> 0x18 | esi_2140 >> 0x08 & 0xFF00 | (esi_2140 & 0xFF00) << 0x08 | esi_2140 << 0x18);
					edx_1999 = (&rcx->u0)[1];
				}
				Eq_483 esi_2313 = (word32) rsi_2133;
				if ((word32) r10_2128 + 0x04 > r8d_1986)
					break;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_2200 = (uint64) r9_1973.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				uint32 r10d_2207 = (word32) r10_2200;
				if (edx_1999 != 0x00)
					r10_2200 = (uint64) (r10d_2207 >> 0x18 | r10d_2207 >> 0x08 & 0xFF00 | (r10d_2207 & 0xFF00) << 0x08 | r10d_2207 << 0x18);
				word32 r10d_2315 = (word32) r10_2200;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_1986)
					break;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_1986)
					break;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_1986)
					break;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_1986)
					break;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_1986)
					break;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (r11d_2303 != 0x41646170 || tLoc07D4 != 0x4C7A3420)
					break;
				qwLoc0798_2884->dwFFFFFFF0 = (word32) esi_2313;
				qwLoc0798_2884->dwFFFFFFF4 = r10d_2315;
				if (esi_2313 != 0x00 && (fn0000000180001620(rdi_1970 + (int64) dwLoc07D8_2881 * 0x18, esi_2313) == 0x00 || fn0000000180003B40(rcx, qwLoc0798_2884->qw0000, esi_2313) == 0x00))
					break;
				++dwLoc07D8_2881;
				qwLoc0780_2883 = qwLoc0780_4143 + 0x01;
				++qwLoc0798_2884;
				qwLoc0780_4143 = qwLoc0780_2883;
			} while (qwLoc0780_4143 + 0x00 < rcx_1952);
			rax_1921 = tLoc07D0.qw0008;
		}
		if (rax_1921 != 0x00)
		{
			if (false)
				fn000000018002367C(0x00);
			tLoc07D0.dw0018 = 0x00;
			tLoc07D4 = (Eq_4364) 0x00;
			Eq_137 rax_2415 = fn0000000180001810(&tLoc07D0, &tLoc07D4);
			if (rax_2415 != 0x00)
			{
				Eq_1342 ecx_2543;
				ecx_2543.u0 = tLoc07D4.t0000.u0;
				tLoc07D0.t0018.u0 = (int32) ecx_2543;
				Eq_137 qwLoc07B0_2945 = rax_2415;
				if (ecx_2543 != 0x00)
				{
					rcx->u0.t0000.u0 = (byte *) rax_2415;
					rcx->u0.t000C.u0 = (int32) ecx_2543;
					rcx->u0.t0008.u0 = 0x00;
					fn0000000180003F40(rcx, rdx, r8);
					rcx->u0.t0000.u0 = 0x00;
					rcx->u0.t0008.u2 = 0x00;
				}
				fn0000000180001690(&tLoc07D0);
				if (rax_2415 != 0x00)
				{
					fn000000018002367C(rax_2415);
					qwLoc07B0_2945.u0 = 0x00;
				}
				tLoc07D0.dw0018 = 0x00;
				fn0000000180001690(&tLoc07D0);
				if (qwLoc07B0_2945 != 0x00)
					fn000000018002367C(qwLoc07B0_2945);
				return (word32) fn0000000180023580(rax_18 ^ fp - 0x0808, qwLoc0810);
			}
		}
		fn0000000180001690(&tLoc07D0);
		if (false)
			fn000000018002367C(0x00);
		tLoc07D0.dw0018 = 0x00;
		struct Eq_5186 * rdi_2456 = null;
		word16 ax_2461;
		do
		{
			ax_2461 = (word16) *(rdi_2456 + "U\0n\0k\0n\0o\0w\0n\0 \0f\0i\0l\0e\0 \0h\0e\0a\0d\0e\0r\0:\0 \0G\0C\0B\0F\0\0");
			*(&qwLoc0758 + rdi_2456) = (word64) ax_2461;
			++rdi_2456;
		} while (ax_2461 != 0x00);
		wcstombs(&bLoc0550, "U\0n\0k\0n\0o\0w\0n\0 \0f\0i\0l\0e\0 \0h\0e\0a\0d\0e\0r\0:\0 \0G\0C\0B\0F\0\0", 0x0104);
		if (rdx + 0x0F48 != &qwLoc0758)
		{
			struct Eq_5275 * rcx_2479 = &bLoc0550;
			int64 r8_2482 = rdx + 0x0F48 - &bLoc0550;
			byte al_2488;
			do
			{
				al_2488 = rcx_2479->b0000;
				(rcx_2479 + 520)[r8_2482] = (struct Eq_5275) al_2488;
				++rcx_2479;
			} while (al_2488 != 0x00);
			union Eq_5293 * rcx_2497 = &qwLoc0758;
			int64 rdx_2500 = rdx + 0x0F48 - &qwLoc0758;
			word16 ax_2506;
			do
			{
				ax_2506 = (word16) *rcx_2497;
				*((char *) rcx_2497 + rdx_2500) = (union Eq_5293 *) ax_2506;
				rcx_2497 = (union Eq_5293 *) ((char *) rcx_2497 + 2);
			} while (ax_2506 != 0x00);
		}
l0000000180004500:
		fn0000000180001690(&tLoc07D0);
		if (false)
			fn000000018002367C(0x00);
		goto l0000000180004F61;
	}
	if (r9d_186 != 0x53455242)
	{
		if (r9d_186 == 0x04034B50)
		{
			word16 ax_1754;
			do
			{
				ax_1754 = (word16) *(rdi_1690 + "B\0R\0E\0S\0 \0f\0i\0l\0e\0 \0h\0e\0a\0d\0e\0r\0 \0I\0D\0 \0n\0o\0t\0 \0f\0o\0u\0n\0d\0.\0\r\0\n\0T\0h\0i\0s\0 \0a\0p\0p\0e\0a\0r\0s\0 \0t\0o\0 \0b\0e\0 \0a\0 \0P\0K\0Z\0i\0p\0 \0c\0o\0m\0p\0r\0e\0s\0s\0e\0d\0 \0f\0i\0l\0e\0.\0\0");
				*(&qwLoc0758 + rdi_1690) = (word64) ax_1754;
				++rdi_1690;
			} while (ax_1754 != 0x00);
			wcstombs(&bLoc0550, "B\0R\0E\0S\0 \0f\0i\0l\0e\0 \0h\0e\0a\0d\0e\0r\0 \0I\0D\0 \0n\0o\0t\0 \0f\0o\0u\0n\0d\0.\0\r\0\n\0T\0h\0i\0s\0 \0a\0p\0p\0e\0a\0r\0s\0 \0t\0o\0 \0b\0e\0 \0a\0 \0P\0K\0Z\0i\0p\0 \0c\0o\0m\0p\0r\0e\0s\0s\0e\0d\0 \0f\0i\0l\0e\0.\0\0", 0x0104);
			if (rdx + 0x0F48 != &qwLoc0758)
			{
				struct Eq_4405 * rcx_1772 = &bLoc0550;
				int64 r8_1775 = rdx + 0x0F48 - &bLoc0550;
				byte al_1781;
				do
				{
					al_1781 = rcx_1772->b0000;
					(rcx_1772 + 520)[r8_1775] = (struct Eq_4405) al_1781;
					++rcx_1772;
				} while (al_1781 != 0x00);
				union Eq_4423 * rcx_1790 = &qwLoc0758;
				int64 rdx_1793 = rdx + 0x0F48 - &qwLoc0758;
				word16 ax_1799;
				do
				{
					ax_1799 = (word16) *rcx_1790;
					*((char *) rcx_1790 + rdx_1793) = (union Eq_4423 *) ax_1799;
					rcx_1790 = (union Eq_4423 *) ((char *) rcx_1790 + 2);
				} while (ax_1799 != 0x00);
			}
		}
		else
		{
			word16 ax_1695;
			do
			{
				ax_1695 = (word16) *(rdi_1690 + "B\0R\0E\0S\0 \0f\0i\0l\0e\0 \0h\0e\0a\0d\0e\0r\0 \0I\0D\0 \0n\0o\0t\0 \0f\0o\0u\0n\0d\0.\0\0");
				*(&qwLoc0758 + rdi_1690) = (word64) ax_1695;
				++rdi_1690;
			} while (ax_1695 != 0x00);
			wcstombs(&bLoc0550, "B\0R\0E\0S\0 \0f\0i\0l\0e\0 \0h\0e\0a\0d\0e\0r\0 \0I\0D\0 \0n\0o\0t\0 \0f\0o\0u\0n\0d\0.\0\0", 0x0104);
			if (rdx + 0x0F48 != &qwLoc0758)
			{
				struct Eq_4465 * rcx_1713 = &bLoc0550;
				int64 r8_1716 = rdx + 0x0F48 - &bLoc0550;
				byte al_1722;
				do
				{
					al_1722 = rcx_1713->b0000;
					(rcx_1713 + 520)[r8_1716] = (struct Eq_4465) al_1722;
					++rcx_1713;
				} while (al_1722 != 0x00);
				union Eq_4483 * rcx_1731 = &qwLoc0758;
				int64 rdx_1734 = rdx + 0x0F48 - &qwLoc0758;
				word16 ax_1740;
				do
				{
					ax_1740 = (word16) *rcx_1731;
					*((char *) rcx_1731 + rdx_1734) = (union Eq_4483 *) ax_1740;
					rcx_1731 = (union Eq_4483 *) ((char *) rcx_1731 + 2);
				} while (ax_1740 != 0x00);
			}
		}
		goto l0000000180004F61;
	}
	Eq_1342 edx_205;
	edx_205.u1 = (uint32) (r11w_129 != ~0x01);
	tLoc07D4.t0000.u0 = (int32) edx_205;
	(&rcx->u0)[1] = (struct Eq_75466) edx_205;
	if (rcx->u0.t0008.u0 + 0x04 > r8d_54)
		goto l0000000180004F61;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r11_222 = (uint64) rcx->u0.t0008.u0;
	uint64 r9_227 = (uint64) r10_41.u2[(uint64) ((word32) r11_222 - 0x04)];
	uint32 r9d_228 = (word32) r9_227;
	tLoc07D0.dw0008 = r9d_228;
	uint32 dwLoc07D8_2783 = r9d_228;
	if (edx_205 != 0x00)
	{
		r9_227 = (uint64) ((r9d_228 & 0x00FF0000 | r9d_228 >> 0x10) >> 0x08 | (r9d_228 << 0x10 | r9d_228 & 0xFF00) << 0x08);
		uint32 r9d_273 = (word32) r9_227;
		tLoc07D0.dw0008 = r9d_273;
		dwLoc07D8_2783 = r9d_273;
	}
	up32 r9d_483 = (word32) r9_227;
	if ((word32) r11_222 + 0x04 > r8d_54)
		goto l0000000180004F61;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rsi_291 = (uint64) rcx->u0.t0008.u0;
	uint32 r11d_297 = (uint32) r10_41.u2[(uint64) ((word32) rsi_291 - 0x04)];
	tLoc07D0.dw000C = r11d_297;
	if (edx_205 != 0x00)
		tLoc07D0.dw000C = (r11d_297 & 0x00FF0000 | r11d_297 >> 0x10) >> 0x08 | (r11d_297 << 0x10 | r11d_297 & 0xFF00) << 0x08;
	if ((word32) rsi_291 + 0x04 > r8d_54)
		goto l0000000180004F61;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rsi_357 = (uint64) rcx->u0.t0008.u0;
	uint32 r11d_363 = (uint32) r10_41.u2[(uint64) ((word32) rsi_357 - 0x04)];
	tLoc07D0.dw0010 = r11d_363;
	if (edx_205 != 0x00)
		tLoc07D0.dw0010 = (r11d_363 & 0x00FF0000 | r11d_363 >> 0x10) >> 0x08 | (r11d_363 << 0x10 | r11d_363 & 0xFF00) << 0x08;
	if ((word32) rsi_357 + 0x04 > r8d_54)
		goto l0000000180004F61;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rsi_423 = (uint64) rcx->u0.t0008.u0;
	uint32 r11d_429 = (uint32) r10_41.u2[(uint64) ((word32) rsi_423 - 0x04)];
	tLoc07D0.dw0014 = r11d_429;
	if (edx_205 != 0x00)
		tLoc07D0.dw0014 = (r11d_429 & 0x00FF0000 | r11d_429 >> 0x10) >> 0x08 | (r11d_429 << 0x10 | r11d_429 & 0xFF00) << 0x08;
	Eq_1342 eax_488 = (word32) rsi_423 + 0x04;
	uint64 rsi_4141;
	if (r9d_483 <= 0x20)
	{
		if (eax_488 > r8d_54)
			goto l0000000180004F61;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 r11_782 = (uint64) rcx->u0.t0008.u0;
		uint32 r9d_787 = (uint32) r10_41.u2[(uint64) ((word32) r11_782 - 0x04)];
		tLoc07D0.dw0018 = r9d_787;
		if (edx_205 != 0x00)
			tLoc07D0.dw0018 = (r9d_787 & 0x00FF0000 | r9d_787 >> 0x10) >> 0x08 | (r9d_787 << 0x10 | r9d_787 & 0xFF00) << 0x08;
		if ((word32) r11_782 + 0x04 > r8d_54)
			goto l0000000180004F61;
	}
	else
	{
		if (r9d_483 >= 0x40)
		{
			if (eax_488 > r8d_54)
				goto l0000000180004F61;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r11_629 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 r9d_638 = r10_41.u2[(uint64) ((word32) r11_629 - 0x04)];
			if (edx_205 != 0x00)
				r9d_638 = __bswap<word32>(r9d_638);
			if ((word32) r11_629 + 0x04 > r8d_54)
				goto l0000000180004F61;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r11_652 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_663 = r10_41.u2[(uint64) ((word32) r11_652 - 0x04)];
			if (edx_205 != 0x00)
			{
				Eq_1342 eax_664 = __bswap<word32>(eax_663);
				r9d_638 = eax_664;
			}
			tLoc07D0.t0014.u0 = (int32) r9d_638;
			if ((word32) r11_652 + 0x04 > r8d_54)
				goto l0000000180004F61;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r11_682 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 r9d_693 = r10_41.u2[(uint64) ((word32) r11_682 - 0x04)];
			if (edx_205 != 0x00)
				r9d_693 = __bswap<word32>(r9d_693);
			if ((word32) r11_682 + 0x04 > r8d_54)
				goto l0000000180004F61;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r11_707 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_718 = r10_41.u2[(uint64) ((word32) r11_707 - 0x04)];
			if (edx_205 != 0x00)
			{
				Eq_1342 eax_719 = __bswap<word32>(eax_718);
				r9d_693 = eax_719;
			}
			tLoc07D0.t0018.u0 = (int32) r9d_693;
			if ((word32) r11_707 + 0x04 > r8d_54)
				goto l0000000180004F61;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r9_737 = (uint64) rcx->u0.t0008.u0;
			uint64 rsi_742 = (uint64) r10_41.u2[(uint64) ((word32) r9_737 - 0x04)];
			Eq_1342 esi_748 = (word32) rsi_742;
			word32 rsi_32_32_967 = SLICE(rsi_742, word32, 32);
			if (edx_205 != 0x00)
				esi_748 = __bswap<word32>(esi_748);
			if ((word32) r9_737 + 0x04 > r8d_54)
				goto l0000000180004F61;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 eax_774 = r10_41.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
			if (edx_205 != 0x00)
			{
				Eq_1342 eax_775 = __bswap<word32>(eax_774);
				esi_748 = eax_775;
			}
			rsi_4141 = SEQ(rsi_32_32_967, esi_748);
			goto l0000000180004A36;
		}
		if (eax_488 > r8d_54)
			goto l0000000180004F61;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 r11_497 = (uint64) rcx->u0.t0008.u0;
		uint32 r9d_503 = (uint32) r10_41.u2[(uint64) ((word32) r11_497 - 0x04)];
		tLoc07D0.dw0014 = r9d_503;
		if (edx_205 != 0x00)
			tLoc07D0.dw0014 = (r9d_503 & 0x00FF0000 | r9d_503 >> 0x10) >> 0x08 | (r9d_503 << 0x10 | r9d_503 & 0xFF00) << 0x08;
		if ((word32) r11_497 + 0x04 > r8d_54)
			goto l0000000180004F61;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 r11_563 = (uint64) rcx->u0.t0008.u0;
		uint32 r9d_569 = (uint32) r10_41.u2[(uint64) ((word32) r11_563 - 0x04)];
		tLoc07D0.dw0018 = r9d_569;
		if (edx_205 != 0x00)
			tLoc07D0.dw0018 = (r9d_569 & 0x00FF0000 | r9d_569 >> 0x10) >> 0x08 | (r9d_569 << 0x10 | r9d_569 & 0xFF00) << 0x08;
		if ((word32) r11_563 + 0x04 > r8d_54)
			goto l0000000180004F61;
	}
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rsi_4139 = (uint64) r10_41.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
	uint32 esi_864 = (word32) rsi_4139;
	tLoc07D0.dw001C = esi_864;
	if (edx_205 == 0x00)
		goto l0000000180004A3A;
	rsi_4141 = (uint64) ((esi_864 & 0x00FF0000 | esi_864 >> 0x10) >> 0x08 | (esi_864 << 0x10 | esi_864 & 0xFF00) << 0x08);
l0000000180004A36:
	tLoc07D0.dw001C = (word32) rsi_4141;
	rsi_4139 = rsi_4141;
l0000000180004A3A:
	Eq_5222 tLoc0138;
	memset(&tLoc0138, 0, 0x0104);
	Eq_1342 esi_953 = (word32) rsi_4139;
	Eq_1342 eax_950;
	eax_950.u0 = rcx->u0.t0008.u0;
	if (esi_953 == 0x00)
	{
l0000000180004AF1:
		rcx->u0.t0008.u0 = (int32) eax_950;
		word32 eax_1117 = fn0000000180003A40(&tLoc0138, &g_t80028860);
		Eq_1753 esi_1120;
		esi_1120.u0 = g_t800306F0.u0;
		if (eax_1117 == 0x04)
			esi_1120.u0 = 0x00;
		g_t800306F0.u0 = (int32) esi_1120;
		if (esi_1120 != 0x0101 && esi_1120 > 0x0144)
		{
			Eq_5682 rax_1136;
			rax_1136.u1 = (uint64) (esi_1120 - 0x035B);
			if ((word32) rax_1136 > 0x3B || !__bt<word64>(0x810080402040281, rax_1136))
			{
				Eq_5682 rax_1144;
				rax_1144.u1 = (uint64) (esi_1120 - 0x02FC);
				if ((word32) rax_1144 > 0x2F || !__bt<word64>(0x80000001A001, rax_1144))
				{
					int64 rdi_1629 = 0x00;
					if (esi_1120 != 844)
					{
						Eq_5708 eax_1159 = esi_1120 - 0x03A2;
						if (eax_1159 > 0x3C || !__bt<word64>(0x1080481C01014011, (int64) eax_1159))
						{
							memset(&qwLoc0758, 0, 0x0208);
							fn0000000180002920(&qwLoc0758, &g_t80028870);
							word16 ax_1633;
							do
							{
								ax_1633 = (word16) *((char *) &qwLoc0758 + rdi_1629);
								*((char *) &(fp - 0x0448)[0] + rdi_1629) = (word16 (*)[]) ax_1633;
								rdi_1629 += 2;
							} while (ax_1633 != 0x00);
							char bLoc0240;
							wcstombs(&bLoc0240, &qwLoc0758, 0x0104);
							if (rdx + 0x0F48 != fp - 0x0448)
							{
								struct Eq_5756 * rcx_1652 = &bLoc0240;
								int64 r8_1655 = rdx + 0x0F48 - &bLoc0240;
								byte al_1661;
								do
								{
									al_1661 = rcx_1652->b0000;
									(rcx_1652 + 520)[r8_1655] = (struct Eq_5756) al_1661;
									++rcx_1652;
								} while (al_1661 != 0x00);
								struct Eq_5775 * rcx_1670 = fp - 0x0448;
								int64 rdx_1673 = rdx + 0x0F48 - (fp - 0x0448);
								word16 ax_1679;
								do
								{
									ax_1679 = (word16) rcx_1670->t0000;
									*((char *) &rcx_1670->t0000 + rdx_1673) = (struct Eq_5775 *) ax_1679;
									++rcx_1670;
								} while (ax_1679 != 0x00);
							}
							goto l0000000180004F61;
						}
					}
				}
			}
		}
		word32 eax_1412;
		uint32 ebx_1462;
		if (dwLoc07D8_2783 != 0x20)
		{
			if (dwLoc07D8_2783 == 44)
			{
				Eq_5682 rsi_1351;
				rsi_1351.u1 = (uint64) ((word64) esi_1120 - 868);
				if ((word32) rsi_1351 > 0x22 || __bt<word64>(0x402010001, rsi_1351))
					goto l0000000180004F61;
				eax_1412 = fn0000000180010580(rcx, &tLoc07D0);
			}
			else if (dwLoc07D8_2783 == 0x3C)
			{
				Eq_2072 eax_1239 = esi_1120 - 0x02FC;
				if (eax_1239 <= 0x10 && !__bt<word32>(0x00012001, eax_1239))
				{
					eax_1412 = fn0000000180009990(rcx, &tLoc07D0);
					ebx_1462 = dwLoc07D8_2783;
					goto l0000000180004E0F;
				}
				if (esi_1120 == 779)
				{
					eax_1412 = fn0000000180009990(rcx, &tLoc07D0);
					ebx_1462 = dwLoc07D8_2783;
					goto l0000000180004E0F;
				}
				Eq_5682 rax_1252;
				rax_1252.u1 = (uint64) (esi_1120 - 811);
				if ((word32) rax_1252 <= 0x30 && !__bt<word64>(0x1000200000001, rax_1252))
					eax_1412 = fn000000018000C1B0(rcx, &tLoc07D0);
				else
				{
					if (esi_1120 != 866)
						goto l0000000180004F61;
					eax_1412 = fn000000018000FBF0(rcx, &tLoc07D0, r8);
				}
			}
			else
			{
				if (dwLoc07D8_2783 == 0x40)
				{
					Eq_5682 rax_1194;
					rax_1194.u1 = (uint64) (esi_1120 - 877);
					if ((word32) rax_1194 > 0x29 || !__bt<word64>(0x20400000001, rax_1194))
					{
						Eq_6003 esi_1203;
						esi_1203.u2 = (word64) esi_1120 - 930;
						if (esi_1203 > 0x3C || __bt<word64>(0x1080481C01014011, (int64) esi_1203))
							goto l0000000180004F61;
					}
				}
				else if (dwLoc07D8_2783 != 0x50 || esi_1120 != 779 && esi_1120 != 866)
					goto l0000000180004F61;
				eax_1412 = fn00000001800156B0(rcx, &tLoc07D0);
			}
			ebx_1462 = tLoc07D0.dw0008;
			goto l0000000180004E0F;
		}
		else
		{
			if (esi_1120 > 0x0144 && esi_1120 != 0x0101)
				goto l0000000180004F61;
			eax_1412 = fn0000000180006F90(rcx, &tLoc07D0);
			ebx_1462 = dwLoc07D8_2783;
l0000000180004E0F:
			if (eax_1412 != 0x00)
			{
				fn00000001800068E0(&g_t800306F0);
				fn0000000180006B30(&g_t800306F0);
				if (ebx_1462 == 0x3C && g_t800306F0.u0 == 0x035B)
				{
					struct Eq_2417 * rax_1472 = g_ptr80030720;
					if (rax_1472 == null || rax_1472->dw0010 != 11254)
						return (word32) fn0000000180023580(rax_18 ^ fp - 0x0808, qwLoc0810);
					Eq_2394 r10d_1560;
					r10d_1560.u0 = 0x00;
					Eq_2394 ecx_1494;
					ecx_1494.u0 = g_t80030718.u0;
					if (ecx_1494 <= 0x00)
						return (word32) fn0000000180023580(rax_18 ^ fp - 0x0808, qwLoc0810);
					struct Eq_5849 * r8_1501 = (struct Eq_5849 *) 0x10;
					do
					{
						Eq_5878 r9d_1548;
						r9d_1548.u0 = 0x00;
						if (*(r8_1501 + rax_1472) > 0x00)
						{
							int64 rdx_1514 = 0x00;
							do
							{
								struct Eq_5861 * rax_1518 = (struct Eq_5861 *) *((char *) &rax_1472->dw0000 + (r8_1501 + (struct Eq_5858 *) 8));
								*((word32) &rax_1518->a0018[0] + rdx_1514) = (real32[]) (*((word32) &rax_1518->a0018[0] + rdx_1514) *32 3.0F);
								Eq_5878 rcx_1527 = *((char *) &g_ptr80030720->dw0000 + (r8_1501 + (struct Eq_5874 *) 8));
								*((word32) &rcx_1527.u1->a0020[0] + rdx_1514) = (real32[]) (*((word32) &rcx_1527.u1->a0020[0] + rdx_1514) *32 3.0F);
								Eq_5878 rcx_1534 = *((char *) &g_ptr80030720->dw0000 + (r8_1501 + (struct Eq_5890 *) 8));
								*((word32) &rcx_1534.u1->a001C[0] + rdx_1514) = (real32[]) (1.0F - *((word32) (&((rcx_1534.u1)->a001C)[0]) + rdx_1514));
								Eq_5878 rcx_1542 = *((char *) &g_ptr80030720->dw0000 + (r8_1501 + (struct Eq_5906 *) 8));
								*((word32) &rcx_1542.u1->a0024[0] + rdx_1514) = (real32[]) (1.0F - *((word32) (&((rcx_1542.u1)->a0024)[0]) + rdx_1514));
								r9d_1548 = (word32) r9d_1548.u0 + 1;
								rdx_1514 += 0x4C;
								rax_1472 = g_ptr80030720;
							} while (r9d_1548 < *(r8_1501 + rax_1472));
							ecx_1494.u0 = g_t80030718.u0;
						}
						r10d_1560 = (word32) r10d_1560.u0 + 1;
						++r8_1501;
					} while (r10d_1560 < ecx_1494);
				}
				Eq_2072 eax_1578 = g_t800306F0.u0 + ~0x02FB;
				if (eax_1578 <= 0x10 && !__bt<word32>(0x0001A001, eax_1578))
					fn0000000180001960(&g_t800306F0);
				return (word32) fn0000000180023580(rax_18 ^ fp - 0x0808, qwLoc0810);
			}
			goto l0000000180004F61;
		}
	}
	rcx->u0.t0008.u0 = (int32) esi_953;
	Eq_1342 r10d_1010;
	if (dwLoc07D8_2783 != 0x40)
	{
		if ((word64) esi_953 + 4 > ((rcx->u0).t000C).u0)
			goto l0000000180004F61;
		rcx->u0.t0008.u0 = (int32) ((word64) esi_953 + 4);
		r10d_1010 = rcx->u0.t0000.u0[(uint64) esi_953];
		if (tLoc07D4 != 0x00)
			r10d_1010 = __bswap<word32>(r10d_1010);
l0000000180004ADB:
		fn0000000180005050(rcx, r10d_1010, &tLoc0138);
		goto l0000000180004AF1;
	}
	uint64 rsi_990 = (uint64) ((word64) esi_953 + 4);
	Eq_1342 esi_993 = (word32) rsi_990;
	Eq_1342 edx_994;
	edx_994.u0 = rcx->u0.t000C.u0;
	if (esi_993 > edx_994)
		goto l0000000180004F61;
	rcx->u0.t0008.u0 = (int32) esi_993;
	Eq_137 r9_1000;
	r9_1000.u0 = rcx->u0.t0000.u0;
	r10d_1010 = r9_1000.u2[(uint64) ((word32) rsi_990 - 0x04)];
	word32 r8d_1005 = (word32) tLoc07D4;
	if (r8d_1005 != 0x00)
		r10d_1010 = __bswap<word32>(r10d_1010);
	if ((word32) rsi_990 + 0x04 <= edx_994)
	{
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		Eq_1342 eax_1036 = r9_1000.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
		if (r8d_1005 != 0x00)
		{
			Eq_1342 eax_1037 = __bswap<word32>(eax_1036);
			r10d_1010 = eax_1037;
		}
		goto l0000000180004ADB;
	}
	goto l0000000180004F61;
}

// 0000000180004F90: Register word32 fn0000000180004F90(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_6068) rdx)
// Called from:
//      fn0000000180009990
//      fn000000018000C1B0
//      fn000000018000FBF0
word32 fn0000000180004F90(union Eq_3676 * rcx, struct Eq_6068 * rdx)
{
	Eq_137 rdx_9;
	rdx_9.u0 = rcx->u0.t0000.u0;
	if (rdx_9 == 0x00)
		return 0x00;
	Eq_1342 eax_19 = rcx->u0.t0008.u0 + 0x04;
	if (eax_19 > ((rcx->u0).t000C).u0)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) eax_19;
	Eq_1342 r11d_29 = rdx_9.u2[(uint64) ((word64) eax_19 - 4)];
	if ((&rcx->u0)[1] != 0x00)
		r11d_29 = __bswap<word32>(r11d_29);
	uint64 rdx_242 = 0x00;
	if (r11d_29 != 0x00)
	{
		struct Eq_6111 * r9_40 = null;
		uint64 rdx_245 = 0x00;
		do
		{
			word32 edx_87 = (word32) rdx_245;
			Eq_137 r10_43;
			r10_43.u0 = rcx->u0.t0000.u0;
			if (r10_43 == 0x00 || ((rcx->u0).t0008).u0 + 0x01 > ((rcx->u0).t000C).u0)
				return 0x00;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
			byte al_78 = r10_43.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
			if (r9_40 < (struct Eq_6111 *) 0x0104)
				*(r9_40 + rdx) = (word64) al_78;
			if (al_78 == 0x00)
				break;
			rdx_245 = (uint64) (edx_87 + 0x01);
			r9_40 += (struct Eq_6155 *) 0x01;
		} while ((word32) rdx_245 < r11d_29);
		rdx_242 = rdx_245;
		if ((word32) rdx_245 >= 0x0104)
		{
			rdx->b0103 = 0x00;
l0000000180005025:
			uint64 rax_115 = (uint64) rcx->u0.t0008.u0;
			uint64 rcx_121 = (uint64) ((word32) rax_115 & ~0x03);
			word32 ecx_128 = (word32) rcx_121;
			if (((byte) rax_115 & 0x03) > 0x00)
				rcx_121 = (uint64) (ecx_128 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rcx_121;
			return 0x01;
		}
	}
	(&rdx->b0000)[(int64) (word32) rdx_242] = 0x00;
	goto l0000000180005025;
}

// 0000000180005050: void fn0000000180005050(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_5812) r8)
// Called from:
//      fn0000000180003F40
//      fn0000000180006F90
//      fn00000001800077E0
//      fn0000000180007A40
//      fn0000000180007D40
//      fn0000000180008650
//      fn0000000180008870
//      fn0000000180008DC0
//      fn0000000180008FC0
//      fn0000000180009500
//      fn0000000180009870
//      fn0000000180009990
//      fn000000018000A190
//      fn000000018000A5E0
//      fn000000018000A7F0
//      fn000000018000AA90
//      fn000000018000B0F0
//      fn000000018000B660
//      fn000000018000B870
//      fn000000018000BA90
//      fn000000018000C1B0
//      fn000000018000C5F0
//      fn000000018000CB20
//      fn000000018000D030
//      fn000000018000D570
//      fn000000018000D9F0
//      fn000000018000DE40
//      fn000000018000E400
//      fn000000018000F210
//      fn000000018000FBF0
//      fn000000018000FFA0
//      fn0000000180010580
//      fn0000000180010B10
//      fn0000000180011140
//      fn0000000180011770
//      fn0000000180011D40
//      fn0000000180012300
//      fn0000000180012640
//      fn0000000180012B60
//      fn0000000180014610
//      fn0000000180014820
//      fn0000000180014D40
//      fn0000000180014F10
//      fn00000001800150F0
//      fn00000001800156B0
//      fn00000001800160E0
//      fn00000001800166C0
//      fn0000000180016CF0
//      fn00000001800172F0
//      fn0000000180017AB0
//      fn0000000180018190
//      fn00000001800188D0
//      fn00000001800190D0
//      fn00000001800196F0
//      fn00000001800198F0
//      fn0000000180019C40
//      fn0000000180019F30
//      fn000000018001AC20
//      fn000000018001AE80
//      fn000000018001B420
//      fn000000018001B660
//      fn000000018001C9D0
void fn0000000180005050(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_5812 * r8)
{
	word64 rdx;
	edx = (word32) rdx;
	if (r8 == null)
		return;
	if (edx <= 100)
		return;
	Eq_1342 ebx_85;
	ebx_85.u0 = rcx->u0.t0008.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	struct Eq_6207 * rdx_26 = null;
	uint64 r8_164 = 0x00;
	byte al_62;
	int32 r8d_76;
	do
	{
		word32 r8d_66 = (word32) r8_164;
		Eq_137 r10_29;
		r10_29.u0 = rcx->u0.t0000.u0;
		if (r10_29 == 0x00 || ((rcx->u0).t0008).u0 + 0x01 > ((rcx->u0).t000C).u0)
			return;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
		al_62 = r10_29.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
		if (rdx_26 < (struct Eq_6207 *) 0x0104)
			*(rdx_26 + r8) = (word64) al_62;
		r8_164 = (uint64) (r8d_66 + 0x01);
		r8d_76 = (word32) r8_164;
		rdx_26 += (struct Eq_6246 *) 0x01;
	} while (al_62 != 0x00);
	if (r8d_76 >= 0x0104)
	{
		r8->b0103 = 0x00;
		rcx->u0.t0008.u0 = (int32) ebx_85;
	}
	else
	{
		(&r8->b0000)[(int64) r8d_76] = 0x00;
		rcx->u0.t0008.u0 = (int32) ebx_85;
	}
}

// 0000000180005100: Register word32 fn0000000180005100(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register Eq_1265 r8d, Register Eq_1342 r9d, Stack Eq_6279 dwArg28, Stack (ptr64 Eq_6280) qwArg30)
// Called from:
//      fn0000000180007D40
//      fn000000018000B390
//      fn000000018000E860
//      fn000000018000F210
//      fn0000000180012ED0
//      fn0000000180013C40
//      fn000000018001A460
//      fn000000018001B7D0
word32 fn0000000180005100(union Eq_3676 * rcx, struct Eq_1142 * rdx, Eq_1265 r8d, Eq_1342 r9d, Eq_6279 dwArg28, struct Eq_6280 * qwArg30)
{
	word64 r8;
	r8d = (word32) r8;
	word64 r9;
	r9d = (word32) r9;
	if (r8d == 0x00 || dwArg28 <= 0x00)
		return 0x01;
	rcx->u0.t0008.u0 = (int32) r9d;
	if (rdx != null)
	{
		uint64 rax_33 = (uint64) fn0000000180001ED0(rdx, r8d);
		if ((word32) rax_33 == 0x00)
			return (word32) rax_33;
	}
	int64 r9_59 = (int64) qwArg30->dw0000;
	int32 r10d_101 = ~0x00;
	int32 r11d_104 = ~0x00;
	Eq_1265 r15d_2184;
	r15d_2184.u0 = 0x00;
	int32 dwLoc0124_2440 = ~0x00;
	int32 dwLoc0120_2441 = ~0x00;
	word32 esi_326 = ~0x00;
	int32 dwLoc0104_2442 = 0x00;
	word32 r14d_352 = ~0x00;
	int32 dwLoc0100_2443 = 0x00;
	if (r9_59 > 0x01)
	{
		struct Eq_6354 * rax_125 = (struct Eq_6354 *) (&qwArg30->dw0010 + 3);
		int64 rdx_127 = r9_59 - 1;
		do
		{
			if (rax_125->dw0008 == 0x02)
			{
				int32 ecx_98 = rax_125->dw0000;
				if (ecx_98 >= 0x0C)
				{
					if (r10d_101 == ~0x00)
					{
						esi_326 = rax_125->dw0004;
						r10d_101 = ecx_98;
						dwLoc0104_2442 = rax_125->dwFFFFFFFC;
					}
					else if (r11d_104 == ~0x00)
					{
						r14d_352 = rax_125->dw0004;
						r11d_104 = ecx_98;
						dwLoc0100_2443 = rax_125->dwFFFFFFFC;
					}
				}
			}
			++rax_125;
			--rdx_127;
		} while (rdx_127 != 0x00);
		dwLoc0120_2441 = r11d_104;
		dwLoc0124_2440 = r10d_101;
	}
	int32 dwLoc0108_2448 = 0x00;
	int32 dwLoc011C_2449 = ~0x00;
	int32 dwLoc0118_2450 = ~0x00;
	int32 r12d_188 = ~0x00;
	int32 dwLocC8_2451 = 0x00;
	int32 dwLocC4_2452 = 0x00;
	word32 edi_317 = ~0x00;
	uint64 r10_4467 = 0xFFFFFFFF;
	uint64 r11_4470 = 0xFFFFFFFF;
	uint64 rdx_231 = 0xFFFFFFFF;
	uint64 r13_4480 = 0xFFFFFFFF;
	if (r9_59 > 0x01)
	{
		int64 rdx_169 = r9_59 - 1;
		struct Eq_6406 * rax_175 = (struct Eq_6406 *) (&qwArg30->dw0010 + 3);
		uint64 r9_201 = 0xFFFFFFFF;
		uint64 r10_214 = 0xFFFFFFFF;
		uint64 r11_206 = 0xFFFFFFFF;
		uint64 r13_216 = 0xFFFFFFFF;
		do
		{
			word32 r9d_191 = (word32) r9_201;
			word32 r13d_185 = (word32) r13_216;
			if (rax_175->dw0008 == 0x03)
			{
				int32 ecx_182 = rax_175->dw0000;
				if (ecx_182 >= 0x0C)
				{
					if (r13d_185 == ~0x00)
					{
						r10_214 = (uint64) rax_175->dw0004;
						r13_216 = (uint64) ecx_182;
						dwLoc0108_2448 = rax_175->dwFFFFFFFC;
					}
					else if (r12d_188 == ~0x00)
					{
						r11_206 = (uint64) rax_175->dw0004;
						r12d_188 = ecx_182;
						dwLocC8_2451 = rax_175->dwFFFFFFFC;
					}
					else if (r9d_191 == ~0x00)
					{
						edi_317 = rax_175->dw0004;
						dwLoc011C_2449 = ecx_182;
						r9_201 = (uint64) ecx_182;
						dwLocC4_2452 = rax_175->dwFFFFFFFC;
					}
				}
			}
			++rax_175;
			--rdx_169;
		} while (rdx_169 != 0x00);
		rdx_231 = (uint64) dwLoc011C_2449;
		dwLoc0118_2450 = r12d_188;
		r10_4467 = r10_214;
		r11_4470 = r11_206;
		r13_4480 = r13_216;
	}
	uint64 rcx_1244 = (uint64) rcx->u0.t0008.u0;
	int32 r13d_2252 = (word32) r13_4480;
	word32 r10d_308 = (word32) r10_4467;
	word32 edx_303 = (word32) rdx_231;
	word32 r11d_290 = (word32) r11_4470;
	word32 ecx_250 = (word32) rcx_1244;
	Eq_2072 eax_253 = g_t800306F0.u0 + ~0x03CF;
	word32 eax_285;
	if (eax_253 <= 0x0E)
	{
		eax_285 = 0x01;
		if (__bt<word32>(0x4201, eax_253))
		{
l00000001800052D4:
			uint64 rax_2188;
			if (r8d > 0x00)
			{
				int64 r9_282 = (int64) qwArg30->dw0010;
				int64 r12_288 = (int64) eax_285;
				int64 rax_296 = (int64) r11d_290;
				uint64 r11_1221 = (uint64) dwLoc0124_2440;
				int64 rax_306 = (int64) edx_303;
				int64 r8_314 = (int64) r10d_308;
				int64 rax_323 = (int64) edi_317;
				int64 r10_334 = (int64) esi_326;
				int64 qwLocB0_2479 = 0x00;
				int64 r14_360 = (int64) r14d_352;
				int64 r10_1219 = r10_334;
				int64 r9_1069 = r9_282;
				int64 r8_1242 = r8_314;
				do
				{
					uint64 rsi_367 = (uint64) rcx->u0.t0008.u0;
					up32 r14d_902 = (word32) r14_360;
					int32 r11d_455 = (word32) r11_1221;
					up32 esi_1786 = (word32) rsi_367;
					uint64 r11_1039;
					if (dwArg28 == 0x08)
					{
						Eq_6505 tLocC0;
						tLocC0.qw0000 = 0x00;
						tLocC0.dw0008 = 0x00;
						Eq_6516 tLoc98;
						tLoc98.qw0000 = 0x00;
						tLoc98.dw0008 = 0x00;
						Eq_6527 tLoc88;
						tLoc88.qw0000 = 0x00;
						tLoc88.dw0008 = 0x00;
						Eq_6538 tLoc78;
						tLoc78.qw0000 = 0x00;
						tLoc78.dw0008 = 0x00;
						Eq_6549 tLocF8 = (Eq_6549) 0x00;
						Eq_6555 tLocF0 = (Eq_6555) 0x00;
						if (r9_1069 == 0x06)
						{
							if (fn000000018001D5C0(rcx, &tLocC0) == 0x00)
								goto l00000001800053A7;
							goto l000000018000546C;
						}
						if (r9_1069 == 0x07)
						{
							Eq_137 r8_1074;
							r8_1074.u0 = rcx->u0.t0000.u0;
							if (r8_1074 == 0x00)
								goto l00000001800053A7;
							Eq_1342 r10d_1084;
							r10d_1084.u0 = rcx->u0.t000C.u0;
							if ((word32) rsi_367 + 0x02 > r10d_1084)
								goto l00000001800053A7;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
							uint64 rdx_1090 = (uint64) rcx->u0.t0008.u0;
							word32 edx_1112 = (word32) rdx_1090;
							Eq_1342 edi_1097 = (&rcx->u0)[1];
							word16 r11w_1102 = (word16) r8_1074.u2[(uint64) ((word32) rdx_1090 - 0x02)];
							if (edi_1097 != 0x00)
								r11w_1102 = __rol<word16,byte>(r11w_1102, 0x08);
							if ((word32) rdx_1090 + 0x02 > r10d_1084)
								goto l00000001800053A7;
							uint64 rdx_1114 = (uint64) (edx_1112 + 0x02);
							rcx->u0.t0008.u0 = (int32) (word32) rdx_1114;
							word16 r9w_1128 = (word16) r8_1074.u2[(uint64) ((word32) rdx_1114 - 0x02)];
							if (edi_1097 != 0x00)
								r9w_1128 = __rol<word16,byte>(r9w_1128, 0x08);
							if ((word32) rdx_1114 + 0x02 > r10d_1084)
								goto l00000001800053A7;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
							uint64 rdx_1143 = (uint64) rcx->u0.t0008.u0;
							word16 r8w_1154 = (word16) r8_1074.u2[(uint64) ((word32) rdx_1143 - 0x02)];
							if (edi_1097 != 0x00)
								r8w_1154 = __rol<word16,byte>(r8w_1154, 0x08);
							if ((word32) rdx_1143 + 0x02 > r10d_1084)
								goto l00000001800053A7;
							rcx->u0.t0008.u0 = (int32) ((word32) rdx_1143 + 0x02);
							tLocC0.r0000 = (real32) fn000000018001DE90(r11w_1102);
							tLocC0.r0004 = (real32) fn000000018001DE90(r9w_1128);
							tLocC0.r0008 = (real32) fn000000018001DE90(r8w_1154);
							r10_1219 = r10_334;
							r11_1221 = (uint64) dwLoc0124_2440;
l000000018000546C:
							r8_1242 = r8_314;
							rcx_1244 = (uint64) ecx_250;
						}
						int32 r11d_1463 = (word32) r11_1221;
						word32 ecx_1289 = (word32) rcx_1244;
						if (r13d_2252 >= 0x00)
						{
							Eq_1342 eax_1297;
							if (r12_288 != 0x00)
								eax_1297 = r15d_2184 *s dwLoc0108_2448 + ecx_1289 + r13d_2252;
							else
								eax_1297 = (word32) rsi_367 + r13d_2252;
							rcx->u0.t0008.u0 = (int32) eax_1297;
							if (r8_1242 == 0x06 && fn000000018001D5C0(rcx, &tLoc98) == 0x00)
								goto l00000001800053A7;
						}
						if ((int64) dwLoc0118_2450 >= 0x00)
						{
							Eq_1342 eax_1353;
							if (r12_288 != 0x00)
								eax_1353 = r15d_2184 *s dwLocC8_2451 + ecx_250 + dwLoc0118_2450;
							else
								eax_1353 = dwLoc0118_2450 + esi_1786;
							rcx->u0.t0008.u0 = (int32) eax_1353;
							if (rax_296 == 0x06 && fn000000018001D5C0(rcx, &tLoc88) == 0x00)
								goto l00000001800053A7;
						}
						esi_1786 = (word32) rsi_367;
						if (rax_306 >= 0x00)
						{
							Eq_1342 eax_1416;
							if (r12_288 != 0x00)
								eax_1416 = r15d_2184 *s dwLocC4_2452 + ecx_250 + dwLoc011C_2449;
							else
								eax_1416 = dwLoc011C_2449 + esi_1786;
							rcx->u0.t0008.u0 = (int32) eax_1416;
							if (rax_323 == 0x06 && fn000000018001D5C0(rcx, &tLoc78) == 0x00)
								goto l00000001800053A7;
						}
						if (r11d_1463 >= 0x00)
						{
							Eq_1342 eax_1517;
							if (r12_288 != 0x00)
								eax_1517 = r15d_2184 *s dwLoc0104_2442 + ecx_250 + r11d_1463;
							else
								eax_1517 = (word32) rsi_367 + r11d_1463;
							rcx->u0.t0008.u0 = (int32) eax_1517;
							if (r10_1219 != 0x06)
							{
								word128 xmm0_1623;
								if (r10_1219 == 0x02)
								{
									Eq_137 rdx_1629;
									rdx_1629.u0 = rcx->u0.t0000.u0;
									if (rdx_1629 == 0x00)
										goto l00000001800053A7;
									Eq_1342 r10d_1642;
									r10d_1642.u0 = rcx->u0.t000C.u0;
									if (rcx->u0.t0008.u0 + 0x02 > r10d_1642)
										goto l00000001800053A7;
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
									uint64 r9_1648 = (uint64) rcx->u0.t0008.u0;
									Eq_1342 r11d_1655 = (&rcx->u0)[1];
									word16 r8w_1660 = (word16) rdx_1629.u2[(uint64) ((word32) r9_1648 - 0x02)];
									if (r11d_1655 != 0x00)
										r8w_1660 = __rol<word16,byte>(r8w_1660, 0x08);
									if ((word32) r9_1648 + 0x02 > r10d_1642)
										goto l00000001800053A7;
									Eq_1342 eax_1672 = (word32) r9_1648 + 0x02;
									rcx->u0.t0008.u0 = (int32) eax_1672;
									word16 dx_1685 = (word16) rdx_1629.u2[(uint64) ((word64) eax_1672 - 2)];
									if (r11d_1655 != 0x00)
										dx_1685 = __rol<word16,byte>(dx_1685, 0x08);
									real32 v67_1693[2] = __cvtdq2ps<int64[2],real32[2]>((word128) r8w_1660);
									int64 xmm0_1697[2] = (word128) dx_1685;
									real32 v69_1699[2] = __cvtdq2ps<int64[2],real32[2]>(xmm0_1697);
									xmm0_1623 = SEQ(SLICE(SEQ(SLICE(xmm0_1697, word64, 64), v69_1699), word96, 32), (real32) v69_1699 * 1.5259022e-05F + 0.5F);
									tLocF8.r0000 = (real32) v67_1693 * 1.5259022e-05F + 0.5F;
									goto l000000018000568C;
								}
								if (r10_1219 != 0x07)
									goto l0000000180005692;
								Eq_137 r8_1539;
								r8_1539.u0 = rcx->u0.t0000.u0;
								if (r8_1539 == 0x00)
									goto l00000001800053A7;
								Eq_1342 r9d_1552;
								r9d_1552.u0 = rcx->u0.t000C.u0;
								if (rcx->u0.t0008.u0 + 0x02 > r9d_1552)
									goto l00000001800053A7;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
								uint64 rdx_1558 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 r10d_1568 = (&rcx->u0)[1];
								word16 cx_1573 = (word16) r8_1539.u2[(uint64) ((word32) rdx_1558 - 0x02)];
								if (r10d_1568 != 0x00)
									cx_1573 = __rol<word16,byte>(cx_1573, 0x08);
								if ((word32) rdx_1558 + 0x02 > r9d_1552)
									goto l00000001800053A7;
								Eq_1342 eax_1585 = (word32) rdx_1558 + 0x02;
								rcx->u0.t0008.u0 = (int32) eax_1585;
								word16 r8w_1598 = (word16) r8_1539.u2[(uint64) ((word64) eax_1585 - 2)];
								if (r10d_1568 != 0x00)
									r8w_1598 = __rol<word16,byte>(r8w_1598, 0x08);
								tLocF8.r0000 = (real32) fn000000018001DE90(cx_1573);
								xmm0_1623 = fn000000018001DE90(r8w_1598);
l000000018000568C:
								tLocF8.r0004 = (real32) xmm0_1623;
								goto l0000000180005692;
							}
							if (fn000000018001D4E0(rcx, &tLocF8) != 0x00)
								goto l0000000180005692;
						}
						else
						{
l0000000180005692:
							if ((int64) dwLoc0120_2441 < 0x00)
							{
l00000001800057F8:
								if (rdx == null)
									goto l0000000180005C06;
								struct Eq_1278 * rdx_2095 = rdx->ptr0018;
								r11_1039 = (uint64) dwLoc0124_2440;
								if (rdx_2095 != null)
								{
									word32 eax_2112 = tLocC0.dw0008;
									rdx_2095[qwLocB0_2479 * 0x4C] = (struct Eq_1278) tLocC0.r0000;
									struct Eq_7376 * rcx_2104 = qwLocB0_2479 *s 0x4C;
									*(&rcx_2104->a0000->r0000 + 1 + rdx_2095) = (word64) eax_2112;
									rdx->ptr0018[rcx_2104 + (struct Eq_7396 *) 24] = (struct Eq_1278) tLocF8;
									rdx->ptr0018[rcx_2104 + (struct Eq_7396 *) 32] = (struct Eq_1278) tLocF0.t0000.r0000;
								}
								goto l0000000180005C15;
							}
							Eq_1342 eax_1795;
							if (r12_288 != 0x00)
								eax_1795 = r15d_2184 *s dwLoc0100_2443 + ecx_250 + dwLoc0120_2441;
							else
								eax_1795 = dwLoc0120_2441 + esi_1786;
							rcx->u0.t0008.u0 = (int32) eax_1795;
							if (r14_360 != 0x06)
							{
								word128 xmm0_1940;
								if (r14_360 == 0x02)
								{
									Eq_137 rdx_1946;
									rdx_1946.u0 = rcx->u0.t0000.u0;
									if (rdx_1946 == 0x00)
										goto l00000001800053A7;
									Eq_1342 r10d_1959;
									r10d_1959.u0 = rcx->u0.t000C.u0;
									if (rcx->u0.t0008.u0 + r14d_902 > r10d_1959)
										goto l00000001800053A7;
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + r14d_902);
									uint64 r9_1965 = (uint64) rcx->u0.t0008.u0;
									Eq_1342 r11d_1972 = (&rcx->u0)[1];
									word16 r8w_1977 = (word16) rdx_1946.u2[(uint64) ((word32) r9_1965 - 0x02)];
									if (r11d_1972 != 0x00)
										r8w_1977 = __rol<word16,byte>(r8w_1977, 0x08);
									if ((word32) r9_1965 + 0x02 > r10d_1959)
										goto l00000001800053A7;
									Eq_1342 eax_1989 = (word32) r9_1965 + 0x02;
									rcx->u0.t0008.u0 = (int32) eax_1989;
									word16 dx_2002 = (word16) rdx_1946.u2[(uint64) ((word64) eax_1989 - 2)];
									if (r11d_1972 != 0x00)
										dx_2002 = __rol<word16,byte>(dx_2002, 0x08);
									real32 v81_2010[2] = __cvtdq2ps<int64[2],real32[2]>((word128) r8w_1977);
									int64 xmm0_2014[2] = (word128) dx_2002;
									real32 v83_2016[2] = __cvtdq2ps<int64[2],real32[2]>(xmm0_2014);
									xmm0_1940 = SEQ(SLICE(SEQ(SLICE(xmm0_2014, word64, 64), v83_2016), word96, 32), (real32) v83_2016 * 1.5259022e-05F + 0.5F);
									tLocF0.r0000 = (real32) v81_2010 * 1.5259022e-05F + 0.5F;
									goto l00000001800057F2;
								}
								if (r14_360 != 0x07)
									goto l00000001800057F8;
								Eq_137 r8_1856;
								r8_1856.u0 = rcx->u0.t0000.u0;
								if (r8_1856 == 0x00)
									goto l00000001800053A7;
								Eq_1342 r9d_1869;
								r9d_1869.u0 = rcx->u0.t000C.u0;
								if (rcx->u0.t0008.u0 + 0x02 > r9d_1869)
									goto l00000001800053A7;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
								uint64 rdx_1875 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 r10d_1885 = (&rcx->u0)[1];
								word16 cx_1890 = (word16) r8_1856.u2[(uint64) ((word32) rdx_1875 - 0x02)];
								if (r10d_1885 != 0x00)
									cx_1890 = __rol<word16,byte>(cx_1890, 0x08);
								if ((word32) rdx_1875 + 0x02 > r9d_1869)
									goto l00000001800053A7;
								Eq_1342 eax_1902 = (word32) rdx_1875 + 0x02;
								rcx->u0.t0008.u0 = (int32) eax_1902;
								word16 r8w_1915 = (word16) r8_1856.u2[(uint64) ((word64) eax_1902 - 2)];
								if (r10d_1885 != 0x00)
									r8w_1915 = __rol<word16,byte>(r8w_1915, 0x08);
								tLocF0.r0000 = (real32) fn000000018001DE90(cx_1890);
								xmm0_1940 = fn000000018001DE90(r8w_1915);
l00000001800057F2:
								tLocF0.r0004 = (real32) xmm0_1940;
								goto l00000001800057F8;
							}
							if (fn000000018001D4E0(rcx, &tLocF0) != 0x00)
								goto l00000001800057F8;
						}
						goto l00000001800053A7;
					}
					if (dwArg28 >= 0x0C)
					{
						Eq_6667 tLocA8;
						tLocA8.qw0000 = 0x00;
						tLocA8.dw0008 = 0x00;
						Eq_6678 tLoc68;
						tLoc68.qw0000 = 0x00;
						tLoc68.dw0008 = 0x00;
						Eq_6689 tLocE8 = (Eq_6689) 0x00;
						Eq_6695 tLocE0 = (Eq_6695) 0x00;
						if (fn000000018001D5C0(rcx, &tLocA8) == 0x00)
							goto l00000001800053A7;
						if (r13d_2252 >= 0x00)
						{
							Eq_1342 eax_426;
							if (r12_288 != 0x00)
								eax_426 = r15d_2184 *s dwLoc0108_2448 + ecx_250 + r13d_2252;
							else
								eax_426 = (word32) rsi_367 + r13d_2252;
							rcx->u0.t0008.u0 = (int32) eax_426;
							if (r8_314 == 0x06 && fn000000018001D5C0(rcx, &tLoc68) == 0x00)
								goto l00000001800053A7;
						}
						if (r11d_455 >= 0x00)
						{
							Eq_1342 eax_492;
							if (r12_288 != 0x00)
								eax_492 = r15d_2184 *s dwLoc0104_2442 + ecx_250 + r11d_455;
							else
								eax_492 = (word32) rsi_367 + r11d_455;
							rcx->u0.t0008.u0 = (int32) eax_492;
							if (r10_1219 != 0x06)
							{
								word128 xmm0_593;
								if (r10_1219 == 0x02)
								{
									Eq_137 rdx_599;
									rdx_599.u0 = rcx->u0.t0000.u0;
									if (rdx_599 == 0x00)
										goto l00000001800053A7;
									Eq_1342 r10d_612;
									r10d_612.u0 = rcx->u0.t000C.u0;
									if (rcx->u0.t0008.u0 + 0x02 > r10d_612)
										goto l00000001800053A7;
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
									uint64 r9_618 = (uint64) rcx->u0.t0008.u0;
									Eq_1342 r11d_625 = (&rcx->u0)[1];
									word16 r8w_630 = (word16) rdx_599.u2[(uint64) ((word32) r9_618 - 0x02)];
									if (r11d_625 != 0x00)
										r8w_630 = __rol<word16,byte>(r8w_630, 0x08);
									if ((word32) r9_618 + 0x02 > r10d_612)
										goto l00000001800053A7;
									Eq_1342 eax_642 = (word32) r9_618 + 0x02;
									rcx->u0.t0008.u0 = (int32) eax_642;
									word16 dx_655 = (word16) rdx_599.u2[(uint64) ((word64) eax_642 - 2)];
									if (r11d_625 != 0x00)
										dx_655 = __rol<word16,byte>(dx_655, 0x08);
									real32 v54_663[2] = __cvtdq2ps<int64[2],real32[2]>((word128) r8w_630);
									int64 xmm0_667[2] = (word128) dx_655;
									real32 v57_669[2] = __cvtdq2ps<int64[2],real32[2]>(xmm0_667);
									xmm0_593 = SEQ(SLICE(SEQ(SLICE(xmm0_667, word64, 64), v57_669), word96, 32), (real32) v57_669 * 1.5259022e-05F + 0.5F);
									tLocE8.r0000 = (real32) v54_663 * 1.5259022e-05F + 0.5F;
									goto l0000000180005A41;
								}
								if (r10_1219 != 0x07)
									goto l0000000180005A47;
								Eq_137 r8_509;
								r8_509.u0 = rcx->u0.t0000.u0;
								if (r8_509 == 0x00)
									goto l00000001800053A7;
								Eq_1342 r9d_522;
								r9d_522.u0 = rcx->u0.t000C.u0;
								if (rcx->u0.t0008.u0 + 0x02 > r9d_522)
									goto l00000001800053A7;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
								uint64 rdx_528 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 r10d_538 = (&rcx->u0)[1];
								word16 cx_543 = (word16) r8_509.u2[(uint64) ((word32) rdx_528 - 0x02)];
								if (r10d_538 != 0x00)
									cx_543 = __rol<word16,byte>(cx_543, 0x08);
								if ((word32) rdx_528 + 0x02 > r9d_522)
									goto l00000001800053A7;
								Eq_1342 eax_555 = (word32) rdx_528 + 0x02;
								rcx->u0.t0008.u0 = (int32) eax_555;
								word16 r8w_568 = (word16) r8_509.u2[(uint64) ((word64) eax_555 - 2)];
								if (r10d_538 != 0x00)
									r8w_568 = __rol<word16,byte>(r8w_568, 0x08);
								tLocE8.r0000 = (real32) fn000000018001DE90(cx_543);
								xmm0_593 = fn000000018001DE90(r8w_568);
l0000000180005A41:
								tLocE8.r0004 = (real32) xmm0_593;
								goto l0000000180005A47;
							}
							if (fn000000018001D4E0(rcx, &tLocE8) != 0x00)
								goto l0000000180005A47;
						}
						else
						{
l0000000180005A47:
							if ((int64) dwLoc0120_2441 < 0x00)
							{
l0000000180005BAD:
								if (rdx != null)
								{
									struct Eq_1278 * rdx_1035 = rdx->ptr0018;
									r11_1039 = (uint64) dwLoc0124_2440;
									if (rdx_1035 != null)
									{
										word32 eax_1053 = tLocA8.dw0008;
										rdx_1035[qwLocB0_2479 * 0x4C] = (struct Eq_1278) tLocA8.r0000;
										struct Eq_7396 * rcx_1045 = qwLocB0_2479 *s 0x4C;
										*(&rcx_1045->r0000 + 1 + rdx_1035) = (word64) eax_1053;
										rdx->ptr0018[rcx_1045 + (struct Eq_7396 *) 24] = (struct Eq_1278) tLocE8;
										rdx->ptr0018[rcx_1045 + (struct Eq_7396 *) 32] = (struct Eq_1278) tLocE0.t0000.r0000;
									}
								}
								else
								{
l0000000180005C06:
									r11_1039 = (uint64) dwLoc0124_2440;
								}
l0000000180005C15:
								r9_1069 = r9_282;
								r10_1219 = r10_334;
								r8_1242 = r8_314;
								rcx_1244 = (uint64) ecx_250;
								r11_1221 = r11_1039;
								goto l0000000180005C21;
							}
							Eq_1342 eax_749;
							if (r12_288 != 0x00)
								eax_749 = r15d_2184 *s dwLoc0100_2443 + ecx_250 + dwLoc0120_2441;
							else
								eax_749 = dwLoc0120_2441 + esi_1786;
							rcx->u0.t0008.u0 = (int32) eax_749;
							if (r14_360 != 0x06)
							{
								word128 xmm0_886;
								if (r14_360 == 0x02)
								{
									Eq_137 rdx_892;
									rdx_892.u0 = rcx->u0.t0000.u0;
									if (rdx_892 == 0x00)
										goto l00000001800053A7;
									Eq_1342 r10d_906;
									r10d_906.u0 = rcx->u0.t000C.u0;
									if (rcx->u0.t0008.u0 + r14d_902 > r10d_906)
										goto l00000001800053A7;
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + r14d_902);
									uint64 r9_912 = (uint64) rcx->u0.t0008.u0;
									Eq_1342 r11d_919 = (&rcx->u0)[1];
									word16 r8w_924 = (word16) rdx_892.u2[(uint64) ((word32) r9_912 - 0x02)];
									if (r11d_919 != 0x00)
										r8w_924 = __rol<word16,byte>(r8w_924, 0x08);
									if ((word32) r9_912 + 0x02 > r10d_906)
										goto l00000001800053A7;
									Eq_1342 eax_936 = (word32) r9_912 + 0x02;
									rcx->u0.t0008.u0 = (int32) eax_936;
									word16 dx_949 = (word16) rdx_892.u2[(uint64) ((word64) eax_936 - 2)];
									if (r11d_919 != 0x00)
										dx_949 = __rol<word16,byte>(dx_949, 0x08);
									real32 v97_957[2] = __cvtdq2ps<int64[2],real32[2]>((word128) r8w_924);
									int64 xmm0_961[2] = (word128) dx_949;
									real32 v99_963[2] = __cvtdq2ps<int64[2],real32[2]>(xmm0_961);
									xmm0_886 = SEQ(SLICE(SEQ(SLICE(xmm0_961, word64, 64), v99_963), word96, 32), (real32) v99_963 * 1.5259022e-05F + 0.5F);
									tLocE0.r0000 = (real32) v97_957 * 1.5259022e-05F + 0.5F;
									goto l0000000180005BA7;
								}
								if (r14_360 != 0x07)
									goto l0000000180005BAD;
								Eq_137 r8_802;
								r8_802.u0 = rcx->u0.t0000.u0;
								if (r8_802 == 0x00)
									goto l00000001800053A7;
								Eq_1342 r9d_815;
								r9d_815.u0 = rcx->u0.t000C.u0;
								if (rcx->u0.t0008.u0 + 0x02 > r9d_815)
									goto l00000001800053A7;
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
								uint64 rdx_821 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 r10d_831 = (&rcx->u0)[1];
								word16 cx_836 = (word16) r8_802.u2[(uint64) ((word32) rdx_821 - 0x02)];
								if (r10d_831 != 0x00)
									cx_836 = __rol<word16,byte>(cx_836, 0x08);
								if ((word32) rdx_821 + 0x02 > r9d_815)
									goto l00000001800053A7;
								Eq_1342 eax_848 = (word32) rdx_821 + 0x02;
								rcx->u0.t0008.u0 = (int32) eax_848;
								word16 r8w_861 = (word16) r8_802.u2[(uint64) ((word64) eax_848 - 2)];
								if (r10d_831 != 0x00)
									r8w_861 = __rol<word16,byte>(r8w_861, 0x08);
								tLocE0.r0000 = (real32) fn000000018001DE90(cx_836);
								xmm0_886 = fn000000018001DE90(r8w_861);
l0000000180005BA7:
								tLocE0.r0004 = (real32) xmm0_886;
								goto l0000000180005BAD;
							}
							if (fn000000018001D4E0(rcx, &tLocE0) != 0x00)
								goto l0000000180005BAD;
						}
l00000001800053A7:
						rax_2188 = 0x00;
						return (word32) rax_2188;
					}
l0000000180005C21:
					rcx->u0.t0008.u0 = (word32) dwArg28 + esi_1786;
					++qwLocB0_2479;
					r15d_2184 = (word32) r15d_2184 + 1;
				} while (r15d_2184 < r8d);
			}
			rax_2188 = 0x01;
			return (word32) rax_2188;
		}
	}
	eax_285 = 0x00;
	goto l00000001800052D4;
}

// 0000000180005C80: Register word32 fn0000000180005C80(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register Eq_1265 r8d, Register Eq_1342 r9d, Stack Eq_6279 dwArg28, Stack (ptr64 Eq_7776) qwArg30, Stack uint32 tArg38)
// Called from:
//      fn000000018001B7D0
word32 fn0000000180005C80(union Eq_3676 * rcx, struct Eq_1142 * rdx, Eq_1265 r8d, Eq_1342 r9d, Eq_6279 dwArg28, struct Eq_7776 * qwArg30, uint32 tArg38)
{
	word64 r8;
	r8d = (word32) r8;
	word64 r9;
	r9d = (word32) r9;
	Eq_483 ebx_155;
	ebx_155.u0 = tArg38.u0;
	uint64 rax_1005;
	if (ebx_155 == 0x00 || (r9d == 0x00 || (r8d == 0x00 || dwArg28 == 0x00)))
	{
l0000000180006216:
		rax_1005 = 0x01;
		return (word32) rax_1005;
	}
	rcx->u0.t0008.u0 = (int32) r9d;
	Eq_137 r11_62;
	r11_62.u0 = rcx->u0.t0000.u0;
	if (r11_62 != 0x00)
	{
		Eq_1342 r8d_74;
		r8d_74.u0 = rcx->u0.t000C.u0;
		if ((word64) r9d + 4 > r8d_74)
			goto l000000018000622D;
		uint32 esi_124 = (uint32) r11_62.u2[(uint64) r9d];
		Eq_1342 edi_83 = (&rcx->u0)[1];
		if (edi_83 != 0x00)
			esi_124 = esi_124 >> 0x18 | esi_124 >> 0x08 & 0xFF00 | (esi_124 & 0xFF00) << 0x08 | esi_124 << 0x18;
		if (esi_124 != 0x41646170)
		{
l0000000180005DF6:
			Eq_137 r13_1001;
			r13_1001.u0 = 0x00;
			Eq_137 qwLoc68_1137;
			qwLoc68_1137.u0 = 0x00;
			if (ebx_155 != 0x00)
			{
				Eq_137 rax_256 = fn0000000180023684((uint64) ebx_155);
				r13_1001 = rax_256;
				qwLoc68_1137 = rax_256;
				if (rax_256 == 0x00)
					goto l000000018000622D;
			}
			if (fn0000000180003B40(rcx, r13_1001, ebx_155) == 0x00)
			{
l0000000180006225:
				fn000000018002367C(r13_1001);
				goto l000000018000622D;
			}
			Eq_486 rdi_303;
			rdi_303.u1 = (uint64) (r8d *s dwArg28);
			Eq_734 edi_304 = (word32) rdi_303;
			tArg38.t0000.u0 = (int32) edi_304;
			Eq_137 rsi_331;
			if (esi_124 == 0x41646170)
			{
				if (r13_1001 != 0x00)
				{
					if (ebx_155 == 0x00 || edi_304 == 0x00)
						goto l0000000180006225;
					Eq_137 rax_392 = fn0000000180023684((uint64) edi_304);
					rsi_331 = rax_392;
					if (rax_392 != 0x00)
					{
						memset(rax_392, 0, edi_304);
						fn0000000180021580(r13_1001, rax_392, ebx_155, edi_304);
						goto l0000000180005EF5;
					}
					goto l0000000180006225;
				}
			}
			else if (r13_1001 != 0x00)
			{
				if (ebx_155 != 0x00 && edi_304 != 0x00)
				{
					Eq_137 rax_324 = fn0000000180023684(rdi_303);
					rsi_331 = rax_324;
					if (rax_324 != 0x00)
					{
						memset(rax_324, 0, (size_t) rdi_303);
						Eq_8122 tLoc98;
						tLoc98.t0000.u0 = (int32) ebx_155;
						word32 eax_369 = fn000000018001E550(rax_324, &tArg38, r13_1001, &tLoc98);
						edi_304.u0 = tArg38.t0000.u0;
						if (edi_304 != 0x00 && eax_369 == 0x00)
						{
l0000000180005EF5:
							if (rsi_331 != 0x00)
							{
								Eq_7983 tLoc90;
								tLoc90.dw0010 = 0x00;
								tLoc90.t0000.u0 = (byte *) rsi_331;
								tLoc90.t000C.u0 = (int32) edi_304;
								tLoc90.dw0008 = 0x00;
								if (rdx == null || fn0000000180001ED0(rdx, r8d) != 0x00)
								{
									int32 ecx_499 = qwArg30->dw0000;
									uint64 r8_1720 = 0xFFFFFFFF;
									uint64 r9_1723 = 0xFFFFFFFF;
									uint64 rsi_1726 = 0xFFFFFFFF;
									uint64 r13_1730 = 0xFFFFFFFF;
									if (ecx_499 > 0x00)
									{
										struct Eq_8038 * rax_505 = (struct Eq_8038 *) (&qwArg30->dw0000 + 3);
										uint64 rdx_508 = (uint64) ecx_499;
										uint64 r8_1733 = 0xFFFFFFFF;
										uint64 r9_1738 = 0xFFFFFFFF;
										uint64 rsi_1743 = 0xFFFFFFFF;
										uint64 r13_1748 = 0xFFFFFFFF;
										do
										{
											word32 r13d_521 = (word32) r13_1748;
											word32 esi_518 = (word32) rsi_1743;
											if (rax_505->dw0008 == 0x02)
											{
												int32 ecx_515 = rax_505->dw0000;
												if (ecx_515 >= 0x0C)
												{
													if (esi_518 == ~0x00)
													{
														rsi_1743 = (uint64) ecx_515;
														r8_1733 = (uint64) rax_505->dw0004;
													}
													else if (r13d_521 == ~0x00)
													{
														r13_1748 = (uint64) ecx_515;
														r9_1738 = (uint64) rax_505->dw0004;
													}
												}
											}
											++rax_505;
											--rdx_508;
											r8_1720 = r8_1733;
											r9_1723 = r9_1738;
											rsi_1726 = rsi_1743;
											r13_1730 = r13_1748;
										} while (rdx_508 != 0x00);
									}
									int32 r13d_1097 = (word32) r13_1730;
									word32 r9d_567 = (word32) r9_1723;
									word32 r8d_557 = (word32) r8_1720;
									word32 esi_553 = (word32) rsi_1726;
									Eq_1265 r14d_1118;
									r14d_1118.u0 = 0x00;
									uint64 r15_581 = 0x00;
									if (r8d != 0x00)
									{
										int64 rbx_1061 = (int64) esi_553;
										int64 r10_562 = (int64) r8d_557;
										int64 r11_572 = (int64) r9d_567;
										struct Eq_8091 * rdi_582 = null;
										Eq_6279 eax_1060 = dwArg28;
										Eq_1265 ecx_1119 = r8d;
										int64 r10_1090 = r10_562;
										int64 r11_1113 = r11_572;
										do
										{
											word32 r10d_639 = (word32) r10_1090;
											word32 r15d_963 = (word32) r15_581;
											if (eax_1060 >= 0x0C)
											{
												Eq_8111 tLoc60;
												tLoc60.qw0000 = 0x00;
												tLoc60.dw0008 = 0x00;
												tLoc98 = (Eq_8122) 0x00;
												Eq_8128 tLoc78 = (Eq_8128) 0x00;
												if (fn000000018001D5C0(&tLoc90, &tLoc60) == 0x00)
													break;
												ptr64 rdx_631;
												uint64 r9_1729;
												word32 ebx_654;
												uint64 r8_671;
												if (rbx_1061 >= 0x00)
												{
													rcx->u0.t0008.u0 = (int32) ((word32) r15_581 + esi_553);
													if (r10_1090 == 0x06)
													{
														if (fn000000018001D4E0(&tLoc90, &tLoc98) == 0x00)
															break;
														goto l00000001800060D0;
													}
													if (r10_1090 != 0x02)
														goto l00000001800060D0;
													rdx_631 = tLoc90.ptr0000;
													if (rdx_631 == null)
														break;
													uint64 r8_641 = (uint64) (tLoc90.dw0008 + r10d_639);
													r9_1729 = (uint64) tLoc90.dw000C;
													up32 r8d_644 = (word32) r8_641;
													up32 r9d_645 = (word32) r9_1729;
													if (r8d_644 > r9d_645)
														break;
													cu16 r11w_659 = (cu16) *((word64) (uint64) ((word32) r8_641 - 0x02) + rdx_631);
													ebx_654 = tLoc90.dw0010;
													if (ebx_654 != 0x00)
														r11w_659 = r11w_659 >> 0x08 | r11w_659 << 0x08;
													r8_671 = (uint64) (r8d_644 + 0x02);
													up32 r8d_672 = (word32) r8_671;
													if (r8d_672 > r9d_645)
														break;
													tLoc90.dw0008 = r8d_672;
													cu16 r10w_688 = (cu16) *((word64) (uint64) ((word32) r8_671 - 0x02) + rdx_631);
													if (ebx_654 != 0x00)
														r10w_688 = r10w_688 >> 0x08 | r10w_688 << 0x08;
													real32 v51_708 = (real32) __cvtdq2ps<int64[2],real32[2]>((word128) r11w_659) * 1.5259022e-05F;
													real32 v56_717 = (real32) __cvtdq2ps<int64[2],real32[2]>((word128) r10w_688) * 1.5259022e-05F;
													tLoc98.r0000 = v51_708 + 0.5F;
													tLoc98.r0004 = v56_717 + 0.5F;
													r11_1113 = r11_572;
												}
												else
												{
l00000001800060D0:
													rdx_631 = tLoc90.ptr0000;
													r8_671 = (uint64) tLoc90.dw0008;
													r9_1729 = (uint64) tLoc90.dw000C;
													ebx_654 = tLoc90.dw0010;
												}
												up32 r9d_804 = (word32) r9_1729;
												if (r13d_1097 >= 0x00)
												{
													rcx->u0.t0008.u0 = (int32) ((word32) r15_581 + r13d_1097);
													if (r11_1113 == 0x06)
													{
														if (fn000000018001D4E0(&tLoc90, &tLoc78) == 0x00)
															break;
													}
													else if (r11_1113 == 0x02)
													{
														if (rdx_631 == null)
															break;
														uint64 r10_802 = (uint64) ((word32) r8_671 + 0x02);
														if ((word32) r10_802 > r9d_804)
															break;
														cu16 r8w_820 = (cu16) *((word64) (uint64) ((word32) r10_802 - 0x02) + rdx_631);
														if (ebx_654 != 0x00)
															r8w_820 = r8w_820 >> 0x08 | r8w_820 << 0x08;
														up32 eax_833 = (word32) r10_802 + 0x02;
														if (eax_833 > r9d_804)
															break;
														cu16 dx_848 = (cu16) *((word64) (uint64) (eax_833 + ~0x01) + rdx_631);
														if (ebx_654 != 0x00)
															dx_848 = dx_848 >> 0x08 | dx_848 << 0x08;
														real32 v65_869 = (real32) __cvtdq2ps<int64[2],real32[2]>((word128) r8w_820) * 1.5259022e-05F;
														real32 v69_878 = (real32) __cvtdq2ps<int64[2],real32[2]>((word128) dx_848) * 1.5259022e-05F;
														tLoc78.r0000 = v65_869 + 0.5F;
														tLoc78.r0004 = v69_878 + 0.5F;
													}
												}
												rbx_1061 = (int64) esi_553;
												if (rdx != null)
												{
													struct Eq_1278 * rcx_930 = rdx->ptr0018;
													if (rcx_930 != null)
													{
														*(rdi_582 + rcx_930) = tLoc60.r0000;
														*(rdi_582->a0008 + rcx_930) = (word64) tLoc60.dw0008;
														*(rdi_582->a0008 + 4 + rdx->ptr0018) = (word64) tLoc98;
														*(rdi_582->a0008 + 6 + rdx->ptr0018) = (word64) tLoc78;
													}
												}
												r10_1090 = r10_562;
												eax_1060 = dwArg28;
												ecx_1119 = r8d;
											}
											r15_581 = (uint64) ((word32) eax_1060 + r15d_963);
											tLoc90.dw0008 = (word32) r15_581;
											r14d_1118 = (word32) r14d_1118 + 1;
											++rdi_582;
										} while (r14d_1118 < ecx_1119);
									}
									r13_1001 = qwLoc68_1137;
								}
								fn000000018002367C(r13_1001);
								goto l0000000180006216;
							}
							goto l0000000180006225;
						}
						fn000000018002367C(rax_324);
					}
				}
				goto l0000000180006225;
			}
			goto l000000018000622D;
		}
		uint64 rax_134 = (uint64) ((word64) r9d + 8);
		rcx->u0.t0008.u0 = (int32) (word32) rax_134;
		uint64 r10_139 = (uint64) ((word32) rax_134 + 0x04);
		Eq_1342 r10d_140 = (word32) r10_139;
		if (r10d_140 > r8d_74)
			goto l000000018000622D;
		rcx->u0.t0008.u0 = (int32) r10d_140;
		ebx_155 = r11_62.u2[(uint64) ((word32) r10_139 - 0x04)];
		if (edi_83 != 0x00)
			ebx_155 = ebx_155 >> 0x18 | ebx_155 >> 0x08 & 0xFF00 | (ebx_155 & 0xFF00) << 0x08 | ebx_155 << 0x18;
		if ((word64) r10d_140 + 4 > r8d_74)
			goto l000000018000622D;
		rcx->u0.t0008.u0 = (int32) ((word64) r10d_140 + 4);
		if ((word64) r10d_140 + 8 > r8d_74)
			goto l000000018000622D;
		rcx->u0.t0008.u0 = (int32) ((word64) r10d_140 + 8);
		if ((word64) r10d_140 + 0x0C <= r8d_74)
		{
			rcx->u0.t0008.u0 = (int32) ((word64) r10d_140 + 0x0C);
			if ((word64) r10d_140 + 16 > r8d_74)
				goto l000000018000622D;
			rcx->u0.t0008.u0 = (int32) ((word64) r10d_140 + 16);
			if ((word64) r10d_140 + 20 > r8d_74)
				goto l000000018000622D;
			rcx->u0.t0008.u0 = (int32) ((word64) r10d_140 + 20);
			if ((word64) r10d_140 + 24 > r8d_74)
				goto l000000018000622D;
			rcx->u0.t0008.u0 = (int32) ((word64) r9d + 36);
			goto l0000000180005DF6;
		}
	}
l000000018000622D:
	rax_1005 = 0x00;
	return (word32) rax_1005;
}

// 0000000180006250: Register word32 fn0000000180006250(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register (ptr64 Eq_8449) r8)
// Called from:
//      fn000000018001B7D0
word32 fn0000000180006250(union Eq_3676 * rcx, struct Eq_1142 * rdx, struct Eq_8449 * r8)
{
	if (rdx == null || r8 == null)
		return 0x00;
	if (r8->dw0000 <= 0x00)
		return 0x01;
	Eq_1342 eax_31;
	eax_31.u0 = r8->t0004.u0;
	if (eax_31 == 0x00)
		return 0x01;
	rcx->u0.t0008.u0 = (int32) eax_31;
	uint32 r12d_49 = SLICE(r8->dw0000 *64 ~0x55555554, word32, 32) >> 0x01;
	if (r12d_49 != 0x00 && rdx->ptr0008 == null)
	{
		uint64 rax_59 = (uint64) fn0000000180001E80(rdx, (uint64) r12d_49);
		if ((word32) rax_59 == 0x00)
			return (word32) rax_59;
	}
	int64 rsi_82 = (int64) rdx->dw00E0;
	uint32 ebp_255 = 0x00;
	int32 esi_205 = (word32) rsi_82;
	uint64 rax_167;
	if (r12d_49 != 0x00)
	{
		struct Eq_8529 * r10_224 = rsi_82 * 0x14;
		do
		{
			Eq_137 rdx_99;
			rdx_99.u0 = rcx->u0.t0000.u0;
			if (rdx_99 == 0x00)
			{
l0000000180006410:
				rax_167 = 0x00;
				return (word32) rax_167;
			}
			Eq_1342 r8d_112;
			r8d_112.u0 = rcx->u0.t000C.u0;
			if (rcx->u0.t0008.u0 + 0x02 > r8d_112)
				goto l0000000180006410;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
			uint64 r9_118 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 r14d_125 = (&rcx->u0)[1];
			word16 r11w_130 = (word16) rdx_99.u2[(uint64) ((word32) r9_118 - 0x02)];
			if (r14d_125 != 0x00)
				r11w_130 = __rol<word16,byte>(r11w_130, 0x08);
			if ((word32) r9_118 + 0x02 > r8d_112)
				goto l0000000180006410;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
			uint64 r15_145 = (uint64) rcx->u0.t0008.u0;
			word16 r9w_156 = (word16) rdx_99.u2[(uint64) ((word32) r15_145 - 0x02)];
			if (r14d_125 != 0x00)
				r9w_156 = __rol<word16,byte>(r9w_156, 0x08);
			if ((word32) r15_145 + 0x02 > r8d_112)
				goto l0000000180006410;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
			word16 dx_189 = (word16) rdx_99.u2[(uint64) (rcx->u0.t0008.u0 + ~0x01)];
			if (r14d_125 != 0x00)
				dx_189 = __rol<word16,byte>(dx_189, 0x08);
			struct Eq_1145 * rcx_197 = rdx->ptr0008;
			if (rcx_197 != null && esi_205 < rdx->dw0000)
			{
				*((char *) &rcx_197->dw0000 + (r10_224 + (word32 *) 4)) = (struct Eq_1145 *) ((word32) r11w_130 + r8->dw0010);
				*((char *) &rdx->ptr0008->dw0000 + (r10_224 + (word32 *) 8)) = (struct Eq_1145 *) ((word32) r9w_156 + r8->dw0010);
				*((char *) &rdx->ptr0008->dw0000 + (r10_224 + (word32 *) 0x0C)) = (struct Eq_1145 *) ((word32) dx_189 + r8->dw0010);
			}
			++esi_205;
			r10_224 = (struct Eq_8529 *) (r10_224->a000C + 2);
			++ebp_255;
		} while (ebp_255 < r12d_49);
	}
	uint64 rax_273 = (uint64) rcx->u0.t0008.u0;
	uint64 rcx_279 = (uint64) ((word32) rax_273 & ~0x03);
	Eq_1342 ecx_288 = (word32) rcx_279;
	Eq_1342 eax_289 = (word32) rcx_279 + 0x04;
	if (((byte) rax_273 & 0x03) <= 0x00)
		eax_289 = ecx_288;
	rcx->u0.t0008.u0 = (int32) eax_289;
	rax_167 = 0x01;
	return (word32) rax_167;
}

// 0000000180006420: Register word32 fn0000000180006420(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register (ptr64 Eq_8449) r8, Stack ui32 tArg10, Stack Eq_8693 tArg20)
// Called from:
//      fn000000018001B7D0
word32 fn0000000180006420(union Eq_3676 * rcx, struct Eq_1142 * rdx, struct Eq_8449 * r8, ui32 tArg10, Eq_8693 tArg20)
{
	uint64 rax_438;
	if (rdx != null && r8 != null)
	{
		Eq_486 rdi_45;
		rdi_45.u1 = (uint64) r8->dw0008;
		Eq_483 ebp_154 = r8->dw000C;
		Eq_734 edi_360 = (word32) rdi_45;
		if (ebp_154 == 0x00 || (edi_360 == 0x00 || r8->dw0000 <= 0x00))
		{
l0000000180006798:
			rax_438 = 0x01;
			return (word32) rax_438;
		}
		Eq_8724 r9_59;
		r9_59.u0 = (uint64) r8->t0004.u0;
		Eq_1342 r9d_60 = (word32) r9_59;
		if (r9d_60 == 0x00)
			goto l0000000180006798;
		rcx->u0.t0008.u0 = (int32) r9d_60;
		Eq_137 r11_66;
		r11_66.u0 = rcx->u0.t0000.u0;
		if (r11_66 == 0x00)
			goto l00000001800067AF;
		Eq_1342 r8d_76;
		r8d_76.u0 = rcx->u0.t000C.u0;
		if ((word32) r9_59 + 0x04 > r8d_76)
			goto l00000001800067AF;
		uint32 r13d_124 = (uint32) *(r9_59 + r11_66);
		Eq_1342 ebx_83 = (&rcx->u0)[1];
		if (ebx_83 != 0x00)
			r13d_124 = r13d_124 >> 0x18 | r13d_124 >> 0x08 & 0xFF00 | (r13d_124 & 0xFF00) << 0x08 | r13d_124 << 0x18;
		if (r13d_124 != 0x41646170)
		{
l000000018000659E:
			Eq_137 r12_241;
			r12_241.u0 = 0x00;
			if (ebp_154 != 0x00)
			{
				Eq_137 rax_251 = fn0000000180023684((uint64) ebp_154);
				r12_241 = rax_251;
				if (rax_251 == 0x00)
					goto l00000001800067AF;
			}
			if (fn0000000180003B40(rcx, r12_241, ebp_154) == 0x00)
			{
l00000001800067A7:
				fn000000018002367C(r12_241);
				goto l00000001800067AF;
			}
			tArg10.t0000.u0 = (int32) edi_360;
			Eq_137 rsi_327;
			if (r13d_124 == 0x41646170)
			{
				if (r12_241 != 0x00)
				{
					if (ebp_154 == 0x00 || edi_360 == 0x00)
						goto l00000001800067A7;
					Eq_137 rax_386 = fn0000000180023684(rdi_45);
					rsi_327 = rax_386;
					if (rax_386 != 0x00)
					{
						memset(rax_386, 0, (size_t) rdi_45);
						fn0000000180021580(r12_241, rax_386, ebp_154, edi_360);
						goto l00000001800066A3;
					}
					goto l00000001800067A7;
				}
			}
			else if (r12_241 != 0x00)
			{
				if (ebp_154 != 0x00 && edi_360 != 0x00)
				{
					Eq_137 rax_320 = fn0000000180023684(rdi_45);
					rsi_327 = rax_320;
					if (rax_320 != 0x00)
					{
						memset(rax_320, 0, (size_t) rdi_45);
						tArg20.u0 = (int32) ebp_154;
						word32 eax_365 = fn000000018001E550(rax_320, &tArg10, r12_241, &tArg20);
						edi_360.u0 = tArg10.t0000.u0;
						if (edi_360 != 0x00 && eax_365 == 0x00)
						{
l00000001800066A3:
							if (rsi_327 != 0x00)
							{
								uint32 ebp_466 = SLICE(r8->dw0000 *64 ~0x55555554, word32, 32) >> 0x01;
								if (ebp_466 == 0x00 || (rdx->ptr0008 != null || fn0000000180001E80(rdx, (uint64) ebp_466) != 0x00))
								{
									Eq_8923 r9_496;
									r9_496.u0 = (int64) rdx->dw00E0;
									Eq_8925 rbx_516;
									rbx_516.u0 = 0x00;
									if (ebp_466 != 0x00)
									{
										int64 r8_506 = r9_496 * 0x14;
										uint64 r10_590 = 0x00;
										uint64 rdx_540 = 0x02;
										do
										{
											word32 r10d_588 = (word32) r10_590;
											int32 r9d_551 = (word32) r9_496;
											word32 ebx_536 = (word32) rbx_516;
											Eq_734 edx_510 = (word32) rdx_540;
											if (edx_510 > edi_360)
												break;
											tArg10.w0000 = (word16) *(rbx_516 + rsi_327);
											if ((word64) edx_510 + 2 > edi_360)
												break;
											word16 r11w_563 = (word16) rsi_327.u2[(uint64) ((word32) rbx_516 + 0x02)];
											if ((word64) edx_510 + 4 > edi_360)
												break;
											rbx_516.u0 = (uint64) (ebx_536 + 0x06);
											rdx_540 = (uint64) ((word64) edx_510 + 6);
											word16 r13w_572 = (word16) rsi_327.u2[(uint64) ((word32) rbx_516 - 0x02)];
											struct Eq_1145 * rcx_546 = rdx->ptr0008;
											if (rcx_546 != null && r9d_551 < rdx->dw0000)
											{
												*((word32) &rcx_546->a0004[0] + r8_506) = (word32[]) ((word32) tArg10.w0000 + r8->dw0010);
												*((word32) &rdx->ptr0008->a0008[0] + r8_506) = (word32[]) ((word32) r11w_563 + r8->dw0010);
												*((word32) &rdx->ptr0008->a000C[0] + r8_506) = (word32[]) ((word32) r13w_572 + r8->dw0010);
											}
											r10_590 = (uint64) (r10d_588 + 0x01);
											r9_496.u1 = (uint64) (r9d_551 + 0x01);
											r8_506 += 0x14;
										} while ((word32) r10_590 < ebp_466);
									}
								}
								fn000000018002367C(r12_241);
								goto l0000000180006798;
							}
							goto l00000001800067A7;
						}
						fn000000018002367C(rax_320);
					}
				}
				goto l00000001800067A7;
			}
			goto l00000001800067AF;
		}
		uint64 rax_133 = (uint64) ((word32) r9_59 + 0x08);
		rcx->u0.t0008.u0 = (int32) (word32) rax_133;
		uint64 r10_138 = (uint64) ((word32) rax_133 + 0x04);
		Eq_1342 r10d_139 = (word32) r10_138;
		if (r10d_139 > r8d_76)
			goto l00000001800067AF;
		rcx->u0.t0008.u0 = (int32) r10d_139;
		ebp_154 = r11_66.u2[(uint64) ((word32) r10_138 - 0x04)];
		if (ebx_83 != 0x00)
			ebp_154 = ebp_154 >> 0x18 | ebp_154 >> 0x08 & 0xFF00 | (ebp_154 & 0xFF00) << 0x08 | ebp_154 << 0x18;
		if ((word64) r10d_139 + 4 > r8d_76)
			goto l00000001800067AF;
		rcx->u0.t0008.u0 = (int32) ((word64) r10d_139 + 4);
		if ((word64) r10d_139 + 8 > r8d_76)
			goto l00000001800067AF;
		rcx->u0.t0008.u0 = (int32) ((word64) r10d_139 + 8);
		if ((word64) r10d_139 + 0x0C <= r8d_76)
		{
			rcx->u0.t0008.u0 = (int32) ((word64) r10d_139 + 0x0C);
			if ((word64) r10d_139 + 16 > r8d_76)
				goto l00000001800067AF;
			rcx->u0.t0008.u0 = (int32) ((word64) r10d_139 + 16);
			if ((word64) r10d_139 + 20 <= r8d_76)
			{
				rcx->u0.t0008.u0 = (int32) ((word64) r10d_139 + 20);
				if ((word64) r10d_139 + 24 > r8d_76)
					goto l00000001800067AF;
				rcx->u0.t0008.u0 = (int32) ((word32) r9_59 + 0x24);
				goto l000000018000659E;
			}
		}
	}
l00000001800067AF:
	rax_438 = 0x00;
	return (word32) rax_438;
}

// 00000001800067D0: Register word32 fn00000001800067D0(Register (ptr64 Eq_3676) rcx, Register Eq_1756 rdx)
// Called from:
//      fn0000000180003C80
word32 fn00000001800067D0(union Eq_3676 * rcx, Eq_1756 rdx)
{
	uint32 ebp_109 = 0x00;
	Eq_137 rcx_17;
	rcx_17.u0 = rcx->u0.t0000.u0;
	if (rcx_17 != 0x00)
	{
		fn000000018002367C(rcx_17);
		rcx->u0.t0000.u0 = 0x00;
	}
	rcx->u0.t0008.u2 = 0x00;
	FILE * rax_35 = wfopen(rdx, &g_t80028734);
	uint64 rax_133;
	if (rax_35 == null)
	{
l0000000180006880:
		rax_133 = 0x00;
		return (word32) rax_133;
	}
	fseek(rax_35, 0, 2);
	Eq_734 eax_51 = ftell(rax_35);
	rcx->u0.t000C.u0 = (int32) eax_51;
	if (eax_51 != 0x00)
	{
		Eq_137 rax_59 = fn0000000180023684((uint64) eax_51);
		rcx->u0.t0000.u0 = (byte *) rax_59;
		if (rax_59 == 0x00)
		{
l000000018000687A:
			fclose(rax_35);
			goto l0000000180006880;
		}
		fseek(rax_35, 0, 0);
		Eq_734 ebx_81;
		ebx_81.u0 = rcx->u0.t000C.u0;
		if (fread(rcx->u0.t0000.u0, 0x01, ebx_81, rax_35) == ebx_81)
		{
			fclose(rax_35);
			Eq_137 rdx_91;
			rdx_91.u0 = rcx->u0.t0000.u0;
			if (rdx_91 != 0x00)
			{
				Eq_734 eax_101 = rcx->u0.t0008.u0 + 0x04;
				if (eax_101 <= ((rcx->u0).t000C).u0)
				{
					rcx->u0.t0008.u0 = (int32) eax_101;
					Eq_1342 eax_112 = rdx_91.u2[(uint64) ((word64) eax_101 - 4)];
					if ((&rcx->u0)[1] != 0x00)
						eax_112 = __bswap<word32>(eax_112);
					ebp_109 = (uint32) (eax_112 == 0x04034B50);
				}
			}
			fn0000000180003BA0(rcx);
			rax_133 = (uint64) ebp_109;
			return (word32) rax_133;
		}
		fn0000000180003BA0(rcx);
	}
	goto l000000018000687A;
}

// 00000001800068E0: void fn00000001800068E0(Register (ptr64 Eq_779) rcx)
// Called from:
//      fn0000000180003F40
void fn00000001800068E0(struct Eq_779 * rcx)
{
	if (rcx->ptr0040 != null)
	{
		int32 ebx_113 = 0x00;
		int32 r9d_180 = 0x00;
		if (rcx->dw0038 > 0x00)
		{
			struct Eq_1732 * r8_21 = null;
			do
			{
				struct Eq_899 * rax_24 = rcx->ptr0040;
				*((char *) &rax_24->a0000[0].u0 + (r8_21 + (struct Eq_75477 *) 0x0548)) = 0x3F800000;
				*((char *) &rax_24->a0000[0].u0 + (r8_21 + (struct Eq_75478 *) 0x0550)) = 0x00;
				*((char *) &rax_24->a0000[0].u1 + (r8_21 + (struct Eq_75481 *) 0x0558)) = 0x00;
				*((char *) &rax_24->a0000[0].u0 + (r8_21 + (struct Eq_75484 *) 0x055C)) = 0x3F800000;
				*((char *) &rax_24->a0000[0].u0 + (r8_21 + (struct Eq_75487 *) 0x0564)) = 0x00;
				*((char *) &rax_24->a0000[0].u1 + (r8_21 + (struct Eq_75490 *) 1388)) = 0x00;
				*((char *) &rax_24->a0000[0].u0 + (r8_21 + (struct Eq_75493 *) 0x0570)) = 0x3F800000;
				*((char *) &rax_24->a0000[0].u0 + (r8_21 + (struct Eq_75496 *) 1400)) = 0x00;
				*((char *) &rax_24->a0000[0].u1 + (r8_21 + (struct Eq_75499 *) 0x0580)) = 0x00;
				*((char *) &rax_24->a0000[0].u1 + (r8_21 + (struct Eq_75502 *) 1412)) = 0x3F800000;
				struct Eq_899 * rax_38 = rcx->ptr0040;
				*((char *) &rax_38->a0000[0].u0 + (r8_21 + (struct Eq_75505 *) 0x0588)) = 0x3F800000;
				*((char *) &rax_38->a0000[0].u0 + (r8_21 + (struct Eq_75508 *) 1424)) = 0x00;
				*((char *) &rax_38->a0000[0].u1 + (r8_21 + (struct Eq_75511 *) 0x0598)) = 0x00;
				*((char *) &rax_38->a0000[0].u0 + (r8_21 + (struct Eq_75514 *) 0x059C)) = 0x3F800000;
				*((char *) &rax_38->a0000[0].u0 + (r8_21 + (struct Eq_75517 *) 1444)) = 0x00;
				*((char *) &rax_38->a0000[0].u1 + (r8_21 + (struct Eq_75520 *) 0x05AC)) = 0x00;
				*((char *) &rax_38->a0000[0].u0 + (r8_21 + (struct Eq_75523 *) 0x05B0)) = 0x3F800000;
				*((char *) &rax_38->a0000[0].u0 + (r8_21 + (struct Eq_75526 *) 1464)) = 0x00;
				*((char *) &rax_38->a0000[0].u1 + (r8_21 + (struct Eq_75529 *) 0x05C0)) = 0x00;
				*((char *) &rax_38->a0000[0].u1 + (r8_21 + (struct Eq_75532 *) 0x05C4)) = 0x3F800000;
				int64 rax_50 = (int64) r9d_180;
				struct Eq_899 * rax_52 = rcx->ptr0040;
				fn000000018001DD00((char *) (rax_52->a0000 + 83) + 8 + rax_50 *s 0x05C8, (char *) (rax_52->a0000 + 84) + 8 + rax_50 *s 0x05C8);
				struct Eq_1732 * rcx_68 = g_ptr80030730;
				r8_21 += (struct Eq_75535 *) 0x05C8;
				*(r8_21 - (struct Eq_75539 *) 116 + rcx_68) = *(r8_21 - (struct Eq_75536 *) 0x00A8 + rcx_68);
				struct Eq_1732 * rcx_76 = g_ptr80030730;
				*(r8_21 - (struct Eq_75545 *) 100 + rcx_76) = *(r8_21 - (struct Eq_75542 *) 0x00A4 + rcx_76);
				struct Eq_1732 * rcx_81 = g_ptr80030730;
				*(r8_21 - (struct Eq_75551 *) 84 + rcx_81) = *(r8_21 - (struct Eq_75548 *) 0x00A0 + rcx_81);
				++r9d_180;
			} while (r9d_180 < rcx->dw0038);
		}
		int32 eax_116 = rcx->dw0038;
		if (eax_116 > 0x00)
		{
			struct Eq_9397 * rdi_106 = null;
			do
			{
				struct Eq_899 * r10_109 = rcx->ptr0040;
				int64 rcx_111 = (int64) *((char *) &r10_109->a0000[0].u1 + (rdi_106 + (struct Eq_75576 *) 1300));
				int32 ecx_112 = (word32) rcx_111;
				if (ecx_112 != ebx_113 && ecx_112 < eax_116)
				{
					if (ecx_112 < 0x00)
					{
						*((char *) &r10_109->a0000[0].u3 + (rdi_106 + (struct Eq_75555 *) 0x0588)) = *((char *) &r10_109->a0000[0].u3 + (rdi_106 + (struct Eq_75554 *) 0x0548));
						*((char *) &r10_109->a0000[0].u3 + (rdi_106 + (struct Eq_75561 *) 0x0598)) = *((char *) &r10_109->a0000[0].u3 + (rdi_106 + (struct Eq_75558 *) 0x0558));
						*((char *) &r10_109->a0000[0].u3 + (rdi_106 + (struct Eq_75567 *) 1448)) = *((char *) &r10_109->a0000[0].u3 + (rdi_106 + (struct Eq_75564 *) 0x0568));
						*((char *) &r10_109->a0000[0].u3 + (rdi_106 + (struct Eq_75573 *) 1464)) = *((char *) &r10_109->a0000[0].u3 + (rdi_106 + (struct Eq_75570 *) 1400));
					}
					else
					{
						int64 rax_124 = (int64) ebx_113;
						fn000000018001DBF0(r10_109->a0588 + rax_124 *s 0x05C8, r10_109->a0588 + rcx_111 *s 0x05C8, (char *) (r10_109->a0000 + 84) + 8 + rax_124 *s 0x05C8);
					}
				}
				eax_116 = rcx->dw0038;
				++ebx_113;
				++rdi_106;
			} while (ebx_113 < eax_116);
		}
	}
}

// 0000000180006B30: void fn0000000180006B30(Register (ptr64 Eq_779) rcx)
// Called from:
//      fn0000000180003F40
void fn0000000180006B30(struct Eq_779 * rcx)
{
	ptr64 fp;
	ui64 rax_13 = g_qw80030008 ^ fp - 0x0248;
	if (rcx->ptr0040 != null && rcx->ptr0030 != null)
	{
		int32 esi_156 = 0x00;
		if (rcx->dw0038 > 0x00)
		{
			Eq_9512 r14_151;
			r14_151.u0 = 0x051C;
			do
			{
				word64 qwLoc01D8;
				memset(&qwLoc01D8, 0, 0x0104);
				union Eq_9514 * rdx_52 = (union Eq_9514 *) ((char *) (rcx->ptr0040->a0000 + 48) + 0x0C + (int64) esi_156 *s 0x05C8);
				int64 rcx_54 = &qwLoc01D8 - rdx_52;
				byte al_60;
				do
				{
					al_60 = rdx_52->u0;
					(&rdx_52->u0)[rcx_54] = al_60;
					rdx_52 = (union Eq_9514 *) ((char *) rdx_52 + 1);
				} while (al_60 != 0x00);
				byte al_70 = (byte) qwLoc01D8;
				if (al_70 == 0x23)
				{
					struct Eq_9538 * rcx_73 = (struct Eq_9538 *) ((char *) &qwLoc01D8 + 1);
					byte al_78;
					do
					{
						al_78 = rcx_73->b0000;
						rcx_73->bFFFFFFFF = al_78;
						++rcx_73;
					} while (al_78 != 0x00);
					al_70 = (byte) qwLoc01D8;
				}
				int32 ebx_102;
				if (al_70 != 0x00)
				{
					ebx_102 = 0x00;
					if (rcx->dw0028 > 0x00)
					{
						do
						{
							if (_stricmp(&(rcx->ptr0030->a0010 + 27)->u0 + (int64) ebx_102 *64 0x00BE, &qwLoc01D8) == 0x00)
								goto l0000000180006C30;
							++ebx_102;
						} while (ebx_102 < rcx->dw0028);
					}
				}
				ebx_102 = ~0x00;
l0000000180006C30:
				*(r14_151 + rcx->ptr0040) = (word64) ebx_102;
				++esi_156;
				r14_151 = (word64) r14_151 + 0x05C8;
			} while (esi_156 < rcx->dw0038);
		}
		int32 r8d_170 = 0x00;
		if (rcx->dw0028 > 0x00)
		{
			Eq_9562 r10_174;
			r10_174.u0 = 0x02F0;
			do
			{
				Eq_9588 rax_181;
				rax_181.u0 = (int64) rcx->dw0038;
				word32 edx_203 = 0x00;
				Eq_9588 rcx_185;
				rcx_185.u1 = 0x00;
				if ((word32) rax_181 > 0x00)
				{
					struct Eq_9576 * rax_194 = (struct Eq_9576 *) ((char *) (rcx->ptr0040->a0000 + 81) + 0x0C);
					do
					{
						if (rax_194->dw0000 == r8d_170)
						{
							*(r10_174 + rcx->ptr0030) = (word64) edx_203;
							break;
						}
						++edx_203;
						rcx_185 = (word64) rcx_185 + 1;
						++rax_194;
					} while (rcx_185 < rax_181);
				}
				++r8d_170;
				r10_174 = (word64) r10_174 + 760;
			} while (r8d_170 < rcx->dw0028);
		}
		int32 r10d_230 = 0x00;
		if (rcx->dw0028 > 0x00)
		{
			struct Eq_782 * r9_233 = rcx->ptr0030;
			struct Eq_782 * rdx_235 = null;
			do
			{
				int64 rax_387 = (int64) *((char *) &r9_233->a0000[0].u0 + (rdx_235 + (struct Eq_75586 *) 752));
				if ((word32) rax_387 >= 0x00)
				{
					struct Eq_899 * rax_395 = rcx->ptr0040;
					word128 xmm0_398 = (word128) *((char *) &rax_395->a0000[0].u3 + ((word64) (rax_387 *s 0x05C8) + 0x0588));
					word128 xmm1_399 = (word128) *((rax_387 *s 0x05C8)->a0598 + rax_395);
					word128 xmm0_402 = (word128) *((rax_387 *s 0x05C8)->a05A8 + rax_395);
					Eq_803 r11d_405;
					r11d_405.u0 = 0x00;
					real32 rLoc020C_637 = SLICE(xmm0_398, real32, 96);
					real32 rLoc0214_749 = SLICE(xmm0_398, real32, 32);
					real32 rLoc0210_750 = SLICE(xmm0_398, real32, 64);
					real32 rLoc0218_751 = (real32) xmm0_398;
					real32 rLoc01FC_633 = SLICE(xmm1_399, real32, 96);
					real32 rLoc0200_634 = SLICE(xmm1_399, real32, 64);
					real32 rLoc0204_635 = SLICE(xmm1_399, real32, 32);
					real32 rLoc0208_636 = (real32) xmm1_399;
					real32 rLoc01EC_629 = SLICE(xmm0_402, real32, 96);
					real32 rLoc01F0_630 = SLICE(xmm0_402, real32, 64);
					real32 rLoc01F4_631 = SLICE(xmm0_402, real32, 32);
					real32 rLoc01F8_632 = (real32) xmm0_402;
					if (*((char *) &r9_233->a0000[0].u0 + (rdx_235 + (struct Eq_75579 *) 16)) > 0x00)
					{
						Eq_9771 (* r8_410)[] = null;
						do
						{
							Eq_803 rcx_435;
							rcx_435.u1 = *((char *) &rcx->ptr0030->a0000[0].u1 + (rdx_235 + (struct Eq_75580 *) 24));
							real64 rLoc0228_640 = *(rcx_435 + r8_410);
							real32 rLoc0224_641 = SLICE(rLoc0228_640, real32, 32);
							real32 rLoc0228_642 = (real32) rLoc0228_640;
							real32 eax_447 = (real32) *((char *) &r8_410[0].r0000 + (rcx_435 + (Eq_9771 (*)[]) 8));
							*(rcx_435 + r8_410) = (word64) (rLoc0214_749 * rLoc0224_641 + rLoc0218_751 * rLoc0228_642 + rLoc0210_750 * eax_447 + rLoc020C_637);
							*((char *) &r8_410[0].r0000 + (rcx_435 + (Eq_9771 (*)[]) 4)) = (Eq_9771 (*)[]) (rLoc0204_635 * rLoc0224_641 + rLoc0208_636 * rLoc0228_642 + rLoc0200_634 * eax_447 + rLoc01FC_633);
							*((char *) &r8_410[0].r0000 + (rcx_435 + (Eq_9771 (*)[]) 8)) = (Eq_9771 (*)[]) (rLoc01F4_631 * rLoc0224_641 + rLoc01F8_632 * rLoc0228_642 + rLoc01F0_630 * eax_447 + rLoc01EC_629);
							r11d_405.u1 = (word32) r11d_405.u0 + 1;
							r8_410 += (Eq_9771 (*)[]) 0x4C;
							r9_233 = rcx->ptr0030;
						} while (r11d_405 < *((char *) (&((r9_233->a0000))[0].u0) + (rdx_235 + (struct Eq_75583 *) 16)));
					}
				}
				++r10d_230;
				++rdx_235;
			} while (r10d_230 < rcx->dw0028);
		}
	}
	word64 qwLoc0250;
	fn0000000180023580(rax_13 ^ fp - 0x0248, qwLoc0250);
}

// 0000000180006F20: Register word32 fn0000000180006F20(Register (ptr64 Eq_3676) rcx, Register (ptr64 ui32) rdx)
// Called from:
//      fn000000018001D8D0
word32 fn0000000180006F20(union Eq_3676 * rcx, ui32 * rdx)
{
	Eq_137 rdx_8;
	rdx_8.u0 = rcx->u0.t0000.u0;
	if (rdx_8 != 0x00)
	{
		Eq_1342 eax_18 = rcx->u0.t0008.u0 + 0x04;
		if (eax_18 <= ((rcx->u0).t000C).u0)
		{
			rcx->u0.t0008.u0 = (int32) eax_18;
			*rdx = (ui32) rdx_8.u2[(uint64) ((word64) eax_18 - 4)];
			if ((&rcx->u0)[1] != 0x00)
			{
				uint32 edx_38 = (uint32) rcx->u0.t0000.u0[(uint64) (rcx->u0.t0008.u0 - 0x04)];
				*rdx = (edx_38 & 0x00FF0000 | edx_38 >> 0x10) >> 0x08 | (edx_38 & 0xFF00 | edx_38 << 0x10) << 0x08;
			}
			return 0x01;
		}
	}
	*rdx = 0x00;
	return 0x00;
}

// 0000000180006F90: Register word32 fn0000000180006F90(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_5799) rdx)
// Called from:
//      fn0000000180003F40
word32 fn0000000180006F90(union Eq_3676 * rcx, struct Eq_5799 * rdx)
{
	ptr64 fp;
	ui64 rax_11 = g_qw80030008 ^ fp - 0x05D8;
	Eq_1342 eax_19;
	eax_19.u0 = rdx->t0008.u0;
	word64 qwLoc05E0;
	if (eax_19 == 0x00)
		return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
	Eq_137 r11_24;
	r11_24.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) eax_19;
	int32 edx_54 = rdx->dw0010;
	if (r11_24 == 0x00)
		return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
	Eq_1342 r10d_37;
	r10d_37.u0 = rcx->u0.t000C.u0;
	if ((word64) eax_19 + 4 > r10d_37)
		return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
	rcx->u0.t0008.u0 = (int32) ((word64) eax_19 + 4);
	if ((word64) eax_19 + 8 > r10d_37)
		return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
	rcx->u0.t0008.u0 = (int32) ((word64) eax_19 + 8);
	if ((word64) eax_19 + 0x0C > r10d_37)
		return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
	rcx->u0.t0008.u0 = (int32) ((word64) eax_19 + 0x0C);
	int32 ecx_1734 = 0x00;
	if (edx_54 > 0x03)
	{
		do
		{
			if (rcx->u0.t0008.u0 + 0x04 > r10d_37)
				goto l00000001800077A1;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			++ecx_1734;
		} while (ecx_1734 < edx_54 - 0x03);
	}
	Eq_1342 edi_106;
	edi_106.u0 = rdx->t001C.u0;
	Eq_10021 tLoc0588;
	if (rcx->u0.t0008.u0 < edi_106)
	{
		Eq_1342 ecx_232;
		do
		{
			if (fp == (<unknown>*) 0x0588 || ((rcx->u0).t0008).u0 + 0x04 > r10d_37)
				goto l00000001800077D7;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 r9d_139 = r11_24.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
			if ((&rcx->u0)[1] != 0x00)
				r9d_139 = __bswap<word32>(r9d_139);
			Eq_1342 r8d_1745;
			r8d_1745.u0 = 0x00;
			Eq_10014 rdx_147;
			rdx_147.u1 = (uint64) 0x00;
			if (r9d_139 != 0x00)
			{
				do
				{
					if (rcx->u0.t0008.u0 + 0x01 > r10d_37)
						goto l00000001800077D7;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
					byte al_177 = r11_24.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
					if (rdx_147 < 0x0104)
						*(&tLoc0588 + rdx_147) = (word64) al_177;
					if (al_177 == 0x00)
						break;
					r8d_1745.u2 = (word64) r8d_1745 + 1;
					rdx_147 = (word64) rdx_147 + 1;
				} while (r8d_1745 < r9d_139);
				if (rdx_147 < 0x0104)
					goto l00000001800070C0;
			}
			else
			{
l00000001800070C0:
				*(&tLoc0588 + rdx_147) = (word64) 0x00;
			}
			uint64 rax_219 = (uint64) rcx->u0.t0008.u0;
			ecx_232 = (word32) rax_219 & ~0x03;
			if (((byte) rax_219 & 0x03) > 0x00)
				ecx_232 = (word32) ecx_232.u1 + 4;
			rcx->u0.t0008.u0 = (int32) ecx_232;
		} while (ecx_232 < edi_106);
	}
	Eq_1342 eax_262;
	eax_262.u0 = rdx->t001C.u0;
	Eq_1342 ecx_270;
	ecx_270.u0 = rcx->u0.t0008.u0;
	if (eax_262 != 0x00)
		ecx_270 = eax_262;
	rcx->u0.t0008.u0 = (int32) ecx_270;
	if ((word64) ecx_270 + 4 <= r10d_37)
	{
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 rdx_307 = (uint64) r11_24.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
		Eq_1342 edx_323 = (word32) rdx_307;
		word32 rdx_32_32_334 = SLICE(rdx_307, word32, 32);
		if ((&rcx->u0)[1] != 0x00)
			rdx_307 = SEQ(rdx_32_32_334, __bswap<word32>(edx_323));
		fn0000000180005050(rcx, (word32) rdx_307, &tLoc0588);
		Eq_137 r8_347;
		r8_347.u0 = rcx->u0.t0000.u0;
		int32 ecx_1746;
		uint64 r9_372;
		word32 r9d_388;
		for (ecx_1746 = 0x00; ecx_1746 < 0x06; ++ecx_1746)
		{
			if (r8_347 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l00000001800077D7;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			r9_372 = (uint64) rcx->u0.t0008.u0;
			r9d_388 = (word32) r9_372;
		}
		if (r8_347 != 0x00)
		{
			Eq_1342 edx_385;
			edx_385.u0 = rcx->u0.t000C.u0;
			if ((word32) r9_372 + 0x04 <= edx_385)
			{
				uint64 r9_390 = (uint64) (r9d_388 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r9_390;
				if ((word32) r9_390 + 0x04 <= edx_385)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rcx_401 = (uint64) rcx->u0.t0008.u0;
					word32 ecx_407 = (word32) rcx_401;
					if ((word32) rcx_401 + 0x04 <= edx_385)
					{
						uint64 rcx_409 = (uint64) (ecx_407 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rcx_409;
						if ((word32) rcx_409 + 0x04 <= edx_385)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rcx_420 = (uint64) rcx->u0.t0008.u0;
							word32 ecx_426 = (word32) rcx_420;
							if ((word32) rcx_420 + 0x04 <= edx_385)
							{
								uint64 rcx_428 = (uint64) (ecx_426 + 0x04);
								rcx->u0.t0008.u0 = (int32) (word32) rcx_428;
								if ((word32) rcx_428 + 0x04 <= edx_385)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint64 r10_439 = (uint64) rcx->u0.t0008.u0;
									word32 r10d_453 = (word32) r10_439;
									if ((word32) r10_439 + 0x04 <= edx_385)
									{
										uint64 r10_455 = (uint64) (r10d_453 + 0x04);
										Eq_1342 r9d_479 = (&rcx->u0)[1];
										rcx->u0.t0008.u0 = (int32) (word32) r10_455;
										Eq_1342 r15d_484 = r8_347.u2[(uint64) ((word32) r10_455 - 0x04)];
										if (r9d_479 != 0x00)
											r15d_484 = __bswap<word32>(r15d_484);
										if ((word32) r10_455 + 0x04 <= edx_385)
										{
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 r10_498 = (uint64) rcx->u0.t0008.u0;
											word32 r10d_518 = (word32) r10_498;
											Eq_1342 r11d_509 = r8_347.u2[(uint64) ((word32) r10_498 - 0x04)];
											if (r9d_479 != 0x00)
												r11d_509 = __bswap<word32>(r11d_509);
											if ((word32) r10_498 + 0x04 <= edx_385)
											{
												uint64 r10_520 = (uint64) (r10d_518 + 0x04);
												rcx->u0.t0008.u0 = (int32) (word32) r10_520;
												Eq_1342 esi_1301 = r8_347.u2[(uint64) ((word32) r10_520 - 0x04)];
												Eq_1342 dwLoc05A4_1767 = esi_1301;
												if (r9d_479 != 0x00)
												{
													esi_1301 = __bswap<word32>(esi_1301);
													dwLoc05A4_1767 = esi_1301;
												}
												if ((word32) r10_520 + 0x04 <= edx_385)
												{
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													uint64 r10_558 = (uint64) rcx->u0.t0008.u0;
													word32 r10d_598 = (word32) r10_558;
													Eq_1342 r12d_1271 = r8_347.u2[(uint64) ((word32) r10_558 - 0x04)];
													if (r9d_479 != 0x00)
														r12d_1271 = __bswap<word32>(r12d_1271);
													if ((word32) r10_558 + 0x04 <= edx_385)
													{
														uint64 r10_600 = (uint64) (r10d_598 + 0x04);
														rcx->u0.t0008.u0 = (int32) (word32) r10_600;
														Eq_1342 eax_609 = r8_347.u2[(uint64) ((word32) r10_600 - 0x04)];
														Eq_1342 dwLoc0598_1770 = eax_609;
														if (r9d_479 != 0x00)
															dwLoc0598_1770 = __bswap<word32>(eax_609);
														if ((word32) r10_600 + 0x04 <= edx_385)
														{
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															uint64 r10_631 = (uint64) rcx->u0.t0008.u0;
															Eq_1342 eax_637 = r8_347.u2[(uint64) ((word32) r10_631 - 0x04)];
															word32 r10d_654 = (word32) r10_631;
															Eq_1342 dwLoc059C_1772 = eax_637;
															if (r9d_479 != 0x00)
																dwLoc059C_1772 = __bswap<word32>(eax_637);
															if ((word32) r10_631 + 0x04 <= edx_385)
															{
																uint64 r10_656 = (uint64) (r10d_654 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) r10_656;
																Eq_1342 eax_665 = r8_347.u2[(uint64) ((word32) r10_656 - 0x04)];
																Eq_1342 dwLoc0590_1774 = eax_665;
																if (r9d_479 != 0x00)
																	dwLoc0590_1774 = __bswap<word32>(eax_665);
																if ((word32) r10_656 + 0x04 <= edx_385)
																{
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint64 r10_687 = (uint64) rcx->u0.t0008.u0;
																	Eq_1342 eax_693 = r8_347.u2[(uint64) ((word32) r10_687 - 0x04)];
																	word32 r10d_710 = (word32) r10_687;
																	Eq_1342 dwLoc0594_1776 = eax_693;
																	if (r9d_479 != 0x00)
																		dwLoc0594_1776 = __bswap<word32>(eax_693);
																	if ((word32) r10_687 + 0x04 <= edx_385)
																	{
																		uint64 r10_712 = (uint64) (r10d_710 + 0x04);
																		rcx->u0.t0008.u0 = (int32) (word32) r10_712;
																		Eq_1342 eax_721 = r8_347.u2[(uint64) ((word32) r10_712 - 0x04)];
																		Eq_1342 dwLoc058C_1778 = eax_721;
																		if (r9d_479 != 0x00)
																			dwLoc058C_1778 = __bswap<word32>(eax_721);
																		if ((word32) r10_712 + 0x04 <= edx_385)
																		{
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			uint64 r10_749 = (uint64) rcx->u0.t0008.u0;
																			Eq_1342 r14d_1589 = r8_347.u2[(uint64) ((word32) r10_749 - 0x04)];
																			word32 r10d_797 = (word32) r10_749;
																			Eq_1342 dwLoc05A8_1781 = r14d_1589;
																			if (r9d_479 != 0x00)
																			{
																				r14d_1589 = __bswap<word32>(r14d_1589);
																				dwLoc05A8_1781 = r14d_1589;
																			}
																			if ((word32) r10_749 + 0x04 <= edx_385)
																			{
																				uint64 r10_799 = (uint64) (r10d_797 + 0x04);
																				rcx->u0.t0008.u0 = (int32) (word32) r10_799;
																				if ((word32) r10_799 + 0x04 <= edx_385)
																				{
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 rcx_811 = (uint64) rcx->u0.t0008.u0;
																					word32 ecx_817 = (word32) rcx_811;
																					if ((word32) rcx_811 + 0x04 <= edx_385)
																					{
																						uint64 rcx_819 = (uint64) (ecx_817 + 0x04);
																						rcx->u0.t0008.u0 = (int32) (word32) rcx_819;
																						if ((word32) rcx_819 + 0x04 <= edx_385)
																						{
																							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																							uint64 rcx_830 = (uint64) rcx->u0.t0008.u0;
																							word32 ecx_836 = (word32) rcx_830;
																							if ((word32) rcx_830 + 0x04 <= edx_385)
																							{
																								uint64 rcx_838 = (uint64) (ecx_836 + 0x04);
																								rcx->u0.t0008.u0 = (int32) (word32) rcx_838;
																								if ((word32) rcx_838 + 0x04 <= edx_385)
																								{
																									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																									uint64 r10_855 = (uint64) rcx->u0.t0008.u0;
																									Eq_1342 ebp_1628 = r8_347.u2[(uint64) ((word32) r10_855 - 0x04)];
																									word32 r10d_904 = (word32) r10_855;
																									Eq_1342 dwLoc05A0_1784 = ebp_1628;
																									if (r9d_479 != 0x00)
																									{
																										ebp_1628 = __bswap<word32>(ebp_1628);
																										dwLoc05A0_1784 = ebp_1628;
																									}
																									if ((word32) r10_855 + 0x04 <= edx_385)
																									{
																										uint64 r10_906 = (uint64) (r10d_904 + 0x04);
																										rcx->u0.t0008.u0 = (int32) (word32) r10_906;
																										if ((word32) r10_906 + 0x04 > edx_385)
																											goto l00000001800077C7;
																										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																										Eq_10921 tLoc0478;
																										Eq_10917 tLoc0368;
																										if (r11d_509 != 0x00)
																										{
																											rcx->u0.t0008.u0 = (int32) r11d_509;
																											if (r15d_484 != 0x00 && fn0000000180001FD0(&g_t800306F0, r15d_484) == 0x00)
																												goto l00000001800077C7;
																											Eq_1342 r14d_1218;
																											r14d_1218.u0 = 0x00;
																											if (r15d_484 != 0x00)
																											{
																												do
																												{
																													memset(&tLoc0588, 0, 0x0104);
																													Eq_137 r8_992;
																													r8_992.u0 = rcx->u0.t0000.u0;
																													if (r8_992 == 0x00)
																														goto l00000001800077C7;
																													Eq_1342 edx_1005;
																													edx_1005.u0 = rcx->u0.t000C.u0;
																													if (rcx->u0.t0008.u0 + 0x04 > edx_1005)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																													uint64 r9_1011 = (uint64) rcx->u0.t0008.u0;
																													word32 r9d_1026 = (word32) r9_1011;
																													Eq_1342 r10d_1018 = (&rcx->u0)[1];
																													Eq_1342 r11d_1023 = r8_992.u2[(uint64) ((word32) r9_1011 - 0x04)];
																													if (r10d_1018 != 0x00)
																														r11d_1023 = __bswap<word32>(r11d_1023);
																													uint64 r9_1028 = (uint64) (r9d_1026 + 0x04);
																													Eq_1342 r9d_1029 = (word32) r9_1028;
																													if (r9d_1029 > edx_1005)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) r9d_1029;
																													Eq_1342 ebp_1045 = r8_992.u2[(uint64) ((word32) r9_1028 - 0x04)];
																													if (r10d_1018 != 0x00)
																														ebp_1045 = __bswap<word32>(ebp_1045);
																													if ((word32) r9_1028 + 0x04 > edx_1005)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																													uint64 r9_1059 = (uint64) rcx->u0.t0008.u0;
																													word32 r9d_1073 = (word32) r9_1059;
																													Eq_1342 esi_1070 = r8_992.u2[(uint64) ((word32) r9_1059 - 0x04)];
																													if (r10d_1018 != 0x00)
																														esi_1070 = __bswap<word32>(esi_1070);
																													uint64 r9_1075 = (uint64) (r9d_1073 + 0x04);
																													Eq_1342 r9d_1076 = (word32) r9_1075;
																													if (r9d_1076 > edx_1005)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) r9d_1076;
																													Eq_1342 edi_1092 = r8_992.u2[(uint64) ((word32) r9_1075 - 0x04)];
																													if (r10d_1018 != 0x00)
																														edi_1092 = __bswap<word32>(edi_1092);
																													if ((word32) r9_1075 + 0x04 > edx_1005)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																													Eq_1342 r9d_1118 = r8_992.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
																													if (r10d_1018 != 0x00)
																														r9d_1118 = __bswap<word32>(r9d_1118);
																													fn0000000180005050(rcx, r11d_1023, &tLoc0588);
																													Eq_10954 tLoc0258;
																													fn0000000180005050(rcx, ebp_1045, &tLoc0258);
																													Eq_10958 tLoc0148;
																													fn0000000180005050(rcx, esi_1070, &tLoc0148);
																													fn0000000180005050(rcx, edi_1092, &tLoc0478);
																													fn0000000180005050(rcx, r9d_1118, &tLoc0368);
																													struct Eq_1702 * r9_1208 = g_ptr80030700;
																													if (r9_1208 != null)
																														MultiByteToWideChar(0x00, 0x01, &tLoc0588, -1, r9_1208 + (int64) r14d_1218 *s 0x0208, 0xFF);
																													r14d_1218.u2 = (word64) r14d_1218 + 1;
																												} while (r14d_1218 < r15d_484);
																												esi_1301 = dwLoc05A4_1767;
																												ebp_1628 = dwLoc05A0_1784;
																											}
																											r14d_1589 = dwLoc05A8_1781;
																										}
																										if (r12d_1271 != 0x00)
																										{
																											rcx->u0.t0008.u0 = (int32) r12d_1271;
																											Eq_1342 edi_1519;
																											edi_1519.u0 = 0x00;
																											if (esi_1301 != 0x00)
																											{
																												Eq_137 r8_1318;
																												r8_1318.u0 = rcx->u0.t0000.u0;
																												do
																												{
																													if (r8_1318 == 0x00)
																														goto l00000001800077C7;
																													Eq_1342 r9d_1334;
																													r9d_1334.u0 = rcx->u0.t000C.u0;
																													if (rcx->u0.t0008.u0 + 0x04 > r9d_1334)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																													uint64 r10_1340 = (uint64) rcx->u0.t0008.u0;
																													uint64 rdx_1346 = (uint64) r8_1318.u2[(uint64) ((word32) r10_1340 - 0x04)];
																													Eq_1342 r11d_1347 = (&rcx->u0)[1];
																													Eq_1342 edx_1352 = (word32) rdx_1346;
																													word32 rdx_32_32_1383 = SLICE(rdx_1346, word32, 32);
																													if (r11d_1347 != 0x00)
																														rdx_1346 = SEQ(rdx_32_32_1383, __bswap<word32>(edx_1352));
																													Eq_1342 eax_1357 = (word32) r10_1340 + 0x04;
																													if (eax_1357 > r9d_1334)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) eax_1357;
																													Eq_1342 r9d_1373 = r8_1318.u2[(uint64) ((word64) eax_1357 - 4)];
																													if (r11d_1347 != 0x00)
																														r9d_1373 = __bswap<word32>(r9d_1373);
																													fn0000000180005050(rcx, (word32) rdx_1346, &tLoc0368);
																													fn0000000180005050(rcx, r9d_1373, &tLoc0478);
																													r8_1318.u0 = rcx->u0.t0000.u0;
																													int32 ecx_1433;
																													Eq_1342 eax_1447;
																													for (ecx_1433 = 0x00; ecx_1433 < 0x09; ++ecx_1433)
																													{
																														if (r8_1318 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																															goto l00000001800077C7;
																														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																														eax_1447.u0 = rcx->u0.t0008.u0;
																													}
																													if (r8_1318 == 0x00)
																														goto l00000001800077C7;
																													Eq_1342 edx_1451;
																													edx_1451.u0 = rcx->u0.t000C.u0;
																													if ((word64) eax_1447 + 4 > edx_1451)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) ((word64) eax_1447 + 4);
																													if ((word64) eax_1447 + 8 > edx_1451)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																													Eq_1342 eax_1467 = rcx->u0.t0008.u0 + 0x04;
																													if (eax_1467 > edx_1451)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) eax_1467;
																													if ((word64) eax_1467 + 4 > edx_1451)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																													Eq_1342 eax_1483 = rcx->u0.t0008.u0 + 0x04;
																													if (eax_1483 > edx_1451)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) eax_1483;
																													if ((word64) eax_1483 + 4 > edx_1451)
																														goto l00000001800077C7;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																													int32 ecx_1507;
																													Eq_1342 eax_1500;
																													eax_1500.u0 = rcx->u0.t0008.u0;
																													for (ecx_1507 = 0x00; ecx_1507 < 0x05; ++ecx_1507)
																													{
																														eax_1500.u2 = (word64) eax_1500 + 4;
																														if (eax_1500 > edx_1451)
																															goto l00000001800077C7;
																														rcx->u0.t0008.u0 = (int32) eax_1500;
																													}
																													edi_1519.u2 = (word64) edi_1519 + 1;
																												} while (edi_1519 < esi_1301);
																											}
																										}
																										if (fn00000001800077E0(rcx, (uint64) dwLoc0598_1770, dwLoc059C_1772) != 0x00 && (fn0000000180007A40(rcx, (uint64) dwLoc0590_1774, dwLoc0594_1776) != 0x00 && fn0000000180008650(rcx, dwLoc058C_1778, r14d_1589) != 0x00))
																										{
																											fn0000000180008DC0(rcx, ebp_1628);
l00000001800077A1:
																											return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																										}
																									}
l00000001800077C7:
																									goto l0000000180007779;
																								}
																							}
																						}
																					}
																				}
																			}
																			goto l0000000180007781;
																		}
																	}
																}
															}
														}
													}
													goto l0000000180007789;
												}
											}
										}
										goto l0000000180007791;
									}
								}
							}
						}
					}
				}
			}
		}
	}
l00000001800077D7:
	goto l0000000180007799;
}

// 00000001800077E0: Register word32 fn00000001800077E0(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180006F90
word32 fn00000001800077E0(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_11 = g_qw80030008 ^ fp - 888;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (edx == 0x00 || fn00000001800020D0(&g_t800306F0, (word32) rdx) != 0x00)
		{
			up32 esi_323 = 0x00;
			if (edx != 0x00)
			{
				Eq_11142 rbp_355;
				rbp_355.u1 = 0x00;
				do
				{
					Eq_11249 tLoc0358;
					memset(&tLoc0358, 0, 0x0104);
					Eq_137 r8_78;
					r8_78.u0 = rcx->u0.t0000.u0;
					if (r8_78 == 0x00)
					{
l0000000180007A38:
						goto l0000000180007A05;
					}
					Eq_1342 edx_91;
					edx_91.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > edx_91)
						goto l0000000180007A38;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_97 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r11d_104 = (&rcx->u0)[1];
					Eq_1342 r10d_109 = r8_78.u2[(uint64) ((word32) r9_97 - 0x04)];
					if (r11d_104 != 0x00)
						r10d_109 = __bswap<word32>(r10d_109);
					if ((word32) r9_97 + 0x04 > edx_91)
						goto l0000000180007A38;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_123 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_134 = r8_78.u2[(uint64) ((word32) r9_123 - 0x04)];
					if (r11d_104 != 0x00)
						edi_134 = __bswap<word32>(edi_134);
					if ((word32) r9_123 + 0x04 > edx_91)
						goto l0000000180007A38;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > edx_91)
						goto l0000000180007A38;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 r9d_170 = r8_78.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					if (r11d_104 != 0x00)
						r9d_170 = __bswap<word32>(r9d_170);
					fn0000000180005050(rcx, r10d_109, &tLoc0358);
					Eq_11253 tLoc0248;
					fn0000000180005050(rcx, edi_134, &tLoc0248);
					Eq_11257 tLoc0138;
					fn0000000180005050(rcx, r9d_170, &tLoc0138);
					Eq_137 r9_223;
					r9_223.u0 = rcx->u0.t0000.u0;
					if (r9_223 == 0x00)
						goto l0000000180007A38;
					Eq_1342 edx_236;
					edx_236.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > edx_236)
						goto l0000000180007A38;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > edx_236)
						goto l0000000180007A38;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > edx_236)
						goto l0000000180007A38;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r8_263 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_269 = r9_223.u2[(uint64) ((word32) r8_263 - 0x04)];
					if ((&rcx->u0)[1] != 0x00)
						r9d_269 = __bswap<word32>(r9d_269);
					if ((word32) r8_263 + 0x04 > edx_236)
						goto l0000000180007A38;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					int32 ecx_284;
					for (ecx_284 = 0x00; ecx_284 < 0x08; ++ecx_284)
					{
						if (rcx->u0.t0008.u0 + 0x04 > edx_236)
							goto l0000000180007A38;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					}
					struct Eq_1710 * r8_313 = g_ptr80030710;
					if (r8_313 != null)
					{
						union Eq_11374 * rdx_327 = &tLoc0358;
						byte * r8_330 = (byte *) (&(r8_313->a0028 + 3)->t0000.u0 + (int64) esi_323 *64 78);
						byte al_337;
						do
						{
							al_337 = rdx_327->u0;
							*r8_330 = al_337;
							rdx_327 = (union Eq_11374 *) ((char *) rdx_327 + 1);
							++r8_330;
						} while (al_337 != 0x00);
						*(g_ptr80030710->a0028 + rbp_355) = (word64) r9d_269;
					}
					++esi_323;
					rbp_355 = (word64) rbp_355 + 312;
				} while (esi_323 < edx);
			}
l0000000180007A05:
		}
	}
	word64 qwLoc0380;
	return (word32) fn0000000180023580(rax_11 ^ fp - 888, qwLoc0380);
}

// 0000000180007A40: Register word32 fn0000000180007A40(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180006F90
word32 fn0000000180007A40(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_11 = g_qw80030008 ^ fp - 0x0278;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (edx == 0x00 || fn0000000180001B50(&g_t800306F0, (word32) rdx) != 0x00)
		{
			uint64 r14_64 = (uint64) rcx->u0.t0008.u0;
			up32 ebp_298 = 0x00;
			up32 edi_210 = 0x00;
			Eq_1342 r14d_278 = (word32) r14_64;
			Eq_11565 tLoc0258;
			Eq_11569 tLoc0148;
			if (edx != 0x00)
			{
				do
				{
					memset(&tLoc0258, 0, 0x0104);
					memset(&tLoc0148, 0, 0x0104);
					Eq_137 r9_85;
					r9_85.u0 = rcx->u0.t0000.u0;
					if (r9_85 == 0x00)
					{
l0000000180007D29:
						goto l0000000180007CF6;
					}
					Eq_1342 r8d_98;
					r8d_98.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_98)
						goto l0000000180007D29;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_104 = (uint64) rcx->u0.t0008.u0;
					uint64 rdx_110 = (uint64) r9_85.u2[(uint64) ((word32) r10_104 - 0x04)];
					Eq_1342 r11d_111 = (&rcx->u0)[1];
					Eq_1342 edx_116 = (word32) rdx_110;
					word32 rdx_32_32_177 = SLICE(rdx_110, word32, 32);
					if (r11d_111 != 0x00)
						rdx_110 = SEQ(rdx_32_32_177, __bswap<word32>(edx_116));
					if ((word32) r10_104 + 0x04 > r8d_98)
						goto l0000000180007D29;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_130 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_141 = r9_85.u2[(uint64) ((word32) r10_130 - 0x04)];
					if (r11d_111 != 0x00)
						r9d_141 = __bswap<word32>(r9d_141);
					if ((word32) r10_130 + 0x04 > r8d_98)
						goto l0000000180007D29;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_98)
						goto l0000000180007D29;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, (word32) rdx_110, &tLoc0258);
					fn0000000180005050(rcx, r9d_141, &tLoc0148);
					struct Eq_2417 * r9_203 = g_ptr80030720;
					if (r9_203 != null)
					{
						int64 rax_211 = (int64) edi_210;
						union Eq_11581 * rcx_214 = &tLoc0258;
						byte * rdx_215 = (byte *) (&(r9_203->a0030 + 46)->t0000.u0 + rax_211 *64 0x00BE);
						byte al_222;
						do
						{
							al_222 = rcx_214->u0;
							*rdx_215 = al_222;
							rcx_214 = (union Eq_11581 *) ((char *) rcx_214 + 1);
							++rdx_215;
						} while (al_222 != 0x00);
						union Eq_11602 * rcx_232 = &tLoc0148;
						byte * rdx_235 = (byte *) (&(g_ptr80030720->a0030 + 111)->t0000.u0 + rax_211 *64 0x00BE);
						byte al_242;
						do
						{
							al_242 = rcx_232->u0;
							*rdx_235 = al_242;
							rcx_232 = (union Eq_11602 *) ((char *) rcx_232 + 1);
							++rdx_235;
						} while (al_242 != 0x00);
					}
					++edi_210;
				} while (edi_210 < edx);
			}
			rcx->u0.t0008.u0 = (int32) r14d_278;
			uint64 r14_308 = r14_64;
			if (edx != 0x00)
			{
				do
				{
					Eq_137 r9_297;
					r9_297.u0 = rcx->u0.t0000.u0;
					struct Eq_1142 * rsi_301 = (struct Eq_1142 *) (g_ptr80030720 + (int64) ebp_298);
					if (r9_297 == 0x00)
					{
l0000000180007D2D:
						goto l0000000180007CEE;
					}
					uint64 rdx_310 = (uint64) ((word32) r14_308 + 0x04);
					Eq_1342 r8d_312;
					r8d_312.u0 = rcx->u0.t000C.u0;
					Eq_1342 edx_311 = (word32) rdx_310;
					if (edx_311 > r8d_312)
						goto l0000000180007D2D;
					Eq_1342 r11d_322 = (&rcx->u0)[1];
					rcx->u0.t0008.u0 = (int32) edx_311;
					Eq_1342 r10d_327 = r9_297.u2[(uint64) ((word32) rdx_310 - 0x04)];
					if (r11d_322 != 0x00)
						r10d_327 = __bswap<word32>(r10d_327);
					if ((word32) rdx_310 + 0x04 > r8d_312)
						goto l0000000180007D2D;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_341 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_352 = r9_297.u2[(uint64) ((word32) rdx_341 - 0x04)];
					if (r11d_322 != 0x00)
						edi_352 = __bswap<word32>(edi_352);
					if ((word32) rdx_341 + 0x04 > r8d_312)
						goto l0000000180007D2D;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_312)
						goto l0000000180007D2D;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_382 = (uint64) r9_297.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					Eq_1342 r9d_388 = (word32) r9_382;
					word32 r9_32_32_435 = SLICE(r9_382, word32, 32);
					if (r11d_322 != 0x00)
						r9_382 = SEQ(r9_32_32_435, __bswap<word32>(r9d_388));
					fn0000000180005050(rcx, r10d_327, &tLoc0148);
					fn0000000180005050(rcx, edi_352, &tLoc0258);
					r14_308 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r14d_469 = (word32) r14_308;
					if (fn0000000180007D40(rcx, rsi_301, (word32) r9_382) == 0x00)
						goto l0000000180007D2D;
					rcx->u0.t0008.u0 = (int32) r14d_469;
					++ebp_298;
				} while (ebp_298 < edx);
			}
l0000000180007CEE:
l0000000180007CF6:
		}
	}
	word64 qwLoc0280;
	return (word32) fn0000000180023580(rax_11 ^ fp - 0x0278, qwLoc0280);
}

// 0000000180007D40: Register word32 fn0000000180007D40(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register Eq_1342 r9d)
// Called from:
//      fn0000000180007A40
word32 fn0000000180007D40(union Eq_3676 * rcx, struct Eq_1142 * rdx, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_30 = g_qw80030008 ^ fp - 0x0288;
	word64 qwLoc0290;
	if (rdx == null || r9d == 0x00)
		return (word32) fn0000000180023580(rax_30 ^ fp - 0x0288, qwLoc0290);
	rcx->u0.t0008.u0 = (int32) r9d;
	Eq_11811 tLoc0208;
	fn00000001800010C0(&tLoc0208);
	Eq_137 r10_56;
	r10_56.u0 = rcx->u0.t0000.u0;
	if (r10_56 != 0x00)
	{
		Eq_1342 eax_68 = rcx->u0.t0008.u0 + 0x04;
		Eq_1342 r9d_69;
		r9d_69.u0 = rcx->u0.t000C.u0;
		if (eax_68 <= r9d_69)
		{
			rcx->u0.t0008.u0 = (int32) eax_68;
			if ((word64) eax_68 + 4 <= r9d_69)
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r8_81 = (uint64) rcx->u0.t0008.u0;
				Eq_1265 edi_86 = r10_56.u2[(uint64) ((word32) r8_81 - 0x04)];
				Eq_1265 dwLoc024C_1955 = edi_86;
				Eq_1342 r11d_90 = (&rcx->u0)[1];
				if (r11d_90 != 0x00)
					dwLoc024C_1955 = edi_86 >> 0x18 | edi_86 >> 0x08 & 0xFF00 | (edi_86 & 0xFF00) << 0x08 | edi_86 << 0x18;
				if ((word32) r8_81 + 0x04 <= r9d_69)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdi_147 = (uint64) rcx->u0.t0008.u0;
					uint32 r8d_158 = (uint32) r10_56.u2[(uint64) ((word32) rdi_147 - 0x04)];
					if (r11d_90 != 0x00)
						r8d_158 = r8d_158 >> 0x18 | r8d_158 >> 0x08 & 0xFF00 | (r8d_158 & 0xFF00) << 0x08 | r8d_158 << 0x18;
					if ((word32) rdi_147 + 0x04 <= r9d_69)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 <= r9d_69)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 r9d_227 = r10_56.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							Eq_1342 dwLoc0248_1957 = r9d_227;
							if (r11d_90 != 0x00)
								dwLoc0248_1957 = r9d_227 >> 0x18 | r9d_227 >> 0x08 & 0xFF00 | (r9d_227 & 0xFF00) << 0x08 | r9d_227 << 0x18;
							if (r8d_158 == 0x00)
							{
l00000001800085FF:
								goto l0000000180008608;
							}
							Eq_11976 tLoc0240;
							tLoc0240.qw0004 = 0x00;
							tLoc0240.dw0000 = 0x00;
							Eq_11987 tLoc0230;
							tLoc0230.qw0004 = 0x00;
							tLoc0230.dw0000 = 0x00;
							if (fn000000018001D5C0(rcx, &tLoc0240) != 0x00 && fn000000018001D5C0(rcx, &tLoc0230) != 0x00)
							{
								Eq_137 r15_322;
								r15_322.u0 = rcx->u0.t0000.u0;
								if (r15_322 != 0x00)
								{
									Eq_1342 r10d_335;
									r10d_335.u0 = rcx->u0.t000C.u0;
									if (rcx->u0.t0008.u0 + 0x04 <= r10d_335)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r8_341 = (uint64) rcx->u0.t0008.u0;
										Eq_6279 r9d_346 = r15_322.u2[(uint64) ((word32) r8_341 - 0x04)];
										Eq_6279 dwLoc0258_1959 = r9d_346;
										Eq_1342 r13d_350 = (&rcx->u0)[1];
										if (r13d_350 != 0x00)
											dwLoc0258_1959 = r9d_346 >> 0x18 | r9d_346 >> 0x08 & 0xFF00 | (r9d_346 & 0xFF00) << 0x08 | r9d_346 << 0x18;
										if ((word32) r8_341 + 0x04 <= r10d_335)
										{
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 r9_407 = (uint64) rcx->u0.t0008.u0;
											Eq_734 r8d_1021 = r15_322.u2[(uint64) ((word32) r9_407 - 0x04)];
											if (r13d_350 != 0x00)
												r8d_1021 = r8d_1021 >> 0x18 | r8d_1021 >> 0x08 & 0xFF00 | (r8d_1021 & 0xFF00) << 0x08 | r8d_1021 << 0x18;
											if ((word32) r9_407 + 0x04 <= r10d_335)
											{
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
												if (rcx->u0.t0008.u0 + 0x04 <= r10d_335)
												{
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													uint64 r9_480 = (uint64) rcx->u0.t0008.u0;
													uint32 r14d_486 = (uint32) r15_322.u2[(uint64) ((word32) r9_480 - 0x04)];
													uint32 dwLoc0254_1961 = r14d_486;
													if (r13d_350 != 0x00)
													{
														r14d_486 = r14d_486 >> 0x18 | r14d_486 >> 0x08 & 0xFF00 | (r14d_486 & 0xFF00) << 0x08 | r14d_486 << 0x18;
														dwLoc0254_1961 = r14d_486;
													}
													if ((word32) r9_480 + 0x04 <= r10d_335)
													{
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														if (rcx->u0.t0008.u0 + 0x04 <= r10d_335)
														{
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															uint64 r11_557 = (uint64) rcx->u0.t0008.u0;
															uint32 r9d_563 = (uint32) r15_322.u2[(uint64) ((word32) r11_557 - 0x04)];
															uint32 dwLoc0250_1963 = r9d_563;
															if (r13d_350 != 0x00)
																dwLoc0250_1963 = r9d_563 >> 0x18 | r9d_563 >> 0x08 & 0xFF00 | (r9d_563 & 0xFF00) << 0x08 | r9d_563 << 0x18;
															if ((word32) r11_557 + 0x04 <= r10d_335)
															{
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																if (rcx->u0.t0008.u0 + 0x04 <= r10d_335)
																{
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint64 r9_2817 = (uint64) rcx->u0.t0008.u0;
																	Eq_1342 r12d_650 = r15_322.u2[(uint64) ((word32) r9_2817 - 0x04)];
																	if (r13d_350 != 0x00)
																		r12d_650 = r12d_650 >> 0x18 | r12d_650 >> 0x08 & 0xFF00 | (r12d_650 & 0xFF00) << 0x08 | r12d_650 << 0x18;
																	tLoc0208.t0004.u0 = (int32) r8d_1021;
																	Eq_734 esi_1906;
																	esi_1906.u0 = 0x00;
																	if (r8d_1021 != 0x00)
																	{
																		struct Eq_12289 * r14_712 = (struct Eq_12289 *) ((char *) &tLoc0208 + 0x0C);
																		do
																		{
																			if (rcx->u0.t0008.u0 + 0x04 > r10d_335)
																				goto l0000000180008608;
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			r9_2817 = (uint64) rcx->u0.t0008.u0;
																			uint64 r11_2808 = (uint64) r15_322.u2[(uint64) ((word32) r9_2817 - 0x04)];
																			uint32 r11d_738 = (word32) r11_2808;
																			if (r13d_350 != 0x00)
																				r11_2808 = (uint64) (r11d_738 >> 0x18 | r11d_738 >> 0x08 & 0xFF00 | (r11d_738 & 0xFF00) << 0x08 | r11d_738 << 0x18);
																			word32 r11d_785 = (word32) r11_2808;
																			if (esi_1906 < (tLoc0208.t0000).u0)
																				r14_712->dw0000 = r11d_785;
																			esi_1906 = (word64) esi_1906 + 1;
																			++r14_712;
																		} while (esi_1906 < r8d_1021);
																		r8d_1021.u0 = tLoc0208.t0004.u0;
																		r14d_486 = dwLoc0254_1961;
																	}
																	uint64 r9_2815 = r9_2817;
																	if (r14d_486 != 0x00)
																	{
																		struct Eq_12353 * rsi_827 = (struct Eq_12353 *) ((char *) &tLoc0208 + 16);
																		uint64 r11_2809 = 0x00;
																		do
																		{
																			int32 r11d_894 = (word32) r11_2809;
																			if (rcx->u0.t0008.u0 + 0x04 > r10d_335)
																				goto l0000000180008608;
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			r9_2815 = (uint64) rcx->u0.t0008.u0;
																			uint32 r8d_853 = (uint32) r15_322.u2[(uint64) ((word32) r9_2815 - 0x04)];
																			if (r13d_350 != 0x00)
																				r8d_853 = r8d_853 >> 0x18 | r8d_853 >> 0x08 & 0xFF00 | (r8d_853 & 0xFF00) << 0x08 | r8d_853 << 0x18;
																			if (r11d_894 < tLoc0208.dw0000)
																				rsi_827->dw0000 = r8d_853;
																			r11_2809 = (uint64) (r11d_894 + 0x01);
																			++rsi_827;
																		} while ((word32) r11_2809 < r14d_486);
																		r8d_1021.u0 = tLoc0208.t0004.u0;
																	}
																	uint32 ecx_1918 = 0x00;
																	uint64 r9_2811 = r9_2815;
																	if (dwLoc0250_1963 != 0x00)
																	{
																		do
																		{
																			if (rcx->u0.t0008.u0 + 0x04 > r10d_335)
																				goto l0000000180008608;
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			r9_2811 = (uint64) rcx->u0.t0008.u0;
																			++ecx_1918;
																		} while (ecx_1918 < dwLoc0250_1963);
																	}
																	uint64 r9_1931 = r9_2811;
																	if ((word32) r9_2811 < r12d_650)
																	{
																		do
																		{
																			if ((word32) r9_1931 + 0x04 > r10d_335)
																				goto l0000000180008608;
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			r9_1931 = (uint64) rcx->u0.t0008.u0;
																		} while ((word32) r9_1931 < r12d_650);
																	}
																	if (r12d_650 != 0x00)
																		rcx->u0.t0008.u0 = (int32) r12d_650;
																	if (r8d_1021 > 0x01)
																	{
																		qsort((char *) &tLoc0208 + 8, r8d_1021, 0x10, &g_t80001600);
																		r8d_1021.u0 = tLoc0208.t0004.u0;
																	}
																	Eq_734 r9d_1074;
																	r9d_1074.u0 = 0x00;
																	if (r8d_1021 > 0x00)
																	{
																		struct Eq_12509 * rcx_1070 = (struct Eq_12509 *) ((char *) &tLoc0208 + 0x0C);
																		do
																		{
																			Eq_6279 eax_1094 = dwLoc0258_1959;
																			r9d_1074 = (word32) r9d_1074.u0 + 1;
																			if (r9d_1074 < r8d_1021)
																				eax_1094 = rcx_1070[1];
																			word32 edx_1089 = rcx_1070->dw0004;
																			int32 eax_1108;
																			if (edx_1089 == 0x06)
																			{
																				int64 edx_eax_1114 = (int64) (eax_1094 - rcx_1070->dw0000);
																				eax_1108 = (word32) edx_eax_1114 + (SLICE(edx_eax_1114, word32, 32) & 0x03) >> 0x02;
																				goto l00000001800082BF;
																			}
																			if (edx_1089 == 0x02)
																			{
																				int64 edx_eax_1100 = (int64) (eax_1094 - rcx_1070->dw0000);
																				eax_1108 = (word32) edx_eax_1100 - SLICE(edx_eax_1100, word32, 32) >> 0x01;
l00000001800082BF:
																				rcx_1070->dw0008 = eax_1108;
																				r8d_1021.u0 = tLoc0208.t0004.u0;
																			}
																			++rcx_1070;
																		} while (r9d_1074 < r8d_1021);
																	}
																	uint64 r9_1155 = (uint64) rcx->u0.t0008.u0;
																	if ((word32) r9_1155 != 0x00 && fn0000000180005100(rcx, rdx, dwLoc024C_1955, (word32) r9_1155, dwLoc0258_1959, &tLoc0208) == 0x00)
																	{
l0000000180008608:
																		fn00000001800235AC(0x0A);
																		return (word32) fn0000000180023580(rax_30 ^ fp - 0x0288, qwLoc0290);
																	}
																	if (dwLoc0248_1957 != 0x00)
																		rcx->u0.t0008.u0 = (int32) dwLoc0248_1957;
																	Eq_137 rdx_1215;
																	rdx_1215.u0 = rcx->u0.t0000.u0;
																	if (rdx_1215 == 0x00)
																		goto l0000000180008608;
																	Eq_1342 r8d_1228;
																	r8d_1228.u0 = rcx->u0.t000C.u0;
																	if (rcx->u0.t0008.u0 + 0x04 > r8d_1228)
																		goto l0000000180008608;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	if (rcx->u0.t0008.u0 + 0x04 > r8d_1228)
																		goto l0000000180008608;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint64 r10_1244 = (uint64) rcx->u0.t0008.u0;
																	Eq_1342 r9d_1258 = rdx_1215.u2[(uint64) ((word32) r10_1244 - 0x04)];
																	if ((&rcx->u0)[1] != 0x00)
																		r9d_1258 = r9d_1258 >> 0x18 | r9d_1258 >> 0x08 & 0xFF00 | (r9d_1258 & 0xFF00) << 0x08 | r9d_1258 << 0x18;
																	if ((word32) r10_1244 + 0x04 > r8d_1228)
																		goto l0000000180008608;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	if (rcx->u0.t0008.u0 + 0x04 > r8d_1228)
																		goto l0000000180008608;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	if (rcx->u0.t0008.u0 + 0x04 > r8d_1228)
																		goto l0000000180008608;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	if (rcx->u0.t0008.u0 + 0x04 > r8d_1228)
																		goto l0000000180008608;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	Eq_12698 tLoc0158;
																	fn0000000180005050(rcx, r9d_1258, &tLoc0158);
																	Eq_137 r9_1358;
																	r9_1358.u0 = rcx->u0.t0000.u0;
																	if (r9_1358 == 0x00)
																		goto l0000000180008608;
																	Eq_1342 r8d_1371;
																	r8d_1371.u0 = rcx->u0.t000C.u0;
																	if (rcx->u0.t0008.u0 + 0x04 > r8d_1371)
																		goto l0000000180008608;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint64 r10_1377 = (uint64) rcx->u0.t0008.u0;
																	uint64 r11_1381 = (uint64) r9_1358.u2[(uint64) ((word32) r10_1377 - 0x04)];
																	uint32 r11d_1389 = (word32) r11_1381;
																	Eq_1342 r14d_1384 = (&rcx->u0)[1];
																	if (r14d_1384 != 0x00)
																		r11_1381 = (uint64) (r11d_1389 >> 0x18 | r11d_1389 >> 0x08 & 0xFF00 | (r11d_1389 & 0xFF00) << 0x08 | r11d_1389 << 0x18);
																	uint32 r11d_1591 = (word32) r11_1381;
																	if ((word32) r10_1377 + 0x04 > r8d_1371)
																		goto l0000000180008608;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint64 rsi_1441 = (uint64) rcx->u0.t0008.u0;
																	uint64 r10_1446 = (uint64) r9_1358.u2[(uint64) ((word32) rsi_1441 - 0x04)];
																	uint32 r10d_1452 = (word32) r10_1446;
																	if (r14d_1384 != 0x00)
																		r10_1446 = (uint64) (r10d_1452 >> 0x18 | r10d_1452 >> 0x08 & 0xFF00 | (r10d_1452 & 0xFF00) << 0x08 | r10d_1452 << 0x18);
																	Eq_1342 r10d_1583 = (word32) r10_1446;
																	if ((word32) rsi_1441 + 0x02 > r8d_1371)
																		goto l0000000180008608;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																	if (rcx->u0.t0008.u0 + 0x02 > r8d_1371)
																		goto l0000000180008608;
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																	tLoc0230.qw0004 = 0x00;
																	tLoc0230.dw0000 = 0x00;
																	tLoc0240.qw0004 = 0x00;
																	tLoc0240.dw0000 = 0x00;
																	if (fn000000018001D5C0(rcx, &tLoc0230) == 0x00 || fn000000018001D5C0(rcx, &tLoc0240) == 0x00)
																		goto l0000000180008608;
																	if (r10d_1583 > ((rcx->u0).t0008).u0)
																		rcx->u0.t0008.u0 = (int32) r10d_1583;
																	Eq_12875 esi_1600 = SLICE(r11d_1591 *64 ~0x55555554, word32, 32) >> 0x01;
																	if (esi_1600 > 0x00 && fn0000000180001E80(rdx, (uint64) esi_1600) == 0x00)
																		goto l0000000180008608;
																	Eq_12882 r12_1632;
																	r12_1632.u1 = (uint64) esi_1600;
																	Eq_12882 r14_1635;
																	r14_1635.u0 = 0x00;
																	if (esi_1600 > 0x00)
																	{
																		word32 * r10_1641 = null;
																		do
																		{
																			Eq_137 rdx_1644;
																			rdx_1644.u0 = rcx->u0.t0000.u0;
																			if (rdx_1644 == 0x00)
																				goto l0000000180008608;
																			Eq_1342 r11d_1657;
																			r11d_1657.u0 = rcx->u0.t000C.u0;
																			if (rcx->u0.t0008.u0 + 0x02 > r11d_1657)
																				goto l0000000180008608;
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																			uint64 r9_1663 = (uint64) rcx->u0.t0008.u0;
																			cu16 r8w_1675 = (cu16) rdx_1644.u2[(uint64) ((word32) r9_1663 - 0x02)];
																			Eq_1342 esi_1670 = (&rcx->u0)[1];
																			if (esi_1670 != 0x00)
																				r8w_1675 = r8w_1675 >> 0x08 | r8w_1675 << 0x08;
																			if ((word32) r9_1663 + 0x02 > r11d_1657)
																				goto l0000000180008608;
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																			uint64 r15_1697 = (uint64) rcx->u0.t0008.u0;
																			cu16 r9w_1708 = (cu16) rdx_1644.u2[(uint64) ((word32) r15_1697 - 0x02)];
																			if (esi_1670 != 0x00)
																				r9w_1708 = r9w_1708 >> 0x08 | r9w_1708 << 0x08;
																			if ((word32) r15_1697 + 0x02 > r11d_1657)
																				goto l0000000180008608;
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																			cu16 dx_1742 = (cu16) rdx_1644.u2[(uint64) (rcx->u0.t0008.u0 + ~0x01)];
																			if (esi_1670 != 0x00)
																				dx_1742 = dx_1742 >> 0x08 | dx_1742 << 0x08;
																			struct Eq_1145 * rcx_1757 = rdx->ptr0008;
																			if (rcx_1757 != null)
																			{
																				*(rcx_1757->a0004 + r10_1641) = (word64) (word32) r8w_1675;
																				*((char *) &rdx->ptr0008->dw0000 + (r10_1641 + (word32 *) 8)) = (struct Eq_1145 *) (word32) r9w_1708;
																				*((char *) &rdx->ptr0008->dw0000 + (r10_1641 + (word32 *) 0x0C)) = (struct Eq_1145 *) (word32) dx_1742;
																			}
																			r14_1635 = (word64) r14_1635.u0 + 1;
																			r10_1641 += 5;
																		} while (r14_1635 < r12_1632);
																	}
																	goto l00000001800085FF;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	goto l0000000180008608;
}

// 0000000180008650: Register word32 fn0000000180008650(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180006F90
word32 fn0000000180008650(union Eq_3676 * rcx, Eq_1342 edx, Eq_1342 r8d)
{
	ptr64 fp;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_14 = g_qw80030008 ^ fp - 344;
	word64 qwLoc0160;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		uint64 r9_115 = 0x00;
		Eq_13143 tLoc0138;
		if (edx != 0x00)
		{
			do
			{
				word32 r9d_113 = (word32) r9_115;
				Eq_137 rdx_39;
				rdx_39.u0 = rcx->u0.t0000.u0;
				if (rdx_39 == 0x00)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				Eq_1342 r8d_52;
				r8d_52.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_69 = (uint64) rcx->u0.t0008.u0;
				uint64 rdx_101 = (uint64) rdx_39.u2[(uint64) ((word32) r10_69 - 0x04)];
				Eq_1342 edx_75 = (word32) rdx_101;
				word32 rdx_32_32_100 = SLICE(rdx_101, word32, 32);
				if ((&rcx->u0)[1] != 0x00)
					rdx_101 = SEQ(rdx_32_32_100, __bswap<word32>(edx_75));
				if ((word32) r10_69 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				fn0000000180005050(rcx, (word32) rdx_101, &tLoc0138);
				r9_115 = (uint64) (r9d_113 + 0x01);
			} while ((word32) r9_115 < edx);
		}
		rcx->u0.t0008.u0 = (int32) r8d;
		Eq_1342 ebp_330;
		ebp_330.u0 = 0x00;
		if (edx != 0x00)
		{
			do
			{
				memset(&tLoc0138, 0, 0x0104);
				Eq_137 r11_153;
				r11_153.u0 = rcx->u0.t0000.u0;
				if (r11_153 == 0x00)
				{
l000000018000885D:
					goto l0000000180008831;
				}
				Eq_1342 r8d_166;
				r8d_166.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_166)
					goto l000000018000885D;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_166)
					goto l000000018000885D;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_182 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r10d_189 = (&rcx->u0)[1];
				Eq_1342 edx_194 = r11_153.u2[(uint64) ((word32) r9_182 - 0x04)];
				if (r10d_189 != 0x00)
					edx_194 = __bswap<word32>(edx_194);
				if ((word32) r9_182 + 0x04 > r8d_166)
					goto l000000018000885D;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_214 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r9d_282 = (word32) r9_214;
				Eq_1342 esi_225 = r11_153.u2[(uint64) ((word32) r9_214 - 0x04)];
				if (r10d_189 != 0x00)
					esi_225 = __bswap<word32>(esi_225);
				if (edx_194 > 100)
				{
					rcx->u0.t0008.u0 = (int32) edx_194;
					Eq_13248 rdx_234;
					rdx_234.u1 = 0x00;
					byte al_263;
					do
					{
						if (rcx->u0.t0008.u0 + 0x01 > r8d_166)
							goto l00000001800087FA;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
						al_263 = r11_153.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
						if (rdx_234 < 0x0104)
							*(&tLoc0138 + rdx_234) = (word64) al_263;
						rdx_234 = (word64) rdx_234 + 1;
					} while (al_263 != 0x00);
					if (rdx_234 < 0x0104)
						*(&tLoc0138 + rdx_234) = (word64) al_263;
					else
						tLoc0138.b0103 = 0x00;
					rcx->u0.t0008.u0 = (int32) r9d_282;
				}
l00000001800087FA:
				if (strstr(&tLoc0138, "-skin") != null)
				{
					Eq_1342 edi_324;
					edi_324.u0 = rcx->u0.t0008.u0;
					fn0000000180008870(rcx, esi_225);
					rcx->u0.t0008.u0 = (int32) edi_324;
				}
				ebp_330.u2 = (word64) ebp_330 + 1;
			} while (ebp_330 < edx);
		}
l0000000180008831:
	}
	return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
}

// 0000000180008870: void fn0000000180008870(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx)
// Called from:
//      fn0000000180008650
void fn0000000180008870(union Eq_3676 * rcx, Eq_1342 edx)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_8 = g_qw80030008 ^ fp - 488;
	if (edx == 0x00)
	{
l0000000180008D78:
		word64 qwLoc01F0;
		fn0000000180023580(rax_8 ^ fp - 488, qwLoc01F0);
		return;
	}
	word128 xmm1_18 = g_ow80028E70;
	Eq_137 r8_19;
	r8_19.u0 = rcx->u0.t0000.u0;
	Eq_13343 tLoc0188;
	tLoc0188.ow0000 = g_ow80028E60;
	tLoc0188.ow0010 = xmm1_18;
	rcx->u0.t0008.u0 = (int32) edx;
	if (r8_19 == 0x00 || (word64) edx + 4 > ((rcx->u0).t000C).u0)
		goto l0000000180008D78;
	rcx->u0.t0008.u0 = (int32) ((word64) edx + 4);
	Eq_1342 edi_53 = r8_19.u2[(uint64) edx];
	if ((&rcx->u0)[1] != 0x00)
		edi_53 = __bswap<word32>(edi_53);
	if (fn000000018001D8D0(rcx, &tLoc0188) != 0x00)
	{
		Eq_13392 tLoc0148;
		fn0000000180005050(rcx, edi_53, &tLoc0148);
		Eq_137 r9_92;
		r9_92.u0 = rcx->u0.t0000.u0;
		if (r9_92 != 0x00)
		{
			uint64 r10_103 = (uint64) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 edx_105;
			edx_105.u0 = rcx->u0.t000C.u0;
			Eq_1342 r10d_104 = (word32) r10_103;
			if (r10d_104 <= edx_105)
			{
				Eq_1342 r8d_124 = (&rcx->u0)[1];
				rcx->u0.t0008.u0 = (int32) r10d_104;
				Eq_1342 esi_129 = r9_92.u2[(uint64) ((word32) r10_103 - 0x04)];
				if (r8d_124 != 0x00)
					esi_129 = __bswap<word32>(esi_129);
				if ((word32) r10_103 + 0x04 <= edx_105)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_143 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r11d_154 = r9_92.u2[(uint64) ((word32) r10_143 - 0x04)];
					if (r8d_124 != 0x00)
						r11d_154 = __bswap<word32>(r11d_154);
					if ((word32) r10_143 + 0x04 <= edx_105)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_174 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 ebp_192 = r9_92.u2[(uint64) ((word32) r10_174 - 0x04)];
						if (r8d_124 != 0x00)
							ebp_192 = __bswap<word32>(ebp_192);
						if ((word32) r10_174 + 0x04 > edx_105)
						{
l0000000180008D70:
							goto l0000000180008D78;
						}
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_212 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 r14d_230 = r9_92.u2[(uint64) ((word32) r10_212 - 0x04)];
						if (r8d_124 != 0x00)
							r14d_230 = __bswap<word32>(r14d_230);
						if ((word32) r10_212 + 0x04 > edx_105)
						{
l0000000180008D58:
							goto l0000000180008D60;
						}
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_250 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 r15d_269 = r9_92.u2[(uint64) ((word32) r10_250 - 0x04)];
						if (r8d_124 != 0x00)
							r15d_269 = __bswap<word32>(r15d_269);
						if ((word32) r10_250 + 0x04 > edx_105)
						{
l0000000180008D50:
							goto l0000000180008D58;
						}
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_289 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 r12d_309 = r9_92.u2[(uint64) ((word32) r10_289 - 0x04)];
						if (r8d_124 != 0x00)
							r12d_309 = __bswap<word32>(r12d_309);
						if ((word32) r10_289 + 0x04 > edx_105)
						{
l0000000180008D48:
							goto l0000000180008D50;
						}
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_329 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 r13d_350 = r9_92.u2[(uint64) ((word32) r10_329 - 0x04)];
						if (r8d_124 != 0x00)
							r13d_350 = __bswap<word32>(r13d_350);
						if ((word32) r10_329 + 0x04 <= edx_105)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r10_364 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 eax_370 = r9_92.u2[(uint64) ((word32) r10_364 - 0x04)];
							Eq_1342 dwLoc01C8_1081 = eax_370;
							if (r8d_124 != 0x00)
								dwLoc01C8_1081 = __bswap<word32>(eax_370);
							if ((word32) r10_364 + 0x04 <= edx_105)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 r10_392 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 eax_398 = r9_92.u2[(uint64) ((word32) r10_392 - 0x04)];
								Eq_1342 dwLoc01C0_1083 = eax_398;
								if (r8d_124 != 0x00)
									dwLoc01C0_1083 = __bswap<word32>(eax_398);
								if ((word32) r10_392 + 0x04 <= edx_105)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint64 r10_420 = (uint64) rcx->u0.t0008.u0;
									Eq_1342 eax_426 = r9_92.u2[(uint64) ((word32) r10_420 - 0x04)];
									Eq_1342 dwLoc01C4_1085 = eax_426;
									if (r8d_124 != 0x00)
										dwLoc01C4_1085 = __bswap<word32>(eax_426);
									if ((word32) r10_420 + 0x04 <= edx_105)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r10_448 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_454 = r9_92.u2[(uint64) ((word32) r10_448 - 0x04)];
										Eq_1342 dwLoc01B8_1087 = eax_454;
										if (r8d_124 != 0x00)
											dwLoc01B8_1087 = __bswap<word32>(eax_454);
										if ((word32) r10_448 + 0x04 <= edx_105)
										{
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											Eq_1342 eax_483 = r9_92.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
											Eq_1342 dwLoc01BC_1089 = eax_483;
											if (r8d_124 != 0x00)
												dwLoc01BC_1089 = __bswap<word32>(eax_483);
											if (r11d_154 != 0x00)
												rcx->u0.t0008.u0 = (int32) r11d_154;
											Eq_1342 edi_512;
											edi_512.u0 = 0x00;
											if (esi_129 != 0x00)
											{
												uint64 r9_1840 = 0x00;
												do
												{
													word32 r9d_580 = (word32) r9_1840;
													Eq_137 rdx_534;
													rdx_534.u0 = rcx->u0.t0000.u0;
													if (rdx_534 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
														goto l0000000180008D91;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													uint64 rdx_555 = (uint64) rdx_534.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
													Eq_1342 edx_559 = (word32) rdx_555;
													word32 rdx_32_32_567 = SLICE(rdx_555, word32, 32);
													if ((&rcx->u0)[1] != 0x00)
														rdx_555 = SEQ(rdx_32_32_567, __bswap<word32>(edx_559));
													fn0000000180005050(rcx, (word32) rdx_555, &tLoc0148);
													r9_1840 = (uint64) (r9d_580 + 0x01);
												} while ((word32) r9_1840 < esi_129);
											}
											if (r14d_230 != 0x00)
												rcx->u0.t0008.u0 = (int32) r14d_230;
											uint32 ebp_630 = ebp_192 >> 0x04;
											uint32 esi_1058 = 0x00;
											if (ebp_630 != 0x00)
											{
												do
												{
													word128 xmm1_639 = g_ow80028E70;
													tLoc0188.ow0000 = g_ow80028E60;
													tLoc0188.ow0010 = xmm1_639;
													if (fn000000018001D8D0(rcx, &tLoc0188) == 0x00)
														goto l0000000180008D91;
													++esi_1058;
												} while (esi_1058 < ebp_630);
											}
											if (r12d_309 != 0x00)
												rcx->u0.t0008.u0 = (int32) r12d_309;
											Eq_1342 ecx_1059;
											ecx_1059.u0 = 0x00;
											if (r15d_269 != 0x00)
											{
												Eq_137 rdx_726;
												rdx_726.u0 = rcx->u0.t0000.u0;
												do
												{
													if (rdx_726 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
														goto l0000000180008D91;
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													ecx_1059.u2 = (word64) ecx_1059 + 1;
												} while (ecx_1059 < r15d_269);
											}
											if (dwLoc01C8_1081 != 0x00)
												rcx->u0.t0008.u0 = (int32) dwLoc01C8_1081;
											Eq_1342 ecx_1060;
											ecx_1060.u0 = 0x00;
											if (r13d_350 != 0x00)
											{
												Eq_137 rdx_797;
												rdx_797.u0 = rcx->u0.t0000.u0;
												do
												{
													if (rdx_797 == 0x00)
														goto l0000000180008D91;
													Eq_1342 eax_810 = rcx->u0.t0008.u0 + 0x01;
													if (eax_810 > ((rcx->u0).t000C).u0)
														goto l0000000180008D91;
													rcx->u0.t0008.u0 = (int32) eax_810;
													ecx_1060.u2 = (word64) ecx_1060 + 1;
												} while (ecx_1060 < r13d_350);
											}
											uint64 rax_824 = (uint64) rcx->u0.t0008.u0;
											uint64 rcx_835 = (uint64) ((word32) rax_824 & ~0x03);
											Eq_1342 ecx_844 = (word32) rcx_835;
											Eq_1342 eax_845 = (word32) rcx_835 + 0x04;
											if (((byte) rax_824 & 0x03) <= 0x00)
												eax_845 = ecx_844;
											if (dwLoc01C4_1085 != 0x00)
												eax_845 = dwLoc01C4_1085;
											rcx->u0.t0008.u0 = (int32) eax_845;
											Eq_1342 ecx_1061;
											ecx_1061.u0 = 0x00;
											if (dwLoc01C0_1083 != 0x00)
											{
												Eq_137 rdx_875;
												rdx_875.u0 = rcx->u0.t0000.u0;
												do
												{
													if (rdx_875 == 0x00)
														goto l0000000180008D91;
													Eq_1342 eax_888 = rcx->u0.t0008.u0 + 0x02;
													if (eax_888 > ((rcx->u0).t000C).u0)
														goto l0000000180008D91;
													rcx->u0.t0008.u0 = (int32) eax_888;
													ecx_1061.u2 = (word64) ecx_1061 + 1;
												} while (ecx_1061 < dwLoc01C0_1083);
											}
											uint64 rax_902 = (uint64) rcx->u0.t0008.u0;
											uint64 rcx_913 = (uint64) ((word32) rax_902 & ~0x03);
											Eq_1342 ecx_922 = (word32) rcx_913;
											Eq_1342 eax_923 = (word32) rcx_913 + 0x04;
											if (((byte) rax_902 & 0x03) <= 0x00)
												eax_923 = ecx_922;
											if (dwLoc01BC_1089 != 0x00)
												eax_923 = dwLoc01BC_1089;
											rcx->u0.t0008.u0 = (int32) eax_923;
											if (dwLoc01B8_1087 != 0x00)
											{
												do
												{
													Eq_13997 tLoc01B0;
													tLoc01B0.qw0004 = 0x00;
													tLoc01B0.dw0000 = 0x00;
													Eq_13988 tLoc01A0;
													tLoc01A0.qw0004 = 0x00;
													tLoc01A0.dw0000 = 0x00;
													if (fn000000018001D5C0(rcx, &tLoc01B0) == 0x00 || fn000000018001D5C0(rcx, &tLoc01A0) == 0x00)
														goto l0000000180008D91;
													edi_512.u2 = (word64) edi_512 + 1;
												} while (edi_512 < dwLoc01B8_1087);
											}
l0000000180008D40:
											goto l0000000180008D48;
										}
									}
								}
							}
						}
l0000000180008D91:
						goto l0000000180008D40;
					}
				}
				goto l0000000180008D68;
			}
		}
	}
	goto l0000000180008D70;
}

// 0000000180008DC0: void fn0000000180008DC0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180006F90
void fn0000000180008DC0(union Eq_3676 * rcx, Eq_1342 r8d)
{
	ptr64 fp;
	word64 r8;
	r8d = (word32) r8;
	uint64 rdi_14 = (uint64) r8d;
	ui64 rax_10 = g_qw80030008 ^ fp - 600;
	Eq_1342 edi_21 = (word32) rdi_14;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) edi_21;
		Eq_14044 tLoc0238;
		memset(&tLoc0238, 0, 0x0104);
		Eq_14054 tLoc0128;
		memset(&tLoc0128, 0, 0x0104);
		Eq_137 r10_35;
		r10_35.u0 = rcx->u0.t0000.u0;
		if (r10_35 != 0x00)
		{
			uint64 rdx_43 = (uint64) ((word32) rdi_14 + 0x04);
			Eq_1342 r8d_45;
			r8d_45.u0 = rcx->u0.t000C.u0;
			Eq_1342 edx_44 = (word32) rdx_43;
			if (edx_44 <= r8d_45)
			{
				Eq_1342 r11d_55 = (&rcx->u0)[1];
				rcx->u0.t0008.u0 = (int32) edx_44;
				Eq_1342 r9d_171 = r10_35.u2[(uint64) ((word32) rdx_43 - 0x04)];
				if (r11d_55 != 0x00)
					r9d_171 = __bswap<word32>(r9d_171);
				if ((word32) rdx_43 + 0x04 <= r8d_45)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_80 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_189 = r10_35.u2[(uint64) ((word32) rdx_80 - 0x04)];
					if (r11d_55 != 0x00)
						esi_189 = __bswap<word32>(esi_189);
					if ((word32) rdx_80 + 0x04 <= r8d_45)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_115 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 ebp_131 = r10_35.u2[(uint64) ((word32) rdx_115 - 0x04)];
						if (r11d_55 != 0x00)
							ebp_131 = __bswap<word32>(ebp_131);
						if ((word32) rdx_115 + 0x04 <= r8d_45)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 edi_163 = r10_35.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							if (r11d_55 != 0x00)
								edi_163 = __bswap<word32>(edi_163);
							fn0000000180005050(rcx, r9d_171, &tLoc0238);
							fn0000000180005050(rcx, esi_189, &tLoc0128);
							struct Eq_14187 * rax_205 = fn0000000180001A00(&g_t800306F0);
							if (rax_205 != null)
							{
								int64 r8_220 = rax_205 - &tLoc0238;
								union Eq_14207 * rdx_222 = &tLoc0238;
								char cl_227;
								do
								{
									cl_227 = rdx_222->u0;
									(&rdx_222->u0)[r8_220] = cl_227;
									rdx_222 = (union Eq_14207 *) ((char *) rdx_222 + 1);
								} while (cl_227 != 0x00);
								word64 rax_239 = rax_205 - &tLoc0128;
								union Eq_14222 * rdx_241 = &tLoc0128;
								char al_247;
								do
								{
									al_247 = rdx_241->u0;
									(&rdx_241->u0)[rax_239 + 260] = al_247;
									rdx_241 = (union Eq_14222 *) ((char *) rdx_241 + 1);
								} while (al_247 != 0x00);
								rax_205->dw0514 = ~0x00;
							}
							g_dw80030748 = 0x00;
							fn0000000180008FC0(rcx, 0x00, edi_163, ebp_131);
						}
					}
					goto l0000000180008F88;
				}
			}
		}
		goto l0000000180008F88;
	}
	else
	{
l0000000180008F88:
		word64 qwLoc0260;
		fn0000000180023580(rax_10 ^ fp - 600, qwLoc0260);
	}
}

// 0000000180008FC0: void fn0000000180008FC0(Register (ptr64 Eq_3676) rcx, Register word32 edx, Register Eq_1342 r8d, Register Eq_1342 r9d)
// Called from:
//      fn0000000180008DC0
//      fn0000000180008FC0
//      fn000000018000B660
void fn0000000180008FC0(union Eq_3676 * rcx, word32 edx, Eq_1342 r8d, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_12 = g_qw80030008 ^ fp - 1000;
	if (r8d != 0x00 && (r8d >= 100 && r8d < ((rcx->u0).t000C).u0))
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		word32 eax_39 = g_dw80030728 - 0x01;
		Eq_1342 dwLoc03AC_673;
		dwLoc03AC_673.u0 = 0x00;
		if (r9d != 0x00)
		{
			Eq_1342 ebx_614;
			do
			{
				Eq_14370 tLoc0358;
				memset(&tLoc0358, 0, 0x0104);
				Eq_14374 tLoc0248;
				memset(&tLoc0248, 0, 0x0104);
				Eq_14378 tLoc0138;
				memset(&tLoc0138, 0, 0x0104);
				Eq_137 r9_67;
				r9_67.u0 = rcx->u0.t0000.u0;
				if (r9_67 == 0x00)
				{
l0000000180009416:
					goto l00000001800093ED;
				}
				Eq_1342 r8d_80;
				r8d_80.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_80)
					goto l0000000180009416;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_86 = (uint64) rcx->u0.t0008.u0;
				uint64 rdx_159 = (uint64) r9_67.u2[(uint64) ((word32) r11_86 - 0x04)];
				Eq_1342 r10d_93 = (&rcx->u0)[1];
				Eq_1342 edx_98 = (word32) rdx_159;
				word32 rdx_32_32_160 = SLICE(rdx_159, word32, 32);
				if (r10d_93 != 0x00)
					rdx_159 = SEQ(rdx_32_32_160, __bswap<word32>(edx_98));
				if ((word32) r11_86 + 0x04 > r8d_80)
					goto l0000000180009416;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r11_112 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 ebx_123 = r9_67.u2[(uint64) ((word32) r11_112 - 0x04)];
				if (r10d_93 != 0x00)
					ebx_123 = __bswap<word32>(ebx_123);
				if ((word32) r11_112 + 0x04 > r8d_80)
					goto l0000000180009416;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 r9d_149 = r9_67.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if (r10d_93 != 0x00)
					r9d_149 = __bswap<word32>(r9d_149);
				fn0000000180005050(rcx, (word32) rdx_159, &tLoc0358);
				fn0000000180005050(rcx, ebx_123, &tLoc0248);
				fn0000000180005050(rcx, r9d_149, &tLoc0138);
				Eq_14382 tLoc0390;
				tLoc0390.qw0004 = 0x00;
				tLoc0390.dw0000 = 0x00;
				Eq_14393 tLoc0370;
				tLoc0370.qw0008 = 0x00;
				tLoc0370.qw0000 = 0x00;
				Eq_14404 tLoc0380;
				tLoc0380.qw0004 = 0x00;
				tLoc0380.dw0000 = 0x00;
				if (fn000000018001D5C0(rcx, &tLoc0390) == 0x00 || (fn000000018001D710(rcx, &tLoc0370) == 0x00 || (fn000000018001D5C0(rcx, &tLoc0380) == 0x00 || (((rcx->u0).t0000).u0 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0))))
					goto l0000000180009416;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				++g_dw80030748;
				Eq_137 r8_275;
				r8_275.u0 = rcx->u0.t0000.u0;
				if (r8_275 == 0x00)
					goto l0000000180009416;
				Eq_1342 edx_288;
				edx_288.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > edx_288)
					goto l0000000180009416;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_294 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_303 = r8_275.u2[(uint64) ((word32) r9_294 - 0x04)];
				word32 r9d_297 = (word32) r9_294;
				Eq_1342 r10d_305 = (&rcx->u0)[1];
				Eq_1342 dwLoc03B0_675 = eax_303;
				if (r10d_305 != 0x00)
					dwLoc03B0_675 = __bswap<word32>(eax_303);
				if ((word32) r9_294 + 0x04 > edx_288)
					goto l0000000180009416;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_324 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 ebx_330 = r8_275.u2[(uint64) ((word32) r9_324 - 0x04)];
				Eq_1342 dwLoc03B8_677 = ebx_330;
				if (r10d_305 != 0x00)
				{
					ebx_330 = __bswap<word32>(ebx_330);
					dwLoc03B8_677 = ebx_330;
				}
				if ((word32) r9_324 + 0x04 > edx_288)
					goto l0000000180009416;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 eax_353;
				eax_353.u0 = rcx->u0.t0008.u0;
				if ((word64) eax_353 + 4 > edx_288)
					goto l0000000180009416;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_364 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_370 = r8_275.u2[(uint64) ((word32) r9_364 - 0x04)];
				Eq_1342 dwLoc03B4_680 = eax_370;
				if (r10d_305 != 0x00)
					dwLoc03B4_680 = __bswap<word32>(eax_370);
				Eq_1342 eax_385 = (word32) r9_364 + 0x04;
				if (g_t800306F0.u0 > 0x0101)
				{
					if (eax_385 > edx_288)
						goto l0000000180009416;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					eax_385 = rcx->u0.t0008.u0 + 0x04;
				}
				if (eax_385 > edx_288)
					goto l0000000180009416;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				struct Eq_14187 * rax_417 = fn0000000180001A00(&g_t800306F0);
				if (rax_417 != null)
				{
					int64 r8_436 = rax_417 - &tLoc0358;
					union Eq_14622 * rdx_438 = &tLoc0358;
					char cl_443;
					do
					{
						cl_443 = rdx_438->u1.b0000;
						(&rdx_438->u1.b0000)[r8_436] = cl_443;
						rdx_438 = (union Eq_14622 *) ((char *) rdx_438 + 1);
					} while (cl_443 != 0x00);
					int64 rdx_455 = rax_417 - &tLoc0248;
					union Eq_14637 * rcx_457 = &tLoc0248;
					char al_462;
					do
					{
						al_462 = rcx_457->u0;
						((char *) rcx_457 + 260)[rdx_455] = al_462;
						rcx_457 = (union Eq_14637 *) ((char *) rcx_457 + 1);
					} while (al_462 != 0x00);
					int64 rdx_474 = rax_417 - &tLoc0138;
					union Eq_14654 * rcx_476 = &tLoc0138;
					char al_481;
					do
					{
						al_481 = rcx_476->u0;
						((char *) rcx_476 + 520)[rdx_474] = al_481;
						rcx_476 = (union Eq_14654 *) ((char *) rcx_476 + 1);
					} while (al_481 != 0x00);
					rax_417->r0520 = tLoc0390.r0000;
					word128 xmm0_499 = (word128) tLoc0370;
					rax_417->dw0514 = eax_39;
					word32 eax_505 = tLoc0390.dw0008;
					rax_417->ow0538 = xmm0_499;
					rax_417->dw0528 = eax_505;
					word32 eax_511 = tLoc0380.dw0008;
					rax_417->r052C = tLoc0380.r0000;
					rax_417->dw0534 = eax_511;
				}
				if (g_dw800306F4 != 0x00)
				{
					Eq_1342 eax_533;
					eax_533.u2 = (word64) ebx_330 + r9d_297;
					if (ebx_330 == 0x00)
						eax_533 = ebx_330;
					dwLoc03B8_677 = eax_533;
					if (dwLoc03B4_680 != 0x00)
					{
						dwLoc03B4_680 += eax_353;
						dwLoc03B8_677 = eax_533;
					}
				}
				Eq_1342 ebx_607;
				ebx_607.u0 = rcx->u0.t0008.u0;
				fn0000000180008FC0(rcx, edx + 0x01, dwLoc03B8_677, dwLoc03B0_675);
				fn0000000180009420(rcx, rax_417, dwLoc03B4_680);
				rcx->u0.t0008.u0 = (int32) ebx_607;
				ebx_614.u2 = (word64) dwLoc03AC_673 + 1;
				dwLoc03AC_673 = ebx_614;
			} while (ebx_614 < r9d);
		}
l00000001800093ED:
	}
	word64 qwLoc03F0;
	fn0000000180023580(rax_12 ^ fp - 1000, qwLoc03F0);
}

// 0000000180009420: void fn0000000180009420(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_14187) rdx, Register Eq_1342 r9d)
// Called from:
//      fn0000000180008FC0
void fn0000000180009420(union Eq_3676 * rcx, struct Eq_14187 * rdx, Eq_1342 r9d)
{
	word64 r9;
	r9d = (word32) r9;
	if (r9d == 0x00 || (r9d < 100 || r9d >= ((rcx->u0).t000C).u0))
		return;
	rcx->u0.t0008.u0 = (int32) r9d;
	++g_dw80030748;
	Eq_137 r9_23;
	r9_23.u0 = rcx->u0.t0000.u0;
	if (r9_23 == 0x00)
		return;
	uint64 r8_34 = (uint64) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 r10d_36;
	r10d_36.u0 = rcx->u0.t000C.u0;
	Eq_1342 r8d_35 = (word32) r8_34;
	if (r8d_35 > r10d_36)
		return;
	Eq_1342 ebx_56 = (&rcx->u0)[1];
	rcx->u0.t0008.u0 = (int32) r8d_35;
	Eq_1342 edx_61 = r9_23.u2[(uint64) ((word32) r8_34 - 0x04)];
	if (ebx_56 != 0x00)
		edx_61 = __bswap<word32>(edx_61);
	if ((word32) r8_34 + 0x04 > r10d_36)
		return;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r9_89 = (uint64) r9_23.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
	Eq_1342 r9d_104 = (word32) r9_89;
	word32 r9_32_32_127 = SLICE(r9_89, word32, 32);
	if (ebx_56 != 0x00)
		r9d_104 = __bswap<word32>(r9d_104);
	rdx->t0518.u0 = (int32) edx_61;
	uint64 r9_111 = SEQ(r9_32_32_127, r9d_104);
	if (g_dw800306F4 != 0x00)
	{
		r9_111 = SEQ(r9_32_32_127, r9d_104);
		if (r9d_104 != 0x00)
			r9_111 = (uint64) (r9d_104 + r8d_35);
	}
	Eq_1342 ebx_142;
	ebx_142.u0 = rcx->u0.t0008.u0;
	fn0000000180009500(rcx, rdx, (word32) r9_111, edx_61);
	rcx->u0.t0008.u0 = (int32) ebx_142;
}

// 0000000180009500: void fn0000000180009500(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_14187) rdx, Register Eq_1342 r9d, Stack Eq_1342 dwArg28)
// Called from:
//      fn0000000180009420
void fn0000000180009500(union Eq_3676 * rcx, struct Eq_14187 * rdx, Eq_1342 r9d, Eq_1342 dwArg28)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_14 = g_qw80030008 ^ fp - 0x0278;
	if (r9d == 0x00)
	{
l00000001800096C2:
		word64 qwLoc0280;
		fn0000000180023580(rax_14 ^ fp - 0x0278, qwLoc0280);
		return;
	}
	if (r9d < 100)
	{
l00000001800096B5:
		goto l00000001800096BA;
	}
	else
	{
		Eq_1342 edi_34;
		edi_34.u0 = rcx->u0.t000C.u0;
		if (r9d >= edi_34)
			goto l00000001800096B5;
		rcx->u0.t0008.u0 = (int32) r9d;
		Eq_15004 tLoc0248;
		if (dwArg28 == 0x03)
		{
			Eq_14916 tLoc0138;
			memset(&tLoc0138, 0, 0x0104);
			Eq_137 rdx_336;
			rdx_336.u0 = rcx->u0.t0000.u0;
			if (rdx_336 != 0x00)
			{
				uint64 rsi_342 = (uint64) ((word64) r9d + 4);
				Eq_1342 esi_343 = (word32) rsi_342;
				if (esi_343 <= edi_34)
				{
					Eq_1342 r8d_353 = (&rcx->u0)[1];
					rcx->u0.t0008.u0 = (int32) esi_343;
					Eq_1342 r10d_358 = rdx_336.u2[(uint64) ((word32) rsi_342 - 0x04)];
					if (r8d_353 != 0x00)
						r10d_358 = __bswap<word32>(r10d_358);
					if ((word32) rsi_342 + 0x04 <= edi_34)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r9_372 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 esi_383 = rdx_336.u2[(uint64) ((word32) r9_372 - 0x04)];
						if (r8d_353 != 0x00)
							esi_383 = __bswap<word32>(esi_383);
						if ((word32) r9_372 + 0x04 <= edi_34)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 r9d_409 = rdx_336.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							if (r8d_353 != 0x00)
								r9d_409 = __bswap<word32>(r9d_409);
							fn0000000180005050(rcx, r10d_358, &tLoc0248);
							fn0000000180005050(rcx, esi_383, &tLoc0138);
							fn0000000180005050(rcx, r9d_409, &tLoc0248);
							Eq_137 r9_462;
							r9_462.u0 = rcx->u0.t0000.u0;
							if (r9_462 != 0x00)
							{
								Eq_1342 ecx_475;
								ecx_475.u0 = rcx->u0.t000C.u0;
								if (rcx->u0.t0008.u0 + 0x04 <= ecx_475)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint64 r10_481 = (uint64) rcx->u0.t0008.u0;
									word32 r10d_538 = (word32) r10_481;
									if ((word32) r10_481 + 0x04 <= ecx_475)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r9_502 = (uint64) r9_462.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
										Eq_1342 r9d_504 = (word32) r9_502;
										word32 r9_32_32_556 = SLICE(r9_502, word32, 32);
										if ((&rcx->u0)[1] != 0x00)
											r9d_504 = __bswap<word32>(r9d_504);
										ui64 r8_513 = rdx - &tLoc0138;
										union Eq_15123 * rcx_515 = &tLoc0138;
										char al_520;
										do
										{
											al_520 = rcx_515->u0;
											(&rcx_515->u0)[r8_513 + 780] = al_520;
											rcx_515 = (union Eq_15123 *) ((char *) rcx_515 + 1);
										} while (al_520 != 0x00);
										uint64 r9_540 = SEQ(r9_32_32_556, r9d_504);
										if (g_dw800306F4 != 0x00)
										{
											r9_540 = SEQ(r9_32_32_556, r9d_504);
											if (r9d_504 != 0x00)
												r9_540 = (uint64) ((word64) r9d_504 + r10d_538);
										}
										Eq_1342 edi_571;
										edi_571.u0 = rcx->u0.t0008.u0;
										fn0000000180009870(rcx, rdx, (word32) r9_540);
										rcx->u0.t0008.u0 = (int32) edi_571;
										goto l00000001800096B5;
									}
								}
							}
						}
					}
				}
			}
		}
		else if (dwArg28 == 0x02)
		{
			Eq_137 r8_146;
			r8_146.u0 = rcx->u0.t0000.u0;
			if (r8_146 != 0x00)
			{
				uint64 rsi_152 = (uint64) ((word64) r9d + 4);
				Eq_1342 esi_153 = (word32) rsi_152;
				if (esi_153 <= edi_34)
				{
					Eq_1342 r10d_163 = (&rcx->u0)[1];
					rcx->u0.t0008.u0 = (int32) esi_153;
					uint64 rdx_162 = (uint64) r8_146.u2[(uint64) ((word32) rsi_152 - 0x04)];
					Eq_1342 edx_168 = (word32) rdx_162;
					word32 rdx_32_32_228 = SLICE(rdx_162, word32, 32);
					if (r10d_163 != 0x00)
						rdx_162 = SEQ(rdx_32_32_228, __bswap<word32>(edx_168));
					if ((word32) rsi_152 + 0x04 <= edi_34)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r9_182 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 esi_193 = r8_146.u2[(uint64) ((word32) r9_182 - 0x04)];
						if (r10d_163 != 0x00)
							esi_193 = __bswap<word32>(esi_193);
						if ((word32) r9_182 + 0x04 <= edi_34)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							Eq_1342 r9d_219 = r8_146.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
							if (r10d_163 != 0x00)
								r9d_219 = __bswap<word32>(r9d_219);
							fn0000000180005050(rcx, (word32) rdx_162, &tLoc0248);
							fn0000000180005050(rcx, esi_193, &tLoc0248);
							fn0000000180005050(rcx, r9d_219, &tLoc0248);
							if (rcx->u0.t0000.u0 != 0x00)
							{
								Eq_1342 ecx_284;
								ecx_284.u0 = rcx->u0.t000C.u0;
								if (rcx->u0.t0008.u0 + 0x04 <= ecx_284)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									if (rcx->u0.t0008.u0 + 0x04 <= ecx_284)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										if (rcx->u0.t0008.u0 + 0x04 <= ecx_284)
										{
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											if (rcx->u0.t0008.u0 + 0x04 <= ecx_284)
											{
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
												if (rcx->u0.t0008.u0 + 0x04 <= ecx_284)
												{
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													goto l00000001800096B5;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		else
		{
			if (dwArg28 != 0x01 && dwArg28 != 0x04)
				goto l00000001800096B5;
			Eq_137 r8_51;
			r8_51.u0 = rcx->u0.t0000.u0;
			if (r8_51 != 0x00)
			{
				uint64 rsi_58 = (uint64) ((word64) r9d + 4);
				Eq_1342 esi_59 = (word32) rsi_58;
				if (esi_59 <= edi_34)
				{
					Eq_1342 r11d_70 = (&rcx->u0)[1];
					rcx->u0.t0008.u0 = (int32) esi_59;
					uint64 rdx_119 = (uint64) r8_51.u2[(uint64) ((word32) rsi_58 - 0x04)];
					Eq_1342 edx_75 = (word32) rdx_119;
					word32 rdx_32_32_120 = SLICE(rdx_119, word32, 32);
					if (r11d_70 != 0x00)
						rdx_119 = SEQ(rdx_32_32_120, __bswap<word32>(edx_75));
					if ((word32) rsi_58 + 0x04 <= edi_34)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_89 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 r9d_100 = r8_51.u2[(uint64) ((word32) r10_89 - 0x04)];
						if (r11d_70 != 0x00)
							r9d_100 = __bswap<word32>(r9d_100);
						if ((word32) r10_89 + 0x04 <= edi_34)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							fn0000000180005050(rcx, (word32) rdx_119, &tLoc0248);
							fn0000000180005050(rcx, r9d_100, &tLoc0248);
							goto l00000001800096B5;
						}
					}
				}
			}
		}
l00000001800096BA:
		goto l00000001800096C2;
	}
}

// 0000000180009870: void fn0000000180009870(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_14187) rdx, Register Eq_1342 r9d)
// Called from:
//      fn0000000180009500
//      fn0000000180014D40
void fn0000000180009870(union Eq_3676 * rcx, struct Eq_14187 * rdx, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_12 = g_qw80030008 ^ fp - 600;
	if (r9d == 0x00 || (r9d < 100 || r9d >= ((rcx->u0).t000C).u0))
	{
l0000000180009962:
		goto l0000000180009967;
	}
	else
	{
		rcx->u0.t0008.u0 = (int32) r9d;
		Eq_15411 tLoc0238;
		memset(&tLoc0238, 0, 0x0104);
		Eq_137 r8_36;
		r8_36.u0 = rcx->u0.t0000.u0;
		if (r8_36 != 0x00)
		{
			uint64 rdi_43 = (uint64) ((word64) r9d + 4);
			Eq_1342 edi_44 = (word32) rdi_43;
			if (edi_44 <= ((rcx->u0).t000C).u0)
			{
				Eq_1342 r10d_54 = (&rcx->u0)[1];
				rcx->u0.t0008.u0 = (int32) edi_44;
				uint64 rdx_100 = (uint64) r8_36.u2[(uint64) ((word32) rdi_43 - 0x04)];
				Eq_1342 edx_59 = (word32) rdx_100;
				word32 rdx_32_32_99 = SLICE(rdx_100, word32, 32);
				if (r10d_54 != 0x00)
					rdx_100 = SEQ(rdx_32_32_99, __bswap<word32>(edx_59));
				if ((word32) rdi_43 + 0x04 <= ((rcx->u0).t000C).u0)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 r9d_112 = r8_36.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					if (r10d_54 != 0x00)
						r9d_112 = __bswap<word32>(r9d_112);
					Eq_15484 tLoc0128;
					fn0000000180005050(rcx, (word32) rdx_100, &tLoc0128);
					fn0000000180005050(rcx, r9d_112, &tLoc0238);
					int64 rbp_128 = rdx - &tLoc0238;
					union Eq_15493 * rcx_130 = &tLoc0238;
					char al_135;
					do
					{
						al_135 = rcx_130->u0.b0000;
						(&(&rcx_130->u0 + 1040)->u0)[rbp_128] = (struct Eq_75600) al_135;
						rcx_130 = (union Eq_15493 *) ((char *) rcx_130 + 1);
					} while (al_135 != 0x00);
					goto l0000000180009962;
				}
			}
		}
l0000000180009967:
		word64 qwLoc0260;
		fn0000000180023580(rax_12 ^ fp - 600, qwLoc0260);
	}
}

// 0000000180009990: Register word32 fn0000000180009990(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_5980) rdx)
// Called from:
//      fn0000000180003F40
word32 fn0000000180009990(union Eq_3676 * rcx, struct Eq_5980 * rdx)
{
	ptr64 fp;
	ui64 rax_11 = g_qw80030008 ^ fp - 0x05D8;
	word64 qwLoc05E0;
	if (rcx->u0.t0000.u0 != 0x00)
	{
		uint64 r8_25 = (uint64) (rcx->u0.t0008.u0 + 0x04);
		Eq_1342 ecx_27;
		ecx_27.u0 = rcx->u0.t000C.u0;
		Eq_1342 r8d_26 = (word32) r8_25;
		if (r8d_26 <= ecx_27)
		{
			rcx->u0.t0008.u0 = (int32) r8d_26;
			if ((word32) r8_25 + 0x04 <= ecx_27)
			{
				uint64 r8_37 = (uint64) ((word64) r8d_26 + 4);
				rcx->u0.t0008.u0 = (int32) (word32) r8_37;
				if ((word32) r8_37 + 0x04 <= ecx_27)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_48 = (uint64) rcx->u0.t0008.u0;
					word32 edx_54 = (word32) rdx_48;
					if ((word32) rdx_48 + 0x04 <= ecx_27)
					{
						uint64 rdx_56 = (uint64) (edx_54 + 0x04);
						rcx->u0.t0008.u0 = (int32) (word32) rdx_56;
						if ((word32) rdx_56 + 0x04 <= ecx_27)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 rdx_67 = (uint64) rcx->u0.t0008.u0;
							if ((word32) rdx_67 + 0x04 <= ecx_27)
							{
								rcx->u0.t0008.u0 = (int32) ((word32) rdx_67 + 0x04);
								uint64 rax_78 = (uint64) rdx->dw0008;
								Eq_1342 eax_79 = (word32) rax_78;
								if (eax_79 != 0x00)
								{
									rcx->u0.t0008.u0 = (int32) eax_79;
									Eq_1342 edx_89 = (word32) rax_78 + 0x04;
									int32 r8d_126 = rdx->dw0010;
									if (edx_89 <= ecx_27)
									{
										rcx->u0.t0008.u0 = (int32) edx_89;
										uint64 rdx_94 = (uint64) ((word64) edx_89 + 4);
										Eq_1342 edx_95 = (word32) rdx_94;
										if (edx_95 <= ecx_27)
										{
											rcx->u0.t0008.u0 = (int32) edx_95;
											if ((word32) rdx_94 + 0x04 <= ecx_27)
											{
												uint64 rdx_105 = (uint64) ((word64) edx_95 + 4);
												Eq_1342 edx_106 = (word32) rdx_105;
												rcx->u0.t0008.u0 = (int32) edx_106;
												if ((word32) rdx_105 + 0x04 <= ecx_27)
												{
													uint64 rdx_114 = (uint64) ((word64) edx_106 + 4);
													rcx->u0.t0008.u0 = (int32) (word32) rdx_114;
													if ((word32) rdx_114 + 0x04 <= ecx_27)
													{
														Eq_1342 eax_129 = (word32) rdx_114 + 0x04;
														rcx->u0.t0008.u0 = (int32) eax_129;
														int32 edx_153 = 0x00;
														if (r8d_126 > 0x05)
														{
															do
															{
																eax_129.u2 = (word64) eax_129 + 4;
																if (eax_129 > ecx_27)
																	goto l000000018000A18C;
																rcx->u0.t0008.u0 = (int32) eax_129;
																++edx_153;
															} while (edx_153 < r8d_126 - 0x05);
														}
														Eq_1342 edi_173;
														edi_173.u0 = rdx->t001C.u0;
														Eq_15711 tLoc0588;
														if (eax_129 < edi_173)
														{
															do
															{
																if (fp == (<unknown>*) 0x0588 || fn0000000180004F90(rcx, &tLoc0588) == 0x00)
																	goto l000000018000A188;
															} while (rcx->u0.t0008.u0 < edi_173);
														}
														Eq_1342 eax_217;
														eax_217.u0 = rdx->t001C.u0;
														if (eax_217 != 0x00)
															rcx->u0.t0008.u0 = (int32) eax_217;
														Eq_137 rdx_227;
														rdx_227.u0 = rcx->u0.t0000.u0;
														if (rdx_227 != 0x00 && ((rcx->u0).t0008).u0 + 0x04 <= ((rcx->u0).t000C).u0)
														{
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															uint64 rdx_249 = (uint64) rdx_227.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
															Eq_1342 edx_251 = (word32) rdx_249;
															word32 rdx_32_32_260 = SLICE(rdx_249, word32, 32);
															if ((&rcx->u0)[1] != 0x00)
																rdx_249 = SEQ(rdx_32_32_260, __bswap<word32>(edx_251));
															fn0000000180005050(rcx, (word32) rdx_249, &tLoc0588);
															Eq_137 r8_273;
															r8_273.u0 = rcx->u0.t0000.u0;
															int32 ecx_1558;
															Eq_1342 eax_1559;
															for (ecx_1558 = 0x00; ecx_1558 < 0x06; ++ecx_1558)
															{
																if (r8_273 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																	goto l000000018000A188;
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																eax_1559.u0 = rcx->u0.t0008.u0;
															}
															Eq_1342 edx_1560;
															edx_1560.u0 = rcx->u0.t000C.u0;
															int32 ecx_1561;
															for (ecx_1561 = 0x00; ecx_1561 < 0x0C; ++ecx_1561)
															{
																if (r8_273 == 0x00)
																	goto l000000018000A188;
																eax_1559.u2 = (word64) eax_1559 + 4;
																if (eax_1559 > edx_1560)
																	goto l000000018000A188;
																rcx->u0.t0008.u0 = (int32) eax_1559;
															}
															if (r8_273 != 0x00 && (word64) eax_1559 + 4 <= edx_1560)
															{
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 r9_349 = (uint64) rcx->u0.t0008.u0;
																word32 r9d_382 = (word32) r9_349;
																Eq_1342 r10d_368 = (&rcx->u0)[1];
																Eq_1342 r15d_373 = r8_273.u2[(uint64) ((word32) r9_349 - 0x04)];
																if (r10d_368 != 0x00)
																	r15d_373 = __bswap<word32>(r15d_373);
																if ((word32) r9_349 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 r9_384 = (uint64) (r9d_382 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) r9_384;
																Eq_1342 r11d_398 = r8_273.u2[(uint64) ((word32) r9_384 - 0x04)];
																if (r10d_368 != 0x00)
																	r11d_398 = __bswap<word32>(r11d_398);
																if ((word32) r9_384 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 rcx_412 = (uint64) rcx->u0.t0008.u0;
																word32 ecx_418 = (word32) rcx_412;
																if ((word32) rcx_412 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 rcx_420 = (uint64) (ecx_418 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) rcx_420;
																if ((word32) rcx_420 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 r9_431 = (uint64) rcx->u0.t0008.u0;
																Eq_1342 eax_437 = r8_273.u2[(uint64) ((word32) r9_431 - 0x04)];
																word32 r9d_455 = (word32) r9_431;
																Eq_1342 dwLoc0594_1573 = eax_437;
																if (r10d_368 != 0x00)
																	dwLoc0594_1573 = __bswap<word32>(eax_437);
																if ((word32) r9_431 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 r9_457 = (uint64) (r9d_455 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) r9_457;
																Eq_1342 eax_466 = r8_273.u2[(uint64) ((word32) r9_457 - 0x04)];
																Eq_1342 dwLoc0598_1575 = eax_466;
																if (r10d_368 != 0x00)
																	dwLoc0598_1575 = __bswap<word32>(eax_466);
																if ((word32) r9_457 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 r9_488 = (uint64) rcx->u0.t0008.u0;
																Eq_1342 edi_1339 = r8_273.u2[(uint64) ((word32) r9_488 - 0x04)];
																word32 r9d_517 = (word32) r9_488;
																Eq_1342 dwLoc05A4_1577 = edi_1339;
																if (r10d_368 != 0x00)
																{
																	edi_1339 = __bswap<word32>(edi_1339);
																	dwLoc05A4_1577 = edi_1339;
																}
																if ((word32) r9_488 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 r9_519 = (uint64) (r9d_517 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) r9_519;
																Eq_1342 r14d_1328 = r8_273.u2[(uint64) ((word32) r9_519 - 0x04)];
																Eq_1342 dwLoc05A8_1580 = r14d_1328;
																if (r10d_368 != 0x00)
																{
																	r14d_1328 = __bswap<word32>(r14d_1328);
																	dwLoc05A8_1580 = r14d_1328;
																}
																if ((word32) r9_519 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 r9_571 = (uint64) rcx->u0.t0008.u0;
																Eq_1342 ebp_1382 = r8_273.u2[(uint64) ((word32) r9_571 - 0x04)];
																word32 r9d_610 = (word32) r9_571;
																Eq_1342 dwLoc059C_1583 = ebp_1382;
																if (r10d_368 != 0x00)
																{
																	ebp_1382 = __bswap<word32>(ebp_1382);
																	dwLoc059C_1583 = ebp_1382;
																}
																if ((word32) r9_571 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 r9_612 = (uint64) (r9d_610 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) r9_612;
																Eq_1342 esi_1371 = r8_273.u2[(uint64) ((word32) r9_612 - 0x04)];
																Eq_1342 dwLoc05A0_1585 = esi_1371;
																if (r10d_368 != 0x00)
																{
																	esi_1371 = __bswap<word32>(esi_1371);
																	dwLoc05A0_1585 = esi_1371;
																}
																if ((word32) r9_612 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 rcx_643 = (uint64) rcx->u0.t0008.u0;
																word32 ecx_649 = (word32) rcx_643;
																if ((word32) rcx_643 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 rcx_651 = (uint64) (ecx_649 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) rcx_651;
																if ((word32) rcx_651 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 rcx_662 = (uint64) rcx->u0.t0008.u0;
																word32 ecx_668 = (word32) rcx_662;
																if ((word32) rcx_662 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 rcx_670 = (uint64) (ecx_668 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) rcx_670;
																if ((word32) rcx_670 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 rcx_681 = (uint64) rcx->u0.t0008.u0;
																word32 ecx_687 = (word32) rcx_681;
																if ((word32) rcx_681 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 rcx_689 = (uint64) (ecx_687 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) rcx_689;
																if (g_t800306F0.u0 > 0x02FC)
																{
																	if ((word32) rcx_689 + 0x04 > edx_1560)
																		return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint64 rcx_702 = (uint64) rcx->u0.t0008.u0;
																	word32 ecx_708 = (word32) rcx_702;
																	if ((word32) rcx_702 + 0x04 > edx_1560)
																		return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																	rcx_689 = (uint64) (ecx_708 + 0x04);
																	rcx->u0.t0008.u0 = (int32) (word32) rcx_689;
																}
																if ((word32) rcx_689 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 r9_726 = (uint64) rcx->u0.t0008.u0;
																word32 r9d_738 = (word32) r9_726;
																if ((word32) r9_726 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 r9_740 = (uint64) (r9d_738 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) r9_740;
																Eq_1342 r13d_1418 = r8_273.u2[(uint64) ((word32) r9_740 - 0x04)];
																if (r10d_368 != 0x00)
																	r13d_1418 = __bswap<word32>(r13d_1418);
																if ((word32) r9_740 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 rcx_790 = (uint64) rcx->u0.t0008.u0;
																word32 ecx_796 = (word32) rcx_790;
																if ((word32) rcx_790 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 rcx_798 = (uint64) (ecx_796 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) rcx_798;
																if ((word32) rcx_798 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 rcx_809 = (uint64) rcx->u0.t0008.u0;
																word32 ecx_815 = (word32) rcx_809;
																if ((word32) rcx_809 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 rcx_817 = (uint64) (ecx_815 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) rcx_817;
																if ((word32) rcx_817 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 rcx_828 = (uint64) rcx->u0.t0008.u0;
																word32 ecx_834 = (word32) rcx_828;
																if ((word32) rcx_828 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 rcx_836 = (uint64) (ecx_834 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) rcx_836;
																if ((word32) rcx_836 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																uint64 r9_847 = (uint64) rcx->u0.t0008.u0;
																word32 r9d_859 = (word32) r9_847;
																if ((word32) r9_847 + 0x04 > edx_1560)
																	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																uint64 r9_861 = (uint64) (r9d_859 + 0x04);
																rcx->u0.t0008.u0 = (int32) (word32) r9_861;
																Eq_1342 r12d_1456 = r8_273.u2[(uint64) ((word32) r9_861 - 0x04)];
																if (r10d_368 != 0x00)
																	r12d_1456 = __bswap<word32>(r12d_1456);
																if ((word32) r9_861 + 0x04 <= edx_1560)
																{
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	uint64 rcx_909 = (uint64) rcx->u0.t0008.u0;
																	word32 ecx_915 = (word32) rcx_909;
																	if ((word32) rcx_909 + 0x04 > edx_1560)
																		goto l000000018000A174;
																	uint64 rcx_917 = (uint64) (ecx_915 + 0x04);
																	rcx->u0.t0008.u0 = (int32) (word32) rcx_917;
																	if ((word32) rcx_917 + 0x04 <= edx_1560)
																	{
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		uint64 rcx_928 = (uint64) rcx->u0.t0008.u0;
																		word32 ecx_934 = (word32) rcx_928;
																		if ((word32) rcx_928 + 0x04 > edx_1560)
																			goto l000000018000A174;
																		Eq_1342 ecx_937 = ecx_934 + 0x04;
																		rcx->u0.t0008.u0 = (int32) (ecx_934 + 0x04);
																		int32 eax_941;
																		for (eax_941 = 0x00; eax_941 < 0x07; ++eax_941)
																		{
																			ecx_937.u2 = (word64) ecx_937 + 4;
																			if (ecx_937 > edx_1560)
																				goto l000000018000A174;
																			rcx->u0.t0008.u0 = (int32) ecx_937;
																		}
																		if (r11d_398 != 0x00)
																		{
																			rcx->u0.t0008.u0 = (int32) r11d_398;
																			if (r15d_373 != 0x00 && fn0000000180001FD0(&g_t800306F0, r15d_373) == 0x00)
																				goto l000000018000A174;
																			Eq_1342 r14d_1250;
																			r14d_1250.u0 = 0x00;
																			if (r15d_373 != 0x00)
																			{
																				do
																				{
																					memset(&tLoc0588, 0, 0x0104);
																					Eq_137 r8_1024;
																					r8_1024.u0 = rcx->u0.t0000.u0;
																					if (r8_1024 == 0x00)
																						goto l000000018000A174;
																					Eq_1342 edx_1037;
																					edx_1037.u0 = rcx->u0.t000C.u0;
																					if (rcx->u0.t0008.u0 + 0x04 > edx_1037)
																						goto l000000018000A174;
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 r9_1043 = (uint64) rcx->u0.t0008.u0;
																					word32 r9d_1058 = (word32) r9_1043;
																					Eq_1342 r10d_1050 = (&rcx->u0)[1];
																					Eq_1342 r11d_1055 = r8_1024.u2[(uint64) ((word32) r9_1043 - 0x04)];
																					if (r10d_1050 != 0x00)
																						r11d_1055 = __bswap<word32>(r11d_1055);
																					uint64 r9_1060 = (uint64) (r9d_1058 + 0x04);
																					Eq_1342 r9d_1061 = (word32) r9_1060;
																					if (r9d_1061 > edx_1037)
																						goto l000000018000A174;
																					rcx->u0.t0008.u0 = (int32) r9d_1061;
																					Eq_1342 ebp_1077 = r8_1024.u2[(uint64) ((word32) r9_1060 - 0x04)];
																					if (r10d_1050 != 0x00)
																						ebp_1077 = __bswap<word32>(ebp_1077);
																					if ((word32) r9_1060 + 0x04 > edx_1037)
																						goto l000000018000A174;
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					uint64 r9_1091 = (uint64) rcx->u0.t0008.u0;
																					word32 r9d_1105 = (word32) r9_1091;
																					Eq_1342 esi_1102 = r8_1024.u2[(uint64) ((word32) r9_1091 - 0x04)];
																					if (r10d_1050 != 0x00)
																						esi_1102 = __bswap<word32>(esi_1102);
																					uint64 r9_1107 = (uint64) (r9d_1105 + 0x04);
																					Eq_1342 r9d_1108 = (word32) r9_1107;
																					if (r9d_1108 > edx_1037)
																						goto l000000018000A174;
																					rcx->u0.t0008.u0 = (int32) r9d_1108;
																					Eq_1342 edi_1124 = r8_1024.u2[(uint64) ((word32) r9_1107 - 0x04)];
																					if (r10d_1050 != 0x00)
																						edi_1124 = __bswap<word32>(edi_1124);
																					if ((word32) r9_1107 + 0x04 > edx_1037)
																						goto l000000018000A174;
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					Eq_1342 r9d_1150 = r8_1024.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
																					if (r10d_1050 != 0x00)
																						r9d_1150 = __bswap<word32>(r9d_1150);
																					fn0000000180005050(rcx, r11d_1055, &tLoc0588);
																					Eq_16655 tLoc0478;
																					fn0000000180005050(rcx, ebp_1077, &tLoc0478);
																					Eq_16659 tLoc0368;
																					fn0000000180005050(rcx, esi_1102, &tLoc0368);
																					Eq_16663 tLoc0258;
																					fn0000000180005050(rcx, edi_1124, &tLoc0258);
																					Eq_16667 tLoc0148;
																					fn0000000180005050(rcx, r9d_1150, &tLoc0148);
																					struct Eq_1702 * r9_1240 = g_ptr80030700;
																					if (r9_1240 != null)
																						MultiByteToWideChar(0x00, 0x01, &tLoc0588, -1, r9_1240 + (int64) r14d_1250 *s 0x0208, 0xFF);
																					r14d_1250.u2 = (word64) r14d_1250 + 1;
																				} while (r14d_1250 < r15d_373);
																				edi_1339 = dwLoc05A4_1577;
																				esi_1371 = dwLoc05A0_1585;
																				ebp_1382 = dwLoc059C_1583;
																			}
																			r14d_1328 = dwLoc05A8_1580;
																		}
																		if (fn000000018000A190(rcx, (uint64) dwLoc0594_1573, dwLoc0598_1575) != 0x00 && (fn000000018000A7F0(rcx, (uint64) edi_1339, r14d_1328) != 0x00 && (fn000000018000B870(rcx, ebp_1382, esi_1371) != 0x00 && fn000000018000B660(rcx, r13d_1418) != 0x00)))
																		{
																			fn000000018000B0F0(rcx, edi_1339, r12d_1456);
																			return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
																		}
																		goto l000000018000A174;
																	}
																}
l000000018000A174:
																return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
															}
														}
l000000018000A188:
														return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
l000000018000A18C:
	return (word32) fn0000000180023580(rax_11 ^ fp - 0x05D8, qwLoc05E0);
}

// 000000018000A190: Register word32 fn000000018000A190(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180009990
word32 fn000000018000A190(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	ui64 rax_14 = g_qw80030008 ^ fp - 0x04B8;
	if (r8d != 0x00 && edx != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (fn00000001800020D0(&g_t800306F0, (word32) rdx) != 0x00)
		{
			up32 ebp_317 = 0x00;
			Eq_17018 tLoc0488;
			Eq_17022 tLoc0378;
			Eq_17026 tLoc0268;
			Eq_17030 tLoc0158;
			if (edx != 0x00)
			{
				do
				{
					memset(&tLoc0488, 0, 0x0104);
					Eq_137 rdx_81;
					rdx_81.u0 = rcx->u0.t0000.u0;
					if (rdx_81 == 0x00)
					{
l000000018000A595:
						goto l000000018000A597;
					}
					Eq_1342 r8d_94;
					r8d_94.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_100 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r11d_107 = (&rcx->u0)[1];
					Eq_1342 r10d_112 = rdx_81.u2[(uint64) ((word32) r9_100 - 0x04)];
					if (r11d_107 != 0x00)
						r10d_112 = __bswap<word32>(r10d_112);
					if ((word32) r9_100 + 0x04 > r8d_94)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_126 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_137 = rdx_81.u2[(uint64) ((word32) r9_126 - 0x04)];
					if (r11d_107 != 0x00)
						esi_137 = __bswap<word32>(esi_137);
					if ((word32) r9_126 + 0x04 > r8d_94)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_151 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_162 = rdx_81.u2[(uint64) ((word32) r9_151 - 0x04)];
					if (r11d_107 != 0x00)
						edi_162 = __bswap<word32>(edi_162);
					if ((word32) r9_151 + 0x04 > r8d_94)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r14_176 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_187 = rdx_81.u2[(uint64) ((word32) r14_176 - 0x04)];
					if (r11d_107 != 0x00)
						r9d_187 = __bswap<word32>(r9d_187);
					if ((word32) r14_176 + 0x04 > r8d_94)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, r10d_112, &tLoc0488);
					fn0000000180005050(rcx, esi_137, &tLoc0378);
					fn0000000180005050(rcx, edi_162, &tLoc0268);
					fn0000000180005050(rcx, r9d_187, &tLoc0158);
					struct Eq_1710 * r9_308 = g_ptr80030710;
					if (r9_308 != null)
					{
						union Eq_17040 * rdx_321 = &tLoc0488;
						byte * r8_322 = (byte *) (&(r9_308->a0028 + 3)->t0000.u0 + (int64) ebp_317 *64 78);
						char al_329;
						do
						{
							al_329 = rdx_321->u0;
							*r8_322 = al_329;
							rdx_321 = (union Eq_17040 *) ((char *) rdx_321 + 1);
							++r8_322;
						} while (al_329 != 0x00);
					}
					++ebp_317;
				} while (ebp_317 < edx);
			}
			rcx->u0.t0008.u0 = (int32) r8d;
			up32 r12d_381 = 0x00;
			if (edx != 0x00)
			{
				do
				{
					Eq_137 rdx_380;
					rdx_380.u0 = rcx->u0.t0000.u0;
					struct Eq_17266 * r13_384 = (struct Eq_17266 *) ((char *) &g_ptr80030710->tFFFFFFF8 + ((int64) r12d_381 *s 0x0138 + 8));
					if (rdx_380 == 0x00)
						goto l000000018000A595;
					Eq_1342 r8d_397;
					r8d_397.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_397)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_403 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_410 = (&rcx->u0)[1];
					Eq_1342 r10d_415 = rdx_380.u2[(uint64) ((word32) r11_403 - 0x04)];
					if (r9d_410 != 0x00)
						r10d_415 = __bswap<word32>(r10d_415);
					if ((word32) r11_403 + 0x04 > r8d_397)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_429 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r15d_440 = rdx_380.u2[(uint64) ((word32) r11_429 - 0x04)];
					if (r9d_410 != 0x00)
						r15d_440 = __bswap<word32>(r15d_440);
					if ((word32) r11_429 + 0x04 > r8d_397)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_454 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r14d_465 = rdx_380.u2[(uint64) ((word32) r11_454 - 0x04)];
					if (r9d_410 != 0x00)
						r14d_465 = __bswap<word32>(r14d_465);
					if ((word32) r11_454 + 0x04 > r8d_397)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_479 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 ebp_490 = rdx_380.u2[(uint64) ((word32) r11_479 - 0x04)];
					if (r9d_410 != 0x00)
						ebp_490 = __bswap<word32>(ebp_490);
					if ((word32) r11_479 + 0x04 > r8d_397)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_504 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_515 = rdx_380.u2[(uint64) ((word32) r11_504 - 0x04)];
					if (r9d_410 != 0x00)
						esi_515 = __bswap<word32>(esi_515);
					if ((word32) r11_504 + 0x04 > r8d_397)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_529 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_540 = rdx_380.u2[(uint64) ((word32) r11_529 - 0x04)];
					if (r9d_410 != 0x00)
						edi_540 = __bswap<word32>(edi_540);
					if ((word32) r11_529 + 0x04 > r8d_397)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_397)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_397)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, r10d_415, &tLoc0158);
					fn0000000180005050(rcx, r15d_440, &tLoc0268);
					fn0000000180005050(rcx, r14d_465, &tLoc0378);
					fn0000000180005050(rcx, ebp_490, &tLoc0488);
					Eq_1342 ebp_694;
					ebp_694.u0 = rcx->u0.t0008.u0;
					if (fn000000018000A5E0(rcx, r13_384, esi_515, edi_540) == 0x00)
						goto l000000018000A595;
					rcx->u0.t0008.u0 = (int32) ebp_694;
					++r12d_381;
				} while (r12d_381 < edx);
			}
			int32 r15d_731;
			Eq_137 rcx_707;
			rcx_707.u0 = rcx->u0.t0000.u0;
			for (r15d_731 = 0x00; r15d_731 < 77; ++r15d_731)
			{
				if (rcx_707 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
					goto l000000018000A595;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			}
l000000018000A597:
		}
	}
	word64 qwLoc04C0;
	return (word32) fn0000000180023580(rax_14 ^ fp - 0x04B8, qwLoc04C0);
}

// 000000018000A5E0: Register word32 fn000000018000A5E0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_17266) rdx, Register Eq_1342 r8d, Register Eq_1342 r9d)
// Called from:
//      fn000000018000A190
//      fn000000018000D570
word32 fn000000018000A5E0(union Eq_3676 * rcx, struct Eq_17266 * rdx, Eq_1342 r8d, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_14 = g_qw80030008 ^ fp - 0x0278;
	if (rdx != null)
	{
		if (r9d != 0x00 && r8d != 0x00)
		{
			rcx->u0.t0008.u0 = (int32) r9d;
			Eq_1342 ebp_299;
			ebp_299.u0 = 0x00;
			if (r8d != 0x00)
			{
				do
				{
					Eq_17450 tLoc0258;
					memset(&tLoc0258, 0, 0x0104);
					Eq_137 r8_59;
					r8_59.u0 = rcx->u0.t0000.u0;
					if (r8_59 == 0x00)
					{
l000000018000A7E9:
						goto l000000018000A7B4;
					}
					Eq_1342 edx_72;
					edx_72.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > edx_72)
						goto l000000018000A7E9;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_78 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_85 = (&rcx->u0)[1];
					Eq_1342 r10d_179 = r8_59.u2[(uint64) ((word32) r9_78 - 0x04)];
					if (esi_85 != 0x00)
						r10d_179 = __bswap<word32>(r10d_179);
					if ((word32) r9_78 + 0x04 > edx_72)
						goto l000000018000A7E9;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_104 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_115 = r8_59.u2[(uint64) ((word32) r11_104 - 0x04)];
					if (esi_85 != 0x00)
						r9d_115 = __bswap<word32>(r9d_115);
					if ((word32) r11_104 + 0x04 > edx_72)
						goto l000000018000A7E9;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > edx_72)
						goto l000000018000A7E9;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > edx_72)
						goto l000000018000A7E9;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > edx_72)
						goto l000000018000A7E9;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 edi_171 = r8_59.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					if (esi_85 != 0x00)
						edi_171 = __bswap<word32>(edi_171);
					fn0000000180005050(rcx, r10d_179, &tLoc0258);
					Eq_17454 tLoc0148;
					fn0000000180005050(rcx, r9d_115, &tLoc0148);
					Eq_1342 esi_305;
					esi_305.u0 = rcx->u0.t0008.u0;
					if (_stricmp(&tLoc0258, "DiffuseMap") == 0x00 && edi_171 != 0x00)
					{
						Eq_137 rdx_224;
						rdx_224.u0 = rcx->u0.t0000.u0;
						rcx->u0.t0008.u0 = (int32) edi_171;
						if (rdx_224 == 0x00)
							goto l000000018000A7E9;
						Eq_1342 r8d_238;
						r8d_238.u0 = rcx->u0.t000C.u0;
						Eq_1342 eax_237;
						eax_237.u2 = (word64) edi_171 + 4;
						if (eax_237 > r8d_238)
							goto l000000018000A7E9;
						Eq_1342 r9d_248 = (&rcx->u0)[1];
						rcx->u0.t0008.u0 = (int32) eax_237;
						Eq_1342 eax_253 = rdx_224.u2[(uint64) ((word64) eax_237 - 4)];
						if (r9d_248 != 0x00)
							eax_253 = __bswap<word32>(eax_253);
						if (eax_253 == 0x00)
							goto l000000018000A7A1;
						rcx->u0.t0008.u0 = (int32) eax_253;
						Eq_1342 eax_264;
						eax_264.u2 = (word64) eax_253 + 4;
						if (eax_264 > r8d_238)
							goto l000000018000A7E9;
						rcx->u0.t0008.u0 = (int32) eax_264;
						Eq_1342 eax_285 = rdx_224.u2[(uint64) ((word64) eax_264 - 4)];
						if (r9d_248 != 0x00)
							eax_285 = __bswap<word32>(eax_285);
						rdx->t0028.u0 = (int32) eax_285;
					}
l000000018000A7A1:
					rcx->u0.t0008.u0 = (int32) esi_305;
					ebp_299.u2 = (word64) ebp_299 + 1;
				} while (ebp_299 < r8d);
			}
l000000018000A7B4:
		}
	}
	word64 qwLoc0280;
	return (word32) fn0000000180023580(rax_14 ^ fp - 0x0278, qwLoc0280);
}

// 000000018000A7F0: Register word32 fn000000018000A7F0(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180009990
word32 fn000000018000A7F0(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_11 = g_qw80030008 ^ fp - 616;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (edx == 0x00 || fn0000000180001B50(&g_t800306F0, (word32) rdx) != 0x00)
		{
			uint64 rbp_53 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 ebp_259 = (word32) rbp_53;
			up32 edi_279 = 0x00;
			up32 esi_204 = 0x00;
			if (edx != 0x00)
			{
				do
				{
					Eq_17702 tLoc0248;
					memset(&tLoc0248, 0, 0x0104);
					Eq_17706 tLoc0138;
					memset(&tLoc0138, 0, 0x0104);
					Eq_137 r9_85;
					r9_85.u0 = rcx->u0.t0000.u0;
					if (r9_85 == 0x00)
					{
l000000018000AA7E:
						goto l000000018000AA4B;
					}
					Eq_1342 r8d_98;
					r8d_98.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_98)
						goto l000000018000AA7E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_104 = (uint64) rcx->u0.t0008.u0;
					uint64 rdx_110 = (uint64) r9_85.u2[(uint64) ((word32) r10_104 - 0x04)];
					Eq_1342 r11d_111 = (&rcx->u0)[1];
					Eq_1342 edx_116 = (word32) rdx_110;
					word32 rdx_32_32_171 = SLICE(rdx_110, word32, 32);
					if (r11d_111 != 0x00)
						rdx_110 = SEQ(rdx_32_32_171, __bswap<word32>(edx_116));
					if ((word32) r10_104 + 0x04 > r8d_98)
						goto l000000018000AA7E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_130 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_141 = r9_85.u2[(uint64) ((word32) r10_130 - 0x04)];
					if (r11d_111 != 0x00)
						r9d_141 = __bswap<word32>(r9d_141);
					if ((word32) r10_130 + 0x04 > r8d_98)
						goto l000000018000AA7E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_98)
						goto l000000018000AA7E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, (word32) rdx_110, &tLoc0248);
					fn0000000180005050(rcx, r9d_141, &tLoc0138);
					struct Eq_2417 * r9_197 = g_ptr80030720;
					if (r9_197 != null)
					{
						int64 rax_205 = (int64) esi_204;
						union Eq_17718 * rcx_208 = &tLoc0248;
						byte * rdx_209 = (byte *) (&(r9_197->a0030 + 46)->t0000.u0 + rax_205 *64 0x00BE);
						char al_216;
						do
						{
							al_216 = rcx_208->u0;
							*rdx_209 = al_216;
							rcx_208 = (union Eq_17718 *) ((char *) rcx_208 + 1);
							++rdx_209;
						} while (al_216 != 0x00);
						union Eq_17739 * rcx_226 = &tLoc0138;
						byte * rdx_229 = (byte *) (&(g_ptr80030720->a0030 + 111)->t0000.u0 + rax_205 *64 0x00BE);
						char al_236;
						do
						{
							al_236 = rcx_226->u0;
							*rdx_229 = al_236;
							rcx_226 = (union Eq_17739 *) ((char *) rcx_226 + 1);
							++rdx_229;
						} while (al_236 != 0x00);
					}
					++esi_204;
				} while (esi_204 < edx);
			}
			rcx->u0.t0008.u0 = (int32) ebp_259;
			uint64 rbp_289 = rbp_53;
			if (edx != 0x00)
			{
				do
				{
					Eq_137 r8_278;
					r8_278.u0 = rcx->u0.t0000.u0;
					struct Eq_17862 * rdx_282 = (struct Eq_17862 *) (g_ptr80030720 + (int64) edi_279);
					if (r8_278 == 0x00)
						goto l000000018000AA7E;
					Eq_1342 ecx_293;
					ecx_293.u0 = rcx->u0.t000C.u0;
					Eq_1342 eax_292 = (word32) rbp_289 + 0x04;
					if (eax_292 > ecx_293)
						goto l000000018000AA7E;
					rcx->u0.t0008.u0 = (int32) eax_292;
					if ((word64) eax_292 + 4 > ecx_293)
						goto l000000018000AA7E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > ecx_293)
						goto l000000018000AA7E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > ecx_293)
						goto l000000018000AA7E;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rbp_326 = (uint64) rcx->u0.t0008.u0;
					uint64 r9_330 = (uint64) r8_278.u2[(uint64) ((word32) rbp_326 - 0x04)];
					Eq_1342 ebp_367 = (word32) rbp_326;
					Eq_1342 r9d_332 = (word32) r9_330;
					word32 r9_32_32_337 = SLICE(r9_330, word32, 32);
					if ((&rcx->u0)[1] != 0x00)
						r9_330 = SEQ(r9_32_32_337, __bswap<word32>(r9d_332));
					rbp_289 = rbp_326;
					if (fn000000018000AA90(rcx, rdx_282, (word32) r9_330) == 0x00)
						goto l000000018000AA7E;
					rcx->u0.t0008.u0 = (int32) ebp_367;
					++edi_279;
				} while (edi_279 < edx);
			}
l000000018000AA4B:
		}
	}
	word64 qwLoc0270;
	return (word32) fn0000000180023580(rax_11 ^ fp - 616, qwLoc0270);
}

// 000000018000AA90: Register word32 fn000000018000AA90(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_17862) rdx, Register Eq_1342 r9d)
// Called from:
//      fn000000018000A7F0
word32 fn000000018000AA90(union Eq_3676 * rcx, struct Eq_17862 * rdx, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_11 = g_qw80030008 ^ fp - 424;
	word64 qwLoc01B0;
	if (rdx == null)
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	if (r9d == 0x00)
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	Eq_137 r8_26;
	r8_26.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) r9d;
	Eq_17915 tLoc0178;
	tLoc0178.qw0004 = 0x00;
	tLoc0178.dw0000 = 0x00;
	Eq_17926 tLoc0168;
	tLoc0168.qw0004 = 0x00;
	tLoc0168.dw0000 = 0x00;
	if (r8_26 == 0x00)
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	Eq_1342 edx_43;
	edx_43.u0 = rcx->u0.t000C.u0;
	if ((word64) r9d + 4 > edx_43)
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	rcx->u0.t0008.u0 = (int32) ((word64) r9d + 4);
	if ((word64) r9d + 8 > edx_43)
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 r10_55 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 r9d_62 = (&rcx->u0)[1];
	Eq_1342 r11d_239 = r8_26.u2[(uint64) ((word32) r10_55 - 0x04)];
	if (r9d_62 != 0x00)
		r11d_239 = __bswap<word32>(r11d_239);
	if ((word32) r10_55 + 0x04 > edx_43)
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 r10d_247 = r8_26.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
	if (r9d_62 != 0x00)
		r10d_247 = __bswap<word32>(r10d_247);
	if (rcx->u0.t0008.u0 + 0x04 > edx_43)
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rdi_115 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 eax_121 = r8_26.u2[(uint64) ((word32) rdi_115 - 0x04)];
	Eq_1342 dwLoc0180_1240 = eax_121;
	if (r9d_62 != 0x00)
		dwLoc0180_1240 = __bswap<word32>(eax_121);
	if ((word32) rdi_115 + 0x04 > edx_43)
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 edi_149 = r8_26.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
	Eq_1342 dwLoc0184_1242 = edi_149;
	if (r9d_62 != 0x00)
	{
		edi_149 = __bswap<word32>(edi_149);
		dwLoc0184_1242 = edi_149;
	}
	if (fn000000018001D5C0(rcx, &tLoc0178) == 0x00 || fn000000018001D5C0(rcx, &tLoc0168) == 0x00)
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	rdx->t0024.u0 = (int32) r11d_239;
	if (r10d_247 == 0x00)
	{
l000000018000AECF:
		rdx->t00E4.u0 = (int32) dwLoc0180_1240;
		Eq_1342 r15d_1142;
		r15d_1142.u0 = 0x00;
		if (edi_149 != 0x00)
		{
			rcx->u0.t0008.u0 = (int32) edi_149;
			if (rdx->t00E4.u0 > 0x00)
			{
				do
				{
					Eq_137 rdx_887;
					rdx_887.u0 = rcx->u0.t0000.u0;
					if (rdx_887 == 0x00)
						goto l000000018000B0DD;
					Eq_1342 r8d_900;
					r8d_900.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_916 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 ebp_923 = (&rcx->u0)[1];
					Eq_1342 r10d_1123 = rdx_887.u2[(uint64) ((word32) r9_916 - 0x04)];
					if (ebp_923 != 0x00)
						r10d_1123 = __bswap<word32>(r10d_1123);
					if ((word32) r9_916 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_942 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_1150 = rdx_887.u2[(uint64) ((word32) r9_942 - 0x04)];
					if (ebp_923 != 0x00)
						esi_1150 = __bswap<word32>(esi_1150);
					if ((word32) r9_942 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 eax_1000;
					eax_1000.u0 = rcx->u0.t0008.u0;
					if (g_t800306F0.u0 > 0x02FC)
					{
						if ((word64) eax_1000 + 4 > r8d_900)
							goto l000000018000B0DD;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 > r8d_900)
							goto l000000018000B0DD;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						eax_1000.u0 = rcx->u0.t0008.u0;
					}
					if ((word64) eax_1000 + 4 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_1044 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_1057 = rdx_887.u2[(uint64) ((word32) r9_1044 - 0x04)];
					if (ebp_923 != 0x00)
						edi_1057 = __bswap<word32>(edi_1057);
					if ((word32) r9_1044 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_1071 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_1082 = rdx_887.u2[(uint64) ((word32) r11_1071 - 0x04)];
					if (ebp_923 != 0x00)
						r9d_1082 = __bswap<word32>(r9d_1082);
					if ((word32) r11_1071 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_900)
						goto l000000018000B0DD;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_18546 tLoc0158;
					fn0000000180005050(rcx, r10d_1123, &tLoc0158);
					if (r15d_1142 == 0x00)
					{
						rdx->t0028.u0 = (int32) esi_1150;
						rdx->t002C.u0 = (int32) edi_1057;
						rdx->t0034.u0 = (int32) r9d_1082;
					}
					r15d_1142.u2 = (word64) r15d_1142 + 1;
				} while (r15d_1142 < (rdx->t00E4).u0);
			}
		}
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	}
	else
	{
		Eq_137 rdx_252;
		rdx_252.u0 = rcx->u0.t0000.u0;
		rcx->u0.t0008.u0 = (int32) r10d_247;
		if (rdx_252 != 0x00)
		{
			uint64 r10_261 = (uint64) ((word64) r10d_247 + 4);
			Eq_1342 r8d_263;
			r8d_263.u0 = rcx->u0.t000C.u0;
			Eq_1342 r10d_262 = (word32) r10_261;
			if (r10d_262 <= r8d_263)
			{
				Eq_1342 r9d_275 = (&rcx->u0)[1];
				rcx->u0.t0008.u0 = (int32) r10d_262;
				Eq_1342 eax_273 = rdx_252.u2[(uint64) ((word32) r10_261 - 0x04)];
				Eq_1342 dwLoc0188_1249 = eax_273;
				if (r9d_275 != 0x00)
					dwLoc0188_1249 = __bswap<word32>(eax_273);
				if ((word32) r10_261 + 0x04 <= r8d_263)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_294 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_305 = rdx_252.u2[(uint64) ((word32) r10_294 - 0x04)];
					if (r9d_275 != 0x00)
						edi_305 = __bswap<word32>(edi_305);
					if ((word32) r10_294 + 0x04 <= r8d_263)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r10_319 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 r11d_330 = rdx_252.u2[(uint64) ((word32) r10_319 - 0x04)];
						if (r9d_275 != 0x00)
							r11d_330 = __bswap<word32>(r11d_330);
						if ((word32) r10_319 + 0x04 <= r8d_263)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r10_344 = (uint64) rcx->u0.t0008.u0;
							Eq_1342 ebp_355 = rdx_252.u2[(uint64) ((word32) r10_344 - 0x04)];
							if (r9d_275 != 0x00)
								ebp_355 = __bswap<word32>(ebp_355);
							if ((word32) r10_344 + 0x04 <= r8d_263)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 r10_369 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 esi_380 = rdx_252.u2[(uint64) ((word32) r10_369 - 0x04)];
								if (r9d_275 != 0x00)
									esi_380 = __bswap<word32>(esi_380);
								if ((word32) r10_369 + 0x04 <= r8d_263)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint64 r10_394 = (uint64) rcx->u0.t0008.u0;
									Eq_1342 r12d_405 = rdx_252.u2[(uint64) ((word32) r10_394 - 0x04)];
									if (r9d_275 != 0x00)
										r12d_405 = __bswap<word32>(r12d_405);
									if ((word32) r10_394 + 0x04 <= r8d_263)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r10_419 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 r15d_430 = rdx_252.u2[(uint64) ((word32) r10_419 - 0x04)];
										if (r9d_275 != 0x00)
											r15d_430 = __bswap<word32>(r15d_430);
										if ((word32) r10_419 + 0x04 <= r8d_263)
										{
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 r10_444 = (uint64) rcx->u0.t0008.u0;
											Eq_1342 r13d_455 = rdx_252.u2[(uint64) ((word32) r10_444 - 0x04)];
											if (r9d_275 != 0x00)
												r13d_455 = __bswap<word32>(r13d_455);
											if ((word32) r10_444 + 0x04 <= r8d_263)
											{
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
												Eq_1342 r10d_481 = rdx_252.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
												if (r9d_275 != 0x00)
													r10d_481 = __bswap<word32>(r10d_481);
												rdx->t003C.u0 = (int32) edi_305;
												if (r11d_330 != 0x00)
												{
													rcx->u0.t0008.u0 = (int32) r11d_330;
													Eq_1342 edx_1224;
													edx_1224.u0 = 0x00;
													if (edi_305 != 0x00)
													{
														struct Eq_18658 * r9_520 = (struct Eq_18658 *) ((char *) &rdx->t003C + 8);
														do
														{
															Eq_137 r8_523;
															r8_523.u0 = rcx->u0.t0000.u0;
															if (r8_523 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																goto l000000018000B0DD;
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															Eq_1342 eax_547 = r8_523.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
															if ((&rcx->u0)[1] != 0x00)
																eax_547 = __bswap<word32>(eax_547);
															if (edx_1224 < (rdx->t0038).u0)
																r9_520->dw0000 = (word32) eax_547;
															edx_1224.u2 = (word64) edx_1224 + 1;
															++r9_520;
														} while (edx_1224 < edi_305);
													}
												}
												if (esi_380 != 0x00)
												{
													rcx->u0.t0008.u0 = (int32) esi_380;
													Eq_1342 edx_1225;
													edx_1225.u0 = 0x00;
													if (ebp_355 != 0x00)
													{
														struct Eq_18721 * r9_606 = (struct Eq_18721 *) ((char *) &rdx->t003C + 0x0C);
														do
														{
															Eq_137 r8_609;
															r8_609.u0 = rcx->u0.t0000.u0;
															if (r8_609 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																goto l000000018000B0DD;
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															Eq_1342 eax_633 = r8_609.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
															if ((&rcx->u0)[1] != 0x00)
																eax_633 = __bswap<word32>(eax_633);
															if (edx_1225 < (rdx->t0038).u0)
																r9_606->dw0000 = (word32) eax_633;
															edx_1225.u2 = (word64) edx_1225 + 1;
															++r9_606;
														} while (edx_1225 < ebp_355);
													}
												}
												if (r15d_430 != 0x00)
												{
													rcx->u0.t0008.u0 = (int32) r15d_430;
													Eq_1342 edx_1226;
													edx_1226.u0 = 0x00;
													if (r12d_405 != 0x00)
													{
														struct Eq_18784 * r9_705 = (struct Eq_18784 *) ((char *) &rdx->t003C + 16);
														do
														{
															Eq_137 r8_708;
															r8_708.u0 = rcx->u0.t0000.u0;
															if (r8_708 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																goto l000000018000B0DD;
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															Eq_1342 eax_733 = r8_708.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
															if ((&rcx->u0)[1] != 0x00)
																eax_733 = __bswap<word32>(eax_733);
															if (edx_1226 < (rdx->t0038).u0)
																r9_705->dw0000 = (word32) eax_733;
															edx_1226.u2 = (word64) edx_1226 + 1;
															++r9_705;
														} while (edx_1226 < r12d_405);
													}
												}
												if (r10d_481 != 0x00)
												{
													rcx->u0.t0008.u0 = (int32) r10d_481;
													Eq_1342 ecx_1227;
													ecx_1227.u0 = 0x00;
													if (r13d_455 != 0x00)
													{
														Eq_137 rdx_801;
														rdx_801.u0 = rcx->u0.t0000.u0;
														do
														{
															if (rdx_801 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																goto l000000018000B0DD;
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															ecx_1227.u2 = (word64) ecx_1227 + 1;
														} while (ecx_1227 < r13d_455);
													}
												}
												rdx->t0020.u0 = (int32) dwLoc0188_1249;
												edi_149 = dwLoc0184_1242;
												goto l000000018000AECF;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
l000000018000B0DD:
		return (word32) fn0000000180023580(rax_11 ^ fp - 424, qwLoc01B0);
	}
}

// 000000018000B0F0: void fn000000018000B0F0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register Eq_1342 r9d)
// Called from:
//      fn0000000180009990
void fn000000018000B0F0(union Eq_3676 * rcx, Eq_1342 edx, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_10 = g_qw80030008 ^ fp - 0x0148;
	if (edx != 0x00 && g_ptr80030720 == null)
	{
l000000018000B122:
		goto l000000018000B2FC;
	}
	if (r9d == 0x00)
		goto l000000018000B2FC;
	Eq_137 rdx_31;
	rdx_31.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) r9d;
	if (rdx_31 == 0x00)
		goto l000000018000B122;
	Eq_1342 ecx_45;
	ecx_45.u0 = rcx->u0.t000C.u0;
	if ((word64) r9d + 4 > ecx_45)
		goto l000000018000B122;
	rcx->u0.t0008.u0 = (int32) ((word64) r9d + 4);
	if ((word64) r9d + 8 > ecx_45)
		goto l000000018000B122;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_45)
		goto l000000018000B122;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_45)
		goto l000000018000B122;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rdx_88 = (uint64) rdx_31.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
	Eq_1342 edx_90 = (word32) rdx_88;
	word32 rdx_32_32_97 = SLICE(rdx_88, word32, 32);
	if ((&rcx->u0)[1] != 0x00)
		rdx_88 = SEQ(rdx_32_32_97, __bswap<word32>(edx_90));
	Eq_18973 tLoc0128;
	fn0000000180005050(rcx, (word32) rdx_88, &tLoc0128);
	Eq_1342 edi_111;
	edi_111.u0 = 0x00;
	if (edx != 0x00)
	{
		struct Eq_18987 * r11_122 = null;
		uint64 r10_222 = 0x00;
		do
		{
			word32 r10d_219 = (word32) r10_222;
			Eq_137 rdx_125;
			rdx_125.u0 = rcx->u0.t0000.u0;
			struct Eq_2417 * r8_126 = g_ptr80030720;
			if (rdx_125 == 0x00)
				goto l000000018000B37B;
			Eq_1342 ecx_139;
			ecx_139.u0 = rcx->u0.t000C.u0;
			if (rcx->u0.t0008.u0 + 0x04 > ecx_139)
				goto l000000018000B37B;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			if (rcx->u0.t0008.u0 + 0x04 > ecx_139)
				goto l000000018000B37B;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 eax_164 = rdx_125.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
			if ((&rcx->u0)[1] != 0x00)
				eax_164 = __bswap<word32>(eax_164);
			*(r8_126->a0030 + r11_122) = (word64) eax_164;
			up32 ecx_174 = 0x00;
			if (*((char *) &r11_122->dw0000 + (r8_126 + (struct Eq_19045 *) 228)) > 0x00)
			{
				Eq_137 r9_178;
				r9_178.u0 = rcx->u0.t0000.u0;
				do
				{
					if (r9_178 == 0x00)
						goto l000000018000B37B;
					Eq_1342 edx_194;
					edx_194.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > edx_194)
						goto l000000018000B37B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > edx_194)
						goto l000000018000B37B;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					++ecx_174;
				} while (ecx_174 < *((char *) (&r11_122->dw0000) + (r8_126 + (struct Eq_19099 *) 228)));
			}
			r10_222 = (uint64) (r10d_219 + 0x01);
			r11_122 = (struct Eq_18987 *) &(r11_122->a0030 + 0x00B2)->t0000.u0;
		} while ((word32) r10_222 < edx);
	}
	Eq_1753 eax_237;
	eax_237.u0 = g_t800306F0.u0;
	if (eax_237 != 777)
	{
		if (eax_237 >= 0x030C)
		{
			Eq_1342 edx_305;
			edx_305.u0 = 0x00;
			if (edx == 0x00)
			{
l000000018000B2FC:
				word64 qwLoc0150;
				fn0000000180023580(rax_10 ^ fp - 0x0148, qwLoc0150);
				return;
			}
			Eq_137 r8_254;
			r8_254.u0 = rcx->u0.t0000.u0;
			do
			{
				if (r8_254 == 0x00)
					goto l000000018000B37B;
				Eq_1342 ecx_270;
				ecx_270.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > ecx_270)
					goto l000000018000B37B;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > ecx_270)
					goto l000000018000B37B;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > ecx_270)
					goto l000000018000B37B;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > ecx_270)
					goto l000000018000B37B;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				edx_305.u2 = (word64) edx_305 + 1;
			} while (edx_305 < edx);
		}
		goto l000000018000B2C4;
	}
	else
	{
		if (rcx->u0.t0000.u0 != 0x00)
		{
			Eq_1342 ecx_329;
			ecx_329.u0 = rcx->u0.t000C.u0;
			if (rcx->u0.t0008.u0 + 0x04 <= ecx_329)
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 <= ecx_329)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 <= ecx_329)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						if (rcx->u0.t0008.u0 + 0x04 <= ecx_329)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
l000000018000B2C4:
							if (edx != 0x00)
							{
								do
								{
									fn000000018000B390(rcx, g_ptr80030720 + (int64) edi_111);
									edi_111.u2 = (word64) edi_111 + 1;
								} while (edi_111 < edx);
							}
							goto l000000018000B2EF;
						}
					}
				}
			}
		}
l000000018000B37B:
		goto l000000018000B2F4;
	}
}

// 000000018000B390: void fn000000018000B390(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx)
// Called from:
//      fn000000018000B0F0
void fn000000018000B390(union Eq_3676 * rcx, struct Eq_1142 * rdx)
{
	ptr64 fp;
	ui64 rax_26 = g_qw80030008 ^ fp - 0x0128;
	if (rdx == null)
	{
l000000018000B633:
		word64 qwLoc0130;
		fn0000000180023580(rax_26 ^ fp - 0x0128, qwLoc0130);
		return;
	}
	Eq_1265 edi_117;
	edi_117.u0 = rdx->t0024.u0;
	Eq_6279 ebp_113;
	ebp_113.u0 = rdx->t0020.u0;
	Eq_19285 tLocE8;
	fn00000001800010C0(&tLocE8);
	tLocE8.ow0000 = rdx->ow0038;
	tLocE8.ow0010 = rdx->ow0048;
	tLocE8.ow0020 = rdx->ow0058;
	tLocE8.ow0030 = rdx->ow0068;
	tLocE8.ow0040 = rdx->ow0078;
	tLocE8.ow0050 = rdx->ow0088;
	tLocE8.ow0060 = rdx->ow0098;
	tLocE8.ow0070 = rdx->ow00A8;
	tLocE8.ow0080 = rdx->ow00B8;
	tLocE8.ow0090 = rdx->ow00C8;
	tLocE8.qw00A0 = rdx->qw00D8;
	Eq_1342 eax_75;
	eax_75.u0 = rdx->t0030.u0;
	if (eax_75 != 0x00)
		rcx->u0.t0008.u0 = (int32) eax_75;
	if (g_t800306F0.u0 > 0x02FC)
	{
		if (rcx->u0.t0000.u0 == 0x00)
			goto l000000018000B615;
		Eq_1342 eax_94 = rcx->u0.t0008.u0 + 0x04;
		if (eax_94 > ((rcx->u0).t000C).u0)
			goto l000000018000B615;
		rcx->u0.t0008.u0 = (int32) eax_94;
	}
	uint64 r9_101 = (uint64) rcx->u0.t0008.u0;
	if ((word32) r9_101 != 0x00 && fn0000000180005100(rcx, rdx, edi_117, (word32) r9_101, ebp_113, &tLocE8) == 0x00)
		goto l000000018000B615;
	Eq_1342 eax_149;
	eax_149.u0 = rdx->t0034.u0;
	if (eax_149 != 0x00)
		rcx->u0.t0008.u0 = (int32) eax_149;
	uint32 ecx_180 = rdx->dw002C;
	if (g_t800306F0.u0 <= 0x02FC)
	{
l000000018000B4F4:
		Eq_19437 edi_189 = SLICE(ecx_180 *64 ~0x55555554, word32, 32) >> 0x01;
		if (edi_189 <= 0x00 || fn0000000180001E80(rdx, (uint64) edi_189) != 0x00)
		{
			Eq_19459 r15_216;
			r15_216.u1 = (uint64) edi_189;
			Eq_19459 rdi_219;
			rdi_219.u1 = 0x00;
			if (r15_216 > 0x00)
			{
				Eq_19470 r11_225;
				r11_225.u1 = 0x00;
				do
				{
					Eq_137 rdx_228;
					rdx_228.u0 = rcx->u0.t0000.u0;
					if (rdx_228 == 0x00)
						goto l000000018000B615;
					Eq_1342 r10d_241;
					r10d_241.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x02 > r10d_241)
						goto l000000018000B615;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
					uint64 r9_247 = (uint64) rcx->u0.t0008.u0;
					cu16 r8w_259 = (cu16) rdx_228.u2[(uint64) ((word32) r9_247 - 0x02)];
					Eq_1342 ebp_254 = (&rcx->u0)[1];
					if (ebp_254 != 0x00)
						r8w_259 = r8w_259 >> 0x08 | r8w_259 << 0x08;
					if ((word32) r9_247 + 0x02 > r10d_241)
						goto l000000018000B615;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
					uint64 r14_281 = (uint64) rcx->u0.t0008.u0;
					cu16 r9w_292 = (cu16) rdx_228.u2[(uint64) ((word32) r14_281 - 0x02)];
					if (ebp_254 != 0x00)
						r9w_292 = r9w_292 >> 0x08 | r9w_292 << 0x08;
					if ((word32) r14_281 + 0x02 > r10d_241)
						goto l000000018000B615;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
					cu16 dx_326 = (cu16) rdx_228.u2[(uint64) (rcx->u0.t0008.u0 + ~0x01)];
					if (ebp_254 != 0x00)
						dx_326 = dx_326 >> 0x08 | dx_326 << 0x08;
					struct Eq_1145 * rcx_341 = rdx->ptr0008;
					if (rcx_341 != null)
					{
						*((char *) &rcx_341->dw0000 + ((word64) r11_225 + 4)) = (struct Eq_1145 *) (word32) r8w_259;
						*(rdx->ptr0008->a0008 + r11_225) = (word64) (word32) r9w_292;
						*(rdx->ptr0008->a000C + r11_225) = (word64) (word32) dx_326;
					}
					rdi_219 = (word64) rdi_219 + 1;
					r11_225 = (word64) r11_225 + 20;
				} while (rdi_219 < r15_216);
			}
		}
		goto l000000018000B615;
	}
	if (rcx->u0.t0000.u0 != 0x00)
	{
		Eq_1342 eax_173 = rcx->u0.t0008.u0 + 0x04;
		if (eax_173 <= ((rcx->u0).t000C).u0)
		{
			rcx->u0.t0008.u0 = (int32) eax_173;
			goto l000000018000B4F4;
		}
	}
l000000018000B615:
	fn00000001800235AC(0x0A);
	goto l000000018000B633;
}

// 000000018000B660: Register word32 fn000000018000B660(Register (ptr64 Eq_3676) rcx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180009990
//      fn000000018000C1B0
//      fn000000018000FBF0
word32 fn000000018000B660(union Eq_3676 * rcx, Eq_1342 r8d)
{
	ptr64 fp;
	word64 r8;
	r8d = (word32) r8;
	uint64 rdi_15 = (uint64) r8d;
	ui64 rax_11 = g_qw80030008 ^ fp - 616;
	Eq_1342 edi_22 = (word32) rdi_15;
	word64 qwLoc0270;
	if (r8d == 0x00)
		return (word32) fn0000000180023580(rax_11 ^ fp - 616, qwLoc0270);
	rcx->u0.t0008.u0 = (int32) edi_22;
	Eq_19633 tLoc0248;
	memset(&tLoc0248, 0, 0x0104);
	Eq_19643 tLoc0138;
	memset(&tLoc0138, 0, 0x0104);
	Eq_137 r10_36;
	r10_36.u0 = rcx->u0.t0000.u0;
	if (r10_36 == 0x00)
		return (word32) fn0000000180023580(rax_11 ^ fp - 616, qwLoc0270);
	uint64 rdx_44 = (uint64) ((word32) rdi_15 + 0x04);
	Eq_1342 r8d_46;
	r8d_46.u0 = rcx->u0.t000C.u0;
	Eq_1342 edx_45 = (word32) rdx_44;
	if (edx_45 > r8d_46)
		return (word32) fn0000000180023580(rax_11 ^ fp - 616, qwLoc0270);
	Eq_1342 r11d_56 = (&rcx->u0)[1];
	rcx->u0.t0008.u0 = (int32) edx_45;
	Eq_1342 r9d_191 = r10_36.u2[(uint64) ((word32) rdx_44 - 0x04)];
	if (r11d_56 != 0x00)
		r9d_191 = __bswap<word32>(r9d_191);
	if ((word32) rdx_44 + 0x04 > r8d_46)
		return (word32) fn0000000180023580(rax_11 ^ fp - 616, qwLoc0270);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rdx_81 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 esi_210 = r10_36.u2[(uint64) ((word32) rdx_81 - 0x04)];
	if (r11d_56 != 0x00)
		esi_210 = __bswap<word32>(esi_210);
	if ((word32) rdx_81 + 0x04 <= r8d_46)
	{
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 rdx_116 = (uint64) rcx->u0.t0008.u0;
		word32 edx_147 = (word32) rdx_116;
		Eq_1342 ebp_136 = r10_36.u2[(uint64) ((word32) rdx_116 - 0x04)];
		if (r11d_56 != 0x00)
			ebp_136 = __bswap<word32>(ebp_136);
		word32 r14d_144 = 0x00;
		Eq_1342 eax_150 = (word32) rdx_116 + 0x04;
		if (g_dw800306F4 != 0x00)
			r14d_144 = edx_147;
		if (eax_150 <= r8d_46)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 edi_181 = r10_36.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
			if (r11d_56 != 0x00)
				edi_181 = __bswap<word32>(edi_181);
			fn0000000180005050(rcx, r9d_191, &tLoc0248);
			fn0000000180005050(rcx, esi_210, &tLoc0138);
			Eq_1342 edi_229;
			edi_229.u2 = (word64) edi_181 + r14d_144;
			struct Eq_14187 * rax_233 = fn0000000180001A00(&g_t800306F0);
			if (rax_233 != null)
			{
				int64 r8_248 = rax_233 - &tLoc0248;
				union Eq_19800 * rdx_250 = &tLoc0248;
				char cl_255;
				do
				{
					cl_255 = rdx_250->u0;
					(&rdx_250->u0)[r8_248] = cl_255;
					rdx_250 = (union Eq_19800 *) ((char *) rdx_250 + 1);
				} while (cl_255 != 0x00);
				word64 rax_267 = rax_233 - &tLoc0138;
				union Eq_19815 * rdx_269 = &tLoc0138;
				char al_275;
				do
				{
					al_275 = rdx_269->u0;
					(&rdx_269->u0)[rax_267 + 260] = al_275;
					rdx_269 = (union Eq_19815 *) ((char *) rdx_269 + 1);
				} while (al_275 != 0x00);
				rax_233->dw0514 = ~0x00;
			}
			g_dw80030748 = 0x00;
			fn0000000180008FC0(rcx, 0x00, edi_229, ebp_136);
		}
	}
	return (word32) fn0000000180023580(rax_11 ^ fp - 616, qwLoc0270);
}

// 000000018000B870: Register word32 fn000000018000B870(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register Eq_1342 r8d)
// Called from:
//      fn0000000180009990
word32 fn000000018000B870(union Eq_3676 * rcx, Eq_1342 edx, Eq_1342 r8d)
{
	ptr64 fp;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_14 = g_qw80030008 ^ fp - 344;
	word64 qwLoc0160;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		uint64 r9_115 = 0x00;
		Eq_19943 tLoc0138;
		if (edx != 0x00)
		{
			do
			{
				word32 r9d_113 = (word32) r9_115;
				Eq_137 rdx_39;
				rdx_39.u0 = rcx->u0.t0000.u0;
				if (rdx_39 == 0x00)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				Eq_1342 r8d_52;
				r8d_52.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_69 = (uint64) rcx->u0.t0008.u0;
				uint64 rdx_101 = (uint64) rdx_39.u2[(uint64) ((word32) r10_69 - 0x04)];
				Eq_1342 edx_75 = (word32) rdx_101;
				word32 rdx_32_32_100 = SLICE(rdx_101, word32, 32);
				if ((&rcx->u0)[1] != 0x00)
					rdx_101 = SEQ(rdx_32_32_100, __bswap<word32>(edx_75));
				if ((word32) r10_69 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				fn0000000180005050(rcx, (word32) rdx_101, &tLoc0138);
				r9_115 = (uint64) (r9d_113 + 0x01);
			} while ((word32) r9_115 < edx);
		}
		rcx->u0.t0008.u0 = (int32) r8d;
		Eq_1342 ebp_330;
		ebp_330.u0 = 0x00;
		if (edx != 0x00)
		{
			do
			{
				memset(&tLoc0138, 0, 0x0104);
				Eq_137 r11_153;
				r11_153.u0 = rcx->u0.t0000.u0;
				if (r11_153 == 0x00)
				{
l000000018000BA7D:
					goto l000000018000BA51;
				}
				Eq_1342 r8d_166;
				r8d_166.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_166)
					goto l000000018000BA7D;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_166)
					goto l000000018000BA7D;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_182 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r10d_189 = (&rcx->u0)[1];
				Eq_1342 edx_194 = r11_153.u2[(uint64) ((word32) r9_182 - 0x04)];
				if (r10d_189 != 0x00)
					edx_194 = __bswap<word32>(edx_194);
				if ((word32) r9_182 + 0x04 > r8d_166)
					goto l000000018000BA7D;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_214 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r9d_282 = (word32) r9_214;
				Eq_1342 esi_225 = r11_153.u2[(uint64) ((word32) r9_214 - 0x04)];
				if (r10d_189 != 0x00)
					esi_225 = __bswap<word32>(esi_225);
				if (edx_194 > 100)
				{
					rcx->u0.t0008.u0 = (int32) edx_194;
					Eq_20047 rdx_234;
					rdx_234.u1 = 0x00;
					byte al_263;
					do
					{
						if (rcx->u0.t0008.u0 + 0x01 > r8d_166)
							goto l000000018000BA1A;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
						al_263 = r11_153.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
						if (rdx_234 < 0x0104)
							*(&tLoc0138 + rdx_234) = (word64) al_263;
						rdx_234 = (word64) rdx_234 + 1;
					} while (al_263 != 0x00);
					if (rdx_234 < 0x0104)
						*(&tLoc0138 + rdx_234) = (word64) al_263;
					else
						tLoc0138.b0103 = 0x00;
					rcx->u0.t0008.u0 = (int32) r9d_282;
				}
l000000018000BA1A:
				if (strstr(&tLoc0138, "-skin") != null)
				{
					Eq_1342 edi_324;
					edi_324.u0 = rcx->u0.t0008.u0;
					fn000000018000BA90(rcx, esi_225);
					rcx->u0.t0008.u0 = (int32) edi_324;
				}
				ebp_330.u2 = (word64) ebp_330 + 1;
			} while (ebp_330 < edx);
		}
l000000018000BA51:
	}
	return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
}

// 000000018000BA90: void fn000000018000BA90(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx)
// Called from:
//      fn000000018000B870
void fn000000018000BA90(union Eq_3676 * rcx, Eq_1342 edx)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_12 = g_qw80030008 ^ fp - 488;
	if (edx == 0x00)
	{
l000000018000BFE0:
		word64 qwLoc01F0;
		fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
		return;
	}
	Eq_137 rdx_23;
	rdx_23.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	if (rdx_23 != 0x00)
	{
		uint64 r8_33 = (uint64) ((word64) edx + 4);
		Eq_1342 r9d_35;
		r9d_35.u0 = rcx->u0.t000C.u0;
		Eq_1342 r8d_34 = (word32) r8_33;
		if (r8d_34 <= r9d_35)
		{
			Eq_1342 r10d_53 = (&rcx->u0)[1];
			rcx->u0.t0008.u0 = (int32) r8d_34;
			Eq_1342 r14d_58 = rdx_23.u2[(uint64) ((word32) r8_33 - 0x04)];
			if (r10d_53 != 0x00)
				r14d_58 = __bswap<word32>(r14d_58);
			if ((word32) r8_33 + 0x04 > r9d_35)
			{
l000000018000BFD8:
				goto l000000018000BFE0;
			}
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r8_78 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 edi_591 = rdx_23.u2[(uint64) ((word32) r8_78 - 0x04)];
			if (r10d_53 != 0x00)
				edi_591 = __bswap<word32>(edi_591);
			if ((word32) r8_78 + 0x04 > r9d_35)
			{
l000000018000BFD0:
				goto l000000018000BFD8;
			}
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r8_113 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 r15d_129 = rdx_23.u2[(uint64) ((word32) r8_113 - 0x04)];
			if (r10d_53 != 0x00)
				r15d_129 = __bswap<word32>(r15d_129);
			if ((word32) r8_113 + 0x04 > r9d_35)
			{
l000000018000BFC8:
				goto l000000018000BFD0;
			}
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 r13d_167 = rdx_23.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
			if (r10d_53 != 0x00)
				r13d_167 = __bswap<word32>(r13d_167);
			word128 xmm1_173 = g_ow80028E70;
			Eq_20258 tLoc0188;
			tLoc0188.ow0000 = g_ow80028E60;
			tLoc0188.ow0010 = xmm1_173;
			if (fn000000018001D8D0(rcx, &tLoc0188) != 0x00)
			{
				Eq_20275 tLoc01B8;
				tLoc01B8.qw0008 = 0x00;
				tLoc01B8.qw0000 = 0x00;
				Eq_20286 tLoc01C8;
				tLoc01C8.qw0008 = 0x00;
				tLoc01C8.qw0000 = 0x00;
				if (fn000000018001D710(rcx, &tLoc01B8) != 0x00 && fn000000018001D710(rcx, &tLoc01C8) != 0x00)
				{
					Eq_137 rdx_244;
					rdx_244.u0 = rcx->u0.t0000.u0;
					if (rdx_244 != 0x00 && ((rcx->u0).t0008).u0 + 0x04 <= ((rcx->u0).t000C).u0)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdx_266 = (uint64) rdx_244.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
						Eq_1342 edx_268 = (word32) rdx_266;
						word32 rdx_32_32_275 = SLICE(rdx_266, word32, 32);
						if ((&rcx->u0)[1] != 0x00)
							rdx_266 = SEQ(rdx_32_32_275, __bswap<word32>(edx_268));
						Eq_20350 tLoc0148;
						fn0000000180005050(rcx, (word32) rdx_266, &tLoc0148);
						Eq_137 r9_288;
						r9_288.u0 = rcx->u0.t0000.u0;
						if (r9_288 != 0x00)
						{
							Eq_1342 edx_301;
							edx_301.u0 = rcx->u0.t000C.u0;
							if (rcx->u0.t0008.u0 + 0x04 <= edx_301)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 r10_307 = (uint64) rcx->u0.t0008.u0;
								Eq_1342 eax_314 = r9_288.u2[(uint64) ((word32) r10_307 - 0x04)];
								Eq_1342 r8d_317 = (&rcx->u0)[1];
								Eq_1342 dwLoc01A4_1089 = eax_314;
								if (r8d_317 != 0x00)
									dwLoc01A4_1089 = __bswap<word32>(eax_314);
								if ((word32) r10_307 + 0x04 <= edx_301)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint64 r10_336 = (uint64) rcx->u0.t0008.u0;
									uint64 r11_341 = (uint64) r9_288.u2[(uint64) ((word32) r10_336 - 0x04)];
									Eq_1342 r11d_342 = (word32) r11_341;
									word32 r11_32_32_1545 = SLICE(r11_341, word32, 32);
									Eq_1342 dwLoc01A8_1091 = r11d_342;
									if (r8d_317 != 0x00)
									{
										r11d_342 = __bswap<word32>(r11d_342);
										dwLoc01A8_1091 = r11d_342;
									}
									if ((word32) r10_336 + 0x04 <= edx_301)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r10_364 = (uint64) rcx->u0.t0008.u0;
										Eq_1342 eax_370 = r9_288.u2[(uint64) ((word32) r10_364 - 0x04)];
										Eq_1342 dwLoc019C_1093 = eax_370;
										if (r8d_317 != 0x00)
											dwLoc019C_1093 = __bswap<word32>(eax_370);
										if ((word32) r10_364 + 0x04 <= edx_301)
										{
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 r10_392 = (uint64) rcx->u0.t0008.u0;
											Eq_1342 eax_398 = r9_288.u2[(uint64) ((word32) r10_392 - 0x04)];
											Eq_1342 dwLoc01A0_1095 = eax_398;
											if (r8d_317 != 0x00)
												dwLoc01A0_1095 = __bswap<word32>(eax_398);
											if ((word32) r10_392 + 0x04 <= edx_301)
											{
												rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
												uint64 r10_420 = (uint64) rcx->u0.t0008.u0;
												Eq_1342 eax_426 = r9_288.u2[(uint64) ((word32) r10_420 - 0x04)];
												Eq_1342 dwLoc0194_1097 = eax_426;
												if (r8d_317 != 0x00)
													dwLoc0194_1097 = __bswap<word32>(eax_426);
												if ((word32) r10_420 + 0x04 <= edx_301)
												{
													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
													uint64 r10_448 = (uint64) rcx->u0.t0008.u0;
													Eq_1342 eax_454 = r9_288.u2[(uint64) ((word32) r10_448 - 0x04)];
													Eq_1342 dwLoc0198_1099 = eax_454;
													if (r8d_317 != 0x00)
														dwLoc0198_1099 = __bswap<word32>(eax_454);
													if ((word32) r10_448 + 0x04 <= edx_301)
													{
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														uint64 r10_482 = (uint64) rcx->u0.t0008.u0;
														Eq_1342 r12d_507 = r9_288.u2[(uint64) ((word32) r10_482 - 0x04)];
														if (r8d_317 != 0x00)
															r12d_507 = __bswap<word32>(r12d_507);
														if ((word32) r10_482 + 0x04 <= edx_301)
														{
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															uint64 r10_521 = (uint64) rcx->u0.t0008.u0;
															Eq_1342 eax_527 = r9_288.u2[(uint64) ((word32) r10_521 - 0x04)];
															Eq_1342 dwLoc0190_1102 = eax_527;
															if (r8d_317 != 0x00)
																dwLoc0190_1102 = __bswap<word32>(eax_527);
															if ((word32) r10_521 + 0x04 <= edx_301)
															{
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																if (rcx->u0.t0008.u0 + 0x04 <= edx_301)
																{
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	if (edi_591 != 0x00)
																		rcx->u0.t0008.u0 = (int32) edi_591;
																	uint32 r14d_618 = r14d_58 >> 0x04;
																	uint32 esi_1066 = 0x00;
																	uint64 r11_1707 = SEQ(r11_32_32_1545, r11d_342);
																	if (r14d_618 != 0x00)
																	{
																		do
																		{
																			word128 xmm1_627 = g_ow80028E70;
																			tLoc0188.ow0000 = g_ow80028E60;
																			tLoc0188.ow0010 = xmm1_627;
																			if (fn000000018001D8D0(rcx, &tLoc0188) == 0x00)
																				goto l000000018000BFF9;
																			++esi_1066;
																		} while (esi_1066 < r14d_618);
																		r11_1707 = (uint64) dwLoc01A8_1091;
																	}
																	Eq_1342 r11d_760 = (word32) r11_1707;
																	if (r13d_167 != 0x00)
																		rcx->u0.t0008.u0 = (int32) r13d_167;
																	uint32 r15d_705 = r15d_129 >> 0x03;
																	if (r15d_705 != 0x00)
																	{
																		uint64 r10_1709 = 0x00;
																		do
																		{
																			tLoc01B8.qw0008 = 0x00;
																			tLoc01B8.qw0000 = 0x00;
																			tLoc01C8.qw0008 = 0x00;
																			tLoc01C8.qw0000 = 0x00;
																			word32 r10d_751 = (word32) r10_1709;
																			if (fn000000018001D710(rcx, &tLoc01B8) == 0x00 || fn000000018001D710(rcx, &tLoc01C8) == 0x00)
																				goto l000000018000BFF9;
																			r10_1709 = (uint64) (r10d_751 + 0x01);
																		} while ((word32) r10_1709 < r15d_705);
																	}
																	Eq_1342 edi_791;
																	edi_791.u0 = 0x00;
																	if (r11d_760 != 0x00)
																		rcx->u0.t0008.u0 = (int32) r11d_760;
																	if (dwLoc01A4_1089 != 0x00)
																	{
																		uint64 r9_1711 = 0x00;
																		do
																		{
																			word32 r9d_848 = (word32) r9_1711;
																			Eq_137 rdx_802;
																			rdx_802.u0 = rcx->u0.t0000.u0;
																			if (rdx_802 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
																				goto l000000018000BFF9;
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			uint64 rdx_823 = (uint64) rdx_802.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
																			Eq_1342 edx_827 = (word32) rdx_823;
																			word32 rdx_32_32_835 = SLICE(rdx_823, word32, 32);
																			if ((&rcx->u0)[1] != 0x00)
																				rdx_823 = SEQ(rdx_32_32_835, __bswap<word32>(edx_827));
																			fn0000000180005050(rcx, (word32) rdx_823, &tLoc0148);
																			r9_1711 = (uint64) (r9d_848 + 0x01);
																		} while ((word32) r9_1711 < dwLoc01A4_1089);
																	}
																	if (fn000000018000C020(rcx, dwLoc019C_1093, dwLoc01A0_1095) != 0x00 && fn000000018000C0C0(rcx, dwLoc0194_1097, dwLoc0198_1099) != 0x00)
																	{
																		if (dwLoc0190_1102 != 0x00)
																		{
																			rcx->u0.t0008.u0 = (int32) dwLoc0190_1102;
																			if (r12d_507 != 0x00)
																			{
																				do
																				{
																					tLoc01C8.qw0004 = 0x00;
																					tLoc01C8.dw0000 = 0x00;
																					tLoc01B8.qw0004 = 0x00;
																					tLoc01B8.dw0000 = 0x00;
																					if (fn000000018001D5C0(rcx, &tLoc01C8) == 0x00 || fn000000018001D5C0(rcx, &tLoc01B8) == 0x00)
																						goto l000000018000BFF9;
																					edi_791.u2 = (word64) edi_791 + 1;
																				} while (edi_791 < r12d_507);
																			}
																		}
																	}
																	else
																	{
l000000018000BFF9:
																	}
l000000018000BFC0:
																	goto l000000018000BFC8;
																}
															}
														}
														goto l000000018000BFB8;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			goto l000000018000BFC0;
		}
	}
	goto l000000018000BFE0;
}

// 000000018000C020: Register word32 fn000000018000C020(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register Eq_1342 r8d)
// Called from:
//      fn000000018000BA90
word32 fn000000018000C020(union Eq_3676 * rcx, Eq_1342 edx, Eq_1342 r8d)
{
	word64 rdx;
	edx = (word32) rdx;
	word64 r8;
	r8d = (word32) r8;
	if (r8d == 0x00)
		return 0x01;
	rcx->u0.t0008.u0 = (int32) r8d;
	if (rcx->u0.t0000.u0 == 0x00 || (word64) r8d + 4 > ((rcx->u0).t000C).u0)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) ((word64) r8d + 4);
	if (edx != 0x00)
	{
		uint64 r11_169 = 0x00;
		do
		{
			word32 r11d_84 = (word32) r11_169;
			if (rcx->u0.t0000.u0 == 0x00)
				return 0x00;
			Eq_1342 ecx_44;
			ecx_44.u0 = rcx->u0.t000C.u0;
			Eq_1342 eax_43 = rcx->u0.t0008.u0 + 0x02;
			if (eax_43 > ecx_44)
				return 0x00;
			rcx->u0.t0008.u0 = (int32) eax_43;
			if ((word64) eax_43 + 2 > ecx_44)
				return 0x00;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
			Eq_20899 tLoc18;
			tLoc18.qw0008 = 0x00;
			tLoc18.qw0000 = 0x00;
			if (fn000000018001D710(rcx, &tLoc18) == 0x00)
				return 0x00;
			r11_169 = (uint64) (r11d_84 + 0x01);
		} while ((word32) r11_169 < edx);
	}
	return 0x01;
}

// 000000018000C0C0: Register word32 fn000000018000C0C0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register Eq_1342 r8d)
// Called from:
//      fn000000018000BA90
word32 fn000000018000C0C0(union Eq_3676 * rcx, Eq_1342 edx, Eq_1342 r8d)
{
	word64 rdx;
	edx = (word32) rdx;
	word64 r8;
	r8d = (word32) r8;
	if (r8d == 0x00)
		return (word64) r8d + 1;
	Eq_137 rbp_17;
	rbp_17.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) r8d;
	if (rbp_17 == 0x00)
		return 0x00;
	Eq_1342 r8d_30;
	r8d_30.u0 = rcx->u0.t000C.u0;
	if ((word64) r8d + 4 > r8d_30)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) ((word64) r8d + 4);
	Eq_1342 ebx_103;
	ebx_103.u0 = 0x00;
	uint64 r11_101 = 0x00;
	if (edx != 0x00)
	{
		r11_101 = 0x00;
		do
		{
			word32 r11d_98 = (word32) r11_101;
			if (rcx->u0.t0008.u0 + 0x04 > r8d_30)
				return 0x00;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rdi_75 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 r10d_84 = rbp_17.u2[(uint64) ((word32) rdi_75 - 0x04)];
			if ((&rcx->u0)[1] != 0x00)
				r10d_84 = __bswap<word32>(r10d_84);
			if ((word32) rdi_75 + 0x04 > r8d_30)
				return 0x00;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			r11_101 = (uint64) ((word64) r10d_84 + r11d_98);
			ebx_103.u2 = (word64) ebx_103 + 1;
		} while (ebx_103 < edx);
	}
	int32 r11d_111 = (word32) r11_101;
	if (r11d_111 > 0x00)
	{
		uint64 rdx_160 = 0x00;
		do
		{
			word32 edx_158 = (word32) rdx_160;
			if (rcx->u0.t0008.u0 + 0x04 > r8d_30)
				return 0x00;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			if (rcx->u0.t0008.u0 + 0x04 > r8d_30)
				return 0x00;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			rdx_160 = (uint64) (edx_158 + 0x01);
		} while ((word32) rdx_160 < r11d_111);
	}
	return 0x01;
}

// 000000018000C1B0: Register word32 fn000000018000C1B0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_6028) rdx)
// Called from:
//      fn0000000180003F40
word32 fn000000018000C1B0(union Eq_3676 * rcx, struct Eq_6028 * rdx)
{
	Eq_21060 fp;
	ui64 rax_15 = g_qw80030008 ^ fp - 1000;
	word64 qwLoc03F0;
	if (rcx->u0.t0000.u0 == 0x00)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	uint64 r8_29 = (uint64) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 ecx_31;
	ecx_31.u0 = rcx->u0.t000C.u0;
	Eq_1342 r8d_30 = (word32) r8_29;
	if (r8d_30 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) r8d_30;
	if ((word32) r8_29 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	uint64 r8_41 = (uint64) ((word64) r8d_30 + 4);
	rcx->u0.t0008.u0 = (int32) (word32) r8_41;
	if ((word32) r8_41 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rdx_52 = (uint64) rcx->u0.t0008.u0;
	word32 edx_58 = (word32) rdx_52;
	if ((word32) rdx_52 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	uint64 rdx_60 = (uint64) (edx_58 + 0x04);
	rcx->u0.t0008.u0 = (int32) (word32) rdx_60;
	if ((word32) rdx_60 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	uint64 rdx_71 = (uint64) rcx->u0.t0008.u0;
	if ((word32) rdx_71 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) ((word32) rdx_71 + 0x04);
	uint64 rax_82 = (uint64) rdx->dw0008;
	Eq_1342 eax_83 = (word32) rax_82;
	if (eax_83 == 0x00)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) eax_83;
	Eq_1342 edx_93 = (word32) rax_82 + 0x04;
	int32 r8d_140 = rdx->dw0010;
	if (edx_93 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) edx_93;
	uint64 rdx_98 = (uint64) ((word64) edx_93 + 4);
	Eq_1342 edx_99 = (word32) rdx_98;
	if (edx_99 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) edx_99;
	if ((word32) rdx_98 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	uint64 rdx_109 = (uint64) ((word64) edx_99 + 4);
	Eq_1342 edx_110 = (word32) rdx_109;
	rcx->u0.t0008.u0 = (int32) edx_110;
	if ((word32) rdx_109 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	uint64 rdx_118 = (uint64) ((word64) edx_110 + 4);
	rcx->u0.t0008.u0 = (int32) (word32) rdx_118;
	if ((word32) rdx_118 + 0x04 > ecx_31)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	Eq_1342 eax_138 = (word32) rdx_118 + 0x04;
	rcx->u0.t0008.u0 = (int32) eax_138;
	int32 edx_165 = 0x00;
	if (r8d_140 > 0x05)
	{
		do
		{
			eax_138.u2 = (word64) eax_138 + 4;
			if (eax_138 > ecx_31)
				goto l000000018000C3A0;
			rcx->u0.t0008.u0 = (int32) eax_138;
			++edx_165;
		} while (edx_165 < r8d_140 - 0x05);
	}
	Eq_1342 edi_185;
	edi_185.u0 = rdx->t001C.u0;
	Eq_21310 tLoc0368;
	if (eax_138 < edi_185)
	{
		do
		{
			if (fp == 872 || fn0000000180004F90(rcx, &tLoc0368) == 0x00)
				goto l000000018000C398;
		} while (rcx->u0.t0008.u0 < edi_185);
	}
	uint64 rdx_230 = (uint64) rdx->t001C.u0;
	Eq_1753 eax_259;
	eax_259.u0 = g_t800306F0.u0;
	Eq_21255 tLoc03B8;
	tLoc03B8.qw0000 = 0x00;
	tLoc03B8.qw0008 = 0x00;
	tLoc03B8.qw0010 = 0x00;
	tLoc03B8.qw0018 = 0x00;
	tLoc03B8.qw0020 = 0x00;
	tLoc03B8.qw0028 = 0x00;
	tLoc03B8.qw0030 = 0x00;
	tLoc03B8.qw0038 = 0x00;
	tLoc03B8.qw0040 = 0x00;
	tLoc03B8.qw0048 = 0x00;
	word32 edx_264 = (word32) rdx_230;
	switch (eax_259)
	{
	case 811:
		if (edx_264 == 0x00 || fn000000018000D030(rcx, (word32) rdx_230, &tLoc03B8) == 0x00)
			goto l000000018000C5CB;
		break;
	case 844:
		if (edx_264 == 0x00 || fn000000018000CB20(rcx, (word32) rdx_230, &tLoc03B8) == 0x00)
			goto l000000018000C5CB;
		break;
	default:
		if (edx_264 == 0x00 || fn000000018000C5F0(rcx, (word32) rdx_230, &tLoc03B8) == 0x00)
			goto l000000018000C5CB;
		break;
	}
	Eq_1342 eax_342;
	eax_342.u0 = tLoc03B8.t001C.u0;
	if (eax_342 != 0x00)
	{
		Eq_1342 r14d_351;
		r14d_351.u0 = tLoc03B8.t0018.u0;
		rcx->u0.t0008.u0 = (int32) eax_342;
		if (r14d_351 != 0x00 && fn0000000180001FD0(&g_t800306F0, r14d_351) == 0x00)
			goto l000000018000C5CB;
		Eq_1342 edi_530;
		edi_530.u0 = 0x00;
		if (r14d_351 != 0x00)
		{
			do
			{
				memset(&tLoc0368, 0, 0x0104);
				Eq_137 r8_390;
				r8_390.u0 = rcx->u0.t0000.u0;
				if (r8_390 == 0x00)
					goto l000000018000C5CB;
				Eq_1342 r9d_403;
				r9d_403.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r9d_403)
					goto l000000018000C5CB;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_409 = (uint64) rcx->u0.t0008.u0;
				word32 edx_424 = (word32) rdx_409;
				Eq_1342 r11d_416 = (&rcx->u0)[1];
				Eq_1342 r10d_421 = r8_390.u2[(uint64) ((word32) rdx_409 - 0x04)];
				if (r11d_416 != 0x00)
					r10d_421 = __bswap<word32>(r10d_421);
				uint64 rdx_426 = (uint64) (edx_424 + 0x04);
				Eq_1342 edx_427 = (word32) rdx_426;
				if (edx_427 > r9d_403)
					goto l000000018000C5CB;
				rcx->u0.t0008.u0 = (int32) edx_427;
				Eq_1342 esi_443 = r8_390.u2[(uint64) ((word32) rdx_426 - 0x04)];
				if (r11d_416 != 0x00)
					esi_443 = __bswap<word32>(esi_443);
				if ((word32) rdx_426 + 0x04 > r9d_403)
					goto l000000018000C5CB;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 r9d_469 = r8_390.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if (r11d_416 != 0x00)
					r9d_469 = __bswap<word32>(r9d_469);
				fn0000000180005050(rcx, r10d_421, &tLoc0368);
				Eq_21476 tLoc0258;
				fn0000000180005050(rcx, esi_443, &tLoc0258);
				Eq_21480 tLoc0148;
				fn0000000180005050(rcx, r9d_469, &tLoc0148);
				struct Eq_1702 * r9_522 = g_ptr80030700;
				if (r9_522 != null)
					MultiByteToWideChar(0x00, 0x01, &tLoc0368, -1, r9_522 + (int64) edi_530 *s 0x0208, 0xFF);
				edi_530.u2 = (word64) edi_530 + 1;
			} while (edi_530 < r14d_351);
		}
	}
	Eq_1342 eax_576;
	eax_576.u0 = tLoc03B8.t0024.u0;
	if (eax_576 != 0x00)
	{
		Eq_137 rdx_584;
		rdx_584.u0 = rcx->u0.t0000.u0;
		rcx->u0.t0008.u0 = (int32) eax_576;
		int32 ecx_611;
		for (ecx_611 = 0x00; ecx_611 < 0x20; ++ecx_611)
		{
			if (rdx_584 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l000000018000C5CB;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		}
	}
	if (fn000000018000D570(rcx, (uint64) tLoc03B8.dw0028, tLoc03B8.t002C.u0) != 0x00 && (fn000000018000E400(rcx, (uint64) tLoc03B8.dw0030, (tLoc03B8.t0034).u0) != 0x00 && (fn000000018000D9F0(rcx, tLoc03B8.dw0038, (tLoc03B8.t003C).u0) != 0x00 && fn000000018000B660(rcx, (tLoc03B8.t0044).u0) != 0x00)))
	{
l000000018000C398:
l000000018000C3A0:
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	}
l000000018000C5CB:
	goto l000000018000C5CE;
}

// 000000018000C5F0: Register word32 fn000000018000C5F0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_21493) r8)
// Called from:
//      fn000000018000C1B0
word32 fn000000018000C5F0(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_21493 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_8 = g_qw80030008 ^ fp - 0x0198;
	Eq_137 r10_11;
	r10_11.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01A0;
	if (r10_11 != 0x00 && (word64) edx + 4 <= ((rcx->u0).t000C).u0)
	{
		rcx->u0.t0008.u0 = (int32) ((word64) edx + 4);
		uint64 rdx_33 = (uint64) r10_11.u2[(uint64) edx];
		Eq_1342 edx_35 = (word32) rdx_33;
		word32 rdx_32_32_40 = SLICE(rdx_33, word32, 32);
		if ((&rcx->u0)[1] != 0x00)
			rdx_33 = SEQ(rdx_32_32_40, __bswap<word32>(edx_35));
		Eq_21668 tLoc0158;
		fn0000000180005050(rcx, (word32) rdx_33, &tLoc0158);
		Eq_137 r8_55;
		r8_55.u0 = rcx->u0.t0000.u0;
		int32 ecx_103 = 0x00;
		int32 edx_81;
		Eq_1342 eax_959;
		for (edx_81 = 0x00; edx_81 < 0x06; ++edx_81)
		{
			if (r8_55 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l000000018000CB1C;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			eax_959.u0 = rcx->u0.t0008.u0;
		}
		Eq_1342 edx_960;
		edx_960.u0 = rcx->u0.t000C.u0;
		do
		{
			if (r8_55 == 0x00)
				goto l000000018000CB1C;
			eax_959.u2 = (word64) eax_959 + 4;
			if (eax_959 > edx_960)
				goto l000000018000CB1C;
			rcx->u0.t0008.u0 = (int32) eax_959;
			++ecx_103;
		} while (ecx_103 < 0x13);
		if (r8_55 != 0x00 && (word64) eax_959 + 4 <= edx_960)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_129 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_157 = (word32) r10_129;
			Eq_1342 r11d_143 = (&rcx->u0)[1];
			Eq_1342 r13d_148 = r8_55.u2[(uint64) ((word32) r10_129 - 0x04)];
			if (r11d_143 != 0x00)
				r13d_148 = __bswap<word32>(r13d_148);
			if ((word32) r10_129 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_159 = (uint64) (r10d_157 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_159;
			Eq_1342 eax_168 = r8_55.u2[(uint64) ((word32) r10_159 - 0x04)];
			Eq_1342 dwLoc0178_966 = eax_168;
			if (r11d_143 != 0x00)
				dwLoc0178_966 = __bswap<word32>(eax_168);
			if ((word32) r10_159 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_190 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_196 = r8_55.u2[(uint64) ((word32) r10_190 - 0x04)];
			word32 r10d_213 = (word32) r10_190;
			Eq_1342 dwLoc0174_1008 = eax_196;
			if (r11d_143 != 0x00)
				dwLoc0174_1008 = __bswap<word32>(eax_196);
			if ((word32) r10_190 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_215 = (uint64) (r10d_213 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_215;
			Eq_1342 eax_224 = r8_55.u2[(uint64) ((word32) r10_215 - 0x04)];
			Eq_1342 dwLoc0170_1019 = eax_224;
			if (r11d_143 != 0x00)
				dwLoc0170_1019 = __bswap<word32>(eax_224);
			if ((word32) r10_215 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_246 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_252 = r8_55.u2[(uint64) ((word32) r10_246 - 0x04)];
			word32 r10d_269 = (word32) r10_246;
			Eq_1342 dwLoc016C_1029 = eax_252;
			if (r11d_143 != 0x00)
				dwLoc016C_1029 = __bswap<word32>(eax_252);
			if ((word32) r10_246 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_271 = (uint64) (r10d_269 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_271;
			Eq_1342 eax_280 = r8_55.u2[(uint64) ((word32) r10_271 - 0x04)];
			Eq_1342 dwLoc0168_1038 = eax_280;
			if (r11d_143 != 0x00)
				dwLoc0168_1038 = __bswap<word32>(eax_280);
			if ((word32) r10_271 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_302 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_308 = (word32) r10_302;
			if ((word32) r10_302 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_310 = (uint64) (r10d_308 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_310;
			Eq_1342 eax_318 = r8_55.u2[(uint64) ((word32) r10_310 - 0x04)];
			Eq_1342 dwLoc0164_1046 = eax_318;
			if (r11d_143 != 0x00)
				dwLoc0164_1046 = __bswap<word32>(eax_318);
			if ((word32) r10_310 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_346 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_379 = (word32) r10_346;
			Eq_1342 r12d_370 = r8_55.u2[(uint64) ((word32) r10_346 - 0x04)];
			if (r11d_143 != 0x00)
				r12d_370 = __bswap<word32>(r12d_370);
			if ((word32) r10_346 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_381 = (uint64) (r10d_379 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_381;
			if ((word32) r10_381 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_399 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_439 = (word32) r10_399;
			Eq_1342 r15d_424 = r8_55.u2[(uint64) ((word32) r10_399 - 0x04)];
			if (r11d_143 != 0x00)
				r15d_424 = __bswap<word32>(r15d_424);
			if ((word32) r10_399 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_441 = (uint64) (r10d_439 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_441;
			Eq_1342 r14d_470 = r8_55.u2[(uint64) ((word32) r10_441 - 0x04)];
			if (r11d_143 != 0x00)
				r14d_470 = __bswap<word32>(r14d_470);
			if ((word32) r10_441 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rcx_484 = (uint64) rcx->u0.t0008.u0;
			word32 ecx_490 = (word32) rcx_484;
			if ((word32) rcx_484 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rcx_492 = (uint64) (ecx_490 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rcx_492;
			if ((word32) rcx_492 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rcx_503 = (uint64) rcx->u0.t0008.u0;
			word32 ecx_509 = (word32) rcx_503;
			if ((word32) rcx_503 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rcx_511 = (uint64) (ecx_509 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rcx_511;
			if ((word32) rcx_511 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rcx_522 = (uint64) rcx->u0.t0008.u0;
			word32 ecx_528 = (word32) rcx_522;
			if ((word32) rcx_522 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rcx_530 = (uint64) (ecx_528 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rcx_530;
			if ((word32) rcx_530 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_547 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_589 = (word32) r10_547;
			Eq_1342 esi_574 = r8_55.u2[(uint64) ((word32) r10_547 - 0x04)];
			if (r11d_143 != 0x00)
				esi_574 = __bswap<word32>(esi_574);
			if ((word32) r10_547 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_591 = (uint64) (r10d_589 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_591;
			Eq_1342 edi_622 = r8_55.u2[(uint64) ((word32) r10_591 - 0x04)];
			if (r11d_143 != 0x00)
				edi_622 = __bswap<word32>(edi_622);
			if ((word32) r10_591 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rcx_636 = (uint64) rcx->u0.t0008.u0;
			word32 ecx_642 = (word32) rcx_636;
			if ((word32) rcx_636 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rcx_644 = (uint64) (ecx_642 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rcx_644;
			if ((word32) rcx_644 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rcx_655 = (uint64) rcx->u0.t0008.u0;
			word32 ecx_661 = (word32) rcx_655;
			if ((word32) rcx_655 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rcx_663 = (uint64) (ecx_661 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rcx_663;
			if ((word32) rcx_663 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_680 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_718 = (word32) r10_680;
			Eq_1342 ebx_709 = r8_55.u2[(uint64) ((word32) r10_680 - 0x04)];
			if (r11d_143 != 0x00)
				ebx_709 = __bswap<word32>(ebx_709);
			if ((word32) r10_680 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_720 = (uint64) (r10d_718 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_720;
			Eq_1342 r8d_734 = r8_55.u2[(uint64) ((word32) r10_720 - 0x04)];
			if (r11d_143 != 0x00)
				r8d_734 = __bswap<word32>(r8d_734);
			if ((word32) r10_720 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rcx_748 = (uint64) rcx->u0.t0008.u0;
			word32 ecx_754 = (word32) rcx_748;
			if ((word32) rcx_748 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rcx_756 = (uint64) (ecx_754 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rcx_756;
			if ((word32) rcx_756 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rcx_767 = (uint64) rcx->u0.t0008.u0;
			word32 ecx_773 = (word32) rcx_767;
			if ((word32) rcx_767 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rcx_775 = (uint64) (ecx_773 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rcx_775;
			if ((word32) rcx_775 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rcx_786 = (uint64) rcx->u0.t0008.u0;
			if ((word32) rcx_786 + 0x04 > edx_960)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) ((word32) rcx_786 + 0x04);
			r8->t001C.u0 = (int32) dwLoc0178_966;
			r8->t0020.u0 = (int32) dwLoc0174_1008;
			r8->t0024.u0 = (int32) dwLoc0170_1019;
			r8->t0028.u0 = (int32) dwLoc016C_1029;
			r8->t002C.u0 = (int32) dwLoc0168_1038;
			r8->t0030.u0 = (int32) dwLoc0164_1046;
			r8->t0018.u0 = (int32) r13d_148;
			r8->t0034.u0 = (int32) r12d_370;
			r8->t0038.u0 = (int32) r15d_424;
			r8->t003C.u0 = (int32) r14d_470;
			r8->t0040.u0 = (int32) esi_574;
			r8->t0044.u0 = (int32) edi_622;
			r8->t0048.u0 = (int32) ebx_709;
			r8->t004C.u0 = (int32) r8d_734;
			return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
		}
	}
l000000018000CB1C:
	return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
}

// 000000018000CB20: Register word32 fn000000018000CB20(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_21429) r8)
// Called from:
//      fn000000018000C1B0
word32 fn000000018000CB20(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_21429 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_8 = g_qw80030008 ^ fp - 0x0198;
	Eq_137 r9_11;
	r9_11.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01A0;
	if (r9_11 != 0x00 && (word64) edx + 4 <= ((rcx->u0).t000C).u0)
	{
		rcx->u0.t0008.u0 = (int32) ((word64) edx + 4);
		uint64 rdx_32 = (uint64) r9_11.u2[(uint64) edx];
		Eq_1342 edx_34 = (word32) rdx_32;
		word32 rdx_32_32_39 = SLICE(rdx_32, word32, 32);
		if ((&rcx->u0)[1] != 0x00)
			rdx_32 = SEQ(rdx_32_32_39, __bswap<word32>(edx_34));
		Eq_22474 tLoc0158;
		fn0000000180005050(rcx, (word32) rdx_32, &tLoc0158);
		Eq_137 r9_53;
		r9_53.u0 = rcx->u0.t0000.u0;
		int32 edx_101 = 0x00;
		int32 r8d_79;
		Eq_1342 eax_938;
		for (r8d_79 = 0x00; r8d_79 < 0x06; ++r8d_79)
		{
			if (r9_53 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l000000018000D028;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			eax_938.u0 = rcx->u0.t0008.u0;
		}
		Eq_1342 r8d_939;
		r8d_939.u0 = rcx->u0.t000C.u0;
		do
		{
			if (r9_53 == 0x00)
				goto l000000018000D028;
			eax_938.u2 = (word64) eax_938 + 4;
			if (eax_938 > r8d_939)
				goto l000000018000D028;
			rcx->u0.t0008.u0 = (int32) eax_938;
			++edx_101;
		} while (edx_101 < 0x13);
		if (r9_53 != 0x00 && (word64) eax_938 + 4 <= r8d_939)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_127 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_155 = (word32) r10_127;
			Eq_1342 r11d_141 = (&rcx->u0)[1];
			Eq_1342 r13d_146 = r9_53.u2[(uint64) ((word32) r10_127 - 0x04)];
			if (r11d_141 != 0x00)
				r13d_146 = __bswap<word32>(r13d_146);
			if ((word32) r10_127 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_157 = (uint64) (r10d_155 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_157;
			Eq_1342 eax_166 = r9_53.u2[(uint64) ((word32) r10_157 - 0x04)];
			Eq_1342 dwLoc0178_945 = eax_166;
			if (r11d_141 != 0x00)
				dwLoc0178_945 = __bswap<word32>(eax_166);
			if ((word32) r10_157 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_188 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_194 = r9_53.u2[(uint64) ((word32) r10_188 - 0x04)];
			word32 r10d_211 = (word32) r10_188;
			Eq_1342 dwLoc0174_947 = eax_194;
			if (r11d_141 != 0x00)
				dwLoc0174_947 = __bswap<word32>(eax_194);
			if ((word32) r10_188 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_213 = (uint64) (r10d_211 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_213;
			Eq_1342 eax_222 = r9_53.u2[(uint64) ((word32) r10_213 - 0x04)];
			Eq_1342 dwLoc0170_949 = eax_222;
			if (r11d_141 != 0x00)
				dwLoc0170_949 = __bswap<word32>(eax_222);
			if ((word32) r10_213 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_244 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_250 = r9_53.u2[(uint64) ((word32) r10_244 - 0x04)];
			word32 r10d_267 = (word32) r10_244;
			Eq_1342 dwLoc016C_1008 = eax_250;
			if (r11d_141 != 0x00)
				dwLoc016C_1008 = __bswap<word32>(eax_250);
			if ((word32) r10_244 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_269 = (uint64) (r10d_267 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_269;
			Eq_1342 eax_278 = r9_53.u2[(uint64) ((word32) r10_269 - 0x04)];
			Eq_1342 dwLoc0168_1017 = eax_278;
			if (r11d_141 != 0x00)
				dwLoc0168_1017 = __bswap<word32>(eax_278);
			if ((word32) r10_269 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_300 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_306 = (word32) r10_300;
			if ((word32) r10_300 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_308 = (uint64) (r10d_306 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_308;
			Eq_1342 eax_316 = r9_53.u2[(uint64) ((word32) r10_308 - 0x04)];
			Eq_1342 dwLoc0164_1025 = eax_316;
			if (r11d_141 != 0x00)
				dwLoc0164_1025 = __bswap<word32>(eax_316);
			if ((word32) r10_308 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_344 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_377 = (word32) r10_344;
			Eq_1342 r12d_368 = r9_53.u2[(uint64) ((word32) r10_344 - 0x04)];
			if (r11d_141 != 0x00)
				r12d_368 = __bswap<word32>(r12d_368);
			if ((word32) r10_344 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_379 = (uint64) (r10d_377 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_379;
			if ((word32) r10_379 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_397 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_437 = (word32) r10_397;
			Eq_1342 r15d_422 = r9_53.u2[(uint64) ((word32) r10_397 - 0x04)];
			if (r11d_141 != 0x00)
				r15d_422 = __bswap<word32>(r15d_422);
			if ((word32) r10_397 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_439 = (uint64) (r10d_437 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_439;
			Eq_1342 r14d_468 = r9_53.u2[(uint64) ((word32) r10_439 - 0x04)];
			if (r11d_141 != 0x00)
				r14d_468 = __bswap<word32>(r14d_468);
			if ((word32) r10_439 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rdx_482 = (uint64) rcx->u0.t0008.u0;
			word32 edx_488 = (word32) rdx_482;
			if ((word32) rdx_482 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rdx_490 = (uint64) (edx_488 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rdx_490;
			if ((word32) rdx_490 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rdx_501 = (uint64) rcx->u0.t0008.u0;
			word32 edx_507 = (word32) rdx_501;
			if ((word32) rdx_501 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rdx_509 = (uint64) (edx_507 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rdx_509;
			if ((word32) rdx_509 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rdx_520 = (uint64) rcx->u0.t0008.u0;
			word32 edx_526 = (word32) rdx_520;
			if ((word32) rdx_520 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rdx_528 = (uint64) (edx_526 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rdx_528;
			if ((word32) rdx_528 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rdx_539 = (uint64) rcx->u0.t0008.u0;
			word32 edx_545 = (word32) rdx_539;
			if ((word32) rdx_539 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rdx_547 = (uint64) (edx_545 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rdx_547;
			if ((word32) rdx_547 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_564 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_606 = (word32) r10_564;
			Eq_1342 esi_591 = r9_53.u2[(uint64) ((word32) r10_564 - 0x04)];
			if (r11d_141 != 0x00)
				esi_591 = __bswap<word32>(esi_591);
			if ((word32) r10_564 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_608 = (uint64) (r10d_606 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_608;
			Eq_1342 edi_639 = r9_53.u2[(uint64) ((word32) r10_608 - 0x04)];
			if (r11d_141 != 0x00)
				edi_639 = __bswap<word32>(edi_639);
			if ((word32) r10_608 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rdx_653 = (uint64) rcx->u0.t0008.u0;
			word32 edx_659 = (word32) rdx_653;
			if ((word32) rdx_653 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rdx_661 = (uint64) (edx_659 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rdx_661;
			if ((word32) rdx_661 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rdx_672 = (uint64) rcx->u0.t0008.u0;
			word32 edx_678 = (word32) rdx_672;
			if ((word32) rdx_672 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 rdx_680 = (uint64) (edx_678 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) rdx_680;
			if ((word32) rdx_680 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_697 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_735 = (word32) r10_697;
			Eq_1342 ebx_726 = r9_53.u2[(uint64) ((word32) r10_697 - 0x04)];
			if (r11d_141 != 0x00)
				ebx_726 = __bswap<word32>(ebx_726);
			if ((word32) r10_697 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			uint64 r10_737 = (uint64) (r10d_735 + 0x04);
			rcx->u0.t0008.u0 = (int32) (word32) r10_737;
			Eq_1342 edx_751 = r9_53.u2[(uint64) ((word32) r10_737 - 0x04)];
			if (r11d_141 != 0x00)
				edx_751 = __bswap<word32>(edx_751);
			if ((word32) r10_737 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r9_765 = (uint64) rcx->u0.t0008.u0;
			if ((word32) r9_765 + 0x04 > r8d_939)
				return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
			rcx->u0.t0008.u0 = (int32) ((word32) r9_765 + 0x04);
			r8->t001C.u0 = (int32) dwLoc0178_945;
			r8->t0020.u0 = (int32) dwLoc0174_947;
			r8->t0024.u0 = (int32) dwLoc0170_949;
			r8->t0028.u0 = (int32) dwLoc016C_1008;
			r8->t002C.u0 = (int32) dwLoc0168_1017;
			r8->t0030.u0 = (int32) dwLoc0164_1025;
			r8->t0018.u0 = (int32) r13d_146;
			r8->t0034.u0 = (int32) r12d_368;
			r8->t0038.u0 = (int32) r15d_422;
			r8->t003C.u0 = (int32) r14d_468;
			r8->t0040.u0 = (int32) esi_591;
			r8->t0044.u0 = (int32) edi_639;
			r8->t0048.u0 = (int32) ebx_726;
			r8->t004C.u0 = (int32) edx_751;
			return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
		}
	}
l000000018000D028:
	return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
}

// 000000018000D030: Register word32 fn000000018000D030(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_21329) r8)
// Called from:
//      fn000000018000C1B0
word32 fn000000018000D030(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_21329 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_8 = g_qw80030008 ^ fp - 0x0198;
	Eq_137 r9_11;
	r9_11.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01A0;
	if (r9_11 != 0x00 && (word64) edx + 4 <= ((rcx->u0).t000C).u0)
	{
		rcx->u0.t0008.u0 = (int32) ((word64) edx + 4);
		uint64 rdx_32 = (uint64) r9_11.u2[(uint64) edx];
		Eq_1342 edx_34 = (word32) rdx_32;
		word32 rdx_32_32_39 = SLICE(rdx_32, word32, 32);
		if ((&rcx->u0)[1] != 0x00)
			rdx_32 = SEQ(rdx_32_32_39, __bswap<word32>(edx_34));
		Eq_23249 tLoc0158;
		fn0000000180005050(rcx, (word32) rdx_32, &tLoc0158);
		Eq_137 r9_53;
		r9_53.u0 = rcx->u0.t0000.u0;
		int32 edx_101 = 0x00;
		int32 r8d_79;
		Eq_1342 eax_94;
		for (r8d_79 = 0x00; r8d_79 < 0x06; ++r8d_79)
		{
			if (r9_53 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l000000018000D55D;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			eax_94.u0 = rcx->u0.t0008.u0;
		}
		Eq_1342 r8d_958;
		r8d_958.u0 = rcx->u0.t000C.u0;
		do
		{
			if (r9_53 == 0x00)
				goto l000000018000D55D;
			eax_94.u2 = (word64) eax_94 + 4;
			if (eax_94 > r8d_958)
				goto l000000018000D55D;
			rcx->u0.t0008.u0 = (int32) eax_94;
			++edx_101;
		} while (edx_101 < 0x0A);
		if (r9_53 != 0x00 && (word64) eax_94 + 4 <= r8d_958)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 rdx_121 = (uint64) rcx->u0.t0008.u0;
			word32 edx_127 = (word32) rdx_121;
			if ((word32) rdx_121 + 0x04 <= r8d_958)
			{
				uint64 rdx_129 = (uint64) (edx_127 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_129;
				if ((word32) rdx_129 + 0x04 <= r8d_958)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_146 = (uint64) rcx->u0.t0008.u0;
					word32 r10d_174 = (word32) r10_146;
					Eq_1342 r11d_160 = (&rcx->u0)[1];
					Eq_1342 r13d_165 = r9_53.u2[(uint64) ((word32) r10_146 - 0x04)];
					if (r11d_160 != 0x00)
						r13d_165 = __bswap<word32>(r13d_165);
					if ((word32) r10_146 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 r10_176 = (uint64) (r10d_174 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_176;
					Eq_1342 eax_185 = r9_53.u2[(uint64) ((word32) r10_176 - 0x04)];
					Eq_1342 dwLoc0178_964 = eax_185;
					if (r11d_160 != 0x00)
						dwLoc0178_964 = __bswap<word32>(eax_185);
					if ((word32) r10_176 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_207 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_213 = r9_53.u2[(uint64) ((word32) r10_207 - 0x04)];
					word32 r10d_230 = (word32) r10_207;
					Eq_1342 dwLoc0174_1006 = eax_213;
					if (r11d_160 != 0x00)
						dwLoc0174_1006 = __bswap<word32>(eax_213);
					if ((word32) r10_207 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 r10_232 = (uint64) (r10d_230 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_232;
					Eq_1342 eax_241 = r9_53.u2[(uint64) ((word32) r10_232 - 0x04)];
					Eq_1342 dwLoc0170_1017 = eax_241;
					if (r11d_160 != 0x00)
						dwLoc0170_1017 = __bswap<word32>(eax_241);
					if ((word32) r10_232 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_263 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 eax_269 = r9_53.u2[(uint64) ((word32) r10_263 - 0x04)];
					word32 r10d_286 = (word32) r10_263;
					Eq_1342 dwLoc016C_1027 = eax_269;
					if (r11d_160 != 0x00)
						dwLoc016C_1027 = __bswap<word32>(eax_269);
					if ((word32) r10_263 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 r10_288 = (uint64) (r10d_286 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_288;
					Eq_1342 eax_297 = r9_53.u2[(uint64) ((word32) r10_288 - 0x04)];
					Eq_1342 dwLoc0168_1036 = eax_297;
					if (r11d_160 != 0x00)
						dwLoc0168_1036 = __bswap<word32>(eax_297);
					if ((word32) r10_288 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_319 = (uint64) rcx->u0.t0008.u0;
					word32 r10d_325 = (word32) r10_319;
					if ((word32) r10_319 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 r10_327 = (uint64) (r10d_325 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_327;
					Eq_1342 eax_335 = r9_53.u2[(uint64) ((word32) r10_327 - 0x04)];
					Eq_1342 dwLoc0164_1044 = eax_335;
					if (r11d_160 != 0x00)
						dwLoc0164_1044 = __bswap<word32>(eax_335);
					if ((word32) r10_327 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_363 = (uint64) rcx->u0.t0008.u0;
					word32 r10d_396 = (word32) r10_363;
					Eq_1342 r12d_387 = r9_53.u2[(uint64) ((word32) r10_363 - 0x04)];
					if (r11d_160 != 0x00)
						r12d_387 = __bswap<word32>(r12d_387);
					if ((word32) r10_363 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 r10_398 = (uint64) (r10d_396 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_398;
					if ((word32) r10_398 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_416 = (uint64) rcx->u0.t0008.u0;
					word32 r10d_456 = (word32) r10_416;
					Eq_1342 r15d_441 = r9_53.u2[(uint64) ((word32) r10_416 - 0x04)];
					if (r11d_160 != 0x00)
						r15d_441 = __bswap<word32>(r15d_441);
					if ((word32) r10_416 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 r10_458 = (uint64) (r10d_456 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_458;
					Eq_1342 r14d_487 = r9_53.u2[(uint64) ((word32) r10_458 - 0x04)];
					if (r11d_160 != 0x00)
						r14d_487 = __bswap<word32>(r14d_487);
					if ((word32) r10_458 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_501 = (uint64) rcx->u0.t0008.u0;
					word32 edx_507 = (word32) rdx_501;
					if ((word32) rdx_501 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 rdx_509 = (uint64) (edx_507 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_509;
					if ((word32) rdx_509 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_520 = (uint64) rcx->u0.t0008.u0;
					word32 edx_526 = (word32) rdx_520;
					if ((word32) rdx_520 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 rdx_528 = (uint64) (edx_526 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_528;
					if ((word32) rdx_528 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_539 = (uint64) rcx->u0.t0008.u0;
					word32 edx_545 = (word32) rdx_539;
					if ((word32) rdx_539 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 rdx_547 = (uint64) (edx_545 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_547;
					if ((word32) rdx_547 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_558 = (uint64) rcx->u0.t0008.u0;
					word32 edx_564 = (word32) rdx_558;
					if ((word32) rdx_558 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 rdx_566 = (uint64) (edx_564 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_566;
					if ((word32) rdx_566 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_583 = (uint64) rcx->u0.t0008.u0;
					word32 r10d_625 = (word32) r10_583;
					Eq_1342 esi_610 = r9_53.u2[(uint64) ((word32) r10_583 - 0x04)];
					if (r11d_160 != 0x00)
						esi_610 = __bswap<word32>(esi_610);
					if ((word32) r10_583 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 r10_627 = (uint64) (r10d_625 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_627;
					Eq_1342 edi_658 = r9_53.u2[(uint64) ((word32) r10_627 - 0x04)];
					if (r11d_160 != 0x00)
						edi_658 = __bswap<word32>(edi_658);
					if ((word32) r10_627 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_672 = (uint64) rcx->u0.t0008.u0;
					word32 edx_678 = (word32) rdx_672;
					if ((word32) rdx_672 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 rdx_680 = (uint64) (edx_678 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_680;
					if ((word32) rdx_680 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_691 = (uint64) rcx->u0.t0008.u0;
					word32 edx_697 = (word32) rdx_691;
					if ((word32) rdx_691 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 rdx_699 = (uint64) (edx_697 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) rdx_699;
					if ((word32) rdx_699 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_716 = (uint64) rcx->u0.t0008.u0;
					word32 r10d_754 = (word32) r10_716;
					Eq_1342 ebx_745 = r9_53.u2[(uint64) ((word32) r10_716 - 0x04)];
					if (r11d_160 != 0x00)
						ebx_745 = __bswap<word32>(ebx_745);
					if ((word32) r10_716 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					uint64 r10_756 = (uint64) (r10d_754 + 0x04);
					rcx->u0.t0008.u0 = (int32) (word32) r10_756;
					Eq_1342 edx_770 = r9_53.u2[(uint64) ((word32) r10_756 - 0x04)];
					if (r11d_160 != 0x00)
						edx_770 = __bswap<word32>(edx_770);
					if ((word32) r10_756 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_784 = (uint64) rcx->u0.t0008.u0;
					if ((word32) r9_784 + 0x04 > r8d_958)
						return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
					rcx->u0.t0008.u0 = (int32) ((word32) r9_784 + 0x04);
					r8->t001C.u0 = (int32) dwLoc0178_964;
					r8->t0020.u0 = (int32) dwLoc0174_1006;
					r8->t0024.u0 = (int32) dwLoc0170_1017;
					r8->t0028.u0 = (int32) dwLoc016C_1027;
					r8->t002C.u0 = (int32) dwLoc0168_1036;
					r8->t0030.u0 = (int32) dwLoc0164_1044;
					r8->t0018.u0 = (int32) r13d_165;
					r8->t0034.u0 = (int32) r12d_387;
					r8->t0038.u0 = (int32) r15d_441;
					r8->t003C.u0 = (int32) r14d_487;
					r8->t0040.u0 = (int32) esi_610;
					r8->t0044.u0 = (int32) edi_658;
					r8->t0048.u0 = (int32) ebx_745;
					r8->t004C.u0 = (int32) edx_770;
					return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
				}
			}
		}
	}
l000000018000D55D:
	return (word32) fn0000000180023580(rax_8 ^ fp - 0x0198, qwLoc01A0);
}

// 000000018000D570: Register word32 fn000000018000D570(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn000000018000C1B0
//      fn000000018000FBF0
word32 fn000000018000D570(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	ui64 rax_14 = g_qw80030008 ^ fp - 0x04B8;
	if (r8d != 0x00 && edx != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (fn00000001800020D0(&g_t800306F0, (word32) rdx) != 0x00)
		{
			up32 ebp_317 = 0x00;
			Eq_24318 tLoc0488;
			Eq_24322 tLoc0378;
			Eq_24326 tLoc0268;
			Eq_24330 tLoc0158;
			if (edx != 0x00)
			{
				do
				{
					memset(&tLoc0488, 0, 0x0104);
					Eq_137 rdx_81;
					rdx_81.u0 = rcx->u0.t0000.u0;
					if (rdx_81 == 0x00)
					{
l000000018000D99A:
						goto l000000018000D99C;
					}
					Eq_1342 r8d_94;
					r8d_94.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_100 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r10d_107 = (&rcx->u0)[1];
					Eq_1342 r11d_112 = rdx_81.u2[(uint64) ((word32) r9_100 - 0x04)];
					if (r10d_107 != 0x00)
						r11d_112 = __bswap<word32>(r11d_112);
					if ((word32) r9_100 + 0x04 > r8d_94)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_126 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_137 = rdx_81.u2[(uint64) ((word32) r9_126 - 0x04)];
					if (r10d_107 != 0x00)
						esi_137 = __bswap<word32>(esi_137);
					if ((word32) r9_126 + 0x04 > r8d_94)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_151 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_162 = rdx_81.u2[(uint64) ((word32) r9_151 - 0x04)];
					if (r10d_107 != 0x00)
						edi_162 = __bswap<word32>(edi_162);
					if ((word32) r9_151 + 0x04 > r8d_94)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r14_176 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_187 = rdx_81.u2[(uint64) ((word32) r14_176 - 0x04)];
					if (r10d_107 != 0x00)
						r9d_187 = __bswap<word32>(r9d_187);
					if ((word32) r14_176 + 0x04 > r8d_94)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_94)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, r11d_112, &tLoc0488);
					fn0000000180005050(rcx, esi_137, &tLoc0378);
					fn0000000180005050(rcx, edi_162, &tLoc0268);
					fn0000000180005050(rcx, r9d_187, &tLoc0158);
					struct Eq_1710 * r9_308 = g_ptr80030710;
					if (r9_308 != null)
					{
						union Eq_24340 * rdx_321 = &tLoc0488;
						byte * r8_322 = (byte *) (&(r9_308->a0028 + 3)->t0000.u0 + (int64) ebp_317 *64 78);
						char al_329;
						do
						{
							al_329 = rdx_321->u0;
							*r8_322 = al_329;
							rdx_321 = (union Eq_24340 *) ((char *) rdx_321 + 1);
							++r8_322;
						} while (al_329 != 0x00);
					}
					++ebp_317;
				} while (ebp_317 < edx);
			}
			rcx->u0.t0008.u0 = (int32) r8d;
			up32 r14d_381 = 0x00;
			if (edx != 0x00)
			{
				do
				{
					word32 r12d_527 = 0x00;
					Eq_137 rdx_380;
					rdx_380.u0 = rcx->u0.t0000.u0;
					struct Eq_17266 * rax_384 = (struct Eq_17266 *) ((char *) &g_ptr80030710->tFFFFFFF8 + ((int64) r14d_381 *s 0x0138 + 8));
					if (rdx_380 == 0x00)
						goto l000000018000D99A;
					Eq_1342 r8d_399;
					r8d_399.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_399)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_405 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r10d_412 = (&rcx->u0)[1];
					Eq_1342 r11d_417 = rdx_380.u2[(uint64) ((word32) r9_405 - 0x04)];
					if (r10d_412 != 0x00)
						r11d_417 = __bswap<word32>(r11d_417);
					if ((word32) r9_405 + 0x04 > r8d_399)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_431 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r15d_442 = rdx_380.u2[(uint64) ((word32) r9_431 - 0x04)];
					if (r10d_412 != 0x00)
						r15d_442 = __bswap<word32>(r15d_442);
					if ((word32) r9_431 + 0x04 > r8d_399)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_456 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 ebp_467 = rdx_380.u2[(uint64) ((word32) r9_456 - 0x04)];
					if (r10d_412 != 0x00)
						ebp_467 = __bswap<word32>(ebp_467);
					if ((word32) r9_456 + 0x04 > r8d_399)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_481 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 esi_492 = rdx_380.u2[(uint64) ((word32) r9_481 - 0x04)];
					if (r10d_412 != 0x00)
						esi_492 = __bswap<word32>(esi_492);
					if ((word32) r9_481 + 0x04 > r8d_399)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_506 = (uint64) rcx->u0.t0008.u0;
					word32 r9d_526 = (word32) r9_506;
					Eq_1342 edi_517 = rdx_380.u2[(uint64) ((word32) r9_506 - 0x04)];
					if (r10d_412 != 0x00)
						edi_517 = __bswap<word32>(edi_517);
					Eq_1342 eax_529;
					eax_529.u0 = rcx->u0.t0008.u0;
					if (g_dw800306F4 != 0x00)
						r12d_527 = r9d_526;
					if ((word64) eax_529 + 4 > r8d_399)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r13_542 = (uint64) rcx->u0.t0008.u0;
					uint64 r9_548 = (uint64) rdx_380.u2[(uint64) ((word32) r13_542 - 0x04)];
					Eq_1342 r9d_555 = (word32) r9_548;
					word32 r9_32_32_708 = SLICE(r9_548, word32, 32);
					if (r10d_412 != 0x00)
						r9d_555 = __bswap<word32>(r9d_555);
					if ((word32) r13_542 + 0x04 > r8d_399)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_399)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_399)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, r11d_417, &tLoc0158);
					fn0000000180005050(rcx, r15d_442, &tLoc0268);
					fn0000000180005050(rcx, ebp_467, &tLoc0378);
					fn0000000180005050(rcx, esi_492, &tLoc0488);
					uint64 r9_694 = SEQ(r9_32_32_708, r9d_555);
					if (g_dw800306F4 != 0x00)
					{
						r9_694 = SEQ(r9_32_32_708, r9d_555);
						if (r9d_555 != 0x00)
						{
							r9_694 = SEQ(r9_32_32_708, r9d_555);
							if (edi_517 != 0x00)
								r9_694 = (uint64) ((word64) r9d_555 + r12d_527);
						}
					}
					Eq_1342 esi_741;
					esi_741.u0 = rcx->u0.t0008.u0;
					if (fn000000018000A5E0(rcx, rax_384, edi_517, (word32) r9_694) == 0x00)
						goto l000000018000D99A;
					rcx->u0.t0008.u0 = (int32) esi_741;
					++r14d_381;
				} while (r14d_381 < edx);
			}
			int32 r12d_774;
			Eq_137 rcx_750;
			rcx_750.u0 = rcx->u0.t0000.u0;
			for (r12d_774 = 0x00; r12d_774 < 0x20; ++r12d_774)
			{
				if (rcx_750 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
					goto l000000018000D99A;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			}
l000000018000D99C:
		}
	}
	word64 qwLoc04C0;
	return (word32) fn0000000180023580(rax_14 ^ fp - 0x04B8, qwLoc04C0);
}

// 000000018000D9F0: Register word32 fn000000018000D9F0(Register (ptr64 Eq_3676) rcx, Register up32 edx, Register Eq_1342 r8d)
// Called from:
//      fn000000018000C1B0
word32 fn000000018000D9F0(union Eq_3676 * rcx, up32 edx, Eq_1342 r8d)
{
	ptr64 fp;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_14 = g_qw80030008 ^ fp - 344;
	word64 qwLoc0160;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		uint64 r9_115 = 0x00;
		Eq_24723 tLoc0138;
		if (edx != 0x00)
		{
			do
			{
				word32 r9d_113 = (word32) r9_115;
				Eq_137 rdx_39;
				rdx_39.u0 = rcx->u0.t0000.u0;
				if (rdx_39 == 0x00)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				Eq_1342 r8d_52;
				r8d_52.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_69 = (uint64) rcx->u0.t0008.u0;
				uint64 rdx_101 = (uint64) rdx_39.u2[(uint64) ((word32) r10_69 - 0x04)];
				Eq_1342 edx_75 = (word32) rdx_101;
				word32 rdx_32_32_100 = SLICE(rdx_101, word32, 32);
				if ((&rcx->u0)[1] != 0x00)
					rdx_101 = SEQ(rdx_32_32_100, __bswap<word32>(edx_75));
				if ((word32) r10_69 + 0x04 > r8d_52)
					return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				fn0000000180005050(rcx, (word32) rdx_101, &tLoc0138);
				r9_115 = (uint64) (r9d_113 + 0x01);
			} while ((word32) r9_115 < edx);
		}
		rcx->u0.t0008.u0 = (int32) r8d;
		up32 ebp_335 = 0x00;
		if (edx != 0x00)
		{
			do
			{
				memset(&tLoc0138, 0, 0x0104);
				Eq_137 r11_153;
				r11_153.u0 = rcx->u0.t0000.u0;
				if (r11_153 == 0x00)
				{
l000000018000DC02:
					goto l000000018000DBD6;
				}
				Eq_1342 r8d_166;
				r8d_166.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r8d_166)
					goto l000000018000DC02;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				if (rcx->u0.t0008.u0 + 0x04 > r8d_166)
					goto l000000018000DC02;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_182 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r10d_189 = (&rcx->u0)[1];
				Eq_1342 edx_194 = r11_153.u2[(uint64) ((word32) r9_182 - 0x04)];
				if (r10d_189 != 0x00)
					edx_194 = __bswap<word32>(edx_194);
				if ((word32) r9_182 + 0x04 > r8d_166)
					goto l000000018000DC02;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r9_208 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 r9d_276 = (word32) r9_208;
				Eq_1342 esi_219 = r11_153.u2[(uint64) ((word32) r9_208 - 0x04)];
				if (r10d_189 != 0x00)
					esi_219 = __bswap<word32>(esi_219);
				if (edx_194 > 100)
				{
					rcx->u0.t0008.u0 = (int32) edx_194;
					Eq_24827 rdx_228;
					rdx_228.u1 = 0x00;
					byte al_257;
					do
					{
						if (rcx->u0.t0008.u0 + 0x01 > r8d_166)
							goto l000000018000DB9A;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
						al_257 = r11_153.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
						if (rdx_228 < 0x0104)
							*(&tLoc0138 + rdx_228) = (word64) al_257;
						rdx_228 = (word64) rdx_228 + 1;
					} while (al_257 != 0x00);
					if (rdx_228 < 0x0104)
						*(&tLoc0138 + rdx_228) = (word64) al_257;
					else
						tLoc0138.b0103 = 0x00;
					rcx->u0.t0008.u0 = (int32) r9d_276;
				}
l000000018000DB9A:
				if (strstr(&tLoc0138, "-skin") != null)
				{
					Eq_1342 edi_329;
					edi_329.u0 = rcx->u0.t0008.u0;
					if (fn000000018000DC10(rcx, esi_219) == 0x00)
						goto l000000018000DC02;
					rcx->u0.t0008.u0 = (int32) edi_329;
				}
				++ebp_335;
			} while (ebp_335 < edx);
		}
l000000018000DBD6:
	}
	return (word32) fn0000000180023580(rax_14 ^ fp - 344, qwLoc0160);
}

// 000000018000DC10: Register word32 fn000000018000DC10(Register (ptr64 Eq_3676) rcx, Register Eq_1342 r8d)
// Called from:
//      fn000000018000D9F0
word32 fn000000018000DC10(union Eq_3676 * rcx, Eq_1342 r8d)
{
	word64 r8;
	r8d = (word32) r8;
	if (r8d == 0x00)
		return (word64) r8d + 1;
	Eq_137 r9_14;
	r9_14.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) r8d;
	if (r9_14 == 0x00)
		return 0x00;
	Eq_1342 edx_27;
	edx_27.u0 = rcx->u0.t000C.u0;
	if ((word64) r8d + 4 > edx_27)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) ((word64) r8d + 4);
	if ((word64) r8d + 6 > edx_27)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
	uint64 r10_39 = (uint64) rcx->u0.t0008.u0;
	Eq_1342 r11d_46 = (&rcx->u0)[1];
	word16 r8w_171 = (word16) r9_14.u2[(uint64) ((word32) r10_39 - 0x02)];
	if (r11d_46 != 0x00)
		r8w_171 = __rol<word16,byte>(r8w_171, 0x08);
	if ((word32) r10_39 + 0x02 > edx_27)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
	uint64 r10_75 = (uint64) rcx->u0.t0008.u0;
	word16 ax_86 = (word16) r9_14.u2[(uint64) ((word32) r10_75 - 0x02)];
	if (r11d_46 != 0x00)
		ax_86 = __rol<word16,byte>(ax_86, 0x08);
	if (ax_86 != 0x00 || g_t800306F0.u0 <= 844)
	{
		if (fn000000018000DD30(rcx) != 0x00)
			return 0x01;
		return 0x00;
	}
	else
	{
		if ((word32) r10_75 + 0x04 > edx_27)
			return 0x00;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 r10_132 = (uint64) rcx->u0.t0008.u0;
		uint64 r9_137 = (uint64) r9_14.u2[(uint64) ((word32) r10_132 - 0x04)];
		Eq_1342 r9d_143 = (word32) r9_137;
		word32 r9_32_32_175 = SLICE(r9_137, word32, 32);
		if (r11d_46 != 0x00)
			r9_137 = SEQ(r9_32_32_175, __bswap<word32>(r9d_143));
		if ((word32) r10_132 + 0x04 > edx_27)
			return 0x00;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		if (rcx->u0.t0008.u0 + 0x04 > edx_27)
			return 0x00;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		Eq_1342 edi_209;
		edi_209.u0 = rcx->u0.t0008.u0;
		if (fn000000018000DE40(rcx, (word32) r8w_171, (word32) r9_137) == 0x00)
			return 0x00;
		rcx->u0.t0008.u0 = (int32) edi_209;
		return 0x01;
	}
}

// 000000018000DD30: Register word32 fn000000018000DD30(Register (ptr64 Eq_3676) rcx)
// Called from:
//      fn000000018000DC10
word32 fn000000018000DD30(union Eq_3676 * rcx)
{
	word128 xmm1_10 = g_ow80028E70;
	Eq_25088 tLoc48;
	tLoc48.ow0000 = g_ow80028E60;
	tLoc48.ow0010 = xmm1_10;
	if (fn000000018001D8D0(rcx, &tLoc48) == 0x00 || ((rcx->u0).t0000).u0 == 0x00)
		return 0x00;
	Eq_1342 ecx_46;
	ecx_46.u0 = rcx->u0.t000C.u0;
	Eq_1342 eax_45 = rcx->u0.t0008.u0 + 0x04;
	if (eax_45 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) eax_45;
	if ((word64) eax_45 + 4 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_46)
		return 0x00;
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	return 0x01;
}

// 000000018000DE40: Register word32 fn000000018000DE40(Register (ptr64 Eq_3676) rcx, Register up32 r8d, Register Eq_1342 r9d)
// Called from:
//      fn000000018000DC10
word32 fn000000018000DE40(union Eq_3676 * rcx, up32 r8d, Eq_1342 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	ui64 rax_12 = g_qw80030008 ^ fp - 488;
	word64 qwLoc01F0;
	if (r9d == 0x00)
		return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
	rcx->u0.t0008.u0 = (int32) r9d;
	up32 ecx_1200 = 0x00;
	if (r8d != 0x00)
	{
		Eq_137 rdx_34;
		rdx_34.u0 = rcx->u0.t0000.u0;
		do
		{
			if (rdx_34 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l000000018000E3ED;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			++ecx_1200;
		} while (ecx_1200 < r8d);
	}
	Eq_137 rdx_61;
	rdx_61.u0 = rcx->u0.t0000.u0;
	if (rdx_61 != 0x00)
	{
		Eq_1342 r8d_74;
		r8d_74.u0 = rcx->u0.t000C.u0;
		if (rcx->u0.t0008.u0 + 0x04 <= r8d_74)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_86 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_95 = (word32) r10_86;
			Eq_1342 r9d_101 = (&rcx->u0)[1];
			Eq_1342 r14d_106 = rdx_61.u2[(uint64) ((word32) r10_86 - 0x04)];
			if (r9d_101 != 0x00)
				r14d_106 = __bswap<word32>(r14d_106);
			if ((word32) r10_86 + 0x04 > r8d_74)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 esi_144 = rdx_61.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
			if (r9d_101 != 0x00)
				esi_144 = __bswap<word32>(esi_144);
			word128 xmm1_150 = g_ow80028E70;
			Eq_25382 tLoc0188;
			tLoc0188.ow0000 = g_ow80028E60;
			tLoc0188.ow0010 = xmm1_150;
			if (fn000000018001D8D0(rcx, &tLoc0188) == 0x00)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			Eq_137 r8_180;
			r8_180.u0 = rcx->u0.t0000.u0;
			if (r8_180 == 0x00)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			Eq_1342 edx_193;
			edx_193.u0 = rcx->u0.t000C.u0;
			if (rcx->u0.t0008.u0 + 0x04 > edx_193)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			if (rcx->u0.t0008.u0 + 0x04 > edx_193)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_215 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_224 = (word32) r10_215;
			Eq_1342 r9d_230 = (&rcx->u0)[1];
			Eq_1342 r12d_235 = r8_180.u2[(uint64) ((word32) r10_215 - 0x04)];
			if (r9d_230 != 0x00)
				r12d_235 = __bswap<word32>(r12d_235);
			if ((word32) r10_215 + 0x04 > edx_193)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_249 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 r11d_260 = r8_180.u2[(uint64) ((word32) r10_249 - 0x04)];
			if (r9d_230 != 0x00)
				r11d_260 = __bswap<word32>(r11d_260);
			if ((word32) r10_249 + 0x04 > edx_193)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_280 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_291 = (word32) r10_280;
			Eq_1342 r15d_303 = r8_180.u2[(uint64) ((word32) r10_280 - 0x04)];
			if (r9d_230 != 0x00)
				r15d_303 = __bswap<word32>(r15d_303);
			if ((word32) r10_280 + 0x04 > edx_193)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_317 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_323 = r8_180.u2[(uint64) ((word32) r10_317 - 0x04)];
			Eq_1342 dwLoc01B8_1254 = eax_323;
			if (r9d_230 != 0x00)
				dwLoc01B8_1254 = __bswap<word32>(eax_323);
			if ((word32) r10_317 + 0x04 > edx_193)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 eax_346;
			eax_346.u0 = rcx->u0.t0008.u0;
			if ((word64) eax_346 + 4 > edx_193)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_357 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_363 = r8_180.u2[(uint64) ((word32) r10_357 - 0x04)];
			Eq_1342 dwLoc01C8_1257 = eax_363;
			if (r9d_230 != 0x00)
				dwLoc01C8_1257 = __bswap<word32>(eax_363);
			if ((word32) r10_357 + 0x04 > edx_193)
				return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_390 = (uint64) rcx->u0.t0008.u0;
			word32 r10d_403 = (word32) r10_390;
			Eq_1342 r13d_1037 = r8_180.u2[(uint64) ((word32) r10_390 - 0x04)];
			if (r9d_230 != 0x00)
				r13d_1037 = __bswap<word32>(r13d_1037);
			if ((word32) r10_390 + 0x04 <= edx_193)
			{
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 r10d_441 = r8_180.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if (r9d_230 != 0x00)
					r10d_441 = __bswap<word32>(r10d_441);
				if (rcx->u0.t0008.u0 + 0x04 <= edx_193)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 <= edx_193)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						Eq_1342 edx_491;
						edx_491.u2 = (word64) esi_144 + r10d_95;
						if (esi_144 == 0x00)
							edx_491 = esi_144;
						Eq_1342 ecx_511;
						ecx_511.u2 = (word64) r11d_260 + r10d_224;
						if (r11d_260 == 0x00)
							ecx_511 = r11d_260;
						Eq_1342 r8d_528;
						r8d_528.u2 = (word64) dwLoc01B8_1254 + r10d_291;
						if (dwLoc01B8_1254 == 0x00)
							r8d_528 = dwLoc01B8_1254;
						uint64 rsi_538 = (uint64) (eax_346 + dwLoc01C8_1257);
						Eq_1342 esi_546 = (word32) rsi_538;
						word32 rsi_32_32_864 = SLICE(rsi_538, word32, 32);
						if (dwLoc01C8_1257 == 0x00)
							esi_546 = dwLoc01C8_1257;
						Eq_1342 eax_566;
						eax_566.u2 = (word64) r10d_441 + r10d_403;
						if (r10d_441 == 0x00)
							eax_566 = r10d_441;
						uint64 rsi_2009 = SEQ(rsi_32_32_864, esi_546);
						if (edx_491 != 0x00)
						{
							rcx->u0.t0008.u0 = (int32) edx_491;
							uint32 r14d_621 = r14d_106 >> 0x04;
							uint32 esi_1201 = 0x00;
							if (r14d_621 != 0x00)
							{
								do
								{
									word128 xmm1_630 = g_ow80028E70;
									tLoc0188.ow0000 = g_ow80028E60;
									tLoc0188.ow0010 = xmm1_630;
									if (fn000000018001D8D0(rcx, &tLoc0188) == 0x00)
										goto l000000018000E3D9;
									++esi_1201;
								} while (esi_1201 < r14d_621);
							}
							rsi_2009 = (uint64) esi_546;
						}
						Eq_1342 esi_839 = (word32) rsi_2009;
						if (ecx_511 != 0x00)
						{
							rcx->u0.t0008.u0 = (int32) ecx_511;
							if (r12d_235 != 0x00)
							{
								uint64 r9_2005 = 0x00;
								do
								{
									word32 r9d_757 = (word32) r9_2005;
									Eq_137 rdx_709;
									rdx_709.u0 = rcx->u0.t0000.u0;
									uint64 r8_711 = (uint64) rcx->u0.t0008.u0;
									if (rdx_709 == 0x00 || (word32) r8_711 + 0x04 > ((rcx->u0).t000C).u0)
										goto l000000018000E3D9;
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint64 rax_729 = (uint64) rdx_709.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
									Eq_1342 eax_733 = (word32) rax_729;
									word32 rax_32_32_736 = SLICE(rax_729, word32, 32);
									if ((&rcx->u0)[1] != 0x00)
										rax_729 = SEQ(rax_32_32_736, __bswap<word32>(eax_733));
									Eq_25783 tLoc0148;
									fn0000000180005050(rcx, (word32) (rax_729 + r8_711), &tLoc0148);
									r9_2005 = (uint64) (r9d_757 + 0x01);
								} while ((word32) r9_2005 < r12d_235);
							}
						}
						Eq_25820 tLoc01B0;
						if (r8d_528 != 0x00)
						{
							rcx->u0.t0008.u0 = (int32) r8d_528;
							Eq_25813 r15d_803 = r15d_303 >> 0x02;
							uint64 r10_2007 = 0x00;
							if (r15d_803 != 0x00)
							{
								do
								{
									tLoc01B0.qw0008 = 0x00;
									tLoc01B0.qw0000 = 0x00;
									word32 r10d_830 = (word32) r10_2007;
									if (fn000000018001D710(rcx, &tLoc01B0) == 0x00)
										goto l000000018000E3D9;
									r10_2007 = (uint64) (r10d_830 + 0x01);
								} while ((word32) r10_2007 < r15d_803);
							}
						}
						Eq_1342 edi_1098;
						edi_1098.u0 = 0x00;
						if (esi_839 == 0x00)
						{
l000000018000E32D:
							if (eax_566 != 0x00)
							{
								rcx->u0.t0008.u0 = (int32) eax_566;
								if (r13d_1037 != 0x00)
								{
									do
									{
										Eq_26005 tLoc0198;
										tLoc0198.qw0004 = 0x00;
										tLoc0198.dw0000 = 0x00;
										tLoc01B0.qw0004 = 0x00;
										tLoc01B0.dw0000 = 0x00;
										if (fn000000018001D5C0(rcx, &tLoc0198) == 0x00 || fn000000018001D5C0(rcx, &tLoc01B0) == 0x00)
											goto l000000018000E3D9;
										edi_1098.u2 = (word64) edi_1098 + 1;
									} while (edi_1098 < r13d_1037);
								}
							}
							return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
						}
						Eq_137 r14_851;
						r14_851.u0 = rcx->u0.t0000.u0;
						rcx->u0.t0008.u0 = (int32) esi_839;
						if (r14_851 != 0x00)
						{
							uint64 rdx_871 = (uint64) ((word64) esi_839 + 4);
							Eq_1342 r8d_873;
							r8d_873.u0 = rcx->u0.t000C.u0;
							Eq_1342 edx_872 = (word32) rdx_871;
							if (edx_872 <= r8d_873)
							{
								Eq_1342 r15d_883 = (&rcx->u0)[1];
								rcx->u0.t0008.u0 = (int32) edx_872;
								Eq_1342 esi_888 = r14_851.u2[(uint64) ((word32) rdx_871 - 0x04)];
								if (r15d_883 != 0x00)
									esi_888 = __bswap<word32>(esi_888);
								if ((word32) rdx_871 + 0x04 <= r8d_873)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									uint64 r9_2011 = 0x00;
									if (esi_888 != 0x00)
									{
										uint64 r10_2013 = 0x00;
										r9_2011 = 0x00;
										do
										{
											word32 r10d_957 = (word32) r10_2013;
											word32 r9d_952 = (word32) r9_2011;
											if (rcx->u0.t0008.u0 + 0x04 > r8d_873)
												goto l000000018000E3D9;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 r11_927 = (uint64) rcx->u0.t0008.u0;
											Eq_1342 edx_938 = r14_851.u2[(uint64) ((word32) r11_927 - 0x04)];
											if (r15d_883 != 0x00)
												edx_938 = __bswap<word32>(edx_938);
											if ((word32) r11_927 + 0x04 > r8d_873)
												goto l000000018000E3D9;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											r10_2013 = (uint64) (r10d_957 + 0x01);
											r9_2011 = (uint64) ((word64) edx_938 + r9d_952);
										} while ((word32) r10_2013 < esi_888);
									}
									int32 r9d_970 = (word32) r9_2011;
									int32 ecx_1001 = 0x00;
									if (r9d_970 > 0x00)
									{
										do
										{
											if (rcx->u0.t0008.u0 + 0x04 > r8d_873)
												goto l000000018000E3D9;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											if (rcx->u0.t0008.u0 + 0x04 > r8d_873)
												goto l000000018000E3D9;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											++ecx_1001;
										} while (ecx_1001 < r9d_970);
									}
									goto l000000018000E32D;
								}
							}
						}
					}
				}
			}
l000000018000E3D9:
			return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
		}
	}
l000000018000E3ED:
	return (word32) fn0000000180023580(rax_12 ^ fp - 488, qwLoc01F0);
}

// 000000018000E400: Register word32 fn000000018000E400(Register (ptr64 Eq_3676) rcx, Register uint64 rdx, Register Eq_1342 r8d)
// Called from:
//      fn000000018000C1B0
//      fn000000018000FBF0
word32 fn000000018000E400(union Eq_3676 * rcx, uint64 rdx, Eq_1342 r8d)
{
	ptr64 fp;
	up32 edx = (word32) rdx;
	word64 r8;
	r8d = (word32) r8;
	ui64 rax_11 = g_qw80030008 ^ fp - 0x0278;
	if (r8d != 0x00)
	{
		rcx->u0.t0008.u0 = (int32) r8d;
		if (edx == 0x00 || fn0000000180001B50(&g_t800306F0, (word32) rdx) != 0x00)
		{
			uint64 rbp_53 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 ebp_284 = (word32) rbp_53;
			up32 edi_204 = 0x00;
			Eq_26179 tLoc0258;
			Eq_26183 tLoc0148;
			if (edx != 0x00)
			{
				do
				{
					memset(&tLoc0258, 0, 0x0104);
					memset(&tLoc0148, 0, 0x0104);
					Eq_137 r9_79;
					r9_79.u0 = rcx->u0.t0000.u0;
					if (r9_79 == 0x00)
					{
l000000018000E6FE:
						goto l000000018000E6D3;
					}
					Eq_1342 r8d_92;
					r8d_92.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r8d_92)
						goto l000000018000E6FE;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_98 = (uint64) rcx->u0.t0008.u0;
					uint64 rdx_104 = (uint64) r9_79.u2[(uint64) ((word32) r10_98 - 0x04)];
					Eq_1342 r11d_105 = (&rcx->u0)[1];
					Eq_1342 edx_110 = (word32) rdx_104;
					word32 rdx_32_32_171 = SLICE(rdx_104, word32, 32);
					if (r11d_105 != 0x00)
						rdx_104 = SEQ(rdx_32_32_171, __bswap<word32>(edx_110));
					if ((word32) r10_98 + 0x04 > r8d_92)
						goto l000000018000E6FE;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r10_124 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 r9d_135 = r9_79.u2[(uint64) ((word32) r10_124 - 0x04)];
					if (r11d_105 != 0x00)
						r9d_135 = __bswap<word32>(r9d_135);
					if ((word32) r10_124 + 0x04 > r8d_92)
						goto l000000018000E6FE;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 > r8d_92)
						goto l000000018000E6FE;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					fn0000000180005050(rcx, (word32) rdx_104, &tLoc0258);
					fn0000000180005050(rcx, r9d_135, &tLoc0148);
					struct Eq_2417 * r9_197 = g_ptr80030720;
					if (r9_197 != null)
					{
						int64 rax_205 = (int64) edi_204;
						union Eq_26195 * rcx_208 = &tLoc0258;
						byte * rdx_209 = (byte *) (&(r9_197->a0030 + 46)->t0000.u0 + rax_205 *64 0x00BE);
						char al_216;
						do
						{
							al_216 = rcx_208->u0;
							*rdx_209 = al_216;
							rcx_208 = (union Eq_26195 *) ((char *) rcx_208 + 1);
							++rdx_209;
						} while (al_216 != 0x00);
						union Eq_26216 * rcx_226 = &tLoc0148;
						byte * rdx_229 = (byte *) (&(g_ptr80030720->a0030 + 111)->t0000.u0 + rax_205 *64 0x00BE);
						char al_236;
						do
						{
							al_236 = rcx_226->u0;
							*rdx_229 = al_236;
							rcx_226 = (union Eq_26216 *) ((char *) rcx_226 + 1);
							++rdx_229;
						} while (al_236 != 0x00);
					}
					++edi_204;
				} while (edi_204 < edx);
			}
			rcx->u0.t0008.u0 = (int32) ebp_284;
			up32 esi_304 = 0x00;
			uint64 rbp_314 = rbp_53;
			if (edx != 0x00)
			{
				do
				{
					Eq_137 r9_303;
					r9_303.u0 = rcx->u0.t0000.u0;
					struct Eq_1142 * r14_307 = (struct Eq_1142 *) (g_ptr80030720 + (int64) esi_304);
					if (r9_303 == 0x00)
					{
l000000018000E702:
						goto l000000018000E6C3;
					}
					uint64 rdx_316 = (uint64) ((word32) rbp_314 + 0x04);
					Eq_1342 r8d_318;
					r8d_318.u0 = rcx->u0.t000C.u0;
					Eq_1342 edx_317 = (word32) rdx_316;
					if (edx_317 > r8d_318)
						goto l000000018000E702;
					Eq_1342 r11d_328 = (&rcx->u0)[1];
					rcx->u0.t0008.u0 = (int32) edx_317;
					Eq_1342 r10d_333 = r9_303.u2[(uint64) ((word32) rdx_316 - 0x04)];
					if (r11d_328 != 0x00)
						r10d_333 = __bswap<word32>(r10d_333);
					if ((word32) rdx_316 + 0x04 > r8d_318)
						goto l000000018000E702;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 rdx_347 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_358 = r9_303.u2[(uint64) ((word32) rdx_347 - 0x04)];
					if (r11d_328 != 0x00)
						edi_358 = __bswap<word32>(edi_358);
					if ((word32) rdx_347 + 0x04 > r8d_318)
						goto l000000018000E702;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 ebp_373;
					ebp_373.u0 = 0x00;
					Eq_1342 eax_380;
					eax_380.u0 = rcx->u0.t0008.u0;
					if (g_dw800306F4 != 0x00)
						ebp_373.u0 = rcx->u0.t0008.u0;
					if ((word64) eax_380 + 4 > r8d_318)
						goto l000000018000E702;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r9_405 = (uint64) r9_303.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					Eq_1342 r9d_412 = (word32) r9_405;
					word32 r9_32_32_480 = SLICE(r9_405, word32, 32);
					if (r11d_328 != 0x00)
						r9d_412 = __bswap<word32>(r9d_412);
					fn0000000180005050(rcx, r10d_333, &tLoc0148);
					fn0000000180005050(rcx, edi_358, &tLoc0258);
					uint64 r9_465 = SEQ(r9_32_32_480, r9d_412);
					if (g_dw800306F4 != 0x00)
					{
						r9_465 = SEQ(r9_32_32_480, r9d_412);
						if (r9d_412 != 0x00)
							r9_465 = (uint64) (r9d_412 + ebp_373);
					}
					rbp_314 = (uint64) rcx->u0.t0008.u0;
					fn000000018000E710(rcx, r14_307, (word32) r9_465);
					rcx->u0.t0008.u0 = (int32) (word32) rbp_314;
					++esi_304;
				} while (esi_304 < edx);
			}
l000000018000E6C3:
l000000018000E6D3:
		}
	}
	word64 qwLoc0280;
	return (word32) fn0000000180023580(rax_11 ^ fp - 0x0278, qwLoc0280);
}

// 000000018000E710: void fn000000018000E710(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register Eq_1342 r9d)
// Called from:
//      fn000000018000E400
void fn000000018000E710(union Eq_3676 * rcx, struct Eq_1142 * rdx, Eq_1342 r9d)
{
	word64 r9;
	r9d = (word32) r9;
	if (rdx == null)
		return;
	if (r9d == 0x00)
		return;
	Eq_137 r11_20;
	r11_20.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) r9d;
	if (r11_20 == 0x00)
		return;
	uint64 rdi_33 = (uint64) ((word64) r9d + 4);
	Eq_1342 r10d_35;
	r10d_35.u0 = rcx->u0.t000C.u0;
	Eq_1342 edi_34 = (word32) rdi_33;
	if (edi_34 > r10d_35)
		return;
	Eq_1342 edx_55 = r11_20.u2[(uint64) r9d];
	if ((&rcx->u0)[1] != 0x00)
		edx_55 = __bswap<word32>(edx_55);
	uint64 r9_234 = 0x00;
	Eq_1342 ecx_122;
	ecx_122.u0 = 0x00;
	word32 esi_100 = 0x00;
	if (edx_55 == 0x00)
	{
		rcx->u0.t0008.u0 = (int32) edi_34;
		if ((word32) rdi_33 + 0x04 > r10d_35)
			return;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 rdi_81 = (uint64) rcx->u0.t0008.u0;
		r9_234 = (uint64) r11_20.u2[(uint64) ((word32) rdi_81 - 0x04)];
		word32 edi_99 = (word32) rdi_81;
		Eq_1342 r9d_90 = (word32) r9_234;
		word32 r9_32_32_238 = SLICE(r9_234, word32, 32);
		if ((&rcx->u0)[1] != 0x00)
			r9_234 = SEQ(r9_32_32_238, __bswap<word32>(r9d_90));
		Eq_1342 eax_102 = (word32) rdi_81 + 0x04;
		if (g_dw800306F4 != 0x00)
			esi_100 = edi_99;
		if (eax_102 > r10d_35)
			return;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		uint64 rdi_114 = (uint64) rcx->u0.t0008.u0;
		ecx_122 = r11_20.u2[(uint64) ((word32) rdi_114 - 0x04)];
		if ((&rcx->u0)[1] != 0x00)
			ecx_122 = __bswap<word32>(ecx_122);
		if ((word32) rdi_114 + 0x04 > r10d_35)
			return;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
		if (rcx->u0.t0008.u0 + 0x04 > r10d_35)
			return;
		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	}
	if (g_dw800306F4 != 0x00)
	{
		if (ecx_122 != 0x00)
			ecx_122.u2 = (word64) ecx_122 + esi_100;
		if (edx_55 != 0x00)
			ecx_122.u0 = rcx->u0.t0008.u0;
	}
	else if (edx_55 != 0x00)
	{
		fn000000018000F210(rcx, rdx);
		return;
	}
	fn000000018000E860(rcx, rdx, (word32) r9_234, ecx_122);
}

// 000000018000E860: void fn000000018000E860(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx, Register word32 r9d, Stack Eq_1342 dwArg28)
// Called from:
//      fn000000018000E710
void fn000000018000E860(union Eq_3676 * rcx, struct Eq_1142 * rdx, word32 r9d, Eq_1342 dwArg28)
{
	word64 r9;
	ptr64 fp;
	ui64 rax_30 = g_qw80030008 ^ fp - 0x0178;
	if (rdx != null)
	{
		if (dwArg28 == 0x00)
		{
l000000018000F1DA:
			word64 qwLoc0180;
			fn0000000180023580(rax_30 ^ fp - 0x0178, qwLoc0180);
			return;
		}
		rcx->u0.t0008.u0 = (int32) dwArg28;
		if (g_dw800306F4 != 0x00)
		{
l000000018000E919:
			Eq_137 rdx_103;
			rdx_103.u0 = rcx->u0.t0000.u0;
			if (rdx_103 != 0x00)
			{
				Eq_1342 ecx_116;
				ecx_116.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 <= ecx_116)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					if (rcx->u0.t0008.u0 + 0x04 <= ecx_116)
					{
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						Eq_1265 r13d_1463 = rdx_103.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
						if ((&rcx->u0)[1] != 0x00)
							r13d_1463 = r13d_1463 >> 0x18 | r13d_1463 >> 0x08 & 0xFF00 | (r13d_1463 & 0xFF00) << 0x08 | r13d_1463 << 0x18;
						Eq_26716 tLoc0108;
						fn00000001800010C0(&tLoc0108);
						Eq_26719 r14d_363;
						r14d_363.u0 = 0x00;
						Eq_137 rdi_216;
						rdi_216.u0 = rcx->u0.t0000.u0;
						int64 r10_217;
						uint64 r15_303;
						for (r10_217 = 0x00; r10_217 < 0x05; ++r10_217)
						{
							if (rdi_216 == 0x00)
								goto l000000018000F1B8;
							Eq_1342 r8d_233;
							r8d_233.u0 = rcx->u0.t000C.u0;
							if (rcx->u0.t0008.u0 + 0x04 > r8d_233)
								goto l000000018000F1B8;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							uint64 r11_239 = (uint64) rcx->u0.t0008.u0;
							Eq_26719 r9d_251 = rdi_216.u2[(uint64) ((word32) r11_239 - 0x04)];
							Eq_1342 esi_246 = (&rcx->u0)[1];
							if (esi_246 != 0x00)
								r9d_251 = r9d_251 >> 0x18 | r9d_251 >> 0x08 & 0xFF00 | (r9d_251 & 0xFF00) << 0x08 | r9d_251 << 0x18;
							if ((word32) r11_239 + 0x04 > r8d_233)
								goto l000000018000F1B8;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							r15_303 = (uint64) rcx->u0.t0008.u0;
							uint64 r8_308 = (uint64) rdi_216.u2[(uint64) ((word32) r15_303 - 0x04)];
							uint32 r8d_314 = (word32) r8_308;
							if (esi_246 != 0x00)
								r8_308 = (uint64) (r8d_314 >> 0x18 | r8d_314 >> 0x08 & 0xFF00 | (r8d_314 & 0xFF00) << 0x08 | r8d_314 << 0x18);
							word32 r8d_365 = (word32) r8_308;
							if (r10_217 == 0x00)
								r14d_363 = r9d_251;
							if (r8d_365 != 0x00)
								(fp - 88)[r10_217] = r8d_365 + (word32) r11_239;
						}
						tLoc0108.t0004.u0 = (int32) r14d_363;
						if (rdi_216 != 0x00)
						{
							Eq_1342 r8d_420;
							r8d_420.u0 = rcx->u0.t000C.u0;
							if ((word32) r15_303 + 0x04 <= r8d_420)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								uint64 r10_426 = (uint64) rcx->u0.t0008.u0;
								uint64 r9_430 = (uint64) rdi_216.u2[(uint64) ((word32) r10_426 - 0x04)];
								uint32 r9d_438 = (word32) r9_430;
								Eq_1342 r11d_433 = (&rcx->u0)[1];
								if (r11d_433 != 0x00)
									r9_430 = (uint64) (r9d_438 >> 0x18 | r9d_438 >> 0x08 & 0xFF00 | (r9d_438 & 0xFF00) << 0x08 | r9d_438 << 0x18);
								Eq_1342 r9d_567 = (word32) r9_430;
								if ((word32) r10_426 + 0x04 <= r8d_420)
								{
									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
									if (rcx->u0.t0008.u0 + 0x04 <= r8d_420)
									{
										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
										uint64 r10_500 = (uint64) rcx->u0.t0008.u0;
										if ((word32) r10_500 + 0x04 <= r8d_420)
										{
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint64 r8_515 = (uint64) rdi_216.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
											uint32 r8d_521 = (word32) r8_515;
											if (r11d_433 != 0x00)
												r8_515 = (uint64) (r8d_521 >> 0x18 | r8d_521 >> 0x08 & 0xFF00 | (r8d_521 & 0xFF00) << 0x08 | r8d_521 << 0x18);
											Eq_1342 r8d_585 = (word32) r8_515;
											Eq_1342 eax_572 = (word32) (r15_303 + r9_430);
											if (r9d_567 == 0x00)
												eax_572 = r9d_567;
											Eq_1342 eax_590 = (word32) (r10_500 + r8_515);
											if (r8d_585 == 0x00)
												eax_590 = r8d_585;
											Eq_27007 tLoc0148;
											tLoc0148.qw0004 = 0x00;
											tLoc0148.dw0000 = 0x00;
											Eq_27018 tLoc0138;
											tLoc0138.qw0004 = 0x00;
											tLoc0138.dw0000 = 0x00;
											if (fn000000018001D5C0(rcx, &tLoc0148) != 0x00 && fn000000018001D5C0(rcx, &tLoc0138) != 0x00)
											{
												if (false)
													rcx->u0.t0008.u0 = 0x00;
												Eq_6279 r15d_1424;
												r15d_1424.u0 = 0x00;
												Eq_26719 r9d_2138;
												r9d_2138.u0 = 0x00;
												if (r14d_363 > 0x00)
												{
													Eq_137 r10_675;
													r10_675.u0 = rcx->u0.t0000.u0;
													do
													{
														if (r10_675 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
															goto l000000018000F1B8;
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														Eq_6279 r8d_702 = r10_675.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
														if ((&rcx->u0)[1] != 0x00)
															r8d_702 = r8d_702 >> 0x18 | r8d_702 >> 0x08 & 0xFF00 | (r8d_702 & 0xFF00) << 0x08 | r8d_702 << 0x18;
														if (r9d_2138 == 0x00)
															r15d_1424 = r8d_702;
														r9d_2138 = (word32) r9d_2138.u0 + 1;
													} while (r9d_2138 < r14d_363);
												}
												if (false)
													rcx->u0.t0008.u0 = 0x00;
												int32 r9d_2141 = 0x00;
												int64 rsi_787 = (int64) r14d_363;
												if (r14d_363 > 0x00)
												{
													Eq_137 rdi_795;
													rdi_795.u0 = rcx->u0.t0000.u0;
													int64 r11_813 = 0x00;
													struct Eq_27121 * r10_820 = (struct Eq_27121 *) ((char *) &tLoc0108 + 0x0C);
													do
													{
														if (rdi_795 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
															goto l000000018000F1B8;
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														uint32 r8d_847 = (uint32) rdi_795.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
														if ((&rcx->u0)[1] != 0x00)
															r8d_847 = r8d_847 >> 0x18 | r8d_847 >> 0x08 & 0xFF00 | (r8d_847 & 0xFF00) << 0x08 | r8d_847 << 0x18;
														if (r9d_2141 < tLoc0108.dw0000)
															r10_820->dw0000 = r8d_847;
														++r9d_2141;
														++r11_813;
														++r10_820;
													} while (r11_813 < rsi_787);
												}
												if (false)
													rcx->u0.t0008.u0 = 0x00;
												int32 r9d_1026 = 0x00;
												if (r14d_363 > 0x00)
												{
													Eq_137 rdi_949;
													rdi_949.u0 = rcx->u0.t0000.u0;
													int64 r11_1041 = 0x00;
													struct Eq_27208 * r10_1034 = (struct Eq_27208 *) ((char *) &tLoc0108 + 16);
													do
													{
														if (rdi_949 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
															goto l000000018000F1B8;
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														uint32 r8d_1021 = (uint32) rdi_949.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
														if ((&rcx->u0)[1] != 0x00)
															r8d_1021 = r8d_1021 >> 0x18 | r8d_1021 >> 0x08 & 0xFF00 | (r8d_1021 & 0xFF00) << 0x08 | r8d_1021 << 0x18;
														if (r9d_1026 < tLoc0108.dw0000)
															r10_1034->dw0000 = r8d_1021;
														++r9d_1026;
														++r11_1041;
														++r10_1034;
													} while (r11_1041 < rsi_787);
												}
												if (false)
													rcx->u0.t0008.u0 = 0x00;
												int32 r9d_1163 = 0x00;
												if (r14d_363 > 0x00)
												{
													Eq_137 rdi_1086;
													rdi_1086.u0 = rcx->u0.t0000.u0;
													int64 r11_1093 = 0x00;
													struct Eq_27278 * r10_1095 = (struct Eq_27278 *) ((char *) &tLoc0108 + 20);
													do
													{
														if (rdi_1086 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
															goto l000000018000F1B8;
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														uint32 r8d_1122 = (uint32) rdi_1086.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
														if ((&rcx->u0)[1] != 0x00)
															r8d_1122 = r8d_1122 >> 0x18 | r8d_1122 >> 0x08 & 0xFF00 | (r8d_1122 & 0xFF00) << 0x08 | r8d_1122 << 0x18;
														if (r9d_1163 < tLoc0108.dw0000)
															r10_1095->dw0000 = r8d_1122;
														++r9d_1163;
														++r11_1093;
														++r10_1095;
													} while (r11_1093 < rsi_787);
												}
												if (false)
													rcx->u0.t0008.u0 = 0x00;
												uint64 r11_1210 = 0x00;
												Eq_26719 r9d_1309;
												r9d_1309.u0 = 0x00;
												if (r14d_363 > 0x00)
												{
													Eq_137 r10_1225;
													r10_1225.u0 = rcx->u0.t0000.u0;
													int32 eax_1302;
													int32 r11d_2159;
													do
													{
														int32 r11d_1301 = (word32) r11_1210;
														if (r10_1225 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
															goto l000000018000F1B8;
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														uint32 r8d_1252 = (uint32) r10_1225.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
														if ((&rcx->u0)[1] != 0x00)
															r8d_1252 = r8d_1252 >> 0x18 | r8d_1252 >> 0x08 & 0xFF00 | (r8d_1252 & 0xFF00) << 0x08 | r8d_1252 << 0x18;
														eax_1302 = (word32) r11_1210 + 0x01;
														if (r8d_1252 == 0x00)
															eax_1302 = r11d_1301;
														r11_1210 = (uint64) eax_1302;
														r11d_2159 = (word32) r11_1210;
														r9d_1309 = (word32) r9d_1309.u0 + 1;
													} while (r9d_1309 < r14d_363);
													if (eax_1302 > 0x00)
													{
														uint64 r10_1370 = 0x00;
														do
														{
															tLoc0138.qw0004 = 0x00;
															tLoc0138.dw0000 = 0x00;
															tLoc0148.qw0004 = 0x00;
															tLoc0148.dw0000 = 0x00;
															word32 r10d_1368 = (word32) r10_1370;
															if (fn000000018001D5C0(rcx, &tLoc0138) == 0x00 || fn000000018001D5C0(rcx, &tLoc0148) == 0x00)
																goto l000000018000F1B8;
															r10_1370 = (uint64) (r10d_1368 + 0x01);
														} while ((word32) r10_1370 < r11d_2159);
													}
												}
												if (eax_572 != 0x00)
													rcx->u0.t0008.u0 = (int32) eax_572;
												uint64 r9_1405 = (uint64) rcx->u0.t0008.u0;
												if ((word32) r9_1405 == 0x00 || fn0000000180005100(rcx, rdx, r13d_1463, (word32) r9_1405, r15d_1424, &tLoc0108) != 0x00)
												{
													if (eax_590 != 0x00)
														rcx->u0.t0008.u0 = (int32) eax_590;
													Eq_137 r10_1519;
													r10_1519.u0 = rcx->u0.t0000.u0;
													if (r10_1519 != 0x00)
													{
														Eq_1342 r8d_1532;
														r8d_1532.u0 = rcx->u0.t000C.u0;
														if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
														{
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
															{
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
																{
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
																	{
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
																		{
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
																			{
																				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																				if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
																				{
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
																					{
																						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																						if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
																						{
																							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																							if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
																							{
																								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																								if (rcx->u0.t0008.u0 + 0x04 <= r8d_1532)
																								{
																									rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																									uint64 r11_1638 = (uint64) rcx->u0.t0008.u0;
																									uint32 r9d_1650 = (uint32) r10_1519.u2[(uint64) ((word32) r11_1638 - 0x04)];
																									Eq_1342 edi_1645 = (&rcx->u0)[1];
																									if (edi_1645 != 0x00)
																										r9d_1650 = r9d_1650 >> 0x18 | r9d_1650 >> 0x08 & 0xFF00 | (r9d_1650 & 0xFF00) << 0x08 | r9d_1650 << 0x18;
																									if ((word32) r11_1638 + 0x04 <= r8d_1532)
																									{
																										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																										uint64 r11_1702 = (uint64) rcx->u0.t0008.u0;
																										uint32 r8d_1713 = (uint32) r10_1519.u2[(uint64) ((word32) r11_1702 - 0x04)];
																										if (edi_1645 != 0x00)
																											r8d_1713 = r8d_1713 >> 0x18 | r8d_1713 >> 0x08 & 0xFF00 | (r8d_1713 & 0xFF00) << 0x08 | r8d_1713 << 0x18;
																										if (r8d_1713 != 0x00)
																											rcx->u0.t0008.u0 = (int32) ((word32) r11_1702 - 0x04 + r8d_1713);
																										uint32 r15d_1781 = SLICE(r9d_1650 *64 ~0x55555554, word32, 32) >> 0x01;
																										if (r15d_1781 == 0x00 || fn0000000180001E80(rdx, (uint64) r15d_1781) != 0x00)
																										{
																											uint32 esi_1990 = 0x00;
																											if (r15d_1781 != 0x00)
																											{
																												ptr64 r10_1841 = null;
																												do
																												{
																													Eq_137 rdx_1844;
																													rdx_1844.u0 = rcx->u0.t0000.u0;
																													if (rdx_1844 == 0x00)
																														goto l000000018000F1B8;
																													Eq_1342 r11d_1857;
																													r11d_1857.u0 = rcx->u0.t000C.u0;
																													if (rcx->u0.t0008.u0 + 0x02 > r11d_1857)
																														goto l000000018000F1B8;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																													uint64 r9_1863 = (uint64) rcx->u0.t0008.u0;
																													cu16 r8w_1875 = (cu16) rdx_1844.u2[(uint64) ((word32) r9_1863 - 0x02)];
																													Eq_1342 edi_1870 = (&rcx->u0)[1];
																													if (edi_1870 != 0x00)
																														r8w_1875 = r8w_1875 >> 0x08 | r8w_1875 << 0x08;
																													if ((word32) r9_1863 + 0x02 > r11d_1857)
																														goto l000000018000F1B8;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																													uint64 r14_1897 = (uint64) rcx->u0.t0008.u0;
																													cu16 r9w_1908 = (cu16) rdx_1844.u2[(uint64) ((word32) r14_1897 - 0x02)];
																													if (edi_1870 != 0x00)
																														r9w_1908 = r9w_1908 >> 0x08 | r9w_1908 << 0x08;
																													if ((word32) r14_1897 + 0x02 > r11d_1857)
																														goto l000000018000F1B8;
																													rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																													cu16 dx_1942 = (cu16) rdx_1844.u2[(uint64) (rcx->u0.t0008.u0 + ~0x01)];
																													if (edi_1870 != 0x00)
																														dx_1942 = dx_1942 >> 0x08 | dx_1942 << 0x08;
																													struct Eq_1145 * rcx_1957 = rdx->ptr0008;
																													if (rcx_1957 != null)
																													{
																														*((char *) &rcx_1957->dw0000 + (r10_1841 + 4)) = (struct Eq_1145 *) (word32) r8w_1875;
																														*((char *) &rdx->ptr0008->dw0000 + (r10_1841 + 8)) = (struct Eq_1145 *) (word32) r9w_1908;
																														*((char *) &rdx->ptr0008->dw0000 + (r10_1841 + 0x0C)) = (struct Eq_1145 *) (word32) dx_1942;
																													}
																													++esi_1990;
																													r10_1841 += 0x14;
																												} while (esi_1990 < r15d_1781);
																											}
																											uint64 rax_2014 = (uint64) rcx->u0.t0008.u0;
																											uint64 rcx_2020 = (uint64) ((word32) rax_2014 & ~0x03);
																											Eq_1342 ecx_2029 = (word32) rcx_2020;
																											Eq_1342 eax_2030 = (word32) rcx_2020 + 0x04;
																											if (((byte) rax_2014 & 0x03) <= 0x00)
																												eax_2030 = ecx_2029;
																											rcx->u0.t0008.u0 = (int32) eax_2030;
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
l000000018000F1B8:
						fn00000001800235AC(0x0A);
						goto l000000018000F1DA;
					}
				}
			}
			goto l000000018000F1D8;
		}
		if (rcx->u0.t0000.u0 != 0x00)
		{
			Eq_1342 edx_60;
			edx_60.u0 = rcx->u0.t000C.u0;
			if ((word64) dwArg28 + 4 <= edx_60)
			{
				rcx->u0.t0008.u0 = (int32) ((word64) dwArg28 + 4);
				if ((word64) dwArg28 + 8 <= edx_60)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					up32 ecx_2132 = 0x00;
					up32 r8d_76 = (word32) r9 - 0x02;
					if (r8d_76 != 0x00)
					{
						do
						{
							if (rcx->u0.t0008.u0 + 0x04 > edx_60)
								goto l000000018000F1D8;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							++ecx_2132;
						} while (ecx_2132 < r8d_76);
					}
					goto l000000018000E919;
				}
			}
		}
	}
l000000018000F1D8:
	goto l000000018000F1DA;
}

// 000000018000F210: void fn000000018000F210(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_1142) rdx)
// Called from:
//      fn000000018000E710
void fn000000018000F210(union Eq_3676 * rcx, struct Eq_1142 * rdx)
{
	ptr64 fp;
	ui64 rax_30 = g_qw80030008 ^ fp - 664;
	if (rdx != null)
	{
		Eq_137 rdx_40;
		rdx_40.u0 = rcx->u0.t0000.u0;
		if (rdx_40 != 0x00)
		{
			Eq_1342 eax_52 = rcx->u0.t0008.u0 + 0x04;
			Eq_1342 ecx_53;
			ecx_53.u0 = rcx->u0.t000C.u0;
			if (eax_52 <= ecx_53)
			{
				rcx->u0.t0008.u0 = (int32) eax_52;
				if ((word64) eax_52 + 4 <= ecx_53)
				{
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1265 r8d_77 = rdx_40.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					Eq_1265 dwLoc0264_2209 = r8d_77;
					if ((&rcx->u0)[1] != 0x00)
						dwLoc0264_2209 = r8d_77 >> 0x18 | r8d_77 >> 0x08 & 0xFF00 | (r8d_77 & 0xFF00) << 0x08 | r8d_77 << 0x18;
					Eq_27979 tLoc0228;
					fn00000001800010C0(&tLoc0228);
					Eq_27982 r14d_293;
					r14d_293.u0 = 0x00;
					Eq_137 r11_145;
					r11_145.u0 = rcx->u0.t0000.u0;
					Eq_27988 r10_147;
					r10_147.u1 = 0x00;
					uint64 rdi_233;
					do
					{
						if (r11_145 == 0x00)
							goto l000000018000FB97;
						Eq_1342 r8d_163;
						r8d_163.u0 = rcx->u0.t000C.u0;
						if (rcx->u0.t0008.u0 + 0x04 > r8d_163)
							goto l000000018000FB97;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 rdi_169 = (uint64) rcx->u0.t0008.u0;
						Eq_27982 r9d_181 = r11_145.u2[(uint64) ((word32) rdi_169 - 0x04)];
						Eq_1342 esi_176 = (&rcx->u0)[1];
						if (esi_176 != 0x00)
							r9d_181 = r9d_181 >> 0x18 | r9d_181 >> 0x08 & 0xFF00 | (r9d_181 & 0xFF00) << 0x08 | r9d_181 << 0x18;
						if ((word32) rdi_169 + 0x04 > r8d_163)
							goto l000000018000FB97;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						rdi_233 = (uint64) rcx->u0.t0008.u0;
						uint32 r8d_244 = (uint32) r11_145.u2[(uint64) ((word32) rdi_233 - 0x04)];
						if (esi_176 != 0x00)
							r8d_244 = r8d_244 >> 0x18 | r8d_244 >> 0x08 & 0xFF00 | (r8d_244 & 0xFF00) << 0x08 | r8d_244 << 0x18;
						if (r10_147 == 0x00)
							r14d_293 = r9d_181;
						if (r8d_244 != 0x00)
							(fp - 376)[r10_147] = r8d_244;
						r10_147 = (word64) r10_147 + 1;
					} while (r10_147 < 0x05);
					tLoc0228.t0004.u0 = (int32) r14d_293;
					if (r11_145 != 0x00)
					{
						Eq_1342 r8d_340;
						r8d_340.u0 = rcx->u0.t000C.u0;
						if ((word32) rdi_233 + 0x04 > r8d_340)
							goto l000000018000FB97;
						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
						uint64 r9_346 = (uint64) rcx->u0.t0008.u0;
						Eq_1342 edi_351 = r11_145.u2[(uint64) ((word32) r9_346 - 0x04)];
						Eq_1342 dwLoc0268_2214 = edi_351;
						Eq_1342 r10d_355 = (&rcx->u0)[1];
						if (r10d_355 != 0x00)
							dwLoc0268_2214 = edi_351 >> 0x18 | edi_351 >> 0x08 & 0xFF00 | (edi_351 & 0xFF00) << 0x08 | edi_351 << 0x18;
						if ((word32) r9_346 + 0x04 <= r8d_340)
						{
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							if (rcx->u0.t0008.u0 + 0x04 > r8d_340)
								goto l000000018000FB97;
							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
							if (rcx->u0.t0008.u0 + 0x04 <= r8d_340)
							{
								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
								Eq_1342 r13d_1442 = r11_145.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
								if (r10d_355 != 0x00)
									r13d_1442 = r13d_1442 >> 0x18 | r13d_1442 >> 0x08 & 0xFF00 | (r13d_1442 & 0xFF00) << 0x08 | r13d_1442 << 0x18;
								Eq_28228 tLoc0260;
								tLoc0260.qw0004 = 0x00;
								tLoc0260.dw0000 = 0x00;
								Eq_28239 tLoc0250;
								tLoc0250.qw0004 = 0x00;
								tLoc0250.dw0000 = 0x00;
								if (fn000000018001D5C0(rcx, &tLoc0260) != 0x00 && fn000000018001D5C0(rcx, &tLoc0250) != 0x00)
								{
									if (false)
										rcx->u0.t0008.u0 = 0x00;
									Eq_6279 r15d_1384;
									r15d_1384.u0 = 0x00;
									Eq_27982 r9d_2168;
									r9d_2168.u0 = 0x00;
									if (r14d_293 > 0x00)
									{
										Eq_137 r10_558;
										r10_558.u0 = rcx->u0.t0000.u0;
										do
										{
											if (r10_558 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
												goto l000000018000FB97;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											Eq_6279 r8d_586 = r10_558.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
											if ((&rcx->u0)[1] != 0x00)
												r8d_586 = r8d_586 >> 0x18 | r8d_586 >> 0x08 & 0xFF00 | (r8d_586 & 0xFF00) << 0x08 | r8d_586 << 0x18;
											if (r9d_2168 == 0x00)
												r15d_1384 = r8d_586;
											r9d_2168 = (word32) r9d_2168.u0 + 1;
										} while (r9d_2168 < r14d_293);
									}
									if (false)
										rcx->u0.t0008.u0 = 0x00;
									int32 r9d_2171 = 0x00;
									int64 rsi_670 = (int64) r14d_293;
									if (r14d_293 > 0x00)
									{
										Eq_137 rdi_678;
										rdi_678.u0 = rcx->u0.t0000.u0;
										int64 r11_687 = 0x00;
										struct Eq_28360 * r10_694 = (struct Eq_28360 *) ((char *) &tLoc0228 + 0x0C);
										do
										{
											if (rdi_678 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
												goto l000000018000FB97;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint32 r8d_722 = (uint32) rdi_678.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
											if ((&rcx->u0)[1] != 0x00)
												r8d_722 = r8d_722 >> 0x18 | r8d_722 >> 0x08 & 0xFF00 | (r8d_722 & 0xFF00) << 0x08 | r8d_722 << 0x18;
											if (r9d_2171 < tLoc0228.dw0000)
												r10_694->dw0000 = r8d_722;
											++r9d_2171;
											++r11_687;
											++r10_694;
										} while (r11_687 < rsi_670);
									}
									if (false)
										rcx->u0.t0008.u0 = 0x00;
									int32 r9d_2175 = 0x00;
									if (r14d_293 > 0x00)
									{
										Eq_137 rdi_823;
										rdi_823.u0 = rcx->u0.t0000.u0;
										int64 r11_830 = 0x00;
										struct Eq_28442 * r10_832 = (struct Eq_28442 *) ((char *) &tLoc0228 + 16);
										do
										{
											if (rdi_823 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
												goto l000000018000FB97;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint32 r8d_860 = (uint32) rdi_823.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
											if ((&rcx->u0)[1] != 0x00)
												r8d_860 = r8d_860 >> 0x18 | r8d_860 >> 0x08 & 0xFF00 | (r8d_860 & 0xFF00) << 0x08 | r8d_860 << 0x18;
											if (r9d_2175 < tLoc0228.dw0000)
												r10_832->dw0000 = r8d_860;
											++r9d_2175;
											++r11_830;
											++r10_832;
										} while (r11_830 < rsi_670);
									}
									if (false)
										rcx->u0.t0008.u0 = 0x00;
									int32 r9d_1038 = 0x00;
									if (r14d_293 > 0x00)
									{
										Eq_137 rdi_960;
										rdi_960.u0 = rcx->u0.t0000.u0;
										int64 r11_1053 = 0x00;
										struct Eq_28524 * r10_1046 = (struct Eq_28524 *) ((char *) &tLoc0228 + 20);
										do
										{
											if (rdi_960 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
												goto l000000018000FB97;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint32 r8d_1033 = (uint32) rdi_960.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
											if ((&rcx->u0)[1] != 0x00)
												r8d_1033 = r8d_1033 >> 0x18 | r8d_1033 >> 0x08 & 0xFF00 | (r8d_1033 & 0xFF00) << 0x08 | r8d_1033 << 0x18;
											if (r9d_1038 < tLoc0228.dw0000)
												r10_1046->dw0000 = r8d_1033;
											++r9d_1038;
											++r11_1053;
											++r10_1046;
										} while (r11_1053 < rsi_670);
									}
									if (false)
										rcx->u0.t0008.u0 = 0x00;
									uint64 r11_1084 = 0x00;
									Eq_27982 r9d_1184;
									r9d_1184.u0 = 0x00;
									if (r14d_293 > 0x00)
									{
										Eq_137 r10_1099;
										r10_1099.u0 = rcx->u0.t0000.u0;
										int32 eax_1177;
										int32 r11d_2190;
										do
										{
											int32 r11d_1176 = (word32) r11_1084;
											if (r10_1099 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
												goto l000000018000FB97;
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											uint32 r8d_1127 = (uint32) r10_1099.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
											if ((&rcx->u0)[1] != 0x00)
												r8d_1127 = r8d_1127 >> 0x18 | r8d_1127 >> 0x08 & 0xFF00 | (r8d_1127 & 0xFF00) << 0x08 | r8d_1127 << 0x18;
											eax_1177 = (word32) r11_1084 + 0x01;
											if (r8d_1127 == 0x00)
												eax_1177 = r11d_1176;
											r11_1084 = (uint64) eax_1177;
											r11d_2190 = (word32) r11_1084;
											r9d_1184 = (word32) r9d_1184.u0 + 1;
										} while (r9d_1184 < r14d_293);
										if (eax_1177 > 0x00)
										{
											uint64 r10_1246 = 0x00;
											do
											{
												tLoc0250.qw0004 = 0x00;
												tLoc0250.dw0000 = 0x00;
												tLoc0260.qw0004 = 0x00;
												tLoc0260.dw0000 = 0x00;
												word32 r10d_1244 = (word32) r10_1246;
												if (fn000000018001D5C0(rcx, &tLoc0250) == 0x00 || fn000000018001D5C0(rcx, &tLoc0260) == 0x00)
													goto l000000018000FB97;
												r10_1246 = (uint64) (r10d_1244 + 0x01);
											} while ((word32) r10_1246 < r11d_2190);
										}
									}
									if (dwLoc0268_2214 != 0x00)
										rcx->u0.t0008.u0 = (int32) dwLoc0268_2214;
									Eq_137 rcx_1280;
									rcx_1280.u0 = rcx->u0.t0000.u0;
									if (rcx_1280 != 0x00)
									{
										Eq_1342 r9d_1293;
										r9d_1293.u0 = rcx->u0.t000C.u0;
										if (rcx->u0.t0008.u0 + 0x04 > r9d_1293)
											goto l000000018000FB97;
										Eq_28732 r10_1297;
										r10_1297.u0 = (uint64) rcx->u0.t0008.u0;
										uint32 r8d_1304 = (uint32) *(r10_1297 + rcx_1280);
										if ((&rcx->u0)[1] != 0x00)
											r8d_1304 = r8d_1304 >> 0x18 | r8d_1304 >> 0x08 & 0xFF00 | (r8d_1304 & 0xFF00) << 0x08 | r8d_1304 << 0x18;
										if (r8d_1304 != 0x01)
										{
l000000018000F84F:
											uint64 r9_1362 = (uint64) rcx->u0.t0008.u0;
											if ((word32) r9_1362 == 0x00 || fn0000000180005100(rcx, rdx, dwLoc0264_2209, (word32) r9_1362, r15d_1384, &tLoc0228) != 0x00)
											{
												if (r13d_1442 != 0x00)
													rcx->u0.t0008.u0 = (int32) r13d_1442;
												Eq_137 r9_1468;
												r9_1468.u0 = rcx->u0.t0000.u0;
												if (r9_1468 != 0x00)
												{
													Eq_1342 r8d_1481;
													r8d_1481.u0 = rcx->u0.t000C.u0;
													if (rcx->u0.t0008.u0 + 0x04 <= r8d_1481)
													{
														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
														if (rcx->u0.t0008.u0 + 0x04 <= r8d_1481)
														{
															rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
															uint64 r11_1497 = (uint64) rcx->u0.t0008.u0;
															uint64 r10_1501 = (uint64) r9_1468.u2[(uint64) ((word32) r11_1497 - 0x04)];
															uint32 r10d_1509 = (word32) r10_1501;
															Eq_1342 edi_1504 = (&rcx->u0)[1];
															if (edi_1504 != 0x00)
																r10_1501 = (uint64) (r10d_1509 >> 0x18 | r10d_1509 >> 0x08 & 0xFF00 | (r10d_1509 & 0xFF00) << 0x08 | r10d_1509 << 0x18);
															Eq_1342 r10d_1708 = (word32) r10_1501;
															if ((word32) r11_1497 + 0x04 <= r8d_1481)
															{
																rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																if (rcx->u0.t0008.u0 + 0x04 <= r8d_1481)
																{
																	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																	if (rcx->u0.t0008.u0 + 0x04 <= r8d_1481)
																	{
																		rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																		if (rcx->u0.t0008.u0 + 0x04 <= r8d_1481)
																		{
																			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																			if (rcx->u0.t0008.u0 + 0x04 <= r8d_1481)
																			{
																				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																				if (rcx->u0.t0008.u0 + 0x04 <= r8d_1481)
																				{
																					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																					if (rcx->u0.t0008.u0 + 0x04 <= r8d_1481)
																					{
																						rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																						if (rcx->u0.t0008.u0 + 0x04 <= r8d_1481)
																						{
																							rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																							if (rcx->u0.t0008.u0 + 0x04 <= r8d_1481)
																							{
																								rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																								uint32 r9d_1653 = (uint32) r9_1468.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
																								if (edi_1504 != 0x00)
																									r9d_1653 = r9d_1653 >> 0x18 | r9d_1653 >> 0x08 & 0xFF00 | (r9d_1653 & 0xFF00) << 0x08 | r9d_1653 << 0x18;
																								Eq_29003 tLoc0158;
																								fn0000000180005050(rcx, r10d_1708, &tLoc0158);
																								Eq_137 rdx_1724;
																								rdx_1724.u0 = rcx->u0.t0000.u0;
																								if (rdx_1724 != 0x00)
																								{
																									Eq_1342 r10d_1737;
																									r10d_1737.u0 = rcx->u0.t000C.u0;
																									if (rcx->u0.t0008.u0 + 0x04 <= r10d_1737)
																									{
																										rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																										Eq_1342 r8d_1757 = rdx_1724.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
																										if ((&rcx->u0)[1] != 0x00)
																											r8d_1757 = r8d_1757 >> 0x18 | r8d_1757 >> 0x08 & 0xFF00 | (r8d_1757 & 0xFF00) << 0x08 | r8d_1757 << 0x18;
																										if (r8d_1757 != 0x00)
																											rcx->u0.t0008.u0 = (int32) r8d_1757;
																										if (rcx->u0.t0008.u0 + 0x04 <= r10d_1737)
																										{
																											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
																											uint32 r15d_1832 = SLICE(r9d_1653 *64 ~0x55555554, word32, 32) >> 0x01;
																											if (r15d_1832 == 0x00 || fn0000000180001E80(rdx, (uint64) r15d_1832) != 0x00)
																											{
																												uint32 esi_2040 = 0x00;
																												if (r15d_1832 != 0x00)
																												{
																													ptr64 r10_1891 = null;
																													do
																													{
																														Eq_137 rdx_1894;
																														rdx_1894.u0 = rcx->u0.t0000.u0;
																														if (rdx_1894 == 0x00)
																															goto l000000018000FB97;
																														Eq_1342 r11d_1907;
																														r11d_1907.u0 = rcx->u0.t000C.u0;
																														if (rcx->u0.t0008.u0 + 0x02 > r11d_1907)
																															goto l000000018000FB97;
																														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																														uint64 r9_1913 = (uint64) rcx->u0.t0008.u0;
																														cu16 r8w_1925 = (cu16) rdx_1894.u2[(uint64) ((word32) r9_1913 - 0x02)];
																														Eq_1342 edi_1920 = (&rcx->u0)[1];
																														if (edi_1920 != 0x00)
																															r8w_1925 = r8w_1925 >> 0x08 | r8w_1925 << 0x08;
																														if ((word32) r9_1913 + 0x02 > r11d_1907)
																															goto l000000018000FB97;
																														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																														uint64 r14_1947 = (uint64) rcx->u0.t0008.u0;
																														cu16 r9w_1958 = (cu16) rdx_1894.u2[(uint64) ((word32) r14_1947 - 0x02)];
																														if (edi_1920 != 0x00)
																															r9w_1958 = r9w_1958 >> 0x08 | r9w_1958 << 0x08;
																														if ((word32) r14_1947 + 0x02 > r11d_1907)
																															goto l000000018000FB97;
																														rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x02);
																														cu16 dx_1992 = (cu16) rdx_1894.u2[(uint64) (rcx->u0.t0008.u0 + ~0x01)];
																														if (edi_1920 != 0x00)
																															dx_1992 = dx_1992 >> 0x08 | dx_1992 << 0x08;
																														struct Eq_1145 * rcx_2007 = rdx->ptr0008;
																														if (rcx_2007 != null)
																														{
																															*((char *) &rcx_2007->dw0000 + (r10_1891 + 4)) = (struct Eq_1145 *) (word32) r8w_1925;
																															*((char *) &rdx->ptr0008->dw0000 + (r10_1891 + 8)) = (struct Eq_1145 *) (word32) r9w_1958;
																															*((char *) &rdx->ptr0008->dw0000 + (r10_1891 + 0x0C)) = (struct Eq_1145 *) (word32) dx_1992;
																														}
																														++esi_2040;
																														r10_1891 += 0x14;
																													} while (esi_2040 < r15d_1832);
																												}
																												uint64 rax_2061 = (uint64) rcx->u0.t0008.u0;
																												uint64 rcx_2067 = (uint64) ((word32) rax_2061 & ~0x03);
																												Eq_1342 ecx_2076 = (word32) rcx_2067;
																												Eq_1342 eax_2077 = (word32) rcx_2067 + 0x04;
																												if (((byte) rax_2061 & 0x03) <= 0x00)
																													eax_2077 = ecx_2076;
																												rcx->u0.t0008.u0 = (int32) eax_2077;
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
											goto l000000018000FB97;
										}
										if ((word32) r10_1297 + 0x04 <= r9d_1293)
										{
											rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
											goto l000000018000F84F;
										}
									}
								}
							}
						}
					}
l000000018000FB97:
					fn00000001800235AC(0x0A);
l000000018000FBB9:
					word64 qwLoc02A0;
					fn0000000180023580(rax_30 ^ fp - 664, qwLoc02A0);
					return;
				}
			}
		}
	}
	goto l000000018000FBB9;
}

// 000000018000FBF0: Register word32 fn000000018000FBF0(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_6034) rdx, Register Eq_1756 r8)
// Called from:
//      fn0000000180003F40
word32 fn000000018000FBF0(union Eq_3676 * rcx, struct Eq_6034 * rdx, Eq_1756 r8)
{
	ptr64 fp;
	ui64 rax_15 = g_qw80030008 ^ fp - 1000;
	word64 qwLoc03F0;
	if (r8 == 0x00 || ((rcx->u0).t0000).u0 == 0x00)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	Eq_1342 ecx_36;
	ecx_36.u0 = rcx->u0.t000C.u0;
	Eq_1342 eax_35 = rcx->u0.t0008.u0 + 0x04;
	if (eax_35 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) eax_35;
	if ((word64) eax_35 + 4 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 eax_89;
	eax_89.u0 = rdx->t0008.u0;
	if (eax_89 == 0x00)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) eax_89;
	int32 r8d_140 = rdx->dw0010;
	if ((word64) eax_89 + 4 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) ((word64) eax_89 + 4);
	if ((word64) eax_89 + 8 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	if (rcx->u0.t0008.u0 + 0x04 > ecx_36)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 eax_196;
	eax_196.u0 = rcx->u0.t0008.u0;
	int32 edx_177 = 0x00;
	if (r8d_140 > 0x05)
	{
		do
		{
			if (rcx->u0.t0008.u0 + 0x04 > ecx_36)
				goto l000000018000FF68;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			++edx_177;
			eax_196.u0 = rcx->u0.t0008.u0;
		} while (edx_177 < r8d_140 - 0x05);
	}
	Eq_1342 edi_199;
	edi_199.u0 = rdx->t001C.u0;
	Eq_29547 tLoc0368;
	if (eax_196 < edi_199)
	{
		do
		{
			if (fn0000000180004F90(rcx, &tLoc0368) == 0x00)
				goto l000000018000FF60;
		} while (rcx->u0.t0008.u0 < edi_199);
	}
	uint64 rdx_237 = (uint64) rdx->t001C.u0;
	Eq_29489 tLoc03B8;
	tLoc03B8.qw0000 = 0x00;
	tLoc03B8.qw0008 = 0x00;
	tLoc03B8.qw0010 = 0x00;
	tLoc03B8.qw0018 = 0x00;
	tLoc03B8.qw0020 = 0x00;
	tLoc03B8.qw0028 = 0x00;
	tLoc03B8.qw0030 = 0x00;
	tLoc03B8.qw0038 = 0x00;
	tLoc03B8.qw0040 = 0x00;
	tLoc03B8.qw0048 = 0x00;
	if ((word32) rdx_237 != 0x00 && fn000000018000FFA0(rcx, (word32) rdx_237, &tLoc03B8) != 0x00)
	{
		Eq_1342 eax_298;
		eax_298.u0 = tLoc03B8.t001C.u0;
		g_dw800306F4 = 0x01;
		if (eax_298 != 0x00)
		{
			Eq_1342 r14d_306;
			r14d_306.u0 = tLoc03B8.t0018.u0;
			rcx->u0.t0008.u0 = (int32) eax_298;
			if (r14d_306 != 0x00 && fn0000000180001FD0(&g_t800306F0, r14d_306) == 0x00)
				goto l000000018000FF4A;
			Eq_1342 esi_487;
			esi_487.u0 = 0x00;
			if (r14d_306 != 0x00)
			{
				do
				{
					memset(&tLoc0368, 0, 0x0104);
					Eq_137 r8_344;
					r8_344.u0 = rcx->u0.t0000.u0;
					if (r8_344 == 0x00)
						goto l000000018000FF4A;
					Eq_1342 r9d_357;
					r9d_357.u0 = rcx->u0.t000C.u0;
					if (rcx->u0.t0008.u0 + 0x04 > r9d_357)
						goto l000000018000FF4A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_363 = (uint64) rcx->u0.t0008.u0;
					uint64 rdx_369 = (uint64) r8_344.u2[(uint64) ((word32) r11_363 - 0x04)];
					Eq_1342 r10d_370 = (&rcx->u0)[1];
					Eq_1342 edx_375 = (word32) rdx_369;
					word32 rdx_32_32_437 = SLICE(rdx_369, word32, 32);
					if (r10d_370 != 0x00)
						rdx_369 = SEQ(rdx_32_32_437, __bswap<word32>(edx_375));
					if ((word32) r11_363 + 0x04 > r9d_357)
						goto l000000018000FF4A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					uint64 r11_389 = (uint64) rcx->u0.t0008.u0;
					Eq_1342 edi_400 = r8_344.u2[(uint64) ((word32) r11_389 - 0x04)];
					if (r10d_370 != 0x00)
						edi_400 = __bswap<word32>(edi_400);
					if ((word32) r11_389 + 0x04 > r9d_357)
						goto l000000018000FF4A;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					Eq_1342 r9d_426 = r8_344.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
					if (r10d_370 != 0x00)
						r9d_426 = __bswap<word32>(r9d_426);
					fn0000000180005050(rcx, (word32) rdx_369, &tLoc0368);
					Eq_29711 tLoc0258;
					fn0000000180005050(rcx, edi_400, &tLoc0258);
					Eq_29715 tLoc0148;
					fn0000000180005050(rcx, r9d_426, &tLoc0148);
					struct Eq_1702 * r9_479 = g_ptr80030700;
					if (r9_479 != null)
						MultiByteToWideChar(0x00, 0x01, &tLoc0368, -1, r9_479 + (int64) esi_487 *s 0x0208, 0xFF);
					esi_487.u2 = (word64) esi_487 + 1;
				} while (esi_487 < r14d_306);
			}
		}
		Eq_1342 eax_533;
		eax_533.u0 = tLoc03B8.t0024.u0;
		if (eax_533 != 0x00)
		{
			Eq_137 rdx_541;
			rdx_541.u0 = rcx->u0.t0000.u0;
			rcx->u0.t0008.u0 = (int32) eax_533;
			int32 ecx_568;
			for (ecx_568 = 0x00; ecx_568 < 0x20; ++ecx_568)
			{
				if (rdx_541 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
					goto l000000018000FF4A;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			}
		}
		if (fn000000018000D570(rcx, (uint64) tLoc03B8.dw0028, tLoc03B8.t002C.u0) != 0x00 && (fn000000018000E400(rcx, (uint64) tLoc03B8.dw0030, (tLoc03B8.t0034).u0) != 0x00 && fn000000018000B660(rcx, (tLoc03B8.t0044).u0) != 0x00))
		{
l000000018000FF60:
l000000018000FF68:
			return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
		}
	}
l000000018000FF4A:
	goto l000000018000FF4D;
}

// 000000018000FFA0: Register word32 fn000000018000FFA0(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_29556) r8)
// Called from:
//      fn000000018000FBF0
word32 fn000000018000FFA0(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_29556 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_8 = g_qw80030008 ^ fp - 440;
	Eq_137 r9_11;
	r9_11.u0 = rcx->u0.t0000.u0;
	rcx->u0.t0008.u0 = (int32) edx;
	word64 qwLoc01C0;
	if (r9_11 != 0x00 && (word64) edx + 4 <= ((rcx->u0).t000C).u0)
	{
		rcx->u0.t0008.u0 = (int32) ((word64) edx + 4);
		uint64 rdx_32 = (uint64) r9_11.u2[(uint64) edx];
		Eq_1342 edx_34 = (word32) rdx_32;
		word32 rdx_32_32_39 = SLICE(rdx_32, word32, 32);
		if ((&rcx->u0)[1] != 0x00)
			rdx_32 = SEQ(rdx_32_32_39, __bswap<word32>(edx_34));
		Eq_29855 tLoc0158;
		fn0000000180005050(rcx, (word32) rdx_32, &tLoc0158);
		Eq_137 r9_53;
		r9_53.u0 = rcx->u0.t0000.u0;
		int32 edx_101 = 0x00;
		int32 r8d_1105;
		Eq_1342 eax_1106;
		for (r8d_1105 = 0x00; r8d_1105 < 0x06; ++r8d_1105)
		{
			if (r9_53 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l0000000180010554;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			eax_1106.u0 = rcx->u0.t0008.u0;
		}
		Eq_1342 r8d_1107;
		r8d_1107.u0 = rcx->u0.t000C.u0;
		do
		{
			if (r9_53 == 0x00)
				goto l0000000180010554;
			eax_1106.u2 = (word64) eax_1106 + 4;
			if (eax_1106 > r8d_1107)
				goto l0000000180010554;
			rcx->u0.t0008.u0 = (int32) eax_1106;
			++edx_101;
		} while (edx_101 < 0x13);
		if (r9_53 != 0x00 && (word64) eax_1106 + 4 <= r8d_1107)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_121 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_128 = r9_53.u2[(uint64) ((word32) r10_121 - 0x04)];
			word32 r10d_142 = (word32) r10_121;
			Eq_1342 r11d_132 = (&rcx->u0)[1];
			Eq_1342 dwLoc0194_1112 = eax_128;
			if (r11d_132 != 0x00)
				dwLoc0194_1112 = __bswap<word32>(eax_128);
			if ((word32) r10_121 + 0x04 <= r8d_1107)
			{
				uint64 r10_156 = (uint64) (r10d_142 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_156;
				Eq_1342 r13d_1016 = r9_53.u2[(uint64) ((word32) r10_156 - 0x04)];
				if (r11d_132 != 0x00)
					r13d_1016 = __bswap<word32>(r13d_1016);
				if ((word32) r10_156 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_190 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_196 = r9_53.u2[(uint64) ((word32) r10_190 - 0x04)];
				word32 r10d_209 = (word32) r10_190;
				Eq_1342 dwLoc0190_1116 = eax_196;
				if (r11d_132 != 0x00)
					dwLoc0190_1116 = __bswap<word32>(eax_196);
				if ((word32) r10_190 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_223 = (uint64) (r10d_209 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_223;
				Eq_1342 r15d_1022 = r9_53.u2[(uint64) ((word32) r10_223 - 0x04)];
				if (r11d_132 != 0x00)
					r15d_1022 = __bswap<word32>(r15d_1022);
				if ((word32) r10_223 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_259 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_265 = r9_53.u2[(uint64) ((word32) r10_259 - 0x04)];
				word32 r10d_278 = (word32) r10_259;
				Eq_1342 dwLoc018C_1120 = eax_265;
				if (r11d_132 != 0x00)
					dwLoc018C_1120 = __bswap<word32>(eax_265);
				if ((word32) r10_259 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_286 = (uint64) (r10d_278 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_286;
				Eq_1342 eax_295 = r9_53.u2[(uint64) ((word32) r10_286 - 0x04)];
				Eq_1342 dwLoc0198_1123 = eax_295;
				if (r11d_132 != 0x00)
					dwLoc0198_1123 = __bswap<word32>(eax_295);
				if ((word32) r10_286 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_316 = (uint64) rcx->u0.t0008.u0;
				word32 r10d_322 = (word32) r10_316;
				if ((word32) r10_316 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_324 = (uint64) (r10d_322 + 0x04);
				Eq_1342 r10d_325 = (word32) r10_324;
				rcx->u0.t0008.u0 = (int32) r10d_325;
				Eq_1342 eax_334 = r9_53.u2[(uint64) ((word32) r10_324 - 0x04)];
				Eq_1342 dwLoc0188_1126 = eax_334;
				if (r11d_132 != 0x00)
					dwLoc0188_1126 = __bswap<word32>(eax_334);
				if ((word32) r10_324 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_361 = (uint64) rcx->u0.t0008.u0;
				word32 r10d_394 = (word32) r10_361;
				Eq_1342 r14d_1029 = r9_53.u2[(uint64) ((word32) r10_361 - 0x04)];
				if (r11d_132 != 0x00)
					r14d_1029 = __bswap<word32>(r14d_1029);
				if ((word32) r10_361 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_396 = (uint64) (r10d_394 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_396;
				if ((word32) r10_396 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_408 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_414 = r9_53.u2[(uint64) ((word32) r10_408 - 0x04)];
				word32 r10d_427 = (word32) r10_408;
				Eq_1342 dwLoc0184_1129 = eax_414;
				if (r11d_132 != 0x00)
					dwLoc0184_1129 = __bswap<word32>(eax_414);
				if ((word32) r10_408 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_441 = (uint64) (r10d_427 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_441;
				Eq_1342 ebp_1033 = r9_53.u2[(uint64) ((word32) r10_441 - 0x04)];
				if (r11d_132 != 0x00)
					ebp_1033 = __bswap<word32>(ebp_1033);
				if ((word32) r10_441 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_483 = (uint64) rcx->u0.t0008.u0;
				word32 edx_489 = (word32) rdx_483;
				if ((word32) rdx_483 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_491 = (uint64) (edx_489 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_491;
				if ((word32) rdx_491 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_502 = (uint64) rcx->u0.t0008.u0;
				word32 edx_508 = (word32) rdx_502;
				if ((word32) rdx_502 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_510 = (uint64) (edx_508 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_510;
				if ((word32) rdx_510 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_521 = (uint64) rcx->u0.t0008.u0;
				word32 edx_527 = (word32) rdx_521;
				if ((word32) rdx_521 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_529 = (uint64) (edx_527 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_529;
				if ((word32) rdx_529 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_540 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_546 = r9_53.u2[(uint64) ((word32) r10_540 - 0x04)];
				word32 r10d_559 = (word32) r10_540;
				Eq_1342 dwLoc0180_1133 = eax_546;
				if (r11d_132 != 0x00)
					dwLoc0180_1133 = __bswap<word32>(eax_546);
				if ((word32) r10_540 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_573 = (uint64) (r10d_559 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_573;
				Eq_1342 esi_1036 = r9_53.u2[(uint64) ((word32) r10_573 - 0x04)];
				if (r11d_132 != 0x00)
					esi_1036 = __bswap<word32>(esi_1036);
				if ((word32) r10_573 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_617 = (uint64) rcx->u0.t0008.u0;
				word32 edx_623 = (word32) rdx_617;
				if ((word32) rdx_617 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_625 = (uint64) (edx_623 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_625;
				if ((word32) rdx_625 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_636 = (uint64) rcx->u0.t0008.u0;
				word32 edx_642 = (word32) rdx_636;
				if ((word32) rdx_636 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_644 = (uint64) (edx_642 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_644;
				if ((word32) rdx_644 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_655 = (uint64) rcx->u0.t0008.u0;
				word32 edx_661 = (word32) rdx_655;
				if ((word32) rdx_655 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_663 = (uint64) (edx_661 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_663;
				if ((word32) rdx_663 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdi_698 = (uint64) rcx->u0.t0008.u0;
				word32 edi_731 = (word32) rdi_698;
				Eq_1342 r12d_1046 = r9_53.u2[(uint64) ((word32) rdi_698 - 0x04)];
				if (r11d_132 != 0x00)
					r12d_1046 = __bswap<word32>(r12d_1046);
				if ((word32) rdi_698 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdi_739 = (uint64) (edi_731 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdi_739;
				uint64 r10_747 = (uint64) r9_53.u2[(uint64) ((word32) rdi_739 - 0x04)];
				Eq_1342 r10d_753 = (word32) r10_747;
				word32 r10_32_32_1587 = SLICE(r10_747, word32, 32);
				if (r11d_132 != 0x00)
					r10d_753 = __bswap<word32>(r10d_753);
				if ((word32) rdi_739 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_767 = (uint64) rcx->u0.t0008.u0;
				word32 edx_773 = (word32) rdx_767;
				if ((word32) rdx_767 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_775 = (uint64) (edx_773 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_775;
				if ((word32) rdx_775 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_786 = (uint64) rcx->u0.t0008.u0;
				word32 edx_792 = (word32) rdx_786;
				if ((word32) rdx_786 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_794 = (uint64) (edx_792 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_794;
				if ((word32) rdx_794 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_805 = (uint64) rcx->u0.t0008.u0;
				if ((word32) rdx_805 + 0x04 > r8d_1107)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) ((word32) rdx_805 + 0x04);
				if (r13d_1016 != 0x00)
					r13d_1016.u2 = (word64) r13d_1016 + r10d_142;
				Eq_1342 eax_847 = dwLoc0198_1123;
				if (dwLoc0198_1123 != 0x00)
					eax_847.u2 = (word64) dwLoc0198_1123 + r10d_278;
				if (r15d_1022 != 0x00)
					r15d_1022.u2 = (word64) r15d_1022 + r10d_209;
				if (r14d_1029 != 0x00)
					r14d_1029 += r10d_325;
				if (ebp_1033 != 0x00)
					ebp_1033.u2 = (word64) ebp_1033 + r10d_427;
				if (esi_1036 != 0x00)
					esi_1036.u2 = (word64) esi_1036 + r10d_559;
				uint64 r10_1736 = SEQ(r10_32_32_1587, r10d_753);
				if (r10d_753 != 0x00)
					r10_1736 = (uint64) ((word64) r10d_753 + edi_731);
				r8->t002C.u0 = (int32) eax_847;
				r8->t0030.u0 = (int32) dwLoc0188_1126;
				r8->t0018.u0 = (int32) dwLoc0194_1112;
				r8->t0038.u0 = (int32) dwLoc0184_1129;
				r8->t0020.u0 = (int32) dwLoc0190_1116;
				r8->t0040.u0 = (int32) dwLoc0180_1133;
				r8->t001C.u0 = (int32) r13d_1016;
				r8->t0024.u0 = (int32) r15d_1022;
				r8->t0028.u0 = (int32) dwLoc018C_1120;
				r8->t0034.u0 = (int32) r14d_1029;
				r8->t003C.u0 = (int32) ebp_1033;
				r8->t0044.u0 = (int32) esi_1036;
				r8->t0048.u0 = (int32) r12d_1046;
				r8->dw004C = (word32) r10_1736;
				return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
			}
		}
	}
l0000000180010554:
	return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
}

// 0000000180010580: Register word32 fn0000000180010580(Register (ptr64 Eq_3676) rcx, Register (ptr64 Eq_5947) rdx)
// Called from:
//      fn0000000180003F40
word32 fn0000000180010580(union Eq_3676 * rcx, struct Eq_5947 * rdx)
{
	Eq_30683 fp;
	ui64 rax_15 = g_qw80030008 ^ fp - 1000;
	Eq_137 r11_18;
	r11_18.u0 = rcx->u0.t0000.u0;
	word64 qwLoc03F0;
	if (r11_18 == 0x00)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	uint64 rcx_32 = (uint64) (rcx->u0.t0008.u0 + 0x04);
	Eq_1342 r10d_34;
	r10d_34.u0 = rcx->u0.t000C.u0;
	Eq_1342 ecx_33 = (word32) rcx_32;
	if (ecx_33 > r10d_34)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) ecx_33;
	if ((word32) rcx_32 + 0x04 > r10d_34)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) ((word32) rcx_32 + 0x04);
	uint64 rax_48 = (uint64) rdx->dw0008;
	Eq_1342 eax_49 = (word32) rax_48;
	if (eax_49 == 0x00)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) eax_49;
	Eq_1342 ecx_59 = (word32) rax_48 + 0x04;
	int32 edx_97 = rdx->dw0010;
	if (ecx_59 > r10d_34)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) ecx_59;
	uint64 rcx_64 = (uint64) ((word64) ecx_59 + 4);
	Eq_1342 ecx_65 = (word32) rcx_64;
	if (ecx_65 > r10d_34)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	rcx->u0.t0008.u0 = (int32) ecx_65;
	if ((word32) rcx_64 + 0x04 > r10d_34)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	uint64 rcx_75 = (uint64) ((word64) ecx_65 + 4);
	rcx->u0.t0008.u0 = (int32) (word32) rcx_75;
	if ((word32) rcx_75 + 0x04 > r10d_34)
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	Eq_1342 eax_109 = (word32) rcx_75 + 0x04;
	rcx->u0.t0008.u0 = (int32) eax_109;
	Eq_30778 r12_1716;
	r12_1716.u1 = 0x00;
	int32 ecx_1133 = 0x00;
	if (edx_97 > 0x04)
	{
		do
		{
			eax_109.u2 = (word64) eax_109 + 4;
			if (eax_109 > r10d_34)
				goto l00000001800107A1;
			rcx->u0.t0008.u0 = (int32) eax_109;
			++ecx_1133;
		} while (ecx_1133 < edx_97 - 0x04);
	}
	Eq_1342 esi_142;
	esi_142.u0 = rdx->t001C.u0;
	Eq_30900 tLoc0368;
	if (eax_109 < esi_142)
	{
		r12_1716.u0 = 0x00;
		Eq_1342 ecx_274;
		do
		{
			Eq_1342 r12d_172 = (word32) r12_1716;
			word32 r12_32_32_181 = SLICE(r12_1716, word32, 32);
			byte r12b_242 = (byte) r12d_172;
			word24 r12d_24_8_349 = SLICE(r12d_172, word24, 8);
			if (fp == 872 || ((rcx->u0).t0008).u0 + 0x04 > r10d_34)
			{
l0000000180010797:
				goto l0000000180010799;
			}
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			Eq_1342 r9d_175 = r11_18.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
			if ((&rcx->u0)[1] != r12d_172)
				r9d_175 = __bswap<word32>(r9d_175);
			Eq_1342 r8d_1153 = r12d_172;
			Eq_30778 rdx_183 = r12_1716;
			word56 r12_56_8_350 = SEQ(r12_32_32_181, r12d_24_8_349);
			if (r9d_175 != 0x00)
			{
				do
				{
					if (rcx->u0.t0008.u0 + 0x01 > r10d_34)
						goto l0000000180010797;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x01);
					byte al_219 = r11_18.u0[(uint64) (rcx->u0.t0008.u0 - 0x01)];
					if (rdx_183 < 0x0104)
						*(&tLoc0368 + rdx_183) = (word64) al_219;
					if (al_219 == 0x00)
						break;
					r8d_1153.u2 = (word64) r8d_1153 + 1;
					rdx_183 = (word64) rdx_183 + 1;
				} while (r8d_1153 < r9d_175);
				r12_1716 = SEQ(r12_56_8_350, r12b_242);
				if (rdx_183 < 0x0104)
					goto l0000000180010700;
			}
			else
			{
l0000000180010700:
				*(&tLoc0368 + rdx_183) = (word64) r12b_242;
				r12_1716 = SEQ(r12_56_8_350, r12b_242);
			}
			uint64 rax_261 = (uint64) rcx->u0.t0008.u0;
			ecx_274 = (word32) rax_261 & ~0x03;
			if (((byte) rax_261 & 0x03) > 0x00)
				ecx_274 = (word32) ecx_274.u1 + 4;
			rcx->u0.t0008.u0 = (int32) ecx_274;
		} while (ecx_274 < esi_142);
	}
	uint64 rdx_305 = (uint64) rdx->t001C.u0;
	Eq_1753 eax_364;
	eax_364.u0 = g_t800306F0.u0;
	Eq_30807 tLoc03B8;
	tLoc03B8.t0000.u0 = (int64) r12_1716;
	tLoc03B8.t0008.u0 = (int64) r12_1716;
	tLoc03B8.t0010.u0 = (int64) r12_1716;
	tLoc03B8.t0018.u0 = (int64) r12_1716;
	tLoc03B8.t0020.u0 = (int64) r12_1716;
	tLoc03B8.t0028.u0 = (int64) r12_1716;
	tLoc03B8.t0030.u0 = (int64) r12_1716;
	tLoc03B8.t0038.u0 = (int64) r12_1716;
	tLoc03B8.t0040.u0 = (int64) r12_1716;
	tLoc03B8.t0048.u0 = (int64) r12_1716;
	Eq_1342 r12d_478 = (word32) r12_1716;
	word32 edx_371 = (word32) rdx_305;
	switch (eax_364)
	{
	case 868:
		if (edx_371 == 0x00 || fn0000000180010B10(rcx, (word32) rdx_305, &tLoc03B8) == 0x00)
			goto l0000000180010AEB;
		break;
	case 884:
		if (edx_371 == 0x00 || fn0000000180011770(rcx, (word32) rdx_305, &tLoc03B8) == 0x00)
			goto l0000000180010AEB;
		break;
	case 0x037D:
		if (edx_371 == 0x00 || fn0000000180011D40(rcx, (word32) rdx_305, &tLoc03B8) == 0x00)
			goto l0000000180010AEB;
		break;
	default:
		if (edx_371 == 0x00 || fn0000000180011140(rcx, (word32) rdx_305, &tLoc03B8) == 0x00)
			goto l0000000180010AEB;
		break;
	}
	Eq_1342 eax_470;
	eax_470.u0 = tLoc03B8.t0014.u0;
	Eq_31114 tLoc0258;
	Eq_31118 tLoc0148;
	if (eax_470 != 0x00)
	{
		Eq_1342 r14d_483;
		r14d_483.u0 = tLoc03B8.t0010.u0;
		rcx->u0.t0008.u0 = (int32) eax_470;
		Eq_1342 esi_1155 = r12d_478;
		if (r14d_483 != 0x00)
		{
			Eq_137 r8_488;
			r8_488.u0 = rcx->u0.t0000.u0;
			do
			{
				if (r8_488 == 0x00)
					goto l0000000180010AEB;
				Eq_1342 r9d_504;
				r9d_504.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r9d_504)
					goto l0000000180010AEB;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_510 = (uint64) rcx->u0.t0008.u0;
				word32 edx_525 = (word32) rdx_510;
				Eq_1342 r11d_517 = (&rcx->u0)[1];
				Eq_1342 r10d_522 = r8_488.u2[(uint64) ((word32) rdx_510 - 0x04)];
				if (r11d_517 != 0x00)
					r10d_522 = __bswap<word32>(r10d_522);
				uint64 rdx_527 = (uint64) (edx_525 + 0x04);
				Eq_1342 edx_528 = (word32) rdx_527;
				if (edx_528 > r9d_504)
					goto l0000000180010AEB;
				rcx->u0.t0008.u0 = (int32) edx_528;
				Eq_1342 edi_544 = r8_488.u2[(uint64) ((word32) rdx_527 - 0x04)];
				if (r11d_517 != 0x00)
					edi_544 = __bswap<word32>(edi_544);
				if ((word32) rdx_527 + 0x04 > r9d_504)
					goto l0000000180010AEB;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 r9d_570 = r8_488.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if (r11d_517 != 0x00)
					r9d_570 = __bswap<word32>(r9d_570);
				fn0000000180005050(rcx, r10d_522, &tLoc0368);
				fn0000000180005050(rcx, edi_544, &tLoc0258);
				fn0000000180005050(rcx, r9d_570, &tLoc0148);
				r8_488.u0 = rcx->u0.t0000.u0;
				Eq_1342 ecx_1154 = r12d_478;
				do
				{
					if (r8_488 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
						goto l0000000180010AEB;
					rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
					ecx_1154 = (word32) ecx_1154.u0 + 1;
				} while (ecx_1154 < 0x09);
				esi_1155.u2 = (word64) esi_1155 + 1;
			} while (esi_1155 < r14d_483);
		}
	}
	Eq_1342 eax_680;
	eax_680.u0 = tLoc03B8.t001C.u0;
	if (eax_680 != 0x00)
	{
		Eq_1342 r14d_689;
		r14d_689.u0 = tLoc03B8.t0018.u0;
		rcx->u0.t0008.u0 = (int32) eax_680;
		if (r14d_689 != 0x00 && fn0000000180001FD0(&g_t800306F0, r14d_689) == 0x00)
			goto l0000000180010AEB;
		Eq_1342 edi_1156 = r12d_478;
		if (r14d_689 != 0x00)
		{
			do
			{
				memset(&tLoc0368, 0, 0x0104);
				Eq_137 r8_729;
				r8_729.u0 = rcx->u0.t0000.u0;
				if (r8_729 == 0x00)
					goto l0000000180010AEB;
				Eq_1342 r9d_742;
				r9d_742.u0 = rcx->u0.t000C.u0;
				if (rcx->u0.t0008.u0 + 0x04 > r9d_742)
					goto l0000000180010AEB;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_748 = (uint64) rcx->u0.t0008.u0;
				word32 edx_763 = (word32) rdx_748;
				Eq_1342 r11d_755 = (&rcx->u0)[1];
				Eq_1342 r10d_760 = r8_729.u2[(uint64) ((word32) rdx_748 - 0x04)];
				if (r11d_755 != 0x00)
					r10d_760 = __bswap<word32>(r10d_760);
				uint64 rdx_765 = (uint64) (edx_763 + 0x04);
				Eq_1342 edx_766 = (word32) rdx_765;
				if (edx_766 > r9d_742)
					goto l0000000180010AEB;
				rcx->u0.t0008.u0 = (int32) edx_766;
				Eq_1342 esi_782 = r8_729.u2[(uint64) ((word32) rdx_765 - 0x04)];
				if (r11d_755 != 0x00)
					esi_782 = __bswap<word32>(esi_782);
				if ((word32) rdx_765 + 0x04 > r9d_742)
					goto l0000000180010AEB;
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				Eq_1342 r9d_808 = r8_729.u2[(uint64) (rcx->u0.t0008.u0 + ~0x03)];
				if (r11d_755 != 0x00)
					r9d_808 = __bswap<word32>(r9d_808);
				fn0000000180005050(rcx, r10d_760, &tLoc0368);
				fn0000000180005050(rcx, esi_782, &tLoc0148);
				fn0000000180005050(rcx, r9d_808, &tLoc0258);
				struct Eq_1702 * r9_861 = g_ptr80030700;
				if (r9_861 != null)
					MultiByteToWideChar(0x00, 0x01, &tLoc0368, -1, r9_861 + (int64) edi_1156 *s 0x0208, 0xFF);
				edi_1156.u2 = (word64) edi_1156 + 1;
			} while (edi_1156 < r14d_689);
		}
	}
	Eq_1342 eax_915;
	eax_915.u0 = tLoc03B8.t0024.u0;
	if (eax_915 != 0x00)
	{
		Eq_137 rdx_923;
		rdx_923.u0 = rcx->u0.t0000.u0;
		rcx->u0.t0008.u0 = (int32) eax_915;
		Eq_1342 ecx_1157 = r12d_478;
		do
		{
			if (rdx_923 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l0000000180010AEB;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			ecx_1157 = (word32) ecx_1157.u0 + 1;
		} while (ecx_1157 < 0x40);
	}
	if (fn0000000180012640(rcx, (uint64) tLoc03B8.dw0028, tLoc03B8.t002C.u0) != 0x00 && (fn0000000180012300(rcx, (uint64) tLoc03B8.dw0030, (tLoc03B8.t0034).u0) != 0x00 && (fn0000000180014F10(rcx, tLoc03B8.dw0038, (tLoc03B8.t003C).u0) != 0x00 && fn0000000180014610(rcx, tLoc03B8.dw0044) != 0x00)))
	{
l0000000180010799:
l00000001800107A1:
		return (word32) fn0000000180023580(rax_15 ^ fp - 1000, qwLoc03F0);
	}
l0000000180010AEB:
	goto l0000000180010AEE;
}

// 0000000180010B10: Register word32 fn0000000180010B10(Register (ptr64 Eq_3676) rcx, Register Eq_1342 edx, Register (ptr64 Eq_30937) r8)
// Called from:
//      fn0000000180010580
word32 fn0000000180010B10(union Eq_3676 * rcx, Eq_1342 edx, struct Eq_30937 * r8)
{
	ptr64 fp;
	word64 rdx;
	edx = (word32) rdx;
	ui64 rax_8 = g_qw80030008 ^ fp - 440;
	rcx->u0.t0008.u0 = (int32) edx;
	Eq_137 r8_15;
	r8_15.u0 = rcx->u0.t0000.u0;
	word64 qwLoc01C0;
	if (r8_15 != 0x00 && (word64) edx + 4 <= ((rcx->u0).t000C).u0)
	{
		rcx->u0.t0008.u0 = (int32) ((word64) edx + 4);
		uint64 rdx_32 = (uint64) r8_15.u2[(uint64) edx];
		Eq_1342 edx_34 = (word32) rdx_32;
		word32 rdx_32_32_39 = SLICE(rdx_32, word32, 32);
		if ((&rcx->u0)[1] != 0x00)
			rdx_32 = SEQ(rdx_32_32_39, __bswap<word32>(edx_34));
		Eq_31474 tLoc0158;
		fn0000000180005050(rcx, (word32) rdx_32, &tLoc0158);
		Eq_137 r9_53;
		r9_53.u0 = rcx->u0.t0000.u0;
		int32 edx_101 = 0x00;
		int32 r8d_1223;
		Eq_1342 eax_1224;
		for (r8d_1223 = 0x00; r8d_1223 < 0x06; ++r8d_1223)
		{
			if (r9_53 == 0x00 || ((rcx->u0).t0008).u0 + 0x04 > ((rcx->u0).t000C).u0)
				goto l0000000180011139;
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			eax_1224.u0 = rcx->u0.t0008.u0;
		}
		Eq_1342 r8d_1225;
		r8d_1225.u0 = rcx->u0.t000C.u0;
		do
		{
			if (r9_53 == 0x00)
				goto l0000000180011139;
			eax_1224.u2 = (word64) eax_1224 + 4;
			if (eax_1224 > r8d_1225)
				goto l0000000180011139;
			rcx->u0.t0008.u0 = (int32) eax_1224;
			++edx_101;
		} while (edx_101 < 0x11);
		if (r9_53 != 0x00 && (word64) eax_1224 + 4 <= r8d_1225)
		{
			rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
			uint64 r10_121 = (uint64) rcx->u0.t0008.u0;
			Eq_1342 eax_128 = r9_53.u2[(uint64) ((word32) r10_121 - 0x04)];
			word32 r10d_142 = (word32) r10_121;
			Eq_1342 r11d_132 = (&rcx->u0)[1];
			Eq_1342 dwLoc0190_1230 = eax_128;
			if (r11d_132 != 0x00)
				dwLoc0190_1230 = __bswap<word32>(eax_128);
			if ((word32) r10_121 + 0x04 <= r8d_1225)
			{
				uint64 r10_156 = (uint64) (r10d_142 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_156;
				Eq_1342 r13d_1124 = r9_53.u2[(uint64) ((word32) r10_156 - 0x04)];
				if (r11d_132 != 0x00)
					r13d_1124 = __bswap<word32>(r13d_1124);
				if ((word32) r10_156 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_190 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_196 = r9_53.u2[(uint64) ((word32) r10_190 - 0x04)];
				word32 r10d_209 = (word32) r10_190;
				Eq_1342 dwLoc018C_1234 = eax_196;
				if (r11d_132 != 0x00)
					dwLoc018C_1234 = __bswap<word32>(eax_196);
				if ((word32) r10_190 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_217 = (uint64) (r10d_209 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_217;
				Eq_1342 eax_226 = r9_53.u2[(uint64) ((word32) r10_217 - 0x04)];
				Eq_1342 dwLoc0198_1237 = eax_226;
				if (r11d_132 != 0x00)
					dwLoc0198_1237 = __bswap<word32>(eax_226);
				if ((word32) r10_217 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_247 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_253 = r9_53.u2[(uint64) ((word32) r10_247 - 0x04)];
				word32 r10d_266 = (word32) r10_247;
				Eq_1342 dwLoc0188_1239 = eax_253;
				if (r11d_132 != 0x00)
					dwLoc0188_1239 = __bswap<word32>(eax_253);
				if ((word32) r10_247 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_274 = (uint64) (r10d_266 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_274;
				Eq_1342 eax_283 = r9_53.u2[(uint64) ((word32) r10_274 - 0x04)];
				Eq_1342 dwLoc0194_1242 = eax_283;
				if (r11d_132 != 0x00)
					dwLoc0194_1242 = __bswap<word32>(eax_283);
				if ((word32) r10_274 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_304 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_310 = r9_53.u2[(uint64) ((word32) r10_304 - 0x04)];
				word32 r10d_323 = (word32) r10_304;
				Eq_1342 dwLoc0184_1244 = eax_310;
				if (r11d_132 != 0x00)
					dwLoc0184_1244 = __bswap<word32>(eax_310);
				if ((word32) r10_304 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_337 = (uint64) (r10d_323 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_337;
				Eq_1342 r12d_1139 = r9_53.u2[(uint64) ((word32) r10_337 - 0x04)];
				if (r11d_132 != 0x00)
					r12d_1139 = __bswap<word32>(r12d_1139);
				if ((word32) r10_337 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r15_397 = (uint64) rcx->u0.t0008.u0;
				word32 r15d_403 = (word32) r15_397;
				if ((word32) r15_397 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r15_405 = (uint64) (r15d_403 + 0x04);
				Eq_1342 r15d_406 = (word32) r15_405;
				rcx->u0.t0008.u0 = (int32) r15d_406;
				Eq_1342 eax_413 = r9_53.u2[(uint64) ((word32) r15_405 - 0x04)];
				Eq_1342 dwLoc0180_1249 = eax_413;
				if (r11d_132 != 0x00)
					dwLoc0180_1249 = __bswap<word32>(eax_413);
				if ((word32) r15_405 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_440 = (uint64) rcx->u0.t0008.u0;
				word32 r10d_475 = (word32) r10_440;
				Eq_1342 ebp_1144 = r9_53.u2[(uint64) ((word32) r10_440 - 0x04)];
				if (r11d_132 != 0x00)
					ebp_1144 = __bswap<word32>(ebp_1144);
				if ((word32) r10_440 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_477 = (uint64) (r10d_475 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_477;
				if ((word32) r10_477 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_489 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_495 = r9_53.u2[(uint64) ((word32) r10_489 - 0x04)];
				word32 r10d_508 = (word32) r10_489;
				Eq_1342 dwLoc017C_1252 = eax_495;
				if (r11d_132 != 0x00)
					dwLoc017C_1252 = __bswap<word32>(eax_495);
				if ((word32) r10_489 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_522 = (uint64) (r10d_508 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_522;
				Eq_1342 esi_1002 = r9_53.u2[(uint64) ((word32) r10_522 - 0x04)];
				if (r11d_132 != 0x00)
					esi_1002 = __bswap<word32>(esi_1002);
				if ((word32) r10_522 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_566 = (uint64) rcx->u0.t0008.u0;
				word32 edx_572 = (word32) rdx_566;
				if ((word32) rdx_566 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_574 = (uint64) (edx_572 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_574;
				if ((word32) rdx_574 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_585 = (uint64) rcx->u0.t0008.u0;
				word32 edx_591 = (word32) rdx_585;
				if ((word32) rdx_585 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_593 = (uint64) (edx_591 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_593;
				if ((word32) rdx_593 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_604 = (uint64) rcx->u0.t0008.u0;
				word32 edx_610 = (word32) rdx_604;
				if ((word32) rdx_604 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_612 = (uint64) (edx_610 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_612;
				if ((word32) rdx_612 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_623 = (uint64) rcx->u0.t0008.u0;
				Eq_1342 eax_629 = r9_53.u2[(uint64) ((word32) r10_623 - 0x04)];
				word32 r10d_642 = (word32) r10_623;
				Eq_1342 dwLoc0178_1256 = eax_629;
				if (r11d_132 != 0x00)
					dwLoc0178_1256 = __bswap<word32>(eax_629);
				if ((word32) r10_623 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_656 = (uint64) (r10d_642 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_656;
				Eq_1342 edi_1023 = r9_53.u2[(uint64) ((word32) r10_656 - 0x04)];
				if (r11d_132 != 0x00)
					edi_1023 = __bswap<word32>(edi_1023);
				if ((word32) r10_656 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_702 = (uint64) rcx->u0.t0008.u0;
				word32 edx_708 = (word32) rdx_702;
				if ((word32) rdx_702 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_710 = (uint64) (edx_708 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_710;
				if ((word32) rdx_710 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_721 = (uint64) rcx->u0.t0008.u0;
				word32 edx_727 = (word32) rdx_721;
				if ((word32) rdx_721 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_729 = (uint64) (edx_727 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_729;
				if ((word32) rdx_729 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 r10_746 = (uint64) rcx->u0.t0008.u0;
				word32 r10d_782 = (word32) r10_746;
				Eq_1342 r14d_1162 = r9_53.u2[(uint64) ((word32) r10_746 - 0x04)];
				if (r11d_132 != 0x00)
					r14d_1162 = __bswap<word32>(r14d_1162);
				if ((word32) r10_746 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 r10_790 = (uint64) (r10d_782 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) r10_790;
				uint64 r9_798 = (uint64) r9_53.u2[(uint64) ((word32) r10_790 - 0x04)];
				Eq_1342 r9d_1041 = (word32) r9_798;
				word32 r9_32_32_1910 = SLICE(r9_798, word32, 32);
				if (r11d_132 != 0x00)
					r9d_1041 = __bswap<word32>(r9d_1041);
				if ((word32) r10_790 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_818 = (uint64) rcx->u0.t0008.u0;
				word32 edx_824 = (word32) rdx_818;
				if ((word32) rdx_818 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_826 = (uint64) (edx_824 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_826;
				if ((word32) rdx_826 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_837 = (uint64) rcx->u0.t0008.u0;
				word32 edx_843 = (word32) rdx_837;
				if ((word32) rdx_837 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_845 = (uint64) (edx_843 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_845;
				if ((word32) rdx_845 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_856 = (uint64) rcx->u0.t0008.u0;
				word32 edx_862 = (word32) rdx_856;
				if ((word32) rdx_856 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				uint64 rdx_864 = (uint64) (edx_862 + 0x04);
				rcx->u0.t0008.u0 = (int32) (word32) rdx_864;
				if ((word32) rdx_864 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) (rcx->u0.t0008.u0 + 0x04);
				uint64 rdx_875 = (uint64) rcx->u0.t0008.u0;
				if ((word32) rdx_875 + 0x04 > r8d_1225)
					return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
				rcx->u0.t0008.u0 = (int32) ((word32) rdx_875 + 0x04);
				if (r13d_1124 != 0x00)
					r13d_1124.u2 = (word64) r13d_1124 + r10d_142;
				Eq_1342 eax_1062 = dwLoc0198_1237;
				if (dwLoc0198_1237 != 0x00)
					eax_1062.u2 = (word64) dwLoc0198_1237 + r10d_209;
				Eq_1342 ecx_1133 = dwLoc0194_1242;
				if (dwLoc0194_1242 != 0x00)
					ecx_1133.u2 = (word64) dwLoc0194_1242 + r10d_266;
				if (r12d_1139 != 0x00)
					r12d_1139.u2 = (word64) r12d_1139 + r10d_323;
				if (ebp_1144 != 0x00)
					ebp_1144 += r15d_406;
				if (esi_1002 != 0x00)
					esi_1002.u2 = (word64) esi_1002 + r10d_508;
				if (edi_1023 != 0x00)
					edi_1023.u2 = (word64) edi_1023 + r10d_642;
				uint64 r9_1049 = SEQ(r9_32_32_1910, r9d_1041);
				if (r9d_1041 != 0x00)
					r9_1049 = (uint64) ((word64) r9d_1041 + r10d_782);
				r8->t001C.u0 = (int32) eax_1062;
				r8->t0020.u0 = (int32) dwLoc0188_1239;
				r8->t0028.u0 = (int32) dwLoc0184_1244;
				r8->t0030.u0 = (int32) dwLoc0180_1249;
				r8->t0038.u0 = (int32) dwLoc017C_1252;
				r8->t0010.u0 = (int32) dwLoc0190_1230;
				r8->t0040.u0 = (int32) dwLoc0178_1256;
				r8->t0014.u0 = (int32) r13d_1124;
				r8->t0018.u0 = (int32) dwLoc018C_1234;
				r8->t0024.u0 = (int32) ecx_1133;
				r8->t002C.u0 = (int32) r12d_1139;
				r8->t0034.u0 = (int32) ebp_1144;
				r8->t003C.u0 = (int32) esi_1002;
				r8->t0044.u0 = (int32) edi_1023;
				r8->t0048.u0 = (int32) r14d_1162;
				r8->dw004C = (word32) r9_1049;
				return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
			}
		}
	}
l0000000180011139:
	return (word32) fn0000000180023580(rax_8 ^ fp - 440, qwLoc01C0);
}

// tmpr74rci4q_text_0002.c
// Generated by decompiling tmpr74rci4q
// using Reko decompiler version 0.11.6.0.

#include "tmpr74rci4q.h"

// 0000000180021060: Register uint32 fn0000000180021060(Register Eq_63842 ecx, Register Eq_137 rdx, Register uint64 r8)
// Called from:
//      fn000000018001EB30
//      fn0000000180021570
uint32 fn0000000180021060(Eq_63842 ecx, Eq_137 rdx, uint64 r8)
{
	union Eq_68853 * r11_956;
	word64 rcx;
	ecx = (word32) rcx;
	uint64 rsi_576 = r8;
	union Eq_68853 * r11_10 = r11_956;
	if (r11_956 == null)
		return 0x00;
	uint32 r9d_106 = ~ecx;
	if (r8 >= 0x17)
	{
		union Eq_68853 * r11_262;
		do
		{
			byte r11b_34 = (byte) r11_956;
			r11_262 = r11_956;
			if ((r11b_34 & 0x03) == 0x00)
				break;
			uint64 rax_46 = (uint64) r9d_106;
			r11_262 = &r11_956->u1 + 1;
			r9d_106 = g_a80025E90[(uint64) (r11_956->u0 ^ (byte) rax_46)] ^ (word32) rax_46 >> 0x08;
			--rsi_576;
			r11_956 = SEQ(SLICE(&r11_956->u1 + 1, word56, 8), r11b_34 + 0x01);
		} while (rsi_576 != 0x00);
		uint64 rdx_76 = SLICE(rsi_576 *128 ~0x3333333333333332, word64, 64);
		uint64 rcx_84 = (rdx_76 >> 0x04) - 0x01;
		uint32 edi_124 = 0x00;
		uint32 ebp_112 = 0x00;
		uint32 r14d_131 = 0x00;
		uint32 r15d_118 = 0x00;
		uint64 rsi_83 = rsi_576 - ((rdx_76 >> 0x04) + (rdx_76 >> 0x04) * 0x04 << 0x02);
		uint64 qwArg10_812 = rcx_84;
		if (rcx_84 != 0x00)
		{
			uint64 v48_258;
			do
			{
				uint64 rax_108 = (uint64) (*r11_262 ^ r9d_106);
				uint64 rdx_114 = (uint64) (r11_262->u2.dw0008 ^ ebp_112);
				uint64 rcx_126 = (uint64) (r11_262->u2.dw0004 ^ edi_124);
				uint64 r8_133 = (uint64) (r11_262->u2.dw000C ^ r14d_131);
				uint64 r10_120 = (uint64) (r11_262->u2.dw0010 ^ r15d_118);
				uint64 r12_129 = (uint64) (word32) rax_108;
				union Eq_68853 * r11_137 = (union Eq_68853 *) ((char *) r11_262 + 20);
				uint64 rsi_143 = (uint64) (word32) rdx_114;
				uint64 r13_146 = (uint64) (word32) rcx_126;
				r9d_106 = g_a80026690[(uint64) (byte) rax_108];
				edi_124 = g_a80026690[(uint64) (byte) rcx_126];
				ebp_112 = g_a80026690[(uint64) (byte) rdx_114];
				uint64 rax_163 = (uint64) (word32) r8_133;
				r14d_131 = g_a80026690[(uint64) (byte) r8_133];
				uint64 rax_173 = (uint64) (word32) r10_120;
				uint64 r10_179 = 0x0100;
				r15d_118 = g_a80026690[(uint64) (byte) r10_120];
				uint64 rbx_183 = 0x01;
				do
				{
					int64 r8_191 = (int64) ((word32) rbx_183 * 0x08);
					byte cl_222 = (byte) r8_191;
					rbx_183 = (uint64) ((word32) rbx_183 + 0x01);
					r9d_106 = r9d_106 ^ g_a80026690[(uint64) ((byte) (r12_129 >> (byte) r8_191)) + r10_179];
					edi_124 = edi_124 ^ g_a80026690[(uint64) ((byte) (r13_146 >> (byte) r8_191)) + r10_179];
					ebp_112 = ebp_112 ^ g_a80026690[(uint64) ((byte) (rsi_143 >> cl_222)) + r10_179];
					r14d_131 = r14d_131 ^ g_a80026690[(uint64) ((byte) (rax_163 >> cl_222)) + r10_179];
					r10_179 += 0x0100;
					r15d_118 = r15d_118 ^ g_a80026690[(uint64) ((byte) (rax_173 >> cl_222)) + r10_179];
				} while ((word32) rbx_183 < 0x04);
				v48_258 = qwArg10_812 - 0x01;
				qwArg10_812 = v48_258;
				r11_262 = r11_137;
			} while (v48_258 != 0x00);
		}
		uint64 rdx_279 = (uint64) (*r11_262 ^ r9d_106);
		uint64 r8_293 = (uint64) (g_a80025E90[(uint64) (byte) rdx_279] ^ (word32) rdx_279 >> 0x08);
		uint64 rdx_305 = (uint64) (g_a80025E90[(uint64) (byte) r8_293] ^ (word32) r8_293 >> 0x08);
		uint64 r8_317 = (uint64) (g_a80025E90[(uint64) (byte) rdx_305] ^ (word32) rdx_305 >> 0x08);
		uint64 r8_340 = (uint64) (r11_262->u2.dw0004 ^ (g_a80025E90[(uint64) ((byte) r8_317)] ^ (word32) r8_317 >> 0x08) ^ edi_124);
		uint64 rdx_352 = (uint64) (g_a80025E90[(uint64) (byte) r8_340] ^ (word32) r8_340 >> 0x08);
		uint64 r8_364 = (uint64) (g_a80025E90[(uint64) (byte) rdx_352] ^ (word32) rdx_352 >> 0x08);
		uint64 rdx_376 = (uint64) (g_a80025E90[(uint64) (byte) r8_364] ^ (word32) r8_364 >> 0x08);
		uint64 r8_400 = (uint64) (r11_262->u2.dw0008 ^ (g_a80025E90[(uint64) ((byte) rdx_376)] ^ (word32) rdx_376 >> 0x08) ^ ebp_112);
		uint64 rdx_412 = (uint64) (g_a80025E90[(uint64) (byte) r8_400] ^ (word32) r8_400 >> 0x08);
		uint64 r8_424 = (uint64) (g_a80025E90[(uint64) (byte) rdx_412] ^ (word32) rdx_412 >> 0x08);
		uint64 rdx_436 = (uint64) (g_a80025E90[(uint64) (byte) r8_424] ^ (word32) r8_424 >> 0x08);
		uint64 r8_460 = (uint64) (r11_262->u2.dw000C ^ (g_a80025E90[(uint64) ((byte) rdx_436)] ^ (word32) rdx_436 >> 0x08) ^ r14d_131);
		uint64 rdx_472 = (uint64) (g_a80025E90[(uint64) (byte) r8_460] ^ (word32) r8_460 >> 0x08);
		uint64 r8_484 = (uint64) (g_a80025E90[(uint64) (byte) rdx_472] ^ (word32) rdx_472 >> 0x08);
		uint64 rdx_496 = (uint64) (g_a80025E90[(uint64) (byte) r8_484] ^ (word32) r8_484 >> 0x08);
		uint64 r8_520 = (uint64) (r11_262->u2.dw0010 ^ (g_a80025E90[(uint64) ((byte) rdx_496)] ^ (word32) rdx_496 >> 0x08) ^ r15d_118);
		uint64 rdx_534 = (uint64) (g_a80025E90[(uint64) (byte) r8_520] ^ (word32) r8_520 >> 0x08);
		uint64 r8_549 = (uint64) (g_a80025E90[(uint64) (byte) rdx_534] ^ (word32) rdx_534 >> 0x08);
		uint64 rdx_561 = (uint64) (g_a80025E90[(uint64) (byte) r8_549] ^ (word32) r8_549 >> 0x08);
		rsi_576 = rsi_83;
		r9d_106 = g_a80025E90[(uint64) (byte) rdx_561] ^ (word32) rdx_561 >> 0x08;
		r11_10 = (union Eq_68853 *) ((char *) r11_262 + 20);
	}
	if (rsi_576 >= 0x08)
	{
		Eq_69317 r10_581 = rsi_576 >> 0x03;
		rsi_576 += r10_581 *s ~0x07;
		do
		{
			uint32 edx_607 = g_a80025E90[(uint64) (r11_10->u0 ^ (byte) r9d_106)] ^ r9d_106 >> 0x08;
			uint32 r8d_624 = g_a80025E90[(uint64) ((&r11_10->u1)[1] ^ (byte) edx_607)] ^ edx_607 >> 0x08;
			uint32 edx_641 = g_a80025E90[(uint64) ((&r11_10->u1)[2] ^ (byte) r8d_624)] ^ r8d_624 >> 0x08;
			uint32 r8d_658 = g_a80025E90[(uint64) ((&r11_10->u1)[3] ^ (byte) edx_641)] ^ edx_641 >> 0x08;
			uint32 edx_675 = g_a80025E90[(uint64) ((&r11_10->u1)[4] ^ (byte) r8d_658)] ^ r8d_658 >> 0x08;
			uint32 r8d_692 = g_a80025E90[(uint64) ((&r11_10->u1)[5] ^ (byte) edx_675)] ^ edx_675 >> 0x08;
			uint32 edx_710 = g_a80025E90[(uint64) ((&r11_10->u1)[6] ^ (byte) r8d_692)] ^ r8d_692 >> 0x08;
			r11_10 = (union Eq_68853 *) &r11_10->u2.dw0008;
			r9d_106 = g_a80025E90[(uint64) ((&r11_10->u1)[7] ^ (byte) edx_710)] ^ edx_710 >> 0x08;
			--r10_581;
		} while (r10_581 != 0x00);
	}
	for (; rsi_576 != 0x00; --rsi_576)
	{
		uint64 rax_742 = (uint64) r9d_106;
		r11_10 = &r11_10->u1 + 1;
		r9d_106 = g_a80025E90[(uint64) (r11_10->u0 ^ (byte) rax_742)] ^ (word32) rax_742 >> 0x08;
	}
	return ~r9d_106;
}

// 0000000180021570: Register Eq_63842 fn0000000180021570(Register uint64 rcx, Register Eq_137 rdx, Register Eq_62434 r8d)
// Called from:
//      fn00000001800230A0
Eq_63842 fn0000000180021570(uint64 rcx, Eq_137 rdx, Eq_62434 r8d)
{
	uint64 r8_5 = (uint64) r8d;
	return fn0000000180021060((word32) rcx, rdx, r8_5);
}

// 0000000180021580: void fn0000000180021580(Register Eq_137 rcx, Register Eq_137 rdx, Register Eq_483 r8d, Register Eq_734 r9d)
// Called from:
//      fn0000000180001810
//      fn0000000180005C80
//      fn0000000180006420
void fn0000000180021580(Eq_137 rcx, Eq_137 rdx, Eq_483 r8d, Eq_734 r9d)
{
	ptr64 fp;
	word64 r9;
	r9d = (word32) r9;
	Eq_39 r9b_360 = (byte) r9d;
	ui64 rax_20 = g_qw80030008 ^ fp - 0xA8;
	word16 * r14_33 = (word16 *) (rcx.u0 + (int64) r8d);
	Eq_137 rbp_34;
	rbp_34.u0 = rdx.u0 + (int64) r9d;
	Eq_137 rdx_37 = rcx;
	Eq_137 rbx_147 = rdx;
	if (r9d == 0x00)
	{
		if (r8d != 0x01 || *rcx.u0 != r9b_360)
			;
		goto l000000018002184B;
	}
l0000000180021630:
	ui32 eax_58 = (word32) *rdx_37.u0;
	uint64 rdi_60 = (uint64) eax_58;
	struct Eq_69499 * rdx_112 = (struct Eq_69499 *) (rdx_37.u2 + 1);
	uint64 rdi_103 = rdi_60 >> 0x04;
	if (rdi_60 >> 0x04 == 0x0F)
	{
		uint64 r8_71;
		do
		{
			r8_71 = (uint64) rdx_112->b0000;
			rdx_112 = &rdx_112->b0000 + 1;
			rdi_103 += r8_71;
		} while (((uint32) ((word32) r8_71 == 0xFF) & (uint32) (rdx_112 < r14_33 - 0x0F)) != 0x00);
		if (rbx_147.u0 + rdi_103 < rbx_147 || &rdx_112->b0000 + rdi_103 < rdx_112)
			goto l000000018002183A;
	}
	Eq_137 r9_105;
	r9_105.u0 = rbx_147.u0 + rdi_103;
	if (r9_105 <= rbp_34 - 0x0C)
	{
		word16 * rcx_113 = (word16 *) (&rdx_112->b0000 + rdi_103);
		if (rcx_113 <= r14_33 - 8)
		{
			word64 (* rdx_144)[] = rdx_112 - rbx_147;
			do
			{
				*rbx_147.u1 = *(rdx_144 + rbx_147);
				rbx_147.u0 = rbx_147 + 0x08;
			} while (rbx_147 < r9_105);
			uint64 rdi_160 = (uint64) *rcx_113;
			Eq_69545 edi_176 = (word32) rdi_160;
			Eq_137 rdx_161;
			rdx_161.u0 = rcx_113 + 1;
			word32 edx_295 = (word32) rcx_113 + 0x02;
			word32 rdx_32_32_411 = SLICE(rcx_113 + 1, word32, 32);
			Eq_137 r8_162 = r9_105 - rdi_160;
			if (r8_162 < rdx)
				goto l000000018002183A;
			r9_105.u2->t0000.u3.u1 = (word32) edi_176;
			Eq_69566 r10_175;
			r10_175.u1 = (uint64) (eax_58 & 0x0F);
			rdx_161 = SEQ(rdx_32_32_411, edx_295);
			if (r10_175 == 0x0F)
			{
				word32 r11d_192;
				do
				{
					uint64 r11_185 = (uint64) *rdx_161.u0;
					r11d_192 = (word32) r11_185;
					++rdx_161.u2;
					if (rdx_161 > r14_33 - (word16 *) 5)
						goto l000000018002183A;
					r10_175 = (word64) r10_175 + r11_185;
				} while (r11d_192 == 0xFF);
				if (r9_105 + r10_175 < r9_105)
					goto l000000018002183A;
			}
			Eq_69572 r10_200 = (word64) r10_175 + 4;
			Eq_137 r9_202;
			r9_202.u0 = r9_105 + r10_200;
			struct Eq_69602 * r8_211;
			if (rdi_160 < 0x08)
			{
				*r9_105.u0 = *r8_162.u0;
				r9_105.u2[1] = r8_162.u2[1];
				r9_105.u2[2] = r8_162.u2[2];
				r9_105.u2[3] = r8_162.u2[3];
				word32 * r8_240 = (word32 *) (r8_162.u0 + (uint64) (fp - 0x88)[rdi_160]);
				((word64) r9_105 + 4)->u0 = *r8_240;
				r8_211 = r8_240 - (int64) (fp - 0x68)[rdi_160];
			}
			else
			{
				*r9_105.u1 = *r8_162.u1;
				r8_211 = (struct Eq_69602 *) (r8_162.u2 + 8);
			}
			Eq_137 rcx_249;
			rcx_249.u0 = r9_105 + 0x08;
			if (r9_202 <= rbp_34 - (word64 *) 0x0C)
			{
				*(r9_105 + (word64 *) 0x08) = r8_211->qw0000;
				if (r10_200 > 0x10)
				{
					Eq_137 rcx_264;
					rcx_264.u0 = r9_105 + 0x10;
					word64 r8_265 = r8_211 - (r9_105 + (word64 *) 0x10);
					do
					{
						*rcx_264.u1 = (word64) *((char *) rcx_264.u1 + (r8_265 + 8));
						rcx_264.u0 = rcx_264 + 0x08;
					} while (rcx_264 < r9_202);
				}
				goto l0000000180021811;
			}
			rdx_37 = rdx_161;
			if (r9_202 <= rbp_34 - 5)
			{
				if (r9_105 + (word64 *) 0x08 < rbp_34 - 7)
				{
					Eq_69669 r10_319;
					r10_319.u0 = r9_105 + (word64 *) 0x08;
					int64 rbx_320 = r8_211 - (r9_105 + (word64 *) 0x08);
					do
					{
						*r10_319.u0 = (word64) *((char *) r10_319.u0 + rbx_320);
						r10_319.u1 += 8;
					} while (r10_319 < rbp_34 - (word64 *) 7);
					rcx_249 = rbp_34 - (word64 *) 7;
					r8_211 += rbp_34 - (word64 *) 7 - (r9_105 + (word64 *) 0x08);
				}
				if (rcx_249 < r9_202)
				{
					do
					{
						*rcx_249.u0 = (byte) r8_211->qw0000;
						++r8_211;
						rcx_249.u0 = rcx_249 + 0x01;
					} while (rcx_249 < r9_202);
					rbx_147 = r9_202;
					goto l0000000180021630;
				}
l0000000180021811:
				rdx_37 = rdx_161;
				rbx_147 = r9_202;
				goto l0000000180021630;
			}
l000000018002183A:
			goto l0000000180021841;
		}
	}
	if (&rdx_112->b0000 + rdi_103 == r14_33 && r9_105 <= rbp_34)
	{
		memcpy(rbx_147, rdx_112, (size_t) rdi_103);
l000000018002184B:
		word64 qwLocB0;
		fn0000000180023580(rax_20 ^ fp - 0xA8, qwLocB0);
		return;
	}
	goto l000000018002183A;
}

// 0000000180021870: Register word32 fn0000000180021870(Register (ptr64 Eq_61952) rcx, Register (ptr64 word32) rdx, Register (ptr64 uint64) r8, Register (ptr64 word32) r9, Stack Eq_69741 tArg08, Stack Eq_69742 tArg10)
// Called from:
//      fn0000000180022A10
word32 fn0000000180021870(union Eq_61952 * rcx, word32 * rdx, uint64 * r8, word32 * r9, Eq_69741 tArg08, Eq_69742 tArg10)
{
	word32 r8d_664;
	word32 r8d_663;
	word32 r8d_661;
	word32 r8d_660;
	*rdx = 0x00;
	*r8 = 0x00;
	*r9 = 0x00;
	word32 ebx_116 = 0x00;
	if (fn0000000180023380(rcx, (word128) (&rcx->u0)[3].ow0000 + (rcx->u0).qw0078) != 0x00)
		return ~0x00;
	Eq_69776 tLoc40;
	if (fn0000000180022450(rcx, rcx->u0.qw0060, &tArg08, tLoc40) != 0x00)
		ebx_116 = ~0x00;
	else if (tArg08 != 0x04034B50)
		ebx_116 = ~0x66;
	word32 eax_109 = fn00000001800226A0(rcx, rcx->u0.qw0060, &tArg08, tLoc40, out r8d_660);
	word64 rdx_107 = rcx->u0.qw0060;
	if (eax_109 != 0x00)
		ebx_116 = ~0x00;
	word32 eax_135 = fn00000001800226A0(rcx, rdx_107, &tArg10, tLoc40, out r8d_661);
	word64 rdx_133 = rcx->u0.qw0060;
	if (eax_135 != 0x00)
		ebx_116 = ~0x00;
	word32 r8d_662;
	if (fn00000001800226A0(rcx, rdx_133, &tArg08, tLoc40, out r8d_662) != 0x00)
		ebx_116 = ~0x00;
	else if (ebx_116 == 0x00)
	{
		ui32 eax_174 = rcx->u0.dw00BC;
		if (tArg08 != eax_174 || ((eax_174 & ~0x0C) != 0x00 || eax_174 == 0x04))
			ebx_116 = ~0x66;
	}
	word32 eax_214 = fn0000000180022450(rcx, rcx->u0.qw0060, &tArg08, tLoc40);
	word64 rdx_212 = rcx->u0.qw0060;
	if (eax_214 != 0x00)
		ebx_116 = ~0x00;
	word32 eax_241 = fn0000000180022450(rcx, rdx_212, &tArg08, tLoc40);
	byte bpl_260 = tArg10.b0000;
	if (eax_241 != 0x00)
		ebx_116 = ~0x00;
	else if (ebx_116 == 0x00 && (tArg08 != (rcx->u0).dw00C4 && (bpl_260 & 0x08) == 0x00))
		ebx_116 = ~0x66;
	if (fn0000000180022450(rcx, rcx->u0.qw0060, &tArg08, tLoc40) != 0x00)
		ebx_116 = ~0x00;
	else
	{
		uint64 rax_294 = (uint64) tArg08;
		if ((word32) rax_294 != ~0x00 && (ebx_116 == 0x00 && (rax_294 != (rcx->u0).qw00C8 && (bpl_260 & 0x08) == 0x00)))
			ebx_116 = ~0x66;
	}
	if (fn0000000180022450(rcx, rcx->u0.qw0060, &tArg08, tLoc40) != 0x00)
		ebx_116 = ~0x00;
	else
	{
		Eq_62434 rax_339;
		rax_339.u0 = (uint64) tArg08;
		if ((word32) rax_339 != ~0x00 && (ebx_116 == 0x00 && (rax_339 != ((rcx->u0).t00D0).u0 && (bpl_260 & 0x08) == 0x00)))
			ebx_116 = ~0x66;
	}
	word32 eax_379 = fn00000001800226A0(rcx, rcx->u0.qw0060, &tArg08, tLoc40, out r8d_663);
	uint64 rbp_378 = (uint64) tArg08;
	word32 ebp_390 = (word32) rbp_378;
	if (eax_379 != 0x00)
		ebx_116 = ~0x00;
	else if (ebx_116 == 0x00 && ebp_390 != (rcx->u0).dw00D8)
		ebx_116 = ~0x66;
	*rdx += ebp_390;
	word32 eax_435 = fn00000001800226A0(rcx, rcx->u0.qw0060, &tArg08, tLoc40, out r8d_664);
	word32 ecx_465 = (word32) tArg08;
	if (eax_435 != 0x00)
		ebx_116 = ~0x00;
	*r8 = (uint64) ((word128) (&rcx->u0)[3].ow0000 + (rbp_378 + 30));
	*r9 = ecx_465;
	*rdx += ecx_465;
	return ebx_116;
}

// 0000000180021A90: void fn0000000180021A90(Register word32 ecx, Register (ptr64 Eq_70025) rdx)
// Called from:
//      fn0000000180021AF0
void fn0000000180021A90(word32 ecx, struct Eq_70025 * rdx)
{
	uint64 rcx;
	ui32 ecx_43 = (word32) rcx;
	rdx->dw000C = (word32) (rcx >> 0x10) & 0x1F;
	rdx->dw0010 = ((word32) (rcx >> 0x15) & 0x0F) - 0x01;
	rdx->dw0014 = ((word32) (rcx >> 0x19) & 0x7F) + 0x07BC;
	rdx->dw0008 = (word32) (rcx >> 11) & 0x1F;
	rdx->dw0004 = (word32) (rcx >> 0x05) & 0x3F;
	rdx->dw0000 = (ecx_43 & 0x1F) * 0x02;
}

// 0000000180021AF0: Register word32 fn0000000180021AF0(Register (ptr64 Eq_61952) rcx, Register (ptr64 Eq_62362) rdx, Register (ptr64 uint64) r8, Register (ptr64 word64) r9, Stack Eq_70085 tArg08, Stack up32 dwArg28, Stack Eq_61999 qwArg30, Stack up32 dwArg38, Stack Eq_61999 qwArg40, Stack up32 dwArg48)
// Called from:
//      fn0000000180022830
//      fn00000001800228A0
//      fn0000000180022920
word32 fn0000000180021AF0(union Eq_61952 * rcx, struct Eq_62362 * rdx, uint64 * r8, word64 * r9, Eq_70085 tArg08, up32 dwArg28, Eq_61999 qwArg30, up32 dwArg38, Eq_61999 qwArg40, up32 dwArg48)
{
	word32 r8d_3224;
	word32 r8d_3222;
	word32 r8d_3221;
	word32 r8d_3220;
	Eq_70478 tLocC8;
	word32 r8d_3223;
	Eq_70519 tLocC4;
	Eq_70335 tLoc7C;
	word32 r8d_3219;
	Eq_70321 tLoc80;
	word32 r8d_3218;
	Eq_70307 tLoc84;
	word32 r8d_3217;
	Eq_70293 tLoc88;
	word32 r8d_3216;
	Eq_70279 tLoc8C;
	word32 r8d_3215;
	Eq_70265 tLoc90;
	Eq_70209 tLocA4;
	Eq_70186 tLocA8;
	word32 r8d_3214;
	Eq_70172 tLocAC;
	word32 r8d_3213;
	Eq_70157 tLocB0;
	word32 r8d_3212;
	Eq_70143 tLocB4;
	word32 r8d_3211;
	Eq_70122 tLocB8;
	if (rcx == null)
		return (word32) rcx - 0x66;
	uint32 edi_124;
	Eq_69776 tLocD0;
	if (fn0000000180023380(rcx, rcx->u0.qw0088 + (rcx->u0).qw0078) != 0x00)
		edi_124 = ~0x00;
	else if (fn0000000180022450(rcx, rcx->u0.qw0060, &tArg08, tLocD0) != 0x00)
		edi_124 = ~0x00;
	else
	{
		edi_124 = 0x00;
		if (tArg08 != 0x02014B50)
			edi_124 = ~0x66;
	}
	word32 eax_117 = fn00000001800226A0(rcx, rcx->u0.qw0060, &tLocB8, tLocD0, out r8d_3211);
	word64 rdx_114 = rcx->u0.qw0060;
	if (eax_117 != 0x00)
		edi_124 = ~0x00;
	word32 eax_144 = fn00000001800226A0(rcx, rdx_114, &tLocB4, tLocD0, out r8d_3212);
	word64 rdx_141 = rcx->u0.qw0060;
	if (eax_144 != 0x00)
		edi_124 = ~0x00;
	word32 eax_171 = fn00000001800226A0(rcx, rdx_141, &tLocB0, tLocD0, out r8d_3213);
	word64 rdx_168 = rcx->u0.qw0060;
	if (eax_171 != 0x00)
		edi_124 = ~0x00;
	word32 eax_198 = fn00000001800226A0(rcx, rdx_168, &tLocAC, tLocD0, out r8d_3214);
	word64 rdx_195 = rcx->u0.qw0060;
	if (eax_198 != 0x00)
		edi_124 = ~0x00;
	word32 eax_226 = fn0000000180022450(rcx, rdx_195, &tLocA8, tLocD0);
	uint64 rcx_224 = (uint64) tLocA8;
	if (eax_226 != 0x00)
		edi_124 = ~0x00;
	Eq_70202 tLoc78;
	fn0000000180021A90((word32) rcx_224, &tLoc78);
	word32 eax_263 = fn0000000180022450(rcx, rcx->u0.qw0060, &tLocA4, tLocD0);
	word64 rdx_261 = rcx->u0.qw0060;
	if (eax_263 != 0x00)
		edi_124 = ~0x00;
	word32 eax_291 = fn0000000180022450(rcx, rdx_261, &tArg08, tLocD0);
	word64 rdx_288 = rcx->u0.qw0060;
	uint64 rax_297 = (uint64) tArg08;
	if (eax_291 != 0x00)
		edi_124 = ~0x00;
	Eq_70237 tLocA0 = (Eq_70237) rax_297;
	word32 eax_322 = fn0000000180022450(rcx, rdx_288, &tArg08, tLocD0);
	word64 rdx_320 = rcx->u0.qw0060;
	uint64 rax_328 = (uint64) tArg08;
	if (eax_322 != 0x00)
		edi_124 = ~0x00;
	Eq_70259 tLoc98 = (Eq_70259) rax_328;
	word32 eax_352 = fn00000001800226A0(rcx, rdx_320, &tLoc90, tLocD0, out r8d_3215);
	word64 rdx_350 = rcx->u0.qw0060;
	if (eax_352 != 0x00)
		edi_124 = ~0x00;
	word32 eax_379 = fn00000001800226A0(rcx, rdx_350, &tLoc8C, tLocD0, out r8d_3216);
	word64 rdx_376 = rcx->u0.qw0060;
	if (eax_379 != 0x00)
		edi_124 = ~0x00;
	word32 eax_406 = fn00000001800226A0(rcx, rdx_376, &tLoc88, tLocD0, out r8d_3217);
	word64 rdx_403 = rcx->u0.qw0060;
	if (eax_406 != 0x00)
		edi_124 = ~0x00;
	word32 eax_433 = fn00000001800226A0(rcx, rdx_403, &tLoc84, tLocD0, out r8d_3218);
	word64 rdx_430 = rcx->u0.qw0060;
	if (eax_433 != 0x00)
		edi_124 = ~0x00;
	word32 eax_459 = fn00000001800226A0(rcx, rdx_430, &tLoc80, tLocD0, out r8d_3219);
	word64 rdx_456 = rcx->u0.qw0060;
	if (eax_459 != 0x00)
		edi_124 = ~0x00;
	word32 eax_487 = fn0000000180022450(rcx, rdx_456, &tLoc7C, tLocD0);
	word64 rdx_484 = rcx->u0.qw0060;
	if (eax_487 != 0x00)
		edi_124 = ~0x00;
	word32 eax_514 = fn0000000180022450(rcx, rdx_484, &tArg08, tLocD0);
	Eq_70354 r15_3210;
	r15_3210.u0 = (uint64) tLoc90;
	up32 r15d_573 = (word32) r15_3210;
	if (eax_514 != 0x00)
		edi_124 = ~0x00;
	uint64 rbx_1127 = (uint64) tArg08;
	Eq_70367 tLocC0 = (Eq_70367) rbx_1127;
	up32 r14d_1208;
	uint64 rdi_3191;
	word32 r15d_1263;
	if (edi_124 == 0x00)
	{
		if (r9 == null)
		{
l0000000180021D4F:
			r15d_573 = (word32) r15_3210;
			if (qwArg30 != 0x00)
			{
				uint64 r14_736 = (uint64) tLoc8C;
				tArg08.qw0000 = r14_736;
				uint64 rcx_738 = (uint64) dwArg38;
				r14d_1208 = (word32) r14_736;
				up32 ecx_741 = (word32) rcx_738;
				if (r14d_1208 >= ecx_741)
					tArg08.qw0000 = rcx_738;
				rdi_3191 = (uint64) edi_124;
				Eq_70354 r15_3198 = r15_3210;
				if (r15d_573 != 0x00)
				{
					ecx_741 = dwArg38;
					rdi_3191 = (uint64) edi_124;
					if (fn0000000180023380(rcx, (int64) r15d_573) == 0x00)
						r15_3198.u0 = 0x00;
					else
					{
						rdi_3191 = 0xFFFFFFFF;
						r15_3198 = r15_3210;
					}
				}
				word32 edi_888 = (word32) rdi_3191;
				word32 rdi_32_32_934 = SLICE(rdi_3191, word32, 32);
				word32 r15d_819 = (word32) r15_3198;
				if (r14d_1208 != 0x00 && ecx_741 != 0x00)
				{
					rcx->u0.ptr0008();
					uint64 rcx_879 = tArg08.qw0000;
					up32 ecx_894 = (word32) rcx_879;
					word64 rax_876;
					if ((uint64) (word32) rax_876 != rcx_879)
						edi_888 = ~0x00;
					r15d_1263 = r15d_819 + (r14d_1208 - ecx_894);
					rdi_3191 = SEQ(rdi_32_32_934, edi_888);
				}
				else
					r15d_1263 = r15d_819 + (r14d_1208 - tArg08);
l0000000180021DE8:
				up32 r12d_1193 = 0x00;
				word32 edi_1224 = (word32) rdi_3191;
				if (edi_1224 != 0x00)
					return edi_1224;
				uint64 rdi_1367 = rdi_3191;
				if (r14d_1208 != 0x00)
				{
					r15d_1263 -= r14d_1208;
					tArg08 = (Eq_70085) r15d_1263;
					if (r15d_1263 != 0x00)
					{
						if (fn0000000180023380(rcx, (int64) r15d_1263) == 0x00)
						{
							tArg08 = (Eq_70085) 0x00;
							r15d_1263 = 0x00;
						}
						else
							rdi_3191 = 0xFFFFFFFF;
					}
					word32 rdi_32_32_1373 = SLICE(rdi_3191, word32, 32);
					word32 edi_1007 = (word32) rdi_3191;
					uint64 rdi_3195 = rdi_3191;
					if (r14d_1208 != 0x00)
					{
						uint64 rdi_3204;
						do
						{
							word32 eax_1000 = fn00000001800226A0(rcx, rcx->u0.qw0060, &tLocC4, tLocD0, out r8d_3223);
							word64 rdx_998 = rcx->u0.qw0060;
							if (eax_1000 != 0x00)
								edi_1007 = ~0x00;
							word32 eax_1025 = fn00000001800226A0(rcx, rdx_998, &tLocC8, tLocD0, out r8d_3220);
							Eq_69760 r13_1024;
							r13_1024.u1 = (uint64) tLocC8;
							word32 r13d_1201 = (word32) r13_1024;
							if (eax_1025 != 0x00)
								edi_1007 = ~0x00;
							if (tLocC4 == 0x01)
							{
								if (tLoc98 == 0xFFFFFFFF)
								{
									word32 eax_1083 = fn0000000180022520(rcx, rcx->u0.qw0060, &tLoc98, tLocD0, out r8d_3221);
									r14d_1208 = (up32) tLoc8C;
									if (eax_1083 != 0x00)
										edi_1007 = ~0x00;
								}
								if (tLocA0 == 0xFFFFFFFF)
								{
									word32 eax_1114 = fn0000000180022520(rcx, rcx->u0.qw0060, &tLocA0, tLocD0, out r8d_3222);
									r14d_1208 = (up32) tLoc8C;
									if (eax_1114 != 0x00)
										edi_1007 = ~0x00;
								}
								if (rbx_1127 == 0xFFFFFFFF)
								{
									word32 eax_1149 = fn0000000180022520(rcx, rcx->u0.qw0060, &tLocC0, tLocD0, out r8d_3224);
									rbx_1127 = (uint64) tLocC0;
									if (eax_1149 != 0x00)
										edi_1007 = ~0x00;
								}
								rdi_3204 = SEQ(rdi_32_32_1373, edi_1007);
								if (tLoc84 == ~0x00)
								{
									rdi_3204 = SEQ(rdi_32_32_1373, edi_1007);
									Eq_70732 tLoc58;
									if (fn0000000180022450(rcx, rcx->u0.qw0060, &tLoc58, tLocD0) != 0x00)
										rdi_3204 = 0xFFFFFFFF;
								}
							}
							else
							{
								rdi_3204 = SEQ(rdi_32_32_1373, edi_1007);
								if (fn0000000180023380(rcx, r13_1024) != 0x00)
									rdi_3204 = SEQ(rdi_32_32_1373, ~0x00);
							}
							rdi_32_32_1373 = SLICE(rdi_3204, word32, 32);
							edi_1007 = (word32) rdi_3204;
							r12d_1193 = r12d_1193 + 0x04 + r13d_1201;
						} while (r12d_1193 < r14d_1208);
						r15d_1263 = (word32) tArg08;
						rdi_3195 = rdi_3204;
					}
					edi_1224 = (word32) rdi_3195;
					rdi_1367 = rdi_3195;
					if (edi_1224 != 0x00)
						return edi_1224;
				}
				word32 rdi_32_32_1384 = SLICE(rdi_1367, word32, 32);
				edi_1224 = (word32) rdi_1367;
				if (qwArg40 != 0x00)
				{
					Eq_70501 r14_1252;
					r14_1252.u0 = (uint64) tLoc88;
					up32 r14d_1255 = (word32) r14_1252;
					if (r14d_1255 < dwArg48)
					{
						*(r14_1252 + qwArg40) = (word64) 0x00;
						tArg08 = (Eq_70085) r14d_1255;
					}
					else
						tArg08 = (Eq_70085) dwArg48;
					if (r15d_1263 != 0x00)
					{
						if (fn0000000180023380(rcx, (int64) r15d_1263) != 0x00)
							rdi_1367 = SEQ(rdi_32_32_1384, ~0x00);
					}
					edi_1224 = (word32) rdi_1367;
					if (r14d_1255 != 0x00 && dwArg48 != 0x00)
					{
						rcx->u0.ptr0008();
						word64 rax_1403;
						if ((word32) rax_1403 != tArg08)
						{
							edi_1224 = ~0x00;
							return edi_1224;
						}
					}
					if (edi_1224 != 0x00)
						return edi_1224;
				}
				if (rdx != null)
				{
					word128 xmm1_1428 = tLocA8.ow0000;
					rdx->ow0000 = tLocB8.ow0000;
					word128 xmm0_1430 = tLoc98.ow0000;
					rdx->ow0010 = xmm1_1428;
					word128 xmm1_1432 = tLoc88.ow0000;
					rdx->ow0020 = xmm0_1430;
					word128 xmm0_1434 = tLoc78.ow0000;
					rdx->ow0030 = xmm1_1432;
					rdx->ow0040 = xmm0_1434;
					rdx->r0050 = tLoc78.r0010;
				}
				if (r8 != null)
					*r8 = rbx_1127;
				return edi_1224;
			}
			goto l0000000180021DE1;
		}
		uint64 r14_3194;
		if (r15d_573 < dwArg28)
		{
			*(r15_3210 + r9) = (word64) 0x00;
			r14_3194 = (uint64) r15d_573;
		}
		else
			r14_3194 = (uint64) dwArg28;
		up32 r14d_615 = (word32) r14_3194;
		if (r15d_573 != 0x00 && dwArg28 != 0x00)
		{
			rcx->u0.ptr0008();
			word64 rax_694;
			if ((word32) rax_694 != r14d_615)
				edi_124 = ~0x00;
		}
		r15_3210.u0 = (uint64) (r15d_573 - r14d_615);
		r15d_573 = (word32) r15_3210;
		if (edi_124 == 0x00)
			goto l0000000180021D4F;
	}
l0000000180021DE1:
	r14d_1208 = (up32) tLoc8C;
	r15d_1263 = r15d_573 + r14d_1208;
	rdi_3191 = (uint64) edi_124;
	goto l0000000180021DE8;
}

// 0000000180022040: Register (ptr64 void) fn0000000180022040(Register (ptr64 Eq_61952) rcx, Register word64 rdx)
// Called from:
//      fn0000000180022C90
void * fn0000000180022040(union Eq_61952 * rcx, word64 rdx)
{
	void * r12_159 = null;
	uint64 r14_30 = 0xFFFF;
	if (fn0000000180023380(rcx, 0x00) != 0x00)
		return null;
	uint64 rax_51 = fn00000001800233B0(rcx);
	if (rax_51 < 0xFFFF)
		r14_30 = rax_51;
	void * rax_64 = malloc(0x0404);
	if (rax_64 == null)
		return rax_64;
	uint64 rbp_75 = 0x04;
	if (r14_30 > 0x04)
	{
		do
		{
			uint64 rax_86 = rbp_75 + 0x0400;
			word32 r15d_103 = (word32) rax_51;
			rbp_75 = rax_86;
			if (rax_86 > r14_30)
				rbp_75 = r14_30;
			Eq_69760 rsi_97 = rax_51 - rbp_75;
			word32 esi_107 = (word32) rsi_97;
			uint64 rdi_109;
			if (rax_51 - rsi_97 > 0x0404)
				rdi_109 = 0x0404;
			else
				rdi_109 = (uint64) (r15d_103 - esi_107);
			int32 edi_148 = (word32) rdi_109;
			if (fn0000000180023380(rcx, rsi_97) != 0x00)
				break;
			rcx->u0.ptr0008();
			word64 rax_175;
			if ((word32) rax_175 != edi_148)
				break;
			word32 ecx_183 = edi_148 - 0x03;
			int64 rax_184 = (int64) (edi_148 - 0x03);
			if (edi_148 > 0x03)
			{
				do
				{
					--rax_184;
					--ecx_183;
					if (*((char *) rax_64 + rax_184) == 0x50 && (*((char *) rax_64 + (rax_184 + 1)) == 0x4B && (*((char *) rax_64 + (rax_184 + 2)) == 0x05 && *((char *) rax_64 + (rax_184 + 3)) == 0x06)))
					{
						r12_159 = (word64) rsi_97 + (int64) ecx_183;
						if (r12_159 == null)
							break;
						goto l0000000180022188;
					}
				} while (rax_184 > 0x00);
			}
		} while (rbp_75 < r14_30);
l0000000180022188:
	}
	free(rax_64);
	return r12_159;
}

// 00000001800221C0: Register Eq_69760 fn00000001800221C0(Register (ptr64 Eq_61952) rcx, Register word64 rdx, Stack Eq_70877 tArg18, Stack Eq_70878 tArg20)
// Called from:
//      fn0000000180022C90
Eq_69760 fn00000001800221C0(union Eq_61952 * rcx, word64 rdx, Eq_70877 tArg18, Eq_70878 tArg20)
{
	uint64 r12_32 = 0xFFFF;
	Eq_69760 r13_160;
	r13_160.u1 = 0x00;
	if (fn0000000180023380(rcx, 0x00) != 0x00)
		return 0x00;
	uint64 rax_58 = fn00000001800233B0(rcx);
	tArg18.qw0000 = rax_58;
	uint64 rdi_220 = rax_58;
	if (rax_58 < 0xFFFF)
		r12_32 = rax_58;
	void * rax_72 = malloc(0x0404);
	Eq_69760 rax_419;
	if (rax_72 != null)
	{
		uint64 rbp_83 = 0x04;
		if (r12_32 > 0x04)
		{
			do
			{
				uint64 rax_88 = rbp_83 + 0x0400;
				word32 edi_105 = (word32) rdi_220;
				rbp_83 = rax_88;
				if (rax_88 > r12_32)
					rbp_83 = r12_32;
				Eq_69760 rsi_99 = rdi_220 - rbp_83;
				word32 esi_106 = (word32) rsi_99;
				uint64 rdi_108;
				if (rdi_220 - rsi_99 > 0x0404)
					rdi_108 = 0x0404;
				else
					rdi_108 = (uint64) (edi_105 - esi_106);
				int32 edi_147 = (word32) rdi_108;
				if (fn0000000180023380(rcx, rsi_99) != 0x00)
					break;
				rcx->u0.ptr0008();
				word64 rax_173;
				if ((word32) rax_173 != edi_147)
					break;
				word32 ecx_181 = edi_147 - 0x03;
				int64 rax_182 = (int64) (edi_147 - 0x03);
				if (edi_147 > 0x03)
				{
					do
					{
						--rax_182;
						--ecx_181;
						if (*((char *) rax_72 + rax_182) == 0x50 && (*((char *) rax_72 + (rax_182 + 1)) == 0x4B && (*((char *) rax_72 + (rax_182 + 2)) == 0x06 && *((char *) rax_72 + (rax_182 + 3)) == 0x07)))
						{
							r13_160 = (word64) rsi_99 + (int64) ecx_181;
							if (r13_160 == 0x00)
								break;
							goto l00000001800222EF;
						}
					} while (rax_182 > 0x00);
				}
				rdi_220 = tArg18.qw0000;
			} while (rbp_83 < r12_32);
l00000001800222EF:
		}
		free(rax_72);
		Eq_69776 tLoc40;
		if (r13_160 != 0x00 && (fn0000000180023380(rcx, r13_160) == 0x00 && fn0000000180022450(rcx, rdx, &tArg18, tLoc40) == 0x00))
		{
			word32 eax_323 = fn0000000180022450(rcx, rdx, &tArg18, tLoc40);
			word32 r8d_676;
			if (eax_323 == 0x00 && (tArg18 == eax_323 && (fn0000000180022520(rcx, rdx, &tArg20, tLoc40, out r8d_676) == 0x00 && (fn0000000180022450(rcx, rdx, &tArg18, tLoc40) == 0x00 && tArg18 == 0x01))))
			{
				Eq_69760 rbx_370;
				rbx_370.u0 = tArg20.u0;
				if (fn0000000180023380(rcx, rbx_370) == 0x00 && fn0000000180022450(rcx, rdx, &tArg18, tLoc40) == 0x00)
				{
					if (tArg18 != 0x06064B50)
						rbx_370.u1 = 0x00;
					rax_419 = rbx_370;
					return rax_419;
				}
			}
		}
	}
	rax_419.u1 = 0x00;
	return rax_419;
}

// 00000001800223E0: Register word32 fn00000001800223E0(Register (ptr64 Eq_61952) rcx, Register word64 rdx, Register (ptr64 word32) r8, Stack byte bArg08, Register out Eq_64910 r8dOut)
// Called from:
//      fn0000000180022450
//      fn0000000180022520
//      fn00000001800226A0
word32 fn00000001800223E0(union Eq_61952 * rcx, word64 rdx, word32 * r8, byte bArg08, union Eq_64910 & r8dOut)
{
	rcx->u0.ptr0008();
	word64 rax_26;
	if ((word32) rax_26 != 0x01)
	{
		rcx->u0.t0030.u1();
		r8dOut.u0 = (<unknown>*) <invalid>;
		word64 rax_37;
		return 0x00 - ((word32) rax_37 != 0x00);
	}
	else
	{
		*r8 = (word32) bArg08;
		r8dOut.u0 = (<unknown>*) <invalid>;
		return 0x00;
	}
}

// 0000000180022450: Register word32 fn0000000180022450(Register (ptr64 Eq_61952) rcx, Register word64 rdx, Register (ptr64 Eq_69775) r8, Stack Eq_69776 tArg20)
// Called from:
//      fn0000000180021870
//      fn0000000180021AF0
//      fn00000001800221C0
//      fn0000000180022C90
word32 fn0000000180022450(union Eq_61952 * rcx, word64 rdx, union Eq_69775 * r8, Eq_69776 tArg20)
{
	word32 r8d_234;
	word32 r8d_233;
	word32 r8d_232;
	word32 r8d_231;
	byte bLoc28;
	tArg20 = (Eq_69776) 0x00;
	word32 eax_36 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_231);
	ui32 r10d_33 = (ui32) tArg20;
	uint64 r9_230 = (uint64) eax_36;
	ui32 r10d_100 = r10d_33;
	if (eax_36 == 0x00)
	{
		word32 eax_57 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_232);
		r10d_100 = (ui32) tArg20;
		r9_230 = (uint64) eax_57;
	}
	ui32 ebx_105 = r10d_33 | r10d_100 << 0x08;
	uint64 r9_228 = r9_230;
	if ((word32) r9_230 == 0x00)
	{
		word32 eax_97 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_233);
		r10d_100 = (ui32) tArg20;
		r9_228 = (uint64) eax_97;
	}
	ui32 ebx_148 = ebx_105 | r10d_100 << 0x10;
	uint64 r9_133 = r9_228;
	if ((word32) r9_228 == 0x00)
	{
		word32 eax_131 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_234);
		r9_133 = (uint64) eax_131;
		if (eax_131 == 0x00)
		{
			r8->u0 = (tArg20 << 0x18) + ebx_148;
			return (word32) r9_133;
		}
	}
	r8->u0 = 0x00;
	return (word32) r9_133;
}

// 0000000180022520: Register word32 fn0000000180022520(Register (ptr64 Eq_61952) rcx, Register word64 rdx, Register (ptr64 ui64) r8, Stack Eq_69776 tArg20, Register out Eq_64910 r8dOut)
// Called from:
//      fn0000000180021AF0
//      fn00000001800221C0
//      fn0000000180022C90
word32 fn0000000180022520(union Eq_61952 * rcx, word64 rdx, ui64 * r8, Eq_69776 tArg20, union Eq_64910 & r8dOut)
{
	word32 r8d_432;
	word32 r8d_431;
	word32 r8d_430;
	word32 r8d_429;
	word32 r8d_428;
	word32 r8d_427;
	word32 r8d_426;
	word32 r8d_425;
	byte bLoc28;
	tArg20 = (Eq_69776) 0x00;
	word32 eax_32 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_425);
	Eq_71183 r10_31;
	r10_31.u0 = (int64) tArg20;
	uint64 r9_34 = (uint64) eax_32;
	Eq_71183 r10_418 = r10_31;
	if (eax_32 == 0x00)
	{
		word32 eax_54 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_426);
		r10_418.u1 = (uint64) tArg20;
		r9_34 = (uint64) eax_54;
	}
	ui64 rbx_63 = r10_31 | (int64) ((word32) r10_418) << 0x08;
	Eq_71183 r10_414 = r10_418;
	uint64 r9_421 = r9_34;
	if ((word32) r9_34 == 0x00)
	{
		word32 eax_89 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_427);
		r10_414.u1 = (uint64) tArg20;
		r9_421 = (uint64) eax_89;
	}
	ui64 rbx_97 = rbx_63 | (int64) ((word32) r10_414) << 0x10;
	Eq_71183 r10_121 = r10_414;
	uint64 r9_124 = r9_421;
	if ((word32) r9_421 == 0x00)
	{
		word32 eax_122 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_428);
		r10_121.u1 = (uint64) tArg20;
		r9_124 = (uint64) eax_122;
	}
	ui64 rbx_130 = rbx_97 | (int64) ((word32) r10_121) << 0x18;
	Eq_71183 r10_154 = r10_121;
	uint64 r9_157 = r9_124;
	if ((word32) r9_124 == 0x00)
	{
		word32 eax_155 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_429);
		r10_154.u1 = (uint64) tArg20;
		r9_157 = (uint64) eax_155;
	}
	ui64 rbx_163 = rbx_130 | (int64) ((word32) r10_154) << 0x20;
	Eq_71183 r10_187 = r10_154;
	uint64 r9_190 = r9_157;
	if ((word32) r9_157 == 0x00)
	{
		word32 eax_188 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_430);
		r10_187.u1 = (uint64) tArg20;
		r9_190 = (uint64) eax_188;
	}
	ui64 rbx_196 = rbx_163 | (int64) ((word32) r10_187) << 0x28;
	Eq_71183 r10_220 = r10_187;
	uint64 r9_223 = r9_190;
	if ((word32) r9_190 == 0x00)
	{
		word32 eax_221 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_431);
		r10_220.u1 = (uint64) tArg20;
		r9_223 = (uint64) eax_221;
	}
	ui64 rbx_229 = rbx_196 | (int64) ((word32) r10_220) << 0x30;
	uint64 r9_254 = r9_223;
	if ((word32) r9_223 == 0x00)
	{
		word32 eax_252 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_432);
		r9_254 = (uint64) eax_252;
		if (eax_252 == 0x00)
		{
			*r8 = (int64) tArg20 << 0x38 | rbx_229;
l0000000180022678:
			r8dOut.u0 = (<unknown>*) <invalid>;
			return (word32) r9_254;
		}
	}
	*r8 = 0x00;
	goto l0000000180022678;
}

// 00000001800226A0: Register word32 fn00000001800226A0(Register (ptr64 Eq_61952) rcx, Register word64 rdx, Register (ptr64 Eq_69797) r8, Stack Eq_69776 tArg20, Register out Eq_64910 r8dOut)
// Called from:
//      fn0000000180021870
//      fn0000000180021AF0
//      fn0000000180022C90
word32 fn00000001800226A0(union Eq_61952 * rcx, word64 rdx, union Eq_69797 * r8, Eq_69776 tArg20, union Eq_64910 & r8dOut)
{
	word32 r8d_129;
	word32 r8d_128;
	byte bLoc28;
	tArg20 = (Eq_69776) 0x00;
	word32 eax_33 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_128);
	ui32 ebp_67 = (ui32) tArg20;
	uint64 r9_124 = (uint64) eax_33;
	if (eax_33 == 0x00)
	{
		word32 eax_52 = fn00000001800223E0(rcx, rdx, &tArg20, bLoc28, out r8d_129);
		r9_124 = (uint64) eax_52;
		if (eax_52 == 0x00)
		{
			r8->u0 = tArg20 << 0x08 | ebp_67;
l0000000180022704:
			r8dOut.u0 = (<unknown>*) <invalid>;
			return (word32) r9_124;
		}
	}
	r8->u0 = 0x00;
	goto l0000000180022704;
}

// 0000000180022720: void fn0000000180022720(Register (ptr64 Eq_61952) rcx)
// Called from:
//      fn000000018001DF30
void fn0000000180022720(union Eq_61952 * rcx)
{
	if (rcx == null)
		return;
	if (rcx->u0.ptr0110 != null)
		fn0000000180022770(rcx);
	rcx->u0.ptr0028();
	free(rcx);
}

// 0000000180022770: void fn0000000180022770(Register (ptr64 Eq_61952) rcx)
// Called from:
//      fn000000018001E4A0
//      fn0000000180022720
//      fn0000000180022A10
//      fn0000000180024DF0
void fn0000000180022770(union Eq_61952 * rcx)
{
	if (rcx == null)
		return;
	struct Eq_71402 * rbx_19 = rcx->u0.ptr0110;
	if (rbx_19 == null)
		return;
	if (rbx_19->t00A0.u0 == 0x00 && rbx_19->dw0118 == 0x00)
		rbx_19->dw0090 == rbx_19->dw0094;
	void * rcx_40 = rbx_19->ptr0000;
	if (rcx_40 != null)
		free(rcx_40);
	rbx_19->ptr0000 = null;
	if (rbx_19->dw0068 == 0x08)
		fn00000001800202F0(&rbx_19->ptr0008);
	rbx_19->dw0068 = 0x00;
	free(rbx_19);
	rcx->u0.ptr0110 = null;
}

// 0000000180022830: void fn0000000180022830(Register (ptr64 Eq_61952) rcx, Register (ptr64 Eq_62362) rdx, Register (ptr64 word64) r8, Register up32 r9d, Stack Eq_61999 qwArg28, Stack up32 dwArg30, Stack Eq_61999 qwArg38, Stack up32 dwArg40)
// Called from:
//      fn000000018001DFF0
void fn0000000180022830(union Eq_61952 * rcx, struct Eq_62362 * rdx, word64 * r8, up32 r9d, Eq_61999 qwArg28, up32 dwArg30, Eq_61999 qwArg38, up32 dwArg40)
{
	Eq_70085 tLoc58;
	fn0000000180021AF0(rcx, rdx, null, r8, tLoc58, r9d, qwArg28, dwArg30, qwArg38, dwArg40);
}

// 0000000180022880: Register word32 fn0000000180022880(Register (ptr64 Eq_61952) rcx, Register (ptr64 Eq_71485) rdx)
// Called from:
//      fn000000018001DFF0
word32 fn0000000180022880(union Eq_61952 * rcx, union Eq_71485 * rdx)
{
	if (rcx == null)
		return ~0x65;
	rdx->u0 = rcx->u0.t0068.u0;
	return 0x00;
}

// 00000001800228A0: Register word32 fn00000001800228A0(Register (ptr64 Eq_61952) rcx)
// Called from:
//      fn000000018001E410
//      fn0000000180022C90
word32 fn00000001800228A0(union Eq_61952 * rcx)
{
	Eq_70085 tLoc58;
	if (rcx == null)
		return (word32) rcx - 0x66;
	rcx->u0.qw0088 = rcx->u0.qw00A8;
	rcx->u0.qw0080 = 0x00;
	uint64 rax_37 = (uint64) fn0000000180021AF0(rcx, (char *) rcx + 0x00B0, &rcx->u0 + 3, null, tLoc58, 0x00, 0x00, 0x00, 0x00, 0x00);
	rcx->u0.qw0090 = (uint64) ((word32) rax_37 == 0x00);
	return (word32) rax_37;
}

// 0000000180022920: void fn0000000180022920(Register (ptr64 Eq_61952) rcx)
// Called from:
//      fn000000018001DFF0
//      fn000000018001E410
void fn0000000180022920(union Eq_61952 * rcx)
{
	if (rcx == null)
		return;
	if (rcx->u0.qw0090 == 0x00)
		return;
	Eq_71485 rcx_15;
	rcx_15.u1 = rcx->u0.t0068.u1;
	if (rcx_15 != 0xFFFF && (rcx->u0).qw0080 + 0x01 == rcx_15)
		return;
	word32 ecx_39 = rcx->u0.dw00E0 + (rcx->u0).dw00DC;
	word32 eax_38 = rcx->u0.dw00D8 + 0x2E;
	++rcx->u0.qw0080;
	rcx->u0.qw0088 += (uint64) (eax_38 + ecx_39);
	Eq_70085 tLoc58;
	rcx->u0.qw0090 = (uint64) (fn0000000180021AF0(rcx, (char *) rcx + 0x00B0, &rcx->u0 + 3, null, tLoc58, 0x00, 0x00, 0x00, 0x00, 0x00) == 0x00);
}

// 00000001800229E0: Register word64 fn00000001800229E0()
// Called from:
//      fn000000018001DF30
word64 fn00000001800229E0()
{
	return fn0000000180022C90(null);
}

// 00000001800229F0: Register word32 fn00000001800229F0(Register (ptr64 Eq_61952) rcx)
// Called from:
//      fn000000018001E4A0
word32 fn00000001800229F0(union Eq_61952 * rcx)
{
	return fn0000000180022A10(rcx, null, null, 0x00, (struct <anonymous>) 0x00);
}

// 0000000180022A10: Register word32 fn0000000180022A10(Register (ptr64 Eq_61952) rcx, Register (ptr64 ui32) rdx, Register (ptr64 word32) r8, Register word32 r9d, Stack Eq_71612 tArg28)
// Called from:
//      fn00000001800229F0
word32 fn0000000180022A10(union Eq_61952 * rcx, ui32 * rdx, word32 * r8, word32 r9d, Eq_71612 tArg28)
{
	word64 r9;
	r9d = (word32) r9;
	if (tArg28.qw0000 != 0x00 || (rcx == null || (rcx->u0).qw0090 == 0x00))
		return ~0x65;
	if (rcx->u0.ptr0110 != null)
		fn0000000180022770(rcx);
	Eq_71643 tLoc28;
	Eq_71645 tLoc20;
	Eq_69741 tLoc48;
	Eq_69742 tLoc40;
	if (fn0000000180021870(rcx, &tLoc28, &tLoc20, &tArg28, tLoc48, tLoc40) != 0x00)
		return ~0x66;
	struct Eq_71402 * rax_71 = malloc(288);
	uint64 rax_229;
	if (rax_71 != null)
	{
		void * rax_82 = malloc(0x4000);
		rax_71->qw0070 = (word64) tLoc20;
		rax_71->dw0078 = (word32) tArg28;
		rax_71->ptr0000 = rax_82;
		rax_71->qw0080 = 0x00;
		rax_71->dw0118 = r9d;
		if (rax_82 != null)
		{
			rax_71->dw0068 = 0x00;
			if (rdx != null)
				*rdx = rcx->u0.dw00BC;
			if (r8 != null)
			{
				*r8 = 0x06;
				ui32 eax_124 = rcx->u0.dw00B8 & 0x06;
				if (eax_124 != 0x02)
				{
					if (eax_124 != 0x04)
					{
						if (eax_124 == 0x06)
							*r8 = 0x01;
					}
					else
						*r8 = 0x02;
				}
				else
					*r8 = 0x09;
			}
			rax_71->dw0094 = rcx->u0.dw00C4;
			rax_71->dw0090 = 0x00;
			rax_71->qw0088 = 0x00;
			rax_71->dw0108 = rcx->u0.dw00BC;
			rax_71->qw0100 = rcx->u0.qw0060;
			rax_71->ow00A8 = rcx->u0.ow0000;
			rax_71->ow00B8 = rcx->u0.ow0010;
			rax_71->t00C8.u0 = rcx->u0.t0020.u0;
			rax_71->t00D8.u0 = rcx->u0.t0030.u0;
			rax_71->ow00E8 = rcx->u0.ow0040;
			rax_71->ptr00F8 = rcx->u0.ptr0050;
			rax_71->qw0110 = rcx->u0.qw0078;
			rax_71->dw0024 = 0x00;
			uint64 rax_173 = (uint64) rcx->u0.dw00BC;
			word32 eax_174 = (word32) rax_173;
			if (eax_174 == 0x0C && r9d == 0x00)
				rax_71->dw0118 = 0x01;
			else if (eax_174 == 0x08 && r9d == 0x00)
			{
				rax_71->qw0038 = 0x00;
				rax_71->ptr0008 = null;
				rax_71->qw0040 = 0x00;
				rax_71->qw0048 = 0x00;
				rax_71->t0010.u1 = (up32) 0x00;
				word32 eax_219 = fn000000018001E940(&rax_71->ptr0008, (word32) rax_173 - 0x17, &g_b800288E8, (word32) rax_173 + 0x50);
				if (eax_219 != 0x00)
				{
					free(rax_71);
					rax_229 = (uint64) eax_219;
					return (word32) rax_229;
				}
				rax_71->dw0068 = 0x08;
			}
			uint64 rcx_242 = (uint64) tLoc28;
			rax_71->qw0098 = rcx->u0.qw00C8;
			rax_71->t00A0.u0 = rcx->u0.t00D0.u0;
			rax_71->qw0060 = (uint64) ((word128) (&rcx->u0)[3].ow0000 + (rcx_242 + 0x1E));
			rax_71->t0010.u1 = (up32) 0x00;
			rcx->u0.ptr0110 = rax_71;
			rcx->u0.dw0118 = 0x00;
			rax_229 = 0x00;
			return (word32) rax_229;
		}
		else
		{
			free(rax_71);
			rax_229 = 0xFFFFFF98;
			return (word32) rax_229;
		}
	}
	else
	{
		rax_229 = (uint64) ((word32) rax_71 - 0x68);
		return (word32) rax_229;
	}
}

// 0000000180022C90: Register word64 fn0000000180022C90(Register (ptr64 Eq_71602) rdx)
// Called from:
//      fn00000001800229E0
word64 fn0000000180022C90(struct Eq_71602 * rdx)
{
	word32 r8d_1636;
	word32 r8d_1634;
	word32 r8d_1637;
	Eq_70877 tLoc0188;
	ptr64 fp;
	Eq_70878 tLoc0180;
	Eq_69776 tLoc0180_1022 = (struct <anonymous>) tLoc0180;
	ui64 rax_18 = g_qw80030008 ^ fp - 0x0198;
	Eq_71933 tLoc0158;
	tLoc0158.qw0050 = 0x00;
	tLoc0158.qw0048 = 0x00;
	if (rdx == null)
		fn0000000180023410(&tLoc0158);
	else
	{
		word128 xmm1_35 = rdx->ow0010;
		tLoc0158.ow0000 = rdx->ow0000;
		word128 xmm0_37 = rdx->ow0020;
		tLoc0158.ow0010 = xmm1_35;
		word128 xmm1_39 = rdx->ow0030;
		tLoc0158.ow0020 = xmm0_37;
		word128 xmm0_41 = rdx->ow0040;
		tLoc0158.ow0030 = xmm1_39;
		tLoc0158.ow0040 = xmm0_41;
		tLoc0158.r0050 = rdx->r0050;
	}
	word64 rax_59 = fn0000000180023360(&tLoc0158);
	if (rax_59 != 0x00)
	{
		Eq_69760 rax_79 = fn00000001800221C0(&tLoc0158, rax_59, tLoc0188, tLoc0180);
		Eq_69760 rsi_118 = rax_79;
		word32 ebx_121;
		Eq_72035 tLoc0178;
		Eq_72043 tLoc0168;
		Eq_72100 tLoc0170;
		Eq_72133 tLocF0;
		Eq_72229 tLocB8;
		word32 eax_705;
		Eq_72256 tLocB0;
		Eq_72263 tLocE8;
		word32 r8d_879;
		if (rax_79 != 0x00)
		{
			ebx_121 = 0x00;
			if (fn0000000180023380(&tLoc0158, rax_79) != 0x00)
				ebx_121 = ~0x00;
			if (fn0000000180022450(&tLoc0158, rax_59, &tLoc0178, tLoc0180_1022) != 0x00)
				ebx_121 = ~0x00;
			word32 r8d_1629;
			if (fn0000000180022520(&tLoc0158, rax_59, &tLoc0168, tLoc0180_1022, out r8d_1629) != 0x00)
				ebx_121 = ~0x00;
			word32 r8d_1630;
			if (fn00000001800226A0(&tLoc0158, rax_59, &tLoc0168, tLoc0180_1022, out r8d_1630) != 0x00)
				ebx_121 = ~0x00;
			word32 r8d_1631;
			if (fn00000001800226A0(&tLoc0158, rax_59, &tLoc0168, tLoc0180_1022, out r8d_1631) != 0x00)
				ebx_121 = ~0x00;
			if (fn0000000180022450(&tLoc0158, rax_59, &tLoc0168, tLoc0180_1022) != 0x00)
				ebx_121 = ~0x00;
			if (fn0000000180022450(&tLoc0158, rax_59, &tLoc0170, tLoc0180_1022) != 0x00)
				ebx_121 = ~0x00;
			word32 r8d_1635;
			if (fn0000000180022520(&tLoc0158, rax_59, &tLocF0, tLoc0180_1022, out r8d_1635) != 0x00)
				ebx_121 = ~0x00;
			word32 eax_619 = fn0000000180022520(&tLoc0158, rax_59, &tLoc0178, tLoc0180_1022, out r8d_1637);
			word64 rax_624 = (word64) tLocF0;
			if (eax_619 != 0x00)
				ebx_121 = ~0x00;
			if (tLoc0178 != rax_624 || (tLoc0170 != 0x00 || tLoc0168.dw0000 != 0x00))
				ebx_121 = ~0x66;
			word32 r8d_1638;
			if (fn0000000180022520(&tLoc0158, rax_59, &tLocB8, tLoc0180_1022, out r8d_1638) != 0x00)
				ebx_121 = ~0x00;
			word32 r8d_1639;
			eax_705 = fn0000000180022520(&tLoc0158, rax_59, &tLocB0, tLoc0180_1022, out r8d_1639);
			tLocE8 = (Eq_72263) 0x00;
			struct Eq_64945 * r8_687 = (struct Eq_64945 *) <invalid>;
			r8d_879 = (word32) r8_687;
		}
		else
		{
			Eq_69760 rax_97 = fn0000000180022040(&tLoc0158, rax_59);
			ebx_121 = 0x00;
			rsi_118 = rax_97;
			if (rax_97 == 0x00)
				ebx_121 = ~0x00;
			if (fn0000000180023380(&tLoc0158, rax_97) != 0x00)
				ebx_121 = ~0x00;
			if (fn0000000180022450(&tLoc0158, rax_59, &tLoc0178, tLoc0180_1022) != 0x00)
				ebx_121 = ~0x00;
			word32 r8d_1632;
			if (fn00000001800226A0(&tLoc0158, rax_59, &tLoc0168, tLoc0180_1022, out r8d_1632) != 0x00)
				ebx_121 = ~0x00;
			word32 r8d_1633;
			if (fn00000001800226A0(&tLoc0158, rax_59, &tLoc0170, tLoc0180_1022, out r8d_1633) != 0x00)
				ebx_121 = ~0x00;
			word32 eax_249 = fn00000001800226A0(&tLoc0158, rax_59, &tLoc0178, tLoc0180_1022, out r8d_1634);
			uint64 rax_255 = (uint64) tLoc0178.dw0000;
			if (eax_249 != 0x00)
				ebx_121 = ~0x00;
			tLocF0 = (Eq_72133) rax_255;
			word32 eax_276 = fn00000001800226A0(&tLoc0158, rax_59, &tLoc0178, tLoc0180_1022, out r8d_1636);
			uint64 rax_281 = (uint64) tLoc0178.dw0000;
			if (eax_276 != 0x00)
				ebx_121 = ~0x00;
			if (rax_281 != tLocF0 || (tLoc0170 != 0x00 || tLoc0168.dw0000 != 0x00))
				ebx_121 = ~0x66;
			word32 eax_326 = fn0000000180022450(&tLoc0158, rax_59, &tLoc0178, tLoc0180_1022);
			uint64 rax_332 = (uint64) tLoc0178.dw0000;
			if (eax_326 != 0x00)
				ebx_121 = ~0x00;
			tLocB8 = (Eq_72229) rax_332;
			word32 eax_358 = fn0000000180022450(&tLoc0158, rax_59, &tLoc0178, tLoc0180_1022);
			uint64 rax_364 = (uint64) tLoc0178.dw0000;
			if (eax_358 != 0x00)
				ebx_121 = ~0x00;
			tLocB0 = (Eq_72256) rax_364;
			struct Eq_64945 * r8_375 = (struct Eq_64945 *) <invalid>;
			word32 r8d_1640;
			eax_705 = fn00000001800226A0(&tLoc0158, rax_59, &tLocE8, tLoc0180_1022, out r8d_1640);
			r8d_879 = (word32) r8_375;
		}
		up64 rcx_704 = (up64) tLocB0;
		up64 rdx_711 = (up64) tLocB8;
		if (eax_705 != 0x00)
			ebx_121 = ~0x00;
		if (rsi_118 >= rcx_704 + rdx_711 && ebx_121 == 0x00)
		{
			union Eq_61952 * rax_906 = malloc(288);
			if (rax_906 != null)
			{
				union Eq_61952 * rdx_912 = rax_906;
				union Eq_72315 * rcx_913 = &tLoc0158;
				uint64 r8_915;
				for (r8_915 = 0x02; r8_915 != 0x00; --r8_915)
				{
					rdx_912 = (union Eq_61952 *) &rdx_912->u0.qw0080;
					rdx_912->u1.owFFFFFF80 = rcx_913->u0.ow0000;
					rcx_913 = (union Eq_72315 *) ((char *) rcx_913 + 0x0080);
					rdx_912->u1.owFFFFFF90 = rcx_913->u0.owFFFFFF90;
					rdx_912->u1.owFFFFFFA0 = rcx_913->u0.owFFFFFFA0;
					rdx_912->u1.owFFFFFFB0 = rcx_913->u0.owFFFFFFB0;
					rdx_912->u1.owFFFFFFC0 = rcx_913->u0.owFFFFFFC0;
					rdx_912->u1.owFFFFFFD0 = rcx_913->u0.owFFFFFFD0;
					rdx_912->u1.owFFFFFFE0 = rcx_913->u0.owFFFFFFE0;
					rdx_912->u1.owFFFFFFF0 = rcx_913->u0.owFFFFFFF0;
				}
				rdx_912->u0.ow0000 = rcx_913->u0.ow0000;
				rdx_912->u0.ow0010 = rcx_913->u0.ow0010;
				fn00000001800228A0(rax_906);
			}
		}
		else
			tLoc0158.ptr0028();
	}
	word64 qwLoc01A0;
	return fn0000000180023580(rax_18 ^ fp - 0x0198, qwLoc01A0);
}

// 00000001800230A0: void fn00000001800230A0(Register (ptr64 Eq_61952) rcx, Register Eq_137 rdx, Register Eq_62434 r8d)
// Called from:
//      fn000000018001E4A0
void fn00000001800230A0(union Eq_61952 * rcx, Eq_137 rdx, Eq_62434 r8d)
{
	word64 r8;
	r8d = (word32) r8;
	if (rcx == null)
		return;
	struct Eq_71402 * rbx_16 = rcx->u0.ptr0110;
	if (rbx_16 == null)
		return;
	if (rbx_16->ptr0000 == null)
		return;
	if (r8d == 0x00)
		return;
	rbx_16->t0018.u0 = (byte *) rdx;
	rbx_16->t0020.u1 = (up32) r8d;
	Eq_62434 rcx_29;
	rcx_29.u0 = (uint64) r8d;
	if (rcx_29 > (rbx_16->t00A0).u0 && rbx_16->dw0118 == 0x00)
		rbx_16->t0020.u1 = rbx_16->t00A0.u1;
	Eq_62434 edx_46;
	edx_46.u1 = rbx_16->t0010.u1;
	if (rcx_29 > (uint64) edx_46 + rbx_16->qw0098 && rbx_16->dw0118 != 0x00)
		rbx_16->t0020.u1 = (up32) ((word64) edx_46 + rbx_16->qw0098);
	while (rbx_16->t0020.u1 > 0x00)
	{
		if (rbx_16->t0010.u1 == 0x00)
		{
			uint64 rax_100 = rbx_16->qw0098;
			word32 eax_109 = (word32) rax_100;
			if (rax_100 == 0x00)
				goto l000000018002320C;
			uint64 rdi_111 = 0x4000;
			if (rax_100 < 0x4000)
			{
				rdi_111 = (uint64) eax_109;
				if (eax_109 == 0x00)
					return;
			}
			Eq_62434 edi_149 = (word32) rdi_111;
			if (fn0000000180023380(&rbx_16->ow00A8, rbx_16->qw0110 + rbx_16->qw0060) != 0x00)
				return;
			rbx_16->ptr00B0();
			word64 rax_175;
			if ((word32) rax_175 != edi_149)
				return;
			uint64 rax_192 = (uint64) edi_149;
			rbx_16->qw0060 += rax_192;
			rbx_16->qw0098 -= rax_192;
			rbx_16->ptr0008 = rbx_16->ptr0000;
			rbx_16->t0010.u1 = (up32) edi_149;
		}
l000000018002320C:
		ui32 eax_205 = rbx_16->dw0108;
		if (eax_205 != 0x00 && rbx_16->dw0118 == 0x00)
		{
			if (eax_205 != 0x0C)
			{
				uint64 r14_313 = (uint64) rbx_16->dw0024;
				Eq_137 r15_315;
				r15_315.u0 = rbx_16->t0018.u0;
				int32 eax_330 = fn000000018001EB30(&rbx_16->ptr0008);
				int32 ebp_341 = eax_330;
				if (eax_330 >= 0x00 && rbx_16->qw0028 != 0x00)
					ebp_341 = ~0x02;
				uint64 rdi_354 = (uint64) rbx_16->dw0024 - r14_313;
				uint64 rcx_349 = (uint64) rbx_16->dw0090;
				rbx_16->qw0088 += rdi_354;
				word32 eax_383 = fn0000000180021570(rcx_349, r15_315, (word32) rdi_354);
				rbx_16->t00A0.u0 = (uint64) (rbx_16->t00A0.u0 - rdi_354);
				rbx_16->dw0090 = eax_383;
				if (ebp_341 == 0x01)
					break;
				if (ebp_341 != 0x00)
					return;
			}
		}
		else
		{
			Eq_62434 esi_216;
			esi_216.u1 = rbx_16->t0010.u1;
			if (esi_216 == 0x00 && rbx_16->qw0098 == 0x00)
				break;
			if (rbx_16->t0020.u1 < esi_216)
				esi_216.u1 = rbx_16->t0020.u1;
			if (esi_216 != 0x00)
			{
				byte * rdx_235 = null;
				uint64 r8_241 = (uint64) esi_216;
				do
				{
					++rdx_235;
					*(rdx_235 - (byte *) 1 + (rbx_16->t0018).u0) = *(rdx_235 - (byte *) 1 + rbx_16->ptr0008);
					--r8_241;
				} while (r8_241 != 0x00);
			}
			Eq_72618 rdi_268;
			rdi_268.u0 = (uint64) esi_216;
			Eq_137 rdx_260;
			rdx_260.u0 = rbx_16->t0018.u0;
			uint64 rcx_266 = (uint64) rbx_16->dw0090;
			rbx_16->qw0088 = (word64) rdi_268 + rbx_16->qw0088;
			word32 eax_308 = fn0000000180021570(rcx_266, rdx_260, esi_216);
			rbx_16->t00A0.u0 = (uint64) (rbx_16->t00A0.u0 - rdi_268);
			rbx_16->t0010.u1 = (up32) (rbx_16->t0010.u1 - esi_216);
			rbx_16->t0020.u1 = (up32) (rbx_16->t0020.u1 - esi_216);
			rbx_16->t0018.u0 += rdi_268;
			rbx_16->ptr0008 += rdi_268;
			rbx_16->dw0024 = (word32) esi_216.u1 + rbx_16->dw0024;
			rbx_16->dw0090 = eax_308;
		}
	}
}

// 0000000180023360: Register word64 fn0000000180023360(Register (ptr64 Eq_71998) rcx)
// Called from:
//      fn0000000180022C90
word64 fn0000000180023360(struct Eq_71998 * rcx)
{
	<anonymous> * r9_5 = rcx->ptr0000;
	word64 rcx_7 = rcx->qw0038;
	if (r9_5 == null)
	{
		rcx->ptr0040();
		word64 rax_14;
		return rax_14;
	}
	else
	{
		r9_5();
		word64 rax_18;
		return rax_18;
	}
}

// 0000000180023380: Register word32 fn0000000180023380(Register (ptr64 Eq_61952) rcx, Register Eq_69760 r8)
// Called from:
//      fn0000000180021870
//      fn0000000180021AF0
//      fn0000000180022040
//      fn00000001800221C0
//      fn0000000180022C90
//      fn00000001800230A0
word32 fn0000000180023380(union Eq_61952 * rcx, Eq_69760 r8)
{
	word32 r8d = (word32) r8;
	word32 r8_32_32 = SLICE(r8, word32, 32);
	Eq_71761 rax_5;
	rax_5.u1 = rcx->u0.t0020.u1;
	if (rax_5 == 0x00)
	{
		if ((uint64) r8d != r8)
			return ~0x00;
		rcx->u0.ptr0050();
		word64 rax_19;
		return (word32) rax_19;
	}
	else
	{
		rax_5();
		word64 rax_32;
		return (word32) rax_32;
	}
}

// 00000001800233B0: Register uint64 fn00000001800233B0(Register (ptr64 Eq_61952) rcx)
// Called from:
//      fn0000000180022040
//      fn00000001800221C0
uint64 fn00000001800233B0(union Eq_61952 * rcx)
{
	word64 rax_11;
	word64 rcx_8 = rcx->u0.qw0038;
	if (rcx->u0.t0020.u1 == 0x00)
	{
		rcx->u0.ptr0048();
		word32 eax_13 = (word32) rax_11;
		if (eax_13 != ~0x00)
			return (uint64) eax_13;
		return ~0x00;
	}
	else
	{
		rcx->u0.ptr0018();
		uint64 rax_26;
		return rax_26;
	}
}

// 0000000180023410: void fn0000000180023410(Register (ptr64 Eq_71993) rcx)
// Called from:
//      fn0000000180022C90
void fn0000000180023410(struct Eq_71993 * rcx)
{
	rcx->qw0038 = 0x00;
	rcx->ptr0000 = &g_t80023470;
	rcx->ptr0008 = &g_t800234C0;
	rcx->ptr0010 = &g_t80023550;
	rcx->ptr0018 = &g_t80023540;
	rcx->ptr0020 = &g_t800234E0;
	rcx->ptr0028 = &g_t800233F0;
	rcx->ptr0030 = &g_t80023400;
}

// 00000001800234E0: void fn00000001800234E0(Register word64 rdx, Register word64 r8, Register word32 r9d)
void fn00000001800234E0(word64 rdx, word64 r8, word32 r9d)
{
	if (r9d != 0x00 && (r9d != 0x01 && r9d != 0x02))
		return;
	(word32) fseeki64(rdx, r8) == 0x00;
}

// 0000000180023580: Register word64 fn0000000180023580(Register ui64 rcx, Stack word64 qwArg00)
// Called from:
//      PluginProc
//      fn0000000180002A70
//      fn0000000180002D40
//      fn00000001800035C0
//      fn0000000180003C80
//      fn0000000180003F40
//      fn0000000180006B30
//      fn0000000180006F90
//      fn00000001800077E0
//      fn0000000180007A40
//      fn0000000180007D40
//      fn0000000180008650
//      fn0000000180008870
//      fn0000000180008DC0
//      fn0000000180008FC0
//      fn0000000180009500
//      fn0000000180009870
//      fn0000000180009990
//      fn000000018000A190
//      fn000000018000A5E0
//      fn000000018000A7F0
//      fn000000018000AA90
//      fn000000018000B0F0
//      fn000000018000B390
//      fn000000018000B660
//      fn000000018000B870
//      fn000000018000BA90
//      fn000000018000C1B0
//      fn000000018000C5F0
//      fn000000018000CB20
//      fn000000018000D030
//      fn000000018000D570
//      fn000000018000D9F0
//      fn000000018000DE40
//      fn000000018000E400
//      fn000000018000E860
//      fn000000018000F210
//      fn000000018000FBF0
//      fn000000018000FFA0
//      fn0000000180010580
//      fn0000000180010B10
//      fn0000000180011140
//      fn0000000180011770
//      fn0000000180011D40
//      fn0000000180012300
//      fn0000000180012640
//      fn0000000180012B60
//      fn0000000180012ED0
//      fn0000000180013C40
//      fn0000000180014610
//      fn0000000180014820
//      fn0000000180014D40
//      fn0000000180014F10
//      fn00000001800150F0
//      fn00000001800156B0
//      fn00000001800160E0
//      fn00000001800166C0
//      fn0000000180016CF0
//      fn00000001800172F0
//      fn0000000180017AB0
//      fn0000000180018190
//      fn00000001800188D0
//      fn00000001800190D0
//      fn00000001800196F0
//      fn00000001800198F0
//      fn0000000180019C40
//      fn0000000180019F30
//      fn000000018001A460
//      fn000000018001AC20
//      fn000000018001AE80
//      fn000000018001B420
//      fn000000018001B660
//      fn000000018001B7D0
//      fn000000018001C9D0
//      fn000000018001CE80
//      fn000000018001D1F0
//      fn000000018001D360
//      fn000000018001DBF0
//      fn000000018001DF30
//      fn000000018001DFF0
//      fn0000000180020660
//      fn0000000180021580
//      fn0000000180022C90
//      fn0000000180024120
word64 fn0000000180023580(ui64 rcx, word64 qwArg00)
{
	if (rcx != g_qw80030008)
		return fn0000000180023E98(rcx, qwArg00);
	ui64 rcx_7 = __rol<word64,byte>(rcx, 0x10);
	if ((word16) rcx_7 == 0x00)
	{
		word64 rax;
		return rax;
	}
	rcx = __ror<word64,byte>(rcx_7, 0x10);
	return fn0000000180023E98(rcx, qwArg00);
}

// 00000001800235A4: void fn00000001800235A4(Register Eq_137 rcx)
// Called from:
//      fn0000000180001690
//      fn0000000180001B00
//      fn0000000180001C00
//      fn0000000180001CB0
//      fn0000000180001D60
//      fn0000000180001ED0
//      fn0000000180001FD0
//      fn00000001800020D0
//      fn0000000180002220
//      fn00000001800022D0
//      fn0000000180002390
//      fn0000000180002450
//      fn00000001800024D0
//      fn0000000180012ED0
//      fn00000001800249D0
//      fn0000000180024A30
//      fn0000000180024A70
//      fn0000000180024AD0
//      fn0000000180024B30
//      fn0000000180024B90
//      fn0000000180024BF0
//      fn0000000180024D4C
void fn00000001800235A4(Eq_137 rcx)
{
	fn000000018002367C(rcx);
}

// 00000001800235AC: void fn00000001800235AC(Register Eq_39 r8)
// Called from:
//      fn00000001800011C0
//      fn0000000180001520
//      fn00000001800015D0
//      fn0000000180001690
//      fn0000000180001B00
//      fn0000000180001C00
//      fn0000000180001CB0
//      fn0000000180001D60
//      fn0000000180001ED0
//      fn0000000180001FD0
//      fn00000001800020D0
//      fn0000000180002220
//      fn00000001800022D0
//      fn0000000180002390
//      fn0000000180002450
//      fn00000001800024D0
//      fn0000000180007D40
//      fn000000018000B390
//      fn000000018000E860
//      fn000000018000F210
//      fn0000000180012ED0
//      fn0000000180013C40
//      fn000000018001A460
//      fn000000018001B7D0
//      fn0000000180024DAC
void fn00000001800235AC(Eq_39 r8)
{
	Eq_39 rbx_24 = r8;
	while (true)
	{
		--rbx_24;
		if (rbx_24 == 0x00)
			break;
		fn0000000180024184();
		fn00000001800010B0();
	}
}

// 0000000180023618: void fn0000000180023618(Register word64 rcx, Register word64 rdx, Register uint64 r8, Register (ptr64 code) r9)
// Called from:
//      fn0000000180024E15
//      fn0000000180024E82
void fn0000000180023618(word64 rcx, word64 rdx, uint64 r8, <anonymous> * r9)
{
	word64 rdi_25 = rcx;
	uint64 rbx_27;
	<anonymous> * r9_56 = r9;
	uint64 r8_57 = r8;
	word64 rdx_58 = rdx;
	for (rbx_27 = 0x00; rbx_27 != r8; ++rbx_27)
	{
		fn0000000180024184();
		rdi_25 -= rdx;
		r9();
	}
}

// 000000018002367C: void fn000000018002367C(Register Eq_137 rcx)
// Called from:
//      fn0000000180001200
//      fn0000000180001620
//      fn0000000180001690
//      fn0000000180001810
//      fn0000000180003AF0
//      fn0000000180003BA0
//      fn0000000180003BE0
//      fn0000000180003C30
//      fn0000000180003C80
//      fn0000000180003E10
//      fn0000000180003F40
//      fn0000000180005C80
//      fn0000000180006420
//      fn00000001800067D0
//      fn000000018001DFF0
//      fn00000001800235A4
//      fn00000001800247A0
//      fn0000000180024840
//      fn0000000180024F30
void fn000000018002367C(Eq_137 rcx)
{
	free(rcx);
}

// 0000000180023684: Register word64 fn0000000180023684(Register Eq_486 rcx)
// Called from:
//      fn0000000180001620
//      fn0000000180001760
//      fn0000000180001810
//      fn0000000180001A00
//      fn0000000180001B50
//      fn0000000180001DD0
//      fn0000000180001ED0
//      fn0000000180001FD0
//      fn00000001800020D0
//      fn0000000180003E10
//      fn0000000180005C80
//      fn0000000180006420
//      fn00000001800067D0
//      fn0000000180012ED0
//      fn000000018001E4A0
word64 fn0000000180023684(Eq_486 rcx)
{
	return fn000000018002418C(rcx);
}

// 000000018002368C: void fn000000018002368C(Register (ptr64 Eq_25) rcx, Register uint64 rdx, Register Eq_39 r8)
// Called from:
//      fn00000001800010C0
//      fn0000000180001460
//      fn0000000180001760
//      fn0000000180001A00
//      fn0000000180001B50
//      fn0000000180001DD0
//      fn0000000180001ED0
//      fn0000000180001FD0
//      fn00000001800020D0
//      fn0000000180012ED0
//      fn000000018001B7D0
void fn000000018002368C(struct Eq_25 * rcx, uint64 rdx, Eq_39 r8)
{
	struct Eq_25 * rdi_27 = rcx;
	Eq_39 rbx_29;
	rbx_29.u1 = 0x00;
	while (rbx_29 != r8)
	{
		fn0000000180024184();
		fn0000000180001090(rdi_27);
		rdi_27 = (struct Eq_25 *) ((char *) &rdi_27->qw0000 + rdx);
		rbx_29 = (word64) rbx_29.u1 + 1;
	}
}

// 00000001800236FC: Register byte fn00000001800236FC(Register (ptr32 Eq_72893) gs)
// Called from:
//      fn0000000180023AD8
byte fn00000001800236FC(struct Eq_72893 * gs)
{
	uint64 rax_5 = (uint64) fn0000000180024398();
	word56 rax_56_8_48 = SLICE(rax_5, word56, 8);
	word64 rax_47;
	if ((word32) rax_5 != 0x00)
	{
		word64 rcx_18 = gs->ptr0030->qw0008;
		word64 rax_27;
		do
		{
			__lock();
			rax_56_8_48 = SLICE(rax_27, word56, 8);
			if (!__cmpxchg<word64>(g_qw800300E8, rcx_18, 0x00, out rax_27))
				goto l000000018002372A;
		} while (rcx_18 != rax_27);
		rax_47 = SEQ(rax_56_8_48, 0x01);
	}
	else
	{
l000000018002372A:
		rax_47 = SEQ(rax_56_8_48, 0x00);
	}
	return (byte) rax_47;
}

// 0000000180023738: Register byte fn0000000180023738(Register word32 edx, Register word64 rbx)
// Called from:
//      fn0000000180023AD8
byte fn0000000180023738(word32 edx, word64 rbx)
{
	word56 rax_56_8_82;
	word64 rax_79;
	if (fn0000000180024398() != 0x00)
	{
		fn00000001800241C8(edx, (word32) rbx);
		word64 rax_41;
		rax_56_8_82 = SLICE(rax_41, word56, 8);
	}
	else
	{
		word32 eax_16 = fn0000000180024390();
		word64 rax_20 = configure_narrow_argv(eax_16, (uint64) eax_16);
		word56 rax_56_8_80 = SLICE(rax_20, word56, 8);
		if ((word32) rax_20 != 0x00)
		{
			rax_79 = SEQ(rax_56_8_80, 0x00);
			return (byte) rax_79;
		}
		rax_56_8_82 = SLICE(initialize_narrow_environment(), word56, 8);
	}
	rax_79 = SEQ(rax_56_8_82, 0x01);
	return (byte) rax_79;
}

// 000000018002376C: Register byte fn000000018002376C(Register out ptr64 rbxOut)
// Called from:
//      fn0000000180023AD8
byte fn000000018002376C(ptr64 & rbxOut)
{
	ptr64 rbx_14;
	uint64 rax_12 = (uint64) fn00000001800238B8(0x00, out rbx_14);
	rbxOut = rbx_14;
	return (byte) ((byte) rax_12 != 0x00);
}

// 0000000180023784: Register byte fn0000000180023784()
// Called from:
//      fn0000000180023AD8
byte fn0000000180023784()
{
	byte al_15;
	if (fn00000001800248F0() != 0x00)
	{
		if (fn00000001800248F0() != 0x00)
		{
			al_15 = 0x01;
			return al_15;
		}
		fn00000001800248F0();
	}
	al_15 = 0x00;
	return al_15;
}

// 00000001800237AC: Register byte fn00000001800237AC()
// Called from:
//      fn0000000180023AD8
byte fn00000001800237AC()
{
	fn00000001800248F0();
	fn00000001800248F0();
	return 0x01;
}

// 00000001800237C4: void fn00000001800237C4(Register Eq_73011 rcx, Register word32 edx, Register Eq_73013 r8, Register (ptr32 Eq_72893) gs, Stack word32 dwArg28, Stack (ptr64 (ptr64 word32)) qwArg30)
// Called from:
//      fn0000000180024EF9
void fn00000001800237C4(Eq_73011 rcx, word32 edx, Eq_73013 r8, struct Eq_72893 * gs, word32 dwArg28, word32 ** qwArg30)
{
	if (fn0000000180024398() == 0x00 && edx == 0x01)
	{
		fn0000000180024184();
		fn0000000180023AD8(rcx, 0x00, r8, gs);
	}
	seh_filter_dll(dwArg28, (uint64) dwArg28, qwArg30);
}

// 0000000180023828: void fn0000000180023828()
// Called from:
//      fn0000000180023AD8
void fn0000000180023828()
{
	if (fn0000000180024398() == 0x00)
	{
		if (fn00000001800248F4() == 0x00)
			cexit();
	}
	else
		execute_onexit_table(&g_ow800300F0);
}

// 0000000180023858: void fn0000000180023858()
// Called from:
//      fn0000000180023AD8
//      fn0000000180024EDD
void fn0000000180023858()
{
	fn00000001800248F0();
	fn00000001800248F0();
}

// 000000018002386C: Register byte fn000000018002386C(Register word32 ecx, Register word32 edx)
// Called from:
//      fn0000000180023AD8
byte fn000000018002386C(word32 ecx, word32 edx)
{
	word64 rax_29;
	byte al_18 = g_b80030120;
	if (ecx == 0x00)
		al_18 = 0x01;
	g_b80030120 = al_18;
	fn00000001800241C8(edx, 0x01);
	word56 rax_56_8_89 = SLICE(rax_29, word56, 8);
	word64 rax_87;
	if (fn00000001800248F0() != 0x00)
	{
		if (fn00000001800248F0() != 0x00)
		{
			rax_87 = SEQ(rax_56_8_89, 0x01);
			return (byte) rax_87;
		}
		fn00000001800248F0();
	}
	rax_87 = SEQ(rax_56_8_89, 0x00);
	return (byte) rax_87;
}

// 00000001800238B8: Register byte fn00000001800238B8(Register up32 ecx, Register out Eq_72979 rbxOut)
// Called from:
//      fn000000018002376C
byte fn00000001800238B8(up32 ecx, union Eq_72979 & rbxOut)
{
	Eq_73100 tLoc40;
	word64 qwLoc50;
	Eq_72979 rbx_12;
	rbx_12.u0 = (uint64) ecx;
	word32 ebx_47 = (word32) rbx_12;
	if (ecx > 0x01)
	{
		<anonymous> ** rcx_20 = fn00000001800243A4(0x05, qwLoc50, tLoc40);
		int3();
		int3();
		int3();
		int3();
		uint64 rax_28 = (uint64) fn0000000180023984(rcx_20);
		rbxOut = rbx_12;
		return (byte) rax_28;
	}
	else
	{
		word64 rax_162;
		if (fn0000000180024398() != 0x00 && ebx_47 == 0x00)
		{
			word64 rax_93 = initialize_onexit_table(&g_ow800300F0);
			word56 rax_56_8_163 = SLICE(rax_93, word56, 8);
			if ((word32) rax_93 != 0x00)
				rax_162 = SEQ(rax_56_8_163, 0x00);
			else
			{
				word64 rax_105 = initialize_onexit_table(&g_ow80030108);
				rax_162 = SEQ(SLICE(rax_105, word56, 8), (byte) ((word32) rax_105 == 0x00));
			}
		}
		else
		{
			ui64 rdx_53 = g_qw80030008;
			uint64 rax_64 = (uint64) ((word32) rdx_53 & 0x3F);
			Eq_73131 r8_72 = __ror<word64,byte>(~0x00, 0x40 - (byte) rax_64) ^ rdx_53;
			g_ow800300F0 = SEQ(r8_72, r8_72);
			g_t80030100.u1 = (real64) r8_72;
			g_ow80030108 = SEQ(r8_72, r8_72);
			g_t80030118.u1 = (real64) r8_72;
			rax_162 = SEQ(SLICE(rax_64, word56, 8), 0x01);
		}
		Eq_72979 rbx;
		rbxOut = rbx;
		return (byte) rax_162;
	}
}

// 0000000180023984: Register byte fn0000000180023984(Register (ptr64 (ptr64 code)) rcx)
// Called from:
//      fn00000001800238B8
//      fn0000000180023AD8
byte fn0000000180023984(<anonymous> ** rcx)
{
	word56 rax_56_8_104 = 0x5A;
	word64 rax_103;
	if (g_w80000000 == 23117)
	{
		int64 rax_12 = (int64) g_dw8000003C;
		rax_56_8_104 = SLICE(rax_12, word56, 8);
		struct Eq_73193 * rcx_14 = (struct Eq_73193 *) ((char *) &g_w80000000 + rax_12);
		if (rcx_14->dw0000 == 0x4550)
		{
			rax_56_8_104 = 0x02;
			if (rcx_14->w0018 == 0x020B)
			{
				uint64 rax_33 = (uint64) rcx_14->w0006;
				struct Eq_73217 * rdx_30 = (struct Eq_73217 *) ((char *) &rcx_14->w0018 + (uint64) rcx_14->w0014);
				uint64 r8_26 = rcx - &g_w80000000;
				word56 rax_56_8_109 = SLICE(rax_33, word56, 8);
				struct Eq_73217 * r9_35 = rdx_30 + rax_33;
				for (; rdx_30 != r9_35; rdx_30 += (struct Eq_73236 *) 0x28)
				{
					uint64 rcx_49 = (uint64) rdx_30->dw000C;
					word32 ecx_56 = (word32) rcx_49;
					if (r8_26 >= rcx_49)
					{
						uint64 rax_58 = (uint64) (rdx_30->dw0008 + ecx_56);
						rax_56_8_109 = SLICE(rax_58, word56, 8);
						if (r8_26 < rax_58)
							goto l00000001800239FB;
					}
				}
				rdx_30 = null;
l00000001800239FB:
				if (rdx_30 == null)
					rax_103 = SEQ(rax_56_8_109, 0x00);
				else if (rdx_30->dw0024 < 0x00)
					rax_103 = SEQ(rax_56_8_109, 0x00);
				else
					rax_103 = SEQ(rax_56_8_109, 0x01);
				return (byte) rax_103;
			}
		}
	}
	rax_103 = SEQ(rax_56_8_104, 0x00);
	return (byte) rax_103;
}

// 0000000180023A20: void fn0000000180023A20(Register byte cl)
// Called from:
//      fn0000000180023AD8
//      fn0000000180024EC6
//      fn0000000180024EDD
void fn0000000180023A20(byte cl)
{
	if (fn0000000180024398() != 0x00 && cl == 0x00)
		g_qw800300E8 = 0x00;
}

// 0000000180023A44: Register byte fn0000000180023A44(Register byte dl)
// Called from:
//      fn0000000180023AD8
byte fn0000000180023A44(byte dl)
{
	if (g_b80030120 == 0x00 || dl == 0x00)
	{
		fn00000001800248F0();
		fn00000001800248F0();
	}
	return 0x01;
}

// 0000000180023A70: Register Eq_73282 fn0000000180023A70(Register Eq_73282 rcx)
// Called from:
//      fn0000000180023AC0
Eq_73282 fn0000000180023A70(Eq_73282 rcx)
{
	ui64 rdx_7 = g_qw80030008;
	word32 eax_34;
	if (__ror<word64,byte>(rdx_7 ^ g_ow800300F0, (byte) rdx_7 & 0x3F) == ~0x00)
		eax_34 = (word32) crt_atexit(rcx);
	else
		eax_34 = (word32) register_onexit_function(&g_ow800300F0, rcx);
	Eq_73282 rcx_33;
	rcx_33.u0 = 0x00;
	if (eax_34 == 0x00)
		rcx_33 = rcx;
	return rcx_33;
}

// 0000000180023AC0: void fn0000000180023AC0(Register Eq_73282 rcx)
// Called from:
//      fn0000000180023AD8
void fn0000000180023AC0(Eq_73282 rcx)
{
	fn0000000180023A70(rcx);
}

// 0000000180023AD8: Register word32 fn0000000180023AD8(Register Eq_73011 rcx, Register int32 edx, Register Eq_73013 r8, Register (ptr32 Eq_72893) gs)
// Called from:
//      fn00000001800237C4
//      DllMain
word32 fn0000000180023AD8(Eq_73011 rcx, int32 edx, Eq_73013 r8, struct Eq_72893 * gs)
{
	if (edx == 0x00)
		return fn0000000180023C54(gs);
	if (edx == 0x01)
		return fn0000000180023B28(rcx, r8, gs);
	byte al_54;
	if (edx == 0x02)
	{
		al_54 = fn0000000180023784();
		return (word32) al_54;
	}
	else
	{
		if (edx != 0x03)
			return 0x01;
		al_54 = fn00000001800237AC();
		return (word32) al_54;
	}
}

// 0000000180023B28: Register word32 fn0000000180023B28(Register Eq_73011 rcx, Register Eq_73013 rdx, Register (ptr32 Eq_72893) gs)
// Called from:
//      fn0000000180023AD8
word32 fn0000000180023B28(Eq_73011 rcx, Eq_73013 rdx, struct Eq_72893 * gs)
{
	word64 rbx_72;
	word32 edx_23 = (word32) rdx;
	uint64 rax_216;
	if (fn000000018002386C(0x00, edx_23) != 0x00)
	{
		fn00000001800236FC(gs);
		byte dil_144 = 0x01;
		if (g_dw800300E0 != 0x00)
		{
			word64 qwLoc30;
			Eq_73100 tLoc20;
			fn00000001800243A4(0x07, qwLoc30, tLoc20);
		}
		g_dw800300E0 = 0x01;
		byte bl_149 = (byte) rbx_72;
		if (fn000000018002376C(out rbx_72) != 0x00)
		{
			fn00000001800245FC();
			fn0000000180023AC0(6442600008);
			fn00000001800245BC();
			fn0000000180023AC0(6442599884);
			fn00000001800245D8();
			word32 edx_123 = (word32) &g_t800252D8;
			if (_initterm_e(&g_t800252D0, &g_t800252D8) == 0x00 && fn0000000180023738(edx_123, rbx_72) != 0x00)
			{
				_initterm(&g_t800252B0, &g_t800252C8);
				g_dw800300E0 = 0x02;
				dil_144 = 0x00;
			}
		}
		fn0000000180023A20(bl_149);
		if (dil_144 == 0x00)
		{
			<anonymous> ** rax_164 = fn00000001800245F4();
			if (*rax_164 != null && fn0000000180023984(rax_164) != 0x00)
			{
				<anonymous> * rbx_185 = (<anonymous> *) *rax_164;
				fn0000000180024184();
				rbx_185();
			}
			++g_dw80030124;
			rax_216 = 0x01;
			return (word32) rax_216;
		}
	}
	rax_216 = 0x00;
	return (word32) rax_216;
}

// 0000000180023C54: Register word32 fn0000000180023C54(Register (ptr32 Eq_72893) gs)
// Called from:
//      fn0000000180023AD8
word32 fn0000000180023C54(struct Eq_72893 * gs)
{
	int32 eax_17 = g_dw80030124;
	uint64 rax_100;
	if (eax_17 <= 0x00)
		rax_100 = 0x00;
	else
	{
		g_dw80030124 = eax_17 - 0x01;
		byte al_36 = fn00000001800236FC(gs);
		if (g_dw800300E0 != 0x02)
		{
			word64 qwLoc30;
			Eq_73100 tLoc20;
			fn00000001800243A4(0x07, qwLoc30, tLoc20);
		}
		fn0000000180023828();
		g_dw800300E0 = 0x00;
		fn0000000180023858();
		fn0000000180023A20(al_36);
		rax_100 = (uint64) (fn0000000180023A44(0x00) != 0x00);
	}
	return (word32) rax_100;
}

// 0000000180023CD8: Register word32 fn0000000180023CD8(Register Eq_73011 rcx, Register int32 edx, Register Eq_73013 r8, Register (ptr32 Eq_72893) gs)
// Called from:
//      DllMain
word32 fn0000000180023CD8(Eq_73011 rcx, int32 edx, Eq_73013 r8, struct Eq_72893 * gs)
{
	word64 rdx;
	edx = (word32) rdx;
	uint64 rax_200;
	if (edx == 0x00 && g_dw80030124 <= edx)
	{
		rax_200 = 0x00;
		return (word32) rax_200;
	}
	up32 eax_38 = (word32) rdx - 0x01;
	up32 ebx_192;
	if (eax_38 <= 0x01)
	{
		fn0000000180023DD0(rcx, edx, r8);
		ebx_192 = eax_38;
		if (eax_38 == 0x00)
			goto l0000000180023DB5;
		eax_38 = fn0000000180023AD8(rcx, edx, r8, gs);
		ebx_192 = eax_38;
		if (eax_38 == 0x00)
		{
l0000000180023DB5:
			rax_200 = (uint64) ebx_192;
			return (word32) rax_200;
		}
	}
	fn0000000180024598(rcx, edx);
	ebx_192 = eax_38;
	if (edx == 0x01 && eax_38 == 0x00)
	{
		fn0000000180024598(rcx, edx);
		fn0000000180023AD8(rcx, 0x00, r8, gs);
		fn0000000180023DD0(rcx, edx, r8);
	}
	if (edx == 0x00 || edx == 0x03)
	{
		up32 eax_175 = fn0000000180023AD8(rcx, edx, r8, gs);
		ebx_192 = eax_175;
		if (eax_175 != 0x00)
		{
			fn0000000180023DD0(rcx, edx, r8);
			ebx_192 = eax_175;
		}
	}
	goto l0000000180023DB5;
}

// 0000000180023DD0: void fn0000000180023DD0(Register Eq_73011 rcx, Register int32 edx, Register Eq_73013 r8)
// Called from:
//      DllMain
void fn0000000180023DD0(Eq_73011 rcx, int32 edx, Eq_73013 r8)
{
	word64 rdx;
	edx = (word32) rdx;
	if (g_qw80025360 != 0x00)
	{
		fn0000000180024184();
		fn0000000000000000(edx, r8, rcx, (uint64) edx);
	}
}

// 0000000180023E24: Register Eq_2142 DllMain(Register Eq_73011 hModule, Register Eq_11093 dwReason, Register Eq_73013 lpReserved)
Eq_2142 DllMain(Eq_73011 hModule, Eq_11093 dwReason, Eq_73013 lpReserved)
{
	if (dwReason == 0x01)
	{
		Eq_73571 tLoc18;
		fn00000001800244EC(tLoc18);
	}
	uint64 rdx_34 = (uint64) dwReason;
	struct Eq_72893 * gs;
	return fn0000000180023CD8(hModule, (word32) rdx_34, lpReserved, gs);
}

// 0000000180023E64: Register Eq_73011 fn0000000180023E64(Register Eq_73011 rcx, Register out Eq_64910 edxOut)
// Called from:
//      fn0000000180023580
//      fn0000000180023F80
Eq_73011 fn0000000180023E64(Eq_73011 rcx, union Eq_64910 & edxOut)
{
	word32 rax_32_32_15 = SLICE(SetUnhandledExceptionFilter(null), word32, 32);
	UnhandledExceptionFilter(rcx);
	Eq_73011 rax_16 = SEQ(rax_32_32_15, GetCurrentProcess());
	TerminateProcess(rax_16, 0xC0000409);
	edxOut.u0 = (<unknown>*) <invalid>;
	return rax_16;
}

// 0000000180023E98: Register word64 fn0000000180023E98(Register ui64 rcx, Stack word64 qwArg00)
// Called from:
//      fn0000000180023580
word64 fn0000000180023E98(ui64 rcx, word64 qwArg00)
{
	if (IsProcessorFeaturePresent(0x17) == 0x00)
	{
		Eq_73100 tLoc38;
		fn000000018002408C(&g_t800301D0, tLoc38);
		g_qw800302C8 = qwArg00;
		ptr64 fp;
		g_ptr80030268 = fp + 0x08;
		g_qw80030140 = g_qw800302C8;
		g_qw80030250 = rcx;
		g_dw80030130 = 0xC0000409;
		g_dw80030134 = 0x01;
		g_dw80030148 = 0x01;
		g_qw80030150 = 0x02;
		word32 edx_73;
		fn0000000180023E64(6442603368, out edx_73);
		word64 rax_52;
		return rax_52;
	}
	else
		__fastfail(0x02);
}

// 0000000180023F6C: Register word64 fn0000000180023F6C(Register out Eq_64910 edxOut)
// Called from:
//      fn0000000180020660
word64 fn0000000180023F6C(union Eq_64910 & edxOut)
{
	word32 edx_26;
	word64 qwLoc30;
	word64 rcx_11 = fn0000000180023F80(0x08, qwLoc30, out edx_26);
	edxOut.u0 = (<unknown>*) <invalid>;
	return rcx_11;
}

// 0000000180023F80: Register word64 fn0000000180023F80(Register word32 ecx, Stack word64 qwArg00, Register out Eq_64910 edxOut)
// Called from:
//      fn0000000180023F6C
word64 fn0000000180023F80(word32 ecx, word64 qwArg00, union Eq_64910 & edxOut)
{
	word32 edx_65;
	if (IsProcessorFeaturePresent(0x17) == 0x00)
	{
		Eq_73100 tLoc28;
		fn000000018002401C(&g_t800301D0, tLoc28);
		g_qw800302C8 = qwArg00;
		ptr64 fp;
		g_ptr80030268 = fp + 0x08;
		g_qw80030140 = g_qw800302C8;
		g_dw80030130 = 0xC0000409;
		g_dw80030134 = 0x01;
		g_dw80030148 = 0x01;
		g_qw80030150 = (uint64) ecx;
		word64 rcx_43 = fn0000000180023E64(&g_v80025368, out edx_65);
		edxOut.u0 = (<unknown>*) <invalid>;
		return rcx_43;
	}
	else
		__fastfail(ecx);
}

// 000000018002401C: void fn000000018002401C(Register Eq_73618 rcx, Stack Eq_73100 tArg08)
// Called from:
//      fn0000000180023F80
void fn000000018002401C(Eq_73618 rcx, Eq_73100 tArg08)
{
	RtlCaptureContext(rcx);
	Eq_73100 rdi_11;
	rdi_11.u1 = rcx->t00F8.u1;
	Eq_73717 rax_16 = RtlLookupFunctionEntry(rdi_11, &tArg08, null);
	if (rax_16 != null)
	{
		ptr64 fp;
		KERNEL32.dll!RtlVirtualUnwind(0x00, 0x00, rdi_11, rax_16, fp + 0x10, fp + 0x18, 0x00, tArg08, rcx, fp + 0x18, fp + 0x10, 0x00);
	}
}

// 000000018002408C: void fn000000018002408C(Register Eq_73618 rcx, Stack Eq_73100 tArg08)
// Called from:
//      fn0000000180023580
void fn000000018002408C(Eq_73618 rcx, Eq_73100 tArg08)
{
	RtlCaptureContext(rcx);
	Eq_73100 rsi_15;
	rsi_15.u1 = rcx->t00F8.u1;
	uint64 rdi_17 = 0x00;
	do
	{
		word32 edi_59 = (word32) rdi_17;
		Eq_73717 rax_28 = RtlLookupFunctionEntry(rsi_15, &tArg08, null);
		if (rax_28 == null)
			return;
		ptr64 fp;
		KERNEL32.dll!RtlVirtualUnwind(0x00, 0x00, rsi_15, rax_28, fp + 0x10, fp + 0x18, 0x00, tArg08, rcx, fp + 0x18, fp + 0x10, 0x00);
		rdi_17 = (uint64) (edi_59 + 0x01);
	} while ((word32) rdi_17 < 0x02);
}

// 0000000180024100: void fn0000000180024100(Register Eq_73786 rdx, Register (ptr64 Eq_73787) r9)
void fn0000000180024100(Eq_73786 rdx, struct Eq_73787 * r9)
{
	word64 qwLoc30;
	fn0000000180024120(rdx, r9, r9->ptr0038, qwLoc30);
}

// 0000000180024120: void fn0000000180024120(Register Eq_73786 rcx, Register (ptr64 Eq_73787) rdx, Register (ptr64 Eq_73792) r8, Stack word64 qwArg00)
// Called from:
//      fn0000000180024100
//      fn00000001800248F8
void fn0000000180024120(Eq_73786 rcx, struct Eq_73787 * rdx, struct Eq_73792 * r8, word64 qwArg00)
{
	ui32 r11d_35 = r8->t0000.u0 & ~0x07;
	Eq_73786 r9_15 = rcx;
	Eq_73786 r10_19 = rcx;
	if ((r8->t0000.u1 & 0x04) != 0x00)
		r10_19 = (word64) rcx + (int64) r8->dw0004 & (int64) (-r8->dw0008);
	word64 rdx_39 = (word64) *((word64) r10_19 + (int64) r11d_35);
	struct Eq_73828 * rcx_44 = (uint64) rdx->ptr0010->dw0008 + rdx->qw0008;
	if ((rcx_44->b0003 & 0x0F) != 0x00)
		r9_15 = (word64) rcx + (uint64) ((word32) rcx_44->b0003 & ~0x0F);
	ui64 r9_59 = r9_15 ^ rdx_39;
	fn0000000180023580(r9_59, qwArg00);
}

// 0000000180024184: void fn0000000180024184()
// Called from:
//      fn00000001800235AC
//      fn0000000180023618
//      fn000000018002368C
//      fn00000001800237C4
//      fn0000000180023AD8
//      fn0000000180023DD0
//      fn00000001800245FC
//      fn0000000180024648
void fn0000000180024184()
{
	g_ptr800252A0();
}

// 000000018002418C: Register (ptr64 void) fn000000018002418C(Register Eq_486 rcx)
// Called from:
//      fn0000000180023684
void * fn000000018002418C(Eq_486 rcx)
{
	void * rax_11;
	while (true)
	{
		rax_11 = malloc((size_t) rcx);
		if (rax_11 != null)
			break;
		if ((word32) callnewh(rcx) == 0x00)
		{
			if (rcx == ~0x00)
				fn0000000180024804();
			else
				fn00000001800247E4();
		}
	}
	return rax_11;
}

// 00000001800241C8: void fn00000001800241C8(Register word32 edx, Register word32 ebx)
// Called from:
//      fn0000000180023738
//      fn000000018002386C
void fn00000001800241C8(word32 edx, word32 ebx)
{
	word64 rbx;
	ui32 ebx_173 = (word32) rbx;
	g_dw8003001C = 0x02;
	__cpuid(0x00, 0x00, &0x00, &ebx_173, &0x00, &edx);
	g_dw80030018 = 0x01;
	uint64 rdx_65 = (uint64) (ebx_173 ^ 1970169159);
	uint64 r8_118 = (uint64) g_dw800306A0;
	ui32 edx_71 = (word32) rdx_65;
	__cpuid(0x01, 0x00, &0x01, &ebx_173, &0x00, &edx_71);
	byte bLoc20_271 = 0x00;
	ui32 r8d_95 = (word32) r8_118;
	ui32 r11d_125 = ebx_173 ^ 1752462657 | edx ^ 0x69746E65 | 0x444D4163;
	if ((edx ^ 0x49656E69 | 1818588270 | edx_71) == 0x00)
	{
		g_qw80030020 = ~0x00;
		r8_118 = (uint64) (r8d_95 | 0x04);
		ui32 r8d_100 = (word32) r8_118;
		g_dw800306A0 = r8d_100;
		if (false || (false || false))
		{
l00000001800242AA:
			r8_118 = (uint64) (r8d_100 | 0x01);
			g_dw800306A0 = (word32) r8_118;
			goto l00000001800242B5;
		}
		if (true)
		{
			ebx_173 = 0x00010001;
			if (!__bt<word64>(0x100010001, 0xFFFCF9B0))
				goto l00000001800242AA;
		}
	}
l00000001800242B5:
	ui32 r8d_139 = (word32) r8_118;
	uint64 r8_141 = r8_118;
	if (r11d_125 == 0x00)
	{
		r8_141 = r8_118;
		if (false)
		{
			r8_141 = (uint64) (r8d_139 | 0x04);
			g_dw800306A0 = (word32) r8_141;
		}
	}
	ui32 r8d_182 = (word32) r8_141;
	if (false)
	{
		__cpuid(0x07, 0x00, &0x07, &ebx_173, &0x00, &edx_71);
		bLoc20_271 = (byte) ebx_173;
		if (!__bt<word32>(ebx_173, 0x09))
			g_dw800306A0 = r8d_182 | 0x02;
	}
	if (!__bt<word32>(0x00, 0x14))
	{
		g_dw80030018 = 0x02;
		g_dw8003001C = 0x06;
		if (!__bt<word32>(0x00, 0x1B) && !__bt<word32>(0x00, 0x1C))
		{
			word64 edx_eax_199 = __xgetbv(0x00);
			if (((SLICE(edx_eax_199, byte, 32) << 0x20 | (byte) edx_eax_199) & 0x06) == 0x06)
			{
				ui32 eax_229 = g_dw8003001C | 0x08;
				g_dw80030018 = 0x03;
				g_dw8003001C = eax_229;
				if ((bLoc20_271 & 0x20) != 0x00)
				{
					g_dw80030018 = 0x05;
					g_dw8003001C = eax_229 | 0x20;
				}
			}
		}
	}
}

// 0000000180024390: Register word32 fn0000000180024390()
// Called from:
//      fn0000000180023738
word32 fn0000000180024390()
{
	return 0x01;
}

// 0000000180024398: Register word32 fn0000000180024398()
// Called from:
//      fn00000001800236FC
//      fn0000000180023738
//      fn00000001800237C4
//      fn0000000180023828
//      fn00000001800238B8
//      fn0000000180023A20
word32 fn0000000180024398()
{
	return (word32) (g_dw80030030 != 0x00);
}

// 00000001800243A4: Register (ptr64 Eq_74059) fn00000001800243A4(Register word32 ecx, Stack word64 qwArg00, Stack Eq_73100 tArg10)
// Called from:
//      fn00000001800238B8
//      fn0000000180023AD8
struct _EXCEPTION_POINTERS * fn00000001800243A4(word32 ecx, word64 qwArg00, Eq_73100 tArg10)
{
	if (IsProcessorFeaturePresent(0x17) == 0x00)
	{
		g_dw800306A4 = 0x00;
		Eq_74075 tLoc04D8;
		memset(&tLoc04D8, 0, 0x04D0);
		RtlCaptureContext(&tLoc04D8);
		Eq_73100 rbx_30;
		rbx_30.u1 = tLoc04D8.t00F8.u1;
		Eq_73717 rax_35 = RtlLookupFunctionEntry(rbx_30, &tArg10, null);
		ptr64 fp;
		if (rax_35 != null)
			KERNEL32.dll!RtlVirtualUnwind(0x00, 0x00, rbx_30, rax_35, fp + 24, fp + 32, &tLoc04D8, 0x00, tArg10, &tLoc04D8, fp + 32, fp + 24, 0x00);
		tLoc04D8.qw00F8 = qwArg00;
		tLoc04D8.SegEs = (DWORD) (fp + 0x08);
		word64 qwLoc0578;
		memset(&qwLoc0578, 0, 0x98);
		qwLoc0578 = (word64) 0x40000015;
		qwLoc0578.dw0004 = 0x01;
		Eq_2142 eax_82 = IsDebuggerPresent();
		Eq_74139 tLoc0588;
		tLoc0588.ExceptionRecord = (PEXCEPTION_RECORD) &qwLoc0578;
		tLoc0588.ptr0008 = &tLoc04D8;
		SetUnhandledExceptionFilter(null);
		byte bl_88 = (byte) (eax_82 == 0x01);
		struct _EXCEPTION_POINTERS * rcx_93 = &tLoc0588;
		if (UnhandledExceptionFilter(&tLoc0588) == 0x00)
			g_dw800306A4 &= 0x00 - (bl_88 != 0x00);
		return rcx_93;
	}
	else
		__fastfail(ecx);
}

// 00000001800244EC: void fn00000001800244EC(Stack Eq_73571 tArg18)
// Called from:
//      DllMain
void fn00000001800244EC(Eq_73571 tArg18)
{
	ptr64 fp;
	Eq_74194 tArg10;
	tArg10.dwLowDateTime = (DWORD) 0x00;
	ui64 rax_14 = g_qw80030008;
	if (rax_14 == 0x2B992DDFA232)
	{
		GetSystemTimeAsFileTime(&tArg10);
		Eq_74224 v16_30 = tArg10.dwLowDateTime ^ (uint64) GetCurrentThreadId() ^ (uint64) GetCurrentProcessId();
		QueryPerformanceCounter(&tArg18);
		ui64 rax_40 = (uint64) tArg18.u.LowPart << 0x20 ^ tArg18.QuadPart ^ v16_30 ^ fp + 8;
		rax_14 = rax_40 & 0xFFFFFFFFFFFF;
		if ((rax_40 & 0xFFFFFFFFFFFF) == 0x2B992DDFA232)
			rax_14 = 0x2B992DDFA233;
		g_qw80030008 = rax_14;
	}
	g_qw80030010 = ~rax_14;
}

// 0000000180024598: void fn0000000180024598(Register Eq_73011 rcx, Register int32 edx)
// Called from:
//      DllMain
void fn0000000180024598(Eq_73011 rcx, int32 edx)
{
	if (edx == 0x01 && g_qw80025360 == 0x00)
		DisableThreadLibraryCalls(rcx);
}

// 00000001800245BC: void fn00000001800245BC()
// Called from:
//      fn0000000180023AD8
void fn00000001800245BC()
{
	InitializeSListHead(&g_u800306B0);
}

// 00000001800245D8: void fn00000001800245D8()
// Called from:
//      fn0000000180023AD8
void fn00000001800245D8()
{
	ui64 * rax_5 = fn0000000180001020();
	*rax_5 |= 0x04;
	ui64 * rax_12 = fn0000000180003A30();
	*rax_12 |= 0x02;
}

// 00000001800245F4: Register ptr64 fn00000001800245F4()
// Called from:
//      fn0000000180023AD8
ptr64 fn00000001800245F4()
{
	return &g_t80030960;
}

// 00000001800245FC: void fn00000001800245FC()
// Called from:
//      fn0000000180023AD8
void fn00000001800245FC()
{
	word64 * rbx_12;
	for (rbx_12 = &g_qw80029700; rbx_12 < &g_qw80029700; ++rbx_12)
	{
		if (*rbx_12 != 0x00)
		{
			fn0000000180024184();
			fn0000000000000000();
		}
	}
}

// 0000000180024648: void fn0000000180024648()
void fn0000000180024648()
{
	word64 * rbx_12;
	for (rbx_12 = &g_qw80029710; rbx_12 < &g_qw80029710; ++rbx_12)
	{
		if (*rbx_12 != 0x00)
		{
			fn0000000180024184();
			fn0000000000000000();
		}
	}
}

// 0000000180024694: void fn0000000180024694(Register (ptr64 Eq_74324) rcx, Register word64 rdx)
void fn0000000180024694(struct Eq_74324 * rcx, word64 rdx)
{
	rcx->ptr0000 = ??_7exception@std@@6B@;
	rcx->qw0008 = 0x00;
	rcx->qw0010 = 0x00;
	_std_exception_copy(0x00, 0x00, ??_7exception@std@@6B@, 0x00, rdx + 8, &rcx->qw0008);
	rcx->ptr0000 = ??_7bad_alloc@std@@6B@;
}

// 00000001800246D4: void fn00000001800246D4(Register (ptr64 Eq_74351) rcx)
// Called from:
//      fn00000001800247E4
void fn00000001800246D4(struct Eq_74351 * rcx)
{
	rcx->qw0010 = 0x00;
	rcx->ptr0008 = &g_t800253C0;
	rcx->ptr0000 = ??_7bad_alloc@std@@6B@;
}

// 00000001800246F4: void fn00000001800246F4(Register (ptr64 Eq_74363) rcx, Register word64 rdx)
void fn00000001800246F4(struct Eq_74363 * rcx, word64 rdx)
{
	rcx->ptr0000 = ??_7exception@std@@6B@;
	rcx->qw0008 = 0x00;
	rcx->qw0010 = 0x00;
	_std_exception_copy(0x00, 0x00, ??_7exception@std@@6B@, 0x00, rdx + 8, &rcx->qw0008);
	rcx->ptr0000 = ??_7bad_array_new_length@std@@6B@;
}

// 0000000180024734: void fn0000000180024734(Register (ptr64 Eq_74389) rcx)
// Called from:
//      fn0000000180024804
void fn0000000180024734(struct Eq_74389 * rcx)
{
	rcx->qw0010 = 0x00;
	rcx->ptr0008 = &g_t800253E8;
	rcx->ptr0000 = ??_7bad_array_new_length@std@@6B@;
}

// 0000000180024754: void fn0000000180024754(Register (ptr64 Eq_74401) rcx, Register word64 rdx)
void fn0000000180024754(struct Eq_74401 * rcx, word64 rdx)
{
	rcx->ptr0000 = ??_7exception@std@@6B@;
	rcx->qw0008 = 0x00;
	rcx->qw0010 = 0x00;
	_std_exception_copy(0x00, 0x00, ??_7exception@std@@6B@, 0x00, rdx + 8, &rcx->qw0008);
}

// 00000001800247A0: void fn00000001800247A0(Register Eq_137 rcx, Register word32 edx)
void fn00000001800247A0(Eq_137 rcx, word32 edx)
{
	*rcx.u1 = ??_7exception@std@@6B@;
	_std_exception_destroy(rcx.u2 + 8);
	if (((byte) edx & 0x01) != 0x00)
		fn000000018002367C(rcx);
}

// 00000001800247E4: void fn00000001800247E4()
// Called from:
//      fn0000000180023684
void fn00000001800247E4()
{
	Eq_74442 tLoc28;
	fn00000001800246D4(&tLoc28);
	CxxThrowException(&tLoc28, &g_t8002EE08);
	int3();
	fn0000000180024804();
}

// 0000000180024804: void fn0000000180024804()
// Called from:
//      fn0000000180023684
//      fn00000001800247E4
void fn0000000180024804()
{
	Eq_74456 tLoc28;
	fn0000000180024734(&tLoc28);
	CxxThrowException(&tLoc28, &g_t8002EE90);
	int3();
	struct Eq_74468 * rcx_14;
	fn0000000180024824(rcx_14);
}

// 0000000180024824: void fn0000000180024824(Register (ptr64 Eq_74468) rcx)
// Called from:
//      fn0000000180024804
void fn0000000180024824(struct Eq_74468 * rcx)
{
	rcx->qw0008 == 0x00;
}

// 0000000180024840: void fn0000000180024840(Register Eq_137 rcx, Register byte dl)
void fn0000000180024840(Eq_137 rcx, byte dl)
{
	word64 rdx;
	dl = (byte) rdx;
	*rcx.u1 = ??_7type_info@@6B@;
	if ((dl & 0x01) != 0x00)
		fn000000018002367C(rcx);
}

// 00000001800248F0: Register byte fn00000001800248F0()
// Called from:
//      fn0000000180023784
//      fn00000001800237AC
//      fn0000000180023858
//      fn000000018002386C
//      fn0000000180023A44
byte fn00000001800248F0()
{
	return 0x01;
}

// 00000001800248F4: Register word32 fn00000001800248F4()
// Called from:
//      fn0000000180023828
word32 fn00000001800248F4()
{
	return 0x00;
}

// 00000001800248F8: void fn00000001800248F8(Register (ptr64 Eq_74494) rcx, Register Eq_73786 rdx, Register word64 r8, Register (ptr64 Eq_73787) r9)
void fn00000001800248F8(struct Eq_74494 * rcx, Eq_73786 rdx, word64 r8, struct Eq_73787 * r9)
{
	struct Eq_73792 * rbx_18 = r9->ptr0038;
	word64 qwLoc30;
	fn0000000180024120(rdx, r9, &rbx_18->dw0004, qwLoc30);
	if ((rbx_18->dw0004 & (word32) ((rcx->b0004 & 0x66) != 0x00) + 0x01) != 0x00)
		_CxxFrameHandler3(r8, r9, rcx, rdx);
}

// 00000001800249A0: void fn00000001800249A0(Register (ptr64 code) rax)
void fn00000001800249A0(<anonymous> * rax)
{
	rax();
}

// 00000001800249B0: void fn00000001800249B0()
void fn00000001800249B0()
{
}

// 00000001800249D0: void fn00000001800249D0(Register (ptr64 Eq_74527) rdx)
void fn00000001800249D0(struct Eq_74527 * rdx)
{
	uint128 rdx_rax_11 = rdx->qw0070 *128 0x18;
	up64 rdx_15 = (word64) rdx_rax_11;
	if (OVERFLOW<word128>(rdx_rax_11))
		rdx_15 = ~0x00;
	fn00000001800235A4(rdx->t0078.u0);
}

// 0000000180024A0E: void fn0000000180024A0E()
void fn0000000180024A0E()
{
}

// 0000000180024A30: void fn0000000180024A30(Register (ptr64 Eq_74549) rdx)
void fn0000000180024A30(struct Eq_74549 * rdx)
{
	uint128 rdx_rax_11 = rdx->qw0060 *128 0x05C8;
	up64 rdx_15 = (word64) rdx_rax_11;
	if (OVERFLOW<word128>(rdx_rax_11))
		rdx_15 = ~0x00;
	fn00000001800235A4(rdx->t0068.u0);
}

// 0000000180024A70: void fn0000000180024A70(Register (ptr64 Eq_74569) rdx)
void fn0000000180024A70(struct Eq_74569 * rdx)
{
	uint128 rdx_rax_11 = rdx->qw0070 *128 0x02F8;
	up64 rdx_15 = (word64) rdx_rax_11;
	if (OVERFLOW<word128>(rdx_rax_11))
		rdx_15 = ~0x00;
	fn00000001800235A4(rdx->t0078.u0);
}

// 0000000180024AAE: void fn0000000180024AAE()
void fn0000000180024AAE()
{
}

// 0000000180024AD0: void fn0000000180024AD0(Register (ptr64 Eq_74589) rdx)
void fn0000000180024AD0(struct Eq_74589 * rdx)
{
	uint128 rdx_rax_11 = rdx->qw0070 *128 0x14;
	up64 rdx_15 = (word64) rdx_rax_11;
	if (OVERFLOW<word128>(rdx_rax_11))
		rdx_15 = ~0x00;
	fn00000001800235A4(rdx->t0078.u0);
}

// 0000000180024B0E: void fn0000000180024B0E()
void fn0000000180024B0E()
{
}

// 0000000180024B30: void fn0000000180024B30(Register (ptr64 Eq_74609) rdx)
void fn0000000180024B30(struct Eq_74609 * rdx)
{
	uint128 rdx_rax_11 = rdx->qw0070 *128 0x4C;
	up64 rdx_15 = (word64) rdx_rax_11;
	if (OVERFLOW<word128>(rdx_rax_11))
		rdx_15 = ~0x00;
	fn00000001800235A4(rdx->t0078.u0);
}

// 0000000180024B6E: void fn0000000180024B6E()
void fn0000000180024B6E()
{
}

// 0000000180024B90: void fn0000000180024B90(Register (ptr64 Eq_74629) rdx)
void fn0000000180024B90(struct Eq_74629 * rdx)
{
	uint128 rdx_rax_11 = rdx->qw0070 *128 0x0208;
	up64 rdx_15 = (word64) rdx_rax_11;
	if (OVERFLOW<word128>(rdx_rax_11))
		rdx_15 = ~0x00;
	fn00000001800235A4(rdx->t0078.u0);
}

// 0000000180024BCE: void fn0000000180024BCE()
void fn0000000180024BCE()
{
}

// 0000000180024BF0: void fn0000000180024BF0(Register (ptr64 Eq_74649) rdx)
void fn0000000180024BF0(struct Eq_74649 * rdx)
{
	uint128 rdx_rax_11 = rdx->qw0080 *128 0x0138;
	up64 rdx_15 = (word64) rdx_rax_11;
	if (OVERFLOW<word128>(rdx_rax_11))
		rdx_15 = ~0x00;
	fn00000001800235A4(rdx->t0088.u0);
}

// 0000000180024C34: void fn0000000180024C34()
void fn0000000180024C34()
{
}

// 0000000180024D4C: void fn0000000180024D4C(Register (ptr64 Eq_74669) rdx)
void fn0000000180024D4C(struct Eq_74669 * rdx)
{
	uint128 rdx_rax_11 = rdx->qw0038 *128 0x011C;
	up64 rdx_15 = (word64) rdx_rax_11;
	if (OVERFLOW<word128>(rdx_rax_11))
		rdx_15 = ~0x00;
	fn00000001800235A4(rdx->t0058.u0);
}

// 0000000180024DAC: void fn0000000180024DAC()
void fn0000000180024DAC()
{
	fn00000001800235AC(0x32);
}

// 0000000180024DF0: void fn0000000180024DF0(Register (ptr64 Eq_74692) rdx)
void fn0000000180024DF0(struct Eq_74692 * rdx)
{
	fn0000000180022770(rdx->ptr0048);
}

// 0000000180024E15: void fn0000000180024E15(Register (ptr64 Eq_74698) rdx)
void fn0000000180024E15(struct Eq_74698 * rdx)
{
	if (rdx->b0020 == 0x00)
		fn0000000180023618(rdx->qw0060, rdx->qw0068, rdx->qw0070, rdx->ptr0078);
}

// 0000000180024E41: void fn0000000180024E41(Register (ptr64 (ptr64 word32)) rcx, Register (ptr64 Eq_74720) rdx)
void fn0000000180024E41(word32 ** rcx, struct Eq_74720 * rdx)
{
	rdx->ptr0040 = rcx;
	rdx->ptr0030 = rcx;
	rdx->ptr0038 = (word32 *) *rdx->ptr0030;
	if (*rdx->ptr0038 != ~0x1F928C9C)
		rdx->dw0020 = 0x00;
	else
		api-ms-win-crt-runtime-l1-1-0.dll!terminate();
}

// 0000000180024E82: void fn0000000180024E82(Register (ptr64 Eq_74751) rdx)
void fn0000000180024E82(struct Eq_74751 * rdx)
{
	if (rdx->b0020 == 0x00)
		fn0000000180023618(rdx->qw0050, rdx->qw0058, rdx->qw0028, rdx->ptr0070);
}

// 0000000180024EAE: void fn0000000180024EAE()
void fn0000000180024EAE()
{
}

// 0000000180024EC6: void fn0000000180024EC6(Register (ptr64 Eq_74771) rdx)
void fn0000000180024EC6(struct Eq_74771 * rdx)
{
	byte cl_9 = rdx->b0040;
	fn0000000180023A20(cl_9);
}

// 0000000180024EDD: void fn0000000180024EDD(Register (ptr64 Eq_74778) rdx)
void fn0000000180024EDD(struct Eq_74778 * rdx)
{
	fn0000000180023858();
	byte cl_16 = rdx->b0038;
	fn0000000180023A20(cl_16);
}

// 0000000180024EF9: void fn0000000180024EF9(Register (ptr64 (ptr64 word32)) rcx, Register (ptr64 Eq_74788) rdx, Register (ptr32 Eq_72893) gs)
void fn0000000180024EF9(word32 ** rcx, struct Eq_74788 * rdx, struct Eq_72893 * gs)
{
	fn00000001800237C4(rdx->t0060.u0, rdx->dw0068, rdx->t0070, gs, **rcx, rcx);
}

// 0000000180024F30: void fn0000000180024F30()
void fn0000000180024F30()
{
	fn00000001800024D0();
	Eq_137 rcx_19;
	rcx_19.u0 = g_t800306D8.u0;
	if (rcx_19 != 0x00)
	{
		fn000000018002367C(rcx_19);
		g_t800306D8.u0 = 0x00;
		rcx_19.u0 = 0x00;
	}
	g_qw800306E0 = 0x00;
	if (rcx_19 != 0x00)
	{
		fn000000018002367C(rcx_19);
		g_t800306D8.u0 = 0x00;
	}
	g_qw800306E0 = 0x00;
}

// tmpr74rci4q.globals.c
// Generated by decompiling tmpr74rci4q
// using Reko decompiler version 0.11.6.0.

#include "tmpr74rci4q.h"

Eq_75081 g_a0008[];
Eq_74913 g_a0010[];
Eq_6207 g_t0104;
Eq_75095 g_a0550[];
word16 g_w80000000; // FFFFFFFF80000000
word32 g_dw8000003C; // FFFFFFFF8000003C
int32 g_t80001600(void * rcx, void * rdx); // FFFFFFFF80001600
<unknown> g_t800028B0;
INT_PTR g_t80003990(HWND rcx, UINT rdx, WPARAM r8, LPARAM r9); // FFFFFFFF80003990
<anonymous> g_t80020360; // FFFFFFFF80020360
<anonymous> g_t80020370; // FFFFFFFF80020370
<unknown> g_t800233F0;
<unknown> g_t80023400;
<unknown> g_t80023470;
<unknown> g_t800234C0;
<unknown> g_t800234E0;
<unknown> g_t80023540;
<unknown> g_t80023550;
<anonymous> * __imp__GetDeviceCaps; // FFFFFFFF80025000
<anonymous> * __imp__MultiByteToWideChar; // FFFFFFFF80025010
<anonymous> * __imp__WideCharToMultiByte; // FFFFFFFF80025018
<anonymous> * __imp__IsDebuggerPresent; // FFFFFFFF80025020
<anonymous> * __imp__TerminateProcess; // FFFFFFFF80025028
<anonymous> * __imp__SetUnhandledExceptionFilter; // FFFFFFFF80025030
<anonymous> * __imp__UnhandledExceptionFilter; // FFFFFFFF80025038
<anonymous> * __imp__QueryPerformanceCounter; // FFFFFFFF80025040
<anonymous> * __imp__GetCurrentProcessId; // FFFFFFFF80025048
<anonymous> * __imp__GetCurrentThreadId; // FFFFFFFF80025050
<anonymous> * __imp__GetCurrentProcess; // FFFFFFFF80025058
<anonymous> * __imp__SetCurrentDirectoryW; // FFFFFFFF80025060
<anonymous> * __imp__GetSystemTimeAsFileTime; // FFFFFFFF80025068
<anonymous> * __imp__RtlVirtualUnwind; // FFFFFFFF80025070
<anonymous> * __imp__RtlLookupFunctionEntry; // FFFFFFFF80025078
<anonymous> * __imp__DisableThreadLibraryCalls; // FFFFFFFF80025080
<anonymous> * __imp__InitializeSListHead; // FFFFFFFF80025088
<anonymous> * __imp__IsProcessorFeaturePresent; // FFFFFFFF80025090
<anonymous> * __imp__RtlCaptureContext; // FFFFFFFF80025098
<anonymous> * __imp__GetDesktopWindow; // FFFFFFFF800250A8
<anonymous> * __imp__SendDlgItemMessageW; // FFFFFFFF800250B0
<anonymous> * __imp__SetDlgItemTextW; // FFFFFFFF800250B8
<anonymous> * __imp__EndDialog; // FFFFFFFF800250C0
<anonymous> * __imp__ReleaseDC; // FFFFFFFF800250C8
<anonymous> * __imp__SetWindowPos; // FFFFFFFF800250D0
<anonymous> * __imp__GetDC; // FFFFFFFF800250D8
<anonymous> * __imp__GetWindowRect; // FFFFFFFF800250E0
<anonymous> * __imp__DialogBoxParamW; // FFFFFFFF800250E8
<anonymous> * __imp__strstr; // FFFFFFFF800250F8
<anonymous> * __imp____std_exception_destroy; // FFFFFFFF80025100
<anonymous> * __imp____C_specific_handler; // FFFFFFFF80025108
<anonymous> * __imp__memset; // FFFFFFFF80025110
<anonymous> * __imp____CxxFrameHandler3; // FFFFFFFF80025118
<anonymous> * __imp__memcpy; // FFFFFFFF80025120
<anonymous> * __imp____std_exception_copy; // FFFFFFFF80025128
<anonymous> * __imp___CxxThrowException; // FFFFFFFF80025130
<anonymous> * __imp____std_terminate; // FFFFFFFF80025138
<anonymous> * __imp____std_type_info_destroy_list; // FFFFFFFF80025140
<anonymous> * __imp__wcstombs; // FFFFFFFF80025150
<anonymous> * __imp__mbstowcs; // FFFFFFFF80025158
<anonymous> * __imp___wsplitpath; // FFFFFFFF80025168
<anonymous> * __imp__malloc; // FFFFFFFF80025178
<anonymous> * __imp___callnewh; // FFFFFFFF80025180
<anonymous> * __imp__free; // FFFFFFFF80025188
<anonymous> * __imp__sqrt; // FFFFFFFF80025198
<anonymous> * __imp__terminate; // FFFFFFFF800251A8
<anonymous> * __imp___initterm; // FFFFFFFF800251B0
<anonymous> * __imp___initterm_e; // FFFFFFFF800251B8
<anonymous> * __imp___cexit; // FFFFFFFF800251C0
<anonymous> * __imp___configure_narrow_argv; // FFFFFFFF800251C8
<anonymous> * __imp___initialize_narrow_environment; // FFFFFFFF800251D0
<anonymous> * __imp___initialize_onexit_table; // FFFFFFFF800251D8
<anonymous> * __imp___crt_atexit; // FFFFFFFF800251E0
<anonymous> * __imp___execute_onexit_table; // FFFFFFFF800251E8
<anonymous> * __imp___register_onexit_function; // FFFFFFFF800251F0
<anonymous> * __imp___seh_filter_dll; // FFFFFFFF800251F8
<anonymous> * __imp__fclose; // FFFFFFFF80025208
<anonymous> * __imp__fwrite; // FFFFFFFF80025210
<anonymous> * __imp__fopen; // FFFFFFFF80025218
<anonymous> * __imp___ftelli64; // FFFFFFFF80025220
<anonymous> * __imp___fseeki64; // FFFFFFFF80025228
<anonymous> * __imp__ferror; // FFFFFFFF80025230
<anonymous> * __imp____stdio_common_vsscanf; // FFFFFFFF80025238
<anonymous> * __imp__fread; // FFFFFFFF80025240
<anonymous> * __imp__fseek; // FFFFFFFF80025248
<anonymous> * __imp__ftell; // FFFFFFFF80025250
<anonymous> * __imp____stdio_common_vswprintf; // FFFFFFFF80025258
<anonymous> * __imp___wfopen; // FFFFFFFF80025260
<anonymous> * __imp____stdio_common_vsprintf; // FFFFFFFF80025268
<anonymous> * __imp___stricmp; // FFFFFFFF80025278
<anonymous> * __imp___wcsicmp; // FFFFFFFF80025280
<anonymous> * __imp__qsort; // FFFFFFFF80025290
<anonymous> * g_ptr800252A0; // FFFFFFFF800252A0
PVFV g_t800252B0; // FFFFFFFF800252B0
PVFV g_t800252C8; // FFFFFFFF800252C8
PVFV g_t800252D0; // FFFFFFFF800252D0
PVFV g_t800252D8; // FFFFFFFF800252D8
word64 g_qw80025360; // FFFFFFFF80025360
void g_v80025368; // FFFFFFFF80025368
<anonymous> * ??_7exception@std@@6B@[2];
<anonymous> * ??_7bad_alloc@std@@6B@[2];
<unknown> g_t800253C0;
<anonymous> * ??_7bad_array_new_length@std@@6B@[2];
<unknown> g_t800253E8;
<anonymous> * ??_7type_info@@6B@[1];
<unknown> g_t80025410;
wchar_t g_str80025420[]; // FFFFFFFF80025420
wchar_t g_str80025460[]; // FFFFFFFF80025460
wchar_t g_str80025480[]; // FFFFFFFF80025480
wchar_t g_str800254C0[]; // FFFFFFFF800254C0
word128 g_ow800254D0;
<unknown> g_t800254E0;
<unknown> g_t80025CE0;
word16 g_a80025D60[];
Eq_67849 g_a80025D90[];
Eq_67849 g_a80025DD0[];
Eq_67849 g_a80025E10[];
Eq_67849 g_a80025E50[];
word32 g_a80025E90[];
uint32 g_a80026690[];
<unknown> g_t8002872C;
<unknown> g_t80028734;
wchar_t g_str80028740[]; // FFFFFFFF80028740
<unknown> g_t80028860;
<unknown> g_t80028870;
word32 g_dw800288E4; // FFFFFFFF800288E4
byte g_b800288E8; // FFFFFFFF800288E8
<unknown> g_t800288F0;
<unknown> g_t80028908;
<unknown> g_t80028928;
<unknown> g_t80028940;
<unknown> g_t80028960;
<unknown> g_t80028978;
<unknown> g_t80028990;
<unknown> g_t800289B0;
<unknown> g_t800289D8;
<unknown> g_t800289F8;
<unknown> g_t80028A18;
<unknown> g_t80028A40;
<unknown> g_t80028A60;
<unknown> g_t80028A78;
<unknown> g_t80028A98;
<unknown> g_t80028AB0;
<unknown> g_t80028AD0;
<unknown> g_t80028AE8;
real32 g_r80028E48; // FFFFFFFF80028E48
Eq_3282 g_t80028E4C;
real32 g_r80028E50; // FFFFFFFF80028E50
real32 g_r80028E54; // FFFFFFFF80028E54
real32 g_r80028E58; // FFFFFFFF80028E58
word128 g_ow80028E60;
word128 g_ow80028E70;
Eq_254 g_t80028EA0;
word128 g_ow80028EB0;
word64 g_qw80029700; // FFFFFFFF80029700
word64 g_qw80029710; // FFFFFFFF80029710
<unknown> g_t8002EE08;
<unknown> g_t8002EE90;
word64 g_qw8002F070; // FFFFFFFF8002F070
word64 g_qw8002F080; // FFFFFFFF8002F080
word64 g_qw8002F088; // FFFFFFFF8002F088
word64 g_qw8002F090; // FFFFFFFF8002F090
word64 g_qw8002F098; // FFFFFFFF8002F098
word64 g_qw8002F0A0; // FFFFFFFF8002F0A0
word64 g_qw8002F0A8; // FFFFFFFF8002F0A8
word64 g_qw8002F0B0; // FFFFFFFF8002F0B0
word64 g_qw8002F0B8; // FFFFFFFF8002F0B8
word64 g_qw8002F0C0; // FFFFFFFF8002F0C0
word64 g_qw8002F0C8; // FFFFFFFF8002F0C8
word64 g_qw8002F0D0; // FFFFFFFF8002F0D0
word64 g_qw8002F0D8; // FFFFFFFF8002F0D8
word64 g_qw8002F0E0; // FFFFFFFF8002F0E0
word64 g_qw8002F0E8; // FFFFFFFF8002F0E8
word64 g_qw8002F0F0; // FFFFFFFF8002F0F0
word64 g_qw8002F0F8; // FFFFFFFF8002F0F8
word64 g_qw8002F100; // FFFFFFFF8002F100
word64 g_qw8002F108; // FFFFFFFF8002F108
word64 g_qw8002F118; // FFFFFFFF8002F118
word64 g_qw8002F120; // FFFFFFFF8002F120
word64 g_qw8002F128; // FFFFFFFF8002F128
word64 g_qw8002F130; // FFFFFFFF8002F130
word64 g_qw8002F138; // FFFFFFFF8002F138
word64 g_qw8002F140; // FFFFFFFF8002F140
word64 g_qw8002F148; // FFFFFFFF8002F148
word64 g_qw8002F150; // FFFFFFFF8002F150
word64 g_qw8002F158; // FFFFFFFF8002F158
word64 g_qw8002F168; // FFFFFFFF8002F168
word64 g_qw8002F170; // FFFFFFFF8002F170
word64 g_qw8002F178; // FFFFFFFF8002F178
word64 g_qw8002F180; // FFFFFFFF8002F180
word64 g_qw8002F188; // FFFFFFFF8002F188
word64 g_qw8002F190; // FFFFFFFF8002F190
word64 g_qw8002F198; // FFFFFFFF8002F198
word64 g_qw8002F1A0; // FFFFFFFF8002F1A0
word64 g_qw8002F1A8; // FFFFFFFF8002F1A8
word64 g_qw8002F1B0; // FFFFFFFF8002F1B0
word64 g_qw8002F1C0; // FFFFFFFF8002F1C0
word64 g_qw8002F1C8; // FFFFFFFF8002F1C8
word64 g_qw8002F1D8; // FFFFFFFF8002F1D8
word64 g_qw8002F1E8; // FFFFFFFF8002F1E8
word64 g_qw8002F1F0; // FFFFFFFF8002F1F0
word64 g_qw8002F1F8; // FFFFFFFF8002F1F8
word64 g_qw8002F208; // FFFFFFFF8002F208
word64 g_qw8002F218; // FFFFFFFF8002F218
word64 g_qw8002F220; // FFFFFFFF8002F220
word64 g_qw8002F228; // FFFFFFFF8002F228
word64 g_qw8002F230; // FFFFFFFF8002F230
word64 g_qw8002F238; // FFFFFFFF8002F238
word64 g_qw8002F240; // FFFFFFFF8002F240
word64 g_qw8002F248; // FFFFFFFF8002F248
word64 g_qw8002F250; // FFFFFFFF8002F250
word64 g_qw8002F258; // FFFFFFFF8002F258
word64 g_qw8002F260; // FFFFFFFF8002F260
word64 g_qw8002F268; // FFFFFFFF8002F268
word64 g_qw8002F278; // FFFFFFFF8002F278
word64 g_qw8002F280; // FFFFFFFF8002F280
word64 g_qw8002F288; // FFFFFFFF8002F288
word64 g_qw8002F290; // FFFFFFFF8002F290
word64 g_qw8002F298; // FFFFFFFF8002F298
word64 g_qw8002F2A0; // FFFFFFFF8002F2A0
word64 g_qw8002F2A8; // FFFFFFFF8002F2A8
word64 g_qw8002F2B0; // FFFFFFFF8002F2B0
word64 g_qw8002F2B8; // FFFFFFFF8002F2B8
word64 g_qw8002F2C0; // FFFFFFFF8002F2C0
word64 g_qw8002F2C8; // FFFFFFFF8002F2C8
word64 g_qw8002F2D0; // FFFFFFFF8002F2D0
word64 g_qw8002F2D8; // FFFFFFFF8002F2D8
word64 g_qw8002F2E8; // FFFFFFFF8002F2E8
word64 g_qw8002F2F0; // FFFFFFFF8002F2F0
word64 g_qw8002F300; // FFFFFFFF8002F300
ui64 g_qw80030008; // FFFFFFFF80030008
word64 g_qw80030010; // FFFFFFFF80030010
word32 g_dw80030018; // FFFFFFFF80030018
ui32 g_dw8003001C; // FFFFFFFF8003001C
word64 g_qw80030020; // FFFFFFFF80030020
word32 g_dw80030030; // FFFFFFFF80030030
Eq_2060 g_t80030034;
word32 g_dw800300E0; // FFFFFFFF800300E0
uint64 g_qw800300E8; // FFFFFFFF800300E8
ui128 g_ow800300F0;
Eq_73131 g_t80030100;
uint128 g_ow80030108;
Eq_73131 g_t80030118;
byte g_b80030120; // FFFFFFFF80030120
int32 g_dw80030124; // FFFFFFFF80030124
word32 g_dw80030130; // FFFFFFFF80030130
word32 g_dw80030134; // FFFFFFFF80030134
word64 g_qw80030140; // FFFFFFFF80030140
word32 g_dw80030148; // FFFFFFFF80030148
uint64 g_qw80030150; // FFFFFFFF80030150
CONTEXT g_t800301D0;
ui64 g_qw80030250; // FFFFFFFF80030250
ptr64 g_ptr80030268; // FFFFFFFF80030268
word64 g_qw800302C8; // FFFFFFFF800302C8
ui32 g_dw800306A0; // FFFFFFFF800306A0
ui32 g_dw800306A4; // FFFFFFFF800306A4
union _SLIST_HEADER g_u800306B0;
<unknown> g_t800306C0;
Eq_137 g_t800306D8;
uint64 g_qw800306E0; // FFFFFFFF800306E0
Eq_1753 g_t800306F0;
word32 g_dw800306F4; // FFFFFFFF800306F4
int32 g_dw800306F8; // FFFFFFFF800306F8
struct Eq_1702 * g_ptr80030700; // FFFFFFFF80030700
int32 g_dw80030708; // FFFFFFFF80030708
struct Eq_1710 * g_ptr80030710; // FFFFFFFF80030710
Eq_2394 g_t80030718;
struct Eq_2417 * g_ptr80030720; // FFFFFFFF80030720
int32 g_dw80030728; // FFFFFFFF80030728
struct Eq_1732 * g_ptr80030730; // FFFFFFFF80030730
int32 g_dw80030738; // FFFFFFFF80030738
word64 g_qw80030740; // FFFFFFFF80030740
word32 g_dw80030748; // FFFFFFFF80030748
word16 g_w8003074C; // FFFFFFFF8003074C
<unknown> g_t80030958;
<unknown> g_t80030960;
