int64_t sub_180001000()
{
    /* tailcall */
    return atexit(sub_180024f30);
}

int64_t sub_180001010()
{
    /* tailcall */
    return atexit(j_sub_1800024d0);
}

int64_t sub_180001020() __pure
{
    return &data_1800306c0;
}

int32_t sscanf_s(char* arg1, char* arg2, int64_t arg3)
{
    arg_10 = arg2;
    _ArgList = arg3;
    int64_t r9;
    arg_20 = r9;
    int32_t result = __stdio_common_vsprintf((data_1800306c0 | 1), arg1, -1, arg2, nullptr, &_ArgList);
    
    if (result < 0)
        return -1;
    
    return result;
}

int64_t* sub_180001090(int64_t* arg1)
{
    *arg1 = -1;
    arg1[1] = -1;
    return arg1;
}

int64_t _guard_check_icall() __pure
{
    return;
}

int64_t* sub_1800010c0(int64_t* arg1)
{
    int64_t (* var_18)() = _guard_check_icall;
    `eh vector constructor iterator'(&arg1[1], 0x10, 0xa, sub_180001090);
    *arg1 = 0xa;
    __builtin_memset(&arg1[1], 0xff, 0xa0);
    return arg1;
}

int64_t sub_1800011c0(int64_t arg1)
{
    int64_t var_18 = -2;
    return `eh vector vbase constructor iterator'((arg1 + 8), 0x10, 0xa, _guard_check_icall);
}

int64_t* sub_1800011f0(int64_t* arg1)
{
    *arg1 = 0;
    arg1[1] = 0;
    arg1[2] = 0;
    return arg1;
}

void sub_180001200(void* arg1)
{
    int64_t rcx = *(arg1 + 0x10);
    
    if (rcx == 0)
    {
        *(arg1 + 8) = 0;
        return;
    }
    
    sub_18002367c(rcx);
    *(arg1 + 0x10) = 0;
    *(arg1 + 8) = 0;
}

int16_t* _Symlink_get(int16_t* arg1)
{
    *arg1 = 0;
    return arg1;
}

int128_t* sub_180001250(int128_t* arg1)
{
    int128_t zmm0 = data_180028eb0;
    *(arg1 + 0xc) = 0x3f800000;
    *(arg1 + 0x1c) = 0x3f800000;
    *arg1 = zmm0;
    arg1[2] = 0x43000000;
    zmm0 = data_180028ea0;
    *(arg1 + 0x24) = 0x3f800000;
    *(arg1 + 0x28) = -1;
    arg1[1] = zmm0;
    arg1[3] = 0xffffffff;
    *(arg1 + 0x34) = 0;
    return arg1;
}

char* sub_1800012a0(char* arg1)
{
    *(arg1 + 0x524) = 0;
    *(arg1 + 0x530) = 0;
    *(arg1 + 0x548) = 0x3f800000;
    *(arg1 + 0x55c) = 0x3f800000;
    *(arg1 + 0x570) = 0x3f800000;
    *(arg1 + 0x584) = 0x3f800000;
    *(arg1 + 0x588) = 0x3f800000;
    *(arg1 + 0x59c) = 0x3f800000;
    *(arg1 + 0x5b0) = 0x3f800000;
    *(arg1 + 0x5c4) = 0x3f800000;
    *arg1 = 0;
    arg1[0x104] = 0;
    arg1[0x208] = 0;
    arg1[0x30c] = 0;
    arg1[0x410] = 0;
    *(arg1 + 0x514) = -1;
    *(arg1 + 0x51c) = 0xffffffff;
    *(arg1 + 0x520) = _mm_unpacklo_ps({0}, 0);
    *(arg1 + 0x528) = 0;
    *(arg1 + 0x52c) = _mm_unpacklo_ps(0x3f800000, 0x3f800000);
    float zmm0[0x4] = data_180028ea0;
    int32_t var_10 = 0;
    int32_t var_10_1 = 0x3f800000;
    *(arg1 + 0x534) = 0x3f800000;
    *(arg1 + 0x538) = zmm0;
    *(arg1 + 0x548) = 0x3f800000;
    *(arg1 + 0x550) = 0;
    *(arg1 + 0x558) = 0;
    *(arg1 + 0x55c) = 0x3f800000;
    *(arg1 + 0x564) = 0;
    *(arg1 + 0x56c) = 0;
    *(arg1 + 0x570) = 0x3f800000;
    *(arg1 + 0x578) = 0;
    *(arg1 + 0x580) = 0;
    *(arg1 + 0x584) = 0x3f800000;
    *(arg1 + 0x588) = 0x3f800000;
    *(arg1 + 0x590) = 0;
    *(arg1 + 0x598) = 0;
    *(arg1 + 0x59c) = 0x3f800000;
    *(arg1 + 0x5a4) = 0;
    *(arg1 + 0x5ac) = 0;
    *(arg1 + 0x5b0) = 0x3f800000;
    *(arg1 + 0x5b8) = 0;
    *(arg1 + 0x5c0) = 0;
    *(arg1 + 0x5c4) = 0x3f800000;
    return arg1;
}

int32_t* sub_180001440(int32_t* arg1)
{
    *arg1 = 0;
    arg1[1] = 0xffffffff;
    return arg1;
}

int64_t* sub_180001460(int64_t* arg1)
{
    int64_t* rax = &arg1[3];
    __builtin_memset(arg1, 0, 0x18);
    int64_t i_1 = 2;
    int64_t i;
    
    do
    {
        *rax = 0;
        rax = &rax[1];
        i = i_1;
        i_1 -= 1;
    } while (i != 1);
    int64_t (* var_28)() = _guard_check_icall;
    `eh vector constructor iterator'((arg1 + 0x2c), 8, 4, sub_180001440);
    int32_t var_10 = 0;
    int32_t var_10_1 = 0;
    *arg1 = _mm_unpacklo_ps({0}, 0);
    *(arg1 + 0xc) = _mm_unpacklo_ps({0}, 0);
    arg1[1] = 0;
    *(arg1 + 0x14) = 0;
    arg1[3] = _mm_unpacklo_ps({0}, 0);
    arg1[4] = _mm_unpacklo_ps({0}, 0);
    arg1[5] = 0;
    return arg1;
}

int64_t sub_180001520(int64_t arg1)
{
    int64_t var_18 = -2;
    return `eh vector vbase constructor iterator'((arg1 + 0x2c), 8, 4, _guard_check_icall);
}

int32_t* sub_180001550(int32_t* arg1)
{
    *arg1 = 3;
    *(arg1 + 4) = -1;
    *(arg1 + 0xc) = -1;
    return arg1;
}

int32_t* sub_180001570(int32_t* arg1)
{
    sub_1800010c0(&arg1[0xe]);
    *arg1 = 0;
    *(arg1 + 8) = 0;
    arg1[4] = 0;
    __builtin_memset(&arg1[6], 0, 0x20);
    *(arg1 + 0xe0) = 0;
    arg1[0x3a] = 0;
    arg1[0x7b] = 0;
    arg1[0xbc] = 0xffffffff;
    return arg1;
}

int64_t sub_1800015d0(int64_t arg1)
{
    int64_t var_18 = -2;
    return `eh vector vbase constructor iterator'((arg1 + 0x40), 0x10, 0xa, _guard_check_icall);
}

uint64_t sub_180001600(void* arg1, void* arg2)
{
    int32_t r8 = *(arg1 + 4);
    int32_t rcx = *(arg2 + 4);
    
    if (r8 > rcx)
        return 1;
    
    int32_t rax_1;
    rax_1 = r8 >= rcx;
    return (rax_1 - 1);
}

int64_t sub_180001620(void* arg1, int32_t arg2)
{
    int64_t var_18 = -2;
    int64_t rdi = arg2;
    
    if (arg2 <= 0)
        return 0;
    
    int64_t rcx = *(arg1 + 0x10);
    
    if (rcx != 0)
    {
        sub_18002367c(rcx);
        *(arg1 + 0x10) = 0;
    }
    
    *(arg1 + 8) = 0;
    int64_t result = j_operator new(rdi);
    *(arg1 + 0x10) = result;
    
    if (result == 0)
        return result;
    
    *(arg1 + 8) = rdi;
    return 1;
}

void sub_180001690(int32_t* arg1)
{
    int64_t var_18 = -2;
    
    if (*(arg1 + 8) == 0)
    {
        *arg1 = 0;
        return;
    }
    
    int32_t i = 0;
    
    if (*arg1 > 0)
    {
        int64_t r14_1 = 0;
        
        do
        {
            int64_t rdi_1 = *(arg1 + 8);
            int64_t rcx = *((rdi_1 + r14_1) + 0x10);
            
            if (rcx != 0)
            {
                sub_18002367c(rcx);
                *((rdi_1 + r14_1) + 0x10) = 0;
            }
            
            *((rdi_1 + r14_1) + 8) = 0;
            i += 1;
            r14_1 += 0x18;
        } while (i < *arg1);
    }
    
    void* rcx_1 = *(arg1 + 8);
    
    if (rcx_1 != 0)
    {
        `eh vector vbase constructor iterator'(rcx_1, 0x18, *(rcx_1 - 8), sub_180001200);
        sub_1800235a4((rcx_1 - 8));
    }
    
    *(arg1 + 8) = 0;
    *arg1 = 0;
}

int64_t sub_180001760(int32_t* arg1, int32_t arg2)
{
    int64_t var_28 = -2;
    int64_t rsi = arg2;
    
    if (arg2 <= 0)
        return 0;
    
    sub_180001690(arg1);
    arg_18 = rsi;
    int64_t rax;
    int64_t rdx;
    rdx = HIGHQ((0x18 * rsi));
    rax = LOWQ((0x18 * rsi));
    
    if (((0x18 * rsi) >> 0x40) != {0})
        rax = -1;
    
    uint64_t rax_1 = (rax + 8);
    
    if (rax >= -8)
        rax_1 = -1;
    
    int64_t* rax_2 = j_operator new(rax_1);
    arg_20 = rax_2;
    void* rbx_1;
    
    if (rax_2 == 0)
        rbx_1 = nullptr;
    else
    {
        *rax_2 = rsi;
        rbx_1 = &rax_2[1];
        void (* var_38_1)(void* arg1) = sub_180001200;
        `eh vector constructor iterator'(rbx_1, 0x18, rsi, sub_1800011f0);
    }
    
    *(arg1 + 8) = rbx_1;
    
    if (rbx_1 == 0)
        return 0;
    
    *arg1 = rsi;
    return 1;
}

int64_t sub_180001810(int32_t* arg1, int32_t* arg2)
{
    int64_t i_2 = *arg1;
    int32_t rdi = 0;
    *arg2 = 0;
    
    if (i_2 > 0)
    {
        int32_t r8_1 = 0;
        int64_t rax_2 = (*(arg1 + 8) + 4);
        int64_t i;
        
        do
        {
            r8_1 += *rax_2;
            rax_2 += 0x18;
            i = i_2;
            i_2 -= 1;
        } while (i != 1);
        *arg2 = r8_1;
        
        if (r8_1 != 0)
        {
            int64_t result = j_operator new(r8_1);
            
            if (result != 0)
            {
                int32_t i_1 = 0;
                
                if (*arg1 <= 0)
                    return result;
                
                int64_t rbp_1 = 0;
                
                do
                {
                    int32_t* rax_3 = *(arg1 + 8);
                    uint32_t count = *((rax_3 + rbp_1) + 4);
                    
                    if (count != 0)
                    {
                        int32_t r14_1 = *(rax_3 + rbp_1);
                        
                        if (r14_1 != 0)
                        {
                            char* rax_4 = *((rax_3 + rbp_1) + 0x10);
                            
                            if ((rax_4 != 0 && (r14_1 != 0 && count != 0)))
                            {
                                void* rax_5 = j_operator new(count);
                                
                                if (rax_5 != 0)
                                {
                                    memset(rax_5, 0, count);
                                    sub_180021580(rax_4, rax_5, r14_1, count);
                                    memcpy((rdi + result), rax_5, count);
                                    sub_18002367c(rax_5);
                                }
                            }
                            
                            rdi += count;
                        }
                    }
                    
                    i_1 += 1;
                    rbp_1 += 0x18;
                } while (i_1 < *arg1);
                
                return result;
            }
        }
    }
    
    return 0;
}

int64_t sub_180001960(void* arg1)
{
    int64_t result = *(arg1 + 0x30);
    
    if (result != 0)
    {
        int32_t i = 0;
        
        if (*(arg1 + 0x28) > 0)
        {
            int64_t r8_1 = 0;
            
            do
            {
                if (*((r8_1 + result) + 0x18) != 0)
                {
                    int32_t j = 0;
                    
                    if (*((r8_1 + result) + 0x10) > 0)
                    {
                        int64_t rdx_1 = 0;
                        
                        do
                        {
                            j += 1;
                            int64_t rcx = *((r8_1 + *(arg1 + 0x30)) + 0x18);
                            *((rcx + rdx_1) + 0x1c) = (1f - *((rcx + rdx_1) + 0x1c));
                            int64_t rcx_1 = *((r8_1 + *(arg1 + 0x30)) + 0x18);
                            *((rcx_1 + rdx_1) + 0x24) = (1f - *((rcx_1 + rdx_1) + 0x24));
                            rdx_1 += 0x4c;
                            result = *(arg1 + 0x30);
                        } while (j < *((r8_1 + result) + 0x10));
                    }
                }
                
                i += 1;
                r8_1 += 0x2f8;
            } while (i < *(arg1 + 0x28));
        }
    }
    
    return result;
}

void* sub_180001a00(void* arg1)
{
    int64_t var_28 = -2;
    int32_t rbx_1 = (*(arg1 + 0x38) + 1);
    int64_t rbp = rbx_1;
    arg_8 = rbp;
    int64_t rax;
    int64_t rdx;
    rdx = HIGHQ((0x5c8 * rbp));
    rax = LOWQ((0x5c8 * rbp));
    
    if (((0x5c8 * rbp) >> 0x40) != {0})
        rax = -1;
    
    uint64_t rax_1 = (rax + 8);
    
    if (rax >= -8)
        rax_1 = -1;
    
    int64_t* rax_2 = j_operator new(rax_1);
    arg_10 = rax_2;
    void* rsi;
    
    if (rax_2 == 0)
        rsi = nullptr;
    else
    {
        *rax_2 = rbp;
        rsi = &rax_2[1];
        int64_t (* var_38_1)() = _guard_check_icall;
        `eh vector constructor iterator'(rsi, 0x5c8, rbp, sub_1800012a0);
    }
    
    if (rsi == 0)
        return nullptr;
    
    int32_t rax_4 = *(arg1 + 0x38);
    
    if (rax_4 > 0)
        memcpy(rsi, *(arg1 + 0x40), (rax_4 * 0x5c8));
    
    void* rcx_3 = *(arg1 + 0x40);
    
    if (rcx_3 != 0)
    {
        sub_180001b00(rcx_3);
        *(arg1 + 0x40) = 0;
    }
    
    *(arg1 + 0x40) = rsi;
    *(arg1 + 0x38) = rbx_1;
    uint64_t r8_3 = (rbx_1 - 1);
    void* rbx_2 = (r8_3 * 0x5c8);
    sscanf_s(((rbx_2 + 0x104) + rsi), "Blank%d", r8_3);
    return (*(arg1 + 0x40) + rbx_2);
}

int64_t* sub_180001b00(void* arg1)
{
    int64_t var_18 = -2;
    `eh vector vbase constructor iterator'(arg1, 0x5c8, *(arg1 - 8), _guard_check_icall);
    *(arg1 - 8);
    sub_1800235a4((arg1 - 8));
    return (arg1 - 8);
}

int64_t sub_180001b50(void* arg1, int32_t arg2)
{
    int64_t var_28 = -2;
    int64_t rsi = arg2;
    
    if (arg2 <= 0)
        return 0;
    
    sub_180001c00(arg1);
    arg_18 = rsi;
    int64_t rax;
    int64_t rdx;
    rdx = HIGHQ((0x2f8 * rsi));
    rax = LOWQ((0x2f8 * rsi));
    
    if (((0x2f8 * rsi) >> 0x40) != {0})
        rax = -1;
    
    uint64_t rax_1 = (rax + 8);
    
    if (rax >= -8)
        rax_1 = -1;
    
    int64_t* rax_2 = j_operator new(rax_1);
    arg_20 = rax_2;
    void* rbx_1;
    
    if (rax_2 == 0)
        rbx_1 = nullptr;
    else
    {
        *rax_2 = rsi;
        rbx_1 = &rax_2[1];
        int64_t (* var_38_1)(int64_t arg1) = sub_1800015d0;
        `eh vector constructor iterator'(rbx_1, 0x2f8, rsi, sub_180001570);
    }
    
    *(arg1 + 0x30) = rbx_1;
    
    if (rbx_1 == 0)
        return 0;
    
    *(arg1 + 0x28) = rsi;
    return 1;
}

void sub_180001c00(void* arg1)
{
    int64_t var_18 = -2;
    
    if (*(arg1 + 0x30) == 0)
    {
        *(arg1 + 0x28) = 0;
        return;
    }
    
    int32_t i = 0;
    
    if (*(arg1 + 0x28) > 0)
    {
        do
        {
            sub_180001cb0(((i * 0x2f8) + *(arg1 + 0x30)));
            i += 1;
        } while (i < *(arg1 + 0x28));
    }
    
    void* rcx_2 = *(arg1 + 0x30);
    
    if (rcx_2 != 0)
    {
        `eh vector vbase constructor iterator'(rcx_2, 0x2f8, *(rcx_2 - 8), sub_1800015d0);
        *(rcx_2 - 8);
        sub_1800235a4((rcx_2 - 8));
    }
    
    *(arg1 + 0x30) = 0;
    *(arg1 + 0x28) = 0;
}

void sub_180001cb0(int32_t* arg1)
{
    int64_t var_18 = -2;
    void* rcx = *(arg1 + 8);
    
    if (rcx != 0)
    {
        `eh vector vbase constructor iterator'(rcx, 0x14, *(rcx - 8), _guard_check_icall);
        sub_1800235a4((rcx - 8));
        *(arg1 + 8) = 0;
    }
    
    *arg1 = 0;
    void* rcx_2 = *(arg1 + 0x18);
    
    if (rcx_2 != 0)
    {
        `eh vector vbase constructor iterator'(rcx_2, 0x4c, *(rcx_2 - 8), sub_180001520);
        *(rcx_2 - 8);
        sub_1800235a4((rcx_2 - 8));
        *(arg1 + 0x18) = 0;
    }
    
    arg1[4] = 0;
}

void sub_180001d60(int32_t* arg1)
{
    int64_t var_18 = -2;
    void* rcx = *(arg1 + 8);
    
    if (rcx != 0)
    {
        `eh vector vbase constructor iterator'(rcx, 0x14, *(rcx - 8), _guard_check_icall);
        sub_1800235a4((rcx - 8));
        *(arg1 + 8) = 0;
    }
    
    *arg1 = 0;
}

int64_t sub_180001dd0(int32_t* arg1, int32_t arg2)
{
    int64_t var_28 = -2;
    int64_t rsi = arg2;
    
    if (arg2 <= 0)
        return 0;
    
    sub_180001d60(arg1);
    arg_18 = rsi;
    int64_t rax;
    int64_t rdx;
    rdx = HIGHQ((0x14 * rsi));
    rax = LOWQ((0x14 * rsi));
    
    if (((0x14 * rsi) >> 0x40) != {0})
        rax = -1;
    
    uint64_t rax_1 = (rax + 8);
    
    if (rax >= -8)
        rax_1 = -1;
    
    int64_t* rax_2 = j_operator new(rax_1);
    arg_20 = rax_2;
    void* rbx_1;
    
    if (rax_2 == 0)
        rbx_1 = nullptr;
    else
    {
        *rax_2 = rsi;
        rbx_1 = &rax_2[1];
        int64_t (* var_38_1)() = _guard_check_icall;
        `eh vector constructor iterator'(rbx_1, 0x14, rsi, sub_180001550);
    }
    
    *(arg1 + 8) = rbx_1;
    
    if (rbx_1 == 0)
        return 0;
    
    *arg1 = rsi;
    return 1;
}

int64_t sub_180001e80(int32_t* arg1, int32_t arg2)
{
    if ((arg2 > 0 && sub_180001dd0(arg1, arg2) != 0))
    {
        int32_t i = 0;
        
        if (*arg1 > 0)
        {
            int64_t rdx = 0;
            
            do
            {
                rdx += 0x14;
                i += 1;
                *((rdx + *(arg1 + 8)) - 0x14) = 3;
            } while (i < *arg1);
        }
        
        return 1;
    }
    
    return 0;
}

int64_t sub_180001ed0(void* arg1, int32_t arg2)
{
    int64_t var_28 = -2;
    int64_t rsi = arg2;
    
    if (arg2 <= 0)
        return 0;
    
    void* rcx = *(arg1 + 0x18);
    void* rbx_2;
    
    if (rcx == 0)
        rbx_2 = nullptr;
    else
    {
        `eh vector vbase constructor iterator'(rcx, 0x4c, *(rcx - 8), sub_180001520);
        *(rcx - 8);
        sub_1800235a4((rcx - 8));
        rbx_2 = nullptr;
        *(arg1 + 0x18) = 0;
    }
    
    *(arg1 + 0x10) = 0;
    arg_18 = rsi;
    int64_t rax;
    int64_t rdx_2;
    rdx_2 = HIGHQ((0x4c * rsi));
    rax = LOWQ((0x4c * rsi));
    
    if (((0x4c * rsi) >> 0x40) != {0})
        rax = -1;
    
    uint64_t rax_1 = (rax + 8);
    
    if (rax >= -8)
        rax_1 = -1;
    
    int64_t* rax_2 = j_operator new(rax_1);
    arg_20 = rax_2;
    
    if (rax_2 != 0)
    {
        *rax_2 = rsi;
        rbx_2 = &rax_2[1];
        int64_t (* var_38_1)(int64_t arg1) = sub_180001520;
        `eh vector constructor iterator'(rbx_2, 0x4c, rsi, sub_180001460);
    }
    
    *(arg1 + 0x18) = rbx_2;
    
    if (rbx_2 == 0)
        return 0;
    
    *(arg1 + 0x10) = rsi;
    return 1;
}

int64_t sub_180001fd0(void* arg1, int32_t arg2)
{
    int64_t var_28 = -2;
    int64_t rsi = arg2;
    
    if (arg2 <= 0)
        return 0;
    
    void* rcx = *(arg1 + 0x10);
    void* rbx_2;
    
    if (rcx == 0)
        rbx_2 = nullptr;
    else
    {
        `eh vector vbase constructor iterator'(rcx, 0x208, *(rcx - 8), _guard_check_icall);
        *(rcx - 8);
        sub_1800235a4((rcx - 8));
        rbx_2 = nullptr;
        *(arg1 + 0x10) = 0;
    }
    
    *(arg1 + 8) = 0;
    arg_18 = rsi;
    int64_t rax;
    int64_t rdx_2;
    rdx_2 = HIGHQ((0x208 * rsi));
    rax = LOWQ((0x208 * rsi));
    
    if (((0x208 * rsi) >> 0x40) != {0})
        rax = -1;
    
    uint64_t rax_1 = (rax + 8);
    
    if (rax >= -8)
        rax_1 = -1;
    
    int64_t* rax_2 = j_operator new(rax_1);
    arg_20 = rax_2;
    
    if (rax_2 != 0)
    {
        *rax_2 = rsi;
        rbx_2 = &rax_2[1];
        int64_t (* var_38_1)() = _guard_check_icall;
        `eh vector constructor iterator'(rbx_2, 0x208, rsi, _Symlink_get);
    }
    
    *(arg1 + 0x10) = rbx_2;
    
    if (rbx_2 == 0)
        return 0;
    
    *(arg1 + 8) = rsi;
    return 1;
}

int64_t sub_1800020d0(void* arg1, int32_t arg2)
{
    int64_t var_38 = -2;
    int64_t r14 = arg2;
    
    if (arg2 <= 0)
        return 0;
    
    void* rcx = *(arg1 + 0x20);
    int32_t i;
    
    if (rcx == 0)
        i = 0;
    else
    {
        `eh vector vbase constructor iterator'(rcx, 0x138, *(rcx - 8), _guard_check_icall);
        *(rcx - 8);
        sub_1800235a4((rcx - 8));
        i = 0;
        *(arg1 + 0x20) = 0;
    }
    
    *(arg1 + 0x18) = 0;
    arg_18 = r14;
    int64_t rax;
    int64_t rdx_2;
    rdx_2 = HIGHQ((0x138 * r14));
    rax = LOWQ((0x138 * r14));
    
    if (((0x138 * r14) >> 0x40) != {0})
        rax = -1;
    
    uint64_t rax_1 = (rax + 8);
    
    if (rax >= -8)
        rax_1 = -1;
    
    int64_t* rax_2 = j_operator new(rax_1);
    arg_20 = rax_2;
    void* rsi_1;
    
    if (rax_2 == 0)
        rsi_1 = nullptr;
    else
    {
        *rax_2 = r14;
        rsi_1 = &rax_2[1];
        int64_t (* var_48_1)() = _guard_check_icall;
        `eh vector constructor iterator'(rsi_1, 0x138, r14, sub_180001250);
    }
    
    *(arg1 + 0x20) = rsi_1;
    
    if (rsi_1 == 0)
        return 0;
    
    *(arg1 + 0x18) = r14;
    
    if (r14 > 0)
    {
        int128_t zmm1 = data_180028eb0;
        int128_t* rcx_4 = nullptr;
        
        do
        {
            *(rcx_4 + *(arg1 + 0x20)) = zmm1;
            *((rcx_4 + *(arg1 + 0x20)) + 0x20) = 0x43000000;
            *((rcx_4 + *(arg1 + 0x20)) + 0x24) = 0x3f800000;
            i += 1;
            rcx_4 += 0x138;
        } while (i < *(arg1 + 0x18));
    }
    
    return 1;
}

void sub_180002220()
{
    int64_t var_18 = -2;
    void* r10 = data_180030740;
    
    if (r10 != 0)
    {
        int32_t i = 0;
        
        if (data_180030738 > 0)
        {
            do
            {
                sub_1800022d0(((i * 0x118) + r10));
                i += 1;
                r10 = data_180030740;
            } while (i < data_180030738);
        }
        
        if (r10 != 0)
        {
            `eh vector vbase constructor iterator'(r10, 0x118, *(r10 - 8), _guard_check_icall);
            *(r10 - 8);
            sub_1800235a4((r10 - 8));
        }
        
        data_180030740 = 0;
    }
    
    data_180030738 = 0;
}

void sub_1800022d0(void* arg1)
{
    int64_t var_18 = -2;
    
    if (*(arg1 + 0x110) == 0)
    {
        *(arg1 + 0x108) = 0;
        return;
    }
    
    int32_t i = 0;
    
    if (*(arg1 + 0x108) > 0)
    {
        do
        {
            sub_180002390(((i * 0x138) + *(arg1 + 0x110)));
            i += 1;
        } while (i < *(arg1 + 0x108));
    }
    
    void* rcx_2 = *(arg1 + 0x110);
    
    if (rcx_2 != 0)
    {
        `eh vector vbase constructor iterator'(rcx_2, 0x138, *(rcx_2 - 8), _guard_check_icall);
        *(rcx_2 - 8);
        sub_1800235a4((rcx_2 - 8));
    }
    
    *(arg1 + 0x110) = 0;
    *(arg1 + 0x108) = 0;
}

int64_t sub_180002390(void* arg1)
{
    int64_t var_18 = -2;
    void* rcx = *(arg1 + 0x110);
    
    if (rcx != 0)
    {
        `eh vector vbase constructor iterator'(rcx, 0x10, *(rcx - 8), _guard_check_icall);
        *(rcx - 8);
        sub_1800235a4((rcx - 8));
        *(arg1 + 0x110) = 0;
    }
    
    *(arg1 + 0x108) = 0;
    int64_t result = sub_180002450(arg1);
    void* rcx_3 = *(arg1 + 0x120);
    
    if (rcx_3 != 0)
    {
        `eh vector vbase constructor iterator'(rcx_3, 0x10, *(rcx_3 - 8), _guard_check_icall);
        *(rcx_3 - 8);
        result = sub_1800235a4((rcx_3 - 8));
        *(arg1 + 0x120) = 0;
    }
    
    *(arg1 + 0x118) = 0;
    return result;
}

void sub_180002450(void* arg1)
{
    int64_t var_18 = -2;
    void* rcx = *(arg1 + 0x130);
    
    if (rcx != 0)
    {
        `eh vector vbase constructor iterator'(rcx, 0x14, *(rcx - 8), _guard_check_icall);
        sub_1800235a4((rcx - 8));
        *(arg1 + 0x130) = 0;
    }
    
    *(arg1 + 0x128) = 0;
}

int64_t sub_1800024d0()
{
    int64_t var_18 = -2;
    void* rcx = data_180030700;
    
    if (rcx != 0)
    {
        `eh vector vbase constructor iterator'(rcx, 0x208, *(rcx - 8), _guard_check_icall);
        *(rcx - 8);
        sub_1800235a4((rcx - 8));
        data_180030700 = 0;
    }
    
    data_1800306f8 = 0;
    void* rcx_2 = data_180030710;
    
    if (rcx_2 != 0)
    {
        `eh vector vbase constructor iterator'(rcx_2, 0x138, *(rcx_2 - 8), _guard_check_icall);
        *(rcx_2 - 8);
        sub_1800235a4((rcx_2 - 8));
        data_180030710 = 0;
    }
    
    data_180030708 = 0;
    sub_180001c00(&data_1800306f0);
    void* rcx_4 = data_180030730;
    
    if (rcx_4 != 0)
    {
        `eh vector vbase constructor iterator'(rcx_4, 0x5c8, *(rcx_4 - 8), _guard_check_icall);
        *(rcx_4 - 8);
        sub_1800235a4((rcx_4 - 8));
        data_180030730 = 0;
    }
    
    data_180030728 = 0;
    int64_t result = sub_180002220();
    *data_1800306f0 = 0;
    data_18003074c = 0;
    return result;
}

void sub_1800025e0(int16_t* arg1)
{
    *arg1 = 0;
    arg1[0x104] = 0;
}

int64_t PluginVersion() __pure
{
    return 0xe16;
}

uint64_t PluginProc(int32_t arg1, int64_t* arg2)
{
    int64_t var_338 = -2;
    void var_358;
    int64_t rax_1 = (__security_cookie ^ &var_358);
    uint64_t result;
    
    if (arg1 == 0x10016)
    {
        if (arg2 == 0)
            result = 0;
        else
        {
            arg2[3] = 1;
            *(arg2 + 0x1c) = 2;
            arg2[5] = sub_1800028b0;
            *(arg2 + 8) = data_1800254d0;
            int64_t rcx_1 = 0;
            void var_328;
            int16_t i;
            
            do
            {
                i = *(rcx_1 + u"GameLoft BDAE Importer\r\n");
                *(&var_328 + rcx_1) = i;
                rcx_1 += 2;
            } while (i != 0);
            void var_120;
            wcstombs(&var_120, u"GameLoft BDAE Importer\r\n", 0x104);
            
            if (&arg2[6] != &var_328)
            {
                void* rcx_3 = &var_120;
                char i_1;
                
                do
                {
                    i_1 = *rcx_3;
                    *(((&arg2[6] - &var_120) + 0x208) + rcx_3) = i_1;
                    rcx_3 += 1;
                } while (i_1 != 0);
                void* rcx_4 = &var_328;
                int16_t i_2;
                
                do
                {
                    i_2 = *rcx_4;
                    *((&arg2[6] - &var_328) + rcx_4) = i_2;
                    rcx_4 += 2;
                } while (i_2 != 0);
            }
            
            int64_t rcx_5 = 0;
            int16_t i_3;
            
            do
            {
                i_3 = *(rcx_5 + u"3.50.77b");
                *(&var_328 + rcx_5) = i_3;
                rcx_5 += 2;
            } while (i_3 != 0);
            wcstombs(&var_120, u"3.50.77b", 0x104);
            
            if ((arg2 + 0x33c) != &var_328)
            {
                void* rcx_7 = &var_120;
                char i_4;
                
                do
                {
                    i_4 = *rcx_7;
                    *((((arg2 + 0x33c) - &var_120) + 0x208) + rcx_7) = i_4;
                    rcx_7 += 1;
                } while (i_4 != 0);
                void* rcx_8 = &var_328;
                int16_t i_5;
                
                do
                {
                    i_5 = *rcx_8;
                    *(((arg2 + 0x33c) - &var_328) + rcx_8) = i_5;
                    rcx_8 += 2;
                } while (i_5 != 0);
            }
            
            int64_t rcx_9 = 0;
            int16_t i_6;
            
            do
            {
                i_6 = *(rcx_9 + u"GameLoft BDAE files (*.bdae)");
                *(&var_328 + rcx_9) = i_6;
                rcx_9 += 2;
            } while (i_6 != 0);
            wcstombs(&var_120, u"GameLoft BDAE files (*.bdae)", 0x104);
            
            if (&arg2[0xc9] != &var_328)
            {
                void* rcx_11 = &var_120;
                char i_7;
                
                do
                {
                    i_7 = *rcx_11;
                    *(((&arg2[0xc9] - &var_120) + 0x208) + rcx_11) = i_7;
                    rcx_11 += 1;
                } while (i_7 != 0);
                void* rcx_12 = &var_328;
                int16_t i_8;
                
                do
                {
                    i_8 = *rcx_12;
                    *((&arg2[0xc9] - &var_328) + rcx_12) = i_8;
                    rcx_12 += 2;
                } while (i_8 != 0);
            }
            
            int64_t r9_1 = 0;
            int16_t i_9;
            
            do
            {
                i_9 = *(r9_1 + u"bdae");
                *(&var_328 + r9_1) = i_9;
                r9_1 += 2;
            } while (i_9 != 0);
            wcstombs(&var_120, u"bdae", 0x104);
            int64_t r8_4 = *arg2;
            int32_t result_1;
            result_1 = *(r8_4 + 0x18)(arg2, &var_328, r8_4) != 0;
            result = result_1;
        }
    }
    else if (arg1 == 0x10017)
        result = 0xe16;
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_358));
    return result;
}

int64_t sub_1800028b0(int32_t arg1, int64_t* arg2, HINSTANCE arg3, int512_t arg4 @ zmm1)
{
    if (arg1 == 0x10018)
    {
        if (arg2 != 0)
        {
            data_1800306d0 = arg2;
            /* tailcall */
            return sub_180003c80(arg2, arg4);
        }
    }
    else
    {
        bool cond:0_1;
        
        if (arg1 == 0x10019)
        {
            cond:0_1 = arg2 == 0;
        label_1800028d2:
            
            if (!(cond:0_1))
                data_1800306d0 = arg2;
        }
        else if (arg1 == 0x1001f)
        {
            if ((arg2 != 0 && arg3 != 0))
            {
                data_1800306d0 = arg2;
                /* tailcall */
                return sub_180002980(arg2, arg3);
            }
        }
        else if ((arg1 == 0x10020 && arg2 != 0))
        {
            cond:0_1 = arg3 == 0;
            goto label_1800028d2;
        }
    }
    
    return 0;
}

int32_t sub_180002920(wchar16* arg1, wchar16* arg2, int64_t arg3)
{
    arg_10 = arg2;
    _ArgList = arg3;
    int64_t r9;
    arg_20 = r9;
    int32_t result = __stdio_common_vswprintf(data_1800306c0, arg1, -1, arg2, nullptr, &_ArgList);
    
    if (result < 0)
        return -1;
    
    return result;
}

int64_t sub_180002980(int64_t* arg1, HINSTANCE arg2)
{
    if ((arg1 != 0 && arg2 != 0))
    {
        int32_t rax_1 = data_1800306f0;
        
        if (((rax_1 == 0x30b || rax_1 == 0x32b) || ((rax_1 - 0x374) <= 0x1b && (TEST_BITD(0x8000201, (rax_1 - 0x374))))))
            data_180030034 = 0;
        else
            data_180030034 = 1;
        
        int64_t rax_5;
        int64_t rcx_2;
        rax_5 = DialogBoxParamW(arg2, 0x65, *(*arg1 + 0x88)(arg1), sub_180003990, 0);
        
        if ((rax_5 == 2 || (rax_5 + 1) <= 1))
        {
            sub_1800024d0();
            return 2;
        }
        
        if (sub_180002d40(rcx_2, arg1) != 0)
        {
            sub_1800024d0();
            return 1;
        }
    }
    
    sub_1800024d0();
    return 0;
}

int64_t sub_180002a70(int64_t arg1, int64_t* arg2)
{
    int64_t var_a88 = -2;
    void var_aa8;
    int64_t rax_1 = (__security_cookie ^ &var_aa8);
    int64_t result;
    
    if (arg2 != 0)
    {
        void lpPathName;
        memset(&lpPathName, 0, 0x208);
        sub_18001d1f0(&data_18003074c, &lpPathName);
        SetCurrentDirectoryW(&lpPathName);
        int32_t i = 0;
        
        if (data_180030708 > 0)
        {
            int64_t r14_1 = 0;
            
            do
            {
                int64_t rcx_2 = (i * 0x138);
                void* rbx_2 = (data_180030710 + 0x34);
                char* _Source_1 = (rbx_2 + rcx_2);
                wchar16 var_768;
                char var_560;
                
                if (rbx_2 != -(rcx_2))
                {
                    char* _Source_2 = _Source_1;
                    char j;
                    
                    do
                    {
                        j = *_Source_2;
                        *((&var_560 - _Source_1) + _Source_2) = j;
                        _Source_2 = &_Source_2[1];
                    } while (j != 0);
                    mbstowcs(&var_768, _Source_1, (mbstowcs(nullptr, _Source_1, 0) + 1));
                }
                
                int64_t* rax_5 = *(*arg2 + 0x4b0)(arg2, &var_768);
                var_768 = 0;
                var_560 = 0;
                
                if (rax_5 == 0)
                    goto label_180002ab3;
                
                int64_t rdx_4 = *((r14_1 + data_180030710) + 0x28);
                int64_t r8_3 = data_180030700;
                
                if ((r8_3 != 0 && (rdx_4 >= 0 && rdx_4 < data_1800306f8)))
                {
                    int16_t* rbx_4 = ((rdx_4 * 0x208) + r8_3);
                    
                    if (*rbx_4 != 0)
                    {
                        void _Source;
                        memset(&_Source, 0, 0x208);
                        int64_t rcx_7 = 0;
                        int16_t j_1;
                        
                        do
                        {
                            j_1 = *(&lpPathName + rcx_7);
                            *(&_Source + rcx_7) = j_1;
                            rcx_7 += 2;
                        } while (j_1 != 0);
                        void var_45a;
                        void* rcx_8 = &var_45a;
                        
                        do
                            rcx_8 += 2;
                         while (*rcx_8 != 0);
                        
                        int64_t rdx_5 = 0;
                        int16_t j_2;
                        
                        do
                        {
                            j_2 = rbx_4[rdx_5];
                            *(rcx_8 + (rdx_5 << 1)) = j_2;
                            rdx_5 += 1;
                        } while (j_2 != 0);
                        int64_t rax_6 = 0;
                        int16_t var_a78;
                        int16_t j_3;
                        
                        do
                        {
                            j_3 = *(&_Source + rax_6);
                            *(&var_a78 + rax_6) = j_3;
                            rax_6 += 2;
                        } while (j_3 != 0);
                        void var_870;
                        wcstombs(&var_870, &_Source, 0x104);
                        void* rax_8 = *(*rax_5 + 0x30)(rax_5, 0, 1);
                        
                        if ((rax_8 != 0 && var_a78 != 0))
                        {
                            if ((rax_8 + 0x30) != &var_a78)
                            {
                                void* rdx_7 = &var_870;
                                char j_4;
                                
                                do
                                {
                                    j_4 = *rdx_7;
                                    *((((rax_8 + 0x30) - &var_870) + rdx_7) + 0x208) = j_4;
                                    rdx_7 += 1;
                                } while (j_4 != 0);
                                int16_t* rcx_13 = &var_a78;
                                int16_t j_5;
                                
                                do
                                {
                                    j_5 = *rcx_13;
                                    *(((rax_8 + 0x30) - &var_a78) + rcx_13) = j_5;
                                    rcx_13 = &rcx_13[1];
                                } while (j_5 != 0);
                            }
                            
                            *(rax_8 + 8) |= 1;
                        }
                    }
                }
                
                i += 1;
                r14_1 += 0x138;
            } while (i < data_180030708);
        }
        
        result = 1;
    }
    else
    {
    label_180002ab3:
        result = 0;
    }
    
    __security_check_cookie((rax_1 ^ &var_aa8));
    return result;
}

int64_t sub_180002d40(int64_t arg1, int64_t* arg2)
{
    int64_t var_4b0 = -2;
    uint128_t zmm6;
    uint128_t var_38 = zmm6;
    int128_t zmm7;
    int128_t var_48 = zmm7;
    int128_t zmm8;
    int128_t var_58 = zmm8;
    int128_t zmm9;
    int128_t var_68 = zmm9;
    int128_t zmm10;
    int128_t var_78 = zmm10;
    void var_4f8;
    int64_t rax_1 = (__security_cookie ^ &var_4f8);
    int64_t result;
    
    if (arg2 != 0)
    {
        sub_180002a70(arg1, arg2);
        void* const r9_1 = nullptr;
        int32_t rdx = 0;
        int32_t i_7 = data_180030718;
        
        if (i_7 <= 0)
            goto label_180002df7;
        
        int32_t* rcx = data_180030720;
        uint64_t i_6 = i_7;
        uint64_t i;
        
        do
        {
            if (*rcx != 0)
                rdx += rcx[4];
            
            rcx = &rcx[0xbe];
            i = i_6;
            i_6 -= 1;
        } while (i != 1);
        
        if (rdx <= 0)
            goto label_180002df7;
        
        if (*(*arg2 + 0x320)(arg2) == 0)
        {
        label_180002d9f:
            result = 0;
        }
        else
        {
            i_7 = data_180030718;
            r9_1 = nullptr;
        label_180002df7:
            uint64_t rdx_1 = 0;
            int32_t var_4d8_1 = 0;
            int32_t r8_1 = 0;
            int32_t var_4d4_1 = 0;
            int32_t* var_4d0;
            
            if (i_7 > 0)
            {
                void* rcx_2 = nullptr;
                var_4d0 = nullptr;
                int32_t* rdi_1 = nullptr;
                
                do
                {
                    int64_t rsi_1 = data_180030720;
                    
                    if (*(rdi_1 + rsi_1) != 0)
                    {
                        int32_t i_1 = 0;
                        
                        if (*((rdi_1 + rsi_1) + 0x10) > 0)
                        {
                            int64_t* rbx_1 = nullptr;
                            int64_t r12_1 = (rcx_2 * 0x58);
                            
                            do
                            {
                                int64_t rax_4 = *((rdi_1 + rsi_1) + 0x18);
                                int64_t rcx_3 = arg2[0x3d9];
                                *((rcx_3 + r12_1) + 0xc) = *(rbx_1 + rax_4);
                                *((rcx_3 + r12_1) + 0x14) = *((rbx_1 + rax_4) + 8);
                                int64_t r14_1 = *((rbx_1 + *((rdi_1 + rsi_1) + 0x18)) + 0x28);
                                
                                if (r14_1 > 0)
                                {
                                    void* rax_8 = *(*arg2 + 0x498)(arg2, rdx_1, r14_1, r9_1, var_4d8_1, var_4d0);
                                    r9_1 = rax_8;
                                    
                                    if (rax_8 != 0)
                                    {
                                        int64_t j = 0;
                                        
                                        if (r14_1 >= 4)
                                        {
                                            do
                                            {
                                                *((*(r9_1 + 0x50) + (j << 3)) + 4) = *((&rbx_1[j] + *((rdi_1 + rsi_1) + 0x18)) + 0x2c);
                                                *(*(r9_1 + 0x50) + (j << 3)) = *((&rbx_1[j] + *((rdi_1 + rsi_1) + 0x18)) + 0x30);
                                                *((*(r9_1 + 0x50) + (j << 3)) + 0xc) = *((&rbx_1[j] + *((rdi_1 + rsi_1) + 0x18)) + 0x34);
                                                *((*(r9_1 + 0x50) + (j << 3)) + 8) = *((&rbx_1[j] + *((rdi_1 + rsi_1) + 0x18)) + 0x38);
                                                *((*(r9_1 + 0x50) + (j << 3)) + 0x14) = *((&rbx_1[j] + *((rdi_1 + rsi_1) + 0x18)) + 0x3c);
                                                *((*(r9_1 + 0x50) + (j << 3)) + 0x10) = *((&rbx_1[j] + *((rdi_1 + rsi_1) + 0x18)) + 0x40);
                                                *((*(r9_1 + 0x50) + (j << 3)) + 0x1c) = *((&rbx_1[j] + *((rdi_1 + rsi_1) + 0x18)) + 0x44);
                                                *((*(r9_1 + 0x50) + (j << 3)) + 0x18) = *((&rbx_1[j] + *((rdi_1 + rsi_1) + 0x18)) + 0x48);
                                                j += 4;
                                            } while (j < (r14_1 - 3));
                                        }
                                        
                                        for (; j < r14_1; j += 1)
                                        {
                                            *((*(r9_1 + 0x50) + (j << 3)) + 4) = *((&rbx_1[j] + *((rdi_1 + rsi_1) + 0x18)) + 0x2c);
                                            *(*(r9_1 + 0x50) + (j << 3)) = *((&rbx_1[j] + *((rdi_1 + rsi_1) + 0x18)) + 0x30);
                                        }
                                    }
                                }
                                
                                var_4d8_1 += 1;
                                rcx_2 = (var_4d0 + 1);
                                var_4d0 = rcx_2;
                                r12_1 += 0x58;
                                i_1 += 1;
                                rbx_1 += 0x4c;
                                rdx_1 = var_4d8_1;
                            } while (i_1 < *((rdi_1 + rsi_1) + 0x10));
                            
                            i_7 = data_180030718;
                            r8_1 = var_4d4_1;
                            r9_1 = nullptr;
                        }
                    }
                    
                    r8_1 += 1;
                    var_4d4_1 = r8_1;
                    rdi_1 = &rdi_1[0xbe];
                } while (r8_1 < i_7);
            }
            
            int32_t rdi_2 = 0;
            wchar16 var_4a8;
            char var_2a0;
            
            if (i_7 > 0)
            {
                do
                {
                    char* _Source_1 = (((rdi_2 * 0x2f8) + 0x1ec) + data_180030720);
                    
                    if (((rdi_2 * 0x2f8) + 0x1ec) != -(data_180030720))
                    {
                        char* _Source_2 = _Source_1;
                        char i_2;
                        
                        do
                        {
                            i_2 = *_Source_2;
                            *(_Source_2 + (&var_2a0 - _Source_1)) = i_2;
                            _Source_2 = &_Source_2[1];
                        } while (i_2 != 0);
                        mbstowcs(&var_4a8, _Source_1, (mbstowcs(nullptr, _Source_1, 0) + 1));
                    }
                    
                    if (*(*arg2 + 0x4b8)(arg2, &var_4a8, 0xffffffff) == 0)
                        goto label_180002d9f_1;
                    
                    rdi_2 += 1;
                    i_7 = data_180030718;
                } while (rdi_2 < i_7);
            }
            
            int32_t var_4d8_2 = 0;
            int32_t r13_1 = 0;
            int32_t var_4bc_1 = 0;
            int32_t r14_2 = 0;
            int32_t var_4b8_1 = 0;
            int32_t i_5;
            
            if (i_7 > 0)
            {
                int32_t* rbx_4 = nullptr;
                
                do
                {
                    int64_t rdi_3 = data_180030720;
                    
                    if (*(rbx_4 + rdi_3) > 0)
                    {
                        int64_t* rax_34 = *(*arg2 + 0x4e0)(arg2);
                        
                        if (rax_34 == 0)
                            goto label_180002d9f_1;
                        
                        int64_t r8_5 = *rax_34;
                        
                        if (*(r8_5 + 0x30)(rax_34, *(rbx_4 + rdi_3), r8_5) == 0)
                            goto label_180002d9f_1;
                        
                        int64_t r9_2 = 0;
                        int32_t i_3 = 0;
                        i_5 = 0;
                        
                        if (*(rbx_4 + rdi_3) > 0)
                        {
                            int64_t r12_2 = 0;
                            int32_t* rcx_20 = nullptr;
                            var_4d0 = nullptr;
                            int64_t r14_3 = 0;
                            
                            do
                            {
                                int32_t rcx_21 = *(rcx_20 + *((rbx_4 + rdi_3) + 8));
                                
                                if (*(*rax_34 + 0x40)(rax_34, i_3, rcx_21, r9_2, var_4d8_2, var_4d0) == 0)
                                    goto label_180002d9f_1;
                                
                                int32_t* rcx_23 = var_4d0;
                                int32_t rdx_16 = *((*((rbx_4 + rdi_3) + 8) + rcx_23) + 0x10);
                                
                                if ((arg2[0x3e1] != 0 && r13_1 >= arg2[0x3e0]))
                                    goto label_180002d9f_1;
                                
                                if ((arg2[0x3d7] != 0 && rdx_16 >= arg2[0x3d6]))
                                    goto label_180002d9f_1;
                                
                                *((rax_34[3] + r14_3) + 0x14) = r13_1;
                                *((rax_34[3] + r14_3) + 0x10) = rdx_16;
                                r9_2 = 0;
                                int64_t j_1 = 0;
                                
                                if (rcx_21 > 0)
                                {
                                    int64_t r11_2 = 0;
                                    int32_t* r10_1 = rcx_23;
                                    
                                    do
                                    {
                                        int64_t rax_43 = *((rbx_4 + rdi_3) + 8);
                                        int32_t rdx_18 = (var_4d8_2 + *((rax_43 + r10_1) + 4));
                                        
                                        if ((var_4d8_2 + *((rax_43 + r10_1) + 4)) < 0)
                                            goto label_180002d9f_1;
                                        
                                        if (rdx_18 >= arg2[0x3d8])
                                            goto label_180002d9f_1;
                                        
                                        *((*((rax_34[3] + r14_3) + 0x30) + r12_2) + r10_1) = rdx_18;
                                        int64_t rcx_24 = *((*((rbx_4 + rdi_3) + 8) + r10_1) + 4);
                                        
                                        if (rcx_24 < 0)
                                            goto label_180002d9f_1;
                                        
                                        if (rcx_24 >= *((rbx_4 + rdi_3) + 0x10))
                                            goto label_180002d9f_1;
                                        
                                        r9_2 = (rcx_24 * 0x4c);
                                        *((*(*((rax_34[3] + r14_3) + 0x50) + 0x18) + r11_2) + 4) = *((r9_2 + *((rbx_4 + rdi_3) + 0x18)) + 0x18);
                                        int64_t zmm0_1;
                                        zmm0_1 = (1f - *((r9_2 + *((rbx_4 + rdi_3) + 0x18)) + 0x1c));
                                        *((*(*((rax_34[3] + r14_3) + 0x50) + 0x18) + r11_2) + 8) = zmm0_1;
                                        *((*(*((rax_34[3] + r14_3) + 0x50) + 0x38) + r11_2) + 4) = *((r9_2 + *((rbx_4 + rdi_3) + 0x18)) + 0x20);
                                        zmm0_1 = (1f - *((r9_2 + *((rbx_4 + rdi_3) + 0x18)) + 0x24));
                                        *((*(*((rax_34[3] + r14_3) + 0x50) + 0x38) + r11_2) + 8) = zmm0_1;
                                        j_1 += 1;
                                        r10_1 = &r10_1[1];
                                        r11_2 += 0x10;
                                    } while (j_1 < rcx_21);
                                    
                                    rcx_23 = var_4d0;
                                }
                                
                                i_3 = (i_5 + 1);
                                i_5 = i_3;
                                r14_3 += 0x58;
                                rcx_20 = &rcx_23[5];
                                var_4d0 = rcx_20;
                                r12_2 -= 0x14;
                                r13_1 = var_4bc_1;
                            } while (i_3 < *(rbx_4 + rdi_3));
                            
                            r14_2 = var_4b8_1;
                        }
                        
                        var_4d8_2 += *((rbx_4 + rdi_3) + 0x10);
                        i_7 = data_180030718;
                    }
                    
                    r13_1 += 1;
                    var_4bc_1 = r13_1;
                    r14_2 += 1;
                    var_4b8_1 = r14_2;
                    rbx_4 = &rbx_4[0xbe];
                } while (r14_2 < i_7);
            }
            
            *(*arg2 + 0x3c8)(arg2, 1);
            int32_t i_4 = 0;
            int32_t var_4c8;
            float zmm3[0x2];
            
            if (data_180030728 > 0)
            {
                int64_t rdi_4 = 0;
                
                do
                {
                    void _Source;
                    memset(&_Source, 0, 0x104);
                    int64_t r9_3 = data_180030730;
                    char* rdx_23 = ((i_4 * 0x5c8) + r9_3);
                    char* rcx_33 = &rdx_23[0x104];
                    void* r8_9 = (&_Source - rcx_33);
                    char j_2;
                    
                    do
                    {
                        j_2 = *rcx_33;
                        *(r8_9 + rcx_33) = j_2;
                        rcx_33 = &rcx_33[1];
                    } while (j_2 != 0);
                    
                    if (*((rdi_4 + r9_3) + 0x104) == j_2)
                    {
                        void* rcx_34 = (&_Source - rdx_23);
                        char j_3;
                        
                        do
                        {
                            j_3 = *rdx_23;
                            *(rcx_34 + rdx_23) = j_3;
                            rdx_23 = &rdx_23[1];
                        } while (j_3 != 0);
                    }
                    
                    int64_t rcx_35 = 0;
                    char j_4;
                    
                    do
                    {
                        j_4 = *(&_Source + rcx_35);
                        &var_2a0[rcx_35] = j_4;
                        rcx_35 += 1;
                    } while (j_4 != 0);
                    mbstowcs(&var_4a8, &_Source, (mbstowcs(nullptr, &_Source, 0) + 1));
                    void* rax_63 = *(*arg2 + 0x4c0)(arg2, &var_4a8, 0xffffffff);
                    var_4a8 = 0;
                    var_2a0 = 0;
                    
                    if (rax_63 == 0)
                        goto label_180002d9f_1;
                    
                    *(rax_63 + 0x318) = *((rdi_4 + data_180030730) + 0x514);
                    int64_t rcx_39 = data_180030730;
                    *(rax_63 + 0x340) = *((rdi_4 + rcx_39) + 0x520);
                    *(rax_63 + 0x348) = *((rdi_4 + rcx_39) + 0x528);
                    *(rax_63 + 0x398) = *((rdi_4 + data_180030730) + 0x538);
                    float zmm1 = *(rax_63 + 0x39c);
                    zmm3 = *(rax_63 + 0x398);
                    zmm6 = *(rax_63 + 0x3a0);
                    zmm7 = *(rax_63 + 0x3a4);
                    zmm3[0] = (zmm3[0] * zmm3[0]);
                    zmm3[0] = (zmm3[0] + (zmm1 * zmm1));
                    uint128_t zmm0_2;
                    zmm0_2 = (zmm6 * zmm6);
                    zmm3[0] = (zmm3[0] + zmm0_2);
                    zmm3[0] = (zmm3[0] + (zmm7 * zmm7));
                    (zmm3[0] - 0f);
                    
                    if (((FCMP_UO(zmm3[0], 0f)) || !(zmm3[0] == 0f)))
                    {
                        zmm0_2 = sqrt(_mm_cvtps_pd(zmm3));
                        zmm3 = {0};
                        zmm3[0] = zmm0_2;
                    }
                    
                    if (zmm3[0] <= 9.99999975e-05f)
                    {
                        zmm0_2 = data_180028ea0;
                        var_4d0 = zmm0_2;
                    }
                    else
                    {
                        uint128_t zmm2;
                        zmm2 = (1f / zmm3[0]);
                        zmm0_2 = (zmm2 * *(rax_63 + 0x398));
                        var_4d0 = zmm0_2;
                        *var_4d0[4] = (zmm2 * *(rax_63 + 0x39c));
                        zmm6 = (zmm6 * zmm2);
                        var_4c8 = zmm6;
                        zmm7 = (zmm7 * zmm2);
                        int32_t var_4c4_1 = zmm7;
                        zmm0_2 = var_4d0;
                    }
                    
                    *(rax_63 + 0x398) = zmm0_2;
                    i_4 += 1;
                    rdi_4 += 0x5c8;
                } while (i_4 < data_180030728);
            }
            
            if (data_180030034 == 1)
            {
                int64_t r8_11 = *arg2;
                *(r8_11 + 0x148)(arg2, 1, r8_11, zmm3, var_4d8_2, var_4d0, var_4c8, i_5, var_4b8_1, var_4b0);
            }
            
            result = 1;
        }
    }
    else
    {
    label_180002d9f_1:
        result = 0;
    }
    
    __security_check_cookie((rax_1 ^ &var_4f8));
    return result;
}

int64_t sub_1800035c0(HWND arg1)
{
    void var_278;
    int64_t rax_1 = (__security_cookie ^ &var_278);
    int64_t result;
    
    if (arg1 != 0)
    {
        int32_t r11_1 = 0;
        int32_t rbx_1 = data_180030718;
        int32_t rsi_1 = 0;
        int32_t rdi_1 = 0;
        void* r14_1 = data_180030720;
        int32_t r15_1 = data_180030728;
        
        if ((rbx_1 > 0 && rbx_1 >= 8))
        {
            int32_t zmm6[0x4] = {0};
            int32_t zmm5[0x4] = {0};
            int32_t zmm7[0x4] = {0};
            uint128_t zmm4 = {0};
            int32_t rcx_1 = (rbx_1 & 0x80000007);
            
            if (rcx_1 < 0)
                rcx_1 = (((rcx_1 - 1) | 0xfffffff8) + 1);
            
            int64_t i = 0;
            int32_t* rax_4 = (r14_1 + 0x5f0);
            
            do
            {
                uint64_t zmm1 = rax_4[0xbe];
                r11_1 += 8;
                uint128_t zmm0 = *rax_4;
                i += 8;
                uint128_t zmm2 = rax_4[-0xbe];
                uint128_t zmm3 = rax_4[-0x17c];
                rax_4 = &rax_4[0x5f0];
                zmm3 = _mm_unpacklo_epi32(zmm3, zmm0);
                zmm0 = rax_4[-0x5ec];
                zmm2 = _mm_unpacklo_epi32(zmm2, zmm1);
                zmm1 = rax_4[-0x52e];
                zmm3 = _mm_unpacklo_epi32(zmm3, zmm2);
                zmm2 = rax_4[-0x6aa];
                zmm3 = _mm_add_epi32(zmm3, zmm6);
                zmm2 = _mm_unpacklo_epi32(zmm2, zmm1);
                zmm6 = zmm3;
                zmm1 = rax_4[-0x23a];
                zmm3 = _mm_unpacklo_epi32(rax_4[-0x768], zmm0);
                zmm0 = rax_4[-0x2f8];
                zmm3 = _mm_unpacklo_epi32(zmm3, zmm2);
                zmm2 = rax_4[-0x3b6];
                zmm3 = _mm_add_epi32(zmm3, zmm7);
                zmm2 = _mm_unpacklo_epi32(zmm2, zmm1);
                zmm7 = zmm3;
                zmm1 = rax_4[-0x236];
                zmm3 = _mm_unpacklo_epi32(rax_4[-0x474], zmm0);
                zmm0 = rax_4[-0x2f4];
                zmm3 = _mm_unpacklo_epi32(zmm3, zmm2);
                zmm2 = rax_4[-0x3b2];
                zmm3 = _mm_add_epi32(zmm3, zmm5);
                zmm2 = _mm_unpacklo_epi32(zmm2, zmm1);
                zmm5 = zmm3;
                zmm4 = _mm_add_epi32(_mm_unpacklo_epi32(_mm_unpacklo_epi32(rax_4[-0x470], zmm0), zmm2), zmm4);
            } while (i < (rbx_1 - rcx_1));
            
            zmm4 = _mm_add_epi32(zmm4, zmm7);
            zmm5 = _mm_add_epi32(zmm5, zmm6);
            zmm4 = _mm_add_epi32(zmm4, _mm_bsrli_si128(zmm4, 8));
            zmm4 = _mm_add_epi32(zmm4, _mm_bsrli_si128(zmm4, 4));
            zmm5 = _mm_add_epi32(zmm5, _mm_bsrli_si128(zmm5, 8));
            rsi_1 = zmm4;
            rdi_1 = _mm_add_epi32(zmm5, _mm_bsrli_si128(zmm5, 4))[0];
        }
        
        int32_t rdx_2 = 0;
        int32_t r8_1 = 0;
        int32_t r9_1 = 0;
        int32_t r10_1 = 0;
        
        if (r11_1 < rbx_1)
        {
            if ((rbx_1 - r11_1) >= 2)
            {
                void* rax_10 = (((r11_1 + 1) * 0x2f8) + r14_1);
                uint64_t i_2 = ((((rbx_1 - r11_1) - 2) >> 1) + 1);
                r11_1 += (i_2 << 1);
                uint64_t i_1;
                
                do
                {
                    rdx_2 += *(rax_10 - 0x2f8);
                    r9_1 += *(rax_10 - 0x2e8);
                    r8_1 += *rax_10;
                    r10_1 += *(rax_10 + 0x10);
                    rax_10 += 0x5f0;
                    i_1 = i_2;
                    i_2 -= 1;
                } while (i_1 != 1);
            }
            
            if (r11_1 < rbx_1)
            {
                int64_t rcx_8 = (r11_1 * 0x2f8);
                rdi_1 += *(rcx_8 + r14_1);
                rsi_1 += *((rcx_8 + r14_1) + 0x10);
            }
            
            rdi_1 += (r8_1 + rdx_2);
            rsi_1 += (r10_1 + r9_1);
        }
        
        void lpString;
        memset(&lpString, 0, 0x200);
        sub_180002920(&lpString, &data_18002872c, data_1800306f8);
        SetDlgItemTextW(arg1, 0x3ea, &lpString);
        sub_180002920(&lpString, &data_18002872c, r15_1);
        SetDlgItemTextW(arg1, 0x3f0, &lpString);
        sub_180002920(&lpString, &data_18002872c, rbx_1);
        SetDlgItemTextW(arg1, 0x3eb, &lpString);
        sub_180002920(&lpString, &data_18002872c, rsi_1);
        SetDlgItemTextW(arg1, 0x3ec, &lpString);
        sub_180002920(&lpString, &data_18002872c, rdi_1);
        SetDlgItemTextW(arg1, 0x3ed, &lpString);
        SendDlgItemMessageW(arg1, 0x7d3, 0xf1, data_180030034, 0);
        result = 1;
    }
    else
        result = 0;
    
    __security_check_cookie((rax_1 ^ &var_278));
    return result;
}

int64_t sub_180003990(HWND arg1, int32_t arg2, int16_t arg3)
{
    if (arg2 == 0x110)
    {
        sub_1800035c0(arg1);
        sub_18001d360(arg1, GetDesktopWindow());
        return 1;
    }
    
    if (arg2 == 0x111)
    {
        uint32_t rdx_1 = arg3;
        
        if (rdx_1 == 1)
        {
            data_180030034 = SendDlgItemMessageW(arg1, 0x7d3, 0xf2, 0, 0);
            EndDialog(arg1, 1);
            return 1;
        }
        
        if (rdx_1 == 2)
        {
            EndDialog(arg1, 0);
            return 1;
        }
    }
    
    return 0;
}

int64_t sub_180003a30() __pure
{
    return &data_180030958;
}

int64_t sub_180003a40(char* arg1, char* arg2, int64_t arg3)
{
    arg_10 = arg2;
    _ArgList = arg3;
    int64_t r9;
    arg_20 = r9;
    return __stdio_common_vsscanf(data_180030958, arg1, -1, arg2, nullptr, &_ArgList);
}

int64_t sub_180003a90(void* arg1, int64_t arg2)
{
    int16_t* rax = (arg1 + 0xc);
    
    if (arg2 != rax)
    {
        char* r8_1 = &rax[0x104];
        char* rdx_1 = ((arg2 + 0x208) - r8_1);
        char i;
        
        do
        {
            i = *r8_1;
            *(rdx_1 + r8_1) = i;
            r8_1 = &r8_1[1];
        } while (i != 0);
        int16_t* rdx_3 = (arg2 - rax);
        int16_t i_1;
        
        do
        {
            i_1 = *rax;
            *(rdx_3 + rax) = i_1;
            rax = &rax[1];
        } while (i_1 != 0);
    }
    
    return arg2;
}

int64_t sub_180003af0(int32_t* arg1)
{
    int64_t result = sub_180001690(arg1);
    int64_t rcx = *(arg1 + 0x20);
    
    if (rcx != 0)
    {
        result = sub_18002367c(rcx);
        *(arg1 + 0x20) = 0;
    }
    
    arg1[6] = 0;
    int64_t rcx_1 = *(arg1 + 0x20);
    
    if (rcx_1 != 0)
    {
        result = sub_18002367c(rcx_1);
        *(arg1 + 0x20) = 0;
    }
    
    arg1[6] = 0;
    return result;
}

int64_t sub_180003b40(int64_t* arg1, int64_t arg2, uint32_t arg3)
{
    int64_t r10 = *arg1;
    
    if ((r10 != 0 && arg2 != 0))
    {
        uint64_t rcx = arg1[1];
        
        if ((rcx + arg3) <= *(arg1 + 0xc))
        {
            memcpy(arg2, (r10 + rcx), arg3);
            arg1[1] += arg3;
            return 1;
        }
    }
    
    return 0;
}

void sub_180003ba0(int64_t* arg1)
{
    int64_t rcx = *arg1;
    
    if (rcx == 0)
    {
        arg1[1] = 0;
        return;
    }
    
    sub_18002367c(rcx);
    *arg1 = 0;
    arg1[1] = 0;
}

void sub_180003be0(int64_t* arg1)
{
    arg1[3] = 0;
    int64_t rcx = *arg1;
    
    if (rcx != 0)
    {
        sub_18002367c(rcx);
        *arg1 = 0;
    }
    
    int64_t rcx_1 = *arg1;
    arg1[1] = 0;
    
    if (rcx_1 != 0)
    {
        sub_18002367c(rcx_1);
        *arg1 = 0;
    }
    
    arg1[1] = 0;
}

void sub_180003c30(int64_t* arg1)
{
    int64_t rcx = *arg1;
    
    if (rcx != 0)
    {
        sub_18002367c(rcx);
        *arg1 = 0;
    }
    
    int64_t rcx_1 = *arg1;
    arg1[1] = 0;
    
    if (rcx_1 != 0)
    {
        sub_18002367c(rcx_1);
        *arg1 = 0;
    }
    
    arg1[1] = 0;
}

uint64_t sub_180003c80(void* arg1, int512_t arg2 @ zmm1)
{
    int64_t var_338 = -2;
    void var_3a8;
    int64_t rax_1 = (__security_cookie ^ &var_3a8);
    void var_328;
    int16_t* rax_2 = sub_180003a90(arg1, &var_328);
    void* rdx_1 = (&data_18003074c - rax_2);
    int16_t i;
    
    do
    {
        i = *rax_2;
        *(rdx_1 + rax_2) = i;
        rax_2 = &rax_2[1];
    } while (i != 0);
    int64_t s_4 = 0;
    int64_t s_5 = 0;
    int64_t s_1;
    __builtin_memset(&s_1, 0, 0x14);
    wchar16* rax_3 = sub_180003a90(arg1, &var_328);
    int32_t rax_4;
    
    if (rax_3 != 0)
    {
        rax_4 = sub_1800067d0(&s_1, rax_3);
        s_5 = s_1;
    }
    else
        rax_4 = 0;
    
    int32_t rdi_1;
    
    if (rax_4 == 0)
    {
        int64_t s;
        __builtin_memset(&s, 0, 0x14);
        rdi_1 = sub_180003e10(&s, arg1, sub_180003a90(arg1, &var_328));
        int64_t s_3 = s;
        
        if (s_3 != 0)
        {
            sub_18002367c(s_3);
            s_3 = 0;
            s = 0;
        }
        
        int64_t var_380_1 = 0;
        
        if (s_3 != 0)
        {
            sub_18002367c(s_3);
            s = 0;
        }
        
        int64_t var_380_2 = 0;
    }
    else
    {
        int64_t s_2;
        __builtin_memset(&s_2, 0, 0x14);
        int64_t var_340_1 = 0;
        wchar16* rax_5 = sub_180003a90(arg1, &var_328);
        
        if (rax_5 != 0)
        {
            rdi_1 = sub_18001df30(&s_2, arg1, rax_5, arg2);
            s_4 = s_2;
        }
        else
            rdi_1 = 0;
        
        if (s_4 != 0)
            sub_18002367c(s_4);
    }
    
    if (s_5 != 0)
        sub_18002367c(s_5);
    
    __security_check_cookie((rax_1 ^ &var_3a8));
    return rdi_1;
}

uint64_t sub_180003e10(int64_t* arg1, int64_t arg2, wchar16* arg3)
{
    if (arg3 == 0)
        return 0;
    
    int64_t rcx = *arg1;
    
    if (rcx != 0)
    {
        sub_18002367c(rcx);
        *arg1 = 0;
    }
    
    arg1[1] = 0;
    FILE* _Stream = _wfopen(arg3, &data_180028734);
    
    if (_Stream != 0)
    {
        fseek(_Stream, 0, 2);
        int32_t rax_1 = ftell(_Stream);
        *(arg1 + 0xc) = rax_1;
        FILE* _Stream_1;
        
        if (rax_1 == 0)
            _Stream_1 = _Stream;
        else
        {
            int64_t rax_2 = j_operator new(rax_1);
            *arg1 = rax_2;
            _Stream_1 = _Stream;
            
            if (rax_2 != 0)
            {
                fseek(_Stream_1, 0, 0);
                int32_t rbx_1 = *(arg1 + 0xc);
                
                if (fread(*arg1, 1, rbx_1, _Stream) == rbx_1)
                {
                    fclose(_Stream);
                    int32_t rax_4 = sub_180003f40(arg1, arg2, arg3);
                    sub_180003ba0(arg1);
                    
                    if (((rax_4 & 0xfffffffc) == 0 && rax_4 != 1))
                        return rax_4;
                    
                    return 1;
                }
                
                sub_180003ba0(arg1);
                _Stream_1 = _Stream;
            }
        }
        
        fclose(_Stream_1);
    }
    
    return 0;
}

uint64_t sub_180003f40(int64_t* arg1, int64_t arg2, int64_t arg3)
{
    int64_t var_768 = -2;
    void var_808;
    int64_t rax_1 = (__security_cookie ^ &var_808);
    uint64_t result;
    
    if ((arg2 == 0 || arg3 == 0))
    {
    labelid_b:
        result = 0;
    }
    else
    {
        int64_t rdi_1 = 0;
        int64_t s;
        __builtin_memset(&s, 0, 0x1c);
        void* r10_1 = *arg1;
        
        if (r10_1 == 0)
        {
        labelid_b:
            result = 0;
        }
        else
        {
            int32_t r11_2 = (arg1[1] + 4);
            int32_t r8 = *(arg1 + 0xc);
            
            if (r11_2 > r8)
            {
            labelid_b:
                result = 0;
            }
            else
            {
                arg1[1] = r11_2;
                int32_t r9_1 = *((r11_2 - 4) + r10_1);
                int32_t var_7d0 = r9_1;
                int32_t rsi_1 = arg1[2];
                
                if (rsi_1 != 0)
                {
                    r9_1 = ((((r9_1 >> 0x18) | ((r9_1 >> 8) & 0xff00)) | ((r9_1 & 0xff00) << 8)) | (r9_1 << 0x18));
                    var_7d0 = r9_1;
                }
                
                if ((r11_2 + 2) > r8)
                {
                labelid_b:
                    result = 0;
                }
                else
                {
                    arg1[1] += 2;
                    int32_t rdx_2 = arg1[1];
                    uint16_t r11_3 = *((rdx_2 - 2) + r10_1);
                    s = r11_3;
                    
                    if (rsi_1 != 0)
                    {
                        r11_3 = ((r11_3 >> 8) | (r11_3 << 8));
                        s = r11_3;
                    }
                    
                    if ((rdx_2 + 2) > r8)
                    {
                    labelid_b:
                        result = 0;
                    }
                    else
                    {
                        arg1[1] += 2;
                        uint16_t rdx_3 = *((arg1[1] - 2) + r10_1);
                        *s[2] = rdx_3;
                        
                        if (rsi_1 != 0)
                            *s[2] = ((rdx_3 >> 8) | (rdx_3 << 8));
                        
                        int32_t var_7d4;
                        int64_t var_7bc;
                        void _Source;
                        void var_550;
                        
                        if (r9_1 == 0x46424347)
                        {
                            arg1[1] = 4;
                            
                            if (r8 < 8)
                            {
                            labelid_b:
                                result = 0;
                            }
                            else
                            {
                                arg1[1] = 8;
                                int32_t r9_5 = *(r10_1 + 4);
                                
                                if (rsi_1 != 0)
                                    r9_5 = ((((r9_5 >> 0x18) | ((r9_5 >> 8) & 0xff00)) | ((r9_5 & 0xff00) << 8)) | (r9_5 << 0x18));
                                
                                int32_t rcx_6 = 0;
                                
                                if (r9_5 != 0)
                                {
                                    do
                                    {
                                        if ((arg1[1] + 4) > r8)
                                            goto label_180004f61_2;
                                        
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) > r8)
                                            goto label_180004f61_2;
                                        
                                        arg1[1] += 4;
                                        rcx_6 += 1;
                                    } while (rcx_6 < r9_5);
                                }
                                
                                int64_t var_7b0_1 = 0;
                                var_7d0 = 0;
                                void* s_1 = nullptr;
                                __builtin_memset(&*s[4], 0, 0x14);
                                
                                if ((r9_5 - 1) <= 0)
                                    goto label_180004149;
                                
                                if (sub_180001760(&var_7d0, (r9_5 - 1)) == 0)
                                {
                                label_180004505:
                                    sub_180001690(&var_7d0);
                                    
                                    if (var_7b0_1 != 0)
                                        sub_18002367c(var_7b0_1);
                                    
                                labelid_b:
                                    result = 0;
                                }
                                else
                                {
                                    s_1 = s;
                                label_180004149:
                                    int32_t var_7d8_1 = 0;
                                    int64_t i_14 = 0;
                                    
                                    if ((r9_5 - 1) > 0)
                                    {
                                        void* var_798_1 = (s_1 + 0x10);
                                        int64_t s_2 = s;
                                        int64_t i;
                                        
                                        do
                                        {
                                            int64_t r9_9 = *arg1;
                                            
                                            if (r9_9 == 0)
                                                break;
                                            
                                            int32_t r8_1 = *(arg1 + 0xc);
                                            
                                            if ((arg1[1] + 4) > r8_1)
                                                break;
                                            
                                            arg1[1] += 4;
                                            int32_t r10_2 = arg1[1];
                                            int32_t r11_4 = *((r10_2 - 4) + r9_9);
                                            int32_t rdx_8 = arg1[2];
                                            
                                            if (rdx_8 != 0)
                                            {
                                                r11_4 = ((((r11_4 >> 0x18) | ((r11_4 >> 8) & 0xff00)) | ((r11_4 & 0xff00) << 8)) | (r11_4 << 0x18));
                                                rdx_8 = arg1[2];
                                            }
                                            
                                            if ((r10_2 + 4) > r8_1)
                                                break;
                                            
                                            arg1[1] += 4;
                                            int32_t rsi_3 = arg1[1];
                                            int32_t r10_3 = *((rsi_3 - 4) + r9_9);
                                            var_7d4 = r10_3;
                                            
                                            if (rdx_8 != 0)
                                            {
                                                var_7d4 = ((((r10_3 >> 0x18) | ((r10_3 >> 8) & 0xff00)) | ((r10_3 & 0xff00) << 8)) | (r10_3 << 0x18));
                                                rdx_8 = arg1[2];
                                            }
                                            
                                            if ((rsi_3 + 4) > r8_1)
                                                break;
                                            
                                            arg1[1] += 4;
                                            int32_t r10_8 = arg1[1];
                                            uint32_t rsi_4 = *((r10_8 - 4) + r9_9);
                                            
                                            if (rdx_8 != 0)
                                            {
                                                rsi_4 = ((((rsi_4 >> 0x18) | ((rsi_4 >> 8) & 0xff00)) | ((rsi_4 & 0xff00) << 8)) | (rsi_4 << 0x18));
                                                rdx_8 = arg1[2];
                                            }
                                            
                                            if ((r10_8 + 4) > r8_1)
                                                break;
                                            
                                            arg1[1] += 4;
                                            int32_t r10_9 = *((arg1[1] - 4) + r9_9);
                                            
                                            if (rdx_8 != 0)
                                                r10_9 = ((((r10_9 >> 0x18) | ((r10_9 >> 8) & 0xff00)) | ((r10_9 & 0xff00) << 8)) | (r10_9 << 0x18));
                                            
                                            if ((arg1[1] + 4) > r8_1)
                                                break;
                                            
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > r8_1)
                                                break;
                                            
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > r8_1)
                                                break;
                                            
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > r8_1)
                                                break;
                                            
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > r8_1)
                                                break;
                                            
                                            arg1[1] += 4;
                                            
                                            if (r11_4 != 0x41646170)
                                                break;
                                            
                                            if (var_7d4 != 0x4c7a3420)
                                                break;
                                            
                                            void* rax_53 = var_798_1;
                                            *(rax_53 - 0x10) = rsi_4;
                                            *(rax_53 - 0xc) = r10_9;
                                            
                                            if (rsi_4 != 0)
                                            {
                                                if (sub_180001620((s_2 + (var_7d8_1 * 0x18)), rsi_4) == 0)
                                                    break;
                                                
                                                if (sub_180003b40(arg1, *var_798_1, rsi_4) == 0)
                                                    break;
                                                
                                                rax_53 = var_798_1;
                                            }
                                            
                                            var_7d8_1 += 1;
                                            i = (i_14 + 1);
                                            i_14 = i;
                                            var_798_1 = (rax_53 + 0x18);
                                        } while (i < (r9_5 - 1));
                                        rdi_1 = 0;
                                        s_1 = s;
                                    }
                                    
                                    int64_t rax_58;
                                    
                                    if (s_1 != 0)
                                    {
                                        if (var_7b0_1 != 0)
                                        {
                                            sub_18002367c(var_7b0_1);
                                            var_7b0_1 = 0;
                                        }
                                        
                                        *var_7bc[4] = 0;
                                        var_7d4 = 0;
                                        rax_58 = sub_180001810(&var_7d0, &var_7d4);
                                    }
                                    
                                    if ((s_1 == 0 || rax_58 == 0))
                                    {
                                        sub_180001690(&var_7d0);
                                        
                                        if (var_7b0_1 != 0)
                                        {
                                            sub_18002367c(var_7b0_1);
                                            var_7b0_1 = 0;
                                        }
                                        
                                        *var_7bc[4] = 0;
                                        int16_t i_1;
                                        
                                        do
                                        {
                                            i_1 = *(rdi_1 + u"Unknown file header: GCBF");
                                            *(&_Source + rdi_1) = i_1;
                                            rdi_1 += 2;
                                        } while (i_1 != 0);
                                        wcstombs(&var_550, u"Unknown file header: GCBF", 0x104);
                                        
                                        if ((arg2 + 0xf48) != &_Source)
                                        {
                                            void* rcx_36 = &var_550;
                                            char i_2;
                                            
                                            do
                                            {
                                                i_2 = *rcx_36;
                                                *((rcx_36 + ((arg2 + 0xf48) - &var_550)) + 0x208) = i_2;
                                                rcx_36 += 1;
                                            } while (i_2 != 0);
                                            void* rcx_37 = &_Source;
                                            int16_t i_3;
                                            
                                            do
                                            {
                                                i_3 = *rcx_37;
                                                *(rcx_37 + ((arg2 + 0xf48) - &_Source)) = i_3;
                                                rcx_37 += 2;
                                            } while (i_3 != 0);
                                        }
                                        
                                        goto label_180004505;
                                    }
                                    
                                    int64_t var_7b0_2 = rax_58;
                                    int32_t rcx_27 = var_7d4;
                                    *var_7bc[4] = rcx_27;
                                    int32_t result_1;
                                    
                                    if (rcx_27 != 0)
                                    {
                                        *arg1 = rax_58;
                                        *(arg1 + 0xc) = rcx_27;
                                        arg1[1] = 0;
                                        result_1 = sub_180003f40(arg1, arg2, arg3);
                                        *arg1 = 0;
                                        arg1[1] = 0;
                                    }
                                    else
                                        result_1 = 0;
                                    
                                    sub_180001690(&var_7d0);
                                    
                                    if (var_7b0_2 != 0)
                                    {
                                        sub_18002367c(var_7b0_2);
                                        var_7b0_2 = 0;
                                    }
                                    
                                    *var_7bc[4] = 0;
                                    sub_180001690(&var_7d0);
                                    
                                    if (var_7b0_2 != 0)
                                        sub_18002367c(var_7b0_2);
                                    
                                    result = result_1;
                                }
                            }
                        }
                        else if (r9_1 == 0x53455242)
                        {
                            int32_t rdx_31;
                            rdx_31 = r11_3 != 0xfffe;
                            var_7d4 = rdx_31;
                            arg1[2] = rdx_31;
                            
                            if ((arg1[1] + 4) > r8)
                            {
                            labelid_b:
                                result = 0;
                            }
                            else
                            {
                                arg1[1] += 4;
                                int32_t r11_8 = arg1[1];
                                int32_t r9_10 = *((r11_8 - 4) + r10_1);
                                int32_t var_7d8_2 = r9_10;
                                *s[4] = r9_10;
                                
                                if (rdx_31 != 0)
                                {
                                    r9_10 = ((((r9_10 & 0xff0000) | (r9_10 >> 0x10)) >> 8) | (((r9_10 << 0x10) | (r9_10 & 0xff00)) << 8));
                                    var_7d8_2 = r9_10;
                                    *s[4] = r9_10;
                                }
                                
                                if ((r11_8 + 4) > r8)
                                {
                                labelid_b:
                                    result = 0;
                                }
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t rsi_8 = arg1[1];
                                    int32_t r11_9 = *((rsi_8 - 4) + r10_1);
                                    int64_t var_7c4;
                                    var_7c4 = r11_9;
                                    
                                    if (rdx_31 != 0)
                                        var_7c4 = ((((r11_9 & 0xff0000) | (r11_9 >> 0x10)) >> 8) | (((r11_9 << 0x10) | (r11_9 & 0xff00)) << 8));
                                    
                                    if ((rsi_8 + 4) > r8)
                                    {
                                    labelid_b:
                                        result = 0;
                                    }
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t rsi_9 = arg1[1];
                                        int32_t r11_11 = *((rsi_9 - 4) + r10_1);
                                        *var_7c4[4] = r11_11;
                                        
                                        if (rdx_31 != 0)
                                            *var_7c4[4] = ((((r11_11 & 0xff0000) | (r11_11 >> 0x10)) >> 8) | (((r11_11 << 0x10) | (r11_11 & 0xff00)) << 8));
                                        
                                        if ((rsi_9 + 4) > r8)
                                        {
                                        labelid_b:
                                            result = 0;
                                        }
                                        else
                                        {
                                            arg1[1] += 4;
                                            int32_t rsi_10 = arg1[1];
                                            int32_t r11_13 = *((rsi_10 - 4) + r10_1);
                                            var_7bc = r11_13;
                                            
                                            if (rdx_31 != 0)
                                                var_7bc = ((((r11_13 & 0xff0000) | (r11_13 >> 0x10)) >> 8) | (((r11_13 << 0x10) | (r11_13 & 0xff00)) << 8));
                                            
                                            int32_t rsi_11;
                                            
                                            if (r9_10 > 0x20)
                                            {
                                                if (r9_10 < 0x40)
                                                {
                                                    if ((rsi_10 + 4) > r8)
                                                    {
                                                    labelid_b:
                                                        result = 0;
                                                    }
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r11_20 = arg1[1];
                                                        int32_t r9_18 = *((r11_20 - 4) + r10_1);
                                                        var_7bc = r9_18;
                                                        
                                                        if (rdx_31 != 0)
                                                            var_7bc = ((((r9_18 & 0xff0000) | (r9_18 >> 0x10)) >> 8) | (((r9_18 << 0x10) | (r9_18 & 0xff00)) << 8));
                                                        
                                                        if ((r11_20 + 4) > r8)
                                                        {
                                                        labelid_b:
                                                            result = 0;
                                                        }
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r11_21 = arg1[1];
                                                            int32_t r9_20 = *((r11_21 - 4) + r10_1);
                                                            *var_7bc[4] = r9_20;
                                                            
                                                            if (rdx_31 != 0)
                                                                *var_7bc[4] = ((((r9_20 & 0xff0000) | (r9_20 >> 0x10)) >> 8) | (((r9_20 << 0x10) | (r9_20 & 0xff00)) << 8));
                                                            
                                                            if ((r11_21 + 4) <= r8)
                                                                goto label_1800049fa;
                                                            
                                                        labelid_b:
                                                            result = 0;
                                                        }
                                                    }
                                                }
                                                else if ((rsi_10 + 4) > r8)
                                                {
                                                labelid_b:
                                                    result = 0;
                                                }
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r11_16 = arg1[1];
                                                    int32_t r9_15 = *((r11_16 - 4) + r10_1);
                                                    
                                                    if (rdx_31 != 0)
                                                        r9_15 = _bswap(r9_15);
                                                    
                                                    if ((r11_16 + 4) > r8)
                                                    {
                                                    labelid_b:
                                                        result = 0;
                                                    }
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r11_17 = arg1[1];
                                                        int32_t rax_105 = *((r11_17 - 4) + r10_1);
                                                        
                                                        if (rdx_31 != 0)
                                                            rax_105 = _bswap(rax_105);
                                                        
                                                        if (rdx_31 != 0)
                                                            r9_15 = rax_105;
                                                        
                                                        var_7bc = r9_15;
                                                        
                                                        if ((r11_17 + 4) > r8)
                                                        {
                                                        labelid_b:
                                                            result = 0;
                                                        }
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r11_18 = arg1[1];
                                                            int32_t r9_16 = *((r11_18 - 4) + r10_1);
                                                            
                                                            if (rdx_31 != 0)
                                                                r9_16 = _bswap(r9_16);
                                                            
                                                            if ((r11_18 + 4) > r8)
                                                            {
                                                            labelid_b:
                                                                result = 0;
                                                            }
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r11_19 = arg1[1];
                                                                int32_t rax_110 = *((r11_19 - 4) + r10_1);
                                                                
                                                                if (rdx_31 != 0)
                                                                    rax_110 = _bswap(rax_110);
                                                                
                                                                if (rdx_31 != 0)
                                                                    r9_16 = rax_110;
                                                                
                                                                *var_7bc[4] = r9_16;
                                                                
                                                                if ((r11_19 + 4) > r8)
                                                                {
                                                                labelid_b:
                                                                    result = 0;
                                                                }
                                                                else
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t r9_17 = arg1[1];
                                                                    rsi_11 = *((r9_17 - 4) + r10_1);
                                                                    
                                                                    if (rdx_31 != 0)
                                                                        rsi_11 = _bswap(rsi_11);
                                                                    
                                                                    if ((r9_17 + 4) <= r8)
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t rax_116 = *((arg1[1] - 4) + r10_1);
                                                                        
                                                                        if (rdx_31 != 0)
                                                                            rax_116 = _bswap(rax_116);
                                                                        
                                                                        if (rdx_31 != 0)
                                                                            rsi_11 = rax_116;
                                                                        
                                                                        goto label_180004a36;
                                                                    }
                                                                    
                                                                labelid_b:
                                                                    result = 0;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else if ((rsi_10 + 4) > r8)
                                            {
                                            labelid_b:
                                                result = 0;
                                            }
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r11_15 = arg1[1];
                                                int32_t r9_13 = *((r11_15 - 4) + r10_1);
                                                *var_7bc[4] = r9_13;
                                                
                                                if (rdx_31 != 0)
                                                    *var_7bc[4] = ((((r9_13 & 0xff0000) | (r9_13 >> 0x10)) >> 8) | (((r9_13 << 0x10) | (r9_13 & 0xff00)) << 8));
                                                
                                                if ((r11_15 + 4) <= r8)
                                                {
                                                label_1800049fa:
                                                    arg1[1] += 4;
                                                    rsi_11 = *((arg1[1] - 4) + r10_1);
                                                    int32_t var_7b4_1 = rsi_11;
                                                    
                                                    if (rdx_31 == 0)
                                                        goto label_180004a49;
                                                    
                                                    rsi_11 = ((((rsi_11 & 0xff0000) | (rsi_11 >> 0x10)) >> 8) | (((rsi_11 << 0x10) | (rsi_11 & 0xff00)) << 8));
                                                label_180004a36:
                                                    int32_t var_7b4_2 = rsi_11;
                                                label_180004a49:
                                                    void var_138;
                                                    memset(&var_138, 0, 0x104);
                                                    int32_t rax_141 = arg1[1];
                                                    int32_t var_7a8 = rax_141;
                                                    
                                                    if (rsi_11 == 0)
                                                        goto label_180004af1;
                                                    
                                                    arg1[1] = rsi_11;
                                                    int32_t r10_13;
                                                    
                                                    if (var_7d8_2 != 0x40)
                                                    {
                                                        if ((rsi_11 + 4) <= *(arg1 + 0xc))
                                                        {
                                                            arg1[1] = (rsi_11 + 4);
                                                            r10_13 = *(rsi_11 + *arg1);
                                                            
                                                            if (var_7d4 != 0)
                                                                r10_13 = _bswap(r10_13);
                                                            
                                                            goto label_180004ae8;
                                                        }
                                                        
                                                    labelid_b:
                                                        result = 0;
                                                    }
                                                    else
                                                    {
                                                        int32_t rdx_32 = *(arg1 + 0xc);
                                                        
                                                        if ((rsi_11 + 4) > rdx_32)
                                                        {
                                                        labelid_b:
                                                            result = 0;
                                                        }
                                                        else
                                                        {
                                                            arg1[1] = (rsi_11 + 4);
                                                            int64_t r9_22 = *arg1;
                                                            r10_13 = *(rsi_11 + r9_22);
                                                            int32_t r8_10 = var_7d4;
                                                            
                                                            if (r8_10 != 0)
                                                                r10_13 = _bswap(r10_13);
                                                            
                                                            if ((rsi_11 + 8) > rdx_32)
                                                            {
                                                            labelid_b:
                                                                result = 0;
                                                            }
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rax_146 = *((arg1[1] - 4) + r9_22);
                                                                
                                                                if (r8_10 != 0)
                                                                    rax_146 = _bswap(rax_146);
                                                                
                                                                if (r8_10 != 0)
                                                                    r10_13 = rax_146;
                                                                
                                                            label_180004ae8:
                                                                sub_180005050(arg1, r10_13, &var_138);
                                                                rax_141 = var_7a8;
                                                            label_180004af1:
                                                                arg1[1] = rax_141;
                                                                int32_t var_788 = 0;
                                                                int32_t var_78c_1 = 0;
                                                                int32_t var_790 = 0;
                                                                var_7a8 = 0;
                                                                int32_t* var_7e0_1 = &var_7a8;
                                                                int32_t* var_7e8_1 = &var_790;
                                                                int32_t rax_149 = sub_180003a40(&var_138, "%d,%d,%d,%d", &var_788);
                                                                int32_t rsi_15 = data_1800306f0;
                                                                
                                                                if (rax_149 == 4)
                                                                    rsi_15 = var_7a8;
                                                                
                                                                data_1800306f0 = rsi_15;
                                                                
                                                                if ((rsi_15 == 0x101 || (rsi_15 - 0x143) <= 1))
                                                                {
                                                                label_180004c99:
                                                                    int32_t rax_157;
                                                                    int32_t rbx_1;
                                                                    
                                                                    if (var_7d8_2 != 0x20)
                                                                    {
                                                                        if (var_7d8_2 == 0x2c)
                                                                        {
                                                                            uint64_t rsi_16 = (rsi_15 - 0x364);
                                                                            
                                                                            if ((rsi_16 <= 0x22 && (TEST_BITQ(0x402010001, rsi_16))))
                                                                            {
                                                                                rax_157 = sub_180010580(arg1, &var_7d0);
                                                                            label_180004e0b:
                                                                                rbx_1 = *s[4];
                                                                                goto label_180004e0f;
                                                                            }
                                                                            
                                                                        labelid_b:
                                                                            result = 0;
                                                                        }
                                                                        else if (var_7d8_2 == 0x3c)
                                                                        {
                                                                            if (((rsi_15 - 0x2fc) <= 0x10 && (TEST_BITD(0x12001, (rsi_15 - 0x2fc)))))
                                                                            {
                                                                                rax_157 = sub_180009990(arg1, &var_7d0);
                                                                                rbx_1 = var_7d8_2;
                                                                                goto label_180004e0f;
                                                                            }
                                                                            
                                                                            if (rsi_15 == 0x30b)
                                                                            {
                                                                                rax_157 = sub_180009990(arg1, &var_7d0);
                                                                                rbx_1 = var_7d8_2;
                                                                                goto label_180004e0f;
                                                                            }
                                                                            
                                                                            uint64_t rax_159 = (rsi_15 - 0x32b);
                                                                            
                                                                            if ((rax_159 <= 0x30 && (TEST_BITQ(0x1000200000001, rax_159))))
                                                                            {
                                                                                rax_157 = sub_18000c1b0(arg1, &var_7d0);
                                                                                goto label_180004e0b;
                                                                            }
                                                                            
                                                                            if (rsi_15 == 0x362)
                                                                            {
                                                                                rax_157 = sub_18000fbf0(arg1, &var_7d0, arg3);
                                                                                goto label_180004e0b;
                                                                            }
                                                                            
                                                                        labelid_b:
                                                                            result = 0;
                                                                        }
                                                                        else if (var_7d8_2 != 0x40)
                                                                        {
                                                                            if ((var_7d8_2 == 0x50 && (rsi_15 == 0x30b || rsi_15 == 0x362)))
                                                                            {
                                                                                rax_157 = sub_1800156b0(arg1, &var_7d0);
                                                                                goto label_180004e0b;
                                                                            }
                                                                            
                                                                        labelid_b:
                                                                            result = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            uint64_t rax_160 = (rsi_15 - 0x36d);
                                                                            
                                                                            if (((rax_160 <= 0x29 && (TEST_BITQ(0x20400000001, rax_160))) || ((rsi_15 - 0x3a2) <= 0x3c && (TEST_BITQ(0x1080481c01014011, (rsi_15 - 0x3a2))))))
                                                                            {
                                                                                rax_157 = sub_1800156b0(arg1, &var_7d0);
                                                                                goto label_180004e0b;
                                                                            }
                                                                            
                                                                        labelid_b:
                                                                            result = 0;
                                                                        }
                                                                    }
                                                                    else if (((rsi_15 - 0x143) <= 1 || rsi_15 == 0x101))
                                                                    {
                                                                        rax_157 = sub_180006f90(arg1, &var_7d0);
                                                                        rbx_1 = var_7d8_2;
                                                                    label_180004e0f:
                                                                        
                                                                        if (rax_157 == 0)
                                                                        {
                                                                        labelid_b:
                                                                            result = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            sub_1800068e0(&data_1800306f0);
                                                                            sub_180006b30(&data_1800306f0);
                                                                            
                                                                            if ((rbx_1 != 0x3c || data_1800306f0 != 0x35b))
                                                                            {
                                                                            label_180004f3a:
                                                                                int32_t rax_168 = (data_1800306f0 - 0x2fc);
                                                                                
                                                                                if ((rax_168 <= 0x10 && (TEST_BITD(0x1a001, rax_168))))
                                                                                    sub_180001960(&data_1800306f0);
                                                                            }
                                                                            else
                                                                            {
                                                                                void* rax_162 = data_180030720;
                                                                                
                                                                                if ((rax_162 != 0 && *(rax_162 + 0x10) == 0x2bf6))
                                                                                {
                                                                                    int32_t r10_14 = 0;
                                                                                    int32_t rcx_99 = data_180030718;
                                                                                    
                                                                                    if (rcx_99 > 0)
                                                                                    {
                                                                                        int32_t* r8_18 = 0x10;
                                                                                        
                                                                                        do
                                                                                        {
                                                                                            int32_t i_4 = 0;
                                                                                            
                                                                                            if (*(r8_18 + rax_162) > 0)
                                                                                            {
                                                                                                int64_t rdx_45 = 0;
                                                                                                
                                                                                                do
                                                                                                {
                                                                                                    int64_t rax_163 = *((r8_18 + rax_162) + 8);
                                                                                                    *((rax_163 + rdx_45) + 0x18) = (*((rax_163 + rdx_45) + 0x18) * 3f);
                                                                                                    int64_t rcx_100 = *((r8_18 + data_180030720) + 8);
                                                                                                    *((rcx_100 + rdx_45) + 0x20) = (*((rcx_100 + rdx_45) + 0x20) * 3f);
                                                                                                    int64_t rcx_101 = *((r8_18 + data_180030720) + 8);
                                                                                                    *((rcx_101 + rdx_45) + 0x1c) = (1f - *((rcx_101 + rdx_45) + 0x1c));
                                                                                                    int64_t rcx_102 = *((r8_18 + data_180030720) + 8);
                                                                                                    *((rcx_102 + rdx_45) + 0x24) = (1f - *((rcx_102 + rdx_45) + 0x24));
                                                                                                    i_4 += 1;
                                                                                                    rdx_45 += 0x4c;
                                                                                                    rax_162 = data_180030720;
                                                                                                } while (i_4 < *(r8_18 + rax_162));
                                                                                                
                                                                                                rcx_99 = data_180030718;
                                                                                            }
                                                                                            
                                                                                            r10_14 += 1;
                                                                                            r8_18 = &r8_18[0xbe];
                                                                                        } while (r10_14 < rcx_99);
                                                                                        
                                                                                        goto label_180004f3a;
                                                                                    }
                                                                                }
                                                                            }
                                                                            
                                                                            result = 1;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                    labelid_b:
                                                                        result = 0;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    uint64_t rax_151 = (rsi_15 - 0x35b);
                                                                    
                                                                    if ((rax_151 <= 0x3b && (TEST_BITQ(0x810080402040281, rax_151))))
                                                                        goto label_180004c99;
                                                                    
                                                                    uint64_t rax_152 = (rsi_15 - 0x2fc);
                                                                    
                                                                    if ((((rax_152 <= 0x2f && (TEST_BITQ(0x80000001a001, rax_152))) || rsi_15 == 0x34c) || ((rsi_15 - 0x3a2) <= 0x3c && (TEST_BITQ(0x1080481c01014011, (rsi_15 - 0x3a2))))))
                                                                        goto label_180004c99;
                                                                    
                                                                    memset(&_Source, 0, 0x208);
                                                                    sub_180002920(&_Source, u"BDAE file version not supported:…", rsi_15);
                                                                    void var_448;
                                                                    int16_t i_5;
                                                                    
                                                                    do
                                                                    {
                                                                        i_5 = *(&_Source + rdi_1);
                                                                        *(&var_448 + rdi_1) = i_5;
                                                                        rdi_1 += 2;
                                                                    } while (i_5 != 0);
                                                                    void var_240;
                                                                    wcstombs(&var_240, &_Source, 0x104);
                                                                    
                                                                    if ((arg2 + 0xf48) != &var_448)
                                                                    {
                                                                        void* rcx_90 = &var_240;
                                                                        char i_6;
                                                                        
                                                                        do
                                                                        {
                                                                            i_6 = *rcx_90;
                                                                            *((rcx_90 + ((arg2 + 0xf48) - &var_240)) + 0x208) = i_6;
                                                                            rcx_90 += 1;
                                                                        } while (i_6 != 0);
                                                                        void* rcx_91 = &var_448;
                                                                        int16_t i_7;
                                                                        
                                                                        do
                                                                        {
                                                                            i_7 = *rcx_91;
                                                                            *(rcx_91 + ((arg2 + 0xf48) - &var_448)) = i_7;
                                                                            rcx_91 += 2;
                                                                        } while (i_7 != 0);
                                                                    }
                                                                    
                                                                label_180004f61:
                                                                    result = 0;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                label_180004f61_1:
                                                    result = 0;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (r9_1 != 0x4034b50)
                            {
                                int16_t i_8;
                                
                                do
                                {
                                    i_8 = *(rdi_1 + u"BRES file header ID not found.");
                                    *(&_Source + rdi_1) = i_8;
                                    rdi_1 += 2;
                                } while (i_8 != 0);
                                wcstombs(&var_550, u"BRES file header ID not found.", 0x104);
                                
                                if ((arg2 + 0xf48) != &_Source)
                                {
                                    void* rcx_44 = &var_550;
                                    char i_9;
                                    
                                    do
                                    {
                                        i_9 = *rcx_44;
                                        *((rcx_44 + ((arg2 + 0xf48) - &var_550)) + 0x208) = i_9;
                                        rcx_44 += 1;
                                    } while (i_9 != 0);
                                    void* rcx_45 = &_Source;
                                    int16_t i_10;
                                    
                                    do
                                    {
                                        i_10 = *rcx_45;
                                        *(rcx_45 + ((arg2 + 0xf48) - &_Source)) = i_10;
                                        rcx_45 += 2;
                                    } while (i_10 != 0);
                                }
                            }
                            else
                            {
                                int16_t i_11;
                                
                                do
                                {
                                    i_11 = *(rdi_1 + u"BRES file header ID not found.\r…");
                                    *(&_Source + rdi_1) = i_11;
                                    rdi_1 += 2;
                                } while (i_11 != 0);
                                wcstombs(&var_550, u"BRES file header ID not found.\r…", 0x104);
                                
                                if ((arg2 + 0xf48) != &_Source)
                                {
                                    void* rcx_41 = &var_550;
                                    char i_12;
                                    
                                    do
                                    {
                                        i_12 = *rcx_41;
                                        *((rcx_41 + ((arg2 + 0xf48) - &var_550)) + 0x208) = i_12;
                                        rcx_41 += 1;
                                    } while (i_12 != 0);
                                    void* rcx_42 = &_Source;
                                    int16_t i_13;
                                    
                                    do
                                    {
                                        i_13 = *rcx_42;
                                        *(rcx_42 + ((arg2 + 0xf48) - &_Source)) = i_13;
                                        rcx_42 += 2;
                                    } while (i_13 != 0);
                                }
                            }
                            
                        label_180004f61_2:
                            result = 0;
                        }
                    }
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_808));
    return result;
}

int64_t sub_180004f90(int64_t* arg1, void* arg2)
{
    int64_t rdx = *arg1;
    
    if (rdx != 0)
    {
        int32_t rax_2 = (arg1[1] + 4);
        
        if (rax_2 <= *(arg1 + 0xc))
        {
            arg1[1] = rax_2;
            int32_t r11_1 = *((rax_2 - 4) + rdx);
            
            if (arg1[2] != 0)
                r11_1 = _bswap(r11_1);
            
            int32_t rdx_1 = 0;
            
            if (r11_1 != 0)
            {
                char* r9_1 = nullptr;
                
                do
                {
                    int64_t r10_1 = *arg1;
                    
                    if (r10_1 == 0)
                        return 0;
                    
                    if ((arg1[1] + 1) > *(arg1 + 0xc))
                        return 0;
                    
                    arg1[1] += 1;
                    char rax_8 = *((arg1[1] - 1) + r10_1);
                    
                    if (r9_1 < 0x104)
                        *(r9_1 + arg2) = rax_8;
                    
                    if (rax_8 == 0)
                        break;
                    
                    rdx_1 += 1;
                    r9_1 = &r9_1[1];
                } while (rdx_1 < r11_1);
            }
            
            if ((r11_1 == 0 || rdx_1 < 0x104))
                *(rdx_1 + arg2) = 0;
            else
                *(arg2 + 0x103) = 0;
            
            int32_t rax_10 = arg1[1];
            int32_t rcx_1 = (rax_10 & 0xfffffffc);
            
            if ((rax_10 & 3) > 0)
                rcx_1 += 4;
            
            arg1[1] = rcx_1;
            return 1;
        }
    }
    
    return 0;
}

int64_t sub_180005050(int64_t* arg1, int32_t arg2, void* arg3)
{
    if (arg3 == 0)
        return 0;
    
    if (arg2 <= 0x64)
        return 1;
    
    int32_t r8 = 0;
    int32_t rbx = arg1[1];
    arg1[1] = arg2;
    char* rdx = nullptr;
    char i;
    
    do
    {
        int64_t r10_1 = *arg1;
        
        if ((r10_1 == 0 || (arg1[1] + 1) > *(arg1 + 0xc)))
            return 0;
        
        arg1[1] += 1;
        i = *((arg1[1] - 1) + r10_1);
        
        if (rdx < 0x104)
            *(rdx + arg3) = i;
        
        r8 += 1;
        rdx = &rdx[1];
    } while (i != 0);
    
    if (r8 < 0x104)
    {
        *(r8 + arg3) = 0;
        arg1[1] = rbx;
        return 1;
    }
    
    *(arg3 + 0x103) = 0;
    arg1[1] = rbx;
    return 1;
}

int64_t sub_180005100(int64_t* arg1, void* arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t* arg6)
{
    if ((arg3 == 0 || arg5 <= 0))
        return 1;
    
    arg1[1] = arg4;
    
    if (arg2 != 0)
    {
        int32_t result = sub_180001ed0(arg2, arg3);
        
        if (result == 0)
            return result;
    }
    
    int64_t r9 = *arg6;
    int32_t r13 = -1;
    int32_t r10 = -1;
    int32_t r11 = -1;
    int32_t r15 = 0;
    int32_t var_124 = 0xffffffff;
    int32_t var_120 = 0xffffffff;
    int32_t rsi = -1;
    int32_t var_104 = 0;
    int32_t r14 = -1;
    int32_t var_100 = 0;
    
    if (r9 > 1)
    {
        void* rax_2 = &arg6[7];
        int64_t i_2 = (r9 - 1);
        int64_t i;
        
        do
        {
            if (*(rax_2 + 8) == 2)
            {
                int32_t rcx_1 = *rax_2;
                
                if (rcx_1 >= 0xc)
                {
                    if (r10 == 0xffffffff)
                    {
                        rsi = *(rax_2 + 4);
                        r10 = rcx_1;
                        var_104 = *(rax_2 - 4);
                    }
                    else if (r11 == 0xffffffff)
                    {
                        r14 = *(rax_2 + 4);
                        r11 = rcx_1;
                        var_100 = *(rax_2 - 4);
                    }
                }
            }
            
            rax_2 += 0x10;
            i = i_2;
            i_2 -= 1;
        } while (i != 1);
        var_120 = r11;
        var_124 = r10;
    }
    
    int32_t var_108 = 0;
    int32_t rdx_1 = -1;
    int32_t var_11c = 0xffffffff;
    int32_t r10_1 = -1;
    int32_t var_118 = 0xffffffff;
    int32_t r12 = -1;
    int32_t var_c8 = 0;
    int32_t r11_1 = -1;
    int32_t var_c4 = 0;
    int32_t rdi = -1;
    
    if (r9 > 1)
    {
        int64_t i_3 = (r9 - 1);
        int32_t r9_1 = -1;
        void* rax_3 = &arg6[7];
        int64_t i_1;
        
        do
        {
            if (*(rax_3 + 8) == 3)
            {
                int32_t rcx_4 = *rax_3;
                
                if (rcx_4 >= 0xc)
                {
                    if (r13 == 0xffffffff)
                    {
                        r10_1 = *(rax_3 + 4);
                        r13 = rcx_4;
                        var_108 = *(rax_3 - 4);
                    }
                    else if (r12 == 0xffffffff)
                    {
                        r11_1 = *(rax_3 + 4);
                        r12 = rcx_4;
                        var_c8 = *(rax_3 - 4);
                    }
                    else if (r9_1 == 0xffffffff)
                    {
                        rdi = *(rax_3 + 4);
                        var_11c = rcx_4;
                        r9_1 = var_11c;
                        var_c4 = *(rax_3 - 4);
                    }
                }
            }
            
            rax_3 += 0x10;
            i_1 = i_3;
            i_3 -= 1;
        } while (i_1 != 1);
        rdx_1 = var_11c;
        var_118 = r12;
    }
    
    int32_t rcx_8 = arg1[1];
    int32_t rax_5 = (data_1800306f0 - 0x3d0);
    int32_t var_128 = rcx_8;
    int32_t rax_6;
    
    if (rax_5 <= 0xe)
        rax_6 = 1;
    
    if ((rax_5 > 0xe || !((TEST_BITD(0x4201, rax_5)))))
        rax_6 = 0;
    
    if (arg3 > 0)
    {
        int64_t r9_2 = arg6[4];
        int64_t r12_1 = rax_6;
        int32_t r11_2 = var_124;
        int64_t r8_1 = r10_1;
        int64_t r10_2 = rsi;
        int64_t var_b0_1 = 0;
        int64_t var_d0_1 = r9_2;
        int64_t var_110_1 = r8_1;
        int64_t var_d8_1 = r10_2;
        int64_t r14_1 = r14;
        
        do
        {
            int32_t rax_129 = arg5;
            int32_t rsi_1 = arg1[1];
            uint128_t zmm0;
            uint128_t zmm1;
            
            if (rax_129 == 8)
            {
                int64_t var_c0 = 0;
                int32_t var_b8_1 = 0;
                int64_t var_98 = 0;
                int32_t var_90_1 = 0;
                int64_t var_88 = 0;
                int32_t var_80_1 = 0;
                int64_t var_78 = 0;
                int32_t var_70_1 = 0;
                int64_t var_f8 = 0;
                int64_t var_f0 = 0;
                
                if (r9_2 == 6)
                {
                    if (sub_18001d5c0(arg1, &var_c0) == 0)
                        return 0;
                    
                    r8_1 = var_110_1;
                    rcx_8 = var_128;
                }
                else if (r9_2 == 7)
                {
                    int64_t r8_2 = *arg1;
                    
                    if (r8_2 == 0)
                        return 0;
                    
                    int32_t r10_3 = *(arg1 + 0xc);
                    
                    if ((rsi_1 + 2) > r10_3)
                        return 0;
                    
                    arg1[1] += 2;
                    int32_t rdx_3 = arg1[1];
                    int32_t rdi_1 = arg1[2];
                    int16_t r11_3 = *((rdx_3 - 2) + r8_2);
                    
                    if (rdi_1 != 0)
                        r11_3 = (ROLW(r11_3, 8));
                    
                    if ((rdx_3 + 2) > r10_3)
                        return 0;
                    
                    arg1[1] = (rdx_3 + 2);
                    int16_t r9_3 = *(rdx_3 + r8_2);
                    
                    if (rdi_1 != 0)
                        r9_3 = (ROLW(r9_3, 8));
                    
                    if ((rdx_3 + 4) > r10_3)
                        return 0;
                    
                    arg1[1] += 2;
                    int32_t rdx_5 = arg1[1];
                    int16_t r8_3 = *((rdx_5 - 2) + r8_2);
                    
                    if (rdi_1 != 0)
                        r8_3 = (ROLW(r8_3, 8));
                    
                    if ((rdx_5 + 2) > r10_3)
                        return 0;
                    
                    arg1[1] = (rdx_5 + 2);
                    var_c0 = sub_18001de90(r11_3);
                    *var_c0[4] = sub_18001de90(r9_3);
                    r10_2 = var_d8_1;
                    r11_2 = var_124;
                    var_b8_1 = sub_18001de90(r8_3);
                    r8_1 = var_110_1;
                    rcx_8 = var_128;
                }
                
                if (r13 >= 0)
                {
                    int32_t rax_22;
                    
                    if (r12_1 == 0)
                        rax_22 = (rsi_1 + r13);
                    else
                        rax_22 = (((r15 * var_108) + rcx_8) + r13);
                    
                    arg1[1] = rax_22;
                    
                    if ((r8_1 == 6 && sub_18001d5c0(arg1, &var_98) == 0))
                        return 0;
                }
                
                if (var_118 >= 0)
                {
                    int32_t rax_28;
                    
                    if (r12_1 == 0)
                        rax_28 = (var_118 + rsi_1);
                    else
                        rax_28 = (((r15 * var_c8) + var_128) + var_118);
                    
                    arg1[1] = rax_28;
                    
                    if ((r11_1 == 6 && sub_18001d5c0(arg1, &var_88) == 0))
                        return 0;
                }
                
                if (rdx_1 >= 0)
                {
                    int32_t rax_34;
                    
                    if (r12_1 == 0)
                        rax_34 = (var_11c + rsi_1);
                    else
                        rax_34 = (((r15 * var_c4) + var_128) + var_11c);
                    
                    arg1[1] = rax_34;
                    
                    if ((rdi == 6 && sub_18001d5c0(arg1, &var_78) == 0))
                        return 0;
                }
                
                if (r11_2 >= 0)
                {
                    int32_t rax_40;
                    
                    if (r12_1 == 0)
                        rax_40 = (rsi_1 + r11_2);
                    else
                        rax_40 = (((r15 * var_104) + var_128) + r11_2);
                    
                    arg1[1] = rax_40;
                    
                    if (r10_2 == 6)
                    {
                        if (sub_18001d4e0(arg1, &var_f8) == 0)
                            return 0;
                    }
                    else if (r10_2 == 2)
                    {
                        int64_t rdx_10 = *arg1;
                        
                        if (rdx_10 == 0)
                            return 0;
                        
                        int32_t r10_4 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 2) > r10_4)
                            return 0;
                        
                        arg1[1] += 2;
                        int32_t r9_4 = arg1[1];
                        int32_t r11_4 = arg1[2];
                        int16_t r8_4 = *((r9_4 - 2) + rdx_10);
                        
                        if (r11_4 != 0)
                            r8_4 = (ROLW(r8_4, 8));
                        
                        if ((r9_4 + 2) > r10_4)
                            return 0;
                        
                        arg1[1] = (r9_4 + 2);
                        int16_t rdx_11 = *(r9_4 + rdx_10);
                        
                        if (r11_4 != 0)
                            rdx_11 = (ROLW(rdx_11, 8));
                        
                        zmm1 = (_mm_cvtepi32_ps(r8_4) * 1.52590219e-05f);
                        zmm0 = (_mm_cvtepi32_ps(rdx_11) * 1.52590219e-05f);
                        zmm1 = (zmm1 + 0.5f);
                        zmm0 = (zmm0 + 0.5f);
                        var_f8 = zmm1;
                        *var_f8[4] = zmm0;
                    }
                    else if (r10_2 == 7)
                    {
                        int64_t r8_5 = *arg1;
                        
                        if (r8_5 == 0)
                            return 0;
                        
                        int32_t r9_5 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 2) > r9_5)
                            return 0;
                        
                        arg1[1] += 2;
                        int32_t rdx_12 = arg1[1];
                        int32_t r10_5 = arg1[2];
                        int16_t rcx_17 = *((rdx_12 - 2) + r8_5);
                        
                        if (r10_5 != 0)
                            rcx_17 = (ROLW(rcx_17, 8));
                        
                        if ((rdx_12 + 2) > r9_5)
                            return 0;
                        
                        arg1[1] = (rdx_12 + 2);
                        int16_t r8_6 = *(rdx_12 + r8_5);
                        
                        if (r10_5 != 0)
                            r8_6 = (ROLW(r8_6, 8));
                        
                        var_f8 = sub_18001de90(rcx_17);
                        *var_f8[4] = sub_18001de90(r8_6);
                    }
                }
                
                if (var_120 >= 0)
                {
                    int32_t rax_60;
                    
                    if (r12_1 == 0)
                        rax_60 = (var_120 + rsi_1);
                    else
                        rax_60 = (((r15 * var_100) + var_128) + var_120);
                    
                    arg1[1] = rax_60;
                    
                    if (r14_1 == 6)
                    {
                        if (sub_18001d4e0(arg1, &var_f0) == 0)
                            return 0;
                    }
                    else if (r14_1 == 2)
                    {
                        int64_t rdx_14 = *arg1;
                        
                        if (rdx_14 == 0)
                            return 0;
                        
                        int32_t r10_6 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + r14_1) > r10_6)
                            return 0;
                        
                        arg1[1] += r14_1;
                        int32_t r9_6 = arg1[1];
                        int32_t r11_5 = arg1[2];
                        int16_t r8_7 = *((r9_6 - 2) + rdx_14);
                        
                        if (r11_5 != 0)
                            r8_7 = (ROLW(r8_7, 8));
                        
                        if ((r9_6 + 2) > r10_6)
                            return 0;
                        
                        arg1[1] = (r9_6 + 2);
                        int16_t rdx_15 = *(r9_6 + rdx_14);
                        
                        if (r11_5 != 0)
                            rdx_15 = (ROLW(rdx_15, 8));
                        
                        zmm1 = (_mm_cvtepi32_ps(r8_7) * 1.52590219e-05f);
                        zmm0 = (_mm_cvtepi32_ps(rdx_15) * 1.52590219e-05f);
                        zmm1 = (zmm1 + 0.5f);
                        zmm0 = (zmm0 + 0.5f);
                        var_f0 = zmm1;
                        *var_f0[4] = zmm0;
                    }
                    else if (r14_1 == 7)
                    {
                        int64_t r8_8 = *arg1;
                        
                        if (r8_8 == 0)
                            return 0;
                        
                        int32_t r9_7 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 2) > r9_7)
                            return 0;
                        
                        arg1[1] += 2;
                        int32_t rdx_16 = arg1[1];
                        int32_t r10_7 = arg1[2];
                        int16_t rcx_20 = *((rdx_16 - 2) + r8_8);
                        
                        if (r10_7 != 0)
                            rcx_20 = (ROLW(rcx_20, 8));
                        
                        if ((rdx_16 + 2) > r9_7)
                            return 0;
                        
                        arg1[1] = (rdx_16 + 2);
                        int16_t r8_9 = *(rdx_16 + r8_8);
                        
                        if (r10_7 != 0)
                            r8_9 = (ROLW(r8_9, 8));
                        
                        var_f0 = sub_18001de90(rcx_20);
                        *var_f0[4] = sub_18001de90(r8_9);
                    }
                }
                
                if (arg2 == 0)
                    goto label_180005c06;
                
                int64_t rdx_17 = *(arg2 + 0x18);
                r10_2 = var_d8_1;
                r11_2 = var_124;
                r9_2 = var_d0_1;
                
                if (rdx_17 != 0)
                {
                    uint64_t* rcx_22 = (var_b0_1 * 0x4c);
                    zmm1 = var_f0;
                    *(rcx_22 + rdx_17) = var_c0;
                    zmm0 = var_f8;
                    *((rcx_22 + rdx_17) + 8) = var_b8_1;
                    *((rcx_22 + *(arg2 + 0x18)) + 0x18) = zmm0;
                    *((rcx_22 + *(arg2 + 0x18)) + 0x20) = zmm1;
                }
                
                goto label_180005c15;
            }
            
            if (rax_129 >= 0xc)
            {
                int64_t var_a8 = 0;
                int32_t var_a0_1 = 0;
                int64_t var_68 = 0;
                int32_t var_60_1 = 0;
                int64_t var_e8 = 0;
                int64_t var_e0 = 0;
                
                if (sub_18001d5c0(arg1, &var_a8) == 0)
                    return 0;
                
                if (r13 >= 0)
                {
                    int32_t rax_84;
                    
                    if (r12_1 == 0)
                        rax_84 = (rsi_1 + r13);
                    else
                        rax_84 = (((r15 * var_108) + var_128) + r13);
                    
                    arg1[1] = rax_84;
                    
                    if ((var_110_1 == 6 && sub_18001d5c0(arg1, &var_68) == 0))
                        return 0;
                }
                
                if (r11_2 >= 0)
                {
                    int32_t rax_89;
                    
                    if (r12_1 == 0)
                        rax_89 = (rsi_1 + r11_2);
                    else
                        rax_89 = (((r15 * var_104) + var_128) + r11_2);
                    
                    arg1[1] = rax_89;
                    
                    if (r10_2 == 6)
                    {
                        if (sub_18001d4e0(arg1, &var_e8) == 0)
                            return 0;
                    }
                    else if (r10_2 == 2)
                    {
                        int64_t rdx_21 = *arg1;
                        
                        if (rdx_21 == 0)
                            return 0;
                        
                        int32_t r10_8 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 2) > r10_8)
                            return 0;
                        
                        arg1[1] += 2;
                        int32_t r9_8 = arg1[1];
                        int32_t r11_6 = arg1[2];
                        int16_t r8_11 = *((r9_8 - 2) + rdx_21);
                        
                        if (r11_6 != 0)
                            r8_11 = (ROLW(r8_11, 8));
                        
                        if ((r9_8 + 2) > r10_8)
                            return 0;
                        
                        arg1[1] = (r9_8 + 2);
                        int16_t rdx_22 = *(r9_8 + rdx_21);
                        
                        if (r11_6 != 0)
                            rdx_22 = (ROLW(rdx_22, 8));
                        
                        zmm1 = (_mm_cvtepi32_ps(r8_11) * 1.52590219e-05f);
                        zmm0 = (_mm_cvtepi32_ps(rdx_22) * 1.52590219e-05f);
                        zmm1 = (zmm1 + 0.5f);
                        zmm0 = (zmm0 + 0.5f);
                        var_e8 = zmm1;
                        *var_e8[4] = zmm0;
                    }
                    else if (r10_2 == 7)
                    {
                        int64_t r8_12 = *arg1;
                        
                        if (r8_12 == 0)
                            return 0;
                        
                        int32_t r9_9 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 2) > r9_9)
                            return 0;
                        
                        arg1[1] += 2;
                        int32_t rdx_23 = arg1[1];
                        int32_t r10_9 = arg1[2];
                        int16_t rcx_26 = *((rdx_23 - 2) + r8_12);
                        
                        if (r10_9 != 0)
                            rcx_26 = (ROLW(rcx_26, 8));
                        
                        if ((rdx_23 + 2) > r9_9)
                            return 0;
                        
                        arg1[1] = (rdx_23 + 2);
                        int16_t r8_13 = *(rdx_23 + r8_12);
                        
                        if (r10_9 != 0)
                            r8_13 = (ROLW(r8_13, 8));
                        
                        var_e8 = sub_18001de90(rcx_26);
                        *var_e8[4] = sub_18001de90(r8_13);
                    }
                }
                
                if (var_120 >= 0)
                {
                    int32_t rax_109;
                    
                    if (r12_1 == 0)
                        rax_109 = (var_120 + rsi_1);
                    else
                        rax_109 = (((r15 * var_100) + var_128) + var_120);
                    
                    arg1[1] = rax_109;
                    
                    if (r14_1 == 6)
                    {
                        if (sub_18001d4e0(arg1, &var_e0) == 0)
                            return 0;
                    }
                    else if (r14_1 == 2)
                    {
                        int64_t rdx_25 = *arg1;
                        
                        if (rdx_25 == 0)
                            return 0;
                        
                        int32_t r10_10 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + r14_1) > r10_10)
                            return 0;
                        
                        arg1[1] += r14_1;
                        int32_t r9_10 = arg1[1];
                        int32_t r11_7 = arg1[2];
                        int16_t r8_14 = *((r9_10 - 2) + rdx_25);
                        
                        if (r11_7 != 0)
                            r8_14 = (ROLW(r8_14, 8));
                        
                        if ((r9_10 + 2) > r10_10)
                            return 0;
                        
                        arg1[1] = (r9_10 + 2);
                        int16_t rdx_26 = *(r9_10 + rdx_25);
                        
                        if (r11_7 != 0)
                            rdx_26 = (ROLW(rdx_26, 8));
                        
                        zmm1 = (_mm_cvtepi32_ps(r8_14) * 1.52590219e-05f);
                        zmm0 = (_mm_cvtepi32_ps(rdx_26) * 1.52590219e-05f);
                        zmm1 = (zmm1 + 0.5f);
                        zmm0 = (zmm0 + 0.5f);
                        var_e0 = zmm1;
                        *var_e0[4] = zmm0;
                    }
                    else if (r14_1 == 7)
                    {
                        int64_t r8_15 = *arg1;
                        
                        if (r8_15 == 0)
                            return 0;
                        
                        int32_t r9_11 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 2) > r9_11)
                            return 0;
                        
                        arg1[1] += 2;
                        int32_t rdx_27 = arg1[1];
                        int32_t r10_11 = arg1[2];
                        int16_t rcx_29 = *((rdx_27 - 2) + r8_15);
                        
                        if (r10_11 != 0)
                            rcx_29 = (ROLW(rcx_29, 8));
                        
                        if ((rdx_27 + 2) > r9_11)
                            return 0;
                        
                        arg1[1] = (rdx_27 + 2);
                        int16_t r8_16 = *(rdx_27 + r8_15);
                        
                        if (r10_11 != 0)
                            r8_16 = (ROLW(r8_16, 8));
                        
                        var_e0 = sub_18001de90(rcx_29);
                        *var_e0[4] = sub_18001de90(r8_16);
                    }
                }
                
                if (arg2 != 0)
                {
                    int64_t rdx_28 = *(arg2 + 0x18);
                    r10_2 = var_d8_1;
                    r11_2 = var_124;
                    r9_2 = var_d0_1;
                    
                    if (rdx_28 != 0)
                    {
                        uint64_t* rcx_31 = (var_b0_1 * 0x4c);
                        zmm1 = var_e0;
                        *(rcx_31 + rdx_28) = var_a8;
                        zmm0 = var_e8;
                        *((rcx_31 + rdx_28) + 8) = var_a0_1;
                        *((rcx_31 + *(arg2 + 0x18)) + 0x18) = zmm0;
                        *((rcx_31 + *(arg2 + 0x18)) + 0x20) = zmm1;
                    }
                    
                    goto label_180005c15;
                }
                
            label_180005c06:
                r9_2 = var_d0_1;
                r11_2 = var_124;
                r10_2 = var_d8_1;
            label_180005c15:
                rax_129 = arg5;
                r8_1 = var_110_1;
                rcx_8 = var_128;
            }
            
            var_b0_1 += 1;
            r15 += 1;
            arg1[1] = (rax_129 + rsi_1);
        } while (r15 < arg3);
    }
    
    return 1;
}

int64_t sub_180005c80(int64_t* arg1, void* arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t* arg6, uint32_t arg7)
{
    int64_t var_48 = -2;
    uint32_t rbx = arg7;
    
    if ((rbx != 0 && (arg4 != 0 && (arg3 != 0 && arg5 != 0))))
    {
        arg1[1] = arg4;
        int64_t r11_1 = *arg1;
        
        if (r11_1 == 0)
            return 0;
        
        int32_t r8 = *(arg1 + 0xc);
        
        if ((arg4 + 4) > r8)
            return 0;
        
        int32_t rsi_1 = *(arg4 + r11_1);
        int32_t rdi_1 = arg1[2];
        
        if (rdi_1 != 0)
            rsi_1 = ((((rsi_1 >> 0x18) | ((rsi_1 >> 8) & 0xff00)) | ((rsi_1 & 0xff00) << 8)) | (rsi_1 << 0x18));
        
        if (rsi_1 == 0x41646170)
        {
            arg1[1] = (arg4 + 8);
            
            if ((arg4 + 0xc) > r8)
                return 0;
            
            arg1[1] = (arg4 + 0xc);
            rbx = *((arg4 + 8) + r11_1);
            
            if (rdi_1 != 0)
                rbx = ((((rbx >> 0x18) | ((rbx >> 8) & 0xff00)) | ((rbx & 0xff00) << 8)) | (rbx << 0x18));
            
            if ((arg4 + 0x10) > r8)
                return 0;
            
            arg1[1] = (arg4 + 0x10);
            
            if ((arg4 + 0x14) > r8)
                return 0;
            
            arg1[1] = (arg4 + 0x14);
            
            if ((arg4 + 0x18) > r8)
                return 0;
            
            arg1[1] = (arg4 + 0x18);
            
            if ((arg4 + 0x1c) > r8)
                return 0;
            
            arg1[1] = (arg4 + 0x1c);
            
            if ((arg4 + 0x20) > r8)
                return 0;
            
            arg1[1] = (arg4 + 0x20);
            
            if ((arg4 + 0x24) > r8)
                return 0;
            
            arg1[1] = (arg4 + 0x24);
        }
        
        int32_t r15_1 = 0;
        char* r13_1 = nullptr;
        char* var_68_1 = nullptr;
        char* rax_12;
        
        if (rbx != 0)
        {
            rax_12 = j_operator new(rbx);
            r13_1 = rax_12;
            var_68_1 = rax_12;
        }
        
        if ((rbx != 0 && rax_12 == 0))
            return 0;
        
        if (sub_180003b40(arg1, r13_1, rbx) == 0)
        {
            sub_18002367c(r13_1);
            return 0;
        }
        
        uint64_t count = (arg3 * arg5);
        arg7 = count;
        uint32_t var_98;
        void* rsi_5;
        
        if (rsi_1 != 0x41646170)
        {
            if (r13_1 == 0)
                return 0;
            
            if ((rbx == 0 || count == 0))
            {
                sub_18002367c(r13_1);
                return 0;
            }
            
            void* rax_15 = j_operator new(count);
            rsi_5 = rax_15;
            
            if (rax_15 == 0)
            {
                sub_18002367c(r13_1);
                return 0;
            }
            
            memset(rax_15, 0, count);
            var_98 = rbx;
            int32_t rax_16 = sub_18001e550(rsi_5, &arg7, r13_1, &var_98);
            count = arg7;
            
            if ((count == 0 || rax_16 != 0))
            {
                sub_18002367c(rsi_5);
                sub_18002367c(r13_1);
                return 0;
            }
        }
        else
        {
            if (r13_1 == 0)
                return 0;
            
            if ((rbx == 0 || count == 0))
            {
                sub_18002367c(r13_1);
                return 0;
            }
            
            void* rax_14 = j_operator new(count);
            rsi_5 = rax_14;
            
            if (rax_14 == 0)
            {
                sub_18002367c(r13_1);
                return 0;
            }
            
            memset(rax_14, 0, count);
            sub_180021580(r13_1, rsi_5, rbx, count);
        }
        
        if (rsi_5 == 0)
        {
            sub_18002367c(r13_1);
            return 0;
        }
        
        int32_t var_80_1 = 0;
        void* var_90 = rsi_5;
        int32_t var_84_1 = count;
        int32_t var_88_1 = 0;
        int32_t rax_17;
        
        if (arg2 != 0)
            rax_17 = sub_180001ed0(arg2, arg3);
        
        if ((arg2 == 0 || rax_17 != 0))
        {
            int32_t rsi_6 = -1;
            int32_t r13_2 = -1;
            int32_t r8_6 = -1;
            int32_t r9_2 = -1;
            int32_t i_2 = *arg6;
            
            if (i_2 > 0)
            {
                void* rax_19 = &arg6[3];
                uint64_t i_1 = i_2;
                uint64_t i;
                
                do
                {
                    if (*(rax_19 + 8) == 2)
                    {
                        int32_t rcx_15 = *rax_19;
                        
                        if (rcx_15 >= 0xc)
                        {
                            if (rsi_6 == 0xffffffff)
                            {
                                rsi_6 = rcx_15;
                                r8_6 = *(rax_19 + 4);
                            }
                            else if (r13_2 == 0xffffffff)
                            {
                                r13_2 = rcx_15;
                                r9_2 = *(rax_19 + 4);
                            }
                        }
                    }
                    
                    rax_19 += 0x10;
                    i = i_1;
                    i_1 -= 1;
                } while (i != 1);
            }
            
            int32_t r14_3 = 0;
            
            if (arg3 != 0)
            {
                int64_t rbx_5 = rsi_6;
                int64_t r10_9 = r8_6;
                int64_t var_70_1 = r10_9;
                int64_t r11_2 = r9_2;
                int64_t var_50_1 = r11_2;
                uint64_t* rdi_3 = nullptr;
                int32_t rax_20 = arg5;
                int32_t rcx_16 = arg3;
                
                do
                {
                    if (rax_20 >= 0xc)
                    {
                        int64_t var_60 = 0;
                        int32_t var_58_1 = 0;
                        var_98 = 0;
                        int64_t var_78 = 0;
                        
                        if (sub_18001d5c0(&var_90, &var_60) == 0)
                            break;
                        
                        void* rdx_10;
                        int32_t rbx_6;
                        int32_t r8_9;
                        int32_t r9_3;
                        uint128_t zmm0_1;
                        uint128_t zmm1;
                        
                        if (rbx_5 < 0)
                        {
                        label_1800060d0:
                            rdx_10 = var_90;
                            r8_9 = var_88_1;
                            r9_3 = var_84_1;
                            rbx_6 = var_80_1;
                        }
                        else
                        {
                            arg1[1] = (r15_1 + rsi_6);
                            
                            if (r10_9 == 6)
                            {
                                if (sub_18001d4e0(&var_90, &var_98) == 0)
                                    break;
                                
                                goto label_1800060d0;
                            }
                            
                            if (r10_9 != 2)
                                goto label_1800060d0;
                            
                            rdx_10 = var_90;
                            
                            if (rdx_10 == 0)
                                break;
                            
                            int32_t r8_8 = (var_88_1 + r10_9);
                            r9_3 = var_84_1;
                            
                            if (r8_8 > r9_3)
                                break;
                            
                            uint16_t r11_3 = *((r8_8 - 2) + rdx_10);
                            rbx_6 = var_80_1;
                            
                            if (rbx_6 != 0)
                                r11_3 = ((r11_3 >> 8) | (r11_3 << 8));
                            
                            r8_9 = (r8_8 + 2);
                            
                            if (r8_9 > r9_3)
                                break;
                            
                            int32_t var_88_2 = r8_9;
                            uint16_t r10_10 = *((r8_9 - 2) + rdx_10);
                            
                            if (rbx_6 != 0)
                                r10_10 = ((r10_10 >> 8) | (r10_10 << 8));
                            
                            zmm1 = (_mm_cvtepi32_ps(r11_3) * 1.52590219e-05f);
                            zmm0_1 = (_mm_cvtepi32_ps(r10_10) * 1.52590219e-05f);
                            zmm1 = (zmm1 + 0.5f);
                            var_98 = zmm1;
                            zmm0_1 = (zmm0_1 + 0.5f);
                            int32_t var_94_1 = zmm0_1;
                            r11_2 = var_50_1;
                        }
                        
                        if (r13_2 >= 0)
                        {
                            arg1[1] = (r15_1 + r13_2);
                            
                            if (r11_2 == 6)
                            {
                                if (sub_18001d4e0(&var_90, &var_78) == 0)
                                    break;
                            }
                            else if (r11_2 == 2)
                            {
                                if (rdx_10 == 0)
                                    break;
                                
                                if ((r8_9 + 2) > r9_3)
                                    break;
                                
                                uint16_t r8_10 = *(r8_9 + rdx_10);
                                
                                if (rbx_6 != 0)
                                    r8_10 = ((r8_10 >> 8) | (r8_10 << 8));
                                
                                if ((r8_9 + 4) > r9_3)
                                    break;
                                
                                uint16_t rdx_12 = *((r8_9 + 2) + rdx_10);
                                
                                if (rbx_6 != 0)
                                    rdx_12 = ((rdx_12 >> 8) | (rdx_12 << 8));
                                
                                zmm1 = (_mm_cvtepi32_ps(r8_10) * 1.52590219e-05f);
                                zmm0_1 = (_mm_cvtepi32_ps(rdx_12) * 1.52590219e-05f);
                                zmm1 = (zmm1 + 0.5f);
                                var_78 = zmm1;
                                zmm0_1 = (zmm0_1 + 0.5f);
                                *var_78[4] = zmm0_1;
                            }
                        }
                        
                        rbx_5 = rsi_6;
                        
                        if (arg2 != 0)
                        {
                            int64_t rcx_20 = *(arg2 + 0x18);
                            
                            if (rcx_20 != 0)
                            {
                                *(rdi_3 + rcx_20) = var_60;
                                *((rdi_3 + rcx_20) + 8) = var_58_1;
                                *((rdi_3 + *(arg2 + 0x18)) + 0x18) = var_98;
                                *((rdi_3 + *(arg2 + 0x18)) + 0x20) = var_78;
                            }
                        }
                        
                        r10_9 = var_70_1;
                        rax_20 = arg5;
                        rcx_16 = arg3;
                    }
                    
                    r15_1 += rax_20;
                    var_88_1 = r15_1;
                    r14_3 += 1;
                    rdi_3 += 0x4c;
                } while (r14_3 < rcx_16);
            }
            
            r13_1 = var_68_1;
        }
        
        sub_18002367c(r13_1);
    }
    
    return 1;
}

int64_t sub_180006250(int64_t* arg1, int32_t* arg2, int32_t* arg3)
{
    if ((arg2 == 0 || arg3 == 0))
        return 0;
    
    if (*arg3 > 0)
    {
        int32_t rax_3 = arg3[1];
        
        if (rax_3 != 0)
        {
            arg1[1] = rax_3;
            int32_t temp0;
            int32_t temp1;
            temp0 = HIGHD((0xaaaaaaab * *arg3));
            temp1 = LOWD((0xaaaaaaab * *arg3));
            uint32_t r12_1 = (temp0 >> 1);
            
            if ((r12_1 != 0 && *(arg2 + 8) == 0))
            {
                int32_t result = sub_180001e80(arg2, r12_1);
                
                if (result == 0)
                    return result;
            }
            
            int32_t rbp = 0;
            int64_t rsi = arg2[0x38];
            
            if (r12_1 != 0)
            {
                int64_t r10_2 = (rsi * 0x14);
                
                do
                {
                    int64_t rdx_2 = *arg1;
                    
                    if (rdx_2 == 0)
                        return 0;
                    
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 2) > r8)
                        return 0;
                    
                    arg1[1] += 2;
                    int32_t r9_1 = arg1[1];
                    int32_t r14_1 = arg1[2];
                    int16_t r11_1 = *((r9_1 - 2) + rdx_2);
                    
                    if (r14_1 != 0)
                        r11_1 = (ROLW(r11_1, 8));
                    
                    if ((r9_1 + 2) > r8)
                        return 0;
                    
                    arg1[1] += 2;
                    int32_t r15_1 = arg1[1];
                    int16_t r9_2 = *((r15_1 - 2) + rdx_2);
                    
                    if (r14_1 != 0)
                        r9_2 = (ROLW(r9_2, 8));
                    
                    if ((r15_1 + 2) > r8)
                        return 0;
                    
                    arg1[1] += 2;
                    int16_t rdx_3 = *((arg1[1] - 2) + rdx_2);
                    
                    if (r14_1 != 0)
                        rdx_3 = (ROLW(rdx_3, 8));
                    
                    int64_t rcx_1 = *(arg2 + 8);
                    
                    if ((rcx_1 != 0 && rsi < *arg2))
                    {
                        *((r10_2 + rcx_1) + 4) = (r11_1 + arg3[4]);
                        *((r10_2 + *(arg2 + 8)) + 8) = (r9_2 + arg3[4]);
                        *((r10_2 + *(arg2 + 8)) + 0xc) = (rdx_3 + arg3[4]);
                    }
                    
                    rsi = (rsi + 1);
                    r10_2 += 0x14;
                    rbp += 1;
                } while (rbp < r12_1);
            }
            
            int32_t rax_17 = arg1[1];
            int32_t rcx_7 = (rax_17 & 0xfffffffc);
            int32_t rax_18 = (rcx_7 + 4);
            
            if ((rax_17 & 3) <= 0)
                rax_18 = rcx_7;
            
            arg1[1] = rax_18;
        }
    }
    
    return 1;
}

int64_t sub_180006420(int64_t* arg1, int32_t* arg2, int32_t* arg3)
{
    int64_t var_58 = -2;
    
    if ((arg2 != 0 && arg3 != 0))
    {
        uint32_t rbp_1 = arg3[3];
        uint64_t count = arg3[2];
        
        if (((rbp_1 == 0 || count == 0) || *arg3 <= 0))
            return 1;
        
        uint64_t r9_1 = arg3[1];
        
        if (r9_1 == 0)
            return 1;
        
        arg1[1] = r9_1;
        int64_t r11_1 = *arg1;
        
        if (r11_1 != 0)
        {
            int32_t r8 = *(arg1 + 0xc);
            
            if ((r9_1 + 4) <= r8)
            {
                int32_t r13_1 = *(r9_1 + r11_1);
                int32_t rbx_1 = arg1[2];
                
                if (rbx_1 != 0)
                    r13_1 = ((((r13_1 >> 0x18) | ((r13_1 >> 8) & 0xff00)) | ((r13_1 & 0xff00) << 8)) | (r13_1 << 0x18));
                
                if (r13_1 != 0x41646170)
                    goto label_18000659e;
                
                int32_t rax_5 = (r9_1 + 8);
                arg1[1] = rax_5;
                
                if ((rax_5 + 4) <= r8)
                {
                    arg1[1] = (rax_5 + 4);
                    rbp_1 = *(rax_5 + r11_1);
                    
                    if (rbx_1 != 0)
                        rbp_1 = ((((rbp_1 >> 0x18) | ((rbp_1 >> 8) & 0xff00)) | ((rbp_1 & 0xff00) << 8)) | (rbp_1 << 0x18));
                    
                    if ((rax_5 + 8) <= r8)
                    {
                        arg1[1] = (rax_5 + 8);
                        
                        if ((rax_5 + 0xc) <= r8)
                        {
                            arg1[1] = (rax_5 + 0xc);
                            
                            if ((rax_5 + 0x10) <= r8)
                            {
                                arg1[1] = (rax_5 + 0x10);
                                
                                if ((rax_5 + 0x14) <= r8)
                                {
                                    arg1[1] = (rax_5 + 0x14);
                                    
                                    if ((rax_5 + 0x18) <= r8)
                                    {
                                        arg1[1] = (rax_5 + 0x18);
                                        
                                        if ((rax_5 + 0x1c) <= r8)
                                        {
                                            arg1[1] = (r9_1 + 0x24);
                                        label_18000659e:
                                            int16_t* rbx_2 = nullptr;
                                            char* r12_1 = nullptr;
                                            char* rax_11;
                                            
                                            if (rbp_1 != 0)
                                            {
                                                rax_11 = j_operator new(rbp_1);
                                                r12_1 = rax_11;
                                            }
                                            
                                            if ((rbp_1 == 0 || rax_11 != 0))
                                            {
                                                if (sub_180003b40(arg1, r12_1, rbp_1) == 0)
                                                    sub_18002367c(r12_1);
                                                else
                                                {
                                                    count_1 = count;
                                                    void* rsi_1;
                                                    
                                                    if (r13_1 != 0x41646170)
                                                    {
                                                        if (r12_1 != 0)
                                                        {
                                                            if ((rbp_1 == 0 || count == 0))
                                                                sub_18002367c(r12_1);
                                                            else
                                                            {
                                                                void* rax_14 = j_operator new(count);
                                                                rsi_1 = rax_14;
                                                                
                                                                if (rax_14 == 0)
                                                                    sub_18002367c(r12_1);
                                                                else
                                                                {
                                                                    memset(rax_14, 0, count);
                                                                    arg_20 = rbp_1;
                                                                    int32_t rax_15 = sub_18001e550(rsi_1, &count_1, r12_1, &arg_20);
                                                                    count = count_1;
                                                                    
                                                                    if ((count != 0 && rax_15 == 0))
                                                                        goto label_1800066a3;
                                                                    
                                                                    sub_18002367c(rsi_1);
                                                                    sub_18002367c(r12_1);
                                                                }
                                                            }
                                                        }
                                                    }
                                                    else if (r12_1 != 0)
                                                    {
                                                        if ((rbp_1 == 0 || count == 0))
                                                            sub_18002367c(r12_1);
                                                        else
                                                        {
                                                            void* rax_13 = j_operator new(count);
                                                            rsi_1 = rax_13;
                                                            
                                                            if (rax_13 == 0)
                                                                sub_18002367c(r12_1);
                                                            else
                                                            {
                                                                memset(rax_13, 0, count);
                                                                sub_180021580(r12_1, rsi_1, rbp_1, count);
                                                            label_1800066a3:
                                                                
                                                                if (rsi_1 != 0)
                                                                {
                                                                    int32_t var_40_1 = 0;
                                                                    void* var_50_1 = rsi_1;
                                                                    int32_t var_44_1 = count;
                                                                    int32_t var_48_1 = 0;
                                                                    int32_t temp0_1;
                                                                    int32_t temp1_1;
                                                                    temp0_1 = HIGHD((0xaaaaaaab * *arg3));
                                                                    temp1_1 = LOWD((0xaaaaaaab * *arg3));
                                                                    uint32_t rbp_6 = (temp0_1 >> 1);
                                                                    int32_t rax_17;
                                                                    
                                                                    if ((rbp_6 != 0 && *(arg2 + 8) == 0))
                                                                        rax_17 = sub_180001e80(arg2, rbp_6);
                                                                    
                                                                    if (((rbp_6 == 0 || *(arg2 + 8) != 0) || rax_17 != 0))
                                                                    {
                                                                        int64_t r9_4 = arg2[0x38];
                                                                        int32_t r10_8 = 0;
                                                                        
                                                                        if (rbp_6 != 0)
                                                                        {
                                                                            int64_t r8_7 = (r9_4 * 0x14);
                                                                            int32_t i = 2;
                                                                            
                                                                            while (i <= count)
                                                                            {
                                                                                count_1 = *(rbx_2 + rsi_1);
                                                                                
                                                                                if ((i + 2) > count)
                                                                                    break;
                                                                                
                                                                                int16_t r11_2 = *(&rbx_2[1] + rsi_1);
                                                                                
                                                                                if ((i + 4) > count)
                                                                                    break;
                                                                                
                                                                                rbx_2 = (rbx_2 + 6);
                                                                                i += 6;
                                                                                int16_t r13_6 = *(&rbx_2[-1] + rsi_1);
                                                                                int64_t rcx_15 = *(arg2 + 8);
                                                                                
                                                                                if ((rcx_15 != 0 && r9_4 < *arg2))
                                                                                {
                                                                                    *((rcx_15 + r8_7) + 4) = (count_1 + arg3[4]);
                                                                                    *((*(arg2 + 8) + r8_7) + 8) = (r11_2 + arg3[4]);
                                                                                    *((*(arg2 + 8) + r8_7) + 0xc) = (r13_6 + arg3[4]);
                                                                                }
                                                                                
                                                                                r9_4 = (r9_4 + 1);
                                                                                r8_7 += 0x14;
                                                                                r10_8 += 1;
                                                                                
                                                                                if (r10_8 >= rbp_6)
                                                                                    break;
                                                                            }
                                                                        }
                                                                    }
                                                                    
                                                                    sub_18002367c(r12_1);
                                                                    return 1;
                                                                }
                                                                
                                                                sub_18002367c(r12_1);
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    return 0;
}

uint64_t sub_1800067d0(int64_t* arg1, wchar16* arg2)
{
    int32_t rbp = 0;
    int64_t rcx = *arg1;
    
    if (rcx != 0)
    {
        sub_18002367c(rcx);
        *arg1 = 0;
    }
    
    arg1[1] = 0;
    FILE* _Stream = _wfopen(arg2, &data_180028734);
    
    if (_Stream != 0)
    {
        fseek(_Stream, 0, 2);
        int32_t rax = ftell(_Stream);
        *(arg1 + 0xc) = rax;
        FILE* _Stream_1;
        
        if (rax == 0)
            _Stream_1 = _Stream;
        else
        {
            int64_t rax_1 = j_operator new(rax);
            *arg1 = rax_1;
            _Stream_1 = _Stream;
            
            if (rax_1 != 0)
            {
                fseek(_Stream_1, 0, 0);
                int32_t rbx_1 = *(arg1 + 0xc);
                
                if (fread(*arg1, 1, rbx_1, _Stream) == rbx_1)
                {
                    fclose(_Stream);
                    int64_t rdx = *arg1;
                    
                    if (rdx != 0)
                    {
                        int32_t rax_4 = (arg1[1] + 4);
                        
                        if (rax_4 <= *(arg1 + 0xc))
                        {
                            arg1[1] = rax_4;
                            int32_t rax_6 = *((rax_4 - 4) + rdx);
                            
                            if (arg1[2] != 0)
                                rax_6 = _bswap(rax_6);
                            
                            rbp = rax_6 == 0x4034b50;
                        }
                    }
                    
                    sub_180003ba0(arg1);
                    return rbp;
                }
                
                sub_180003ba0(arg1);
                _Stream_1 = _Stream;
            }
        }
        
        fclose(_Stream_1);
    }
    
    return 0;
}

void sub_1800068e0(void* arg1)
{
    if (*(arg1 + 0x40) != 0)
    {
        int32_t rbx_1 = 0;
        int32_t i = 0;
        
        if (*(arg1 + 0x38) > 0)
        {
            int64_t r8_1 = 0;
            
            do
            {
                int64_t rax_1 = *(arg1 + 0x40);
                *((r8_1 + rax_1) + 0x548) = 0x3f800000;
                *((r8_1 + rax_1) + 0x550) = 0;
                *((r8_1 + rax_1) + 0x558) = 0;
                *((r8_1 + rax_1) + 0x55c) = 0x3f800000;
                *((r8_1 + rax_1) + 0x564) = 0;
                *((r8_1 + rax_1) + 0x56c) = 0;
                *((r8_1 + rax_1) + 0x570) = 0x3f800000;
                *((r8_1 + rax_1) + 0x578) = 0;
                *((r8_1 + rax_1) + 0x580) = 0;
                *((r8_1 + rax_1) + 0x584) = 0x3f800000;
                int64_t rax_2 = *(arg1 + 0x40);
                *((r8_1 + rax_2) + 0x588) = 0x3f800000;
                *((r8_1 + rax_2) + 0x590) = 0;
                *((r8_1 + rax_2) + 0x598) = 0;
                *((r8_1 + rax_2) + 0x59c) = 0x3f800000;
                *((r8_1 + rax_2) + 0x5a4) = 0;
                *((r8_1 + rax_2) + 0x5ac) = 0;
                *((r8_1 + rax_2) + 0x5b0) = 0x3f800000;
                *((r8_1 + rax_2) + 0x5b8) = 0;
                *((r8_1 + rax_2) + 0x5c0) = 0;
                *((r8_1 + rax_2) + 0x5c4) = 0x3f800000;
                void* rcx = (i * 0x5c8);
                void* rax_4 = *(arg1 + 0x40);
                sub_18001dd00((rcx + (rax_4 + 0x538)), ((rax_4 + 0x548) + rcx));
                int64_t rcx_2 = data_180030730;
                r8_1 += 0x5c8;
                i += 1;
                *((r8_1 + rcx_2) - 0x74) = *((r8_1 + rcx_2) - 0xa8);
                int64_t rcx_3 = data_180030730;
                *((r8_1 + rcx_3) - 0x64) = *((r8_1 + rcx_3) - 0xa4);
                int64_t rcx_4 = data_180030730;
                *((r8_1 + rcx_4) - 0x54) = *((r8_1 + rcx_4) - 0xa0);
            } while (i < *(arg1 + 0x38));
        }
        
        int32_t rax = *(arg1 + 0x38);
        
        if (rax > 0)
        {
            int64_t rdi_1 = 0;
            
            do
            {
                void* r10_1 = *(arg1 + 0x40);
                int64_t rcx_5 = *((rdi_1 + r10_1) + 0x514);
                
                if ((rcx_5 != rbx_1 && rcx_5 < rax))
                {
                    if (rcx_5 >= 0)
                    {
                        int64_t r9_1 = (rbx_1 * 0x5c8);
                        sub_18001dbf0(((r10_1 + 0x588) + r9_1), ((r10_1 + 0x588) + (rcx_5 * 0x5c8)), ((r10_1 + 0x548) + r9_1));
                    }
                    else
                    {
                        *((rdi_1 + r10_1) + 0x588) = *((rdi_1 + r10_1) + 0x548);
                        *((rdi_1 + r10_1) + 0x598) = *((rdi_1 + r10_1) + 0x558);
                        *((rdi_1 + r10_1) + 0x5a8) = *((rdi_1 + r10_1) + 0x568);
                        *((rdi_1 + r10_1) + 0x5b8) = *((rdi_1 + r10_1) + 0x578);
                    }
                }
                
                rax = *(arg1 + 0x38);
                rbx_1 += 1;
                rdi_1 += 0x5c8;
            } while (rbx_1 < rax);
        }
    }
}

int64_t sub_180006b30(void* arg1)
{
    void var_248;
    int64_t result = (__security_cookie ^ &var_248);
    int64_t result_1 = result;
    
    if ((*(arg1 + 0x40) != 0 && *(arg1 + 0x30) != 0))
    {
        int32_t i = 0;
        
        if (*(arg1 + 0x38) > 0)
        {
            int64_t r14_1 = 0;
            
            do
            {
                int64_t _Str2;
                memset(&_Str2, 0, 0x104);
                char* rdx_3 = ((*(arg1 + 0x40) + 0x30c) + (i * 0x5c8));
                void* rcx_2 = (&_Str2 - rdx_3);
                char j;
                
                do
                {
                    j = *rdx_3;
                    *(rcx_2 + rdx_3) = j;
                    rdx_3 = &rdx_3[1];
                } while (j != 0);
                char _Str2_1 = _Str2;
                
                if (_Str2_1 == 0x23)
                {
                    void* rcx_3 = &*_Str2[1];
                    char j_1;
                    
                    do
                    {
                        j_1 = *rcx_3;
                        *(rcx_3 - 1) = j_1;
                        rcx_3 += 1;
                    } while (j_1 != 0);
                    _Str2_1 = _Str2;
                }
                
                int32_t rbx_1;
                
                if (_Str2_1 != 0)
                    rbx_1 = 0;
                
                if ((_Str2_1 == 0 || *(arg1 + 0x28) <= 0))
                {
                label_180006c2d:
                    rbx_1 = -1;
                }
                else
                {
                    while (_stricmp(((rbx_1 * 0x2f8) + (*(arg1 + 0x30) + 0xe8)), &_Str2) != 0)
                    {
                        rbx_1 += 1;
                        
                        if (rbx_1 >= *(arg1 + 0x28))
                            goto label_180006c2d;
                    }
                }
                
                result = *(arg1 + 0x40);
                i += 1;
                *((r14_1 + result) + 0x51c) = rbx_1;
                r14_1 += 0x5c8;
            } while (i < *(arg1 + 0x38));
        }
        
        int32_t i_1 = 0;
        
        if (*(arg1 + 0x28) > 0)
        {
            int64_t r10_1 = 0;
            
            do
            {
                result = *(arg1 + 0x38);
                int32_t rdx_5 = 0;
                int64_t rcx_6 = 0;
                
                if (result > 0)
                {
                    int64_t result_2 = result;
                    result = (*(arg1 + 0x40) + 0x51c);
                    
                    do
                    {
                        if (*result == i_1)
                        {
                            result = *(arg1 + 0x30);
                            *((r10_1 + result) + 0x2f0) = rdx_5;
                            break;
                        }
                        
                        rdx_5 += 1;
                        rcx_6 += 1;
                        result += 0x5c8;
                    } while (rcx_6 < result_2);
                }
                
                i_1 += 1;
                r10_1 += 0x2f8;
            } while (i_1 < *(arg1 + 0x28));
        }
        
        int32_t i_2 = 0;
        
        if (*(arg1 + 0x28) > 0)
        {
            int64_t r9_1 = *(arg1 + 0x30);
            int64_t rdx_6 = 0;
            int128_t zmm6;
            int128_t var_28_1 = zmm6;
            int128_t zmm7;
            int128_t var_38_1 = zmm7;
            int128_t zmm8;
            int128_t var_48_1 = zmm8;
            int128_t zmm9;
            int128_t var_58_1 = zmm9;
            uint128_t zmm10;
            uint128_t var_68_1 = zmm10;
            int128_t zmm11;
            int128_t var_78_1 = zmm11;
            int128_t zmm12;
            int128_t var_88_1 = zmm12;
            int128_t zmm13;
            int128_t var_98_1 = zmm13;
            uint128_t zmm14;
            uint128_t var_a8_1 = zmm14;
            int128_t zmm15;
            int128_t var_b8_1 = zmm15;
            
            do
            {
                result = *((rdx_6 + r9_1) + 0x2f0);
                
                if (result >= 0)
                {
                    int64_t rcx_7 = (result * 0x5c8);
                    result = *(arg1 + 0x40);
                    int32_t j_2 = 0;
                    int128_t zmm1 = *((rcx_7 + result) + 0x598);
                    uint128_t var_218_1 = *((rcx_7 + result) + 0x588);
                    uint128_t zmm0 = *((rcx_7 + result) + 0x5a8);
                    
                    if (*((rdx_6 + r9_1) + 0x10) > 0)
                    {
                        zmm7 = *zmm0[0xc];
                        int64_t r8_1 = 0;
                        zmm8 = *zmm0[8];
                        zmm9 = *zmm0[4];
                        zmm10 = zmm0;
                        zmm11 = *zmm1[0xc];
                        zmm12 = *zmm1[8];
                        zmm13 = *zmm1[4];
                        zmm14 = zmm1;
                        
                        do
                        {
                            j_2 += 1;
                            float* rcx_8 = *((rdx_6 + *(arg1 + 0x30)) + 0x18);
                            result = *((rcx_8 + r8_1) + 8);
                            uint64_t var_228_1 = *(rcx_8 + r8_1);
                            zmm6 = *var_228_1[4];
                            int32_t zmm5 = var_228_1;
                            int32_t var_220_1 = result;
                            zmm0 = (var_218_1 * zmm5);
                            zmm1 = (*var_218_1[8] * var_220_1);
                            float zmm2 = ((*var_218_1[4] * zmm6) + zmm0);
                            zmm0 = (zmm14 * zmm5);
                            zmm2 = (zmm2 + zmm1);
                            zmm1 = (zmm12 * var_220_1);
                            *(rcx_8 + r8_1) = (zmm2 + *var_218_1[0xc]);
                            zmm2 = ((zmm13 * zmm6) + zmm0);
                            zmm0 = (zmm10 * zmm5);
                            zmm2 = (zmm2 + zmm1);
                            zmm1 = (zmm8 * var_220_1);
                            *((rcx_8 + r8_1) + 4) = (zmm2 + zmm11);
                            *((rcx_8 + r8_1) + 8) = ((((zmm9 * zmm6) + zmm0) + zmm1) + zmm7);
                            r8_1 += 0x4c;
                            r9_1 = *(arg1 + 0x30);
                        } while (j_2 < *((rdx_6 + r9_1) + 0x10));
                    }
                }
                
                i_2 += 1;
                rdx_6 += 0x2f8;
            } while (i_2 < *(arg1 + 0x28));
        }
    }
    
    __security_check_cookie((result_1 ^ &var_248));
    return result;
}

int64_t sub_180006f20(int64_t* arg1, int32_t* arg2)
{
    int64_t rdx = *arg1;
    
    if (rdx != 0)
    {
        int32_t rax_3 = (arg1[1] + 4);
        
        if (rax_3 <= *(arg1 + 0xc))
        {
            arg1[1] = rax_3;
            *arg2 = *((rax_3 - 4) + rdx);
            
            if (arg1[2] != 0)
            {
                int32_t rdx_1 = *((arg1[1] - 4) + *arg1);
                *arg2 = ((((rdx_1 & 0xff0000) | (rdx_1 >> 0x10)) >> 8) | (((rdx_1 & 0xff00) | (rdx_1 << 0x10)) << 8));
            }
            
            return 1;
        }
    }
    
    *arg2 = 0;
    return 0;
}

uint64_t sub_180006f90(int64_t* arg1, void* arg2)
{
    void var_5d8;
    int64_t rax_1 = (__security_cookie ^ &var_5d8);
    int32_t rax_2 = *(arg2 + 8);
    uint64_t result;
    
    if (rax_2 != 0)
    {
        int64_t r11_1 = *arg1;
        arg1[1] = rax_2;
        int32_t rdx = *(arg2 + 0x10);
        
        if (r11_1 == 0)
            result = 0;
        else
        {
            int32_t i_2 = *(arg1 + 0xc);
            
            if ((rax_2 + 4) > i_2)
                result = 0;
            else
            {
                arg1[1] = (rax_2 + 4);
                
                if ((rax_2 + 8) > i_2)
                    result = 0;
                else
                {
                    arg1[1] = (rax_2 + 8);
                    
                    if ((rax_2 + 0xc) > i_2)
                        result = 0;
                    else
                    {
                        arg1[1] = (rax_2 + 0xc);
                        int32_t rcx = 0;
                        
                        if ((rdx - 3) <= 0)
                        {
                        label_180007031:
                            int32_t rdi_1 = *(arg2 + 0x1c);
                            void lpMultiByteStr;
                            
                            if (arg1[1] >= rdi_1)
                            {
                            label_1800070df:
                                int32_t rax_18 = *(arg2 + 0x1c);
                                int32_t rcx_3 = arg1[1];
                                
                                if (rax_18 != 0)
                                    rcx_3 = rax_18;
                                
                                arg1[1] = rcx_3;
                                
                                if ((rcx_3 + 4) <= i_2)
                                {
                                    arg1[1] += 4;
                                    int32_t rdx_3 = *((arg1[1] - 4) + r11_1);
                                    
                                    if (arg1[2] != 0)
                                        rdx_3 = _bswap(rdx_3);
                                    
                                    sub_180005050(arg1, rdx_3, &lpMultiByteStr);
                                    int64_t r8_3 = *arg1;
                                    int32_t rcx_6 = 0;
                                    
                                    while (true)
                                    {
                                        if (r8_3 == 0)
                                            goto label_1800077d7;
                                        
                                        if ((arg1[1] + 4) > *(arg1 + 0xc))
                                            goto label_1800077d7;
                                        
                                        arg1[1] += 4;
                                        rcx_6 += 1;
                                        int32_t r9_2 = arg1[1];
                                        
                                        if (rcx_6 >= 6)
                                        {
                                            if (r8_3 == 0)
                                                break;
                                            
                                            int32_t rdx_4 = *(arg1 + 0xc);
                                            
                                            if ((r9_2 + 4) > rdx_4)
                                                break;
                                            
                                            arg1[1] = (r9_2 + 4);
                                            
                                            if ((r9_2 + 8) > rdx_4)
                                                break;
                                            
                                            arg1[1] += 4;
                                            int32_t rcx_7 = arg1[1];
                                            
                                            if ((rcx_7 + 4) > rdx_4)
                                                break;
                                            
                                            arg1[1] = (rcx_7 + 4);
                                            
                                            if ((rcx_7 + 8) > rdx_4)
                                                break;
                                            
                                            arg1[1] += 4;
                                            int32_t rcx_9 = arg1[1];
                                            
                                            if ((rcx_9 + 4) > rdx_4)
                                                break;
                                            
                                            arg1[1] = (rcx_9 + 4);
                                            
                                            if ((rcx_9 + 8) > rdx_4)
                                                break;
                                            
                                            arg1[1] += 4;
                                            int32_t r10_1 = arg1[1];
                                            
                                            if ((r10_1 + 4) > rdx_4)
                                                break;
                                            
                                            int32_t r9_4 = arg1[2];
                                            arg1[1] = (r10_1 + 4);
                                            int32_t r15_1 = *(r10_1 + r8_3);
                                            
                                            if (r9_4 != 0)
                                                r15_1 = _bswap(r15_1);
                                            
                                            if ((r10_1 + 8) > rdx_4)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_3 = arg1[1];
                                                int32_t r11_2 = *((r10_3 - 4) + r8_3);
                                                
                                                if (r9_4 != 0)
                                                    r11_2 = _bswap(r11_2);
                                                
                                                if ((r10_3 + 4) > rdx_4)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (r10_3 + 4);
                                                    int32_t rsi_1 = *(r10_3 + r8_3);
                                                    int32_t var_5a4_1 = rsi_1;
                                                    
                                                    if (r9_4 != 0)
                                                    {
                                                        rsi_1 = _bswap(rsi_1);
                                                        var_5a4_1 = rsi_1;
                                                    }
                                                    
                                                    if ((r10_3 + 8) > rdx_4)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_5 = arg1[1];
                                                        int32_t r12_1 = *((r10_5 - 4) + r8_3);
                                                        
                                                        if (r9_4 != 0)
                                                            r12_1 = _bswap(r12_1);
                                                        
                                                        if ((r10_5 + 4) > rdx_4)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] = (r10_5 + 4);
                                                            int32_t rax_39 = *(r10_5 + r8_3);
                                                            int32_t var_598_1 = rax_39;
                                                            
                                                            if (r9_4 != 0)
                                                                var_598_1 = _bswap(rax_39);
                                                            
                                                            if ((r10_5 + 8) > rdx_4)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r10_7 = arg1[1];
                                                                int32_t rax_43 = *((r10_7 - 4) + r8_3);
                                                                int32_t var_59c_1 = rax_43;
                                                                
                                                                if (r9_4 != 0)
                                                                    var_59c_1 = _bswap(rax_43);
                                                                
                                                                if ((r10_7 + 4) > rdx_4)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (r10_7 + 4);
                                                                    int32_t rax_47 = *(r10_7 + r8_3);
                                                                    int32_t var_590_1 = rax_47;
                                                                    
                                                                    if (r9_4 != 0)
                                                                        var_590_1 = _bswap(rax_47);
                                                                    
                                                                    if ((r10_7 + 8) > rdx_4)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t r10_9 = arg1[1];
                                                                        int32_t rax_51 = *((r10_9 - 4) + r8_3);
                                                                        int32_t var_594_1 = rax_51;
                                                                        
                                                                        if (r9_4 != 0)
                                                                            var_594_1 = _bswap(rax_51);
                                                                        
                                                                        if ((r10_9 + 4) > rdx_4)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (r10_9 + 4);
                                                                            int32_t rax_55 = *(r10_9 + r8_3);
                                                                            int32_t var_58c_1 = rax_55;
                                                                            
                                                                            if (r9_4 != 0)
                                                                                var_58c_1 = _bswap(rax_55);
                                                                            
                                                                            if ((r10_9 + 8) > rdx_4)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t r10_11 = arg1[1];
                                                                                int32_t r14_1 = *((r10_11 - 4) + r8_3);
                                                                                int32_t var_5a8_1 = r14_1;
                                                                                
                                                                                if (r9_4 != 0)
                                                                                {
                                                                                    r14_1 = _bswap(r14_1);
                                                                                    var_5a8_1 = r14_1;
                                                                                }
                                                                                
                                                                                if ((r10_11 + 4) > rdx_4)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (r10_11 + 4);
                                                                                    
                                                                                    if ((r10_11 + 8) > rdx_4)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t rcx_11 = arg1[1];
                                                                                        
                                                                                        if ((rcx_11 + 4) > rdx_4)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (rcx_11 + 4);
                                                                                            
                                                                                            if ((rcx_11 + 8) > rdx_4)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t rcx_13 = arg1[1];
                                                                                                
                                                                                                if ((rcx_13 + 4) > rdx_4)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (rcx_13 + 4);
                                                                                                    
                                                                                                    if ((rcx_13 + 8) > rdx_4)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t r10_13 = arg1[1];
                                                                                                        int32_t rbp_1 = *((r10_13 - 4) + r8_3);
                                                                                                        int32_t var_5a0_1 = rbp_1;
                                                                                                        
                                                                                                        if (r9_4 != 0)
                                                                                                        {
                                                                                                            rbp_1 = _bswap(rbp_1);
                                                                                                            var_5a0_1 = rbp_1;
                                                                                                        }
                                                                                                        
                                                                                                        if ((r10_13 + 4) > rdx_4)
                                                                                                        {
                                                                                                        labelid_a:
                                                                                                            result = 0;
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (r10_13 + 4);
                                                                                                            
                                                                                                            if ((r10_13 + 8) > rdx_4)
                                                                                                            {
                                                                                                            labelid_a:
                                                                                                                result = 0;
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                void var_478;
                                                                                                                void var_368;
                                                                                                                
                                                                                                                if (r11_2 == 0)
                                                                                                                {
                                                                                                                label_1800075d5:
                                                                                                                    
                                                                                                                    if (r12_1 != 0)
                                                                                                                    {
                                                                                                                        arg1[1] = r12_1;
                                                                                                                        int32_t rdi_3 = 0;
                                                                                                                        
                                                                                                                        if (rsi_1 != 0)
                                                                                                                        {
                                                                                                                            int64_t r8_11 = *arg1;
                                                                                                                            
                                                                                                                            do
                                                                                                                            {
                                                                                                                                if (r8_11 == 0)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                int32_t r9_11 = *(arg1 + 0xc);
                                                                                                                                
                                                                                                                                if ((arg1[1] + 4) > r9_11)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t r10_16 = arg1[1];
                                                                                                                                int32_t r11_4 = arg1[2];
                                                                                                                                int32_t rdx_12 = *((r10_16 - 4) + r8_11);
                                                                                                                                
                                                                                                                                if (r11_4 != 0)
                                                                                                                                    rdx_12 = _bswap(rdx_12);
                                                                                                                                
                                                                                                                                if ((r10_16 + 4) > r9_11)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] = (r10_16 + 4);
                                                                                                                                int32_t r9_12 = *(r10_16 + r8_11);
                                                                                                                                
                                                                                                                                if (r11_4 != 0)
                                                                                                                                    r9_12 = _bswap(r9_12);
                                                                                                                                
                                                                                                                                sub_180005050(arg1, rdx_12, &var_368);
                                                                                                                                sub_180005050(arg1, r9_12, &var_478);
                                                                                                                                r8_11 = *arg1;
                                                                                                                                
                                                                                                                                for (int32_t i = 0; i < 9; i += 1)
                                                                                                                                {
                                                                                                                                    if (r8_11 == 0)
                                                                                                                                        goto label_1800077c7_2;
                                                                                                                                    
                                                                                                                                    if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                                                        goto label_1800077c7_2;
                                                                                                                                    
                                                                                                                                    arg1[1] += 4;
                                                                                                                                }
                                                                                                                                
                                                                                                                                if (r8_11 == 0)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                int32_t rdx_14 = *(arg1 + 0xc);
                                                                                                                                int32_t rax_88 = (arg1[1] + 4);
                                                                                                                                
                                                                                                                                if (rax_88 > rdx_14)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] = rax_88;
                                                                                                                                
                                                                                                                                if ((rax_88 + 4) > rdx_14)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rax_91 = (arg1[1] + 4);
                                                                                                                                
                                                                                                                                if (rax_91 > rdx_14)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] = rax_91;
                                                                                                                                
                                                                                                                                if ((rax_91 + 4) > rdx_14)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rax_94 = (arg1[1] + 4);
                                                                                                                                
                                                                                                                                if (rax_94 > rdx_14)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] = rax_94;
                                                                                                                                
                                                                                                                                if ((rax_94 + 4) > rdx_14)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t i_1 = 0;
                                                                                                                                int32_t rax_96 = arg1[1];
                                                                                                                                
                                                                                                                                do
                                                                                                                                {
                                                                                                                                    rax_96 += 4;
                                                                                                                                    
                                                                                                                                    if (rax_96 > rdx_14)
                                                                                                                                        goto label_1800077c7_2;
                                                                                                                                    
                                                                                                                                    i_1 += 1;
                                                                                                                                    arg1[1] = rax_96;
                                                                                                                                } while (i_1 < 5);
                                                                                                                                
                                                                                                                                rdi_3 += 1;
                                                                                                                            } while (rdi_3 < rsi_1);
                                                                                                                        }
                                                                                                                    }
                                                                                                                    
                                                                                                                    if (sub_1800077e0(arg1, var_598_1, var_59c_1) == 0)
                                                                                                                    {
                                                                                                                    labelid_a:
                                                                                                                        result = 0;
                                                                                                                    }
                                                                                                                    else if (sub_180007a40(arg1, var_590_1, var_594_1) == 0)
                                                                                                                    {
                                                                                                                    label_1800077c7:
                                                                                                                        result = 0;
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                        int32_t rax_99;
                                                                                                                        int64_t rdx_18;
                                                                                                                        rax_99 = sub_180008650(arg1, var_58c_1, r14_1);
                                                                                                                        
                                                                                                                        if (rax_99 == 0)
                                                                                                                        {
                                                                                                                        label_1800077c7_1:
                                                                                                                            result = 0;
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            int32_t result_1;
                                                                                                                            result_1 = PDBCommon::CopyTo(arg1, rdx_18, rbp_1) != 0;
                                                                                                                            result = result_1;
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = r11_2;
                                                                                                                    int32_t rax_68;
                                                                                                                    
                                                                                                                    if (r15_1 != 0)
                                                                                                                        rax_68 = sub_180001fd0(&data_1800306f0, r15_1);
                                                                                                                    
                                                                                                                    if ((r15_1 == 0 || rax_68 != 0))
                                                                                                                    {
                                                                                                                        int32_t r14_2 = 0;
                                                                                                                        
                                                                                                                        if (r15_1 != 0)
                                                                                                                        {
                                                                                                                            do
                                                                                                                            {
                                                                                                                                memset(&lpMultiByteStr, 0, 0x104);
                                                                                                                                int64_t r8_4 = *arg1;
                                                                                                                                
                                                                                                                                if (r8_4 == 0)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                int32_t rdx_6 = *(arg1 + 0xc);
                                                                                                                                
                                                                                                                                if ((arg1[1] + 4) > rdx_6)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t r9_5 = arg1[1];
                                                                                                                                int32_t r10_15 = arg1[2];
                                                                                                                                int32_t r11_3 = *((r9_5 - 4) + r8_4);
                                                                                                                                
                                                                                                                                if (r10_15 != 0)
                                                                                                                                    r11_3 = _bswap(r11_3);
                                                                                                                                
                                                                                                                                if ((r9_5 + 4) > rdx_6)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] = (r9_5 + 4);
                                                                                                                                int32_t rbp_2 = *(r9_5 + r8_4);
                                                                                                                                
                                                                                                                                if (r10_15 != 0)
                                                                                                                                    rbp_2 = _bswap(rbp_2);
                                                                                                                                
                                                                                                                                if ((r9_5 + 8) > rdx_6)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t r9_7 = arg1[1];
                                                                                                                                int32_t rsi_2 = *((r9_7 - 4) + r8_4);
                                                                                                                                
                                                                                                                                if (r10_15 != 0)
                                                                                                                                    rsi_2 = _bswap(rsi_2);
                                                                                                                                
                                                                                                                                if ((r9_7 + 4) > rdx_6)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] = (r9_7 + 4);
                                                                                                                                int32_t rdi_2 = *(r9_7 + r8_4);
                                                                                                                                
                                                                                                                                if (r10_15 != 0)
                                                                                                                                    rdi_2 = _bswap(rdi_2);
                                                                                                                                
                                                                                                                                if ((r9_7 + 8) > rdx_6)
                                                                                                                                    goto label_1800077c7_2;
                                                                                                                                
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t r9_9 = *((arg1[1] - 4) + r8_4);
                                                                                                                                
                                                                                                                                if (r10_15 != 0)
                                                                                                                                    r9_9 = _bswap(r9_9);
                                                                                                                                
                                                                                                                                sub_180005050(arg1, r11_3, &lpMultiByteStr);
                                                                                                                                void var_258;
                                                                                                                                sub_180005050(arg1, rbp_2, &var_258);
                                                                                                                                void var_148;
                                                                                                                                sub_180005050(arg1, rsi_2, &var_148);
                                                                                                                                sub_180005050(arg1, rdi_2, &var_478);
                                                                                                                                sub_180005050(arg1, r9_9, &var_368);
                                                                                                                                int64_t r9_10 = data_180030700;
                                                                                                                                
                                                                                                                                if (r9_10 != 0)
                                                                                                                                    MultiByteToWideChar(0, MB_PRECOMPOSED, &lpMultiByteStr, 0xffffffff, ((r14_2 * 0x208) + r9_10), 0xff);
                                                                                                                                
                                                                                                                                r14_2 += 1;
                                                                                                                            } while (r14_2 < r15_1);
                                                                                                                            
                                                                                                                            rsi_1 = var_5a4_1;
                                                                                                                            rbp_1 = var_5a0_1;
                                                                                                                        }
                                                                                                                        
                                                                                                                        r14_1 = var_5a8_1;
                                                                                                                        goto label_1800075d5;
                                                                                                                    }
                                                                                                                    
                                                                                                                label_1800077c7_2:
                                                                                                                    result = 0;
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            
                                            goto label_1800077b4;
                                        }
                                    }
                                }
                            }
                            else
                            {
                                while (&lpMultiByteStr != 0)
                                {
                                    if ((arg1[1] + 4) > i_2)
                                        break;
                                    
                                    arg1[1] += 4;
                                    int32_t r9_1 = *((arg1[1] - 4) + r11_1);
                                    
                                    if (arg1[2] != 0)
                                        r9_1 = _bswap(r9_1);
                                    
                                    int32_t r8_1 = 0;
                                    int64_t rdx_2 = 0;
                                    
                                    if (r9_1 != 0)
                                    {
                                        do
                                        {
                                            if ((arg1[1] + 1) > i_2)
                                                goto label_1800077d7;
                                            
                                            arg1[1] += 1;
                                            char rax_16 = *((arg1[1] - 1) + r11_1);
                                            
                                            if (rdx_2 < 0x104)
                                                *(&lpMultiByteStr + rdx_2) = rax_16;
                                            
                                            if (rax_16 == 0)
                                                break;
                                            
                                            r8_1 += 1;
                                            rdx_2 += 1;
                                        } while (r8_1 < r9_1);
                                    }
                                    
                                    if ((r9_1 == 0 || rdx_2 < 0x104))
                                        *(&lpMultiByteStr + rdx_2) = 0;
                                    
                                    int32_t rax_17 = arg1[1];
                                    int32_t rcx_2 = (rax_17 & 0xfffffffc);
                                    
                                    if ((rax_17 & 3) > 0)
                                        rcx_2 += 4;
                                    
                                    arg1[1] = rcx_2;
                                    
                                    if (rcx_2 >= rdi_1)
                                        goto label_1800070df;
                                }
                            }
                        label_1800077d7:
                            result = 0;
                        }
                        else
                        {
                            while ((arg1[1] + 4) <= i_2)
                            {
                                arg1[1] += 4;
                                rcx += 1;
                                
                                if (rcx >= (rdx - 3))
                                    goto label_180007031;
                            }
                            
                            result = 0;
                        }
                    }
                }
            }
        }
    }
    else
        result = 0;
    
label_1800077b4:
    __security_check_cookie((rax_1 ^ &var_5d8));
    return result;
}

int64_t sub_1800077e0(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_378;
    int64_t rax_1 = (__security_cookie ^ &var_378);
    int32_t result;
    
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        
        if (arg2 != 0)
            result = sub_1800020d0(&data_1800306f0, arg2);
        
        if ((arg2 == 0 || result != 0))
        {
            int32_t rsi_1 = 0;
            
            if (arg2 == 0)
            {
            label_180007a00:
                result = 1;
            }
            else
            {
                int64_t rbp_1 = 0;
                
                while (true)
                {
                    void var_358;
                    memset(&var_358, 0, 0x104);
                    int64_t r8 = *arg1;
                    
                    if (r8 != 0)
                    {
                        int32_t rdx = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= rdx)
                        {
                            arg1[1] += 4;
                            int32_t r9_1 = arg1[1];
                            int32_t r11_1 = arg1[2];
                            int32_t r10_1 = *((r9_1 - 4) + r8);
                            
                            if (r11_1 != 0)
                                r10_1 = _bswap(r10_1);
                            
                            if ((r9_1 + 4) <= rdx)
                            {
                                arg1[1] += 4;
                                int32_t r9_2 = arg1[1];
                                int32_t rdi_1 = *((r9_2 - 4) + r8);
                                
                                if (r11_1 != 0)
                                    rdi_1 = _bswap(rdi_1);
                                
                                if ((r9_2 + 4) <= rdx)
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) <= rdx)
                                    {
                                        arg1[1] += 4;
                                        int32_t r9_3 = *((arg1[1] - 4) + r8);
                                        
                                        if (r11_1 != 0)
                                            r9_3 = _bswap(r9_3);
                                        
                                        sub_180005050(arg1, r10_1, &var_358);
                                        void var_248;
                                        sub_180005050(arg1, rdi_1, &var_248);
                                        void var_138;
                                        sub_180005050(arg1, r9_3, &var_138);
                                        int64_t r9_4 = *arg1;
                                        
                                        if (r9_4 != 0)
                                        {
                                            int32_t rdx_4 = *(arg1 + 0xc);
                                            
                                            if ((arg1[1] + 4) <= rdx_4)
                                            {
                                                arg1[1] += 4;
                                                
                                                if ((arg1[1] + 4) <= rdx_4)
                                                {
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) <= rdx_4)
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r8_4 = arg1[1];
                                                        int32_t r9_5 = *((r8_4 - 4) + r9_4);
                                                        
                                                        if (arg1[2] != 0)
                                                            r9_5 = _bswap(r9_5);
                                                        
                                                        if ((r8_4 + 4) <= rdx_4)
                                                        {
                                                            arg1[1] += 4;
                                                            
                                                            for (int32_t i = 0; i < 8; i += 1)
                                                            {
                                                                if ((arg1[1] + 4) > rdx_4)
                                                                    goto label_180007a38;
                                                                
                                                                arg1[1] += 4;
                                                            }
                                                            
                                                            void* r8_5 = data_180030710;
                                                            
                                                            if (r8_5 != 0)
                                                            {
                                                                void* rdx_5 = &var_358;
                                                                char* r8_7 = ((r8_5 + 0x34) + (rsi_1 * 0x138));
                                                                char i_1;
                                                                
                                                                do
                                                                {
                                                                    i_1 = *rdx_5;
                                                                    rdx_5 += 1;
                                                                    *r8_7 = i_1;
                                                                    r8_7 = &r8_7[1];
                                                                } while (i_1 != 0);
                                                                *((data_180030710 + rbp_1) + 0x28) = r9_5;
                                                            }
                                                            
                                                            rsi_1 += 1;
                                                            rbp_1 += 0x138;
                                                            
                                                            if (rsi_1 >= arg2)
                                                                goto label_180007a00;
                                                            
                                                            continue;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    
                label_180007a38:
                    result = 0;
                    break;
                }
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_378));
    return result;
}

int64_t sub_180007a40(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_278;
    int64_t rax_1 = (__security_cookie ^ &var_278);
    int32_t result;
    
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        
        if (arg2 != 0)
            result = sub_180001b50(&data_1800306f0, arg2);
        
        if ((arg2 == 0 || result != 0))
        {
            int32_t rbp_1 = 0;
            int32_t rdi_1 = 0;
            int32_t r14_1 = arg1[1];
            void var_258;
            void var_148;
            
            if (arg2 == 0)
            {
            label_180007c04:
                arg1[1] = r14_1;
                
                if (arg2 == 0)
                {
                label_180007ce9:
                    result = 1;
                }
                else
                {
                    while (true)
                    {
                        int64_t r9_4 = *arg1;
                        int32_t* rsi_2 = ((rbp_1 * 0x2f8) + data_180030720);
                        
                        if (r9_4 != 0)
                        {
                            int32_t r8_4 = *(arg1 + 0xc);
                            
                            if ((r14_1 + 4) <= r8_4)
                            {
                                int32_t r11_2 = arg1[2];
                                arg1[1] = (r14_1 + 4);
                                int32_t r10_3 = *(r14_1 + r9_4);
                                
                                if (r11_2 != 0)
                                    r10_3 = _bswap(r10_3);
                                
                                if ((r14_1 + 8) <= r8_4)
                                {
                                    arg1[1] += 4;
                                    int32_t rdx_8 = arg1[1];
                                    int32_t rdi_2 = *((rdx_8 - 4) + r9_4);
                                    
                                    if (r11_2 != 0)
                                        rdi_2 = _bswap(rdi_2);
                                    
                                    if ((rdx_8 + 4) <= r8_4)
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) <= r8_4)
                                        {
                                            arg1[1] += 4;
                                            int32_t r9_5 = *((arg1[1] - 4) + r9_4);
                                            
                                            if (r11_2 != 0)
                                                r9_5 = _bswap(r9_5);
                                            
                                            sub_180005050(arg1, r10_3, &var_148);
                                            int64_t r8_7 = sub_180005050(arg1, rdi_2, &var_258);
                                            r14_1 = arg1[1];
                                            
                                            if (sub_180007d40(arg1, rsi_2, r8_7, r9_5) != 0)
                                            {
                                                rbp_1 += 1;
                                                arg1[1] = r14_1;
                                                
                                                if (rbp_1 >= arg2)
                                                    goto label_180007ce9;
                                                
                                                continue;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        result = 0;
                        break;
                    }
                }
            }
            else
            {
                while (true)
                {
                    memset(&var_258, 0, 0x104);
                    memset(&var_148, 0, 0x104);
                    int64_t r9_1 = *arg1;
                    
                    if (r9_1 != 0)
                    {
                        int32_t r8 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r10_1 = arg1[1];
                            int32_t r11_1 = arg1[2];
                            int32_t rdx = *((r10_1 - 4) + r9_1);
                            
                            if (r11_1 != 0)
                                rdx = _bswap(rdx);
                            
                            if ((r10_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t r10_2 = arg1[1];
                                int32_t r9_2 = *((r10_2 - 4) + r9_1);
                                
                                if (r11_1 != 0)
                                    r9_2 = _bswap(r9_2);
                                
                                if ((r10_2 + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        sub_180005050(arg1, rdx, &var_258);
                                        sub_180005050(arg1, r9_2, &var_148);
                                        void* r9_3 = data_180030720;
                                        
                                        if (r9_3 != 0)
                                        {
                                            int64_t r8_3 = (rdi_1 * 0x2f8);
                                            void* rcx_3 = &var_258;
                                            char* rdx_3 = ((r9_3 + 0xe8) + r8_3);
                                            char i;
                                            
                                            do
                                            {
                                                i = *rcx_3;
                                                rcx_3 += 1;
                                                *rdx_3 = i;
                                                rdx_3 = &rdx_3[1];
                                            } while (i != 0);
                                            void* rcx_4 = &var_148;
                                            char* rdx_6 = ((data_180030720 + 0x1ec) + r8_3);
                                            char i_1;
                                            
                                            do
                                            {
                                                i_1 = *rcx_4;
                                                rcx_4 += 1;
                                                *rdx_6 = i_1;
                                                rdx_6 = &rdx_6[1];
                                            } while (i_1 != 0);
                                        }
                                        
                                        rdi_1 += 1;
                                        
                                        if (rdi_1 >= arg2)
                                            goto label_180007c04;
                                        
                                        continue;
                                    }
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_278));
    return result;
}

uint64_t sub_180007d40(int64_t* arg1, int32_t* arg2, int64_t arg3, int32_t arg4)
{
    int64_t var_218 = -2;
    void var_288;
    int64_t rax_1 = (__security_cookie ^ &var_288);
    uint64_t result;
    
    if (arg2 == 0)
        result = 0;
    else if (arg4 != 0)
    {
        arg1[1] = arg4;
        int32_t var_208;
        sub_1800010c0(&var_208);
        int64_t r10_1 = *arg1;
        void _Base;
        int32_t result_1;
        
        if (r10_1 == 0)
            result_1 = 0;
        else
        {
            int32_t rax_3 = (arg1[1] + 4);
            int32_t r9 = *(arg1 + 0xc);
            
            if (rax_3 > r9)
                result_1 = 0;
            else
            {
                arg1[1] = rax_3;
                
                if ((rax_3 + 4) > r9)
                    result_1 = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t r8 = arg1[1];
                    int32_t rdi_1 = *((r8 - 4) + r10_1);
                    int32_t var_24c_1 = rdi_1;
                    int32_t r11_1 = arg1[2];
                    
                    if (r11_1 != 0)
                        var_24c_1 = ((((rdi_1 >> 0x18) | ((rdi_1 >> 8) & 0xff00)) | ((rdi_1 & 0xff00) << 8)) | (rdi_1 << 0x18));
                    
                    if ((r8 + 4) > r9)
                        result_1 = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t rdi_6 = arg1[1];
                        int32_t r8_1 = *((rdi_6 - 4) + r10_1);
                        
                        if (r11_1 != 0)
                            r8_1 = ((((r8_1 >> 0x18) | ((r8_1 >> 8) & 0xff00)) | ((r8_1 & 0xff00) << 8)) | (r8_1 << 0x18));
                        
                        if ((rdi_6 + 4) > r9)
                            result_1 = 0;
                        else
                        {
                            arg1[1] += 4;
                            
                            if ((arg1[1] + 4) > r9)
                                result_1 = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r9_1 = *((arg1[1] - 4) + r10_1);
                                int32_t var_248_1 = r9_1;
                                
                                if (r11_1 != 0)
                                    var_248_1 = ((((r9_1 >> 0x18) | ((r9_1 >> 8) & 0xff00)) | ((r9_1 & 0xff00) << 8)) | (r9_1 << 0x18));
                                
                                if (r8_1 == 0)
                                    result_1 = 1;
                                else
                                {
                                    int64_t var_23c_1 = 0;
                                    int32_t var_240 = 0;
                                    int64_t var_22c_1 = 0;
                                    int32_t var_230 = 0;
                                    
                                    if (sub_18001d5c0(arg1, &var_240) == 0)
                                        result_1 = 0;
                                    else if (sub_18001d5c0(arg1, &var_230) == 0)
                                        result_1 = 0;
                                    else
                                    {
                                        int64_t r15_1 = *arg1;
                                        
                                        if (r15_1 == 0)
                                            result_1 = 0;
                                        else
                                        {
                                            int32_t r10_2 = *(arg1 + 0xc);
                                            
                                            if ((arg1[1] + 4) > r10_2)
                                                result_1 = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r8_5 = arg1[1];
                                                int32_t r9_6 = *((r8_5 - 4) + r15_1);
                                                int32_t var_258_1 = r9_6;
                                                int32_t r13_1 = arg1[2];
                                                
                                                if (r13_1 != 0)
                                                    var_258_1 = ((((r9_6 >> 0x18) | ((r9_6 >> 8) & 0xff00)) | ((r9_6 & 0xff00) << 8)) | (r9_6 << 0x18));
                                                
                                                if ((r8_5 + 4) > r10_2)
                                                    result_1 = 0;
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r9_11 = arg1[1];
                                                    int32_t r8_6 = *((r9_11 - 4) + r15_1);
                                                    
                                                    if (r13_1 != 0)
                                                        r8_6 = ((((r8_6 >> 0x18) | ((r8_6 >> 8) & 0xff00)) | ((r8_6 & 0xff00) << 8)) | (r8_6 << 0x18));
                                                    
                                                    if ((r9_11 + 4) > r10_2)
                                                        result_1 = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        
                                                        if ((arg1[1] + 4) > r10_2)
                                                            result_1 = 0;
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r9_12 = arg1[1];
                                                            int32_t r14_1 = *((r9_12 - 4) + r15_1);
                                                            int32_t var_254_1 = r14_1;
                                                            
                                                            if (r13_1 != 0)
                                                            {
                                                                r14_1 = ((((r14_1 >> 0x18) | ((r14_1 >> 8) & 0xff00)) | ((r14_1 & 0xff00) << 8)) | (r14_1 << 0x18));
                                                                var_254_1 = r14_1;
                                                            }
                                                            
                                                            if ((r9_12 + 4) > r10_2)
                                                                result_1 = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                
                                                                if ((arg1[1] + 4) > r10_2)
                                                                    result_1 = 0;
                                                                else
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t r11_2 = arg1[1];
                                                                    int32_t r9_13 = *((r11_2 - 4) + r15_1);
                                                                    int32_t var_250_1 = r9_13;
                                                                    
                                                                    if (r13_1 != 0)
                                                                        var_250_1 = ((((r9_13 >> 0x18) | ((r9_13 >> 8) & 0xff00)) | ((r9_13 & 0xff00) << 8)) | (r9_13 << 0x18));
                                                                    
                                                                    if ((r11_2 + 4) > r10_2)
                                                                        result_1 = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        
                                                                        if ((arg1[1] + 4) > r10_2)
                                                                            result_1 = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] += 4;
                                                                            int32_t i = arg1[1];
                                                                            int32_t r12_1 = *((i - 4) + r15_1);
                                                                            
                                                                            if (r13_1 != 0)
                                                                                r12_1 = ((((r12_1 >> 0x18) | ((r12_1 >> 8) & 0xff00)) | ((r12_1 & 0xff00) << 8)) | (r12_1 << 0x18));
                                                                            
                                                                            int32_t var_204_1 = r8_6;
                                                                            result_1 = 0;
                                                                            int32_t rsi_1 = 0;
                                                                            void var_1fc;
                                                                            
                                                                            if (r8_6 != 0)
                                                                            {
                                                                                void* r14_5 = &var_1fc;
                                                                                
                                                                                do
                                                                                {
                                                                                    if ((arg1[1] + 4) > r10_2)
                                                                                        goto label_18000861c;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    i = arg1[1];
                                                                                    int32_t r11_3 = *((i - 4) + r15_1);
                                                                                    
                                                                                    if (r13_1 != 0)
                                                                                        r11_3 = ((((r11_3 >> 0x18) | ((r11_3 >> 8) & 0xff00)) | ((r11_3 & 0xff00) << 8)) | (r11_3 << 0x18));
                                                                                    
                                                                                    if (rsi_1 < var_208)
                                                                                        *r14_5 = r11_3;
                                                                                    
                                                                                    rsi_1 += 1;
                                                                                    r14_5 += 0x10;
                                                                                } while (rsi_1 < r8_6);
                                                                                
                                                                                r8_6 = var_204_1;
                                                                                r14_1 = var_254_1;
                                                                            }
                                                                            
                                                                            int32_t r11_7 = 0;
                                                                            
                                                                            if (r14_1 != 0)
                                                                            {
                                                                                void var_1f8;
                                                                                void* rsi_2 = &var_1f8;
                                                                                
                                                                                do
                                                                                {
                                                                                    if ((arg1[1] + 4) > r10_2)
                                                                                        goto label_18000861c;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    i = arg1[1];
                                                                                    int32_t r8_10 = *((i - 4) + r15_1);
                                                                                    
                                                                                    if (r13_1 != 0)
                                                                                        r8_10 = ((((r8_10 >> 0x18) | ((r8_10 >> 8) & 0xff00)) | ((r8_10 & 0xff00) << 8)) | (r8_10 << 0x18));
                                                                                    
                                                                                    if (r11_7 < var_208)
                                                                                        *rsi_2 = r8_10;
                                                                                    
                                                                                    r11_7 += 1;
                                                                                    rsi_2 += 0x10;
                                                                                } while (r11_7 < r14_1);
                                                                                
                                                                                r8_6 = var_204_1;
                                                                            }
                                                                            
                                                                            int32_t rcx_33 = 0;
                                                                            
                                                                            if (var_250_1 != 0)
                                                                            {
                                                                                do
                                                                                {
                                                                                    if ((arg1[1] + 4) > r10_2)
                                                                                        goto label_18000861c;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    i = arg1[1];
                                                                                    rcx_33 += 1;
                                                                                } while (rcx_33 < var_250_1);
                                                                            }
                                                                            
                                                                            for (; i < r12_1; i = arg1[1])
                                                                            {
                                                                                if ((i + 4) > r10_2)
                                                                                    goto label_18000861c;
                                                                                
                                                                                arg1[1] += 4;
                                                                            }
                                                                            
                                                                            if (r12_1 != 0)
                                                                                arg1[1] = r12_1;
                                                                            
                                                                            if (r8_6 > 1)
                                                                            {
                                                                                qsort(&_Base, r8_6, 0x10, sub_180001600);
                                                                                r8_6 = var_204_1;
                                                                            }
                                                                            
                                                                            int32_t r9_18 = 0;
                                                                            
                                                                            if (r8_6 > 0)
                                                                            {
                                                                                void* rcx_35 = &var_1fc;
                                                                                
                                                                                do
                                                                                {
                                                                                    int32_t rax_71 = var_258_1;
                                                                                    r9_18 += 1;
                                                                                    
                                                                                    if (r9_18 < r8_6)
                                                                                        rax_71 = *(rcx_35 + 0x10);
                                                                                    
                                                                                    int32_t rdx_24 = *(rcx_35 + 4);
                                                                                    
                                                                                    if (rdx_24 == 6)
                                                                                    {
                                                                                        int32_t temp0_1;
                                                                                        int32_t temp1_1;
                                                                                        temp0_1 = HIGHD((rax_71 - *rcx_35));
                                                                                        temp1_1 = LOWD((rax_71 - *rcx_35));
                                                                                        *(rcx_35 + 8) = ((temp1_1 + (temp0_1 & 3)) >> 2);
                                                                                        r8_6 = var_204_1;
                                                                                    }
                                                                                    else if (rdx_24 == 2)
                                                                                    {
                                                                                        int32_t temp2_1;
                                                                                        int32_t temp3_1;
                                                                                        temp2_1 = HIGHD((rax_71 - *rcx_35));
                                                                                        temp3_1 = LOWD((rax_71 - *rcx_35));
                                                                                        *(rcx_35 + 8) = ((temp3_1 - temp2_1) >> 1);
                                                                                        r8_6 = var_204_1;
                                                                                    }
                                                                                    
                                                                                    rcx_35 += 0x10;
                                                                                } while (r9_18 < r8_6);
                                                                            }
                                                                            
                                                                            int32_t r9_19 = arg1[1];
                                                                            int32_t rax_79;
                                                                            
                                                                            if (r9_19 != 0)
                                                                                rax_79 = sub_180005100(arg1, arg2, var_24c_1, r9_19, var_258_1, &var_208);
                                                                            
                                                                            if ((r9_19 == 0 || rax_79 != 0))
                                                                            {
                                                                                if (var_248_1 != 0)
                                                                                    arg1[1] = var_248_1;
                                                                                
                                                                                int64_t rdx_29 = *arg1;
                                                                                
                                                                                if (rdx_29 != 0)
                                                                                {
                                                                                    int32_t r8_15 = *(arg1 + 0xc);
                                                                                    
                                                                                    if ((arg1[1] + 4) <= r8_15)
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        
                                                                                        if ((arg1[1] + 4) <= r8_15)
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            int32_t r10_4 = arg1[1];
                                                                                            int32_t r9_20 = *((r10_4 - 4) + rdx_29);
                                                                                            
                                                                                            if (arg1[2] != 0)
                                                                                                r9_20 = ((((r9_20 >> 0x18) | ((r9_20 >> 8) & 0xff00)) | ((r9_20 & 0xff00) << 8)) | (r9_20 << 0x18));
                                                                                            
                                                                                            if ((r10_4 + 4) <= r8_15)
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                
                                                                                                if ((arg1[1] + 4) <= r8_15)
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) <= r8_15)
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        
                                                                                                        if ((arg1[1] + 4) <= r8_15)
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            void var_158;
                                                                                                            sub_180005050(arg1, r9_20, &var_158);
                                                                                                            int64_t r9_24 = *arg1;
                                                                                                            
                                                                                                            if (r9_24 != 0)
                                                                                                            {
                                                                                                                int32_t r8_17 = *(arg1 + 0xc);
                                                                                                                
                                                                                                                if ((arg1[1] + 4) <= r8_17)
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    int32_t r10_5 = arg1[1];
                                                                                                                    int32_t r11_8 = *((r10_5 - 4) + r9_24);
                                                                                                                    int32_t r14_6 = arg1[2];
                                                                                                                    
                                                                                                                    if (r14_6 != 0)
                                                                                                                        r11_8 = ((((r11_8 >> 0x18) | ((r11_8 >> 8) & 0xff00)) | ((r11_8 & 0xff00) << 8)) | (r11_8 << 0x18));
                                                                                                                    
                                                                                                                    if ((r10_5 + 4) <= r8_17)
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t rsi_3 = arg1[1];
                                                                                                                        int32_t r10_6 = *((rsi_3 - 4) + r9_24);
                                                                                                                        
                                                                                                                        if (r14_6 != 0)
                                                                                                                            r10_6 = ((((r10_6 >> 0x18) | ((r10_6 >> 8) & 0xff00)) | ((r10_6 & 0xff00) << 8)) | (r10_6 << 0x18));
                                                                                                                        
                                                                                                                        if ((rsi_3 + 2) <= r8_17)
                                                                                                                        {
                                                                                                                            arg1[1] += 2;
                                                                                                                            
                                                                                                                            if ((arg1[1] + 2) <= r8_17)
                                                                                                                            {
                                                                                                                                arg1[1] += 2;
                                                                                                                                int64_t var_22c_2 = 0;
                                                                                                                                var_230 = 0;
                                                                                                                                int64_t var_23c_2 = 0;
                                                                                                                                var_240 = 0;
                                                                                                                                
                                                                                                                                if ((sub_18001d5c0(arg1, &var_230) != 0 && sub_18001d5c0(arg1, &var_240) != 0))
                                                                                                                                {
                                                                                                                                    if (r10_6 > arg1[1])
                                                                                                                                        arg1[1] = r10_6;
                                                                                                                                    
                                                                                                                                    uint32_t rsi_5 = (r11_8 / 3);
                                                                                                                                    int32_t rax_113;
                                                                                                                                    
                                                                                                                                    if (rsi_5 > 0)
                                                                                                                                        rax_113 = sub_180001e80(arg2, rsi_5);
                                                                                                                                    
                                                                                                                                    if ((rsi_5 <= 0 || rax_113 != 0))
                                                                                                                                    {
                                                                                                                                        int64_t i_1 = 0;
                                                                                                                                        
                                                                                                                                        if (rsi_5 > 0)
                                                                                                                                        {
                                                                                                                                            int64_t r10_10 = 0;
                                                                                                                                            
                                                                                                                                            do
                                                                                                                                            {
                                                                                                                                                int64_t rdx_41 = *arg1;
                                                                                                                                                
                                                                                                                                                if (rdx_41 == 0)
                                                                                                                                                    goto label_18000861c;
                                                                                                                                                
                                                                                                                                                int32_t r11_12 = *(arg1 + 0xc);
                                                                                                                                                
                                                                                                                                                if ((arg1[1] + 2) > r11_12)
                                                                                                                                                    goto label_18000861c;
                                                                                                                                                
                                                                                                                                                arg1[1] += 2;
                                                                                                                                                int32_t r9_25 = arg1[1];
                                                                                                                                                uint16_t r8_18 = *((r9_25 - 2) + rdx_41);
                                                                                                                                                int32_t rsi_6 = arg1[2];
                                                                                                                                                
                                                                                                                                                if (rsi_6 != 0)
                                                                                                                                                    r8_18 = ((r8_18 >> 8) | (r8_18 << 8));
                                                                                                                                                
                                                                                                                                                if ((r9_25 + 2) > r11_12)
                                                                                                                                                    goto label_18000861c;
                                                                                                                                                
                                                                                                                                                arg1[1] += 2;
                                                                                                                                                int32_t r15_2 = arg1[1];
                                                                                                                                                uint16_t r9_26 = *((r15_2 - 2) + rdx_41);
                                                                                                                                                
                                                                                                                                                if (rsi_6 != 0)
                                                                                                                                                    r9_26 = ((r9_26 >> 8) | (r9_26 << 8));
                                                                                                                                                
                                                                                                                                                if ((r15_2 + 2) > r11_12)
                                                                                                                                                    goto label_18000861c;
                                                                                                                                                
                                                                                                                                                arg1[1] += 2;
                                                                                                                                                uint16_t rdx_42 = *((arg1[1] - 2) + rdx_41);
                                                                                                                                                
                                                                                                                                                if (rsi_6 != 0)
                                                                                                                                                    rdx_42 = ((rdx_42 >> 8) | (rdx_42 << 8));
                                                                                                                                                
                                                                                                                                                int64_t rcx_50 = *(arg2 + 8);
                                                                                                                                                
                                                                                                                                                if (rcx_50 != 0)
                                                                                                                                                {
                                                                                                                                                    *((rcx_50 + r10_10) + 4) = r8_18;
                                                                                                                                                    *((r10_10 + *(arg2 + 8)) + 8) = r9_26;
                                                                                                                                                    *((r10_10 + *(arg2 + 8)) + 0xc) = rdx_42;
                                                                                                                                                }
                                                                                                                                                
                                                                                                                                                i_1 += 1;
                                                                                                                                                r10_10 += 0x14;
                                                                                                                                            } while (i_1 < rsi_5);
                                                                                                                                        }
                                                                                                                                        
                                                                                                                                        result_1 = 1;
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        
    label_18000861c:
        `eh vector vbase constructor iterator'(&_Base, 0x10, 0xa, _guard_check_icall);
        result = result_1;
    }
    else
        result = (arg4 + 1);
    
    __security_check_cookie((rax_1 ^ &var_288));
    return result;
}

uint64_t sub_180008650(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_158;
    int64_t rax_1 = (__security_cookie ^ &var_158);
    uint64_t result;
    
    if (arg3 != 0)
    {
        int32_t r9_1 = 0;
        arg1[1] = arg3;
        void str1;
        
        if (arg2 == 0)
        {
        label_180008707:
            int32_t rbp_1 = 0;
            arg1[1] = arg3;
            
            if (arg2 == 0)
            {
            label_18000882c:
                result = 1;
            }
            else
            {
                while (true)
                {
                    memset(&str1, 0, 0x104);
                    int64_t r11_1 = *arg1;
                    
                    if (r11_1 != 0)
                    {
                        int32_t i = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= i)
                        {
                            arg1[1] += 4;
                            
                            if ((arg1[1] + 4) <= i)
                            {
                                arg1[1] += 4;
                                int32_t r9_2 = arg1[1];
                                int32_t r10_2 = arg1[2];
                                int32_t rdx_2 = *((r9_2 - 4) + r11_1);
                                
                                if (r10_2 != 0)
                                    rdx_2 = _bswap(rdx_2);
                                
                                if ((r9_2 + 4) <= i)
                                {
                                    arg1[1] += 4;
                                    int32_t r9_3 = arg1[1];
                                    int32_t rsi_1 = *((r9_3 - 4) + r11_1);
                                    
                                    if (r10_2 != 0)
                                        rsi_1 = _bswap(rsi_1);
                                    
                                    if (rdx_2 > 0x64)
                                    {
                                        arg1[1] = rdx_2;
                                        int64_t rdx_3 = 0;
                                        
                                        while ((arg1[1] + 1) <= i)
                                        {
                                            arg1[1] += 1;
                                            char rax_19 = *((arg1[1] - 1) + r11_1);
                                            
                                            if (rdx_3 < 0x104)
                                                *(&str1 + rdx_3) = rax_19;
                                            
                                            rdx_3 += 1;
                                            
                                            if (rax_19 == 0)
                                            {
                                                if (rdx_3 >= 0x104)
                                                    char var_35_1 = 0;
                                                else
                                                    *(&str1 + rdx_3) = rax_19;
                                                
                                                arg1[1] = r9_3;
                                                break;
                                            }
                                        }
                                    }
                                    
                                    if (strstr(&str1, "-skin") != 0)
                                    {
                                        int32_t rdi_1 = arg1[1];
                                        sub_180008870(arg1, rsi_1);
                                        arg1[1] = rdi_1;
                                    }
                                    
                                    rbp_1 += 1;
                                    
                                    if (rbp_1 >= arg2)
                                        goto label_18000882c;
                                    
                                    continue;
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
        else
        {
            while (true)
            {
                int64_t rdx = *arg1;
                
                if (rdx != 0)
                {
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= r8)
                    {
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r10_1 = arg1[1];
                            int32_t rdx_1 = *((r10_1 - 4) + rdx);
                            
                            if (arg1[2] != 0)
                                rdx_1 = _bswap(rdx_1);
                            
                            if ((r10_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                sub_180005050(arg1, rdx_1, &str1);
                                r9_1 += 1;
                                
                                if (r9_1 >= arg2)
                                    goto label_180008707;
                                
                                continue;
                            }
                        }
                    }
                }
                
                result = 0;
                break;
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_158));
    return result;
}

uint64_t sub_180008870(int64_t* arg1, int32_t arg2)
{
    void var_1e8;
    int64_t rax_1 = (__security_cookie ^ &var_1e8);
    uint64_t result;
    
    if (arg2 != 0)
    {
        int64_t r8_1 = *arg1;
        int128_t var_188;
        __builtin_memcpy(&var_188, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
        arg1[1] = arg2;
        
        if ((r8_1 == 0 || (arg2 + 4) > *(arg1 + 0xc)))
            result = 0;
        else
        {
            arg1[1] = (arg2 + 4);
            int32_t rdi_1 = *(arg2 + r8_1);
            
            if (arg1[2] != 0)
                rdi_1 = _bswap(rdi_1);
            
            if (sub_18001d8d0(arg1, &var_188) == 0)
                result = 0;
            else
            {
                void var_148;
                sub_180005050(arg1, rdi_1, &var_148);
                int64_t r9_1 = *arg1;
                
                if (r9_1 == 0)
                    result = 0;
                else
                {
                    int32_t rdx_2 = *(arg1 + 0xc);
                    int32_t r10_2 = (arg1[1] + 4);
                    
                    if (r10_2 > rdx_2)
                        result = 0;
                    else
                    {
                        int32_t r8_3 = arg1[2];
                        arg1[1] = r10_2;
                        int32_t rsi_1 = *((r10_2 - 4) + r9_1);
                        
                        if (r8_3 != 0)
                            rsi_1 = _bswap(rsi_1);
                        
                        int32_t r10_3;
                        int32_t r11_1;
                        
                        if ((r10_2 + 4) <= rdx_2)
                        {
                            arg1[1] += 4;
                            r10_3 = arg1[1];
                            r11_1 = *((r10_3 - 4) + r9_1);
                            
                            if (r8_3 != 0)
                                r11_1 = _bswap(r11_1);
                        }
                        
                        if (((r10_2 + 4) > rdx_2 || (r10_3 + 4) > rdx_2))
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t r10_4 = arg1[1];
                            int32_t rbp_1 = *((r10_4 - 4) + r9_1);
                            
                            if (r8_3 != 0)
                                rbp_1 = _bswap(rbp_1);
                            
                            if ((r10_4 + 4) > rdx_2)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r10_5 = arg1[1];
                                int32_t r14_1 = *((r10_5 - 4) + r9_1);
                                
                                if (r8_3 != 0)
                                    r14_1 = _bswap(r14_1);
                                
                                if ((r10_5 + 4) > rdx_2)
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t r10_6 = arg1[1];
                                    int32_t r15_1 = *((r10_6 - 4) + r9_1);
                                    
                                    if (r8_3 != 0)
                                        r15_1 = _bswap(r15_1);
                                    
                                    if ((r10_6 + 4) > rdx_2)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r10_7 = arg1[1];
                                        int32_t r12_1 = *((r10_7 - 4) + r9_1);
                                        
                                        if (r8_3 != 0)
                                            r12_1 = _bswap(r12_1);
                                        
                                        if ((r10_7 + 4) > rdx_2)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] += 4;
                                            int32_t r10_8 = arg1[1];
                                            int32_t r13_1 = *((r10_8 - 4) + r9_1);
                                            
                                            if (r8_3 != 0)
                                                r13_1 = _bswap(r13_1);
                                            
                                            if ((r10_8 + 4) > rdx_2)
                                            {
                                            labelid_d:
                                                result = 0;
                                            }
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_9 = arg1[1];
                                                int32_t rax_20 = *((r10_9 - 4) + r9_1);
                                                int32_t var_1c8_1 = rax_20;
                                                
                                                if (r8_3 != 0)
                                                    var_1c8_1 = _bswap(rax_20);
                                                
                                                if ((r10_9 + 4) > rdx_2)
                                                {
                                                labelid_d:
                                                    result = 0;
                                                }
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r10_10 = arg1[1];
                                                    int32_t rax_24 = *((r10_10 - 4) + r9_1);
                                                    int32_t var_1c0_1 = rax_24;
                                                    
                                                    if (r8_3 != 0)
                                                        var_1c0_1 = _bswap(rax_24);
                                                    
                                                    if ((r10_10 + 4) > rdx_2)
                                                    {
                                                    label_180008d91:
                                                        result = 0;
                                                    }
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_11 = arg1[1];
                                                        int32_t rax_28 = *((r10_11 - 4) + r9_1);
                                                        int32_t var_1c4_1 = rax_28;
                                                        
                                                        if (r8_3 != 0)
                                                            var_1c4_1 = _bswap(rax_28);
                                                        
                                                        if ((r10_11 + 4) > rdx_2)
                                                        {
                                                        label_180008d91_1:
                                                            result = 0;
                                                        }
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r10_12 = arg1[1];
                                                            int32_t rax_32 = *((r10_12 - 4) + r9_1);
                                                            int32_t var_1b8_1 = rax_32;
                                                            
                                                            if (r8_3 != 0)
                                                                var_1b8_1 = _bswap(rax_32);
                                                            
                                                            if ((r10_12 + 4) > rdx_2)
                                                            {
                                                            label_180008d91_2:
                                                                result = 0;
                                                            }
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rax_37 = *((arg1[1] - 4) + r9_1);
                                                                int32_t var_1bc_1 = rax_37;
                                                                
                                                                if (r8_3 != 0)
                                                                    var_1bc_1 = _bswap(rax_37);
                                                                
                                                                if (r11_1 != 0)
                                                                    arg1[1] = r11_1;
                                                                
                                                                int32_t rdi_2 = 0;
                                                                int32_t r9_2 = 0;
                                                                
                                                                if (rsi_1 != 0)
                                                                {
                                                                    do
                                                                    {
                                                                        int64_t rdx_3 = *arg1;
                                                                        
                                                                        if (rdx_3 == 0)
                                                                            goto label_180008d91_2;
                                                                        
                                                                        if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                            goto label_180008d91_2;
                                                                        
                                                                        arg1[1] += 4;
                                                                        int32_t rdx_4 = *((arg1[1] - 4) + rdx_3);
                                                                        
                                                                        if (arg1[2] != 0)
                                                                            rdx_4 = _bswap(rdx_4);
                                                                        
                                                                        sub_180005050(arg1, rdx_4, &var_148);
                                                                        r9_2 += 1;
                                                                    } while (r9_2 < rsi_1);
                                                                }
                                                                
                                                                if (r14_1 != 0)
                                                                    arg1[1] = r14_1;
                                                                
                                                                uint32_t rbp_2 = (rbp_1 >> 4);
                                                                int32_t rsi_2 = 0;
                                                                
                                                                if (rbp_2 != 0)
                                                                {
                                                                    do
                                                                    {
                                                                        __builtin_memcpy(&var_188, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
                                                                        
                                                                        if (sub_18001d8d0(arg1, &var_188) == 0)
                                                                            goto label_180008d91_2;
                                                                        
                                                                        rsi_2 += 1;
                                                                    } while (rsi_2 < rbp_2);
                                                                }
                                                                
                                                                if (r12_1 != 0)
                                                                    arg1[1] = r12_1;
                                                                
                                                                int32_t rcx_3 = 0;
                                                                
                                                                if (r15_1 != 0)
                                                                {
                                                                    do
                                                                    {
                                                                        if (*arg1 == 0)
                                                                            goto label_180008d91_2;
                                                                        
                                                                        if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                            goto label_180008d91_2;
                                                                        
                                                                        arg1[1] += 4;
                                                                        rcx_3 += 1;
                                                                    } while (rcx_3 < r15_1);
                                                                }
                                                                
                                                                if (var_1c8_1 != 0)
                                                                    arg1[1] = var_1c8_1;
                                                                
                                                                int32_t rcx_4 = 0;
                                                                
                                                                if (r13_1 != 0)
                                                                {
                                                                    do
                                                                    {
                                                                        if (*arg1 == 0)
                                                                            goto label_180008d91_2;
                                                                        
                                                                        int32_t rax_48 = (arg1[1] + 1);
                                                                        
                                                                        if (rax_48 > *(arg1 + 0xc))
                                                                            goto label_180008d91_2;
                                                                        
                                                                        rcx_4 += 1;
                                                                        arg1[1] = rax_48;
                                                                    } while (rcx_4 < r13_1);
                                                                }
                                                                
                                                                int32_t rax_49 = arg1[1];
                                                                int32_t rcx_6 = (rax_49 & 0xfffffffc);
                                                                int32_t rax_50 = (rcx_6 + 4);
                                                                
                                                                if ((rax_49 & 3) <= 0)
                                                                    rax_50 = rcx_6;
                                                                
                                                                if (var_1c4_1 != 0)
                                                                    rax_50 = var_1c4_1;
                                                                
                                                                int32_t rcx_8 = 0;
                                                                arg1[1] = rax_50;
                                                                
                                                                if (var_1c0_1 != 0)
                                                                {
                                                                    do
                                                                    {
                                                                        if (*arg1 == 0)
                                                                            goto label_180008d91_2;
                                                                        
                                                                        int32_t rax_52 = (arg1[1] + 2);
                                                                        
                                                                        if (rax_52 > *(arg1 + 0xc))
                                                                            goto label_180008d91_2;
                                                                        
                                                                        rcx_8 += 1;
                                                                        arg1[1] = rax_52;
                                                                    } while (rcx_8 < var_1c0_1);
                                                                }
                                                                
                                                                int32_t rax_53 = arg1[1];
                                                                int32_t rcx_10 = (rax_53 & 0xfffffffc);
                                                                int32_t rax_54 = (rcx_10 + 4);
                                                                
                                                                if ((rax_53 & 3) <= 0)
                                                                    rax_54 = rcx_10;
                                                                
                                                                if (var_1bc_1 != 0)
                                                                    rax_54 = var_1bc_1;
                                                                
                                                                arg1[1] = rax_54;
                                                                
                                                                if (var_1b8_1 != 0)
                                                                {
                                                                    do
                                                                    {
                                                                        int64_t var_1ac_1 = 0;
                                                                        int32_t var_1b0 = 0;
                                                                        int64_t var_19c_1 = 0;
                                                                        int32_t var_1a0 = 0;
                                                                        
                                                                        if (sub_18001d5c0(arg1, &var_1b0) == 0)
                                                                            goto label_180008d91_2;
                                                                        
                                                                        if (sub_18001d5c0(arg1, &var_1a0) == 0)
                                                                            goto label_180008d91_2;
                                                                        
                                                                        rdi_2 += 1;
                                                                    } while (rdi_2 < var_1b8_1);
                                                                }
                                                                
                                                                result = 1;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    else
        result = (arg2 + 1);
    
    __security_check_cookie((rax_1 ^ &var_1e8));
    return result;
}

uint64_t PDBCommon::CopyTo(int64_t* arg1, int64_t arg2, int32_t arg3)
{
    void var_258;
    int64_t rax_1 = (__security_cookie ^ &var_258);
    uint64_t result;
    
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        void var_238;
        memset(&var_238, 0, 0x104);
        void var_128;
        memset(&var_128, 0, 0x104);
        int64_t r10_1 = *arg1;
        
        if (r10_1 == 0)
            result = 0;
        else
        {
            int32_t r8 = *(arg1 + 0xc);
            
            if ((arg3 + 4) > r8)
                result = 0;
            else
            {
                int32_t r11_1 = arg1[2];
                arg1[1] = (arg3 + 4);
                int32_t r9_1 = *(arg3 + r10_1);
                
                if (r11_1 != 0)
                    r9_1 = _bswap(r9_1);
                
                if ((arg3 + 8) > r8)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t rdx_1 = arg1[1];
                    int32_t rsi_1 = *((rdx_1 - 4) + r10_1);
                    
                    if (r11_1 != 0)
                        rsi_1 = _bswap(rsi_1);
                    
                    if ((rdx_1 + 4) > r8)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t rdx_2 = arg1[1];
                        int32_t rbp_1 = *((rdx_2 - 4) + r10_1);
                        
                        if (r11_1 != 0)
                            rbp_1 = _bswap(rbp_1);
                        
                        if ((rdx_2 + 4) > r8)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t rdi_1 = *((arg1[1] - 4) + r10_1);
                            
                            if (r11_1 != 0)
                                rdi_1 = _bswap(rdi_1);
                            
                            sub_180005050(arg1, r9_1, &var_238);
                            sub_180005050(arg1, rsi_1, &var_128);
                            void* rax_10 = sub_180001a00(&data_1800306f0);
                            
                            if (rax_10 != 0)
                            {
                                void* rdx_5 = &var_238;
                                char i;
                                
                                do
                                {
                                    i = *rdx_5;
                                    *((rax_10 - &var_238) + rdx_5) = i;
                                    rdx_5 += 1;
                                } while (i != 0);
                                void* rdx_6 = &var_128;
                                char i_1;
                                
                                do
                                {
                                    i_1 = *rdx_6;
                                    *(((rax_10 - &var_128) + 0x104) + rdx_6) = i_1;
                                    rdx_6 += 1;
                                } while (i_1 != 0);
                                *(rax_10 + 0x514) = 0xffffffff;
                            }
                            
                            data_180030748 = 0;
                            sub_180008fc0(arg1, 0, rdi_1, rbp_1);
                            result = 1;
                        }
                    }
                }
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_258));
    return result;
}

int64_t sub_180008fc0(int64_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    void var_3e8;
    int64_t rax_1 = (__security_cookie ^ &var_3e8);
    int64_t result;
    
    if (((arg3 != 0 && arg3 >= 0x64) && arg3 < *(arg1 + 0xc)))
    {
        arg1[1] = arg3;
        int32_t rax_3 = (data_180030728 - 1);
        int32_t var_3ac_1 = 0;
        
        if (arg4 == 0)
        {
        label_1800093e8:
            result = 1;
        }
        else
        {
            while (true)
            {
                void var_358;
                memset(&var_358, 0, 0x104);
                void var_248;
                memset(&var_248, 0, 0x104);
                void var_138;
                memset(&var_138, 0, 0x104);
                int64_t r9 = *arg1;
                
                if (r9 != 0)
                {
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= r8)
                    {
                        arg1[1] += 4;
                        int32_t r11_1 = arg1[1];
                        int32_t r10_1 = arg1[2];
                        int32_t rdx = *((r11_1 - 4) + r9);
                        
                        if (r10_1 != 0)
                            rdx = _bswap(rdx);
                        
                        if ((r11_1 + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r11_2 = arg1[1];
                            int32_t rbx_1 = *((r11_2 - 4) + r9);
                            
                            if (r10_1 != 0)
                                rbx_1 = _bswap(rbx_1);
                            
                            if ((r11_2 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t r9_1 = *((arg1[1] - 4) + r9);
                                
                                if (r10_1 != 0)
                                    r9_1 = _bswap(r9_1);
                                
                                sub_180005050(arg1, rdx, &var_358);
                                sub_180005050(arg1, rbx_1, &var_248);
                                sub_180005050(arg1, r9_1, &var_138);
                                int64_t var_38c_1 = 0;
                                int32_t var_390 = 0;
                                int64_t var_368_1 = 0;
                                int64_t var_370 = 0;
                                int64_t var_37c_1 = 0;
                                int32_t var_380 = 0;
                                
                                if (((sub_18001d5c0(arg1, &var_390) != 0 && sub_18001d710(arg1, &var_370) != 0) && (sub_18001d5c0(arg1, &var_380) != 0 && (*arg1 != 0 && (arg1[1] + 4) <= *(arg1 + 0xc)))))
                                {
                                    arg1[1] += 4;
                                    data_180030748 += 1;
                                    int64_t r8_4 = *arg1;
                                    
                                    if (r8_4 != 0)
                                    {
                                        int32_t rdx_6 = *(arg1 + 0xc);
                                        
                                        if ((arg1[1] + 4) <= rdx_6)
                                        {
                                            arg1[1] += 4;
                                            int32_t r9_2 = arg1[1];
                                            int32_t r10_2 = arg1[2];
                                            int32_t rax_20 = *((r9_2 - 4) + r8_4);
                                            int32_t var_3b0_1 = rax_20;
                                            
                                            if (r10_2 != 0)
                                                var_3b0_1 = _bswap(rax_20);
                                            
                                            if ((r9_2 + 4) <= rdx_6)
                                            {
                                                arg1[1] += 4;
                                                int32_t r9_3 = arg1[1];
                                                int32_t rbx_2 = *((r9_3 - 4) + r8_4);
                                                int32_t var_3b8_1 = rbx_2;
                                                
                                                if (r10_2 != 0)
                                                {
                                                    rbx_2 = _bswap(rbx_2);
                                                    var_3b8_1 = rbx_2;
                                                }
                                                
                                                if ((r9_3 + 4) <= rdx_6)
                                                {
                                                    arg1[1] += 4;
                                                    int32_t rax_25 = arg1[1];
                                                    
                                                    if ((rax_25 + 4) <= rdx_6)
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r9_4 = arg1[1];
                                                        int32_t rax_28 = *((r9_4 - 4) + r8_4);
                                                        int32_t var_3b4_1 = rax_28;
                                                        
                                                        if (r10_2 != 0)
                                                            var_3b4_1 = _bswap(rax_28);
                                                        
                                                        int32_t rax_30 = (r9_4 + 4);
                                                        
                                                        if (data_1800306f0 <= 0x101)
                                                            goto label_180009288;
                                                        
                                                        if (rax_30 <= rdx_6)
                                                        {
                                                            arg1[1] += 4;
                                                            rax_30 = (arg1[1] + 4);
                                                        label_180009288:
                                                            
                                                            if (rax_30 <= rdx_6)
                                                            {
                                                                arg1[1] += 4;
                                                                void* rax_32 = sub_180001a00(&data_1800306f0);
                                                                
                                                                if (rax_32 != 0)
                                                                {
                                                                    char* rdx_7 = &var_358;
                                                                    char i;
                                                                    
                                                                    do
                                                                    {
                                                                        i = *rdx_7;
                                                                        rdx_7[(rax_32 - &var_358)] = i;
                                                                        rdx_7 = &rdx_7[1];
                                                                    } while (i != 0);
                                                                    void* rcx_6 = &var_248;
                                                                    char i_1;
                                                                    
                                                                    do
                                                                    {
                                                                        i_1 = *rcx_6;
                                                                        *((rcx_6 + (rax_32 - &var_248)) + 0x104) = i_1;
                                                                        rcx_6 += 1;
                                                                    } while (i_1 != 0);
                                                                    void* rcx_7 = &var_138;
                                                                    char i_2;
                                                                    
                                                                    do
                                                                    {
                                                                        i_2 = *rcx_7;
                                                                        *((rcx_7 + (rax_32 - &var_138)) + 0x208) = i_2;
                                                                        rcx_7 += 1;
                                                                    } while (i_2 != 0);
                                                                    *(rax_32 + 0x520) = var_390;
                                                                    uint128_t zmm0_1 = var_370;
                                                                    *(rax_32 + 0x514) = rax_3;
                                                                    *(rax_32 + 0x538) = zmm0_1;
                                                                    *(rax_32 + 0x528) = *var_38c_1[4];
                                                                    *(rax_32 + 0x52c) = var_380;
                                                                    *(rax_32 + 0x534) = *var_37c_1[4];
                                                                }
                                                                
                                                                if (data_1800306f4 != 0)
                                                                {
                                                                    int32_t rax_37 = (r9_2 + rbx_2);
                                                                    
                                                                    if (rbx_2 == 0)
                                                                        rax_37 = rbx_2;
                                                                    
                                                                    var_3b8_1 = rax_37;
                                                                    
                                                                    if (var_3b4_1 != 0)
                                                                    {
                                                                        var_3b4_1 += rax_25;
                                                                        var_3b8_1 = rax_37;
                                                                    }
                                                                }
                                                                
                                                                int32_t rbx_4 = arg1[1];
                                                                sub_180009420(arg1, rax_32, sub_180008fc0(arg1, (arg2 + 1), var_3b8_1, var_3b0_1), var_3b4_1);
                                                                arg1[1] = rbx_4;
                                                                int32_t rbx_6 = (var_3ac_1 + 1);
                                                                var_3ac_1 = rbx_6;
                                                                
                                                                if (rbx_6 >= arg4)
                                                                    goto label_1800093e8;
                                                                
                                                                continue;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                
                result = 0;
                break;
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_3e8));
    return result;
}

int64_t sub_180009420(int64_t* arg1, void* arg2, int64_t arg3, int32_t arg4)
{
    if ((arg4 == 0 || (arg4 < 0x64 || arg4 >= *(arg1 + 0xc))))
        return 1;
    
    arg1[1] = arg4;
    data_180030748 += 1;
    int64_t r9 = *arg1;
    
    if (r9 != 0)
    {
        int32_t r10_1 = *(arg1 + 0xc);
        uint64_t r8_1 = (arg1[1] + 4);
        
        if (r8_1 <= r10_1)
        {
            int32_t rbx = arg1[2];
            arg1[1] = r8_1;
            int32_t rdx = *((r8_1 - 4) + r9);
            
            if (rbx != 0)
                rdx = _bswap(rdx);
            
            if ((r8_1 + 4) > r10_1)
                return 0;
            
            arg1[1] += 4;
            int32_t r9_1 = *((arg1[1] - 4) + r9);
            
            if (rbx != 0)
                r9_1 = _bswap(r9_1);
            
            *(arg2 + 0x518) = rdx;
            
            if ((data_1800306f4 != 0 && r9_1 != 0))
                r9_1 += r8_1;
            
            int32_t rbx_1 = arg1[1];
            sub_180009500(arg1, arg2, r8_1, r9_1, rdx);
            arg1[1] = rbx_1;
            return 1;
        }
    }
    
    return 0;
}

uint64_t sub_180009500(int64_t* arg1, int64_t arg2, int64_t arg3, int32_t arg4, int32_t arg5)
{
    void var_278;
    int64_t rax_1 = (__security_cookie ^ &var_278);
    int64_t* rbx = arg1;
    uint64_t result;
    
    if (arg4 == 0)
        result = (arg4 + 1);
    else if (arg4 < 0x64)
        result = 1;
    else
    {
        int32_t rdi_1 = *(arg1 + 0xc);
        
        if (arg4 >= rdi_1)
            result = 1;
        else
        {
            arg1[1] = arg4;
            void var_248;
            
            if (arg5 == 3)
            {
                void var_138;
                memset(&var_138, 0, 0x104);
                int64_t rdx = *rbx;
                
                if ((rdx == 0 || (arg4 + 4) > rdi_1))
                    result = 0;
                else
                {
                    int32_t r8 = rbx[2];
                    rbx[1] = (arg4 + 4);
                    int32_t r10_1 = *(arg4 + rdx);
                    
                    if (r8 != 0)
                        r10_1 = _bswap(r10_1);
                    
                    if ((arg4 + 8) > rdi_1)
                        result = 0;
                    else
                    {
                        rbx[1] += 4;
                        int32_t r9 = rbx[1];
                        int32_t rsi_2 = *((r9 - 4) + rdx);
                        
                        if (r8 != 0)
                            rsi_2 = _bswap(rsi_2);
                        
                        if ((r9 + 4) > rdi_1)
                            result = 0;
                        else
                        {
                            rbx[1] += 4;
                            int32_t r9_1 = *((rbx[1] - 4) + rdx);
                            
                            if (r8 != 0)
                                r9_1 = _bswap(r9_1);
                            
                            sub_180005050(rbx, r10_1, &var_248);
                            sub_180005050(rbx, rsi_2, &var_138);
                            sub_180005050(rbx, r9_1, &var_248);
                            int64_t r9_2 = *rbx;
                            
                            if (r9_2 == 0)
                                result = 0;
                            else
                            {
                                int32_t rcx_2 = *(rbx + 0xc);
                                
                                if ((rbx[1] + 4) > rcx_2)
                                    result = 0;
                                else
                                {
                                    rbx[1] += 4;
                                    int32_t r10_2 = rbx[1];
                                    
                                    if ((r10_2 + 4) > rcx_2)
                                        result = 0;
                                    else
                                    {
                                        rbx[1] += 4;
                                        int32_t r9_3 = *((rbx[1] - 4) + r9_2);
                                        
                                        if (rbx[2] != 0)
                                            r9_3 = _bswap(r9_3);
                                        
                                        void* r8_5 = (arg2 - &var_138);
                                        void* rcx_3 = &var_138;
                                        char i;
                                        
                                        do
                                        {
                                            i = *rcx_3;
                                            *((r8_5 + rcx_3) + 0x30c) = i;
                                            rcx_3 += 1;
                                        } while (i != 0);
                                        
                                        if ((data_1800306f4 != 0 && r9_3 != 0))
                                            r9_3 += r10_2;
                                        
                                        int32_t rdi_2 = rbx[1];
                                        sub_180009870(rbx, arg2, r8_5, r9_3);
                                        rbx[1] = rdi_2;
                                        result = 1;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if (arg5 == 2)
            {
                int64_t r8_6 = *arg1;
                
                if ((r8_6 == 0 || (arg4 + 4) > rdi_1))
                    result = 0;
                else
                {
                    int32_t r10_3 = arg1[2];
                    arg1[1] = (arg4 + 4);
                    int32_t rdx_5 = *(arg4 + r8_6);
                    
                    if (r10_3 != 0)
                        rdx_5 = _bswap(rdx_5);
                    
                    if ((arg4 + 8) > rdi_1)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t r9_4 = arg1[1];
                        int32_t rsi_4 = *((r9_4 - 4) + r8_6);
                        
                        if (r10_3 != 0)
                            rsi_4 = _bswap(rsi_4);
                        
                        if ((r9_4 + 4) > rdi_1)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t r9_5 = *((arg1[1] - 4) + r8_6);
                            
                            if (r10_3 != 0)
                                r9_5 = _bswap(r9_5);
                            
                            sub_180005050(arg1, rdx_5, &var_248);
                            sub_180005050(arg1, rsi_4, &var_248);
                            sub_180005050(arg1, r9_5, &var_248);
                            
                            if (*arg1 == 0)
                                result = 0;
                            else
                            {
                                int32_t rcx_7 = *(arg1 + 0xc);
                                
                                if ((rbx[1] + 4) > rcx_7)
                                    result = 0;
                                else
                                {
                                    rbx[1] += 4;
                                    
                                    if ((rbx[1] + 4) > rcx_7)
                                        result = 0;
                                    else
                                    {
                                        rbx[1] += 4;
                                        
                                        if ((rbx[1] + 4) > rcx_7)
                                            result = 0;
                                        else
                                        {
                                            rbx[1] += 4;
                                            
                                            if ((rbx[1] + 4) > rcx_7)
                                                result = 0;
                                            else
                                            {
                                                rbx[1] += 4;
                                                
                                                if ((rbx[1] + 4) > rcx_7)
                                                    result = 0;
                                                else
                                                {
                                                    rbx[1] += 4;
                                                    result = 1;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else if ((arg5 == 1 || arg5 == 4))
            {
                int64_t r8_10 = *arg1;
                
                if ((r8_10 == 0 || (arg4 + 4) > rdi_1))
                    result = 0;
                else
                {
                    int32_t r11_1 = arg1[2];
                    arg1[1] = (arg4 + 4);
                    int32_t rdx_8 = *(arg4 + r8_10);
                    
                    if (r11_1 != 0)
                        rdx_8 = _bswap(rdx_8);
                    
                    if ((arg4 + 8) > rdi_1)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t r10_4 = arg1[1];
                        int32_t r9_6 = *((r10_4 - 4) + r8_10);
                        
                        if (r11_1 != 0)
                            r9_6 = _bswap(r9_6);
                        
                        if ((r10_4 + 4) > rdi_1)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            sub_180005050(arg1, rdx_8, &var_248);
                            sub_180005050(arg1, r9_6, &var_248);
                            result = 1;
                        }
                    }
                }
            }
            else
                result = 1;
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_278));
    return result;
}

int64_t sub_180009870(int64_t* arg1, int64_t arg2, int64_t arg3, int32_t arg4)
{
    void var_258;
    int64_t rax_1 = (__security_cookie ^ &var_258);
    int64_t result;
    
    if (((arg4 == 0 || arg4 < 0x64) || arg4 >= *(arg1 + 0xc)))
        result = 1;
    else
    {
        arg1[1] = arg4;
        void var_238;
        memset(&var_238, 0, 0x104);
        int64_t r8 = *arg1;
        int32_t rdx;
        int32_t r10_1;
        
        if ((r8 != 0 && (arg4 + 4) <= *(arg1 + 0xc)))
        {
            r10_1 = arg1[2];
            arg1[1] = (arg4 + 4);
            rdx = *(arg4 + r8);
            
            if (r10_1 != 0)
                rdx = _bswap(rdx);
        }
        
        if (((r8 == 0 || (arg4 + 4) > *(arg1 + 0xc)) || (arg4 + 8) > *(arg1 + 0xc)))
            result = 0;
        else
        {
            arg1[1] += 4;
            int32_t r9 = *((arg1[1] - 4) + r8);
            
            if (r10_1 != 0)
                r9 = _bswap(r9);
            
            void var_128;
            sub_180005050(arg1, rdx, &var_128);
            sub_180005050(arg1, r9, &var_238);
            void* rcx_2 = &var_238;
            char i;
            
            do
            {
                i = *rcx_2;
                *((rcx_2 + (arg2 - &var_238)) + 0x410) = i;
                rcx_2 += 1;
            } while (i != 0);
            result = 1;
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_258));
    return result;
}

int64_t sub_180009990(int64_t* arg1, void* arg2)
{
    void var_5d8;
    int64_t rax_1 = (__security_cookie ^ &var_5d8);
    int64_t result;
    
    if (*arg1 == 0)
    {
    labelid_ce:
        result = 0;
    }
    else
    {
        int32_t rcx = *(arg1 + 0xc);
        int32_t r8_2 = (arg1[1] + 4);
        
        if (r8_2 > rcx)
        {
        labelid_ce:
            result = 0;
        }
        else
        {
            arg1[1] = r8_2;
            
            if ((r8_2 + 4) > rcx)
            {
            labelid_ce:
                result = 0;
            }
            else
            {
                arg1[1] = (r8_2 + 4);
                
                if ((r8_2 + 8) > rcx)
                {
                labelid_ce:
                    result = 0;
                }
                else
                {
                    arg1[1] += 4;
                    int32_t rdx = arg1[1];
                    
                    if ((rdx + 4) > rcx)
                    {
                    labelid_ce:
                        result = 0;
                    }
                    else
                    {
                        arg1[1] = (rdx + 4);
                        
                        if ((rdx + 8) > rcx)
                        {
                        labelid_ce:
                            result = 0;
                        }
                        else
                        {
                            arg1[1] += 4;
                            int32_t rdx_2 = arg1[1];
                            
                            if ((rdx_2 + 4) > rcx)
                            {
                            labelid_ce:
                                result = 0;
                            }
                            else
                            {
                                arg1[1] = (rdx_2 + 4);
                                int32_t rax_8 = *(arg2 + 8);
                                
                                if (rax_8 == 0)
                                {
                                labelid_ce:
                                    result = 0;
                                }
                                else
                                {
                                    arg1[1] = rax_8;
                                    int32_t r8_4 = *(arg2 + 0x10);
                                    
                                    if ((rax_8 + 4) > rcx)
                                    {
                                    labelid_ce:
                                        result = 0;
                                    }
                                    else
                                    {
                                        arg1[1] = (rax_8 + 4);
                                        
                                        if ((rax_8 + 8) > rcx)
                                        {
                                        labelid_ce:
                                            result = 0;
                                        }
                                        else
                                        {
                                            arg1[1] = (rax_8 + 8);
                                            
                                            if ((rax_8 + 0xc) > rcx)
                                            {
                                            label_18000a18c:
                                                result = 0;
                                            }
                                            else
                                            {
                                                arg1[1] = (rax_8 + 0xc);
                                                
                                                if ((rax_8 + 0x10) > rcx)
                                                {
                                                label_18000a18c_1:
                                                    result = 0;
                                                }
                                                else
                                                {
                                                    arg1[1] = (rax_8 + 0x10);
                                                    
                                                    if ((rax_8 + 0x14) > rcx)
                                                    {
                                                    label_18000a18c_2:
                                                        result = 0;
                                                    }
                                                    else
                                                    {
                                                        int32_t rax_12 = (rax_8 + 0x14);
                                                        arg1[1] = rax_12;
                                                        int32_t i = 0;
                                                        
                                                        if ((r8_4 - 5) > 0)
                                                        {
                                                            do
                                                            {
                                                                rax_12 += 4;
                                                                
                                                                if (rax_12 > rcx)
                                                                    goto label_18000a18c_2;
                                                                
                                                                i += 1;
                                                                arg1[1] = rax_12;
                                                            } while (i < (r8_4 - 5));
                                                        }
                                                        
                                                        int32_t rdi_1 = *(arg2 + 0x1c);
                                                        void lpMultiByteStr;
                                                        
                                                        if (rax_12 >= rdi_1)
                                                        {
                                                        label_180009afb:
                                                            int32_t rax_14 = *(arg2 + 0x1c);
                                                            
                                                            if (rax_14 != 0)
                                                                arg1[1] = rax_14;
                                                            
                                                            int64_t rdx_8 = *arg1;
                                                            
                                                            if ((rdx_8 != 0 && (arg1[1] + 4) <= *(arg1 + 0xc)))
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rdx_9 = *((arg1[1] - 4) + rdx_8);
                                                                
                                                                if (arg1[2] != 0)
                                                                    rdx_9 = _bswap(rdx_9);
                                                                
                                                                sub_180005050(arg1, rdx_9, &lpMultiByteStr);
                                                                int64_t i_1 = *arg1;
                                                                int32_t rcx_3 = 0;
                                                                
                                                                while (i_1 != 0)
                                                                {
                                                                    if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                        break;
                                                                    
                                                                    arg1[1] += 4;
                                                                    rcx_3 += 1;
                                                                    int32_t rax_21 = arg1[1];
                                                                    
                                                                    if (rcx_3 >= 6)
                                                                    {
                                                                        int32_t rdx_10 = *(arg1 + 0xc);
                                                                        int32_t rcx_4 = 0;
                                                                        
                                                                        while (true)
                                                                        {
                                                                            if (i_1 == 0)
                                                                                goto label_18000a188;
                                                                            
                                                                            rax_21 += 4;
                                                                            
                                                                            if (rax_21 > rdx_10)
                                                                                goto label_18000a188;
                                                                            
                                                                            rcx_4 += 1;
                                                                            arg1[1] = rax_21;
                                                                            
                                                                            if (rcx_4 >= 0xc)
                                                                            {
                                                                                if (i_1 == 0)
                                                                                    break;
                                                                                
                                                                                if ((rax_21 + 4) > rdx_10)
                                                                                    break;
                                                                                
                                                                                arg1[1] += 4;
                                                                                int32_t r9_1 = arg1[1];
                                                                                int32_t r10_1 = arg1[2];
                                                                                int32_t r15_1 = *((r9_1 - 4) + i_1);
                                                                                
                                                                                if (r10_1 != 0)
                                                                                    r15_1 = _bswap(r15_1);
                                                                                
                                                                                if ((r9_1 + 4) > rdx_10)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (r9_1 + 4);
                                                                                    int32_t r11_1 = *(r9_1 + i_1);
                                                                                    
                                                                                    if (r10_1 != 0)
                                                                                        r11_1 = _bswap(r11_1);
                                                                                    
                                                                                    if ((r9_1 + 8) > rdx_10)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t rcx_5 = arg1[1];
                                                                                        
                                                                                        if ((rcx_5 + 4) > rdx_10)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (rcx_5 + 4);
                                                                                            
                                                                                            if ((rcx_5 + 8) > rdx_10)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t r9_3 = arg1[1];
                                                                                                int32_t rax_30 = *((r9_3 - 4) + i_1);
                                                                                                int32_t var_594_1 = rax_30;
                                                                                                
                                                                                                if (r10_1 != 0)
                                                                                                    var_594_1 = _bswap(rax_30);
                                                                                                
                                                                                                if ((r9_3 + 4) > rdx_10)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (r9_3 + 4);
                                                                                                    int32_t rax_34 = *(r9_3 + i_1);
                                                                                                    int32_t var_598_1 = rax_34;
                                                                                                    
                                                                                                    if (r10_1 != 0)
                                                                                                        var_598_1 = _bswap(rax_34);
                                                                                                    
                                                                                                    if ((r9_3 + 8) > rdx_10)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t r9_5 = arg1[1];
                                                                                                        int32_t rdi_2 = *((r9_5 - 4) + i_1);
                                                                                                        int32_t var_5a4_1 = rdi_2;
                                                                                                        
                                                                                                        if (r10_1 != 0)
                                                                                                        {
                                                                                                            rdi_2 = _bswap(rdi_2);
                                                                                                            var_5a4_1 = rdi_2;
                                                                                                        }
                                                                                                        
                                                                                                        if ((r9_5 + 4) > rdx_10)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (r9_5 + 4);
                                                                                                            int32_t r14_1 = *(r9_5 + i_1);
                                                                                                            int32_t var_5a8_1 = r14_1;
                                                                                                            
                                                                                                            if (r10_1 != 0)
                                                                                                            {
                                                                                                                r14_1 = _bswap(r14_1);
                                                                                                                var_5a8_1 = r14_1;
                                                                                                            }
                                                                                                            
                                                                                                            if ((r9_5 + 8) > rdx_10)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t r9_7 = arg1[1];
                                                                                                                int32_t rbp_1 = *((r9_7 - 4) + i_1);
                                                                                                                int32_t var_59c_1 = rbp_1;
                                                                                                                
                                                                                                                if (r10_1 != 0)
                                                                                                                {
                                                                                                                    rbp_1 = _bswap(rbp_1);
                                                                                                                    var_59c_1 = rbp_1;
                                                                                                                }
                                                                                                                
                                                                                                                if ((r9_7 + 4) > rdx_10)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = (r9_7 + 4);
                                                                                                                    int32_t rsi_1 = *(r9_7 + i_1);
                                                                                                                    int32_t var_5a0_1 = rsi_1;
                                                                                                                    
                                                                                                                    if (r10_1 != 0)
                                                                                                                    {
                                                                                                                        rsi_1 = _bswap(rsi_1);
                                                                                                                        var_5a0_1 = rsi_1;
                                                                                                                    }
                                                                                                                    
                                                                                                                    if ((r9_7 + 8) > rdx_10)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t rcx_7 = arg1[1];
                                                                                                                        
                                                                                                                        if ((rcx_7 + 4) > rdx_10)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] = (rcx_7 + 4);
                                                                                                                            
                                                                                                                            if ((rcx_7 + 8) > rdx_10)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rcx_9 = arg1[1];
                                                                                                                                
                                                                                                                                if ((rcx_9 + 4) > rdx_10)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] = (rcx_9 + 4);
                                                                                                                                    
                                                                                                                                    if ((rcx_9 + 8) > rdx_10)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        int32_t rcx_11 = arg1[1];
                                                                                                                                        
                                                                                                                                        if ((rcx_11 + 4) > rdx_10)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            int32_t rcx_12 = (rcx_11 + 4);
                                                                                                                                            arg1[1] = rcx_12;
                                                                                                                                            
                                                                                                                                            if (data_1800306f0 <= 0x2fc)
                                                                                                                                                goto label_180009dce;
                                                                                                                                            
                                                                                                                                            if ((rcx_12 + 4) > rdx_10)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int32_t rcx_13 = arg1[1];
                                                                                                                                                
                                                                                                                                                if ((rcx_13 + 4) > rdx_10)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    rcx_12 = (rcx_13 + 4);
                                                                                                                                                    arg1[1] = rcx_12;
                                                                                                                                                label_180009dce:
                                                                                                                                                    
                                                                                                                                                    if ((rcx_12 + 4) > rdx_10)
                                                                                                                                                        result = 0;
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                        int32_t r9_9 = arg1[1];
                                                                                                                                                        
                                                                                                                                                        if ((r9_9 + 4) > rdx_10)
                                                                                                                                                            result = 0;
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] = (r9_9 + 4);
                                                                                                                                                            int32_t r13_1 = *(r9_9 + i_1);
                                                                                                                                                            
                                                                                                                                                            if (r10_1 != 0)
                                                                                                                                                                r13_1 = _bswap(r13_1);
                                                                                                                                                            
                                                                                                                                                            if ((r9_9 + 8) > rdx_10)
                                                                                                                                                                result = 0;
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                int32_t rcx_14 = arg1[1];
                                                                                                                                                                
                                                                                                                                                                if ((rcx_14 + 4) > rdx_10)
                                                                                                                                                                    result = 0;
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                    arg1[1] = (rcx_14 + 4);
                                                                                                                                                                    
                                                                                                                                                                    if ((rcx_14 + 8) > rdx_10)
                                                                                                                                                                        result = 0;
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                        int32_t rcx_16 = arg1[1];
                                                                                                                                                                        
                                                                                                                                                                        if ((rcx_16 + 4) > rdx_10)
                                                                                                                                                                            result = 0;
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                            arg1[1] = (rcx_16 + 4);
                                                                                                                                                                            
                                                                                                                                                                            if ((rcx_16 + 8) > rdx_10)
                                                                                                                                                                                result = 0;
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                                int32_t rcx_18 = arg1[1];
                                                                                                                                                                                
                                                                                                                                                                                if ((rcx_18 + 4) > rdx_10)
                                                                                                                                                                                    result = 0;
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                    arg1[1] = (rcx_18 + 4);
                                                                                                                                                                                    
                                                                                                                                                                                    if ((rcx_18 + 8) > rdx_10)
                                                                                                                                                                                        result = 0;
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                                        int32_t r9_11 = arg1[1];
                                                                                                                                                                                        
                                                                                                                                                                                        if ((r9_11 + 4) > rdx_10)
                                                                                                                                                                                            result = 0;
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                            arg1[1] = (r9_11 + 4);
                                                                                                                                                                                            int32_t r12_1 = *(r9_11 + i_1);
                                                                                                                                                                                            
                                                                                                                                                                                            if (r10_1 != 0)
                                                                                                                                                                                                r12_1 = _bswap(r12_1);
                                                                                                                                                                                            
                                                                                                                                                                                            if ((r9_11 + 8) > rdx_10)
                                                                                                                                                                                            {
                                                                                                                                                                                            labelid_8:
                                                                                                                                                                                                result = 0;
                                                                                                                                                                                            }
                                                                                                                                                                                            else
                                                                                                                                                                                            {
                                                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                                                int32_t rcx_20 = arg1[1];
                                                                                                                                                                                                
                                                                                                                                                                                                if ((rcx_20 + 4) > rdx_10)
                                                                                                                                                                                                {
                                                                                                                                                                                                labelid_8:
                                                                                                                                                                                                    result = 0;
                                                                                                                                                                                                }
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                    arg1[1] = (rcx_20 + 4);
                                                                                                                                                                                                    
                                                                                                                                                                                                    if ((rcx_20 + 8) > rdx_10)
                                                                                                                                                                                                    {
                                                                                                                                                                                                    labelid_8:
                                                                                                                                                                                                        result = 0;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                                                        int32_t rcx_22 = arg1[1];
                                                                                                                                                                                                        
                                                                                                                                                                                                        if ((rcx_22 + 4) > rdx_10)
                                                                                                                                                                                                        {
                                                                                                                                                                                                        labelid_8:
                                                                                                                                                                                                            result = 0;
                                                                                                                                                                                                        }
                                                                                                                                                                                                        else
                                                                                                                                                                                                        {
                                                                                                                                                                                                            int32_t rcx_23 = (rcx_22 + 4);
                                                                                                                                                                                                            arg1[1] = rcx_23;
                                                                                                                                                                                                            
                                                                                                                                                                                                            for (int32_t j = 0; j < 7; )
                                                                                                                                                                                                            {
                                                                                                                                                                                                                rcx_23 += 4;
                                                                                                                                                                                                                
                                                                                                                                                                                                                if (rcx_23 > rdx_10)
                                                                                                                                                                                                                    goto label_18000a174_2;
                                                                                                                                                                                                                
                                                                                                                                                                                                                j += 1;
                                                                                                                                                                                                                arg1[1] = rcx_23;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (r11_1 == 0)
                                                                                                                                                                                                            {
                                                                                                                                                                                                            label_18000a0d1:
                                                                                                                                                                                                                
                                                                                                                                                                                                                if (sub_18000a190(arg1, var_594_1, var_598_1) == 0)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                labelid_8:
                                                                                                                                                                                                                    result = 0;
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else if (sub_18000a7f0(arg1, rdi_2, r14_1) == 0)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                labelid_8:
                                                                                                                                                                                                                    result = 0;
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else
                                                                                                                                                                                                                {
                                                                                                                                                                                                                    int32_t rax_82;
                                                                                                                                                                                                                    int64_t rdx_21;
                                                                                                                                                                                                                    rax_82 = sub_18000b870(arg1, rbp_1, rsi_1);
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if (rax_82 == 0)
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                    label_18000a174:
                                                                                                                                                                                                                        result = 0;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                        int32_t rax_83;
                                                                                                                                                                                                                        int64_t r8_18;
                                                                                                                                                                                                                        rax_83 = sub_18000b660(arg1, rdx_21, r13_1);
                                                                                                                                                                                                                        
                                                                                                                                                                                                                        if (rax_83 == 0)
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                        label_18000a174_1:
                                                                                                                                                                                                                            result = 0;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else
                                                                                                                                                                                                                            result = sub_18000b0f0(arg1, rdi_2, r8_18, r12_1) != 0;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else
                                                                                                                                                                                                            {
                                                                                                                                                                                                                arg1[1] = r11_1;
                                                                                                                                                                                                                int32_t rax_68;
                                                                                                                                                                                                                
                                                                                                                                                                                                                if (r15_1 != 0)
                                                                                                                                                                                                                    rax_68 = sub_180001fd0(&data_1800306f0, r15_1);
                                                                                                                                                                                                                
                                                                                                                                                                                                                if ((r15_1 == 0 || rax_68 != 0))
                                                                                                                                                                                                                {
                                                                                                                                                                                                                    int32_t r14_2 = 0;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if (r15_1 != 0)
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                        do
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            memset(&lpMultiByteStr, 0, 0x104);
                                                                                                                                                                                                                            int64_t r8_7 = *arg1;
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if (r8_7 == 0)
                                                                                                                                                                                                                                goto label_18000a174_2;
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            int32_t rdx_12 = *(arg1 + 0xc);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if ((arg1[1] + 4) > rdx_12)
                                                                                                                                                                                                                                goto label_18000a174_2;
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                                                                            int32_t r9_13 = arg1[1];
                                                                                                                                                                                                                            int32_t r10_2 = arg1[2];
                                                                                                                                                                                                                            int32_t r11_2 = *((r9_13 - 4) + r8_7);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if (r10_2 != 0)
                                                                                                                                                                                                                                r11_2 = _bswap(r11_2);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if ((r9_13 + 4) > rdx_12)
                                                                                                                                                                                                                                goto label_18000a174_2;
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            arg1[1] = (r9_13 + 4);
                                                                                                                                                                                                                            int32_t rbp_2 = *(r9_13 + r8_7);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if (r10_2 != 0)
                                                                                                                                                                                                                                rbp_2 = _bswap(rbp_2);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if ((r9_13 + 8) > rdx_12)
                                                                                                                                                                                                                                goto label_18000a174_2;
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                                                                            int32_t r9_15 = arg1[1];
                                                                                                                                                                                                                            int32_t rsi_2 = *((r9_15 - 4) + r8_7);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if (r10_2 != 0)
                                                                                                                                                                                                                                rsi_2 = _bswap(rsi_2);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if ((r9_15 + 4) > rdx_12)
                                                                                                                                                                                                                                goto label_18000a174_2;
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            arg1[1] = (r9_15 + 4);
                                                                                                                                                                                                                            int32_t rdi_3 = *(r9_15 + r8_7);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if (r10_2 != 0)
                                                                                                                                                                                                                                rdi_3 = _bswap(rdi_3);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if ((r9_15 + 8) > rdx_12)
                                                                                                                                                                                                                                goto label_18000a174_2;
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                                                                            int32_t r9_17 = *((arg1[1] - 4) + r8_7);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if (r10_2 != 0)
                                                                                                                                                                                                                                r9_17 = _bswap(r9_17);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            sub_180005050(arg1, r11_2, &lpMultiByteStr);
                                                                                                                                                                                                                            void var_478;
                                                                                                                                                                                                                            sub_180005050(arg1, rbp_2, &var_478);
                                                                                                                                                                                                                            void var_368;
                                                                                                                                                                                                                            sub_180005050(arg1, rsi_2, &var_368);
                                                                                                                                                                                                                            void var_258;
                                                                                                                                                                                                                            sub_180005050(arg1, rdi_3, &var_258);
                                                                                                                                                                                                                            void var_148;
                                                                                                                                                                                                                            sub_180005050(arg1, r9_17, &var_148);
                                                                                                                                                                                                                            int64_t r9_18 = data_180030700;
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if (r9_18 != 0)
                                                                                                                                                                                                                                MultiByteToWideChar(0, MB_PRECOMPOSED, &lpMultiByteStr, 0xffffffff, ((r14_2 * 0x208) + r9_18), 0xff);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            r14_2 += 1;
                                                                                                                                                                                                                        } while (r14_2 < r15_1);
                                                                                                                                                                                                                        
                                                                                                                                                                                                                        rdi_2 = var_5a4_1;
                                                                                                                                                                                                                        rsi_1 = var_5a0_1;
                                                                                                                                                                                                                        rbp_1 = var_59c_1;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    r14_1 = var_5a8_1;
                                                                                                                                                                                                                    goto label_18000a0d1;
                                                                                                                                                                                                                }
                                                                                                                                                                                                                
                                                                                                                                                                                                            label_18000a174_2:
                                                                                                                                                                                                                result = 0;
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                                
                                                                                goto label_18000a165;
                                                                            }
                                                                        }
                                                                        
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            while (&lpMultiByteStr != 0)
                                                            {
                                                                if (sub_180004f90(arg1, &lpMultiByteStr) == 0)
                                                                    break;
                                                                
                                                                if (arg1[1] >= rdi_1)
                                                                    goto label_180009afb;
                                                            }
                                                        }
                                                    label_18000a188:
                                                        result = 0;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
label_18000a165:
    __security_check_cookie((rax_1 ^ &var_5d8));
    return result;
}

int64_t sub_18000a190(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_4b8;
    int64_t rax_1 = (__security_cookie ^ &var_4b8);
    int32_t result;
    
    if ((arg3 != 0 && arg2 != 0))
    {
        arg1[1] = arg3;
        result = sub_1800020d0(&data_1800306f0, arg2);
        
        if (result != 0)
        {
            int32_t i = 0;
            int32_t rbp_1 = 0;
            void var_488;
            void var_378;
            void var_268;
            void var_158;
            
            if (arg2 == 0)
            {
            label_18000a3bd:
                arg1[1] = arg3;
                int32_t r12_1 = 0;
                
                if (arg2 != 0)
                {
                    do
                    {
                        int64_t rdx_6 = *arg1;
                        void* r13_2 = ((r12_1 * 0x138) + data_180030710);
                        
                        if (rdx_6 == 0)
                            goto label_18000a595;
                        
                        int32_t r8_7 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) > r8_7)
                            goto label_18000a595;
                        
                        arg1[1] += 4;
                        int32_t r11_2 = arg1[1];
                        int32_t r9_6 = arg1[2];
                        int32_t r10_2 = *((r11_2 - 4) + rdx_6);
                        
                        if (r9_6 != 0)
                            r10_2 = _bswap(r10_2);
                        
                        if ((r11_2 + 4) > r8_7)
                            goto label_18000a595;
                        
                        arg1[1] += 4;
                        int32_t r11_3 = arg1[1];
                        int32_t r15_1 = *((r11_3 - 4) + rdx_6);
                        
                        if (r9_6 != 0)
                            r15_1 = _bswap(r15_1);
                        
                        if ((r11_3 + 4) > r8_7)
                            goto label_18000a595;
                        
                        arg1[1] += 4;
                        int32_t r11_4 = arg1[1];
                        int32_t r14_2 = *((r11_4 - 4) + rdx_6);
                        
                        if (r9_6 != 0)
                            r14_2 = _bswap(r14_2);
                        
                        if ((r11_4 + 4) > r8_7)
                            goto label_18000a595;
                        
                        arg1[1] += 4;
                        int32_t r11_5 = arg1[1];
                        int32_t rbp_2 = *((r11_5 - 4) + rdx_6);
                        
                        if (r9_6 != 0)
                            rbp_2 = _bswap(rbp_2);
                        
                        if ((r11_5 + 4) > r8_7)
                            goto label_18000a595;
                        
                        arg1[1] += 4;
                        int32_t r11_6 = arg1[1];
                        int32_t rsi_2 = *((r11_6 - 4) + rdx_6);
                        
                        if (r9_6 != 0)
                            rsi_2 = _bswap(rsi_2);
                        
                        if ((r11_6 + 4) > r8_7)
                            goto label_18000a595;
                        
                        arg1[1] += 4;
                        int32_t r11_7 = arg1[1];
                        int32_t rdi_2 = *((r11_7 - 4) + rdx_6);
                        
                        if (r9_6 != 0)
                            rdi_2 = _bswap(rdi_2);
                        
                        if ((r11_7 + 4) > r8_7)
                            goto label_18000a595;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > r8_7)
                            goto label_18000a595;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > r8_7)
                            goto label_18000a595;
                        
                        arg1[1] += 4;
                        sub_180005050(arg1, r10_2, &var_158);
                        sub_180005050(arg1, r15_1, &var_268);
                        sub_180005050(arg1, r14_2, &var_378);
                        sub_180005050(arg1, rbp_2, &var_488);
                        int32_t rbp_3 = arg1[1];
                        
                        if (sub_18000a5e0(arg1, r13_2, rsi_2, rdi_2) == 0)
                            goto label_18000a595;
                        
                        r12_1 += 1;
                        arg1[1] = rbp_3;
                    } while (r12_1 < arg2);
                    
                    i = 0;
                }
                
                do
                {
                    if (*arg1 == 0)
                        goto label_18000a595;
                    
                    if ((arg1[1] + 4) > *(arg1 + 0xc))
                        goto label_18000a595;
                    
                    arg1[1] += 4;
                    i += 1;
                } while (i < 0x4d);
                
                result = 1;
            }
            else
            {
                while (true)
                {
                    memset(&var_488, 0, 0x104);
                    int64_t rdx = *arg1;
                    
                    if (rdx != 0)
                    {
                        int32_t r8 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r9_1 = arg1[1];
                            int32_t r11_1 = arg1[2];
                            int32_t r10_1 = *((r9_1 - 4) + rdx);
                            
                            if (r11_1 != 0)
                                r10_1 = _bswap(r10_1);
                            
                            if ((r9_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t r9_2 = arg1[1];
                                int32_t rsi_1 = *((r9_2 - 4) + rdx);
                                
                                if (r11_1 != 0)
                                    rsi_1 = _bswap(rsi_1);
                                
                                if ((r9_2 + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    int32_t r9_3 = arg1[1];
                                    int32_t rdi_1 = *((r9_3 - 4) + rdx);
                                    
                                    if (r11_1 != 0)
                                        rdi_1 = _bswap(rdi_1);
                                    
                                    if ((r9_3 + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        int32_t r14_1 = arg1[1];
                                        int32_t r9_4 = *((r14_1 - 4) + rdx);
                                        
                                        if (r11_1 != 0)
                                            r9_4 = _bswap(r9_4);
                                        
                                        if ((r14_1 + 4) <= r8)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= r8)
                                            {
                                                arg1[1] += 4;
                                                
                                                if ((arg1[1] + 4) <= r8)
                                                {
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) <= r8)
                                                    {
                                                        arg1[1] += 4;
                                                        
                                                        if ((arg1[1] + 4) <= r8)
                                                        {
                                                            arg1[1] += 4;
                                                            sub_180005050(arg1, r10_1, &var_488);
                                                            sub_180005050(arg1, rsi_1, &var_378);
                                                            sub_180005050(arg1, rdi_1, &var_268);
                                                            sub_180005050(arg1, r9_4, &var_158);
                                                            void* r9_5 = data_180030710;
                                                            
                                                            if (r9_5 != 0)
                                                            {
                                                                void* rdx_5 = &var_488;
                                                                char* r8_6 = ((r9_5 + 0x34) + (rbp_1 * 0x138));
                                                                char i_1;
                                                                
                                                                do
                                                                {
                                                                    i_1 = *rdx_5;
                                                                    rdx_5 += 1;
                                                                    *r8_6 = i_1;
                                                                    r8_6 = &r8_6[1];
                                                                } while (i_1 != 0);
                                                            }
                                                            
                                                            rbp_1 += 1;
                                                            
                                                            if (rbp_1 >= arg2)
                                                                goto label_18000a3bd;
                                                            
                                                            continue;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    
                label_18000a595:
                    result = 0;
                    break;
                }
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_4b8));
    return result;
}

int64_t sub_18000a5e0(int64_t* arg1, void* arg2, int32_t arg3, int32_t arg4)
{
    void var_278;
    int64_t rax_1 = (__security_cookie ^ &var_278);
    int64_t result;
    
    if (arg2 == 0)
        result = 0;
    else if ((arg4 != 0 && arg3 != 0))
    {
        int32_t rbp_1 = 0;
        arg1[1] = arg4;
        
        if (arg3 == 0)
        {
        label_18000a7af:
            result = 1;
        }
        else
        {
            while (true)
            {
                void _Str1;
                memset(&_Str1, 0, 0x104);
                int64_t r8 = *arg1;
                
                if (r8 != 0)
                {
                    int32_t rdx = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= rdx)
                    {
                        arg1[1] += 4;
                        int32_t r9 = arg1[1];
                        int32_t rsi_1 = arg1[2];
                        int32_t r10_1 = *((r9 - 4) + r8);
                        
                        if (rsi_1 != 0)
                            r10_1 = _bswap(r10_1);
                        
                        if ((r9 + 4) <= rdx)
                        {
                            arg1[1] += 4;
                            int32_t r11_1 = arg1[1];
                            int32_t r9_1 = *((r11_1 - 4) + r8);
                            
                            if (rsi_1 != 0)
                                r9_1 = _bswap(r9_1);
                            
                            if ((r11_1 + 4) <= rdx)
                            {
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) <= rdx)
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) <= rdx)
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) <= rdx)
                                        {
                                            arg1[1] += 4;
                                            int32_t rdi_1 = *((arg1[1] - 4) + r8);
                                            
                                            if (rsi_1 != 0)
                                                rdi_1 = _bswap(rdi_1);
                                            
                                            sub_180005050(arg1, r10_1, &_Str1);
                                            void var_148;
                                            sub_180005050(arg1, r9_1, &var_148);
                                            int32_t rsi_2 = arg1[1];
                                            
                                            if ((_stricmp(&_Str1, "DiffuseMap") != 0 || rdi_1 == 0))
                                            {
                                            label_18000a7a1:
                                                rbp_1 += 1;
                                                arg1[1] = rsi_2;
                                                
                                                if (rbp_1 >= arg3)
                                                    goto label_18000a7af;
                                                
                                                continue;
                                            }
                                            else
                                            {
                                                int64_t rdx_3 = *arg1;
                                                arg1[1] = rdi_1;
                                                
                                                if (rdx_3 != 0)
                                                {
                                                    int32_t r8_3 = *(arg1 + 0xc);
                                                    
                                                    if ((rdi_1 + 4) <= r8_3)
                                                    {
                                                        int32_t r9_2 = arg1[2];
                                                        arg1[1] = (rdi_1 + 4);
                                                        int32_t rax_19 = *(rdi_1 + rdx_3);
                                                        
                                                        if (r9_2 != 0)
                                                            rax_19 = _bswap(rax_19);
                                                        
                                                        if (rax_19 == 0)
                                                            goto label_18000a7a1;
                                                        
                                                        arg1[1] = rax_19;
                                                        
                                                        if ((rax_19 + 4) <= r8_3)
                                                        {
                                                            arg1[1] = (rax_19 + 4);
                                                            int32_t rax_22 = *(rax_19 + rdx_3);
                                                            
                                                            if (r9_2 != 0)
                                                                rax_22 = _bswap(rax_22);
                                                            
                                                            *(arg2 + 0x28) = rax_22;
                                                            goto label_18000a7a1;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                
                result = 0;
                break;
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_278));
    return result;
}

int64_t sub_18000a7f0(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_268;
    int64_t rax_1 = (__security_cookie ^ &var_268);
    int32_t result;
    
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        
        if (arg2 != 0)
            result = sub_180001b50(&data_1800306f0, arg2);
        
        if ((arg2 == 0 || result != 0))
        {
            int32_t rbp_1 = arg1[1];
            int32_t rdi_1 = 0;
            int32_t rsi_1 = 0;
            
            if (arg2 == 0)
            {
            label_18000a9ac:
                arg1[1] = rbp_1;
                
                if (arg2 == 0)
                {
                label_18000aa46:
                    result = 1;
                }
                else
                {
                    while (true)
                    {
                        int64_t r8_4 = *arg1;
                        void* rdx_8 = ((rdi_1 * 0x2f8) + data_180030720);
                        
                        if (r8_4 == 0)
                            break;
                        
                        int32_t rcx_5 = *(arg1 + 0xc);
                        
                        if ((rbp_1 + 4) > rcx_5)
                            break;
                        
                        arg1[1] = (rbp_1 + 4);
                        
                        if ((rbp_1 + 8) > rcx_5)
                            break;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > rcx_5)
                            break;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > rcx_5)
                            break;
                        
                        arg1[1] += 4;
                        rbp_1 = arg1[1];
                        int32_t r9_4 = *((rbp_1 - 4) + r8_4);
                        
                        if (arg1[2] != 0)
                            r9_4 = _bswap(r9_4);
                        
                        if (sub_18000aa90(arg1, rdx_8, r8_4, r9_4) == 0)
                            break;
                        
                        rdi_1 += 1;
                        arg1[1] = rbp_1;
                        
                        if (rdi_1 >= arg2)
                            goto label_18000aa46;
                    }
                    
                    result = 0;
                }
            }
            else
            {
                while (true)
                {
                    void var_248;
                    memset(&var_248, 0, 0x104);
                    void var_138;
                    memset(&var_138, 0, 0x104);
                    int64_t r9_1 = *arg1;
                    
                    if (r9_1 == 0)
                        break;
                    
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r10_1 = arg1[1];
                    int32_t r11_1 = arg1[2];
                    int32_t rdx = *((r10_1 - 4) + r9_1);
                    
                    if (r11_1 != 0)
                        rdx = _bswap(rdx);
                    
                    if ((r10_1 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r10_2 = arg1[1];
                    int32_t r9_2 = *((r10_2 - 4) + r9_1);
                    
                    if (r11_1 != 0)
                        r9_2 = _bswap(r9_2);
                    
                    if ((r10_2 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    sub_180005050(arg1, rdx, &var_248);
                    sub_180005050(arg1, r9_2, &var_138);
                    void* r9_3 = data_180030720;
                    
                    if (r9_3 != 0)
                    {
                        int64_t r8_3 = (rsi_1 * 0x2f8);
                        void* rcx_3 = &var_248;
                        char* rdx_3 = ((r9_3 + 0xe8) + r8_3);
                        char i;
                        
                        do
                        {
                            i = *rcx_3;
                            rcx_3 += 1;
                            *rdx_3 = i;
                            rdx_3 = &rdx_3[1];
                        } while (i != 0);
                        void* rcx_4 = &var_138;
                        char* rdx_6 = ((data_180030720 + 0x1ec) + r8_3);
                        char i_1;
                        
                        do
                        {
                            i_1 = *rcx_4;
                            rcx_4 += 1;
                            *rdx_6 = i_1;
                            rdx_6 = &rdx_6[1];
                        } while (i_1 != 0);
                    }
                    
                    rsi_1 += 1;
                    
                    if (rsi_1 >= arg2)
                        goto label_18000a9ac;
                }
                
                result = 0;
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_268));
    return result;
}

uint64_t sub_18000aa90(int64_t* arg1, void* arg2, int64_t arg3, int32_t arg4)
{
    void var_1a8;
    int64_t rax_1 = (__security_cookie ^ &var_1a8);
    uint64_t result;
    
    if (arg2 == 0)
        result = 0;
    else if (arg4 != 0)
    {
        int64_t r8 = *arg1;
        arg1[1] = arg4;
        int64_t var_174_1 = 0;
        int32_t var_178 = 0;
        int64_t var_164_1 = 0;
        int32_t var_168 = 0;
        
        if (r8 == 0)
            result = 0;
        else
        {
            int32_t rdx = *(arg1 + 0xc);
            
            if ((arg4 + 4) > rdx)
                result = 0;
            else
            {
                arg1[1] = (arg4 + 4);
                
                if ((arg4 + 8) > rdx)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t r10_1 = arg1[1];
                    int32_t r9 = arg1[2];
                    int32_t r11_1 = *((r10_1 - 4) + r8);
                    
                    if (r9 != 0)
                        r11_1 = _bswap(r11_1);
                    
                    if ((r10_1 + 4) > rdx)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t r10_2 = *((arg1[1] - 4) + r8);
                        
                        if (r9 != 0)
                            r10_2 = _bswap(r10_2);
                        
                        if ((arg1[1] + 4) > rdx)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t rdi_1 = arg1[1];
                            int32_t rax_11 = *((rdi_1 - 4) + r8);
                            int32_t var_180_1 = rax_11;
                            
                            if (r9 != 0)
                                var_180_1 = _bswap(rax_11);
                            
                            if ((rdi_1 + 4) > rdx)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t rdi_2 = *((arg1[1] - 4) + r8);
                                int32_t var_184_1 = rdi_2;
                                
                                if (r9 != 0)
                                {
                                    rdi_2 = _bswap(rdi_2);
                                    var_184_1 = rdi_2;
                                }
                                
                                if (sub_18001d5c0(arg1, &var_178) == 0)
                                    result = 0;
                                else if (sub_18001d5c0(arg1, &var_168) == 0)
                                    result = 0;
                                else
                                {
                                    int32_t i = 0;
                                    *(arg2 + 0x24) = r11_1;
                                    
                                    if (r10_2 == 0)
                                    {
                                    label_18000aed3:
                                        *(arg2 + 0xe4) = var_180_1;
                                        
                                        if (rdi_2 != 0)
                                        {
                                            arg1[1] = rdi_2;
                                            
                                            if (*(arg2 + 0xe4) > 0)
                                            {
                                                do
                                                {
                                                    int64_t rdx_8 = *arg1;
                                                    
                                                    if (rdx_8 == 0)
                                                        goto label_18000b0dd_2;
                                                    
                                                    int32_t r8_5 = *(arg1 + 0xc);
                                                    
                                                    if ((arg1[1] + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    int32_t r9_5 = arg1[1];
                                                    int32_t rbp_2 = arg1[2];
                                                    int32_t r10_12 = *((r9_5 - 4) + rdx_8);
                                                    
                                                    if (rbp_2 != 0)
                                                        r10_12 = _bswap(r10_12);
                                                    
                                                    if ((r9_5 + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    int32_t r9_6 = arg1[1];
                                                    int32_t rsi_2 = *((r9_6 - 4) + rdx_8);
                                                    
                                                    if (rbp_2 != 0)
                                                        rsi_2 = _bswap(rsi_2);
                                                    
                                                    if ((r9_6 + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    int32_t rax_71 = arg1[1];
                                                    
                                                    if (data_1800306f0 > 0x2fc)
                                                    {
                                                        if ((rax_71 + 4) > r8_5)
                                                            goto label_18000b0dd_2;
                                                        
                                                        arg1[1] += 4;
                                                        
                                                        if ((arg1[1] + 4) > r8_5)
                                                            goto label_18000b0dd_2;
                                                        
                                                        arg1[1] += 4;
                                                        rax_71 = arg1[1];
                                                    }
                                                    
                                                    if ((rax_71 + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    int32_t r9_7 = arg1[1];
                                                    int32_t rdi_4 = *((r9_7 - 4) + rdx_8);
                                                    
                                                    if (rbp_2 != 0)
                                                        rdi_4 = _bswap(rdi_4);
                                                    
                                                    if ((r9_7 + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    int32_t r11_3 = arg1[1];
                                                    int32_t r9_8 = *((r11_3 - 4) + rdx_8);
                                                    
                                                    if (rbp_2 != 0)
                                                        r9_8 = _bswap(r9_8);
                                                    
                                                    if ((r11_3 + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) > r8_5)
                                                        goto label_18000b0dd_2;
                                                    
                                                    arg1[1] += 4;
                                                    void var_158;
                                                    sub_180005050(arg1, r10_12, &var_158);
                                                    
                                                    if (i == 0)
                                                    {
                                                        *(arg2 + 0x28) = rsi_2;
                                                        *(arg2 + 0x2c) = rdi_4;
                                                        *(arg2 + 0x34) = r9_8;
                                                    }
                                                    
                                                    i += 1;
                                                } while (i < *(arg2 + 0xe4));
                                            }
                                        }
                                        
                                        result = 1;
                                    }
                                    else
                                    {
                                        int64_t rdx_3 = *arg1;
                                        arg1[1] = r10_2;
                                        
                                        if (rdx_3 == 0)
                                        {
                                        labelid_d:
                                            result = 0;
                                        }
                                        else
                                        {
                                            int32_t r8_1 = *(arg1 + 0xc);
                                            
                                            if ((r10_2 + 4) > r8_1)
                                            {
                                            labelid_d:
                                                result = 0;
                                            }
                                            else
                                            {
                                                int32_t r9_1 = arg1[2];
                                                arg1[1] = (r10_2 + 4);
                                                int32_t rax_19 = *(r10_2 + rdx_3);
                                                int32_t var_188_1 = rax_19;
                                                
                                                if (r9_1 != 0)
                                                    var_188_1 = _bswap(rax_19);
                                                
                                                if ((r10_2 + 8) > r8_1)
                                                {
                                                labelid_d:
                                                    result = 0;
                                                }
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r10_4 = arg1[1];
                                                    int32_t rdi_3 = *((r10_4 - 4) + rdx_3);
                                                    
                                                    if (r9_1 != 0)
                                                        rdi_3 = _bswap(rdi_3);
                                                    
                                                    if ((r10_4 + 4) > r8_1)
                                                    {
                                                    labelid_d:
                                                        result = 0;
                                                    }
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_5 = arg1[1];
                                                        int32_t r11_2 = *((r10_5 - 4) + rdx_3);
                                                        
                                                        if (r9_1 != 0)
                                                            r11_2 = _bswap(r11_2);
                                                        
                                                        if ((r10_5 + 4) > r8_1)
                                                        {
                                                        labelid_d:
                                                            result = 0;
                                                        }
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r10_6 = arg1[1];
                                                            int32_t rbp_1 = *((r10_6 - 4) + rdx_3);
                                                            
                                                            if (r9_1 != 0)
                                                                rbp_1 = _bswap(rbp_1);
                                                            
                                                            if ((r10_6 + 4) > r8_1)
                                                            {
                                                            labelid_d:
                                                                result = 0;
                                                            }
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r10_7 = arg1[1];
                                                                int32_t rsi_1 = *((r10_7 - 4) + rdx_3);
                                                                
                                                                if (r9_1 != 0)
                                                                    rsi_1 = _bswap(rsi_1);
                                                                
                                                                if ((r10_7 + 4) > r8_1)
                                                                {
                                                                labelid_d:
                                                                    result = 0;
                                                                }
                                                                else
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t r10_8 = arg1[1];
                                                                    int32_t r12_1 = *((r10_8 - 4) + rdx_3);
                                                                    
                                                                    if (r9_1 != 0)
                                                                        r12_1 = _bswap(r12_1);
                                                                    
                                                                    if ((r10_8 + 4) > r8_1)
                                                                    {
                                                                    label_18000b0dd:
                                                                        result = 0;
                                                                    }
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t r10_9 = arg1[1];
                                                                        int32_t r15_1 = *((r10_9 - 4) + rdx_3);
                                                                        
                                                                        if (r9_1 != 0)
                                                                            r15_1 = _bswap(r15_1);
                                                                        
                                                                        if ((r10_9 + 4) > r8_1)
                                                                        {
                                                                        label_18000b0dd_1:
                                                                            result = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            arg1[1] += 4;
                                                                            int32_t r10_10 = arg1[1];
                                                                            int32_t r13_1 = *((r10_10 - 4) + rdx_3);
                                                                            
                                                                            if (r9_1 != 0)
                                                                                r13_1 = _bswap(r13_1);
                                                                            
                                                                            if ((r10_10 + 4) <= r8_1)
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t r10_11 = *((arg1[1] - 4) + rdx_3);
                                                                                
                                                                                if (r9_1 != 0)
                                                                                    r10_11 = _bswap(r10_11);
                                                                                
                                                                                *(arg2 + 0x3c) = rdi_3;
                                                                                
                                                                                if (r11_2 != 0)
                                                                                {
                                                                                    int32_t rdx_4 = 0;
                                                                                    arg1[1] = r11_2;
                                                                                    
                                                                                    if (rdi_3 != 0)
                                                                                    {
                                                                                        void* r9_2 = (arg2 + 0x44);
                                                                                        
                                                                                        do
                                                                                        {
                                                                                            int64_t r8_2 = *arg1;
                                                                                            
                                                                                            if (r8_2 == 0)
                                                                                                goto label_18000b0dd_2;
                                                                                            
                                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                goto label_18000b0dd_2;
                                                                                            
                                                                                            arg1[1] += 4;
                                                                                            int32_t rax_42 = *((arg1[1] - 4) + r8_2);
                                                                                            
                                                                                            if (arg1[2] != 0)
                                                                                                rax_42 = _bswap(rax_42);
                                                                                            
                                                                                            if (rdx_4 < *(arg2 + 0x38))
                                                                                                *r9_2 = rax_42;
                                                                                            
                                                                                            rdx_4 += 1;
                                                                                            r9_2 += 0x10;
                                                                                        } while (rdx_4 < rdi_3);
                                                                                    }
                                                                                }
                                                                                
                                                                                if (rsi_1 != 0)
                                                                                {
                                                                                    int32_t rdx_5 = 0;
                                                                                    arg1[1] = rsi_1;
                                                                                    
                                                                                    if (rbp_1 != 0)
                                                                                    {
                                                                                        void* r9_3 = (arg2 + 0x48);
                                                                                        
                                                                                        do
                                                                                        {
                                                                                            int64_t r8_3 = *arg1;
                                                                                            
                                                                                            if (r8_3 == 0)
                                                                                                goto label_18000b0dd_2;
                                                                                            
                                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                goto label_18000b0dd_2;
                                                                                            
                                                                                            arg1[1] += 4;
                                                                                            int32_t rax_47 = *((arg1[1] - 4) + r8_3);
                                                                                            
                                                                                            if (arg1[2] != 0)
                                                                                                rax_47 = _bswap(rax_47);
                                                                                            
                                                                                            if (rdx_5 < *(arg2 + 0x38))
                                                                                                *r9_3 = rax_47;
                                                                                            
                                                                                            rdx_5 += 1;
                                                                                            r9_3 += 0x10;
                                                                                        } while (rdx_5 < rbp_1);
                                                                                    }
                                                                                }
                                                                                
                                                                                if (r15_1 == 0)
                                                                                    i = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = r15_1;
                                                                                    i = 0;
                                                                                    int32_t rdx_6 = 0;
                                                                                    
                                                                                    if (r12_1 != 0)
                                                                                    {
                                                                                        void* r9_4 = (arg2 + 0x4c);
                                                                                        
                                                                                        do
                                                                                        {
                                                                                            int64_t r8_4 = *arg1;
                                                                                            
                                                                                            if (r8_4 == 0)
                                                                                                goto label_18000b0dd_2;
                                                                                            
                                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                goto label_18000b0dd_2;
                                                                                            
                                                                                            arg1[1] += 4;
                                                                                            int32_t rax_52 = *((arg1[1] - 4) + r8_4);
                                                                                            
                                                                                            if (arg1[2] != 0)
                                                                                                rax_52 = _bswap(rax_52);
                                                                                            
                                                                                            if (rdx_6 < *(arg2 + 0x38))
                                                                                                *r9_4 = rax_52;
                                                                                            
                                                                                            rdx_6 += 1;
                                                                                            r9_4 += 0x10;
                                                                                        } while (rdx_6 < r12_1);
                                                                                    }
                                                                                }
                                                                                
                                                                                if (r10_11 != 0)
                                                                                {
                                                                                    arg1[1] = r10_11;
                                                                                    int32_t rcx_1 = 0;
                                                                                    
                                                                                    if (r13_1 != 0)
                                                                                    {
                                                                                        do
                                                                                        {
                                                                                            if (*arg1 == 0)
                                                                                                goto label_18000b0dd_2;
                                                                                            
                                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                goto label_18000b0dd_2;
                                                                                            
                                                                                            arg1[1] += 4;
                                                                                            rcx_1 += 1;
                                                                                        } while (rcx_1 < r13_1);
                                                                                    }
                                                                                }
                                                                                
                                                                                rdi_2 = var_184_1;
                                                                                *(arg2 + 0x20) = var_188_1;
                                                                                goto label_18000aed3;
                                                                            }
                                                                            
                                                                        label_18000b0dd_2:
                                                                            result = 0;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    else
        result = (arg4 + 1);
    
    __security_check_cookie((rax_1 ^ &var_1a8));
    return result;
}

uint64_t sub_18000b0f0(int64_t* arg1, int32_t arg2, int64_t arg3, int32_t arg4)
{
    void var_148;
    int64_t rax_1 = (__security_cookie ^ &var_148);
    uint64_t result;
    
    if ((arg2 != 0 && data_180030720 == 0))
        result = 0;
    else if (arg4 != 0)
    {
        int64_t rdx = *arg1;
        arg1[1] = arg4;
        
        if (rdx == 0)
            result = 0;
        else
        {
            int32_t rcx = *(arg1 + 0xc);
            
            if ((arg4 + 4) > rcx)
                result = 0;
            else
            {
                arg1[1] = (arg4 + 4);
                
                if ((arg4 + 8) > rcx)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > rcx)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > rcx)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t rdx_1 = *((arg1[1] - 4) + rdx);
                            
                            if (arg1[2] != 0)
                                rdx_1 = _bswap(rdx_1);
                            
                            void var_128;
                            sub_180005050(arg1, rdx_1, &var_128);
                            int32_t rdi_1 = 0;
                            int32_t r10_1 = 0;
                            
                            if (arg2 == 0)
                            {
                            label_18000b25f:
                                int32_t rax_21 = data_1800306f0;
                                
                                if (rax_21 != 0x309)
                                {
                                    if (rax_21 < 0x30c)
                                        goto label_18000b2c4;
                                    
                                    int32_t rdx_6 = 0;
                                    
                                    if (arg2 != 0)
                                    {
                                        do
                                        {
                                            if (*arg1 == 0)
                                                goto label_18000b37b_2;
                                            
                                            int32_t rcx_7 = *(arg1 + 0xc);
                                            
                                            if ((arg1[1] + 4) > rcx_7)
                                                goto label_18000b37b_2;
                                            
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > rcx_7)
                                                goto label_18000b37b_2;
                                            
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > rcx_7)
                                                goto label_18000b37b_2;
                                            
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > rcx_7)
                                                goto label_18000b37b_2;
                                            
                                            arg1[1] += 4;
                                            rdx_6 += 1;
                                        } while (rdx_6 < arg2);
                                        
                                        goto label_18000b2c4;
                                    }
                                    
                                    result = 1;
                                }
                                else if (*arg1 == 0)
                                {
                                labelid_d:
                                    result = 0;
                                }
                                else
                                {
                                    int32_t rcx_3 = *(arg1 + 0xc);
                                    
                                    if ((arg1[1] + 4) > rcx_3)
                                    {
                                    labelid_d:
                                        result = 0;
                                    }
                                    else
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) > rcx_3)
                                        {
                                        labelid_d:
                                            result = 0;
                                        }
                                        else
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > rcx_3)
                                            {
                                            label_18000b37b:
                                                result = 0;
                                            }
                                            else
                                            {
                                                arg1[1] += 4;
                                                
                                                if ((arg1[1] + 4) > rcx_3)
                                                {
                                                label_18000b37b_1:
                                                    result = 0;
                                                }
                                                else
                                                {
                                                    arg1[1] += 4;
                                                label_18000b2c4:
                                                    
                                                    if (arg2 == 0)
                                                        result = 1;
                                                    else
                                                    {
                                                        do
                                                        {
                                                            sub_18000b390(arg1, ((rdi_1 * 0x2f8) + data_180030720));
                                                            rdi_1 += 1;
                                                        } while (rdi_1 < arg2);
                                                        
                                                        result = 1;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            else
                            {
                                int64_t r11_1 = 0;
                                
                                while (true)
                                {
                                    int64_t rdx_2 = *arg1;
                                    int64_t r8_1 = data_180030720;
                                    
                                    if (rdx_2 == 0)
                                        break;
                                    
                                    int32_t rcx_2 = *(arg1 + 0xc);
                                    
                                    if ((arg1[1] + 4) > rcx_2)
                                        break;
                                    
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) > rcx_2)
                                        break;
                                    
                                    arg1[1] += 4;
                                    int32_t rax_16 = *((arg1[1] - 4) + rdx_2);
                                    
                                    if (arg1[2] != 0)
                                        rax_16 = _bswap(rax_16);
                                    
                                    int32_t i = 0;
                                    *((r8_1 + r11_1) + 0x30) = rax_16;
                                    
                                    if (*((r8_1 + r11_1) + 0xe4) > 0)
                                    {
                                        do
                                        {
                                            if (*arg1 == 0)
                                                goto label_18000b37b_2;
                                            
                                            int32_t rdx_3 = *(arg1 + 0xc);
                                            
                                            if ((arg1[1] + 4) > rdx_3)
                                                goto label_18000b37b_2;
                                            
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > rdx_3)
                                                goto label_18000b37b_2;
                                            
                                            arg1[1] += 4;
                                            i += 1;
                                        } while (i < *((r8_1 + r11_1) + 0xe4));
                                    }
                                    
                                    r10_1 += 1;
                                    r11_1 += 0x2f8;
                                    
                                    if (r10_1 >= arg2)
                                        goto label_18000b25f;
                                }
                                
                            label_18000b37b_2:
                                result = 0;
                            }
                        }
                    }
                }
            }
        }
    }
    else
        result = (arg4 + 1);
    
    __security_check_cookie((rax_1 ^ &var_148));
    return result;
}

uint64_t sub_18000b390(int64_t* arg1, int32_t* arg2)
{
    int64_t var_f8 = -2;
    void var_128;
    int64_t rax_1 = (__security_cookie ^ &var_128);
    uint64_t result;
    
    if (arg2 != 0)
    {
        int32_t rdi_1 = arg2[9];
        int32_t rbp_1 = arg2[8];
        int128_t var_e8;
        sub_1800010c0(&var_e8);
        var_e8 = *(arg2 + 0x38);
        int128_t var_d8_1 = *(arg2 + 0x48);
        int128_t var_c8_1 = *(arg2 + 0x58);
        int128_t var_b8_1 = *(arg2 + 0x68);
        int128_t var_a8_1 = *(arg2 + 0x78);
        int128_t var_98_1 = *(arg2 + 0x88);
        int128_t var_88_1 = *(arg2 + 0x98);
        int128_t var_78_1 = *(arg2 + 0xa8);
        int128_t var_68_1 = *(arg2 + 0xb8);
        int128_t var_58_1 = *(arg2 + 0xc8);
        int64_t var_48_1 = *(arg2 + 0xd8);
        int32_t rax_3 = arg2[0xc];
        
        if (rax_3 != 0)
            arg1[1] = rax_3;
        
        int32_t result_1 = 0;
        
        if (data_1800306f0 <= 0x2fc)
            goto label_18000b493;
        
        if (*arg1 != 0)
        {
            int32_t rax_5 = (arg1[1] + 4);
            
            if (rax_5 <= *(arg1 + 0xc))
            {
                arg1[1] = rax_5;
            label_18000b493:
                int32_t r9_1 = arg1[1];
                int32_t rax_6;
                
                if (r9_1 != 0)
                    rax_6 = sub_180005100(arg1, arg2, rdi_1, r9_1, rbp_1, &var_e8);
                
                if ((r9_1 == 0 || rax_6 != 0))
                {
                    int32_t rax_7 = arg2[0xd];
                    
                    if (rax_7 != 0)
                        arg1[1] = rax_7;
                    
                    if (data_1800306f0 <= 0x2fc)
                        goto label_18000b4f9;
                    
                    if (*arg1 != 0)
                    {
                        int32_t rax_9 = (arg1[1] + 4);
                        
                        if (rax_9 <= *(arg1 + 0xc))
                        {
                            arg1[1] = rax_9;
                        label_18000b4f9:
                            uint32_t rdi_3 = (arg2[0xb] / 3);
                            int32_t rax_11;
                            
                            if (rdi_3 > 0)
                                rax_11 = sub_180001e80(arg2, rdi_3);
                            
                            if ((rdi_3 <= 0 || rax_11 != 0))
                            {
                                uint64_t r15_1 = rdi_3;
                                int64_t rdi_4 = 0;
                                
                                if (r15_1 > 0)
                                {
                                    int64_t r11_1 = 0;
                                    
                                    do
                                    {
                                        int64_t rdx_3 = *arg1;
                                        
                                        if (rdx_3 == 0)
                                            goto label_18000b62a;
                                        
                                        int32_t r10_1 = *(arg1 + 0xc);
                                        
                                        if ((arg1[1] + 2) > r10_1)
                                            goto label_18000b62a;
                                        
                                        arg1[1] += 2;
                                        int32_t r9_2 = arg1[1];
                                        uint16_t r8_2 = *((r9_2 - 2) + rdx_3);
                                        int32_t rbp_2 = arg1[2];
                                        
                                        if (rbp_2 != 0)
                                            r8_2 = ((r8_2 >> 8) | (r8_2 << 8));
                                        
                                        if ((r9_2 + 2) > r10_1)
                                            goto label_18000b62a;
                                        
                                        arg1[1] += 2;
                                        int32_t r14_1 = arg1[1];
                                        uint16_t r9_3 = *((r14_1 - 2) + rdx_3);
                                        
                                        if (rbp_2 != 0)
                                            r9_3 = ((r9_3 >> 8) | (r9_3 << 8));
                                        
                                        if ((r14_1 + 2) > r10_1)
                                            goto label_18000b62a;
                                        
                                        arg1[1] += 2;
                                        uint16_t rdx_4 = *((arg1[1] - 2) + rdx_3);
                                        
                                        if (rbp_2 != 0)
                                            rdx_4 = ((rdx_4 >> 8) | (rdx_4 << 8));
                                        
                                        int64_t rcx_4 = *(arg2 + 8);
                                        
                                        if (rcx_4 != 0)
                                        {
                                            *((r11_1 + rcx_4) + 4) = r8_2;
                                            *((*(arg2 + 8) + r11_1) + 8) = r9_3;
                                            *((*(arg2 + 8) + r11_1) + 0xc) = rdx_4;
                                        }
                                        
                                        rdi_4 += 1;
                                        r11_1 += 0x14;
                                    } while (rdi_4 < r15_1);
                                }
                                
                                result_1 = 1;
                            }
                        }
                    }
                }
            }
        }
        
    label_18000b62a:
        `eh vector vbase constructor iterator'(&*var_e8[8], 0x10, 0xa, _guard_check_icall);
        result = result_1;
    }
    else
        result = 0;
    
    __security_check_cookie((rax_1 ^ &var_128));
    return result;
}

uint64_t sub_18000b660(int64_t* arg1, int64_t arg2, int32_t arg3)
{
    void var_268;
    int64_t rax_1 = (__security_cookie ^ &var_268);
    uint64_t result;
    
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        void var_248;
        memset(&var_248, 0, 0x104);
        void var_138;
        memset(&var_138, 0, 0x104);
        int64_t r10_1 = *arg1;
        
        if (r10_1 == 0)
            result = 0;
        else
        {
            int32_t r8 = *(arg1 + 0xc);
            
            if ((arg3 + 4) > r8)
                result = 0;
            else
            {
                int32_t r11_1 = arg1[2];
                arg1[1] = (arg3 + 4);
                int32_t r9_1 = *(arg3 + r10_1);
                
                if (r11_1 != 0)
                    r9_1 = _bswap(r9_1);
                
                if ((arg3 + 8) > r8)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t rdx_1 = arg1[1];
                    int32_t rsi_1 = *((rdx_1 - 4) + r10_1);
                    
                    if (r11_1 != 0)
                        rsi_1 = _bswap(rsi_1);
                    
                    if ((rdx_1 + 4) > r8)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t rdx_2 = arg1[1];
                        int32_t rbp_1 = *((rdx_2 - 4) + r10_1);
                        
                        if (r11_1 != 0)
                            rbp_1 = _bswap(rbp_1);
                        
                        int32_t r14_1 = 0;
                        
                        if (data_1800306f4 != 0)
                            r14_1 = rdx_2;
                        
                        if ((rdx_2 + 4) > r8)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t rdi_1 = *((arg1[1] - 4) + r10_1);
                            
                            if (r11_1 != 0)
                                rdi_1 = _bswap(rdi_1);
                            
                            sub_180005050(arg1, r9_1, &var_248);
                            sub_180005050(arg1, rsi_1, &var_138);
                            void* rax_10 = sub_180001a00(&data_1800306f0);
                            
                            if (rax_10 != 0)
                            {
                                void* rdx_5 = &var_248;
                                char i;
                                
                                do
                                {
                                    i = *rdx_5;
                                    *((rax_10 - &var_248) + rdx_5) = i;
                                    rdx_5 += 1;
                                } while (i != 0);
                                void* rdx_6 = &var_138;
                                char i_1;
                                
                                do
                                {
                                    i_1 = *rdx_6;
                                    *(((rax_10 - &var_138) + 0x104) + rdx_6) = i_1;
                                    rdx_6 += 1;
                                } while (i_1 != 0);
                                *(rax_10 + 0x514) = 0xffffffff;
                            }
                            
                            data_180030748 = 0;
                            sub_180008fc0(arg1, 0, (rdi_1 + r14_1), rbp_1);
                            result = 1;
                        }
                    }
                }
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_268));
    return result;
}

uint64_t sub_18000b870(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_158;
    int64_t rax_1 = (__security_cookie ^ &var_158);
    uint64_t result;
    
    if (arg3 != 0)
    {
        int32_t r9_1 = 0;
        arg1[1] = arg3;
        void str1;
        
        if (arg2 == 0)
        {
        label_18000b927:
            int32_t rbp_1 = 0;
            arg1[1] = arg3;
            
            if (arg2 == 0)
            {
            label_18000ba4c:
                result = 1;
            }
            else
            {
                while (true)
                {
                    memset(&str1, 0, 0x104);
                    int64_t r11_1 = *arg1;
                    
                    if (r11_1 != 0)
                    {
                        int32_t i = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= i)
                        {
                            arg1[1] += 4;
                            
                            if ((arg1[1] + 4) <= i)
                            {
                                arg1[1] += 4;
                                int32_t r9_2 = arg1[1];
                                int32_t r10_2 = arg1[2];
                                int32_t rdx_2 = *((r9_2 - 4) + r11_1);
                                
                                if (r10_2 != 0)
                                    rdx_2 = _bswap(rdx_2);
                                
                                if ((r9_2 + 4) <= i)
                                {
                                    arg1[1] += 4;
                                    int32_t r9_3 = arg1[1];
                                    int32_t rsi_1 = *((r9_3 - 4) + r11_1);
                                    
                                    if (r10_2 != 0)
                                        rsi_1 = _bswap(rsi_1);
                                    
                                    if (rdx_2 > 0x64)
                                    {
                                        arg1[1] = rdx_2;
                                        int64_t rdx_3 = 0;
                                        
                                        while ((arg1[1] + 1) <= i)
                                        {
                                            arg1[1] += 1;
                                            char rax_19 = *((arg1[1] - 1) + r11_1);
                                            
                                            if (rdx_3 < 0x104)
                                                *(&str1 + rdx_3) = rax_19;
                                            
                                            rdx_3 += 1;
                                            
                                            if (rax_19 == 0)
                                            {
                                                if (rdx_3 >= 0x104)
                                                    char var_35_1 = 0;
                                                else
                                                    *(&str1 + rdx_3) = rax_19;
                                                
                                                arg1[1] = r9_3;
                                                break;
                                            }
                                        }
                                    }
                                    
                                    if (strstr(&str1, "-skin") != 0)
                                    {
                                        int32_t rdi_1 = arg1[1];
                                        sub_18000ba90(arg1, rsi_1);
                                        arg1[1] = rdi_1;
                                    }
                                    
                                    rbp_1 += 1;
                                    
                                    if (rbp_1 >= arg2)
                                        goto label_18000ba4c;
                                    
                                    continue;
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
        else
        {
            while (true)
            {
                int64_t rdx = *arg1;
                
                if (rdx != 0)
                {
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= r8)
                    {
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r10_1 = arg1[1];
                            int32_t rdx_1 = *((r10_1 - 4) + rdx);
                            
                            if (arg1[2] != 0)
                                rdx_1 = _bswap(rdx_1);
                            
                            if ((r10_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                sub_180005050(arg1, rdx_1, &str1);
                                r9_1 += 1;
                                
                                if (r9_1 >= arg2)
                                    goto label_18000b927;
                                
                                continue;
                            }
                        }
                    }
                }
                
                result = 0;
                break;
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_158));
    return result;
}

uint64_t sub_18000ba90(int64_t* arg1, int32_t arg2)
{
    void var_1e8;
    int64_t rax_1 = (__security_cookie ^ &var_1e8);
    uint64_t result;
    
    if (arg2 != 0)
    {
        int64_t rdx = *arg1;
        arg1[1] = arg2;
        int32_t r9_1;
        
        if (rdx != 0)
            r9_1 = *(arg1 + 0xc);
        
        if ((rdx == 0 || (arg2 + 4) > r9_1))
            result = 0;
        else
        {
            int32_t r10_1 = arg1[2];
            arg1[1] = (arg2 + 4);
            int32_t r14_1 = *(arg2 + rdx);
            
            if (r10_1 != 0)
                r14_1 = _bswap(r14_1);
            
            if ((arg2 + 8) > r9_1)
                result = 0;
            else
            {
                arg1[1] += 4;
                int32_t r8_2 = arg1[1];
                int32_t rdi_1 = *((r8_2 - 4) + rdx);
                
                if (r10_1 != 0)
                    rdi_1 = _bswap(rdi_1);
                
                if ((r8_2 + 4) > r9_1)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t r8_3 = arg1[1];
                    int32_t r15_1 = *((r8_3 - 4) + rdx);
                    
                    if (r10_1 != 0)
                        r15_1 = _bswap(r15_1);
                    
                    if ((r8_3 + 4) > r9_1)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t r13_1 = *((arg1[1] - 4) + rdx);
                        
                        if (r10_1 != 0)
                            r13_1 = _bswap(r13_1);
                        
                        int128_t var_188;
                        __builtin_memcpy(&var_188, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
                        
                        if (sub_18001d8d0(arg1, &var_188) == 0)
                            result = 0;
                        else
                        {
                            int64_t s;
                            __builtin_memset(&s, 0, 0x20);
                            int64_t var_1b8;
                            
                            if (sub_18001d710(arg1, &var_1b8) == 0)
                                result = 0;
                            else if (sub_18001d710(arg1, &s) == 0)
                                result = 0;
                            else
                            {
                                int64_t rdx_4 = *arg1;
                                
                                if ((rdx_4 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t rdx_5 = *((arg1[1] - 4) + rdx_4);
                                    
                                    if (arg1[2] != 0)
                                        rdx_5 = _bswap(rdx_5);
                                    
                                    void var_148;
                                    sub_180005050(arg1, rdx_5, &var_148);
                                    int64_t r9_2 = *arg1;
                                    
                                    if (r9_2 == 0)
                                        result = 0;
                                    else
                                    {
                                        int32_t rdx_6 = *(arg1 + 0xc);
                                        
                                        if ((arg1[1] + 4) > rdx_6)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] += 4;
                                            int32_t r10_2 = arg1[1];
                                            int32_t r8_5 = arg1[2];
                                            int32_t rax_20 = *((r10_2 - 4) + r9_2);
                                            int32_t var_1a4_1 = rax_20;
                                            
                                            if (r8_5 != 0)
                                                var_1a4_1 = _bswap(rax_20);
                                            
                                            if ((r10_2 + 4) > rdx_6)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_3 = arg1[1];
                                                int32_t r11_1 = *((r10_3 - 4) + r9_2);
                                                int32_t var_1a8_1 = r11_1;
                                                
                                                if (r8_5 != 0)
                                                {
                                                    r11_1 = _bswap(r11_1);
                                                    var_1a8_1 = r11_1;
                                                }
                                                
                                                if ((r10_3 + 4) > rdx_6)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r10_4 = arg1[1];
                                                    int32_t rax_26 = *((r10_4 - 4) + r9_2);
                                                    int32_t var_19c_1 = rax_26;
                                                    
                                                    if (r8_5 != 0)
                                                        var_19c_1 = _bswap(rax_26);
                                                    
                                                    if ((r10_4 + 4) > rdx_6)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_5 = arg1[1];
                                                        int32_t rax_30 = *((r10_5 - 4) + r9_2);
                                                        int32_t var_1a0_1 = rax_30;
                                                        
                                                        if (r8_5 != 0)
                                                            var_1a0_1 = _bswap(rax_30);
                                                        
                                                        if ((r10_5 + 4) > rdx_6)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r10_6 = arg1[1];
                                                            int32_t rax_34 = *((r10_6 - 4) + r9_2);
                                                            int32_t var_194_1 = rax_34;
                                                            
                                                            if (r8_5 != 0)
                                                                var_194_1 = _bswap(rax_34);
                                                            
                                                            if ((r10_6 + 4) > rdx_6)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r10_7 = arg1[1];
                                                                int32_t rax_38 = *((r10_7 - 4) + r9_2);
                                                                int32_t var_198_1 = rax_38;
                                                                
                                                                if (r8_5 != 0)
                                                                    var_198_1 = _bswap(rax_38);
                                                                
                                                                if ((r10_7 + 4) > rdx_6)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t r10_8 = arg1[1];
                                                                    int32_t r12_1 = *((r10_8 - 4) + r9_2);
                                                                    
                                                                    if (r8_5 != 0)
                                                                        r12_1 = _bswap(r12_1);
                                                                    
                                                                    if ((r10_8 + 4) > rdx_6)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t r10_9 = arg1[1];
                                                                        int32_t rax_44 = *((r10_9 - 4) + r9_2);
                                                                        int32_t var_190_1 = rax_44;
                                                                        
                                                                        if (r8_5 != 0)
                                                                            var_190_1 = _bswap(rax_44);
                                                                        
                                                                        if ((r10_9 + 4) > rdx_6)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] += 4;
                                                                            
                                                                            if ((arg1[1] + 4) > rdx_6)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                
                                                                                if (rdi_1 != 0)
                                                                                    arg1[1] = rdi_1;
                                                                                
                                                                                int32_t rdi_2 = 0;
                                                                                uint32_t r14_2 = (r14_1 >> 4);
                                                                                int32_t rsi_1 = 0;
                                                                                
                                                                                if (r14_2 != 0)
                                                                                {
                                                                                    do
                                                                                    {
                                                                                        __builtin_memcpy(&var_188, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
                                                                                        
                                                                                        if (sub_18001d8d0(arg1, &var_188) == 0)
                                                                                            goto label_18000bff9;
                                                                                        
                                                                                        rsi_1 += 1;
                                                                                    } while (rsi_1 < r14_2);
                                                                                    
                                                                                    r11_1 = var_1a8_1;
                                                                                }
                                                                                
                                                                                if (r13_1 != 0)
                                                                                    arg1[1] = r13_1;
                                                                                
                                                                                uint32_t r15_2 = (r15_1 >> 3);
                                                                                int32_t r10_10 = 0;
                                                                                
                                                                                if (r15_2 != 0)
                                                                                {
                                                                                    do
                                                                                    {
                                                                                        __builtin_memset(&s, 0, 0x20);
                                                                                        
                                                                                        if (sub_18001d710(arg1, &var_1b8) == 0)
                                                                                            goto label_18000bff9;
                                                                                        
                                                                                        if (sub_18001d710(arg1, &s) == 0)
                                                                                            goto label_18000bff9;
                                                                                        
                                                                                        r10_10 += 1;
                                                                                    } while (r10_10 < r15_2);
                                                                                }
                                                                                
                                                                                if (r11_1 != 0)
                                                                                    arg1[1] = r11_1;
                                                                                
                                                                                int32_t r9_3 = 0;
                                                                                
                                                                                if (var_1a4_1 != 0)
                                                                                {
                                                                                    do
                                                                                    {
                                                                                        int64_t rdx_10 = *arg1;
                                                                                        
                                                                                        if (rdx_10 == 0)
                                                                                            goto label_18000bff9;
                                                                                        
                                                                                        if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                            goto label_18000bff9;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                        int32_t rdx_11 = *((arg1[1] - 4) + rdx_10);
                                                                                        
                                                                                        if (arg1[2] != 0)
                                                                                            rdx_11 = _bswap(rdx_11);
                                                                                        
                                                                                        sub_180005050(arg1, rdx_11, &var_148);
                                                                                        r9_3 += 1;
                                                                                    } while (r9_3 < var_1a4_1);
                                                                                }
                                                                                
                                                                                int32_t rax_56 = sub_18000c020(arg1, var_19c_1, var_1a0_1);
                                                                                int32_t rax_57;
                                                                                
                                                                                if (rax_56 != 0)
                                                                                    rax_57 = sub_18000c0c0(arg1, var_194_1, var_198_1);
                                                                                
                                                                                if ((rax_56 == 0 || rax_57 == 0))
                                                                                {
                                                                                label_18000bff9:
                                                                                    result = 0;
                                                                                }
                                                                                else
                                                                                {
                                                                                    if (var_190_1 != 0)
                                                                                    {
                                                                                        arg1[1] = var_190_1;
                                                                                        
                                                                                        if (r12_1 != 0)
                                                                                        {
                                                                                            do
                                                                                            {
                                                                                                s = 0;
                                                                                                s = 0;
                                                                                                var_1b8 = 0;
                                                                                                var_1b8 = 0;
                                                                                                
                                                                                                if (sub_18001d5c0(arg1, &s) == 0)
                                                                                                    goto label_18000bff9;
                                                                                                
                                                                                                if (sub_18001d5c0(arg1, &var_1b8) == 0)
                                                                                                    goto label_18000bff9;
                                                                                                
                                                                                                rdi_2 += 1;
                                                                                            } while (rdi_2 < r12_1);
                                                                                        }
                                                                                    }
                                                                                    
                                                                                    result = 1;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    else
        result = (arg2 + 1);
    
    __security_check_cookie((rax_1 ^ &var_1e8));
    return result;
}

int64_t sub_18000c020(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        
        if ((*arg1 == 0 || (arg3 + 4) > *(arg1 + 0xc)))
            return 0;
        
        int32_t r11_1 = 0;
        arg1[1] = (arg3 + 4);
        
        if (arg2 != 0)
        {
            while (true)
            {
                if (*arg1 == 0)
                    return 0;
                
                int32_t rcx = *(arg1 + 0xc);
                int32_t rax_2 = (arg1[1] + 2);
                
                if (rax_2 > rcx)
                    return 0;
                
                arg1[1] = rax_2;
                
                if ((rax_2 + 2) > rcx)
                    return 0;
                
                arg1[1] += 2;
                int64_t var_10_1 = 0;
                int64_t var_18 = 0;
                
                if (sub_18001d710(arg1, &var_18) == 0)
                    return 0;
                
                r11_1 += 1;
                
                if (r11_1 >= arg2)
                    return 1;
            }
        }
    }
    
    return 1;
}

uint64_t sub_18000c0c0(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    if (arg3 == 0)
        return (arg3 + 1);
    
    int64_t rbp = *arg1;
    arg1[1] = arg3;
    
    if (rbp != 0)
    {
        int32_t r8 = *(arg1 + 0xc);
        
        if ((arg3 + 4) <= r8)
        {
            int32_t rdx = 0;
            int32_t r11 = 0;
            arg1[1] = (arg3 + 4);
            int32_t rbx = 0;
            
            if (arg2 != 0)
            {
                while (true)
                {
                    if ((arg1[1] + 4) <= r8)
                    {
                        arg1[1] += 4;
                        int32_t rdi_1 = arg1[1];
                        int32_t r10_1 = *((rdi_1 - 4) + rbp);
                        
                        if (arg1[2] != 0)
                            r10_1 = _bswap(r10_1);
                        
                        if ((rdi_1 + 4) <= r8)
                        {
                            arg1[1] += 4;
                            r11 += r10_1;
                            rbx += 1;
                            
                            if (rbx >= arg2)
                                break;
                            
                            continue;
                        }
                    }
                    
                    return 0;
                }
            }
            
            if (r11 <= 0)
                return 1;
            
            while (true)
            {
                if ((arg1[1] + 4) > r8)
                    return 0;
                
                arg1[1] += 4;
                
                if ((arg1[1] + 4) > r8)
                    return 0;
                
                arg1[1] += 4;
                rdx += 1;
                
                if (rdx >= r11)
                    return 1;
            }
        }
    }
    
    return 0;
}

uint64_t sub_18000c1b0(int64_t* arg1, void* arg2)
{
    void var_3e8;
    int64_t rax_1 = (__security_cookie ^ &var_3e8);
    uint64_t result;
    
    if (*arg1 == 0)
        result = 0;
    else
    {
        int32_t rcx = *(arg1 + 0xc);
        int32_t r8_2 = (arg1[1] + 4);
        
        if (r8_2 > rcx)
            result = 0;
        else
        {
            arg1[1] = r8_2;
            
            if ((r8_2 + 4) > rcx)
                result = 0;
            else
            {
                arg1[1] = (r8_2 + 4);
                
                if ((r8_2 + 8) > rcx)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t rdx = arg1[1];
                    
                    if ((rdx + 4) > rcx)
                        result = 0;
                    else
                    {
                        arg1[1] = (rdx + 4);
                        
                        if ((rdx + 8) > rcx)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t rdx_2 = arg1[1];
                            
                            if ((rdx_2 + 4) > rcx)
                                result = 0;
                            else
                            {
                                arg1[1] = (rdx_2 + 4);
                                int32_t rax_8 = *(arg2 + 8);
                                
                                if (rax_8 == 0)
                                    result = 0;
                                else
                                {
                                    arg1[1] = rax_8;
                                    int32_t r8_4 = *(arg2 + 0x10);
                                    
                                    if ((rax_8 + 4) > rcx)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] = (rax_8 + 4);
                                        
                                        if ((rax_8 + 8) > rcx)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (rax_8 + 8);
                                            
                                            if ((rax_8 + 0xc) > rcx)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] = (rax_8 + 0xc);
                                                
                                                if ((rax_8 + 0x10) > rcx)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (rax_8 + 0x10);
                                                    
                                                    if ((rax_8 + 0x14) > rcx)
                                                        result = 0;
                                                    else
                                                    {
                                                        int32_t rax_12 = (rax_8 + 0x14);
                                                        arg1[1] = rax_12;
                                                        int32_t rdx_7 = 0;
                                                        
                                                        if ((r8_4 - 5) <= 0)
                                                        {
                                                        label_18000c2ed:
                                                            int32_t rdi_1 = *(arg2 + 0x1c);
                                                            void lpMultiByteStr;
                                                            
                                                            if (rax_12 >= rdi_1)
                                                            {
                                                            label_18000c322:
                                                                int32_t rax_14 = data_1800306f0;
                                                                int32_t rdx_9 = *(arg2 + 0x1c);
                                                                int64_t s;
                                                                __builtin_memset(&s, 0, 0x50);
                                                                int32_t result_1;
                                                                
                                                                if (rax_14 != 0x32b)
                                                                {
                                                                    if (rax_14 != 0x34c)
                                                                    {
                                                                        if (rdx_9 == 0)
                                                                        {
                                                                        labelid_4:
                                                                            result_1 = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            if (sub_18000c5f0(arg1, rdx_9, &s) != 0)
                                                                                goto label_18000c404;
                                                                            
                                                                        labelid_4:
                                                                            result_1 = 0;
                                                                        }
                                                                    }
                                                                    else if (rdx_9 == 0)
                                                                    {
                                                                    labelid_4:
                                                                        result_1 = 0;
                                                                    }
                                                                    else
                                                                    {
                                                                        if (sub_18000cb20(arg1, rdx_9, &s) != 0)
                                                                            goto label_18000c404;
                                                                        
                                                                    labelid_4:
                                                                        result_1 = 0;
                                                                    }
                                                                }
                                                                else if (rdx_9 == 0)
                                                                {
                                                                labelid_4:
                                                                    result_1 = 0;
                                                                }
                                                                else if (sub_18000d030(arg1, rdx_9, &s) != 0)
                                                                {
                                                                label_18000c404:
                                                                    int64_t var_3a0;
                                                                    int32_t rax_18 = *var_3a0[4];
                                                                    result_1 = 1;
                                                                    
                                                                    if (rax_18 == 0)
                                                                    {
                                                                    label_18000c549:
                                                                        int64_t var_398;
                                                                        int32_t rax_28 = *var_398[4];
                                                                        
                                                                        if (rax_28 != 0)
                                                                        {
                                                                            int32_t i = 0;
                                                                            arg1[1] = rax_28;
                                                                            
                                                                            do
                                                                            {
                                                                                if (*arg1 == 0)
                                                                                    goto label_18000c5cb_2;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_18000c5cb_2;
                                                                                
                                                                                arg1[1] += 4;
                                                                                i += 1;
                                                                            } while (i < 0x20);
                                                                        }
                                                                        
                                                                        int64_t var_390;
                                                                        int64_t var_388;
                                                                        
                                                                        if (sub_18000d570(arg1, var_390, *var_390[4]) == 0)
                                                                        {
                                                                        labelid_4:
                                                                            result_1 = 0;
                                                                        }
                                                                        else if (sub_18000e400(arg1, var_388, *var_388[4]) == 0)
                                                                        {
                                                                        labelid_4:
                                                                            result_1 = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            int64_t var_380;
                                                                            int32_t rax_33;
                                                                            int64_t rdx_20;
                                                                            rax_33 = sub_18000d9f0(arg1, var_380, *var_380[4]);
                                                                            int64_t var_378;
                                                                            
                                                                            if (rax_33 == 0)
                                                                            {
                                                                            labelid_4:
                                                                                result_1 = 0;
                                                                            }
                                                                            else if (sub_18000b660(arg1, rdx_20, *var_378[4]) == 0)
                                                                            {
                                                                            label_18000c5cb:
                                                                                result_1 = 0;
                                                                            }
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        int32_t r14_1 = var_3a0;
                                                                        arg1[1] = rax_18;
                                                                        int32_t rax_19;
                                                                        
                                                                        if (r14_1 != 0)
                                                                            rax_19 = sub_180001fd0(&data_1800306f0, r14_1);
                                                                        
                                                                        if ((r14_1 == 0 || rax_19 != 0))
                                                                        {
                                                                            int32_t rdi_2 = 0;
                                                                            
                                                                            if (r14_1 != 0)
                                                                            {
                                                                                do
                                                                                {
                                                                                    memset(&lpMultiByteStr, 0, 0x104);
                                                                                    int64_t r8_9 = *arg1;
                                                                                    
                                                                                    if (r8_9 == 0)
                                                                                        goto label_18000c5cb_2;
                                                                                    
                                                                                    int32_t r9_1 = *(arg1 + 0xc);
                                                                                    
                                                                                    if ((arg1[1] + 4) > r9_1)
                                                                                        goto label_18000c5cb_2;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t rdx_11 = arg1[1];
                                                                                    int32_t r11_1 = arg1[2];
                                                                                    int32_t r10_1 = *((rdx_11 - 4) + r8_9);
                                                                                    
                                                                                    if (r11_1 != 0)
                                                                                        r10_1 = _bswap(r10_1);
                                                                                    
                                                                                    if ((rdx_11 + 4) > r9_1)
                                                                                        goto label_18000c5cb_2;
                                                                                    
                                                                                    arg1[1] = (rdx_11 + 4);
                                                                                    int32_t rsi_1 = *(rdx_11 + r8_9);
                                                                                    
                                                                                    if (r11_1 != 0)
                                                                                        rsi_1 = _bswap(rsi_1);
                                                                                    
                                                                                    if ((rdx_11 + 8) > r9_1)
                                                                                        goto label_18000c5cb_2;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r9_2 = *((arg1[1] - 4) + r8_9);
                                                                                    
                                                                                    if (r11_1 != 0)
                                                                                        r9_2 = _bswap(r9_2);
                                                                                    
                                                                                    sub_180005050(arg1, r10_1, &lpMultiByteStr);
                                                                                    void var_258;
                                                                                    sub_180005050(arg1, rsi_1, &var_258);
                                                                                    void var_148;
                                                                                    sub_180005050(arg1, r9_2, &var_148);
                                                                                    int64_t r9_3 = data_180030700;
                                                                                    
                                                                                    if (r9_3 != 0)
                                                                                        MultiByteToWideChar(0, MB_PRECOMPOSED, &lpMultiByteStr, 0xffffffff, ((rdi_2 * 0x208) + r9_3), 0xff);
                                                                                    
                                                                                    rdi_2 += 1;
                                                                                } while (rdi_2 < r14_1);
                                                                            }
                                                                            
                                                                            goto label_18000c549;
                                                                        }
                                                                        
                                                                    label_18000c5cb_1:
                                                                        result_1 = 0;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                label_18000c5cb_2:
                                                                    result_1 = 0;
                                                                }
                                                                
                                                                result = result_1;
                                                            }
                                                            else
                                                            {
                                                                while (true)
                                                                {
                                                                    if ((&lpMultiByteStr != 0 && sub_180004f90(arg1, &lpMultiByteStr) != 0))
                                                                    {
                                                                        if (arg1[1] >= rdi_1)
                                                                            goto label_18000c322;
                                                                        
                                                                        continue;
                                                                    }
                                                                    
                                                                    result = 0;
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            while (true)
                                                            {
                                                                rax_12 += 4;
                                                                
                                                                if (rax_12 > rcx)
                                                                {
                                                                    result = 0;
                                                                    break;
                                                                }
                                                                
                                                                rdx_7 += 1;
                                                                arg1[1] = rax_12;
                                                                
                                                                if (rdx_7 >= (r8_4 - 5))
                                                                    goto label_18000c2ed;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_3e8));
    return result;
}

int64_t sub_18000c5f0(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_198;
    int64_t rax_1 = (__security_cookie ^ &var_198);
    int64_t r10 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if ((r10 != 0 && (arg2 + 4) <= *(arg1 + 0xc)))
    {
        arg1[1] = (arg2 + 4);
        int32_t rdx = *(arg2 + r10);
        
        if (arg1[2] != 0)
            rdx = _bswap(rdx);
        
        void var_158;
        sub_180005050(arg1, rdx, &var_158);
        int64_t i = *arg1;
        int32_t rcx = 0;
        int32_t rdx_1 = 0;
        
        while (i != 0)
        {
            if ((arg1[1] + 4) > *(arg1 + 0xc))
                break;
            
            arg1[1] += 4;
            rdx_1 += 1;
            int32_t rax_6 = arg1[1];
            
            if (rdx_1 >= 6)
            {
                int32_t rdx_2 = *(arg1 + 0xc);
                
                while (true)
                {
                    if (i == 0)
                        goto label_18000cb1c;
                    
                    rax_6 += 4;
                    
                    if (rax_6 > rdx_2)
                        goto label_18000cb1c;
                    
                    rcx += 1;
                    arg1[1] = rax_6;
                    
                    if (rcx >= 0x13)
                    {
                        if (i == 0)
                            break;
                        
                        if ((rax_6 + 4) > rdx_2)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r10_1 = arg1[1];
                        int32_t r11_1 = arg1[2];
                        int32_t r13_1 = *((r10_1 - 4) + i);
                        
                        if (r11_1 != 0)
                            r13_1 = _bswap(r13_1);
                        
                        if ((r10_1 + 4) > rdx_2)
                            result = 0;
                        else
                        {
                            arg1[1] = (r10_1 + 4);
                            int32_t rax_11 = *(r10_1 + i);
                            int32_t var_178_1 = rax_11;
                            
                            if (r11_1 != 0)
                                var_178_1 = _bswap(rax_11);
                            
                            if ((r10_1 + 8) > rdx_2)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r10_3 = arg1[1];
                                int32_t rax_15 = *((r10_3 - 4) + i);
                                int32_t var_174_1 = rax_15;
                                
                                if (r11_1 != 0)
                                    var_174_1 = _bswap(rax_15);
                                
                                if ((r10_3 + 4) > rdx_2)
                                    result = 0;
                                else
                                {
                                    arg1[1] = (r10_3 + 4);
                                    int32_t rax_19 = *(r10_3 + i);
                                    int32_t var_170_1 = rax_19;
                                    
                                    if (r11_1 != 0)
                                        var_170_1 = _bswap(rax_19);
                                    
                                    if ((r10_3 + 8) > rdx_2)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r10_5 = arg1[1];
                                        int32_t rax_23 = *((r10_5 - 4) + i);
                                        int32_t var_16c_1 = rax_23;
                                        
                                        if (r11_1 != 0)
                                            var_16c_1 = _bswap(rax_23);
                                        
                                        if ((r10_5 + 4) > rdx_2)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (r10_5 + 4);
                                            int32_t rax_27 = *(r10_5 + i);
                                            int32_t var_168_1 = rax_27;
                                            
                                            if (r11_1 != 0)
                                                var_168_1 = _bswap(rax_27);
                                            
                                            if ((r10_5 + 8) > rdx_2)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_7 = arg1[1];
                                                
                                                if ((r10_7 + 4) > rdx_2)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (r10_7 + 4);
                                                    int32_t rax_32 = *(r10_7 + i);
                                                    int32_t var_164_1 = rax_32;
                                                    
                                                    if (r11_1 != 0)
                                                        var_164_1 = _bswap(rax_32);
                                                    
                                                    if ((r10_7 + 8) > rdx_2)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_9 = arg1[1];
                                                        int32_t r12_1 = *((r10_9 - 4) + i);
                                                        
                                                        if (r11_1 != 0)
                                                            r12_1 = _bswap(r12_1);
                                                        
                                                        if ((r10_9 + 4) <= rdx_2)
                                                            arg1[1] = (r10_9 + 4);
                                                        
                                                        if (((r10_9 + 4) > rdx_2 || (r10_9 + 8) > rdx_2))
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r10_11 = arg1[1];
                                                            int32_t r15_1 = *((r10_11 - 4) + i);
                                                            
                                                            if (r11_1 != 0)
                                                                r15_1 = _bswap(r15_1);
                                                            
                                                            if ((r10_11 + 4) > rdx_2)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] = (r10_11 + 4);
                                                                int32_t r14_1 = *(r10_11 + i);
                                                                
                                                                if (r11_1 != 0)
                                                                    r14_1 = _bswap(r14_1);
                                                                
                                                                if ((r10_11 + 8) > rdx_2)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t rcx_1 = arg1[1];
                                                                    
                                                                    if ((rcx_1 + 4) > rdx_2)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] = (rcx_1 + 4);
                                                                        
                                                                        if ((rcx_1 + 8) > rdx_2)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] += 4;
                                                                            int32_t rcx_3 = arg1[1];
                                                                            
                                                                            if ((rcx_3 + 4) > rdx_2)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] = (rcx_3 + 4);
                                                                                
                                                                                if ((rcx_3 + 8) > rdx_2)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    int32_t rcx_5 = arg1[1];
                                                                                    
                                                                                    if ((rcx_5 + 4) > rdx_2)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] = (rcx_5 + 4);
                                                                                        
                                                                                        if ((rcx_5 + 8) > rdx_2)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            int32_t r10_13 = arg1[1];
                                                                                            int32_t rsi_1 = *((r10_13 - 4) + i);
                                                                                            
                                                                                            if (r11_1 != 0)
                                                                                                rsi_1 = _bswap(rsi_1);
                                                                                            
                                                                                            if ((r10_13 + 4) > rdx_2)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] = (r10_13 + 4);
                                                                                                int32_t rdi_1 = *(r10_13 + i);
                                                                                                
                                                                                                if (r11_1 != 0)
                                                                                                    rdi_1 = _bswap(rdi_1);
                                                                                                
                                                                                                if ((r10_13 + 8) > rdx_2)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    int32_t rcx_7 = arg1[1];
                                                                                                    
                                                                                                    if ((rcx_7 + 4) > rdx_2)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] = (rcx_7 + 4);
                                                                                                        
                                                                                                        if ((rcx_7 + 8) > rdx_2)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            int32_t rcx_9 = arg1[1];
                                                                                                            
                                                                                                            if ((rcx_9 + 4) > rdx_2)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] = (rcx_9 + 4);
                                                                                                                
                                                                                                                if ((rcx_9 + 8) > rdx_2)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    int32_t r10_15 = arg1[1];
                                                                                                                    int32_t rbx_1 = *((r10_15 - 4) + i);
                                                                                                                    
                                                                                                                    if (r11_1 != 0)
                                                                                                                        rbx_1 = _bswap(rbx_1);
                                                                                                                    
                                                                                                                    if ((r10_15 + 4) > rdx_2)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] = (r10_15 + 4);
                                                                                                                        int32_t r8_1 = *(r10_15 + i);
                                                                                                                        
                                                                                                                        if (r11_1 != 0)
                                                                                                                            r8_1 = _bswap(r8_1);
                                                                                                                        
                                                                                                                        if ((r10_15 + 8) > rdx_2)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] += 4;
                                                                                                                            int32_t rcx_11 = arg1[1];
                                                                                                                            
                                                                                                                            if ((rcx_11 + 4) > rdx_2)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] = (rcx_11 + 4);
                                                                                                                                
                                                                                                                                if ((rcx_11 + 8) > rdx_2)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] += 4;
                                                                                                                                    int32_t rcx_13 = arg1[1];
                                                                                                                                    
                                                                                                                                    if ((rcx_13 + 4) > rdx_2)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] = (rcx_13 + 4);
                                                                                                                                        
                                                                                                                                        if ((rcx_13 + 8) > rdx_2)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] += 4;
                                                                                                                                            int32_t rcx_15 = arg1[1];
                                                                                                                                            
                                                                                                                                            if ((rcx_15 + 4) > rdx_2)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] = (rcx_15 + 4);
                                                                                                                                                *(arg3 + 0x1c) = var_178_1;
                                                                                                                                                *(arg3 + 0x20) = var_174_1;
                                                                                                                                                *(arg3 + 0x24) = var_170_1;
                                                                                                                                                *(arg3 + 0x28) = var_16c_1;
                                                                                                                                                *(arg3 + 0x2c) = var_168_1;
                                                                                                                                                *(arg3 + 0x30) = var_164_1;
                                                                                                                                                result = 1;
                                                                                                                                                *(arg3 + 0x18) = r13_1;
                                                                                                                                                *(arg3 + 0x34) = r12_1;
                                                                                                                                                *(arg3 + 0x38) = r15_1;
                                                                                                                                                *(arg3 + 0x3c) = r14_1;
                                                                                                                                                *(arg3 + 0x40) = rsi_1;
                                                                                                                                                *(arg3 + 0x44) = rdi_1;
                                                                                                                                                *(arg3 + 0x48) = rbx_1;
                                                                                                                                                *(arg3 + 0x4c) = r8_1;
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        goto label_18000caf2;
                    }
                }
                
                break;
            }
        }
    }
    
label_18000cb1c:
    result = 0;
label_18000caf2:
    __security_check_cookie((rax_1 ^ &var_198));
    return result;
}

int64_t sub_18000cb20(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_198;
    int64_t rax_1 = (__security_cookie ^ &var_198);
    int64_t r9 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if ((r9 != 0 && (arg2 + 4) <= *(arg1 + 0xc)))
    {
        arg1[1] = (arg2 + 4);
        int32_t rdx = *(arg2 + r9);
        
        if (arg1[2] != 0)
            rdx = _bswap(rdx);
        
        void var_158;
        sub_180005050(arg1, rdx, &var_158);
        int64_t i = *arg1;
        int32_t rdx_1 = 0;
        int32_t r8_1 = 0;
        
        while (i != 0)
        {
            if ((arg1[1] + 4) > *(arg1 + 0xc))
                break;
            
            arg1[1] += 4;
            r8_1 += 1;
            int32_t rax_6 = arg1[1];
            
            if (r8_1 >= 6)
            {
                int32_t r8_2 = *(arg1 + 0xc);
                
                while (true)
                {
                    if (i == 0)
                        goto label_18000d028;
                    
                    rax_6 += 4;
                    
                    if (rax_6 > r8_2)
                        goto label_18000d028;
                    
                    rdx_1 += 1;
                    arg1[1] = rax_6;
                    
                    if (rdx_1 >= 0x13)
                    {
                        if (i == 0)
                            break;
                        
                        if ((rax_6 + 4) > r8_2)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r10_1 = arg1[1];
                        int32_t r11_1 = arg1[2];
                        int32_t r13_1 = *((r10_1 - 4) + i);
                        
                        if (r11_1 != 0)
                            r13_1 = _bswap(r13_1);
                        
                        if ((r10_1 + 4) > r8_2)
                            result = 0;
                        else
                        {
                            arg1[1] = (r10_1 + 4);
                            int32_t rax_11 = *(r10_1 + i);
                            int32_t var_178_1 = rax_11;
                            
                            if (r11_1 != 0)
                                var_178_1 = _bswap(rax_11);
                            
                            if ((r10_1 + 8) > r8_2)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r10_3 = arg1[1];
                                int32_t rax_15 = *((r10_3 - 4) + i);
                                int32_t var_174_1 = rax_15;
                                
                                if (r11_1 != 0)
                                    var_174_1 = _bswap(rax_15);
                                
                                if ((r10_3 + 4) > r8_2)
                                    result = 0;
                                else
                                {
                                    arg1[1] = (r10_3 + 4);
                                    int32_t rax_19 = *(r10_3 + i);
                                    int32_t var_170_1 = rax_19;
                                    
                                    if (r11_1 != 0)
                                        var_170_1 = _bswap(rax_19);
                                    
                                    if ((r10_3 + 8) > r8_2)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r10_5 = arg1[1];
                                        int32_t rax_23 = *((r10_5 - 4) + i);
                                        int32_t var_16c_1 = rax_23;
                                        
                                        if (r11_1 != 0)
                                            var_16c_1 = _bswap(rax_23);
                                        
                                        if ((r10_5 + 4) > r8_2)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (r10_5 + 4);
                                            int32_t rax_27 = *(r10_5 + i);
                                            int32_t var_168_1 = rax_27;
                                            
                                            if (r11_1 != 0)
                                                var_168_1 = _bswap(rax_27);
                                            
                                            if ((r10_5 + 8) > r8_2)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_7 = arg1[1];
                                                
                                                if ((r10_7 + 4) > r8_2)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (r10_7 + 4);
                                                    int32_t rax_32 = *(r10_7 + i);
                                                    int32_t var_164_1 = rax_32;
                                                    
                                                    if (r11_1 != 0)
                                                        var_164_1 = _bswap(rax_32);
                                                    
                                                    if ((r10_7 + 8) > r8_2)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_9 = arg1[1];
                                                        int32_t r12_1 = *((r10_9 - 4) + i);
                                                        
                                                        if (r11_1 != 0)
                                                            r12_1 = _bswap(r12_1);
                                                        
                                                        if ((r10_9 + 4) <= r8_2)
                                                            arg1[1] = (r10_9 + 4);
                                                        
                                                        if (((r10_9 + 4) > r8_2 || (r10_9 + 8) > r8_2))
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r10_11 = arg1[1];
                                                            int32_t r15_1 = *((r10_11 - 4) + i);
                                                            
                                                            if (r11_1 != 0)
                                                                r15_1 = _bswap(r15_1);
                                                            
                                                            if ((r10_11 + 4) > r8_2)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] = (r10_11 + 4);
                                                                int32_t r14_1 = *(r10_11 + i);
                                                                
                                                                if (r11_1 != 0)
                                                                    r14_1 = _bswap(r14_1);
                                                                
                                                                if ((r10_11 + 8) > r8_2)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t rdx_2 = arg1[1];
                                                                    
                                                                    if ((rdx_2 + 4) > r8_2)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] = (rdx_2 + 4);
                                                                        
                                                                        if ((rdx_2 + 8) > r8_2)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] += 4;
                                                                            int32_t rdx_4 = arg1[1];
                                                                            
                                                                            if ((rdx_4 + 4) > r8_2)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] = (rdx_4 + 4);
                                                                                
                                                                                if ((rdx_4 + 8) > r8_2)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    int32_t rdx_6 = arg1[1];
                                                                                    
                                                                                    if ((rdx_6 + 4) > r8_2)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] = (rdx_6 + 4);
                                                                                        
                                                                                        if ((rdx_6 + 8) > r8_2)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            int32_t rdx_8 = arg1[1];
                                                                                            
                                                                                            if ((rdx_8 + 4) > r8_2)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] = (rdx_8 + 4);
                                                                                                
                                                                                                if ((rdx_8 + 8) > r8_2)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    int32_t r10_13 = arg1[1];
                                                                                                    int32_t rsi_1 = *((r10_13 - 4) + i);
                                                                                                    
                                                                                                    if (r11_1 != 0)
                                                                                                        rsi_1 = _bswap(rsi_1);
                                                                                                    
                                                                                                    if ((r10_13 + 4) > r8_2)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] = (r10_13 + 4);
                                                                                                        int32_t rdi_1 = *(r10_13 + i);
                                                                                                        
                                                                                                        if (r11_1 != 0)
                                                                                                            rdi_1 = _bswap(rdi_1);
                                                                                                        
                                                                                                        if ((r10_13 + 8) > r8_2)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            int32_t rdx_10 = arg1[1];
                                                                                                            
                                                                                                            if ((rdx_10 + 4) > r8_2)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] = (rdx_10 + 4);
                                                                                                                
                                                                                                                if ((rdx_10 + 8) > r8_2)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    int32_t rdx_12 = arg1[1];
                                                                                                                    
                                                                                                                    if ((rdx_12 + 4) > r8_2)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] = (rdx_12 + 4);
                                                                                                                        
                                                                                                                        if ((rdx_12 + 8) > r8_2)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] += 4;
                                                                                                                            int32_t r10_15 = arg1[1];
                                                                                                                            int32_t rbx_1 = *((r10_15 - 4) + i);
                                                                                                                            
                                                                                                                            if (r11_1 != 0)
                                                                                                                                rbx_1 = _bswap(rbx_1);
                                                                                                                            
                                                                                                                            if ((r10_15 + 4) > r8_2)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] = (r10_15 + 4);
                                                                                                                                int32_t rdx_14 = *(r10_15 + i);
                                                                                                                                
                                                                                                                                if (r11_1 != 0)
                                                                                                                                    rdx_14 = _bswap(rdx_14);
                                                                                                                                
                                                                                                                                if ((r10_15 + 8) > r8_2)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] += 4;
                                                                                                                                    int32_t r9_1 = arg1[1];
                                                                                                                                    
                                                                                                                                    if ((r9_1 + 4) > r8_2)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] = (r9_1 + 4);
                                                                                                                                        *(arg3 + 0x1c) = var_178_1;
                                                                                                                                        *(arg3 + 0x20) = var_174_1;
                                                                                                                                        *(arg3 + 0x24) = var_170_1;
                                                                                                                                        *(arg3 + 0x28) = var_16c_1;
                                                                                                                                        *(arg3 + 0x2c) = var_168_1;
                                                                                                                                        *(arg3 + 0x30) = var_164_1;
                                                                                                                                        result = 1;
                                                                                                                                        *(arg3 + 0x18) = r13_1;
                                                                                                                                        *(arg3 + 0x34) = r12_1;
                                                                                                                                        *(arg3 + 0x38) = r15_1;
                                                                                                                                        *(arg3 + 0x3c) = r14_1;
                                                                                                                                        *(arg3 + 0x40) = rsi_1;
                                                                                                                                        *(arg3 + 0x44) = rdi_1;
                                                                                                                                        *(arg3 + 0x48) = rbx_1;
                                                                                                                                        *(arg3 + 0x4c) = rdx_14;
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        goto label_18000cffe;
                    }
                }
                
                break;
            }
        }
    }
    
label_18000d028:
    result = 0;
label_18000cffe:
    __security_check_cookie((rax_1 ^ &var_198));
    return result;
}

int64_t sub_18000d030(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_198;
    int64_t rax_1 = (__security_cookie ^ &var_198);
    int64_t r9 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if ((r9 != 0 && (arg2 + 4) <= *(arg1 + 0xc)))
    {
        arg1[1] = (arg2 + 4);
        int32_t rdx = *(arg2 + r9);
        
        if (arg1[2] != 0)
            rdx = _bswap(rdx);
        
        void var_158;
        sub_180005050(arg1, rdx, &var_158);
        int64_t i = *arg1;
        int32_t rdx_1 = 0;
        int32_t r8_1 = 0;
        
        while (i != 0)
        {
            if ((arg1[1] + 4) > *(arg1 + 0xc))
                break;
            
            arg1[1] += 4;
            r8_1 += 1;
            int32_t rax_6 = arg1[1];
            
            if (r8_1 >= 6)
            {
                int32_t r8_2 = *(arg1 + 0xc);
                
                while (true)
                {
                    if (i == 0)
                        goto label_18000d55d;
                    
                    rax_6 += 4;
                    
                    if (rax_6 > r8_2)
                        goto label_18000d55d;
                    
                    rdx_1 += 1;
                    arg1[1] = rax_6;
                    
                    if (rdx_1 >= 0xa)
                    {
                        if (i == 0)
                            break;
                        
                        if ((rax_6 + 4) > r8_2)
                            break;
                        
                        arg1[1] += 4;
                        int32_t rdx_2 = arg1[1];
                        
                        if ((rdx_2 + 4) > r8_2)
                            break;
                        
                        arg1[1] = (rdx_2 + 4);
                        
                        if ((rdx_2 + 8) > r8_2)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r10_1 = arg1[1];
                        int32_t r11_1 = arg1[2];
                        int32_t r13_1 = *((r10_1 - 4) + i);
                        
                        if (r11_1 != 0)
                            r13_1 = _bswap(r13_1);
                        
                        if ((r10_1 + 4) > r8_2)
                            result = 0;
                        else
                        {
                            arg1[1] = (r10_1 + 4);
                            int32_t rax_13 = *(r10_1 + i);
                            int32_t var_178_1 = rax_13;
                            
                            if (r11_1 != 0)
                                var_178_1 = _bswap(rax_13);
                            
                            if ((r10_1 + 8) > r8_2)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r10_3 = arg1[1];
                                int32_t rax_17 = *((r10_3 - 4) + i);
                                int32_t var_174_1 = rax_17;
                                
                                if (r11_1 != 0)
                                    var_174_1 = _bswap(rax_17);
                                
                                if ((r10_3 + 4) > r8_2)
                                    result = 0;
                                else
                                {
                                    arg1[1] = (r10_3 + 4);
                                    int32_t rax_21 = *(r10_3 + i);
                                    int32_t var_170_1 = rax_21;
                                    
                                    if (r11_1 != 0)
                                        var_170_1 = _bswap(rax_21);
                                    
                                    if ((r10_3 + 8) > r8_2)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r10_5 = arg1[1];
                                        int32_t rax_25 = *((r10_5 - 4) + i);
                                        int32_t var_16c_1 = rax_25;
                                        
                                        if (r11_1 != 0)
                                            var_16c_1 = _bswap(rax_25);
                                        
                                        if ((r10_5 + 4) > r8_2)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (r10_5 + 4);
                                            int32_t rax_29 = *(r10_5 + i);
                                            int32_t var_168_1 = rax_29;
                                            
                                            if (r11_1 != 0)
                                                var_168_1 = _bswap(rax_29);
                                            
                                            if ((r10_5 + 8) > r8_2)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_7 = arg1[1];
                                                
                                                if ((r10_7 + 4) > r8_2)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (r10_7 + 4);
                                                    int32_t rax_34 = *(r10_7 + i);
                                                    int32_t var_164_1 = rax_34;
                                                    
                                                    if (r11_1 != 0)
                                                        var_164_1 = _bswap(rax_34);
                                                    
                                                    if ((r10_7 + 8) > r8_2)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_9 = arg1[1];
                                                        int32_t r12_1 = *((r10_9 - 4) + i);
                                                        
                                                        if (r11_1 != 0)
                                                            r12_1 = _bswap(r12_1);
                                                        
                                                        if ((r10_9 + 4) <= r8_2)
                                                            arg1[1] = (r10_9 + 4);
                                                        
                                                        if (((r10_9 + 4) > r8_2 || (r10_9 + 8) > r8_2))
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r10_11 = arg1[1];
                                                            int32_t r15_1 = *((r10_11 - 4) + i);
                                                            
                                                            if (r11_1 != 0)
                                                                r15_1 = _bswap(r15_1);
                                                            
                                                            if ((r10_11 + 4) > r8_2)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] = (r10_11 + 4);
                                                                int32_t r14_1 = *(r10_11 + i);
                                                                
                                                                if (r11_1 != 0)
                                                                    r14_1 = _bswap(r14_1);
                                                                
                                                                if ((r10_11 + 8) > r8_2)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t rdx_4 = arg1[1];
                                                                    
                                                                    if ((rdx_4 + 4) > r8_2)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] = (rdx_4 + 4);
                                                                        
                                                                        if ((rdx_4 + 8) > r8_2)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] += 4;
                                                                            int32_t rdx_6 = arg1[1];
                                                                            
                                                                            if ((rdx_6 + 4) > r8_2)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] = (rdx_6 + 4);
                                                                                
                                                                                if ((rdx_6 + 8) > r8_2)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    int32_t rdx_8 = arg1[1];
                                                                                    
                                                                                    if ((rdx_8 + 4) > r8_2)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] = (rdx_8 + 4);
                                                                                        
                                                                                        if ((rdx_8 + 8) > r8_2)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            int32_t rdx_10 = arg1[1];
                                                                                            
                                                                                            if ((rdx_10 + 4) > r8_2)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] = (rdx_10 + 4);
                                                                                                
                                                                                                if ((rdx_10 + 8) > r8_2)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    int32_t r10_13 = arg1[1];
                                                                                                    int32_t rsi_1 = *((r10_13 - 4) + i);
                                                                                                    
                                                                                                    if (r11_1 != 0)
                                                                                                        rsi_1 = _bswap(rsi_1);
                                                                                                    
                                                                                                    if ((r10_13 + 4) > r8_2)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] = (r10_13 + 4);
                                                                                                        int32_t rdi_1 = *(r10_13 + i);
                                                                                                        
                                                                                                        if (r11_1 != 0)
                                                                                                            rdi_1 = _bswap(rdi_1);
                                                                                                        
                                                                                                        if ((r10_13 + 8) > r8_2)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            int32_t rdx_12 = arg1[1];
                                                                                                            
                                                                                                            if ((rdx_12 + 4) > r8_2)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] = (rdx_12 + 4);
                                                                                                                
                                                                                                                if ((rdx_12 + 8) > r8_2)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    int32_t rdx_14 = arg1[1];
                                                                                                                    
                                                                                                                    if ((rdx_14 + 4) > r8_2)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] = (rdx_14 + 4);
                                                                                                                        
                                                                                                                        if ((rdx_14 + 8) > r8_2)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] += 4;
                                                                                                                            int32_t r10_15 = arg1[1];
                                                                                                                            int32_t rbx_1 = *((r10_15 - 4) + i);
                                                                                                                            
                                                                                                                            if (r11_1 != 0)
                                                                                                                                rbx_1 = _bswap(rbx_1);
                                                                                                                            
                                                                                                                            if ((r10_15 + 4) > r8_2)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] = (r10_15 + 4);
                                                                                                                                int32_t rdx_16 = *(r10_15 + i);
                                                                                                                                
                                                                                                                                if (r11_1 != 0)
                                                                                                                                    rdx_16 = _bswap(rdx_16);
                                                                                                                                
                                                                                                                                if ((r10_15 + 8) > r8_2)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] += 4;
                                                                                                                                    int32_t r9_1 = arg1[1];
                                                                                                                                    
                                                                                                                                    if ((r9_1 + 4) > r8_2)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] = (r9_1 + 4);
                                                                                                                                        *(arg3 + 0x1c) = var_178_1;
                                                                                                                                        *(arg3 + 0x20) = var_174_1;
                                                                                                                                        *(arg3 + 0x24) = var_170_1;
                                                                                                                                        *(arg3 + 0x28) = var_16c_1;
                                                                                                                                        *(arg3 + 0x2c) = var_168_1;
                                                                                                                                        *(arg3 + 0x30) = var_164_1;
                                                                                                                                        result = 1;
                                                                                                                                        *(arg3 + 0x18) = r13_1;
                                                                                                                                        *(arg3 + 0x34) = r12_1;
                                                                                                                                        *(arg3 + 0x38) = r15_1;
                                                                                                                                        *(arg3 + 0x3c) = r14_1;
                                                                                                                                        *(arg3 + 0x40) = rsi_1;
                                                                                                                                        *(arg3 + 0x44) = rdi_1;
                                                                                                                                        *(arg3 + 0x48) = rbx_1;
                                                                                                                                        *(arg3 + 0x4c) = rdx_16;
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        goto label_18000d533;
                    }
                }
                
                break;
            }
        }
    }
    
label_18000d55d:
    result = 0;
label_18000d533:
    __security_check_cookie((rax_1 ^ &var_198));
    return result;
}

int64_t sub_18000d570(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_4b8;
    int64_t rax_1 = (__security_cookie ^ &var_4b8);
    int32_t result;
    
    if ((arg3 != 0 && arg2 != 0))
    {
        arg1[1] = arg3;
        result = sub_1800020d0(&data_1800306f0, arg2);
        
        if (result != 0)
        {
            int32_t i = 0;
            int32_t rbp_1 = 0;
            void var_488;
            void var_378;
            void var_268;
            void var_158;
            
            if (arg2 == 0)
            {
            label_18000d79d:
                arg1[1] = arg3;
                int32_t r14_2 = 0;
                
                if (arg2 == 0)
                {
                label_18000d973:
                    
                    do
                    {
                        if (*arg1 == 0)
                            goto label_18000d99a_1;
                        
                        if ((arg1[1] + 4) > *(arg1 + 0xc))
                            goto label_18000d99a_1;
                        
                        arg1[1] += 4;
                        i += 1;
                    } while (i < 0x20);
                    
                    result = 1;
                }
                else
                {
                    while (true)
                    {
                        int64_t rdx_6 = *arg1;
                        void* rax_23 = ((r14_2 * 0x138) + data_180030710);
                        
                        if (rdx_6 == 0)
                            break;
                        
                        int32_t r8_7 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) > r8_7)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r9_6 = arg1[1];
                        int32_t r10_2 = arg1[2];
                        int32_t r11_2 = *((r9_6 - 4) + rdx_6);
                        
                        if (r10_2 != 0)
                            r11_2 = _bswap(r11_2);
                        
                        if ((r9_6 + 4) > r8_7)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r9_7 = arg1[1];
                        int32_t r15_1 = *((r9_7 - 4) + rdx_6);
                        
                        if (r10_2 != 0)
                            r15_1 = _bswap(r15_1);
                        
                        if ((r9_7 + 4) > r8_7)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r9_8 = arg1[1];
                        int32_t rbp_2 = *((r9_8 - 4) + rdx_6);
                        
                        if (r10_2 != 0)
                            rbp_2 = _bswap(rbp_2);
                        
                        if ((r9_8 + 4) > r8_7)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r9_9 = arg1[1];
                        int32_t rsi_2 = *((r9_9 - 4) + rdx_6);
                        
                        if (r10_2 != 0)
                            rsi_2 = _bswap(rsi_2);
                        
                        if ((r9_9 + 4) > r8_7)
                            break;
                        
                        arg1[1] += 4;
                        int32_t i_2 = arg1[1];
                        int32_t rdi_2 = *((i_2 - 4) + rdx_6);
                        
                        if (r10_2 != 0)
                            rdi_2 = _bswap(rdi_2);
                        
                        if (data_1800306f4 != 0)
                            i = i_2;
                        
                        if ((arg1[1] + 4) > r8_7)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r13_1 = arg1[1];
                        int32_t r9_10 = *((r13_1 - 4) + rdx_6);
                        
                        if (r10_2 != 0)
                            r9_10 = _bswap(r9_10);
                        
                        if ((r13_1 + 4) > r8_7)
                            break;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > r8_7)
                            break;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > r8_7)
                            break;
                        
                        arg1[1] += 4;
                        sub_180005050(arg1, r11_2, &var_158);
                        sub_180005050(arg1, r15_1, &var_268);
                        sub_180005050(arg1, rbp_2, &var_378);
                        sub_180005050(arg1, rsi_2, &var_488);
                        
                        if ((data_1800306f4 != 0 && (r9_10 != 0 && rdi_2 != 0)))
                            r9_10 += i;
                        
                        int32_t rsi_3 = arg1[1];
                        
                        if (sub_18000a5e0(arg1, rax_23, rdi_2, r9_10) == 0)
                            break;
                        
                        r14_2 += 1;
                        arg1[1] = rsi_3;
                        i = 0;
                        
                        if (r14_2 >= arg2)
                            goto label_18000d973;
                    }
                    
                label_18000d99a:
                    result = 0;
                }
            }
            else
            {
                while (true)
                {
                    memset(&var_488, 0, 0x104);
                    int64_t rdx = *arg1;
                    
                    if (rdx == 0)
                        break;
                    
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r9_1 = arg1[1];
                    int32_t r10_1 = arg1[2];
                    int32_t r11_1 = *((r9_1 - 4) + rdx);
                    
                    if (r10_1 != 0)
                        r11_1 = _bswap(r11_1);
                    
                    if ((r9_1 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r9_2 = arg1[1];
                    int32_t rsi_1 = *((r9_2 - 4) + rdx);
                    
                    if (r10_1 != 0)
                        rsi_1 = _bswap(rsi_1);
                    
                    if ((r9_2 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r9_3 = arg1[1];
                    int32_t rdi_1 = *((r9_3 - 4) + rdx);
                    
                    if (r10_1 != 0)
                        rdi_1 = _bswap(rdi_1);
                    
                    if ((r9_3 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r14_1 = arg1[1];
                    int32_t r9_4 = *((r14_1 - 4) + rdx);
                    
                    if (r10_1 != 0)
                        r9_4 = _bswap(r9_4);
                    
                    if ((r14_1 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    sub_180005050(arg1, r11_1, &var_488);
                    sub_180005050(arg1, rsi_1, &var_378);
                    sub_180005050(arg1, rdi_1, &var_268);
                    sub_180005050(arg1, r9_4, &var_158);
                    void* r9_5 = data_180030710;
                    
                    if (r9_5 != 0)
                    {
                        void* rdx_5 = &var_488;
                        char* r8_6 = ((r9_5 + 0x34) + (rbp_1 * 0x138));
                        char i_1;
                        
                        do
                        {
                            i_1 = *rdx_5;
                            rdx_5 += 1;
                            *r8_6 = i_1;
                            r8_6 = &r8_6[1];
                        } while (i_1 != 0);
                    }
                    
                    rbp_1 += 1;
                    
                    if (rbp_1 >= arg2)
                        goto label_18000d79d;
                }
                
            label_18000d99a_1:
                result = 0;
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_4b8));
    return result;
}

uint64_t sub_18000d9f0(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_158;
    int64_t rax_1 = (__security_cookie ^ &var_158);
    uint64_t result;
    
    if (arg3 != 0)
    {
        int32_t r9_1 = 0;
        arg1[1] = arg3;
        void str1;
        
        if (arg2 == 0)
        {
        label_18000daa7:
            int32_t rbp_1 = 0;
            arg1[1] = arg3;
            
            if (arg2 == 0)
            {
            label_18000dbd1:
                result = 1;
            }
            else
            {
                while (true)
                {
                    memset(&str1, 0, 0x104);
                    int64_t r11_1 = *arg1;
                    
                    if (r11_1 != 0)
                    {
                        int32_t i = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= i)
                        {
                            arg1[1] += 4;
                            
                            if ((arg1[1] + 4) <= i)
                            {
                                arg1[1] += 4;
                                int32_t r9_2 = arg1[1];
                                int32_t r10_2 = arg1[2];
                                int32_t rdx_2 = *((r9_2 - 4) + r11_1);
                                
                                if (r10_2 != 0)
                                    rdx_2 = _bswap(rdx_2);
                                
                                if ((r9_2 + 4) <= i)
                                {
                                    arg1[1] += 4;
                                    int32_t r9_3 = arg1[1];
                                    int32_t rsi_1 = *((r9_3 - 4) + r11_1);
                                    
                                    if (r10_2 != 0)
                                        rsi_1 = _bswap(rsi_1);
                                    
                                    if (rdx_2 > 0x64)
                                    {
                                        arg1[1] = rdx_2;
                                        int64_t rdx_3 = 0;
                                        
                                        while ((arg1[1] + 1) <= i)
                                        {
                                            arg1[1] += 1;
                                            char rax_19 = *((arg1[1] - 1) + r11_1);
                                            
                                            if (rdx_3 < 0x104)
                                                *(&str1 + rdx_3) = rax_19;
                                            
                                            rdx_3 += 1;
                                            
                                            if (rax_19 == 0)
                                            {
                                                if (rdx_3 >= 0x104)
                                                    char var_35_1 = 0;
                                                else
                                                    *(&str1 + rdx_3) = rax_19;
                                                
                                                arg1[1] = r9_3;
                                                break;
                                            }
                                        }
                                    }
                                    
                                    char* rax_20;
                                    int64_t rdx_4;
                                    rax_20 = strstr(&str1, "-skin");
                                    
                                    if (rax_20 == 0)
                                        goto label_18000dbc6;
                                    
                                    int32_t rdi_1 = arg1[1];
                                    
                                    if (sub_18000dc10(arg1, rdx_4, rsi_1) != 0)
                                    {
                                        arg1[1] = rdi_1;
                                    label_18000dbc6:
                                        rbp_1 += 1;
                                        
                                        if (rbp_1 >= arg2)
                                            goto label_18000dbd1;
                                        
                                        continue;
                                    }
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
        else
        {
            while (true)
            {
                int64_t rdx = *arg1;
                
                if (rdx != 0)
                {
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= r8)
                    {
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r10_1 = arg1[1];
                            int32_t rdx_1 = *((r10_1 - 4) + rdx);
                            
                            if (arg1[2] != 0)
                                rdx_1 = _bswap(rdx_1);
                            
                            if ((r10_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                sub_180005050(arg1, rdx_1, &str1);
                                r9_1 += 1;
                                
                                if (r9_1 >= arg2)
                                    goto label_18000daa7;
                                
                                continue;
                            }
                        }
                    }
                }
                
                result = 0;
                break;
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_158));
    return result;
}

uint64_t sub_18000dc10(int64_t* arg1, int64_t arg2, int32_t arg3)
{
    if (arg3 == 0)
        return (arg3 + 1);
    
    int64_t r9 = *arg1;
    arg1[1] = arg3;
    
    if (r9 != 0)
    {
        uint64_t rdx = *(arg1 + 0xc);
        
        if ((arg3 + 4) <= rdx)
        {
            arg1[1] = (arg3 + 4);
            
            if ((arg3 + 6) <= rdx)
            {
                arg1[1] += 2;
                int32_t r10_1 = arg1[1];
                int32_t r11_1 = arg1[2];
                int16_t r8 = *((r10_1 - 2) + r9);
                
                if (r11_1 != 0)
                    r8 = (ROLW(r8, 8));
                
                if ((r10_1 + 2) <= rdx)
                {
                    arg1[1] += 2;
                    int32_t r10_2 = arg1[1];
                    int16_t rax_7 = *((r10_2 - 2) + r9);
                    
                    if (r11_1 != 0)
                        rax_7 = (ROLW(rax_7, 8));
                    
                    if ((rax_7 != 0 || data_1800306f0 <= 0x34c))
                    {
                        if (sub_18000dd30(arg1) != 0)
                            return 1;
                    }
                    else if ((r10_2 + 4) <= rdx)
                    {
                        arg1[1] += 4;
                        int32_t r10_3 = arg1[1];
                        int32_t r9_1 = *((r10_3 - 4) + r9);
                        
                        if (r11_1 != 0)
                            r9_1 = _bswap(r9_1);
                        
                        if ((r10_3 + 4) <= rdx)
                        {
                            arg1[1] += 4;
                            
                            if ((arg1[1] + 4) <= rdx)
                            {
                                arg1[1] += 4;
                                int32_t rdi_1 = arg1[1];
                                
                                if (sub_18000de40(arg1, rdx, r8, r9_1) != 0)
                                {
                                    arg1[1] = rdi_1;
                                    return 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    return 0;
}

int64_t sub_18000dd30(int64_t* arg1)
{
    int128_t var_48;
    __builtin_memcpy(&var_48, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
    
    if ((sub_18001d8d0(arg1, &var_48) != 0 && *arg1 != 0))
    {
        int32_t rcx = *(arg1 + 0xc);
        int32_t rax_2 = (arg1[1] + 4);
        
        if (rax_2 <= rcx)
        {
            arg1[1] = rax_2;
            
            if ((rax_2 + 4) <= rcx)
            {
                arg1[1] += 4;
                
                if ((arg1[1] + 4) <= rcx)
                {
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) <= rcx)
                    {
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) <= rcx)
                        {
                            arg1[1] += 4;
                            
                            if ((arg1[1] + 4) <= rcx)
                            {
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) <= rcx)
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) <= rcx)
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) <= rcx)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= rcx)
                                            {
                                                arg1[1] += 4;
                                                
                                                if ((arg1[1] + 4) <= rcx)
                                                {
                                                    arg1[1] += 4;
                                                    return 1;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    return 0;
}

uint64_t sub_18000de40(int64_t* arg1, int64_t arg2, int32_t arg3, int32_t arg4)
{
    void var_1e8;
    int64_t rax_1 = (__security_cookie ^ &var_1e8);
    uint64_t result;
    
    if (arg4 != 0)
    {
        int32_t rdi_1 = 0;
        arg1[1] = arg4;
        int32_t rcx = 0;
        
        if (arg3 == 0)
        {
        label_18000deb3:
            int64_t rdx_1 = *arg1;
            
            if (rdx_1 == 0)
                result = 0;
            else
            {
                int32_t r8 = *(arg1 + 0xc);
                
                if ((arg1[1] + 4) > r8)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t r10_1 = arg1[1];
                    int32_t r9 = arg1[2];
                    int32_t r14_1 = *((r10_1 - 4) + rdx_1);
                    
                    if (r9 != 0)
                        r14_1 = _bswap(r14_1);
                    
                    if ((r10_1 + 4) > r8)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t rsi_1 = *((arg1[1] - 4) + rdx_1);
                        
                        if (r9 != 0)
                            rsi_1 = _bswap(rsi_1);
                        
                        int128_t var_188;
                        __builtin_memcpy(&var_188, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
                        
                        if (sub_18001d8d0(arg1, &var_188) == 0)
                            result = 0;
                        else
                        {
                            int64_t r8_1 = *arg1;
                            
                            if (r8_1 == 0)
                                result = 0;
                            else
                            {
                                int32_t rdx_3 = *(arg1 + 0xc);
                                
                                if ((arg1[1] + 4) > rdx_3)
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) > rdx_3)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r10_2 = arg1[1];
                                        int32_t r9_1 = arg1[2];
                                        int32_t r12_1 = *((r10_2 - 4) + r8_1);
                                        
                                        if (r9_1 != 0)
                                            r12_1 = _bswap(r12_1);
                                        
                                        int32_t r10_3;
                                        int32_t r11_1;
                                        
                                        if ((r10_2 + 4) <= rdx_3)
                                        {
                                            arg1[1] += 4;
                                            r10_3 = arg1[1];
                                            r11_1 = *((r10_3 - 4) + r8_1);
                                            
                                            if (r9_1 != 0)
                                                r11_1 = _bswap(r11_1);
                                        }
                                        
                                        if (((r10_2 + 4) > rdx_3 || (r10_3 + 4) > rdx_3))
                                            result = 0;
                                        else
                                        {
                                            arg1[1] += 4;
                                            int32_t r10_4 = arg1[1];
                                            int32_t r15_1 = *((r10_4 - 4) + r8_1);
                                            
                                            if (r9_1 != 0)
                                                r15_1 = _bswap(r15_1);
                                            
                                            if ((r10_4 + 4) > rdx_3)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_5 = arg1[1];
                                                int32_t rax_22 = *((r10_5 - 4) + r8_1);
                                                int32_t var_1b8_1 = rax_22;
                                                
                                                if (r9_1 != 0)
                                                    var_1b8_1 = _bswap(rax_22);
                                                
                                                if ((r10_5 + 4) > rdx_3)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t rax_25 = arg1[1];
                                                    
                                                    if ((rax_25 + 4) > rdx_3)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_6 = arg1[1];
                                                        int32_t rax_28 = *((r10_6 - 4) + r8_1);
                                                        int32_t var_1c8_1 = rax_28;
                                                        
                                                        if (r9_1 != 0)
                                                            var_1c8_1 = _bswap(rax_28);
                                                        
                                                        if ((r10_6 + 4) > rdx_3)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r10_7 = arg1[1];
                                                            int32_t r13_1 = *((r10_7 - 4) + r8_1);
                                                            
                                                            if (r9_1 != 0)
                                                                r13_1 = _bswap(r13_1);
                                                            
                                                            if ((r10_7 + 4) > rdx_3)
                                                            {
                                                            labelid_c:
                                                                result = 0;
                                                            }
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r10_8 = *((arg1[1] - 4) + r8_1);
                                                                
                                                                if (r9_1 != 0)
                                                                    r10_8 = _bswap(r10_8);
                                                                
                                                                if ((arg1[1] + 4) > rdx_3)
                                                                {
                                                                labelid_c:
                                                                    result = 0;
                                                                }
                                                                else
                                                                {
                                                                    arg1[1] += 4;
                                                                    
                                                                    if ((arg1[1] + 4) > rdx_3)
                                                                    {
                                                                    labelid_c:
                                                                        result = 0;
                                                                    }
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t rdx_5 = (r10_1 + rsi_1);
                                                                        
                                                                        if (rsi_1 == 0)
                                                                            rdx_5 = rsi_1;
                                                                        
                                                                        int32_t rcx_3 = (r10_2 + r11_1);
                                                                        
                                                                        if (r11_1 == 0)
                                                                            rcx_3 = r11_1;
                                                                        
                                                                        int32_t r8_3 = (r10_4 + var_1b8_1);
                                                                        
                                                                        if (var_1b8_1 == 0)
                                                                            r8_3 = var_1b8_1;
                                                                        
                                                                        int32_t rsi_3 = (rax_25 + var_1c8_1);
                                                                        
                                                                        if (var_1c8_1 == 0)
                                                                            rsi_3 = var_1c8_1;
                                                                        
                                                                        int32_t rax_42 = (r10_7 + r10_8);
                                                                        
                                                                        if (r10_8 == 0)
                                                                            rax_42 = r10_8;
                                                                        
                                                                        if (rdx_5 != 0)
                                                                        {
                                                                            uint32_t r14_2 = (r14_1 >> 4);
                                                                            int32_t rsi_4 = 0;
                                                                            arg1[1] = rdx_5;
                                                                            
                                                                            if (r14_2 != 0)
                                                                            {
                                                                                do
                                                                                {
                                                                                    __builtin_memcpy(&var_188, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
                                                                                    
                                                                                    if (sub_18001d8d0(arg1, &var_188) == 0)
                                                                                        goto label_18000e3d9_2;
                                                                                    
                                                                                    rsi_4 += 1;
                                                                                } while (rsi_4 < r14_2);
                                                                            }
                                                                        }
                                                                        
                                                                        if (rcx_3 != 0)
                                                                        {
                                                                            arg1[1] = rcx_3;
                                                                            int32_t r9_2 = 0;
                                                                            
                                                                            if (r12_1 != 0)
                                                                            {
                                                                                do
                                                                                {
                                                                                    int64_t rdx_7 = *arg1;
                                                                                    int32_t r8_4 = arg1[1];
                                                                                    
                                                                                    if (rdx_7 == 0)
                                                                                        goto label_18000e3d9_2;
                                                                                    
                                                                                    if ((r8_4 + 4) > *(arg1 + 0xc))
                                                                                        goto label_18000e3d9_2;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t rax_47 = *((arg1[1] - 4) + rdx_7);
                                                                                    
                                                                                    if (arg1[2] != 0)
                                                                                        rax_47 = _bswap(rax_47);
                                                                                    
                                                                                    void var_148;
                                                                                    sub_180005050(arg1, (rax_47 + r8_4), &var_148);
                                                                                    r9_2 += 1;
                                                                                } while (r9_2 < r12_1);
                                                                            }
                                                                        }
                                                                        
                                                                        int64_t var_1b0;
                                                                        
                                                                        if (r8_3 != 0)
                                                                        {
                                                                            uint32_t r15_2 = (r15_1 >> 2);
                                                                            int32_t r10_9 = 0;
                                                                            arg1[1] = r8_3;
                                                                            
                                                                            if (r15_2 != 0)
                                                                            {
                                                                                do
                                                                                {
                                                                                    int64_t var_1a8_1 = 0;
                                                                                    var_1b0 = 0;
                                                                                    
                                                                                    if (sub_18001d710(arg1, &var_1b0) == 0)
                                                                                        goto label_18000e3d9_2;
                                                                                    
                                                                                    r10_9 += 1;
                                                                                } while (r10_9 < r15_2);
                                                                            }
                                                                        }
                                                                        
                                                                        if (rsi_3 == 0)
                                                                        {
                                                                        label_18000e333:
                                                                            
                                                                            if (rax_42 != 0)
                                                                            {
                                                                                arg1[1] = rax_42;
                                                                                
                                                                                if (r13_1 != 0)
                                                                                {
                                                                                    do
                                                                                    {
                                                                                        int64_t var_194_1 = 0;
                                                                                        int32_t var_198 = 0;
                                                                                        var_1b0 = 0;
                                                                                        var_1b0 = 0;
                                                                                        
                                                                                        if (sub_18001d5c0(arg1, &var_198) == 0)
                                                                                            goto label_18000e3d9_2;
                                                                                        
                                                                                        if (sub_18001d5c0(arg1, &var_1b0) == 0)
                                                                                            goto label_18000e3d9_2;
                                                                                        
                                                                                        rdi_1 += 1;
                                                                                    } while (rdi_1 < r13_1);
                                                                                }
                                                                            }
                                                                            
                                                                            result = 1;
                                                                        }
                                                                        else
                                                                        {
                                                                            int64_t r14_3 = *arg1;
                                                                            arg1[1] = rsi_3;
                                                                            
                                                                            if (r14_3 == 0)
                                                                            {
                                                                            label_18000e3d9:
                                                                                result = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                int32_t r8_6 = *(arg1 + 0xc);
                                                                                
                                                                                if ((rsi_3 + 4) > r8_6)
                                                                                {
                                                                                label_18000e3d9_1:
                                                                                    result = 0;
                                                                                }
                                                                                else
                                                                                {
                                                                                    int32_t r15_3 = arg1[2];
                                                                                    arg1[1] = (rsi_3 + 4);
                                                                                    int32_t rsi_5 = *(rsi_3 + r14_3);
                                                                                    
                                                                                    if (r15_3 != 0)
                                                                                        rsi_5 = _bswap(rsi_5);
                                                                                    
                                                                                    if ((rsi_3 + 8) <= r8_6)
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t r9_3 = 0;
                                                                                        int32_t r10_10 = 0;
                                                                                        
                                                                                        if (rsi_5 != 0)
                                                                                        {
                                                                                            do
                                                                                            {
                                                                                                if ((arg1[1] + 4) > r8_6)
                                                                                                    goto label_18000e3d9_2;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                int32_t r11_2 = arg1[1];
                                                                                                int32_t rdx_11 = *((r11_2 - 4) + r14_3);
                                                                                                
                                                                                                if (r15_3 != 0)
                                                                                                    rdx_11 = _bswap(rdx_11);
                                                                                                
                                                                                                if ((r11_2 + 4) > r8_6)
                                                                                                    goto label_18000e3d9_2;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                r9_3 += rdx_11;
                                                                                                r10_10 += 1;
                                                                                            } while (r10_10 < rsi_5);
                                                                                        }
                                                                                        
                                                                                        int32_t rcx_7 = 0;
                                                                                        
                                                                                        if (r9_3 > 0)
                                                                                        {
                                                                                            do
                                                                                            {
                                                                                                if ((arg1[1] + 4) > r8_6)
                                                                                                    goto label_18000e3d9_2;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                
                                                                                                if ((arg1[1] + 4) > r8_6)
                                                                                                    goto label_18000e3d9_2;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                rcx_7 += 1;
                                                                                            } while (rcx_7 < r9_3);
                                                                                        }
                                                                                        
                                                                                        goto label_18000e333;
                                                                                    }
                                                                                    
                                                                                label_18000e3d9_2:
                                                                                    result = 0;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        else
        {
            while (*arg1 != 0)
            {
                if ((arg1[1] + 4) > *(arg1 + 0xc))
                    break;
                
                arg1[1] += 4;
                rcx += 1;
                
                if (rcx >= arg3)
                    goto label_18000deb3;
            }
            
            result = 0;
        }
    }
    else
        result = (arg4 + 1);
    
    __security_check_cookie((rax_1 ^ &var_1e8));
    return result;
}

int64_t sub_18000e400(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_278;
    int64_t rax_1 = (__security_cookie ^ &var_278);
    int32_t result;
    
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        
        if (arg2 != 0)
            result = sub_180001b50(&data_1800306f0, arg2);
        
        if ((arg2 == 0 || result != 0))
        {
            int32_t rbp_1 = arg1[1];
            int32_t rdi_1 = 0;
            void var_258;
            void var_148;
            
            if (arg2 == 0)
            {
            label_18000e5b4:
                int32_t rsi_1 = 0;
                arg1[1] = rbp_1;
                
                if (arg2 == 0)
                {
                label_18000e6be:
                    result = 1;
                }
                else
                {
                    while (true)
                    {
                        int64_t r9_4 = *arg1;
                        int32_t* r14_2 = ((rsi_1 * 0x2f8) + data_180030720);
                        
                        if (r9_4 != 0)
                        {
                            int32_t r8_4 = *(arg1 + 0xc);
                            
                            if ((rbp_1 + 4) <= r8_4)
                            {
                                int32_t r11_2 = arg1[2];
                                arg1[1] = (rbp_1 + 4);
                                int32_t r10_3 = *(rbp_1 + r9_4);
                                
                                if (r11_2 != 0)
                                    r10_3 = _bswap(r10_3);
                                
                                if ((rbp_1 + 8) <= r8_4)
                                {
                                    arg1[1] += 4;
                                    int32_t rdx_8 = arg1[1];
                                    int32_t rdi_2 = *((rdx_8 - 4) + r9_4);
                                    
                                    if (r11_2 != 0)
                                        rdi_2 = _bswap(rdi_2);
                                    
                                    if ((rdx_8 + 4) <= r8_4)
                                    {
                                        arg1[1] += 4;
                                        int32_t rbp_2 = 0;
                                        
                                        if (data_1800306f4 != 0)
                                            rbp_2 = arg1[1];
                                        
                                        if ((arg1[1] + 4) <= r8_4)
                                        {
                                            arg1[1] += 4;
                                            int32_t r9_5 = *((arg1[1] - 4) + r9_4);
                                            
                                            if (r11_2 != 0)
                                                r9_5 = _bswap(r9_5);
                                            
                                            sub_180005050(arg1, r10_3, &var_148);
                                            int64_t r8_7 = sub_180005050(arg1, rdi_2, &var_258);
                                            
                                            if ((data_1800306f4 != 0 && r9_5 != 0))
                                                r9_5 += rbp_2;
                                            
                                            rbp_1 = arg1[1];
                                            sub_18000e710(arg1, r14_2, r8_7, r9_5);
                                            rsi_1 += 1;
                                            arg1[1] = rbp_1;
                                            
                                            if (rsi_1 >= arg2)
                                                goto label_18000e6be;
                                            
                                            continue;
                                        }
                                    }
                                }
                            }
                        }
                        
                        result = 0;
                        break;
                    }
                }
            }
            else
            {
                while (true)
                {
                    memset(&var_258, 0, 0x104);
                    memset(&var_148, 0, 0x104);
                    int64_t r9_1 = *arg1;
                    
                    if (r9_1 != 0)
                    {
                        int32_t r8 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r10_1 = arg1[1];
                            int32_t r11_1 = arg1[2];
                            int32_t rdx = *((r10_1 - 4) + r9_1);
                            
                            if (r11_1 != 0)
                                rdx = _bswap(rdx);
                            
                            if ((r10_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t r10_2 = arg1[1];
                                int32_t r9_2 = *((r10_2 - 4) + r9_1);
                                
                                if (r11_1 != 0)
                                    r9_2 = _bswap(r9_2);
                                
                                if ((r10_2 + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        sub_180005050(arg1, rdx, &var_258);
                                        sub_180005050(arg1, r9_2, &var_148);
                                        void* r9_3 = data_180030720;
                                        
                                        if (r9_3 != 0)
                                        {
                                            int64_t r8_3 = (rdi_1 * 0x2f8);
                                            void* rcx_3 = &var_258;
                                            char* rdx_3 = ((r9_3 + 0xe8) + r8_3);
                                            char i;
                                            
                                            do
                                            {
                                                i = *rcx_3;
                                                rcx_3 += 1;
                                                *rdx_3 = i;
                                                rdx_3 = &rdx_3[1];
                                            } while (i != 0);
                                            void* rcx_4 = &var_148;
                                            char* rdx_6 = ((data_180030720 + 0x1ec) + r8_3);
                                            char i_1;
                                            
                                            do
                                            {
                                                i_1 = *rcx_4;
                                                rcx_4 += 1;
                                                *rdx_6 = i_1;
                                                rdx_6 = &rdx_6[1];
                                            } while (i_1 != 0);
                                        }
                                        
                                        rdi_1 += 1;
                                        
                                        if (rdi_1 >= arg2)
                                            goto label_18000e5b4;
                                        
                                        continue;
                                    }
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_278));
    return result;
}

uint64_t sub_18000e710(int64_t* arg1, int32_t* arg2, int64_t arg3, int32_t arg4)
{
    if (arg2 == 0)
        return 0;
    
    if (arg4 == 0)
        return (arg4 + 1);
    
    int64_t r11 = *arg1;
    arg1[1] = arg4;
    
    if (r11 != 0)
    {
        int32_t r10_1 = *(arg1 + 0xc);
        
        if ((arg4 + 4) <= r10_1)
        {
            int32_t rdx = *(arg4 + r11);
            
            if (arg1[2] != 0)
                rdx = _bswap(rdx);
            
            int32_t r9 = 0;
            int32_t rcx = 0;
            int32_t rsi = 0;
            
            if (rdx == 0)
            {
                arg1[1] = (arg4 + 4);
                
                if ((arg4 + 8) > r10_1)
                    return 0;
                
                arg1[1] += 4;
                int32_t rdi_2 = arg1[1];
                r9 = *((rdi_2 - 4) + r11);
                
                if (arg1[2] != 0)
                    r9 = _bswap(r9);
                
                if (data_1800306f4 != 0)
                    rsi = rdi_2;
                
                if ((rdi_2 + 4) > r10_1)
                    return 0;
                
                arg1[1] += 4;
                int32_t rdi_3 = arg1[1];
                rcx = *((rdi_3 - 4) + r11);
                
                if (arg1[2] != 0)
                    rcx = _bswap(rcx);
                
                if ((rdi_3 + 4) > r10_1)
                    return 0;
                
                arg1[1] += 4;
                
                if ((arg1[1] + 4) > r10_1)
                    return 0;
                
                arg1[1] += 4;
            }
            
            if (data_1800306f4 != 0)
            {
                if (rcx != 0)
                    rcx += rsi;
                
                if (rdx != 0)
                    rcx = arg1[1];
                
                sub_18000e860(arg1, arg2, arg1, r9, rcx);
            }
            else if (rdx == 0)
                sub_18000e860(arg1, arg2, arg1, r9, rcx);
            else
                sub_18000f210(arg1, arg2);
            
            return 1;
        }
    }
    
    return 0;
}

uint64_t sub_18000e860(int64_t* arg1, int32_t* arg2, int64_t arg3, int32_t arg4, int32_t arg5)
{
    int64_t var_118 = -2;
    void var_178;
    int64_t rax_1 = (__security_cookie ^ &var_178);
    uint64_t result;
    
    if (arg2 == 0)
    {
    labelid_ee:
        result = 0;
    }
    else if (arg5 != 0)
    {
        arg1[1] = arg5;
        int32_t result_1 = 0;
        
        if (data_1800306f4 != 0)
        {
        label_18000e919:
            int64_t rdx_1 = *arg1;
            
            if (rdx_1 == 0)
            {
            labelid_ee:
                result = 0;
            }
            else
            {
                int32_t rcx = *(arg1 + 0xc);
                
                if ((arg1[1] + 4) > rcx)
                {
                labelid_ee:
                    result = 0;
                }
                else
                {
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > rcx)
                    {
                    labelid_ee:
                        result = 0;
                    }
                    else
                    {
                        arg1[1] += 4;
                        int32_t r13_1 = *((arg1[1] - 4) + rdx_1);
                        
                        if (arg1[2] != 0)
                            r13_1 = ((((r13_1 >> 0x18) | ((r13_1 >> 8) & 0xff00)) | ((r13_1 & 0xff00) << 8)) | (r13_1 << 0x18));
                        
                        int32_t var_108;
                        sub_1800010c0(&var_108);
                        int64_t s;
                        __builtin_memset(&s, 0, 0x14);
                        int32_t r14_1 = 0;
                        int64_t i = *arg1;
                        int64_t r10_1 = 0;
                        
                        while (i != 0)
                        {
                            int32_t r8_1 = *(arg1 + 0xc);
                            
                            if ((arg1[1] + 4) > r8_1)
                                break;
                            
                            arg1[1] += 4;
                            int32_t r11_1 = arg1[1];
                            int32_t r9 = *((r11_1 - 4) + i);
                            int32_t rsi_1 = arg1[2];
                            
                            if (rsi_1 != 0)
                                r9 = ((((r9 >> 0x18) | ((r9 >> 8) & 0xff00)) | ((r9 & 0xff00) << 8)) | (r9 << 0x18));
                            
                            if ((r11_1 + 4) > r8_1)
                                break;
                            
                            arg1[1] += 4;
                            int32_t r15_1 = arg1[1];
                            int32_t r8_2 = *((r15_1 - 4) + i);
                            
                            if (rsi_1 != 0)
                                r8_2 = ((((r8_2 >> 0x18) | ((r8_2 >> 8) & 0xff00)) | ((r8_2 & 0xff00) << 8)) | (r8_2 << 0x18));
                            
                            if (r10_1 == 0)
                                r14_1 = r9;
                            
                            if (r8_2 != 0)
                                *(&s + (r10_1 << 2)) = (r8_2 + r11_1);
                            
                            r10_1 += 1;
                            
                            if (r10_1 >= 5)
                            {
                                int32_t var_104_1 = r14_1;
                                
                                if (i != 0)
                                {
                                    int32_t r8_6 = *(arg1 + 0xc);
                                    
                                    if ((r15_1 + 4) <= r8_6)
                                    {
                                        arg1[1] += 4;
                                        int32_t r10_2 = arg1[1];
                                        int32_t r9_4 = *((r10_2 - 4) + i);
                                        int32_t r11_2 = arg1[2];
                                        
                                        if (r11_2 != 0)
                                            r9_4 = ((((r9_4 >> 0x18) | ((r9_4 >> 8) & 0xff00)) | ((r9_4 & 0xff00) << 8)) | (r9_4 << 0x18));
                                        
                                        if ((r10_2 + 4) <= r8_6)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= r8_6)
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_3 = arg1[1];
                                                
                                                if ((r10_3 + 4) <= r8_6)
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r8_7 = *((arg1[1] - 4) + i);
                                                    
                                                    if (r11_2 != 0)
                                                        r8_7 = ((((r8_7 >> 0x18) | ((r8_7 >> 8) & 0xff00)) | ((r8_7 & 0xff00) << 8)) | (r8_7 << 0x18));
                                                    
                                                    int32_t rax_42 = (r15_1 + r9_4);
                                                    
                                                    if (r9_4 == 0)
                                                        rax_42 = r9_4;
                                                    
                                                    int32_t rax_43 = (r10_3 + r8_7);
                                                    
                                                    if (r8_7 == 0)
                                                        rax_43 = r8_7;
                                                    
                                                    int64_t var_144_1 = 0;
                                                    int32_t var_148 = 0;
                                                    int64_t var_134_1 = 0;
                                                    int32_t var_138 = 0;
                                                    
                                                    if ((sub_18001d5c0(arg1, &var_148) != 0 && sub_18001d5c0(arg1, &var_138) != 0))
                                                    {
                                                        int32_t rax_46 = s;
                                                        
                                                        if (rax_46 != 0)
                                                            arg1[1] = rax_46;
                                                        
                                                        int32_t r15_2 = 0;
                                                        int32_t r9_8 = 0;
                                                        
                                                        if (r14_1 > 0)
                                                        {
                                                            int64_t r10_4 = *arg1;
                                                            
                                                            do
                                                            {
                                                                if (r10_4 == 0)
                                                                    goto label_18000f1cd;
                                                                
                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                    goto label_18000f1cd;
                                                                
                                                                arg1[1] += 4;
                                                                int32_t r8_11 = *((arg1[1] - 4) + r10_4);
                                                                
                                                                if (arg1[2] != 0)
                                                                    r8_11 = ((((r8_11 >> 0x18) | ((r8_11 >> 8) & 0xff00)) | ((r8_11 & 0xff00) << 8)) | (r8_11 << 0x18));
                                                                
                                                                if (r9_8 == 0)
                                                                    r15_2 = r8_11;
                                                                
                                                                r9_8 += 1;
                                                            } while (r9_8 < r14_1);
                                                        }
                                                        
                                                        int32_t rax_54 = *s[4];
                                                        
                                                        if (rax_54 != 0)
                                                            arg1[1] = rax_54;
                                                        
                                                        int32_t r9_9 = 0;
                                                        int64_t rsi_2 = r14_1;
                                                        
                                                        if (r14_1 > 0)
                                                        {
                                                            int64_t rdi_1 = *arg1;
                                                            int64_t r11_3 = 0;
                                                            void var_fc;
                                                            void* r10_5 = &var_fc;
                                                            
                                                            do
                                                            {
                                                                if (rdi_1 == 0)
                                                                    goto label_18000f1cd;
                                                                
                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                    goto label_18000f1cd;
                                                                
                                                                arg1[1] += 4;
                                                                int32_t r8_15 = *((arg1[1] - 4) + rdi_1);
                                                                
                                                                if (arg1[2] != 0)
                                                                    r8_15 = ((((r8_15 >> 0x18) | ((r8_15 >> 8) & 0xff00)) | ((r8_15 & 0xff00) << 8)) | (r8_15 << 0x18));
                                                                
                                                                if (r9_9 < var_108)
                                                                    *r10_5 = r8_15;
                                                                
                                                                r9_9 += 1;
                                                                r11_3 += 1;
                                                                r10_5 += 0x10;
                                                            } while (r11_3 < rsi_2);
                                                        }
                                                        
                                                        int64_t var_50;
                                                        int32_t rax_62 = var_50;
                                                        
                                                        if (rax_62 != 0)
                                                            arg1[1] = rax_62;
                                                        
                                                        int32_t r9_10 = 0;
                                                        
                                                        if (r14_1 > 0)
                                                        {
                                                            int64_t rdi_2 = *arg1;
                                                            int64_t r11_4 = 0;
                                                            void var_f8;
                                                            void* r10_6 = &var_f8;
                                                            
                                                            do
                                                            {
                                                                if (rdi_2 == 0)
                                                                    goto label_18000f1cd;
                                                                
                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                    goto label_18000f1cd;
                                                                
                                                                arg1[1] += 4;
                                                                int32_t r8_19 = *((arg1[1] - 4) + rdi_2);
                                                                
                                                                if (arg1[2] != 0)
                                                                    r8_19 = ((((r8_19 >> 0x18) | ((r8_19 >> 8) & 0xff00)) | ((r8_19 & 0xff00) << 8)) | (r8_19 << 0x18));
                                                                
                                                                if (r9_10 < var_108)
                                                                    *r10_6 = r8_19;
                                                                
                                                                r9_10 += 1;
                                                                r11_4 += 1;
                                                                r10_6 += 0x10;
                                                            } while (r11_4 < rsi_2);
                                                        }
                                                        
                                                        int32_t rax_70 = *var_50[4];
                                                        
                                                        if (rax_70 != 0)
                                                            arg1[1] = rax_70;
                                                        
                                                        int32_t r9_11 = 0;
                                                        
                                                        if (r14_1 > 0)
                                                        {
                                                            int64_t rdi_3 = *arg1;
                                                            int64_t r11_5 = 0;
                                                            void var_f4;
                                                            void* r10_7 = &var_f4;
                                                            
                                                            do
                                                            {
                                                                if (rdi_3 == 0)
                                                                    goto label_18000f1cd;
                                                                
                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                    goto label_18000f1cd;
                                                                
                                                                arg1[1] += 4;
                                                                int32_t r8_23 = *((arg1[1] - 4) + rdi_3);
                                                                
                                                                if (arg1[2] != 0)
                                                                    r8_23 = ((((r8_23 >> 0x18) | ((r8_23 >> 8) & 0xff00)) | ((r8_23 & 0xff00) << 8)) | (r8_23 << 0x18));
                                                                
                                                                if (r9_11 < var_108)
                                                                    *r10_7 = r8_23;
                                                                
                                                                r9_11 += 1;
                                                                r11_5 += 1;
                                                                r10_7 += 0x10;
                                                            } while (r11_5 < rsi_2);
                                                        }
                                                        
                                                        int32_t var_48;
                                                        
                                                        if (var_48 != 0)
                                                            arg1[1] = var_48;
                                                        
                                                        int32_t r11_6 = 0;
                                                        int32_t r9_12 = 0;
                                                        
                                                        if (r14_1 > 0)
                                                        {
                                                            int64_t r10_8 = *arg1;
                                                            
                                                            while (true)
                                                            {
                                                                if (r10_8 == 0)
                                                                    goto label_18000f1cd;
                                                                
                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                    goto label_18000f1cd;
                                                                
                                                                arg1[1] += 4;
                                                                int32_t r8_27 = *((arg1[1] - 4) + r10_8);
                                                                
                                                                if (arg1[2] != 0)
                                                                    r8_27 = ((((r8_27 >> 0x18) | ((r8_27 >> 8) & 0xff00)) | ((r8_27 & 0xff00) << 8)) | (r8_27 << 0x18));
                                                                
                                                                int32_t rax_86 = (r11_6 + 1);
                                                                
                                                                if (r8_27 == 0)
                                                                    rax_86 = r11_6;
                                                                
                                                                r11_6 = rax_86;
                                                                r9_12 += 1;
                                                                
                                                                if (r9_12 >= r14_1)
                                                                {
                                                                    if (rax_86 > 0)
                                                                    {
                                                                        int32_t r10_9 = 0;
                                                                        
                                                                        do
                                                                        {
                                                                            int64_t var_134_2 = 0;
                                                                            var_138 = 0;
                                                                            int64_t var_144_2 = 0;
                                                                            var_148 = 0;
                                                                            
                                                                            if (sub_18001d5c0(arg1, &var_138) == 0)
                                                                                goto label_18000f1cd;
                                                                            
                                                                            if (sub_18001d5c0(arg1, &var_148) == 0)
                                                                                goto label_18000f1cd;
                                                                            
                                                                            r10_9 += 1;
                                                                        } while (r10_9 < r11_6);
                                                                    }
                                                                    
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                        
                                                        if (rax_42 != 0)
                                                            arg1[1] = rax_42;
                                                        
                                                        int32_t r9_13 = arg1[1];
                                                        int32_t* r13_5;
                                                        
                                                        if (r9_13 == 0)
                                                        {
                                                            r13_5 = arg2;
                                                        label_18000ef12:
                                                            
                                                            if (rax_43 != 0)
                                                                arg1[1] = rax_43;
                                                            
                                                            int64_t r10_10 = *arg1;
                                                            
                                                            if (r10_10 != 0)
                                                            {
                                                                int32_t r8_32 = *(arg1 + 0xc);
                                                                
                                                                if ((arg1[1] + 4) <= r8_32)
                                                                {
                                                                    arg1[1] += 4;
                                                                    
                                                                    if ((arg1[1] + 4) <= r8_32)
                                                                    {
                                                                        arg1[1] += 4;
                                                                        
                                                                        if ((arg1[1] + 4) <= r8_32)
                                                                        {
                                                                            arg1[1] += 4;
                                                                            
                                                                            if ((arg1[1] + 4) <= r8_32)
                                                                            {
                                                                                arg1[1] += 4;
                                                                                
                                                                                if ((arg1[1] + 4) <= r8_32)
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) <= r8_32)
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        
                                                                                        if ((arg1[1] + 4) <= r8_32)
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            
                                                                                            if ((arg1[1] + 4) <= r8_32)
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                
                                                                                                if ((arg1[1] + 4) <= r8_32)
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) <= r8_32)
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        
                                                                                                        if ((arg1[1] + 4) <= r8_32)
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            int32_t r11_7 = arg1[1];
                                                                                                            int32_t r9_14 = *((r11_7 - 4) + r10_10);
                                                                                                            int32_t rdi_4 = arg1[2];
                                                                                                            
                                                                                                            if (rdi_4 != 0)
                                                                                                                r9_14 = ((((r9_14 >> 0x18) | ((r9_14 >> 8) & 0xff00)) | ((r9_14 & 0xff00) << 8)) | (r9_14 << 0x18));
                                                                                                            
                                                                                                            if ((r11_7 + 4) <= r8_32)
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t r11_8 = arg1[1];
                                                                                                                int32_t r8_33 = *((r11_8 - 4) + r10_10);
                                                                                                                
                                                                                                                if (rdi_4 != 0)
                                                                                                                    r8_33 = ((((r8_33 >> 0x18) | ((r8_33 >> 8) & 0xff00)) | ((r8_33 & 0xff00) << 8)) | (r8_33 << 0x18));
                                                                                                                
                                                                                                                if (r8_33 != 0)
                                                                                                                    arg1[1] = ((r11_8 - 4) + r8_33);
                                                                                                                
                                                                                                                uint32_t r15_4 = (r9_14 / 3);
                                                                                                                int32_t rax_126;
                                                                                                                
                                                                                                                if (r15_4 != 0)
                                                                                                                    rax_126 = sub_180001e80(r13_5, r15_4);
                                                                                                                
                                                                                                                if ((r15_4 == 0 || rax_126 != 0))
                                                                                                                {
                                                                                                                    int32_t rsi_3 = 0;
                                                                                                                    
                                                                                                                    if (r15_4 != 0)
                                                                                                                    {
                                                                                                                        int64_t r10_11 = 0;
                                                                                                                        
                                                                                                                        do
                                                                                                                        {
                                                                                                                            int64_t rdx_33 = *arg1;
                                                                                                                            
                                                                                                                            if (rdx_33 == 0)
                                                                                                                                goto label_18000f1cd;
                                                                                                                            
                                                                                                                            int32_t r11_9 = *(arg1 + 0xc);
                                                                                                                            
                                                                                                                            if ((arg1[1] + 2) > r11_9)
                                                                                                                                goto label_18000f1cd;
                                                                                                                            
                                                                                                                            arg1[1] += 2;
                                                                                                                            int32_t r9_18 = arg1[1];
                                                                                                                            uint16_t r8_37 = *((r9_18 - 2) + rdx_33);
                                                                                                                            int32_t rdi_5 = arg1[2];
                                                                                                                            
                                                                                                                            if (rdi_5 != 0)
                                                                                                                                r8_37 = ((r8_37 >> 8) | (r8_37 << 8));
                                                                                                                            
                                                                                                                            if ((r9_18 + 2) > r11_9)
                                                                                                                                goto label_18000f1cd;
                                                                                                                            
                                                                                                                            arg1[1] += 2;
                                                                                                                            int32_t r14_2 = arg1[1];
                                                                                                                            uint16_t r9_19 = *((r14_2 - 2) + rdx_33);
                                                                                                                            
                                                                                                                            if (rdi_5 != 0)
                                                                                                                                r9_19 = ((r9_19 >> 8) | (r9_19 << 8));
                                                                                                                            
                                                                                                                            if ((r14_2 + 2) > r11_9)
                                                                                                                                goto label_18000f1cd;
                                                                                                                            
                                                                                                                            arg1[1] += 2;
                                                                                                                            uint16_t rdx_34 = *((arg1[1] - 2) + rdx_33);
                                                                                                                            
                                                                                                                            if (rdi_5 != 0)
                                                                                                                                rdx_34 = ((rdx_34 >> 8) | (rdx_34 << 8));
                                                                                                                            
                                                                                                                            int64_t rcx_44 = *(r13_5 + 8);
                                                                                                                            
                                                                                                                            if (rcx_44 != 0)
                                                                                                                            {
                                                                                                                                *((r10_11 + rcx_44) + 4) = r8_37;
                                                                                                                                *((r10_11 + *(r13_5 + 8)) + 8) = r9_19;
                                                                                                                                *((r10_11 + *(r13_5 + 8)) + 0xc) = rdx_34;
                                                                                                                            }
                                                                                                                            
                                                                                                                            rsi_3 += 1;
                                                                                                                            r10_11 += 0x14;
                                                                                                                        } while (rsi_3 < r15_4);
                                                                                                                    }
                                                                                                                    
                                                                                                                    int32_t rax_141 = arg1[1];
                                                                                                                    int32_t rcx_48 = (rax_141 & 0xfffffffc);
                                                                                                                    int32_t rax_142 = (rcx_48 + 4);
                                                                                                                    
                                                                                                                    if ((rax_141 & 3) <= 0)
                                                                                                                        rax_142 = rcx_48;
                                                                                                                    
                                                                                                                    arg1[1] = rax_142;
                                                                                                                    result_1 = 1;
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            r13_5 = arg2;
                                                            
                                                            if (sub_180005100(arg1, r13_5, r13_1, r9_13, r15_2, &var_108) != 0)
                                                                goto label_18000ef12;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                break;
                            }
                        }
                        
                    label_18000f1cd:
                        void var_100;
                        `eh vector vbase constructor iterator'(&var_100, 0x10, 0xa, _guard_check_icall);
                        result = result_1;
                    }
                }
            }
        }
        else if (*arg1 == 0)
        {
        label_18000f1d8:
            result = 0;
        }
        else
        {
            int32_t rdx = *(arg1 + 0xc);
            
            if ((arg5 + 4) > rdx)
            {
            label_18000f1d8_1:
                result = 0;
            }
            else
            {
                arg1[1] = (arg5 + 4);
                
                if ((arg5 + 8) <= rdx)
                {
                    arg1[1] += 4;
                    int32_t i_1 = 0;
                    
                    if (arg4 != 2)
                    {
                        do
                        {
                            if ((arg1[1] + 4) > rdx)
                                goto label_18000f1d8_2;
                            
                            arg1[1] += 4;
                            i_1 += 1;
                        } while (i_1 < (arg4 - 2));
                    }
                    
                    goto label_18000e919;
                }
                
            label_18000f1d8_2:
                result = 0;
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_178));
    return result;
}

uint64_t sub_18000f210(int64_t* arg1, int32_t* arg2)
{
    int64_t var_238 = -2;
    void var_298;
    int64_t rax_1 = (__security_cookie ^ &var_298);
    uint64_t result;
    
    if (arg2 == 0)
        result = 0;
    else
    {
        int64_t rdx = *arg1;
        
        if (rdx == 0)
            result = 0;
        else
        {
            int32_t rax_3 = (arg1[1] + 4);
            int32_t rcx = *(arg1 + 0xc);
            
            if (rax_3 > rcx)
                result = 0;
            else
            {
                arg1[1] = rax_3;
                
                if ((rax_3 + 4) > rcx)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t r8_1 = *((arg1[1] - 4) + rdx);
                    int32_t var_264_1 = r8_1;
                    
                    if (arg1[2] != 0)
                        var_264_1 = ((((r8_1 >> 0x18) | ((r8_1 >> 8) & 0xff00)) | ((r8_1 & 0xff00) << 8)) | (r8_1 << 0x18));
                    
                    int32_t var_228;
                    sub_1800010c0(&var_228);
                    int32_t result_1 = 0;
                    int64_t s;
                    __builtin_memset(&s, 0, 0x14);
                    int32_t r14_1 = 0;
                    int64_t i = *arg1;
                    int64_t r10_1 = 0;
                    
                    while (i != 0)
                    {
                        int32_t r8_6 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) > r8_6)
                            break;
                        
                        arg1[1] += 4;
                        int32_t rdi_1 = arg1[1];
                        int32_t r9_1 = *((rdi_1 - 4) + i);
                        int32_t rsi_1 = arg1[2];
                        
                        if (rsi_1 != 0)
                            r9_1 = ((((r9_1 >> 0x18) | ((r9_1 >> 8) & 0xff00)) | ((r9_1 & 0xff00) << 8)) | (r9_1 << 0x18));
                        
                        if ((rdi_1 + 4) > r8_6)
                            break;
                        
                        arg1[1] += 4;
                        int32_t rdi_2 = arg1[1];
                        int32_t r8_7 = *((rdi_2 - 4) + i);
                        
                        if (rsi_1 != 0)
                            r8_7 = ((((r8_7 >> 0x18) | ((r8_7 >> 8) & 0xff00)) | ((r8_7 & 0xff00) << 8)) | (r8_7 << 0x18));
                        
                        if (r10_1 == 0)
                            r14_1 = r9_1;
                        
                        if (r8_7 != 0)
                            *(&s + (r10_1 << 2)) = r8_7;
                        
                        r10_1 += 1;
                        
                        if (r10_1 >= 5)
                        {
                            int32_t var_224_1 = r14_1;
                            
                            if (i != 0)
                            {
                                int32_t r8_11 = *(arg1 + 0xc);
                                
                                if ((rdi_2 + 4) <= r8_11)
                                {
                                    arg1[1] += 4;
                                    int32_t r9_5 = arg1[1];
                                    int32_t rdi_3 = *((r9_5 - 4) + i);
                                    int32_t var_268_1 = rdi_3;
                                    int32_t r10_2 = arg1[2];
                                    
                                    if (r10_2 != 0)
                                        var_268_1 = ((((rdi_3 >> 0x18) | ((rdi_3 >> 8) & 0xff00)) | ((rdi_3 & 0xff00) << 8)) | (rdi_3 << 0x18));
                                    
                                    if ((r9_5 + 4) <= r8_11)
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) <= r8_11)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= r8_11)
                                            {
                                                arg1[1] += 4;
                                                int32_t r13_1 = *((arg1[1] - 4) + i);
                                                
                                                if (r10_2 != 0)
                                                    r13_1 = ((((r13_1 >> 0x18) | ((r13_1 >> 8) & 0xff00)) | ((r13_1 & 0xff00) << 8)) | (r13_1 << 0x18));
                                                
                                                int64_t var_25c_1 = 0;
                                                int32_t var_260 = 0;
                                                int64_t var_24c_1 = 0;
                                                int32_t var_250 = 0;
                                                
                                                if ((sub_18001d5c0(arg1, &var_260) != 0 && sub_18001d5c0(arg1, &var_250) != 0))
                                                {
                                                    int32_t rax_38 = s;
                                                    
                                                    if (rax_38 != 0)
                                                        arg1[1] = rax_38;
                                                    
                                                    int32_t r15_1 = 0;
                                                    int32_t r9_6 = 0;
                                                    
                                                    if (r14_1 > 0)
                                                    {
                                                        int64_t r10_3 = *arg1;
                                                        
                                                        do
                                                        {
                                                            if (r10_3 == 0)
                                                                goto label_18000fbac;
                                                            
                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                goto label_18000fbac;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t r8_12 = *((arg1[1] - 4) + r10_3);
                                                            
                                                            if (arg1[2] != 0)
                                                                r8_12 = ((((r8_12 >> 0x18) | ((r8_12 >> 8) & 0xff00)) | ((r8_12 & 0xff00) << 8)) | (r8_12 << 0x18));
                                                            
                                                            if (r9_6 == 0)
                                                                r15_1 = r8_12;
                                                            
                                                            r9_6 += 1;
                                                        } while (r9_6 < r14_1);
                                                    }
                                                    
                                                    int32_t rax_46 = *s[4];
                                                    
                                                    if (rax_46 != 0)
                                                        arg1[1] = rax_46;
                                                    
                                                    int32_t r9_7 = 0;
                                                    int64_t rsi_2 = r14_1;
                                                    
                                                    if (r14_1 > 0)
                                                    {
                                                        int64_t rdi_8 = *arg1;
                                                        int64_t r11_1 = 0;
                                                        void var_21c;
                                                        void* r10_4 = &var_21c;
                                                        
                                                        do
                                                        {
                                                            if (rdi_8 == 0)
                                                                goto label_18000fbac;
                                                            
                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                goto label_18000fbac;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t r8_16 = *((arg1[1] - 4) + rdi_8);
                                                            
                                                            if (arg1[2] != 0)
                                                                r8_16 = ((((r8_16 >> 0x18) | ((r8_16 >> 8) & 0xff00)) | ((r8_16 & 0xff00) << 8)) | (r8_16 << 0x18));
                                                            
                                                            if (r9_7 < var_228)
                                                                *r10_4 = r8_16;
                                                            
                                                            r9_7 += 1;
                                                            r11_1 += 1;
                                                            r10_4 += 0x10;
                                                        } while (r11_1 < rsi_2);
                                                    }
                                                    
                                                    int64_t var_170;
                                                    int32_t rax_54 = var_170;
                                                    
                                                    if (rax_54 != 0)
                                                        arg1[1] = rax_54;
                                                    
                                                    int32_t r9_8 = 0;
                                                    
                                                    if (r14_1 > 0)
                                                    {
                                                        int64_t rdi_9 = *arg1;
                                                        int64_t r11_2 = 0;
                                                        void var_218;
                                                        void* r10_5 = &var_218;
                                                        
                                                        do
                                                        {
                                                            if (rdi_9 == 0)
                                                                goto label_18000fbac;
                                                            
                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                goto label_18000fbac;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t r8_20 = *((arg1[1] - 4) + rdi_9);
                                                            
                                                            if (arg1[2] != 0)
                                                                r8_20 = ((((r8_20 >> 0x18) | ((r8_20 >> 8) & 0xff00)) | ((r8_20 & 0xff00) << 8)) | (r8_20 << 0x18));
                                                            
                                                            if (r9_8 < var_228)
                                                                *r10_5 = r8_20;
                                                            
                                                            r9_8 += 1;
                                                            r11_2 += 1;
                                                            r10_5 += 0x10;
                                                        } while (r11_2 < rsi_2);
                                                    }
                                                    
                                                    int32_t rax_62 = *var_170[4];
                                                    
                                                    if (rax_62 != 0)
                                                        arg1[1] = rax_62;
                                                    
                                                    int32_t r9_9 = 0;
                                                    
                                                    if (r14_1 > 0)
                                                    {
                                                        int64_t rdi_10 = *arg1;
                                                        int64_t r11_3 = 0;
                                                        void var_214;
                                                        void* r10_6 = &var_214;
                                                        
                                                        do
                                                        {
                                                            if (rdi_10 == 0)
                                                                goto label_18000fbac;
                                                            
                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                goto label_18000fbac;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t r8_24 = *((arg1[1] - 4) + rdi_10);
                                                            
                                                            if (arg1[2] != 0)
                                                                r8_24 = ((((r8_24 >> 0x18) | ((r8_24 >> 8) & 0xff00)) | ((r8_24 & 0xff00) << 8)) | (r8_24 << 0x18));
                                                            
                                                            if (r9_9 < var_228)
                                                                *r10_6 = r8_24;
                                                            
                                                            r9_9 += 1;
                                                            r11_3 += 1;
                                                            r10_6 += 0x10;
                                                        } while (r11_3 < rsi_2);
                                                    }
                                                    
                                                    int32_t var_168;
                                                    
                                                    if (var_168 != 0)
                                                        arg1[1] = var_168;
                                                    
                                                    int32_t r11_4 = 0;
                                                    int32_t r9_10 = 0;
                                                    
                                                    if (r14_1 > 0)
                                                    {
                                                        int64_t r10_7 = *arg1;
                                                        
                                                        while (true)
                                                        {
                                                            if (r10_7 == 0)
                                                                goto label_18000fbac;
                                                            
                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                goto label_18000fbac;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t r8_28 = *((arg1[1] - 4) + r10_7);
                                                            
                                                            if (arg1[2] != 0)
                                                                r8_28 = ((((r8_28 >> 0x18) | ((r8_28 >> 8) & 0xff00)) | ((r8_28 & 0xff00) << 8)) | (r8_28 << 0x18));
                                                            
                                                            int32_t rax_78 = (r11_4 + 1);
                                                            
                                                            if (r8_28 == 0)
                                                                rax_78 = r11_4;
                                                            
                                                            r11_4 = rax_78;
                                                            r9_10 += 1;
                                                            
                                                            if (r9_10 >= r14_1)
                                                            {
                                                                if (rax_78 > 0)
                                                                {
                                                                    int32_t r10_8 = 0;
                                                                    
                                                                    do
                                                                    {
                                                                        int64_t var_24c_2 = 0;
                                                                        var_250 = 0;
                                                                        int64_t var_25c_2 = 0;
                                                                        var_260 = 0;
                                                                        
                                                                        if (sub_18001d5c0(arg1, &var_250) == 0)
                                                                            goto label_18000fbac;
                                                                        
                                                                        if (sub_18001d5c0(arg1, &var_260) == 0)
                                                                            goto label_18000fbac;
                                                                        
                                                                        r10_8 += 1;
                                                                    } while (r10_8 < r11_4);
                                                                }
                                                                
                                                                break;
                                                            }
                                                        }
                                                    }
                                                    
                                                    if (var_268_1 != 0)
                                                        arg1[1] = var_268_1;
                                                    
                                                    int64_t rcx_36 = *arg1;
                                                    
                                                    if (rcx_36 != 0)
                                                    {
                                                        int32_t r9_11 = *(arg1 + 0xc);
                                                        
                                                        if ((arg1[1] + 4) <= r9_11)
                                                        {
                                                            uint64_t r10_9 = arg1[1];
                                                            int32_t r8_32 = *(r10_9 + rcx_36);
                                                            
                                                            if (arg1[2] != 0)
                                                                r8_32 = ((((r8_32 >> 0x18) | ((r8_32 >> 8) & 0xff00)) | ((r8_32 & 0xff00) << 8)) | (r8_32 << 0x18));
                                                            
                                                            if (r8_32 != 1)
                                                                goto label_18000f84f;
                                                            
                                                            if ((r10_9 + 4) <= r9_11)
                                                            {
                                                                arg1[1] += 4;
                                                            label_18000f84f:
                                                                int32_t r9_12 = arg1[1];
                                                                int32_t rax_88;
                                                                
                                                                if (r9_12 != 0)
                                                                    rax_88 = sub_180005100(arg1, arg2, var_264_1, r9_12, r15_1, &var_228);
                                                                
                                                                if ((r9_12 == 0 || rax_88 != 0))
                                                                {
                                                                    if (r13_1 != 0)
                                                                        arg1[1] = r13_1;
                                                                    
                                                                    int64_t r9_13 = *arg1;
                                                                    
                                                                    if (r9_13 != 0)
                                                                    {
                                                                        int32_t r8_37 = *(arg1 + 0xc);
                                                                        
                                                                        if ((arg1[1] + 4) <= r8_37)
                                                                        {
                                                                            arg1[1] += 4;
                                                                            
                                                                            if ((arg1[1] + 4) <= r8_37)
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t r11_5 = arg1[1];
                                                                                int32_t r10_10 = *((r11_5 - 4) + r9_13);
                                                                                int32_t rdi_11 = arg1[2];
                                                                                
                                                                                if (rdi_11 != 0)
                                                                                    r10_10 = ((((r10_10 >> 0x18) | ((r10_10 >> 8) & 0xff00)) | ((r10_10 & 0xff00) << 8)) | (r10_10 << 0x18));
                                                                                
                                                                                if ((r11_5 + 4) <= r8_37)
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) <= r8_37)
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        
                                                                                        if ((arg1[1] + 4) <= r8_37)
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            
                                                                                            if ((arg1[1] + 4) <= r8_37)
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                
                                                                                                if ((arg1[1] + 4) <= r8_37)
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) <= r8_37)
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        
                                                                                                        if ((arg1[1] + 4) <= r8_37)
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            
                                                                                                            if ((arg1[1] + 4) <= r8_37)
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                
                                                                                                                if ((arg1[1] + 4) <= r8_37)
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    int32_t r9_14 = *((arg1[1] - 4) + r9_13);
                                                                                                                    
                                                                                                                    if (rdi_11 != 0)
                                                                                                                        r9_14 = ((((r9_14 >> 0x18) | ((r9_14 >> 8) & 0xff00)) | ((r9_14 & 0xff00) << 8)) | (r9_14 << 0x18));
                                                                                                                    
                                                                                                                    void var_158;
                                                                                                                    sub_180005050(arg1, r10_10, &var_158);
                                                                                                                    int64_t rdx_31 = *arg1;
                                                                                                                    
                                                                                                                    if (rdx_31 != 0)
                                                                                                                    {
                                                                                                                        int32_t r10_14 = *(arg1 + 0xc);
                                                                                                                        
                                                                                                                        if ((arg1[1] + 4) <= r10_14)
                                                                                                                        {
                                                                                                                            arg1[1] += 4;
                                                                                                                            int32_t r8_41 = *((arg1[1] - 4) + rdx_31);
                                                                                                                            
                                                                                                                            if (arg1[2] != 0)
                                                                                                                                r8_41 = ((((r8_41 >> 0x18) | ((r8_41 >> 8) & 0xff00)) | ((r8_41 & 0xff00) << 8)) | (r8_41 << 0x18));
                                                                                                                            
                                                                                                                            if (r8_41 != 0)
                                                                                                                                arg1[1] = r8_41;
                                                                                                                            
                                                                                                                            if ((arg1[1] + 4) <= r10_14)
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                uint32_t r15_3 = (r9_14 / 3);
                                                                                                                                int32_t rax_129;
                                                                                                                                
                                                                                                                                if (r15_3 != 0)
                                                                                                                                    rax_129 = sub_180001e80(arg2, r15_3);
                                                                                                                                
                                                                                                                                if ((r15_3 == 0 || rax_129 != 0))
                                                                                                                                {
                                                                                                                                    int32_t rsi_3 = 0;
                                                                                                                                    
                                                                                                                                    if (r15_3 != 0)
                                                                                                                                    {
                                                                                                                                        int64_t r10_15 = 0;
                                                                                                                                        
                                                                                                                                        do
                                                                                                                                        {
                                                                                                                                            int64_t rdx_36 = *arg1;
                                                                                                                                            
                                                                                                                                            if (rdx_36 == 0)
                                                                                                                                                goto label_18000fbac;
                                                                                                                                            
                                                                                                                                            int32_t r11_6 = *(arg1 + 0xc);
                                                                                                                                            
                                                                                                                                            if ((arg1[1] + 2) > r11_6)
                                                                                                                                                goto label_18000fbac;
                                                                                                                                            
                                                                                                                                            arg1[1] += 2;
                                                                                                                                            int32_t r9_18 = arg1[1];
                                                                                                                                            uint16_t r8_45 = *((r9_18 - 2) + rdx_36);
                                                                                                                                            int32_t rdi_12 = arg1[2];
                                                                                                                                            
                                                                                                                                            if (rdi_12 != 0)
                                                                                                                                                r8_45 = ((r8_45 >> 8) | (r8_45 << 8));
                                                                                                                                            
                                                                                                                                            if ((r9_18 + 2) > r11_6)
                                                                                                                                                goto label_18000fbac;
                                                                                                                                            
                                                                                                                                            arg1[1] += 2;
                                                                                                                                            int32_t r14_2 = arg1[1];
                                                                                                                                            uint16_t r9_19 = *((r14_2 - 2) + rdx_36);
                                                                                                                                            
                                                                                                                                            if (rdi_12 != 0)
                                                                                                                                                r9_19 = ((r9_19 >> 8) | (r9_19 << 8));
                                                                                                                                            
                                                                                                                                            if ((r14_2 + 2) > r11_6)
                                                                                                                                                goto label_18000fbac;
                                                                                                                                            
                                                                                                                                            arg1[1] += 2;
                                                                                                                                            uint16_t rdx_37 = *((arg1[1] - 2) + rdx_36);
                                                                                                                                            
                                                                                                                                            if (rdi_12 != 0)
                                                                                                                                                rdx_37 = ((rdx_37 >> 8) | (rdx_37 << 8));
                                                                                                                                            
                                                                                                                                            int64_t rcx_52 = *(arg2 + 8);
                                                                                                                                            
                                                                                                                                            if (rcx_52 != 0)
                                                                                                                                            {
                                                                                                                                                *((r10_15 + rcx_52) + 4) = r8_45;
                                                                                                                                                *((r10_15 + *(arg2 + 8)) + 8) = r9_19;
                                                                                                                                                *((r10_15 + *(arg2 + 8)) + 0xc) = rdx_37;
                                                                                                                                            }
                                                                                                                                            
                                                                                                                                            rsi_3 += 1;
                                                                                                                                            r10_15 += 0x14;
                                                                                                                                        } while (rsi_3 < r15_3);
                                                                                                                                    }
                                                                                                                                    
                                                                                                                                    int32_t rax_144 = arg1[1];
                                                                                                                                    int32_t rcx_56 = (rax_144 & 0xfffffffc);
                                                                                                                                    int32_t rax_145 = (rcx_56 + 4);
                                                                                                                                    
                                                                                                                                    if ((rax_144 & 3) <= 0)
                                                                                                                                        rax_145 = rcx_56;
                                                                                                                                    
                                                                                                                                    arg1[1] = rax_145;
                                                                                                                                    result_1 = 1;
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            
                            break;
                        }
                    }
                    
                label_18000fbac:
                    void var_220;
                    `eh vector vbase constructor iterator'(&var_220, 0x10, 0xa, _guard_check_icall);
                    result = result_1;
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_298));
    return result;
}

uint64_t sub_18000fbf0(int64_t* arg1, void* arg2, int64_t arg3)
{
    void var_3e8;
    int64_t rax_1 = (__security_cookie ^ &var_3e8);
    uint64_t result;
    
    if ((arg3 != 0 && *arg1 != 0))
    {
        int32_t i_1 = *(arg1 + 0xc);
        int32_t rax_3 = (arg1[1] + 4);
        
        if (rax_3 > i_1)
            result = 0;
        else
        {
            arg1[1] = rax_3;
            
            if ((rax_3 + 4) > i_1)
                result = 0;
            else
            {
                arg1[1] += 4;
                
                if ((arg1[1] + 4) > i_1)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > i_1)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > i_1)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            
                            if ((arg1[1] + 4) > i_1)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t rax_13 = *(arg2 + 8);
                                
                                if (rax_13 == 0)
                                    result = 0;
                                else
                                {
                                    arg1[1] = rax_13;
                                    int32_t r8 = *(arg2 + 0x10);
                                    
                                    if ((rax_13 + 4) > i_1)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] = (rax_13 + 4);
                                        
                                        if ((rax_13 + 8) > i_1)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > i_1)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                
                                                if ((arg1[1] + 4) > i_1)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) > i_1)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t rax_22 = arg1[1];
                                                        int32_t rdx = 0;
                                                        
                                                        if ((r8 - 5) <= 0)
                                                        {
                                                        label_18000fd16:
                                                            int32_t rdi_1 = *(arg2 + 0x1c);
                                                            void lpMultiByteStr;
                                                            
                                                            if (rax_22 >= rdi_1)
                                                            {
                                                            label_18000fd39:
                                                                int32_t rdx_2 = *(arg2 + 0x1c);
                                                                int64_t s;
                                                                __builtin_memset(&s, 0, 0x50);
                                                                int32_t result_1;
                                                                
                                                                if (rdx_2 == 0)
                                                                {
                                                                labelid_6:
                                                                    result_1 = 0;
                                                                }
                                                                else if (sub_18000ffa0(arg1, rdx_2, &s) == 0)
                                                                {
                                                                labelid_6:
                                                                    result_1 = 0;
                                                                }
                                                                else
                                                                {
                                                                    int64_t var_3a0;
                                                                    int32_t rax_27 = *var_3a0[4];
                                                                    result_1 = 1;
                                                                    data_1800306f4 = 1;
                                                                    
                                                                    if (rax_27 == 0)
                                                                    {
                                                                    label_18000fee3:
                                                                        int64_t var_398;
                                                                        int32_t rax_38 = *var_398[4];
                                                                        
                                                                        if (rax_38 != 0)
                                                                        {
                                                                            int32_t i = 0;
                                                                            arg1[1] = rax_38;
                                                                            
                                                                            do
                                                                            {
                                                                                if (*arg1 == 0)
                                                                                    goto label_18000ff4a_2;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_18000ff4a_2;
                                                                                
                                                                                arg1[1] += 4;
                                                                                i += 1;
                                                                            } while (i < 0x20);
                                                                        }
                                                                        
                                                                        int64_t var_390;
                                                                        
                                                                        if (sub_18000d570(arg1, var_390, *var_390[4]) == 0)
                                                                        {
                                                                        labelid_6:
                                                                            result_1 = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            int64_t var_388;
                                                                            int32_t rax_42;
                                                                            int64_t rdx_10;
                                                                            rax_42 = sub_18000e400(arg1, var_388, *var_388[4]);
                                                                            int64_t var_378;
                                                                            
                                                                            if (rax_42 == 0)
                                                                            {
                                                                            label_18000ff4a:
                                                                                result_1 = 0;
                                                                            }
                                                                            else if (sub_18000b660(arg1, rdx_10, *var_378[4]) == 0)
                                                                            {
                                                                            label_18000ff4a_1:
                                                                                result_1 = 0;
                                                                            }
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        int32_t r14_1 = var_3a0;
                                                                        arg1[1] = rax_27;
                                                                        int32_t rax_28;
                                                                        
                                                                        if (r14_1 != 0)
                                                                            rax_28 = sub_180001fd0(&data_1800306f0, r14_1);
                                                                        
                                                                        if ((r14_1 == 0 || rax_28 != 0))
                                                                        {
                                                                            int32_t rsi_1 = 0;
                                                                            
                                                                            if (r14_1 != 0)
                                                                            {
                                                                                do
                                                                                {
                                                                                    memset(&lpMultiByteStr, 0, 0x104);
                                                                                    int64_t r8_3 = *arg1;
                                                                                    
                                                                                    if (r8_3 == 0)
                                                                                        goto label_18000ff4a_2;
                                                                                    
                                                                                    int32_t r9_1 = *(arg1 + 0xc);
                                                                                    
                                                                                    if ((arg1[1] + 4) > r9_1)
                                                                                        goto label_18000ff4a_2;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r11_1 = arg1[1];
                                                                                    int32_t r10_1 = arg1[2];
                                                                                    int32_t rdx_4 = *((r11_1 - 4) + r8_3);
                                                                                    
                                                                                    if (r10_1 != 0)
                                                                                        rdx_4 = _bswap(rdx_4);
                                                                                    
                                                                                    if ((r11_1 + 4) > r9_1)
                                                                                        goto label_18000ff4a_2;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r11_2 = arg1[1];
                                                                                    int32_t rdi_2 = *((r11_2 - 4) + r8_3);
                                                                                    
                                                                                    if (r10_1 != 0)
                                                                                        rdi_2 = _bswap(rdi_2);
                                                                                    
                                                                                    if ((r11_2 + 4) > r9_1)
                                                                                        goto label_18000ff4a_2;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r9_2 = *((arg1[1] - 4) + r8_3);
                                                                                    
                                                                                    if (r10_1 != 0)
                                                                                        r9_2 = _bswap(r9_2);
                                                                                    
                                                                                    sub_180005050(arg1, rdx_4, &lpMultiByteStr);
                                                                                    void var_258;
                                                                                    sub_180005050(arg1, rdi_2, &var_258);
                                                                                    void var_148;
                                                                                    sub_180005050(arg1, r9_2, &var_148);
                                                                                    int64_t r9_3 = data_180030700;
                                                                                    
                                                                                    if (r9_3 != 0)
                                                                                        MultiByteToWideChar(0, MB_PRECOMPOSED, &lpMultiByteStr, 0xffffffff, ((rsi_1 * 0x208) + r9_3), 0xff);
                                                                                    
                                                                                    rsi_1 += 1;
                                                                                } while (rsi_1 < r14_1);
                                                                            }
                                                                            
                                                                            goto label_18000fee3;
                                                                        }
                                                                        
                                                                    label_18000ff4a_2:
                                                                        result_1 = 0;
                                                                    }
                                                                }
                                                                
                                                                result = result_1;
                                                            }
                                                            else
                                                            {
                                                                while (true)
                                                                {
                                                                    if (sub_180004f90(arg1, &lpMultiByteStr) == 0)
                                                                    {
                                                                        result = 0;
                                                                        break;
                                                                    }
                                                                    
                                                                    if (arg1[1] >= rdi_1)
                                                                        goto label_18000fd39;
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            while ((arg1[1] + 4) <= i_1)
                                                            {
                                                                arg1[1] += 4;
                                                                rdx += 1;
                                                                rax_22 = arg1[1];
                                                                
                                                                if (rdx >= (r8 - 5))
                                                                    goto label_18000fd16;
                                                            }
                                                            
                                                            result = 0;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    else
        result = 0;
    
    __security_check_cookie((rax_1 ^ &var_3e8));
    return result;
}

int64_t sub_18000ffa0(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_1b8;
    int64_t rax_1 = (__security_cookie ^ &var_1b8);
    int64_t r9 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if ((r9 != 0 && (arg2 + 4) <= *(arg1 + 0xc)))
    {
        arg1[1] = (arg2 + 4);
        int32_t rdx = *(arg2 + r9);
        
        if (arg1[2] != 0)
            rdx = _bswap(rdx);
        
        void var_158;
        sub_180005050(arg1, rdx, &var_158);
        int64_t i = *arg1;
        int32_t rdx_1 = 0;
        int32_t r8_1 = 0;
        
        while (i != 0)
        {
            if ((arg1[1] + 4) > *(arg1 + 0xc))
                break;
            
            arg1[1] += 4;
            r8_1 += 1;
            int32_t rax_6 = arg1[1];
            
            if (r8_1 >= 6)
            {
                int32_t r8_2 = *(arg1 + 0xc);
                
                while (true)
                {
                    if (i == 0)
                        goto label_180010554;
                    
                    rax_6 += 4;
                    
                    if (rax_6 > r8_2)
                        goto label_180010554;
                    
                    rdx_1 += 1;
                    arg1[1] = rax_6;
                    
                    if (rdx_1 >= 0x13)
                    {
                        if (i == 0)
                            break;
                        
                        if ((rax_6 + 4) > r8_2)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r10_1 = arg1[1];
                        int32_t r11_1 = arg1[2];
                        int32_t rax_9 = *((r10_1 - 4) + i);
                        int32_t var_194_1 = rax_9;
                        
                        if (r11_1 != 0)
                            var_194_1 = _bswap(rax_9);
                        
                        if ((r10_1 + 4) > r8_2)
                            break;
                        
                        arg1[1] = (r10_1 + 4);
                        int32_t r13_1 = *(r10_1 + i);
                        
                        if (r11_1 != 0)
                            r13_1 = _bswap(r13_1);
                        
                        int32_t var_190_1;
                        int32_t r10_3;
                        
                        if ((r10_1 + 8) <= r8_2)
                        {
                            arg1[1] += 4;
                            r10_3 = arg1[1];
                            int32_t rax_15 = *((r10_3 - 4) + i);
                            var_190_1 = rax_15;
                            
                            if (r11_1 != 0)
                                var_190_1 = _bswap(rax_15);
                        }
                        
                        if (((r10_1 + 8) > r8_2 || (r10_3 + 4) > r8_2))
                            result = 0;
                        else
                        {
                            arg1[1] = (r10_3 + 4);
                            int32_t r15_1 = *(r10_3 + i);
                            
                            if (r11_1 != 0)
                                r15_1 = _bswap(r15_1);
                            
                            if ((r10_3 + 8) > r8_2)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r10_5 = arg1[1];
                                int32_t rax_21 = *((r10_5 - 4) + i);
                                int32_t var_18c_1 = rax_21;
                                
                                if (r11_1 != 0)
                                    var_18c_1 = _bswap(rax_21);
                                
                                if ((r10_5 + 4) > r8_2)
                                    result = 0;
                                else
                                {
                                    arg1[1] = (r10_5 + 4);
                                    int32_t rax_25 = *(r10_5 + i);
                                    int32_t var_198_1 = rax_25;
                                    
                                    if (r11_1 != 0)
                                        var_198_1 = _bswap(rax_25);
                                    
                                    if ((r10_5 + 8) > r8_2)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r10_7 = arg1[1];
                                        
                                        if ((r10_7 + 4) > r8_2)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (r10_7 + 4);
                                            int32_t rax_30 = *(r10_7 + i);
                                            int32_t var_188_1 = rax_30;
                                            
                                            if (r11_1 != 0)
                                                var_188_1 = _bswap(rax_30);
                                            
                                            if ((r10_7 + 8) > r8_2)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_9 = arg1[1];
                                                int32_t r14_1 = *((r10_9 - 4) + i);
                                                
                                                if (r11_1 != 0)
                                                    r14_1 = _bswap(r14_1);
                                                
                                                if ((r10_9 + 4) > r8_2)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (r10_9 + 4);
                                                    
                                                    if ((r10_9 + 8) > r8_2)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_11 = arg1[1];
                                                        int32_t rax_37 = *((r10_11 - 4) + i);
                                                        int32_t var_184_1 = rax_37;
                                                        
                                                        if (r11_1 != 0)
                                                            var_184_1 = _bswap(rax_37);
                                                        
                                                        if ((r10_11 + 4) > r8_2)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] = (r10_11 + 4);
                                                            int32_t rbp_1 = *(r10_11 + i);
                                                            
                                                            if (r11_1 != 0)
                                                                rbp_1 = _bswap(rbp_1);
                                                            
                                                            if ((r10_11 + 8) > r8_2)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rdx_2 = arg1[1];
                                                                
                                                                if ((rdx_2 + 4) > r8_2)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (rdx_2 + 4);
                                                                    
                                                                    if ((rdx_2 + 8) > r8_2)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t rdx_4 = arg1[1];
                                                                        
                                                                        if ((rdx_4 + 4) > r8_2)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (rdx_4 + 4);
                                                                            
                                                                            if ((rdx_4 + 8) > r8_2)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t rdx_6 = arg1[1];
                                                                                
                                                                                if ((rdx_6 + 4) > r8_2)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (rdx_6 + 4);
                                                                                    
                                                                                    if ((rdx_6 + 8) > r8_2)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t r10_13 = arg1[1];
                                                                                        int32_t rax_49 = *((r10_13 - 4) + i);
                                                                                        int32_t var_180_1 = rax_49;
                                                                                        
                                                                                        if (r11_1 != 0)
                                                                                            var_180_1 = _bswap(rax_49);
                                                                                        
                                                                                        if ((r10_13 + 4) > r8_2)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (r10_13 + 4);
                                                                                            int32_t rsi_1 = *(r10_13 + i);
                                                                                            
                                                                                            if (r11_1 != 0)
                                                                                                rsi_1 = _bswap(rsi_1);
                                                                                            
                                                                                            if ((r10_13 + 8) > r8_2)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t rdx_8 = arg1[1];
                                                                                                
                                                                                                if ((rdx_8 + 4) > r8_2)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (rdx_8 + 4);
                                                                                                    
                                                                                                    if ((rdx_8 + 8) > r8_2)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t rdx_10 = arg1[1];
                                                                                                        
                                                                                                        if ((rdx_10 + 4) > r8_2)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (rdx_10 + 4);
                                                                                                            
                                                                                                            if ((rdx_10 + 8) > r8_2)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t rdx_12 = arg1[1];
                                                                                                                
                                                                                                                if ((rdx_12 + 4) > r8_2)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = (rdx_12 + 4);
                                                                                                                    
                                                                                                                    if ((rdx_12 + 8) > r8_2)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t rdi_1 = arg1[1];
                                                                                                                        int32_t r12_1 = *((rdi_1 - 4) + i);
                                                                                                                        
                                                                                                                        if (r11_1 != 0)
                                                                                                                            r12_1 = _bswap(r12_1);
                                                                                                                        
                                                                                                                        if ((rdi_1 + 4) > r8_2)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] = (rdi_1 + 4);
                                                                                                                            int32_t r10_15 = *(rdi_1 + i);
                                                                                                                            
                                                                                                                            if (r11_1 != 0)
                                                                                                                                r10_15 = _bswap(r10_15);
                                                                                                                            
                                                                                                                            if ((rdi_1 + 8) > r8_2)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rdx_14 = arg1[1];
                                                                                                                                
                                                                                                                                if ((rdx_14 + 4) > r8_2)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] = (rdx_14 + 4);
                                                                                                                                    
                                                                                                                                    if ((rdx_14 + 8) > r8_2)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        int32_t rdx_16 = arg1[1];
                                                                                                                                        
                                                                                                                                        if ((rdx_16 + 4) > r8_2)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] = (rdx_16 + 4);
                                                                                                                                            
                                                                                                                                            if ((rdx_16 + 8) > r8_2)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int32_t rdx_18 = arg1[1];
                                                                                                                                                
                                                                                                                                                if ((rdx_18 + 4) > r8_2)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] = (rdx_18 + 4);
                                                                                                                                                    
                                                                                                                                                    if (r13_1 != 0)
                                                                                                                                                        r13_1 += r10_1;
                                                                                                                                                    
                                                                                                                                                    int32_t rax_70 = var_198_1;
                                                                                                                                                    
                                                                                                                                                    if (rax_70 != 0)
                                                                                                                                                        rax_70 += r10_5;
                                                                                                                                                    
                                                                                                                                                    if (r15_1 != 0)
                                                                                                                                                        r15_1 += r10_3;
                                                                                                                                                    
                                                                                                                                                    if (r14_1 != 0)
                                                                                                                                                        r14_1 += (r10_7 + 4);
                                                                                                                                                    
                                                                                                                                                    if (rbp_1 != 0)
                                                                                                                                                        rbp_1 += r10_11;
                                                                                                                                                    
                                                                                                                                                    if (rsi_1 != 0)
                                                                                                                                                        rsi_1 += r10_13;
                                                                                                                                                    
                                                                                                                                                    if (r10_15 != 0)
                                                                                                                                                        r10_15 += rdi_1;
                                                                                                                                                    
                                                                                                                                                    *(arg3 + 0x2c) = rax_70;
                                                                                                                                                    *(arg3 + 0x30) = var_188_1;
                                                                                                                                                    *(arg3 + 0x18) = var_194_1;
                                                                                                                                                    *(arg3 + 0x38) = var_184_1;
                                                                                                                                                    *(arg3 + 0x20) = var_190_1;
                                                                                                                                                    *(arg3 + 0x40) = var_180_1;
                                                                                                                                                    result = 1;
                                                                                                                                                    *(arg3 + 0x1c) = r13_1;
                                                                                                                                                    *(arg3 + 0x24) = r15_1;
                                                                                                                                                    *(arg3 + 0x28) = var_18c_1;
                                                                                                                                                    *(arg3 + 0x34) = r14_1;
                                                                                                                                                    *(arg3 + 0x3c) = rbp_1;
                                                                                                                                                    *(arg3 + 0x44) = rsi_1;
                                                                                                                                                    *(arg3 + 0x48) = r12_1;
                                                                                                                                                    *(arg3 + 0x4c) = r10_15;
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        goto label_18001052e;
                    }
                }
                
                break;
            }
        }
    }
    
label_180010554:
    result = 0;
label_18001052e:
    __security_check_cookie((rax_1 ^ &var_1b8));
    return result;
}

char* sub_180010560(char* arg1)
{
    *arg1 = 0;
    __builtin_memset(&arg1[0x104], 0, 0x18);
    return arg1;
}

uint64_t sub_180010580(int64_t* arg1, void* arg2)
{
    void var_3e8;
    int64_t rax_1 = (__security_cookie ^ &var_3e8);
    int64_t r11 = *arg1;
    uint64_t result;
    
    if (r11 == 0)
        result = 0;
    else
    {
        int32_t r10_1 = *(arg1 + 0xc);
        int32_t rcx_1 = (arg1[1] + 4);
        
        if (rcx_1 > r10_1)
            result = 0;
        else
        {
            arg1[1] = rcx_1;
            
            if ((rcx_1 + 4) > r10_1)
                result = 0;
            else
            {
                arg1[1] = (rcx_1 + 4);
                int32_t rax_4 = *(arg2 + 8);
                
                if (rax_4 == 0)
                    result = 0;
                else
                {
                    arg1[1] = rax_4;
                    int32_t rdx = *(arg2 + 0x10);
                    
                    if ((rax_4 + 4) > r10_1)
                        result = 0;
                    else
                    {
                        arg1[1] = (rax_4 + 4);
                        
                        if ((rax_4 + 8) > r10_1)
                            result = 0;
                        else
                        {
                            arg1[1] = (rax_4 + 8);
                            
                            if ((rax_4 + 0xc) > r10_1)
                                result = 0;
                            else
                            {
                                arg1[1] = (rax_4 + 0xc);
                                
                                if ((rax_4 + 0x10) > r10_1)
                                    result = 0;
                                else
                                {
                                    int32_t rax_7 = (rax_4 + 0x10);
                                    arg1[1] = rax_7;
                                    int32_t rcx_5 = 0;
                                    
                                    if ((rdx - 4) <= 0)
                                    {
                                    label_18001066d:
                                        int32_t rsi_1 = *(arg2 + 0x1c);
                                        void lpMultiByteStr;
                                        
                                        if (rax_7 >= rsi_1)
                                        {
                                        label_18001071f:
                                            int32_t rax_18 = data_1800306f0;
                                            int32_t rdx_3 = *(arg2 + 0x1c);
                                            int64_t s;
                                            __builtin_memset(&s, 0, 0x50);
                                            int32_t result_1;
                                            
                                            if (rax_18 != 0x364)
                                            {
                                                if (rax_18 != 0x374)
                                                {
                                                    if (rax_18 != 0x37d)
                                                    {
                                                        if (rdx_3 == 0)
                                                        {
                                                        labelid_4:
                                                            result_1 = 0;
                                                        }
                                                        else
                                                        {
                                                            if (sub_180011140(arg1, rdx_3, &s) != 0)
                                                                goto label_18001082a;
                                                            
                                                        labelid_4:
                                                            result_1 = 0;
                                                        }
                                                    }
                                                    else if (rdx_3 == 0)
                                                    {
                                                    labelid_4:
                                                        result_1 = 0;
                                                    }
                                                    else
                                                    {
                                                        if (sub_180011d40(arg1, rdx_3, &s) != 0)
                                                            goto label_18001082a;
                                                        
                                                    labelid_4:
                                                        result_1 = 0;
                                                    }
                                                }
                                                else if (rdx_3 == 0)
                                                {
                                                labelid_4:
                                                    result_1 = 0;
                                                }
                                                else
                                                {
                                                    if (sub_180011770(arg1, rdx_3, &s) != 0)
                                                        goto label_18001082a;
                                                    
                                                labelid_4:
                                                    result_1 = 0;
                                                }
                                            }
                                            else if (rdx_3 == 0)
                                            {
                                            labelid_4:
                                                result_1 = 0;
                                            }
                                            else if (sub_180010b10(arg1, rdx_3, &s) != 0)
                                            {
                                            label_18001082a:
                                                int64_t var_3a8;
                                                int32_t rax_23 = *var_3a8[4];
                                                int32_t rsi_2;
                                                int32_t r14_1;
                                                
                                                if (rax_23 != 0)
                                                {
                                                    r14_1 = var_3a8;
                                                    rsi_2 = 0;
                                                    arg1[1] = rax_23;
                                                }
                                                
                                                void var_258;
                                                void var_148;
                                                
                                                if ((rax_23 == 0 || r14_1 == 0))
                                                {
                                                label_180010925:
                                                    int64_t var_3a0;
                                                    int32_t rax_33 = *var_3a0[4];
                                                    result_1 = 1;
                                                    
                                                    if (rax_33 == 0)
                                                    {
                                                    label_180010a69:
                                                        int64_t var_398;
                                                        int32_t rax_43 = *var_398[4];
                                                        
                                                        if (rax_43 != 0)
                                                        {
                                                            int32_t i = 0;
                                                            arg1[1] = rax_43;
                                                            
                                                            do
                                                            {
                                                                if (*arg1 == 0)
                                                                    goto label_180010aeb_2;
                                                                
                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                    goto label_180010aeb_2;
                                                                
                                                                arg1[1] += 4;
                                                                i += 1;
                                                            } while (i < 0x40);
                                                        }
                                                        
                                                        int64_t var_390;
                                                        int64_t var_388;
                                                        
                                                        if (sub_180012640(arg1, var_390, *var_390[4]) == 0)
                                                        {
                                                        labelid_4:
                                                            result_1 = 0;
                                                        }
                                                        else if (sub_180012300(arg1, var_388, *var_388[4]) == 0)
                                                        {
                                                        labelid_4:
                                                            result_1 = 0;
                                                        }
                                                        else
                                                        {
                                                            int64_t var_380;
                                                            int32_t rax_48;
                                                            int64_t rdx_19;
                                                            rax_48 = sub_180014f10(arg1, var_380, *var_380[4]);
                                                            int64_t var_378;
                                                            
                                                            if (rax_48 == 0)
                                                            {
                                                            labelid_4:
                                                                result_1 = 0;
                                                            }
                                                            else if (sub_180014610(arg1, rdx_19, *var_378[4]) == 0)
                                                            {
                                                            labelid_4:
                                                                result_1 = 0;
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        int32_t r14_2 = var_3a0;
                                                        arg1[1] = rax_33;
                                                        int32_t rax_34;
                                                        
                                                        if (r14_2 != 0)
                                                            rax_34 = sub_180001fd0(&data_1800306f0, r14_2);
                                                        
                                                        if ((r14_2 == 0 || rax_34 != 0))
                                                        {
                                                            int32_t rdi_2 = 0;
                                                            
                                                            if (r14_2 != 0)
                                                            {
                                                                do
                                                                {
                                                                    memset(&lpMultiByteStr, 0, 0x104);
                                                                    int64_t r8_9 = *arg1;
                                                                    
                                                                    if (r8_9 == 0)
                                                                        goto label_180010aeb_2;
                                                                    
                                                                    int32_t r9_4 = *(arg1 + 0xc);
                                                                    
                                                                    if ((arg1[1] + 4) > r9_4)
                                                                        goto label_180010aeb_2;
                                                                    
                                                                    arg1[1] += 4;
                                                                    int32_t rdx_10 = arg1[1];
                                                                    int32_t r11_2 = arg1[2];
                                                                    int32_t r10_3 = *((rdx_10 - 4) + r8_9);
                                                                    
                                                                    if (r11_2 != 0)
                                                                        r10_3 = _bswap(r10_3);
                                                                    
                                                                    if ((rdx_10 + 4) > r9_4)
                                                                        goto label_180010aeb_2;
                                                                    
                                                                    arg1[1] = (rdx_10 + 4);
                                                                    int32_t rsi_3 = *(rdx_10 + r8_9);
                                                                    
                                                                    if (r11_2 != 0)
                                                                        rsi_3 = _bswap(rsi_3);
                                                                    
                                                                    if ((rdx_10 + 8) > r9_4)
                                                                        goto label_180010aeb_2;
                                                                    
                                                                    arg1[1] += 4;
                                                                    int32_t r9_5 = *((arg1[1] - 4) + r8_9);
                                                                    
                                                                    if (r11_2 != 0)
                                                                        r9_5 = _bswap(r9_5);
                                                                    
                                                                    sub_180005050(arg1, r10_3, &lpMultiByteStr);
                                                                    sub_180005050(arg1, rsi_3, &var_148);
                                                                    sub_180005050(arg1, r9_5, &var_258);
                                                                    int64_t r9_6 = data_180030700;
                                                                    
                                                                    if (r9_6 != 0)
                                                                        MultiByteToWideChar(0, MB_PRECOMPOSED, &lpMultiByteStr, 0xffffffff, ((rdi_2 * 0x208) + r9_6), 0xff);
                                                                    
                                                                    rdi_2 += 1;
                                                                } while (rdi_2 < r14_2);
                                                            }
                                                            
                                                            goto label_180010a69;
                                                        }
                                                        
                                                    label_180010aeb:
                                                        result_1 = 0;
                                                    }
                                                }
                                                else
                                                {
                                                    int64_t i_1 = *arg1;
                                                    
                                                    while (i_1 != 0)
                                                    {
                                                        int32_t r9_2 = *(arg1 + 0xc);
                                                        
                                                        if ((arg1[1] + 4) > r9_2)
                                                            break;
                                                        
                                                        arg1[1] += 4;
                                                        int32_t rdx_4 = arg1[1];
                                                        int32_t r11_1 = arg1[2];
                                                        int32_t r10_2 = *((rdx_4 - 4) + i_1);
                                                        
                                                        if (r11_1 != 0)
                                                            r10_2 = _bswap(r10_2);
                                                        
                                                        if ((rdx_4 + 4) > r9_2)
                                                            break;
                                                        
                                                        arg1[1] = (rdx_4 + 4);
                                                        int32_t rdi_1 = *(rdx_4 + i_1);
                                                        
                                                        if (r11_1 != 0)
                                                            rdi_1 = _bswap(rdi_1);
                                                        
                                                        if ((rdx_4 + 8) > r9_2)
                                                            break;
                                                        
                                                        arg1[1] += 4;
                                                        int32_t r9_3 = *((arg1[1] - 4) + i_1);
                                                        
                                                        if (r11_1 != 0)
                                                            r9_3 = _bswap(r9_3);
                                                        
                                                        sub_180005050(arg1, r10_2, &lpMultiByteStr);
                                                        sub_180005050(arg1, rdi_1, &var_258);
                                                        sub_180005050(arg1, r9_3, &var_148);
                                                        i_1 = *arg1;
                                                        int32_t rcx_15 = 0;
                                                        
                                                        while (true)
                                                        {
                                                            if (i_1 == 0)
                                                                goto label_180010aeb_2;
                                                            
                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                goto label_180010aeb_2;
                                                            
                                                            arg1[1] += 4;
                                                            rcx_15 += 1;
                                                            
                                                            if (rcx_15 >= 9)
                                                            {
                                                                rsi_2 += 1;
                                                                
                                                                if (rsi_2 < r14_1)
                                                                    break;
                                                                
                                                                goto label_180010925;
                                                            }
                                                        }
                                                    }
                                                    
                                                label_180010aeb_1:
                                                    result_1 = 0;
                                                }
                                            }
                                            else
                                            {
                                            label_180010aeb_2:
                                                result_1 = 0;
                                            }
                                            
                                            result = result_1;
                                        }
                                        else
                                        {
                                            while (true)
                                            {
                                                if ((&lpMultiByteStr == 0 || (arg1[1] + 4) > r10_1))
                                                {
                                                label_180010797:
                                                    result = 0;
                                                    break;
                                                }
                                                
                                                arg1[1] += 4;
                                                int32_t r9_1 = *((arg1[1] - 4) + r11);
                                                
                                                if (arg1[2] != 0)
                                                    r9_1 = _bswap(r9_1);
                                                
                                                int32_t r8_1 = 0;
                                                int64_t rdx_2 = 0;
                                                
                                                if (r9_1 != 0)
                                                {
                                                    do
                                                    {
                                                        if ((arg1[1] + 1) > r10_1)
                                                            goto label_180010797;
                                                        
                                                        arg1[1] += 1;
                                                        char rax_16 = *((arg1[1] - 1) + r11);
                                                        
                                                        if (rdx_2 < 0x104)
                                                            *(&lpMultiByteStr + rdx_2) = rax_16;
                                                        
                                                        if (rax_16 == 0)
                                                            break;
                                                        
                                                        r8_1 += 1;
                                                        rdx_2 += 1;
                                                    } while (r8_1 < r9_1);
                                                }
                                                
                                                if ((r9_1 == 0 || rdx_2 < 0x104))
                                                    *(&lpMultiByteStr + rdx_2) = 0;
                                                
                                                int32_t rax_17 = arg1[1];
                                                int32_t rcx_7 = (rax_17 & 0xfffffffc);
                                                
                                                if ((rax_17 & 3) > 0)
                                                    rcx_7 += 4;
                                                
                                                arg1[1] = rcx_7;
                                                
                                                if (rcx_7 >= rsi_1)
                                                    goto label_18001071f;
                                                
                                                continue;
                                            }
                                        }
                                    }
                                    else
                                    {
                                        while (true)
                                        {
                                            rax_7 += 4;
                                            
                                            if (rax_7 > r10_1)
                                            {
                                                result = 0;
                                                break;
                                            }
                                            
                                            rcx_5 += 1;
                                            arg1[1] = rax_7;
                                            
                                            if (rcx_5 >= (rdx - 4))
                                                goto label_18001066d;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_3e8));
    return result;
}

int64_t sub_180010b10(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_1b8;
    int64_t rax_1 = (__security_cookie ^ &var_1b8);
    arg1[1] = arg2;
    int64_t r8 = *arg1;
    int64_t result;
    
    if ((r8 != 0 && (arg2 + 4) <= *(arg1 + 0xc)))
    {
        arg1[1] = (arg2 + 4);
        int32_t rdx = *(arg2 + r8);
        
        if (arg1[2] != 0)
            rdx = _bswap(rdx);
        
        void var_158;
        sub_180005050(arg1, rdx, &var_158);
        int64_t i = *arg1;
        int32_t rdx_1 = 0;
        int32_t r8_2 = 0;
        
        while (i != 0)
        {
            if ((arg1[1] + 4) > *(arg1 + 0xc))
                break;
            
            arg1[1] += 4;
            r8_2 += 1;
            int32_t rax_6 = arg1[1];
            
            if (r8_2 >= 6)
            {
                int32_t r8_3 = *(arg1 + 0xc);
                
                while (true)
                {
                    if (i == 0)
                        goto label_180011139;
                    
                    rax_6 += 4;
                    
                    if (rax_6 > r8_3)
                        goto label_180011139;
                    
                    rdx_1 += 1;
                    arg1[1] = rax_6;
                    
                    if (rdx_1 >= 0x11)
                    {
                        if (i == 0)
                            break;
                        
                        if ((rax_6 + 4) > r8_3)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r10_1 = arg1[1];
                        int32_t r11_1 = arg1[2];
                        int32_t rax_9 = *((r10_1 - 4) + i);
                        int32_t var_190_1 = rax_9;
                        
                        if (r11_1 != 0)
                            var_190_1 = _bswap(rax_9);
                        
                        if ((r10_1 + 4) > r8_3)
                            break;
                        
                        arg1[1] = (r10_1 + 4);
                        int32_t r13_1 = *(r10_1 + i);
                        
                        if (r11_1 != 0)
                            r13_1 = _bswap(r13_1);
                        
                        if ((r10_1 + 8) > r8_3)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t r10_3 = arg1[1];
                            int32_t rax_15 = *((r10_3 - 4) + i);
                            int32_t var_18c_1 = rax_15;
                            
                            if (r11_1 != 0)
                                var_18c_1 = _bswap(rax_15);
                            
                            if ((r10_3 + 4) > r8_3)
                                result = 0;
                            else
                            {
                                arg1[1] = (r10_3 + 4);
                                int32_t rax_19 = *(r10_3 + i);
                                int32_t var_198_1 = rax_19;
                                
                                if (r11_1 != 0)
                                    var_198_1 = _bswap(rax_19);
                                
                                if ((r10_3 + 8) > r8_3)
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t r10_5 = arg1[1];
                                    int32_t rax_23 = *((r10_5 - 4) + i);
                                    int32_t var_188_1 = rax_23;
                                    
                                    if (r11_1 != 0)
                                        var_188_1 = _bswap(rax_23);
                                    
                                    if ((r10_5 + 4) > r8_3)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] = (r10_5 + 4);
                                        int32_t rax_27 = *(r10_5 + i);
                                        int32_t var_194_1 = rax_27;
                                        
                                        if (r11_1 != 0)
                                            var_194_1 = _bswap(rax_27);
                                        
                                        if ((r10_5 + 8) > r8_3)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] += 4;
                                            int32_t r10_7 = arg1[1];
                                            int32_t rax_31 = *((r10_7 - 4) + i);
                                            int32_t var_184_1 = rax_31;
                                            
                                            if (r11_1 != 0)
                                                var_184_1 = _bswap(rax_31);
                                            
                                            if ((r10_7 + 4) > r8_3)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] = (r10_7 + 4);
                                                int32_t r12_1 = *(r10_7 + i);
                                                
                                                if (r11_1 != 0)
                                                    r12_1 = _bswap(r12_1);
                                                
                                                if ((r10_7 + 8) > r8_3)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r15_1 = arg1[1];
                                                    int32_t var_180_1;
                                                    
                                                    if ((r15_1 + 4) <= r8_3)
                                                    {
                                                        arg1[1] = (r15_1 + 4);
                                                        int32_t rax_38 = *(r15_1 + i);
                                                        var_180_1 = rax_38;
                                                        
                                                        if (r11_1 != 0)
                                                            var_180_1 = _bswap(rax_38);
                                                    }
                                                    
                                                    if (((r15_1 + 4) > r8_3 || (r15_1 + 8) > r8_3))
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_9 = arg1[1];
                                                        int32_t rbp_1 = *((r10_9 - 4) + i);
                                                        
                                                        if (r11_1 != 0)
                                                            rbp_1 = _bswap(rbp_1);
                                                        
                                                        if ((r10_9 + 4) > r8_3)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] = (r10_9 + 4);
                                                            
                                                            if ((r10_9 + 8) > r8_3)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r10_11 = arg1[1];
                                                                int32_t rax_45 = *((r10_11 - 4) + i);
                                                                int32_t var_17c_1 = rax_45;
                                                                
                                                                if (r11_1 != 0)
                                                                    var_17c_1 = _bswap(rax_45);
                                                                
                                                                if ((r10_11 + 4) > r8_3)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (r10_11 + 4);
                                                                    int32_t rsi_1 = *(r10_11 + i);
                                                                    
                                                                    if (r11_1 != 0)
                                                                        rsi_1 = _bswap(rsi_1);
                                                                    
                                                                    if ((r10_11 + 8) > r8_3)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t rdx_2 = arg1[1];
                                                                        
                                                                        if ((rdx_2 + 4) > r8_3)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (rdx_2 + 4);
                                                                            
                                                                            if ((rdx_2 + 8) > r8_3)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t rdx_4 = arg1[1];
                                                                                
                                                                                if ((rdx_4 + 4) > r8_3)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (rdx_4 + 4);
                                                                                    
                                                                                    if ((rdx_4 + 8) > r8_3)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t rdx_6 = arg1[1];
                                                                                        
                                                                                        if ((rdx_6 + 4) > r8_3)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (rdx_6 + 4);
                                                                                            
                                                                                            if ((rdx_6 + 8) > r8_3)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t r10_13 = arg1[1];
                                                                                                int32_t rax_57 = *((r10_13 - 4) + i);
                                                                                                int32_t var_178_1 = rax_57;
                                                                                                
                                                                                                if (r11_1 != 0)
                                                                                                    var_178_1 = _bswap(rax_57);
                                                                                                
                                                                                                if ((r10_13 + 4) > r8_3)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (r10_13 + 4);
                                                                                                    int32_t rdi_1 = *(r10_13 + i);
                                                                                                    
                                                                                                    if (r11_1 != 0)
                                                                                                        rdi_1 = _bswap(rdi_1);
                                                                                                    
                                                                                                    if ((r10_13 + 8) > r8_3)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t rdx_8 = arg1[1];
                                                                                                        
                                                                                                        if ((rdx_8 + 4) > r8_3)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (rdx_8 + 4);
                                                                                                            
                                                                                                            if ((rdx_8 + 8) > r8_3)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t rdx_10 = arg1[1];
                                                                                                                
                                                                                                                if ((rdx_10 + 4) > r8_3)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = (rdx_10 + 4);
                                                                                                                    
                                                                                                                    if ((rdx_10 + 8) > r8_3)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t r10_15 = arg1[1];
                                                                                                                        int32_t r14_1 = *((r10_15 - 4) + i);
                                                                                                                        
                                                                                                                        if (r11_1 != 0)
                                                                                                                            r14_1 = _bswap(r14_1);
                                                                                                                        
                                                                                                                        if ((r10_15 + 4) > r8_3)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] = (r10_15 + 4);
                                                                                                                            int32_t r9_1 = *(r10_15 + i);
                                                                                                                            
                                                                                                                            if (r11_1 != 0)
                                                                                                                                r9_1 = _bswap(r9_1);
                                                                                                                            
                                                                                                                            if ((r10_15 + 8) > r8_3)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rdx_12 = arg1[1];
                                                                                                                                
                                                                                                                                if ((rdx_12 + 4) > r8_3)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] = (rdx_12 + 4);
                                                                                                                                    
                                                                                                                                    if ((rdx_12 + 8) > r8_3)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        int32_t rdx_14 = arg1[1];
                                                                                                                                        
                                                                                                                                        if ((rdx_14 + 4) > r8_3)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] = (rdx_14 + 4);
                                                                                                                                            
                                                                                                                                            if ((rdx_14 + 8) > r8_3)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int32_t rdx_16 = arg1[1];
                                                                                                                                                
                                                                                                                                                if ((rdx_16 + 4) > r8_3)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] = (rdx_16 + 4);
                                                                                                                                                    
                                                                                                                                                    if ((rdx_16 + 8) > r8_3)
                                                                                                                                                        result = 0;
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                        int32_t rdx_18 = arg1[1];
                                                                                                                                                        
                                                                                                                                                        if ((rdx_18 + 4) > r8_3)
                                                                                                                                                            result = 0;
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] = (rdx_18 + 4);
                                                                                                                                                            
                                                                                                                                                            if (r13_1 != 0)
                                                                                                                                                                r13_1 += r10_1;
                                                                                                                                                            
                                                                                                                                                            int32_t rax_78 = var_198_1;
                                                                                                                                                            
                                                                                                                                                            if (rax_78 != 0)
                                                                                                                                                                rax_78 += r10_3;
                                                                                                                                                            
                                                                                                                                                            int32_t rcx = var_194_1;
                                                                                                                                                            
                                                                                                                                                            if (rcx != 0)
                                                                                                                                                                rcx += r10_5;
                                                                                                                                                            
                                                                                                                                                            if (r12_1 != 0)
                                                                                                                                                                r12_1 += r10_7;
                                                                                                                                                            
                                                                                                                                                            if (rbp_1 != 0)
                                                                                                                                                                rbp_1 += (r15_1 + 4);
                                                                                                                                                            
                                                                                                                                                            if (rsi_1 != 0)
                                                                                                                                                                rsi_1 += r10_11;
                                                                                                                                                            
                                                                                                                                                            if (rdi_1 != 0)
                                                                                                                                                                rdi_1 += r10_13;
                                                                                                                                                            
                                                                                                                                                            if (r9_1 != 0)
                                                                                                                                                                r9_1 += r10_15;
                                                                                                                                                            
                                                                                                                                                            *(arg3 + 0x1c) = rax_78;
                                                                                                                                                            *(arg3 + 0x20) = var_188_1;
                                                                                                                                                            *(arg3 + 0x28) = var_184_1;
                                                                                                                                                            *(arg3 + 0x30) = var_180_1;
                                                                                                                                                            *(arg3 + 0x38) = var_17c_1;
                                                                                                                                                            *(arg3 + 0x10) = var_190_1;
                                                                                                                                                            *(arg3 + 0x40) = var_178_1;
                                                                                                                                                            result = 1;
                                                                                                                                                            *(arg3 + 0x14) = r13_1;
                                                                                                                                                            *(arg3 + 0x18) = var_18c_1;
                                                                                                                                                            *(arg3 + 0x24) = rcx;
                                                                                                                                                            *(arg3 + 0x2c) = r12_1;
                                                                                                                                                            *(arg3 + 0x34) = rbp_1;
                                                                                                                                                            *(arg3 + 0x3c) = rsi_1;
                                                                                                                                                            *(arg3 + 0x44) = rdi_1;
                                                                                                                                                            *(arg3 + 0x48) = r14_1;
                                                                                                                                                            *(arg3 + 0x4c) = r9_1;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        goto label_18001110f;
                    }
                }
                
                break;
            }
        }
    }
    
label_180011139:
    result = 0;
label_18001110f:
    __security_check_cookie((rax_1 ^ &var_1b8));
    return result;
}

int64_t sub_180011140(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_1b8;
    int64_t rax_1 = (__security_cookie ^ &var_1b8);
    int64_t r9 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if ((r9 != 0 && (arg2 + 4) <= *(arg1 + 0xc)))
    {
        arg1[1] = (arg2 + 4);
        int32_t rdx = *(arg2 + r9);
        
        if (arg1[2] != 0)
            rdx = _bswap(rdx);
        
        void var_158;
        sub_180005050(arg1, rdx, &var_158);
        int64_t r9_1 = *arg1;
        int32_t i = 0;
        int32_t rdx_1 = 0;
        
        while (true)
        {
            if (r9_1 == 0)
                goto label_18001176c;
            
            if ((arg1[1] + 4) > *(arg1 + 0xc))
                goto label_18001176c;
            
            arg1[1] += 4;
            rdx_1 += 1;
            int32_t rax_6 = arg1[1];
            
            if (rdx_1 >= 6)
            {
                int32_t r8_1 = 0x16;
                
                if (data_1800306f0 == 0x364)
                    r8_1 = 0x11;
                
                int32_t rdx_2 = 0;
                
                if (r8_1 > 0)
                {
                    do
                    {
                        if (r9_1 == 0)
                            goto label_18001176c;
                        
                        rax_6 += 4;
                        
                        if (rax_6 > *(arg1 + 0xc))
                            goto label_18001176c;
                        
                        rdx_2 += 1;
                        arg1[1] = rax_6;
                    } while (rdx_2 < r8_1);
                }
                
                if (r9_1 == 0)
                    break;
                
                int32_t r8_2 = *(arg1 + 0xc);
                
                if ((rax_6 + 4) > r8_2)
                    break;
                
                arg1[1] += 4;
                int32_t r10_2 = arg1[1];
                int32_t rbx_1 = arg1[2];
                int32_t rax_9 = *((r10_2 - 4) + r9_1);
                int32_t var_18c_1 = rax_9;
                
                if (rbx_1 != 0)
                    var_18c_1 = _bswap(rax_9);
                
                if ((r10_2 + 4) > r8_2)
                    result = 0;
                else
                {
                    arg1[1] = (r10_2 + 4);
                    int32_t rax_13 = *(r10_2 + r9_1);
                    int32_t var_198_1 = rax_13;
                    
                    if (rbx_1 != 0)
                        var_198_1 = _bswap(rax_13);
                    
                    if ((r10_2 + 8) > r8_2)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t r10_4 = arg1[1];
                        
                        if ((r10_4 + 4) > r8_2)
                            result = 0;
                        else
                        {
                            arg1[1] = (r10_4 + 4);
                            int32_t rsi_1 = *(r10_4 + r9_1);
                            
                            if (rbx_1 != 0)
                                rsi_1 = _bswap(rsi_1);
                            
                            if ((r10_4 + 8) > r8_2)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r10_6 = arg1[1];
                                int32_t rax_20 = *((r10_6 - 4) + r9_1);
                                int32_t var_188_1 = rax_20;
                                
                                if (rbx_1 != 0)
                                    var_188_1 = _bswap(rax_20);
                                
                                if ((r10_6 + 4) > r8_2)
                                    result = 0;
                                else
                                {
                                    arg1[1] = (r10_6 + 4);
                                    int32_t rax_24 = *(r10_6 + r9_1);
                                    int32_t var_194_1 = rax_24;
                                    
                                    if (rbx_1 != 0)
                                        var_194_1 = _bswap(rax_24);
                                    
                                    if ((r10_6 + 8) > r8_2)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r10_8 = arg1[1];
                                        int32_t rax_28 = *((r10_8 - 4) + r9_1);
                                        int32_t var_184_1 = rax_28;
                                        
                                        if (rbx_1 != 0)
                                            var_184_1 = _bswap(rax_28);
                                        
                                        if ((r10_8 + 4) > r8_2)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (r10_8 + 4);
                                            int32_t rax_32 = *(r10_8 + r9_1);
                                            int32_t var_190_1 = rax_32;
                                            
                                            if (rbx_1 != 0)
                                                var_190_1 = _bswap(rax_32);
                                            
                                            if ((r10_8 + 8) > r8_2)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t rdx_3 = arg1[1];
                                                
                                                if ((rdx_3 + 4) > r8_2)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (rdx_3 + 4);
                                                    
                                                    if ((rdx_3 + 8) > r8_2)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t rdx_5 = arg1[1];
                                                        
                                                        if ((rdx_5 + 4) > r8_2)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] = (rdx_5 + 4);
                                                            
                                                            if ((rdx_5 + 8) > r8_2)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rdx_7 = arg1[1];
                                                                
                                                                if ((rdx_7 + 4) > r8_2)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (rdx_7 + 4);
                                                                    
                                                                    if ((rdx_7 + 8) > r8_2)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t rdx_9 = arg1[1];
                                                                        
                                                                        if ((rdx_9 + 4) > r8_2)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (rdx_9 + 4);
                                                                            
                                                                            if ((rdx_9 + 8) > r8_2)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t r10_10 = arg1[1];
                                                                                int32_t rax_44 = *((r10_10 - 4) + r9_1);
                                                                                int32_t var_180_1 = rax_44;
                                                                                
                                                                                if (rbx_1 != 0)
                                                                                    var_180_1 = _bswap(rax_44);
                                                                                
                                                                                if ((r10_10 + 4) > r8_2)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (r10_10 + 4);
                                                                                    int32_t rbp_1 = *(r10_10 + r9_1);
                                                                                    
                                                                                    if (rbx_1 != 0)
                                                                                        rbp_1 = _bswap(rbp_1);
                                                                                    
                                                                                    if ((r10_10 + 8) > r8_2)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t rdx_11 = arg1[1];
                                                                                        
                                                                                        if ((rdx_11 + 4) > r8_2)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (rdx_11 + 4);
                                                                                            
                                                                                            if ((rdx_11 + 8) > r8_2)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t rdx_13 = arg1[1];
                                                                                                
                                                                                                if ((rdx_13 + 4) > r8_2)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (rdx_13 + 4);
                                                                                                    
                                                                                                    if ((rdx_13 + 8) > r8_2)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t rdx_15 = arg1[1];
                                                                                                        
                                                                                                        if ((rdx_15 + 4) > r8_2)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (rdx_15 + 4);
                                                                                                            
                                                                                                            if ((rdx_15 + 8) > r8_2)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t r10_12 = arg1[1];
                                                                                                                int32_t r13_1 = *((r10_12 - 4) + r9_1);
                                                                                                                
                                                                                                                if (rbx_1 != 0)
                                                                                                                    r13_1 = _bswap(r13_1);
                                                                                                                
                                                                                                                if ((r10_12 + 4) > r8_2)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = (r10_12 + 4);
                                                                                                                    int32_t rdi_1 = *(r10_12 + r9_1);
                                                                                                                    
                                                                                                                    if (rbx_1 != 0)
                                                                                                                        rdi_1 = _bswap(rdi_1);
                                                                                                                    
                                                                                                                    if ((r10_12 + 8) > r8_2)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t rdx_17 = arg1[1];
                                                                                                                        
                                                                                                                        if ((rdx_17 + 4) > r8_2)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] = (rdx_17 + 4);
                                                                                                                            
                                                                                                                            if ((rdx_17 + 8) > r8_2)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rdx_19 = arg1[1];
                                                                                                                                
                                                                                                                                if ((rdx_19 + 4) > r8_2)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] = (rdx_19 + 4);
                                                                                                                                    
                                                                                                                                    if ((rdx_19 + 8) > r8_2)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        int32_t r10_14 = arg1[1];
                                                                                                                                        int32_t r14_1 = *((r10_14 - 4) + r9_1);
                                                                                                                                        
                                                                                                                                        if (rbx_1 != 0)
                                                                                                                                            r14_1 = _bswap(r14_1);
                                                                                                                                        
                                                                                                                                        if ((r10_14 + 4) > r8_2)
                                                                                                                                        {
                                                                                                                                        labelid_b:
                                                                                                                                            result = 0;
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] = (r10_14 + 4);
                                                                                                                                            int32_t r9_2 = *(r10_14 + r9_1);
                                                                                                                                            
                                                                                                                                            if (rbx_1 != 0)
                                                                                                                                                r9_2 = _bswap(r9_2);
                                                                                                                                            
                                                                                                                                            if ((r10_14 + 8) > r8_2)
                                                                                                                                            {
                                                                                                                                            labelid_b:
                                                                                                                                                result = 0;
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int32_t rdx_21 = arg1[1];
                                                                                                                                                
                                                                                                                                                if ((rdx_21 + 4) > r8_2)
                                                                                                                                                {
                                                                                                                                                labelid_b:
                                                                                                                                                    result = 0;
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] = (rdx_21 + 4);
                                                                                                                                                    
                                                                                                                                                    if ((rdx_21 + 8) > r8_2)
                                                                                                                                                    {
                                                                                                                                                    labelid_b:
                                                                                                                                                        result = 0;
                                                                                                                                                    }
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                        int32_t rdx_23 = arg1[1];
                                                                                                                                                        
                                                                                                                                                        if ((rdx_23 + 4) > r8_2)
                                                                                                                                                        {
                                                                                                                                                        label_180011754:
                                                                                                                                                            result = 0;
                                                                                                                                                        }
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] = (rdx_23 + 4);
                                                                                                                                                            
                                                                                                                                                            if ((rdx_23 + 8) > r8_2)
                                                                                                                                                            {
                                                                                                                                                            label_180011754_1:
                                                                                                                                                                result = 0;
                                                                                                                                                            }
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                int32_t rdx_25 = arg1[1];
                                                                                                                                                                
                                                                                                                                                                if ((rdx_25 + 4) > r8_2)
                                                                                                                                                                {
                                                                                                                                                                label_180011754_2:
                                                                                                                                                                    result = 0;
                                                                                                                                                                }
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                    int32_t r8_3 = var_198_1;
                                                                                                                                                                    arg1[1] = (rdx_25 + 4);
                                                                                                                                                                    
                                                                                                                                                                    if (r8_3 != 0)
                                                                                                                                                                        r8_3 += r10_2;
                                                                                                                                                                    
                                                                                                                                                                    int32_t rdx_26 = var_194_1;
                                                                                                                                                                    
                                                                                                                                                                    if (rdx_26 != 0)
                                                                                                                                                                        rdx_26 += r10_6;
                                                                                                                                                                    
                                                                                                                                                                    int32_t rax_73 = var_190_1;
                                                                                                                                                                    
                                                                                                                                                                    if (rax_73 != 0)
                                                                                                                                                                        rax_73 += r10_8;
                                                                                                                                                                    
                                                                                                                                                                    if (rdi_1 != 0)
                                                                                                                                                                        rdi_1 += r10_12;
                                                                                                                                                                    
                                                                                                                                                                    if (rbp_1 != 0)
                                                                                                                                                                        rbp_1 += r10_10;
                                                                                                                                                                    
                                                                                                                                                                    if (r9_2 != 0)
                                                                                                                                                                        r9_2 += r10_14;
                                                                                                                                                                    
                                                                                                                                                                    if (rsi_1 != 0)
                                                                                                                                                                        rsi_1 += r10_4;
                                                                                                                                                                    
                                                                                                                                                                    *(arg3 + 0x1c) = r8_3;
                                                                                                                                                                    *(arg3 + 0x2c) = rdx_26;
                                                                                                                                                                    *(arg3 + 0x34) = rax_73;
                                                                                                                                                                    *(arg3 + 0x28) = var_188_1;
                                                                                                                                                                    *(arg3 + 0x30) = var_184_1;
                                                                                                                                                                    *(arg3 + 0x40) = var_180_1;
                                                                                                                                                                    *(arg3 + 0x18) = var_18c_1;
                                                                                                                                                                    *(arg3 + 0x38) = r13_1;
                                                                                                                                                                    *(arg3 + 0x3c) = rdi_1;
                                                                                                                                                                    *(arg3 + 0x44) = rbp_1;
                                                                                                                                                                    *(arg3 + 0x48) = r14_1;
                                                                                                                                                                    *(arg3 + 0x4c) = r9_2;
                                                                                                                                                                    
                                                                                                                                                                    if (rsi_1 != 0)
                                                                                                                                                                    {
                                                                                                                                                                        arg1[1] = rsi_1;
                                                                                                                                                                        
                                                                                                                                                                        do
                                                                                                                                                                        {
                                                                                                                                                                            if (*arg1 == 0)
                                                                                                                                                                                goto label_180011754_2;
                                                                                                                                                                            
                                                                                                                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                                                                                                goto label_180011754_2;
                                                                                                                                                                            
                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                            i += 1;
                                                                                                                                                                        } while (i < 0x40);
                                                                                                                                                                    }
                                                                                                                                                                    
                                                                                                                                                                    result = 1;
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                
                goto label_180011745;
            }
        }
    }
    
label_18001176c:
    result = 0;
label_180011745:
    __security_check_cookie((rax_1 ^ &var_1b8));
    return result;
}

int64_t sub_180011770(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_1a8;
    int64_t rax_1 = (__security_cookie ^ &var_1a8);
    int64_t r9 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if ((r9 != 0 && (arg2 + 4) <= *(arg1 + 0xc)))
    {
        arg1[1] = (arg2 + 4);
        int32_t rdx = *(arg2 + r9);
        
        if (arg1[2] != 0)
            rdx = _bswap(rdx);
        
        void var_158;
        sub_180005050(arg1, rdx, &var_158);
        int64_t r9_1 = *arg1;
        int32_t r8_1 = 0;
        int32_t rdx_1 = 0;
        
        while (true)
        {
            if (r9_1 == 0)
                goto label_180011d37;
            
            if ((arg1[1] + 4) > *(arg1 + 0xc))
                goto label_180011d37;
            
            arg1[1] += 4;
            rdx_1 += 1;
            int32_t rax_6 = arg1[1];
            
            if (rdx_1 >= 6)
            {
                int32_t rdx_2 = 0x16;
                
                if (data_1800306f0 == 0x374)
                    rdx_2 = 0x14;
                
                if (rdx_2 > 0)
                {
                    do
                    {
                        if (r9_1 == 0)
                            goto label_180011d37;
                        
                        rax_6 += 4;
                        
                        if (rax_6 > *(arg1 + 0xc))
                            goto label_180011d37;
                        
                        r8_1 += 1;
                        arg1[1] = rax_6;
                    } while (r8_1 < rdx_2);
                }
                
                if (r9_1 == 0)
                    break;
                
                int32_t r8_2 = *(arg1 + 0xc);
                
                if ((rax_6 + 4) > r8_2)
                    break;
                
                arg1[1] += 4;
                int32_t r10_2 = arg1[1];
                int32_t r11_1 = arg1[2];
                int32_t rax_9 = *((r10_2 - 4) + r9_1);
                int32_t var_188_1 = rax_9;
                
                if (r11_1 != 0)
                    var_188_1 = _bswap(rax_9);
                
                if ((r10_2 + 4) > r8_2)
                    break;
                
                arg1[1] = (r10_2 + 4);
                int32_t r13_1 = *(r10_2 + r9_1);
                
                if (r11_1 != 0)
                    r13_1 = _bswap(r13_1);
                
                if ((r10_2 + 8) > r8_2)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t rdx_3 = arg1[1];
                    
                    if ((rdx_3 + 4) > r8_2)
                        result = 0;
                    else
                    {
                        arg1[1] = (rdx_3 + 4);
                        
                        if ((rdx_3 + 8) > r8_2)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t r10_4 = arg1[1];
                            int32_t rax_17 = *((r10_4 - 4) + r9_1);
                            int32_t var_184_1 = rax_17;
                            
                            if (r11_1 != 0)
                                var_184_1 = _bswap(rax_17);
                            
                            if ((r10_4 + 4) > r8_2)
                                result = 0;
                            else
                            {
                                arg1[1] = (r10_4 + 4);
                                int32_t r15_1 = *(r10_4 + r9_1);
                                
                                if (r11_1 != 0)
                                    r15_1 = _bswap(r15_1);
                                
                                int32_t var_180_1;
                                int32_t r10_6;
                                
                                if ((r10_4 + 8) <= r8_2)
                                {
                                    arg1[1] += 4;
                                    r10_6 = arg1[1];
                                    int32_t rax_23 = *((r10_6 - 4) + r9_1);
                                    var_180_1 = rax_23;
                                    
                                    if (r11_1 != 0)
                                        var_180_1 = _bswap(rax_23);
                                }
                                
                                if (((r10_4 + 8) > r8_2 || (r10_6 + 4) > r8_2))
                                    result = 0;
                                else
                                {
                                    arg1[1] = (r10_6 + 4);
                                    int32_t r12_1 = *(r10_6 + r9_1);
                                    
                                    if (r11_1 != 0)
                                        r12_1 = _bswap(r12_1);
                                    
                                    if ((r10_6 + 8) > r8_2)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t rdx_5 = arg1[1];
                                        
                                        if ((rdx_5 + 4) > r8_2)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (rdx_5 + 4);
                                            
                                            if ((rdx_5 + 8) > r8_2)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t rdx_7 = arg1[1];
                                                
                                                if ((rdx_7 + 4) > r8_2)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (rdx_7 + 4);
                                                    
                                                    if ((rdx_7 + 8) > r8_2)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t rdx_9 = arg1[1];
                                                        
                                                        if ((rdx_9 + 4) > r8_2)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] = (rdx_9 + 4);
                                                            
                                                            if ((rdx_9 + 8) > r8_2)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rdx_11 = arg1[1];
                                                                
                                                                if ((rdx_11 + 4) > r8_2)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (rdx_11 + 4);
                                                                    
                                                                    if ((rdx_11 + 8) > r8_2)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t r10_8 = arg1[1];
                                                                        int32_t rax_37 = *((r10_8 - 4) + r9_1);
                                                                        int32_t var_178_1 = rax_37;
                                                                        
                                                                        if (r11_1 != 0)
                                                                            var_178_1 = _bswap(rax_37);
                                                                        
                                                                        if ((r10_8 + 4) > r8_2)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (r10_8 + 4);
                                                                            int32_t rbp_1 = *(r10_8 + r9_1);
                                                                            
                                                                            if (r11_1 != 0)
                                                                                rbp_1 = _bswap(rbp_1);
                                                                            
                                                                            if ((r10_8 + 8) > r8_2)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t rdx_13 = arg1[1];
                                                                                
                                                                                if ((rdx_13 + 4) > r8_2)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (rdx_13 + 4);
                                                                                    
                                                                                    if ((rdx_13 + 8) > r8_2)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t rdx_15 = arg1[1];
                                                                                        
                                                                                        if ((rdx_15 + 4) > r8_2)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (rdx_15 + 4);
                                                                                            
                                                                                            if ((rdx_15 + 8) > r8_2)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t rdx_17 = arg1[1];
                                                                                                
                                                                                                if ((rdx_17 + 4) > r8_2)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (rdx_17 + 4);
                                                                                                    
                                                                                                    if ((rdx_17 + 8) > r8_2)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t r10_10 = arg1[1];
                                                                                                        int32_t rax_49 = *((r10_10 - 4) + r9_1);
                                                                                                        int32_t var_17c_1 = rax_49;
                                                                                                        
                                                                                                        if (r11_1 != 0)
                                                                                                            var_17c_1 = _bswap(rax_49);
                                                                                                        
                                                                                                        if ((r10_10 + 4) > r8_2)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (r10_10 + 4);
                                                                                                            int32_t rdi_1 = *(r10_10 + r9_1);
                                                                                                            
                                                                                                            if (r11_1 != 0)
                                                                                                                rdi_1 = _bswap(rdi_1);
                                                                                                            
                                                                                                            if ((r10_10 + 8) > r8_2)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t rdx_19 = arg1[1];
                                                                                                                
                                                                                                                if ((rdx_19 + 4) > r8_2)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = (rdx_19 + 4);
                                                                                                                    
                                                                                                                    if ((rdx_19 + 8) > r8_2)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t rdx_21 = arg1[1];
                                                                                                                        
                                                                                                                        if ((rdx_21 + 4) > r8_2)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] = (rdx_21 + 4);
                                                                                                                            
                                                                                                                            if ((rdx_21 + 8) > r8_2)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rbx_1 = arg1[1];
                                                                                                                                int32_t r14_1 = *((rbx_1 - 4) + r9_1);
                                                                                                                                
                                                                                                                                if (r11_1 != 0)
                                                                                                                                    r14_1 = _bswap(r14_1);
                                                                                                                                
                                                                                                                                if ((rbx_1 + 4) > r8_2)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] = (rbx_1 + 4);
                                                                                                                                    int32_t r10_12 = *(rbx_1 + r9_1);
                                                                                                                                    
                                                                                                                                    if (r11_1 != 0)
                                                                                                                                        r10_12 = _bswap(r10_12);
                                                                                                                                    
                                                                                                                                    if ((rbx_1 + 8) > r8_2)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        int32_t rdx_23 = arg1[1];
                                                                                                                                        
                                                                                                                                        if ((rdx_23 + 4) > r8_2)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] = (rdx_23 + 4);
                                                                                                                                            
                                                                                                                                            if ((rdx_23 + 8) > r8_2)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int32_t rdx_25 = arg1[1];
                                                                                                                                                
                                                                                                                                                if ((rdx_25 + 4) > r8_2)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] = (rdx_25 + 4);
                                                                                                                                                    
                                                                                                                                                    if ((rdx_25 + 8) > r8_2)
                                                                                                                                                        result = 0;
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                        int32_t rdx_27 = arg1[1];
                                                                                                                                                        
                                                                                                                                                        if ((rdx_27 + 4) > r8_2)
                                                                                                                                                            result = 0;
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] = (rdx_27 + 4);
                                                                                                                                                            
                                                                                                                                                            if (r13_1 != 0)
                                                                                                                                                                r13_1 += r10_2;
                                                                                                                                                            
                                                                                                                                                            if (r15_1 != 0)
                                                                                                                                                                r15_1 += r10_4;
                                                                                                                                                            
                                                                                                                                                            if (r12_1 != 0)
                                                                                                                                                                r12_1 += r10_6;
                                                                                                                                                            
                                                                                                                                                            if (rdi_1 != 0)
                                                                                                                                                                rdi_1 += r10_10;
                                                                                                                                                            
                                                                                                                                                            if (rbp_1 != 0)
                                                                                                                                                                rbp_1 += r10_8;
                                                                                                                                                            
                                                                                                                                                            if (r10_12 != 0)
                                                                                                                                                                r10_12 += rbx_1;
                                                                                                                                                            
                                                                                                                                                            *(arg3 + 0x18) = var_188_1;
                                                                                                                                                            *(arg3 + 0x28) = var_184_1;
                                                                                                                                                            *(arg3 + 0x30) = var_180_1;
                                                                                                                                                            *(arg3 + 0x38) = var_17c_1;
                                                                                                                                                            *(arg3 + 0x40) = var_178_1;
                                                                                                                                                            result = 1;
                                                                                                                                                            *(arg3 + 0x1c) = r13_1;
                                                                                                                                                            *(arg3 + 0x2c) = r15_1;
                                                                                                                                                            *(arg3 + 0x34) = r12_1;
                                                                                                                                                            *(arg3 + 0x3c) = rdi_1;
                                                                                                                                                            *(arg3 + 0x44) = rbp_1;
                                                                                                                                                            *(arg3 + 0x48) = r14_1;
                                                                                                                                                            *(arg3 + 0x4c) = r10_12;
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                
                goto label_180011d11;
            }
        }
    }
    
label_180011d37:
    result = 0;
label_180011d11:
    __security_check_cookie((rax_1 ^ &var_1a8));
    return result;
}

int64_t sub_180011d40(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_1a8;
    int64_t rax_1 = (__security_cookie ^ &var_1a8);
    int64_t r9 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if ((r9 != 0 && (arg2 + 4) <= *(arg1 + 0xc)))
    {
        arg1[1] = (arg2 + 4);
        int32_t rdx = *(arg2 + r9);
        
        if (arg1[2] != 0)
            rdx = _bswap(rdx);
        
        void var_158;
        sub_180005050(arg1, rdx, &var_158);
        int64_t i = *arg1;
        int32_t r9_1 = 0;
        int32_t rdx_1 = 0;
        
        while (i != 0)
        {
            if ((arg1[1] + 4) > *(arg1 + 0xc))
                break;
            
            arg1[1] += 4;
            rdx_1 += 1;
            int32_t rax_6 = arg1[1];
            
            if (rdx_1 >= 6)
            {
                int32_t r8_1 = *(arg1 + 0xc);
                
                while (true)
                {
                    if (i == 0)
                        goto label_1800122ed;
                    
                    rax_6 += 4;
                    
                    if (rax_6 > r8_1)
                        goto label_1800122ed;
                    
                    r9_1 += 1;
                    arg1[1] = rax_6;
                    
                    if (r9_1 >= 0x16)
                    {
                        if (i == 0)
                            break;
                        
                        if ((rax_6 + 4) > r8_1)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r9_2 = arg1[1];
                        int32_t r11_1 = arg1[2];
                        int32_t rax_9 = *((r9_2 - 4) + i);
                        int32_t var_188_1 = rax_9;
                        
                        if (r11_1 != 0)
                            var_188_1 = _bswap(rax_9);
                        
                        if ((r9_2 + 4) > r8_1)
                            break;
                        
                        arg1[1] = (r9_2 + 4);
                        int32_t r13_1 = *(r9_2 + i);
                        
                        if (r11_1 != 0)
                            r13_1 = _bswap(r13_1);
                        
                        if ((r9_2 + 8) > r8_1)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t rdx_2 = arg1[1];
                            
                            if ((rdx_2 + 4) > r8_1)
                                result = 0;
                            else
                            {
                                arg1[1] = (rdx_2 + 4);
                                
                                if ((rdx_2 + 8) > r8_1)
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t r9_4 = arg1[1];
                                    int32_t rax_17 = *((r9_4 - 4) + i);
                                    int32_t var_184_1 = rax_17;
                                    
                                    if (r11_1 != 0)
                                        var_184_1 = _bswap(rax_17);
                                    
                                    if ((r9_4 + 4) > r8_1)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] = (r9_4 + 4);
                                        int32_t r15_1 = *(r9_4 + i);
                                        
                                        if (r11_1 != 0)
                                            r15_1 = _bswap(r15_1);
                                        
                                        int32_t var_180_1;
                                        int32_t r9_6;
                                        
                                        if ((r9_4 + 8) <= r8_1)
                                        {
                                            arg1[1] += 4;
                                            r9_6 = arg1[1];
                                            int32_t rax_23 = *((r9_6 - 4) + i);
                                            var_180_1 = rax_23;
                                            
                                            if (r11_1 != 0)
                                                var_180_1 = _bswap(rax_23);
                                        }
                                        
                                        if (((r9_4 + 8) > r8_1 || (r9_6 + 4) > r8_1))
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (r9_6 + 4);
                                            int32_t r12_1 = *(r9_6 + i);
                                            
                                            if (r11_1 != 0)
                                                r12_1 = _bswap(r12_1);
                                            
                                            if ((r9_6 + 8) > r8_1)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t rdx_4 = arg1[1];
                                                
                                                if ((rdx_4 + 4) > r8_1)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (rdx_4 + 4);
                                                    
                                                    if ((rdx_4 + 8) > r8_1)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t rdx_6 = arg1[1];
                                                        
                                                        if ((rdx_6 + 4) > r8_1)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] = (rdx_6 + 4);
                                                            
                                                            if ((rdx_6 + 8) > r8_1)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rdx_8 = arg1[1];
                                                                
                                                                if ((rdx_8 + 4) > r8_1)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (rdx_8 + 4);
                                                                    
                                                                    if ((rdx_8 + 8) > r8_1)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t rdx_10 = arg1[1];
                                                                        
                                                                        if ((rdx_10 + 4) > r8_1)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (rdx_10 + 4);
                                                                            
                                                                            if ((rdx_10 + 8) > r8_1)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t r9_8 = arg1[1];
                                                                                int32_t rax_37 = *((r9_8 - 4) + i);
                                                                                int32_t var_178_1 = rax_37;
                                                                                
                                                                                if (r11_1 != 0)
                                                                                    var_178_1 = _bswap(rax_37);
                                                                                
                                                                                if ((r9_8 + 4) > r8_1)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (r9_8 + 4);
                                                                                    int32_t rbp_1 = *(r9_8 + i);
                                                                                    
                                                                                    if (r11_1 != 0)
                                                                                        rbp_1 = _bswap(rbp_1);
                                                                                    
                                                                                    if ((r9_8 + 8) > r8_1)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t rdx_12 = arg1[1];
                                                                                        
                                                                                        if ((rdx_12 + 4) > r8_1)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (rdx_12 + 4);
                                                                                            
                                                                                            if ((rdx_12 + 8) > r8_1)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t rdx_14 = arg1[1];
                                                                                                
                                                                                                if ((rdx_14 + 4) > r8_1)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (rdx_14 + 4);
                                                                                                    
                                                                                                    if ((rdx_14 + 8) > r8_1)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t rdx_16 = arg1[1];
                                                                                                        
                                                                                                        if ((rdx_16 + 4) > r8_1)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (rdx_16 + 4);
                                                                                                            
                                                                                                            if ((rdx_16 + 8) > r8_1)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t r9_10 = arg1[1];
                                                                                                                int32_t rax_49 = *((r9_10 - 4) + i);
                                                                                                                int32_t var_17c_1 = rax_49;
                                                                                                                
                                                                                                                if (r11_1 != 0)
                                                                                                                    var_17c_1 = _bswap(rax_49);
                                                                                                                
                                                                                                                if ((r9_10 + 4) > r8_1)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = (r9_10 + 4);
                                                                                                                    int32_t rsi_1 = *(r9_10 + i);
                                                                                                                    
                                                                                                                    if (r11_1 != 0)
                                                                                                                        rsi_1 = _bswap(rsi_1);
                                                                                                                    
                                                                                                                    if ((r9_10 + 8) > r8_1)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t rdx_18 = arg1[1];
                                                                                                                        
                                                                                                                        if ((rdx_18 + 4) > r8_1)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] = (rdx_18 + 4);
                                                                                                                            
                                                                                                                            if ((rdx_18 + 8) > r8_1)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rdx_20 = arg1[1];
                                                                                                                                
                                                                                                                                if ((rdx_20 + 4) > r8_1)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] = (rdx_20 + 4);
                                                                                                                                    
                                                                                                                                    if ((rdx_20 + 8) > r8_1)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        int32_t rbx_1 = arg1[1];
                                                                                                                                        int32_t r14_1 = *((rbx_1 - 4) + i);
                                                                                                                                        
                                                                                                                                        if (r11_1 != 0)
                                                                                                                                            r14_1 = _bswap(r14_1);
                                                                                                                                        
                                                                                                                                        if ((rbx_1 + 4) > r8_1)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] = (rbx_1 + 4);
                                                                                                                                            int32_t r9_12 = *(rbx_1 + i);
                                                                                                                                            
                                                                                                                                            if (r11_1 != 0)
                                                                                                                                                r9_12 = _bswap(r9_12);
                                                                                                                                            
                                                                                                                                            if ((rbx_1 + 8) > r8_1)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int32_t rdx_22 = arg1[1];
                                                                                                                                                
                                                                                                                                                if ((rdx_22 + 4) > r8_1)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] = (rdx_22 + 4);
                                                                                                                                                    
                                                                                                                                                    if ((rdx_22 + 8) > r8_1)
                                                                                                                                                        result = 0;
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                        int32_t rdx_24 = arg1[1];
                                                                                                                                                        
                                                                                                                                                        if ((rdx_24 + 4) > r8_1)
                                                                                                                                                            result = 0;
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] = (rdx_24 + 4);
                                                                                                                                                            
                                                                                                                                                            if ((rdx_24 + 8) > r8_1)
                                                                                                                                                                result = 0;
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                int32_t rdx_26 = arg1[1];
                                                                                                                                                                
                                                                                                                                                                if ((rdx_26 + 4) > r8_1)
                                                                                                                                                                    result = 0;
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                    arg1[1] = (rdx_26 + 4);
                                                                                                                                                                    
                                                                                                                                                                    if (r13_1 != 0)
                                                                                                                                                                        r13_1 += r9_2;
                                                                                                                                                                    
                                                                                                                                                                    if (r15_1 != 0)
                                                                                                                                                                        r15_1 += r9_4;
                                                                                                                                                                    
                                                                                                                                                                    if (r12_1 != 0)
                                                                                                                                                                        r12_1 += r9_6;
                                                                                                                                                                    
                                                                                                                                                                    if (rsi_1 != 0)
                                                                                                                                                                        rsi_1 += r9_10;
                                                                                                                                                                    
                                                                                                                                                                    if (rbp_1 != 0)
                                                                                                                                                                        rbp_1 += r9_8;
                                                                                                                                                                    
                                                                                                                                                                    if (r9_12 != 0)
                                                                                                                                                                        r9_12 += rbx_1;
                                                                                                                                                                    
                                                                                                                                                                    *(arg3 + 0x18) = var_188_1;
                                                                                                                                                                    *(arg3 + 0x28) = var_184_1;
                                                                                                                                                                    *(arg3 + 0x30) = var_180_1;
                                                                                                                                                                    *(arg3 + 0x38) = var_17c_1;
                                                                                                                                                                    *(arg3 + 0x40) = var_178_1;
                                                                                                                                                                    result = 1;
                                                                                                                                                                    *(arg3 + 0x1c) = r13_1;
                                                                                                                                                                    *(arg3 + 0x2c) = r15_1;
                                                                                                                                                                    *(arg3 + 0x34) = r12_1;
                                                                                                                                                                    *(arg3 + 0x3c) = rsi_1;
                                                                                                                                                                    *(arg3 + 0x44) = rbp_1;
                                                                                                                                                                    *(arg3 + 0x48) = r14_1;
                                                                                                                                                                    *(arg3 + 0x4c) = r9_12;
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        goto label_1800122c7;
                    }
                }
                
                break;
            }
        }
    }
    
label_1800122ed:
    result = 0;
label_1800122c7:
    __security_check_cookie((rax_1 ^ &var_1a8));
    return result;
}

int64_t sub_180012300(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_278;
    int64_t rax_1 = (__security_cookie ^ &var_278);
    int32_t result;
    
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        
        if (arg2 != 0)
            result = sub_180001b50(&data_1800306f0, arg2);
        
        if ((arg2 == 0 || result != 0))
        {
            int32_t rbp_1 = 0;
            int32_t rsi_1 = arg1[1];
            int32_t rdi_1 = 0;
            void var_258;
            void var_148;
            
            if (arg2 == 0)
            {
            label_1800124c4:
                arg1[1] = rsi_1;
                
                if (arg2 == 0)
                {
                label_1800125ed:
                    result = 1;
                }
                else
                {
                    while (true)
                    {
                        int64_t r9_4 = *arg1;
                        int32_t* rdi_3 = ((rbp_1 * 0x2f8) + data_180030720);
                        
                        if (r9_4 != 0)
                        {
                            int32_t r8_4 = *(arg1 + 0xc);
                            
                            if ((rsi_1 + 4) <= r8_4)
                            {
                                int32_t r11_2 = arg1[2];
                                arg1[1] = (rsi_1 + 4);
                                int32_t r10_3 = *(rsi_1 + r9_4);
                                
                                if (r11_2 != 0)
                                    r10_3 = _bswap(r10_3);
                                
                                if ((rsi_1 + 8) <= r8_4)
                                {
                                    arg1[1] += 4;
                                    int32_t rdx_8 = arg1[1];
                                    int32_t rsi_2 = *((rdx_8 - 4) + r9_4);
                                    
                                    if (r11_2 != 0)
                                        rsi_2 = _bswap(rsi_2);
                                    
                                    if ((rdx_8 + 4) <= r8_4)
                                    {
                                        arg1[1] += 4;
                                        int32_t r14_1 = arg1[1];
                                        
                                        if ((r14_1 + 4) <= r8_4)
                                        {
                                            arg1[1] += 4;
                                            int32_t r9_5 = *((arg1[1] - 4) + r9_4);
                                            
                                            if (r11_2 != 0)
                                                r9_5 = _bswap(r9_5);
                                            
                                            sub_180005050(arg1, r10_3, &var_148);
                                            int64_t r8_7 = sub_180005050(arg1, rsi_2, &var_258);
                                            int32_t rax_19 = (r14_1 + r9_5);
                                            rsi_1 = arg1[1];
                                            
                                            if (r9_5 == 0)
                                                rax_19 = r9_5;
                                            
                                            if (data_1800306f0 != 0x364)
                                            {
                                                if (sub_180012dd0(arg1, rdi_3, r8_7, rax_19) != 0)
                                                {
                                                label_1800125df:
                                                    rbp_1 += 1;
                                                    arg1[1] = rsi_1;
                                                    
                                                    if (rbp_1 >= arg2)
                                                        goto label_1800125ed;
                                                    
                                                    continue;
                                                }
                                            }
                                            else if (rdi_3 != 0)
                                            {
                                                if (rax_19 != 0)
                                                {
                                                    arg1[1] = rax_19;
                                                    sub_180012ed0(arg1, rdi_3);
                                                }
                                                
                                                goto label_1800125df;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        result = 0;
                        break;
                    }
                }
            }
            else
            {
                while (true)
                {
                    memset(&var_258, 0, 0x104);
                    memset(&var_148, 0, 0x104);
                    int64_t r9_1 = *arg1;
                    
                    if (r9_1 != 0)
                    {
                        int32_t r8 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r10_1 = arg1[1];
                            int32_t r11_1 = arg1[2];
                            int32_t rdx = *((r10_1 - 4) + r9_1);
                            
                            if (r11_1 != 0)
                                rdx = _bswap(rdx);
                            
                            if ((r10_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t r10_2 = arg1[1];
                                int32_t r9_2 = *((r10_2 - 4) + r9_1);
                                
                                if (r11_1 != 0)
                                    r9_2 = _bswap(r9_2);
                                
                                if ((r10_2 + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        sub_180005050(arg1, rdx, &var_258);
                                        sub_180005050(arg1, r9_2, &var_148);
                                        void* r9_3 = data_180030720;
                                        
                                        if (r9_3 != 0)
                                        {
                                            int64_t r8_3 = (rdi_1 * 0x2f8);
                                            void* rcx_3 = &var_258;
                                            char* rdx_3 = ((r9_3 + 0xe8) + r8_3);
                                            char i;
                                            
                                            do
                                            {
                                                i = *rcx_3;
                                                rcx_3 += 1;
                                                *rdx_3 = i;
                                                rdx_3 = &rdx_3[1];
                                            } while (i != 0);
                                            void* rcx_4 = &var_148;
                                            char* rdx_6 = ((data_180030720 + 0x1ec) + r8_3);
                                            char i_1;
                                            
                                            do
                                            {
                                                i_1 = *rcx_4;
                                                rcx_4 += 1;
                                                *rdx_6 = i_1;
                                                rdx_6 = &rdx_6[1];
                                            } while (i_1 != 0);
                                        }
                                        
                                        rdi_1 += 1;
                                        
                                        if (rdi_1 >= arg2)
                                            goto label_1800124c4;
                                        
                                        continue;
                                    }
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_278));
    return result;
}

int64_t sub_180012640(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_4b8;
    int64_t rax_1 = (__security_cookie ^ &var_4b8);
    int32_t result;
    
    if ((arg3 != 0 && arg2 != 0))
    {
        arg1[1] = arg3;
        result = sub_1800020d0(&data_1800306f0, arg2);
        
        if (result != 0)
        {
            int32_t i = 0;
            int32_t r14_1 = 0;
            void var_488;
            void var_378;
            void var_268;
            void var_158;
            
            if (arg2 == 0)
            {
            label_1800128ce:
                arg1[1] = arg3;
                int32_t r12_1 = 0;
                
                if (arg2 != 0)
                {
                    do
                    {
                        int64_t r8_8 = *arg1;
                        void* rax_29 = ((r12_1 * 0x138) + data_180030710);
                        
                        if (r8_8 == 0)
                            goto label_180012b0c;
                        
                        int32_t rdx_7 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) > rdx_7)
                            goto label_180012b0c;
                        
                        arg1[1] += 4;
                        int32_t r10_2 = arg1[1];
                        int32_t r9_5 = arg1[2];
                        int32_t r11_2 = *((r10_2 - 4) + r8_8);
                        
                        if (r9_5 != 0)
                            r11_2 = _bswap(r11_2);
                        
                        if ((r10_2 + 4) > rdx_7)
                            goto label_180012b0c;
                        
                        arg1[1] += 4;
                        int32_t r10_3 = arg1[1];
                        int32_t r14_2 = *((r10_3 - 4) + r8_8);
                        
                        if (r9_5 != 0)
                            r14_2 = _bswap(r14_2);
                        
                        if ((r10_3 + 4) > rdx_7)
                            goto label_180012b0c;
                        
                        arg1[1] += 4;
                        int32_t r10_4 = arg1[1];
                        int32_t rbp_2 = *((r10_4 - 4) + r8_8);
                        
                        if (r9_5 != 0)
                            rbp_2 = _bswap(rbp_2);
                        
                        if ((r10_4 + 4) > rdx_7)
                            goto label_180012b0c;
                        
                        arg1[1] += 4;
                        int32_t r10_5 = arg1[1];
                        int32_t rdi_2 = *((r10_5 - 4) + r8_8);
                        
                        if (r9_5 != 0)
                            rdi_2 = _bswap(rdi_2);
                        
                        if ((r10_5 + 4) > rdx_7)
                            goto label_180012b0c;
                        
                        arg1[1] += 4;
                        int32_t r13_1 = arg1[1];
                        int32_t r15_1 = *((r13_1 - 4) + r8_8);
                        
                        if (r9_5 != 0)
                            r15_1 = _bswap(r15_1);
                        
                        if ((r13_1 + 4) > rdx_7)
                            goto label_180012b0c;
                        
                        arg1[1] += 4;
                        int32_t rsi_2 = *((arg1[1] - 4) + r8_8);
                        
                        if (r9_5 != 0)
                            rsi_2 = _bswap(rsi_2);
                        
                        sub_180005050(arg1, r11_2, &var_158);
                        sub_180005050(arg1, r14_2, &var_268);
                        sub_180005050(arg1, rbp_2, &var_378);
                        sub_180005050(arg1, rdi_2, &var_488);
                        
                        if (*arg1 == 0)
                            goto label_180012b0c;
                        
                        int32_t rcx_5 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) > rcx_5)
                            goto label_180012b0c;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > rcx_5)
                            goto label_180012b0c;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > rcx_5)
                            goto label_180012b0c;
                        
                        arg1[1] += 4;
                        int32_t rax_50 = data_1800306f0;
                        int32_t rdi_3 = arg1[1];
                        
                        if (rax_50 != 0x364)
                        {
                            int32_t rax_51;
                            
                            if (rax_50 == 0x374)
                            {
                                rax_51 = (rdi_3 + 4);
                            label_180012aa8:
                                
                                if (rax_51 > rcx_5)
                                    goto label_180012b0c;
                                
                                arg1[1] += 4;
                                rdi_3 = arg1[1];
                            }
                            else if ((rax_50 == 0x37d || rax_50 == 0x386))
                            {
                                if ((rdi_3 + 4) > rcx_5)
                                    goto label_180012b0c;
                                
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) > rcx_5)
                                    goto label_180012b0c;
                                
                                arg1[1] += 4;
                                rax_51 = (arg1[1] + 4);
                                goto label_180012aa8;
                            }
                        }
                        
                        int32_t r9_6 = (rsi_2 + r13_1);
                        
                        if (rsi_2 == 0)
                            r9_6 = rsi_2;
                        
                        if (sub_180012b60(arg1, rax_29, r15_1, r9_6) == 0)
                            goto label_180012b0c;
                        
                        r12_1 += 1;
                        arg1[1] = rdi_3;
                    } while (r12_1 < arg2);
                    
                    i = 0;
                }
                
                do
                {
                    if (*arg1 == 0)
                        goto label_180012b0c;
                    
                    if ((arg1[1] + 4) > *(arg1 + 0xc))
                        goto label_180012b0c;
                    
                    arg1[1] += 4;
                    i += 1;
                } while (i < 0x4d);
                
                result = 1;
            }
            else
            {
                while (true)
                {
                    memset(&var_488, 0, 0x104);
                    int64_t rdx = *arg1;
                    
                    if (rdx != 0)
                    {
                        int32_t r8 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r9_1 = arg1[1];
                            int32_t r10_1 = arg1[2];
                            int32_t r11_1 = *((r9_1 - 4) + rdx);
                            
                            if (r10_1 != 0)
                                r11_1 = _bswap(r11_1);
                            
                            if ((r9_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t r9_2 = arg1[1];
                                int32_t rsi_1 = *((r9_2 - 4) + rdx);
                                
                                if (r10_1 != 0)
                                    rsi_1 = _bswap(rsi_1);
                                
                                if ((r9_2 + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    int32_t r9_3 = arg1[1];
                                    int32_t rdi_1 = *((r9_3 - 4) + rdx);
                                    
                                    if (r10_1 != 0)
                                        rdi_1 = _bswap(rdi_1);
                                    
                                    if ((r9_3 + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        int32_t rbp_1 = arg1[1];
                                        int32_t r9_4 = *((rbp_1 - 4) + rdx);
                                        
                                        if (r10_1 != 0)
                                            r9_4 = _bswap(r9_4);
                                        
                                        if ((rbp_1 + 4) <= r8)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= r8)
                                            {
                                                arg1[1] += 4;
                                                sub_180005050(arg1, r11_1, &var_488);
                                                sub_180005050(arg1, rsi_1, &var_378);
                                                sub_180005050(arg1, rdi_1, &var_268);
                                                sub_180005050(arg1, r9_4, &var_158);
                                                
                                                if (*arg1 != 0)
                                                {
                                                    int32_t rcx_2 = *(arg1 + 0xc);
                                                    
                                                    if ((arg1[1] + 4) <= rcx_2)
                                                    {
                                                        arg1[1] += 4;
                                                        
                                                        if ((arg1[1] + 4) <= rcx_2)
                                                        {
                                                            arg1[1] += 4;
                                                            
                                                            if ((arg1[1] + 4) <= rcx_2)
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rax_20 = data_1800306f0;
                                                                int32_t rdx_5 = arg1[1];
                                                                
                                                                if (rax_20 == 0x364)
                                                                    goto label_180012886;
                                                                
                                                                int32_t rax_21;
                                                                
                                                                if (rax_20 != 0x374)
                                                                {
                                                                    if ((rax_20 != 0x37d && rax_20 != 0x386))
                                                                        goto label_180012886;
                                                                    
                                                                    if ((rdx_5 + 4) <= rcx_2)
                                                                    {
                                                                        arg1[1] += 4;
                                                                        
                                                                        if ((arg1[1] + 4) <= rcx_2)
                                                                        {
                                                                            arg1[1] += 4;
                                                                            rax_21 = (arg1[1] + 4);
                                                                            goto label_18001287a;
                                                                        }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    rax_21 = (rdx_5 + 4);
                                                                label_18001287a:
                                                                    
                                                                    if (rax_21 <= rcx_2)
                                                                    {
                                                                        arg1[1] += 4;
                                                                    label_180012886:
                                                                        void* r8_5 = data_180030710;
                                                                        
                                                                        if (r8_5 != 0)
                                                                        {
                                                                            void* rdx_6 = &var_488;
                                                                            char* r8_7 = ((r8_5 + 0x34) + (r14_1 * 0x138));
                                                                            char i_1;
                                                                            
                                                                            do
                                                                            {
                                                                                i_1 = *rdx_6;
                                                                                rdx_6 += 1;
                                                                                *r8_7 = i_1;
                                                                                r8_7 = &r8_7[1];
                                                                            } while (i_1 != 0);
                                                                        }
                                                                        
                                                                        r14_1 += 1;
                                                                        
                                                                        if (r14_1 >= arg2)
                                                                            goto label_1800128ce;
                                                                        
                                                                        continue;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    
                label_180012b0c:
                    result = 0;
                    break;
                }
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_4b8));
    return result;
}

int64_t sub_180012b60(int64_t* arg1, void* arg2, int32_t arg3, int32_t arg4)
{
    void var_278;
    int64_t rax_1 = (__security_cookie ^ &var_278);
    int64_t result;
    
    if (arg2 == 0)
        result = 0;
    else if ((arg4 != 0 && arg3 != 0))
    {
        int32_t rsi_1 = 0;
        arg1[1] = arg4;
        
        if (arg3 == 0)
        {
        label_180012d89:
            result = 1;
        }
        else
        {
            while (true)
            {
                void _Str1;
                memset(&_Str1, 0, 0x104);
                int64_t r8 = *arg1;
                
                if (r8 != 0)
                {
                    int32_t rdx = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= rdx)
                    {
                        arg1[1] += 4;
                        int32_t r9 = arg1[1];
                        int32_t r11_1 = arg1[2];
                        int32_t r10_1 = *((r9 - 4) + r8);
                        
                        if (r11_1 != 0)
                            r10_1 = _bswap(r10_1);
                        
                        if ((r9 + 4) <= rdx)
                        {
                            arg1[1] += 4;
                            int32_t r9_1 = arg1[1];
                            int32_t rdi_1 = *((r9_1 - 4) + r8);
                            
                            if (r11_1 != 0)
                                rdi_1 = _bswap(rdi_1);
                            
                            if ((r9_1 + 4) <= rdx)
                            {
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) <= rdx)
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) <= rdx)
                                    {
                                        arg1[1] += 4;
                                        int32_t r14_1 = arg1[1];
                                        
                                        if ((r14_1 + 4) <= rdx)
                                        {
                                            arg1[1] += 4;
                                            int32_t r9_2 = *((arg1[1] - 4) + r8);
                                            
                                            if (r11_1 != 0)
                                                r9_2 = _bswap(r9_2);
                                            
                                            sub_180005050(arg1, r10_1, &_Str1);
                                            void var_148;
                                            sub_180005050(arg1, rdi_1, &var_148);
                                            int32_t rbp_1 = arg1[1];
                                            int32_t rdi_2 = (r14_1 + r9_2);
                                            
                                            if (r9_2 == 0)
                                                rdi_2 = r9_2;
                                            
                                            if ((_stricmp(&_Str1, "texture0") != 0 || rdi_2 == 0))
                                            {
                                            label_180012d7b:
                                                rsi_1 += 1;
                                                arg1[1] = rbp_1;
                                                
                                                if (rsi_1 >= arg3)
                                                    goto label_180012d89;
                                                
                                                continue;
                                            }
                                            else
                                            {
                                                int64_t rdx_3 = *arg1;
                                                arg1[1] = rdi_2;
                                                
                                                if (rdx_3 != 0)
                                                {
                                                    int32_t rcx_3 = *(arg1 + 0xc);
                                                    
                                                    if ((rdi_2 + 4) <= rcx_3)
                                                    {
                                                        arg1[1] = (rdi_2 + 4);
                                                        
                                                        if ((rdi_2 + 8) <= rcx_3)
                                                        {
                                                            arg1[1] += 4;
                                                            
                                                            if ((arg1[1] + 4) <= rcx_3)
                                                            {
                                                                arg1[1] += 4;
                                                                
                                                                if ((arg1[1] + 4) <= rcx_3)
                                                                {
                                                                    arg1[1] += 4;
                                                                    
                                                                    if ((arg1[1] + 4) <= rcx_3)
                                                                    {
                                                                        arg1[1] += 4;
                                                                        
                                                                        if ((arg1[1] + 4) <= rcx_3)
                                                                        {
                                                                            arg1[1] += 4;
                                                                            int32_t rax_28 = *((arg1[1] - 4) + rdx_3);
                                                                            
                                                                            if (arg1[2] != 0)
                                                                                rax_28 = _bswap(rax_28);
                                                                            
                                                                            *(arg2 + 0x28) = rax_28;
                                                                            goto label_180012d7b;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                
                result = 0;
                break;
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_278));
    return result;
}

uint64_t sub_180012dd0(int64_t* arg1, int32_t* arg2, int64_t arg3, int32_t arg4)
{
    if (arg2 != 0)
    {
        if (arg4 == 0)
            return (arg4 + 1);
        
        int64_t r10_1 = *arg1;
        arg1[1] = arg4;
        
        if (r10_1 != 0)
        {
            int32_t rdx = *(arg1 + 0xc);
            
            if ((arg4 + 4) <= rdx)
            {
                arg1[1] = (arg4 + 4);
                
                if ((arg4 + 6) <= rdx)
                {
                    arg1[1] += 2;
                    int32_t r9 = arg1[1];
                    int16_t r11_1 = *((r9 - 2) + r10_1);
                    
                    if (arg1[2] != 0)
                        r11_1 = (ROLW(r11_1, 8));
                    
                    if ((r9 + 2) <= rdx)
                    {
                        arg1[1] += 2;
                        
                        if ((arg1[1] + 4) <= rdx)
                        {
                            arg1[1] += 4;
                            int32_t rbx_1 = arg1[1];
                            int32_t r9_1 = *((rbx_1 - 4) + r10_1);
                            
                            if (arg1[2] != 0)
                                r9_1 = _bswap(r9_1);
                            
                            if ((rbx_1 + 4) <= rdx)
                            {
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) <= rdx)
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) <= rdx)
                                    {
                                        arg1[1] += 4;
                                        int32_t rax_14 = arg1[1];
                                        
                                        if (r9_1 != 0)
                                            rax_14 = r9_1;
                                        
                                        arg1[1] = rax_14;
                                        int32_t rcx;
                                        rcx = sub_180013c40(arg1, arg2, arg3, r11_1) != 0;
                                        return rcx;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    return 0;
}

uint64_t sub_180012ed0(int64_t* arg1, int32_t* arg2)
{
    int64_t var_230 = -2;
    void var_298;
    int64_t rax_1 = (__security_cookie ^ &var_298);
    uint64_t result;
    
    if (arg2 == 0)
        result = 0;
    else
    {
        int64_t rdx = *arg1;
        
        if (rdx == 0)
            result = 0;
        else
        {
            int32_t rax_3 = (arg1[1] + 4);
            int32_t rcx = *(arg1 + 0xc);
            
            if (rax_3 > rcx)
                result = 0;
            else
            {
                arg1[1] = rax_3;
                
                if ((rax_3 + 4) > rcx)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t r12_1 = *((arg1[1] - 4) + rdx);
                    
                    if (arg1[2] != 0)
                        r12_1 = ((((r12_1 >> 0x18) | ((r12_1 >> 8) & 0xff00)) | ((r12_1 & 0xff00) << 8)) | (r12_1 << 0x18));
                    
                    int32_t var_228;
                    sub_1800010c0(&var_228);
                    int64_t s;
                    __builtin_memset(&s, 0, 0x14);
                    int32_t r14_1 = 0;
                    int64_t rdi_1 = *arg1;
                    int64_t r10_1 = 0;
                    int32_t result_1;
                    
                    while (true)
                    {
                        if (rdi_1 != 0)
                        {
                            int32_t r8_1 = *(arg1 + 0xc);
                            
                            if ((arg1[1] + 4) <= r8_1)
                            {
                                arg1[1] += 4;
                                int32_t r11_1 = arg1[1];
                                int32_t r9_1 = *((r11_1 - 4) + rdi_1);
                                int32_t rsi_1 = arg1[2];
                                
                                if (rsi_1 != 0)
                                    r9_1 = ((((r9_1 >> 0x18) | ((r9_1 >> 8) & 0xff00)) | ((r9_1 & 0xff00) << 8)) | (r9_1 << 0x18));
                                
                                if ((r11_1 + 4) <= r8_1)
                                {
                                    arg1[1] += 4;
                                    int32_t r15_1 = arg1[1];
                                    int32_t r8_2 = *((r15_1 - 4) + rdi_1);
                                    
                                    if (rsi_1 != 0)
                                        r8_2 = ((((r8_2 >> 0x18) | ((r8_2 >> 8) & 0xff00)) | ((r8_2 & 0xff00) << 8)) | (r8_2 << 0x18));
                                    
                                    if (r10_1 == 0)
                                        r14_1 = r9_1;
                                    
                                    if (r8_2 != 0)
                                        *(&s + (r10_1 << 2)) = (r8_2 + r11_1);
                                    
                                    r10_1 += 1;
                                    
                                    if (r10_1 < 5)
                                        continue;
                                    else
                                    {
                                        int32_t var_224_1 = r14_1;
                                        
                                        if (rdi_1 != 0)
                                        {
                                            int32_t r9_5 = *(arg1 + 0xc);
                                            
                                            if ((r15_1 + 4) <= r9_5)
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_2 = arg1[1];
                                                int32_t r8_6 = *((r10_2 - 4) + rdi_1);
                                                int32_t r11_2 = arg1[2];
                                                
                                                if (r11_2 != 0)
                                                    r8_6 = ((((r8_6 >> 0x18) | ((r8_6 >> 8) & 0xff00)) | ((r8_6 & 0xff00) << 8)) | (r8_6 << 0x18));
                                                
                                                if ((r10_2 + 4) <= r9_5)
                                                {
                                                    arg1[1] += 4;
                                                    int32_t rax_28 = arg1[1];
                                                    int32_t r13_1 = (r15_1 + r8_6);
                                                    
                                                    if (r8_6 == 0)
                                                        r13_1 = r8_6;
                                                    
                                                    int32_t rcx_14 = data_1800306f0;
                                                    
                                                    if (((rcx_14 != 0x30b && rcx_14 != 0x362) && rcx_14 != 0x36d))
                                                        goto label_180013142;
                                                    
                                                    if ((rax_28 + 4) <= r9_5)
                                                    {
                                                        arg1[1] += 4;
                                                        
                                                        if ((arg1[1] + 4) <= r9_5)
                                                        {
                                                            arg1[1] += 4;
                                                            rax_28 = arg1[1];
                                                        label_180013142:
                                                            
                                                            if ((rax_28 + 4) <= r9_5)
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r8_10 = arg1[1];
                                                                int32_t r10_3 = *((r8_10 - 4) + rdi_1);
                                                                int32_t var_264_1 = r10_3;
                                                                
                                                                if (r11_2 != 0)
                                                                    var_264_1 = ((((r10_3 >> 0x18) | ((r10_3 >> 8) & 0xff00)) | ((r10_3 & 0xff00) << 8)) | (r10_3 << 0x18));
                                                                
                                                                if ((r8_10 + 4) <= r9_5)
                                                                {
                                                                    arg1[1] += 4;
                                                                    int64_t var_24c_1 = 0;
                                                                    int32_t var_250 = 0;
                                                                    int64_t var_25c_1 = 0;
                                                                    int32_t var_260 = 0;
                                                                    
                                                                    if ((sub_18001d5c0(arg1, &var_250) != 0 && sub_18001d5c0(arg1, &var_260) != 0))
                                                                    {
                                                                        int32_t rax_40 = s;
                                                                        
                                                                        if (rax_40 != 0)
                                                                            arg1[1] = rax_40;
                                                                        
                                                                        result_1 = 0;
                                                                        int32_t r15_2 = 0;
                                                                        int32_t r9_6 = 0;
                                                                        
                                                                        if (r14_1 > 0)
                                                                        {
                                                                            int64_t r10_8 = *arg1;
                                                                            
                                                                            do
                                                                            {
                                                                                if (r10_8 == 0)
                                                                                    goto label_180013bfc;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_180013bfc;
                                                                                
                                                                                arg1[1] += 4;
                                                                                int32_t r8_11 = *((arg1[1] - 4) + r10_8);
                                                                                
                                                                                if (arg1[2] != 0)
                                                                                    r8_11 = ((((r8_11 >> 0x18) | ((r8_11 >> 8) & 0xff00)) | ((r8_11 & 0xff00) << 8)) | (r8_11 << 0x18));
                                                                                
                                                                                if (r9_6 == 0)
                                                                                    r15_2 = r8_11;
                                                                                
                                                                                r9_6 += 1;
                                                                            } while (r9_6 < r14_1);
                                                                        }
                                                                        
                                                                        int32_t rax_48 = *s[4];
                                                                        
                                                                        if (rax_48 != 0)
                                                                            arg1[1] = rax_48;
                                                                        
                                                                        int32_t r9_7 = 0;
                                                                        int64_t rsi_2 = r14_1;
                                                                        
                                                                        if (r14_1 > 0)
                                                                        {
                                                                            int64_t rdi_2 = *arg1;
                                                                            int64_t r11_3 = 0;
                                                                            void var_21c;
                                                                            void* r10_9 = &var_21c;
                                                                            
                                                                            do
                                                                            {
                                                                                if (rdi_2 == 0)
                                                                                    goto label_180013be5;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_180013be5;
                                                                                
                                                                                arg1[1] += 4;
                                                                                int32_t r8_15 = *((arg1[1] - 4) + rdi_2);
                                                                                
                                                                                if (arg1[2] != 0)
                                                                                    r8_15 = ((((r8_15 >> 0x18) | ((r8_15 >> 8) & 0xff00)) | ((r8_15 & 0xff00) << 8)) | (r8_15 << 0x18));
                                                                                
                                                                                if (r9_7 < var_228)
                                                                                    *r10_9 = r8_15;
                                                                                
                                                                                r9_7 += 1;
                                                                                r11_3 += 1;
                                                                                r10_9 += 0x10;
                                                                            } while (r11_3 < rsi_2);
                                                                        }
                                                                        
                                                                        int64_t var_170;
                                                                        int32_t rax_56 = var_170;
                                                                        
                                                                        if (rax_56 != 0)
                                                                            arg1[1] = rax_56;
                                                                        
                                                                        int32_t r9_8 = 0;
                                                                        
                                                                        if (r14_1 > 0)
                                                                        {
                                                                            int64_t rdi_3 = *arg1;
                                                                            int64_t r11_4 = 0;
                                                                            void var_218;
                                                                            void* r10_10 = &var_218;
                                                                            
                                                                            do
                                                                            {
                                                                                if (rdi_3 == 0)
                                                                                    goto label_180013be5;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_180013be5;
                                                                                
                                                                                arg1[1] += 4;
                                                                                int32_t r8_19 = *((arg1[1] - 4) + rdi_3);
                                                                                
                                                                                if (arg1[2] != 0)
                                                                                    r8_19 = ((((r8_19 >> 0x18) | ((r8_19 >> 8) & 0xff00)) | ((r8_19 & 0xff00) << 8)) | (r8_19 << 0x18));
                                                                                
                                                                                if (r9_8 < var_228)
                                                                                    *r10_10 = r8_19;
                                                                                
                                                                                r9_8 += 1;
                                                                                r11_4 += 1;
                                                                                r10_10 += 0x10;
                                                                            } while (r11_4 < rsi_2);
                                                                        }
                                                                        
                                                                        int32_t rax_64 = *var_170[4];
                                                                        
                                                                        if (rax_64 != 0)
                                                                            arg1[1] = rax_64;
                                                                        
                                                                        int32_t r9_9 = 0;
                                                                        
                                                                        if (r14_1 > 0)
                                                                        {
                                                                            int64_t rdi_4 = *arg1;
                                                                            int64_t r11_5 = 0;
                                                                            void var_214;
                                                                            void* r10_11 = &var_214;
                                                                            
                                                                            do
                                                                            {
                                                                                if (rdi_4 == 0)
                                                                                    goto label_180013be5;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_180013be5;
                                                                                
                                                                                arg1[1] += 4;
                                                                                int32_t r8_23 = *((arg1[1] - 4) + rdi_4);
                                                                                
                                                                                if (arg1[2] != 0)
                                                                                    r8_23 = ((((r8_23 >> 0x18) | ((r8_23 >> 8) & 0xff00)) | ((r8_23 & 0xff00) << 8)) | (r8_23 << 0x18));
                                                                                
                                                                                if (r9_9 < var_228)
                                                                                    *r10_11 = r8_23;
                                                                                
                                                                                r9_9 += 1;
                                                                                r11_5 += 1;
                                                                                r10_11 += 0x10;
                                                                            } while (r11_5 < rsi_2);
                                                                        }
                                                                        
                                                                        int32_t var_168;
                                                                        
                                                                        if (var_168 != 0)
                                                                            arg1[1] = var_168;
                                                                        
                                                                        result_1 = 0;
                                                                        int32_t r11_6 = 0;
                                                                        int32_t r9_10 = 0;
                                                                        
                                                                        if (r14_1 > 0)
                                                                        {
                                                                            int64_t r10_12 = *arg1;
                                                                            
                                                                            while (true)
                                                                            {
                                                                                if (r10_12 == 0)
                                                                                    goto label_180013bfc;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_180013bfc;
                                                                                
                                                                                arg1[1] += 4;
                                                                                int32_t r8_27 = *((arg1[1] - 4) + r10_12);
                                                                                
                                                                                if (arg1[2] != 0)
                                                                                    r8_27 = ((((r8_27 >> 0x18) | ((r8_27 >> 8) & 0xff00)) | ((r8_27 & 0xff00) << 8)) | (r8_27 << 0x18));
                                                                                
                                                                                int32_t rax_80 = (r11_6 + 1);
                                                                                
                                                                                if (r8_27 == 0)
                                                                                    rax_80 = r11_6;
                                                                                
                                                                                r11_6 = rax_80;
                                                                                r9_10 += 1;
                                                                                
                                                                                if (r9_10 >= r14_1)
                                                                                {
                                                                                    if (rax_80 > 0)
                                                                                    {
                                                                                        int32_t r10_13 = 0;
                                                                                        
                                                                                        do
                                                                                        {
                                                                                            int64_t var_24c_2 = 0;
                                                                                            var_250 = 0;
                                                                                            int64_t var_25c_2 = 0;
                                                                                            var_260 = 0;
                                                                                            
                                                                                            if (sub_18001d5c0(arg1, &var_250) == 0)
                                                                                                goto label_180013bfc;
                                                                                            
                                                                                            if (sub_18001d5c0(arg1, &var_260) == 0)
                                                                                                goto label_180013bfc;
                                                                                            
                                                                                            r10_13 += 1;
                                                                                        } while (r10_13 < r11_6);
                                                                                    }
                                                                                    
                                                                                    break;
                                                                                }
                                                                            }
                                                                        }
                                                                        
                                                                        if (r13_1 != 0)
                                                                            arg1[1] = r13_1;
                                                                        
                                                                        int32_t r9_11 = arg1[1];
                                                                        int32_t rax_83;
                                                                        
                                                                        if (r9_11 != 0)
                                                                            rax_83 = sub_180005100(arg1, arg2, r12_1, r9_11, r15_2, &var_228);
                                                                        
                                                                        if ((r9_11 == 0 || rax_83 != 0))
                                                                        {
                                                                            int32_t r8_33 = 0;
                                                                            int32_t var_268_1 = 0;
                                                                            void* r14_2 = nullptr;
                                                                            var_250 = 0;
                                                                            uint64_t r15_3 = var_264_1;
                                                                            
                                                                            if (r15_3 != 0)
                                                                            {
                                                                                var_260 = r15_3;
                                                                                int64_t rax_84;
                                                                                int64_t rdx_26;
                                                                                rdx_26 = HIGHQ((0x11c * r15_3));
                                                                                rax_84 = LOWQ((0x11c * r15_3));
                                                                                
                                                                                if (((0x11c * r15_3) >> 0x40) != {0})
                                                                                    rax_84 = -1;
                                                                                
                                                                                uint64_t rax_85 = (rax_84 + 8);
                                                                                
                                                                                if (rax_84 >= -8)
                                                                                    rax_85 = -1;
                                                                                
                                                                                uint64_t* rax_86 = j_operator new(rax_85);
                                                                                int32_t var_240;
                                                                                var_240 = rax_86;
                                                                                
                                                                                if (rax_86 == 0)
                                                                                {
                                                                                    r14_2 = nullptr;
                                                                                    var_250 = 0;
                                                                                }
                                                                                else
                                                                                {
                                                                                    *rax_86 = r15_3;
                                                                                    r14_2 = &rax_86[1];
                                                                                    var_250 = r14_2;
                                                                                    int32_t var_278;
                                                                                    var_278 = _guard_check_icall;
                                                                                    `eh vector constructor iterator'(r14_2, 0x11c, r15_3, sub_180010560);
                                                                                }
                                                                                
                                                                                r8_33 = var_268_1;
                                                                            }
                                                                            
                                                                            int32_t i_3 = 0;
                                                                            
                                                                            if (r15_3 != 0)
                                                                            {
                                                                                var_260 = 0;
                                                                                int32_t i;
                                                                                
                                                                                do
                                                                                {
                                                                                    int32_t rax_87 = data_1800306f0;
                                                                                    
                                                                                    if ((rax_87 == 0x362 || rax_87 == 0x36d))
                                                                                    {
                                                                                        if (*arg1 == 0)
                                                                                            goto label_180013bfc;
                                                                                        
                                                                                        if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                            goto label_180013bfc;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                    }
                                                                                    
                                                                                    void var_158;
                                                                                    memset(&var_158, 0, 0x104);
                                                                                    int64_t r11_7 = *arg1;
                                                                                    
                                                                                    if (r11_7 == 0)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    int32_t r8_34 = *(arg1 + 0xc);
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_34)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_34)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r10_14 = arg1[1];
                                                                                    int32_t r9_12 = *((r10_14 - 4) + r11_7);
                                                                                    int32_t r12_5 = arg1[2];
                                                                                    
                                                                                    if (r12_5 != 0)
                                                                                        r9_12 = ((((r9_12 >> 0x18) | ((r9_12 >> 8) & 0xff00)) | ((r9_12 & 0xff00) << 8)) | (r9_12 << 0x18));
                                                                                    
                                                                                    int32_t rax_98 = data_1800306f0;
                                                                                    
                                                                                    if ((rax_98 == 0x362 || rax_98 == 0x36d))
                                                                                    {
                                                                                        if ((r10_14 + 4) > r8_34)
                                                                                            goto label_180013bfc;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                        r10_14 = arg1[1];
                                                                                    }
                                                                                    
                                                                                    if ((r10_14 + 4) > r8_34)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r10_15 = arg1[1];
                                                                                    int32_t r13_2 = *((r10_15 - 4) + r11_7);
                                                                                    
                                                                                    if (r12_5 != 0)
                                                                                        r13_2 = ((((r13_2 >> 0x18) | ((r13_2 >> 8) & 0xff00)) | ((r13_2 & 0xff00) << 8)) | (r13_2 << 0x18));
                                                                                    
                                                                                    if (r9_12 > 0x64)
                                                                                    {
                                                                                        arg1[1] = r9_12;
                                                                                        int64_t rdx_31 = 0;
                                                                                        
                                                                                        while ((arg1[1] + 1) <= *(arg1 + 0xc))
                                                                                        {
                                                                                            arg1[1] += 1;
                                                                                            char rax_109 = *((arg1[1] - 1) + r11_7);
                                                                                            
                                                                                            if (rdx_31 < 0x104)
                                                                                                *(&var_158 + rdx_31) = rax_109;
                                                                                            
                                                                                            rdx_31 += 1;
                                                                                            
                                                                                            if (rax_109 == 0)
                                                                                            {
                                                                                                if (rdx_31 >= 0x104)
                                                                                                    char var_55_1 = 0;
                                                                                                else
                                                                                                    *(&var_158 + rdx_31) = rax_109;
                                                                                                
                                                                                                arg1[1] = r10_15;
                                                                                                break;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_34)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_34)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_34)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_34)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_34)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_34)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r9_16 = arg1[1];
                                                                                    int32_t rdi_5 = *((r9_16 - 4) + r11_7);
                                                                                    
                                                                                    if (r12_5 != 0)
                                                                                        rdi_5 = ((((rdi_5 >> 0x18) | ((rdi_5 >> 8) & 0xff00)) | ((rdi_5 & 0xff00) << 8)) | (rdi_5 << 0x18));
                                                                                    
                                                                                    if ((r9_16 + 4) > r8_34)
                                                                                        goto label_180013bfc;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r9_17 = arg1[1];
                                                                                    int32_t rsi_3 = *((r9_17 - 4) + r11_7);
                                                                                    
                                                                                    if (r12_5 != 0)
                                                                                        rsi_3 = ((((rsi_3 >> 0x18) | ((rsi_3 >> 8) & 0xff00)) | ((rsi_3 & 0xff00) << 8)) | (rsi_3 << 0x18));
                                                                                    
                                                                                    if ((r9_17 + 4) > r8_34)
                                                                                        goto label_180013be5;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r14_3 = arg1[1];
                                                                                    int32_t r10_16 = *((r14_3 - 4) + r11_7);
                                                                                    
                                                                                    if (r12_5 != 0)
                                                                                        r10_16 = ((((r10_16 >> 0x18) | ((r10_16 >> 8) & 0xff00)) | ((r10_16 & 0xff00) << 8)) | (r10_16 << 0x18));
                                                                                    
                                                                                    if ((r14_3 + 4) > r8_34)
                                                                                        goto label_180013be5;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r15_4 = arg1[1];
                                                                                    int32_t r9_18 = *((r15_4 - 4) + r11_7);
                                                                                    
                                                                                    if (r12_5 != 0)
                                                                                        r9_18 = ((((r9_18 >> 0x18) | ((r9_18 >> 8) & 0xff00)) | ((r9_18 & 0xff00) << 8)) | (r9_18 << 0x18));
                                                                                    
                                                                                    if ((r15_4 + 4) > r8_34)
                                                                                        goto label_180013be5;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_34)
                                                                                        goto label_180013be5;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r11_8 = (r14_3 + r9_18);
                                                                                    
                                                                                    if (r9_18 == 0)
                                                                                        r11_8 = r9_18;
                                                                                    
                                                                                    r8_33 = (var_268_1 + r10_16);
                                                                                    var_268_1 = r8_33;
                                                                                    r14_2 = var_250;
                                                                                    int64_t rdx_41;
                                                                                    
                                                                                    if (r14_2 == 0)
                                                                                        rdx_41 = var_260;
                                                                                    else
                                                                                    {
                                                                                        char* rdx_40 = &var_158;
                                                                                        char j;
                                                                                        
                                                                                        do
                                                                                        {
                                                                                            j = *rdx_40;
                                                                                            *(rdx_40 + (((i_3 * 0x11c) - &var_158) + r14_2)) = j;
                                                                                            rdx_40 = &rdx_40[1];
                                                                                        } while (j != 0);
                                                                                        rdx_41 = var_260;
                                                                                        int64_t rax_145 = (rdx_41 * 0x11c);
                                                                                        *((rax_145 + r14_2) + 0x104) = r13_2;
                                                                                        *((rax_145 + r14_2) + 0x108) = r10_16;
                                                                                        *((rax_145 + r14_2) + 0x10c) = rsi_3;
                                                                                        *((rax_145 + r14_2) + 0x110) = r11_8;
                                                                                        *((rax_145 + r14_2) + 0x114) = rdi_5;
                                                                                        r8_33 = var_268_1;
                                                                                    }
                                                                                    
                                                                                    i = (i_3 + 1);
                                                                                    i_3 = i;
                                                                                    var_260 = (rdx_41 + 1);
                                                                                    r15_3 = var_264_1;
                                                                                    result_1 = 0;
                                                                                } while (i < r15_3);
                                                                            }
                                                                            
                                                                            uint32_t rdx_44 = (r8_33 / 3);
                                                                            
                                                                            if (rdx_44 == 0)
                                                                            {
                                                                            label_180013a05:
                                                                                int32_t var_240_1 = 0;
                                                                                int32_t var_268_2 = 0;
                                                                                
                                                                                if (r15_3 != 0)
                                                                                {
                                                                                    int64_t r12_6 = 0;
                                                                                    void* r13_6 = (r14_2 + 0x104);
                                                                                    int32_t rcx_70;
                                                                                    
                                                                                    do
                                                                                    {
                                                                                        arg1[1] = *(r13_6 + 0xc);
                                                                                        var_260 = *(r13_6 + 0x10);
                                                                                        uint16_t r15_5 = 0;
                                                                                        int32_t i_1 = 0;
                                                                                        
                                                                                        if (*r13_6 > 0)
                                                                                        {
                                                                                            int64_t r10_21 = (r12_6 * 0x14);
                                                                                            
                                                                                            do
                                                                                            {
                                                                                                int64_t rdx_46 = *arg1;
                                                                                                
                                                                                                if (rdx_46 == 0)
                                                                                                    goto label_180013be5;
                                                                                                
                                                                                                int32_t r11_9 = *(arg1 + 0xc);
                                                                                                
                                                                                                if ((arg1[1] + 2) > r11_9)
                                                                                                    goto label_180013be5;
                                                                                                
                                                                                                arg1[1] += 2;
                                                                                                int32_t r8_39 = arg1[1];
                                                                                                uint16_t r9_22 = *((r8_39 - 2) + rdx_46);
                                                                                                int32_t rdi_10 = arg1[2];
                                                                                                
                                                                                                if (rdi_10 != 0)
                                                                                                    r9_22 = ((r9_22 >> 8) | (r9_22 << 8));
                                                                                                
                                                                                                if ((r8_39 + 2) > r11_9)
                                                                                                    goto label_180013be5;
                                                                                                
                                                                                                arg1[1] += 2;
                                                                                                int32_t rsi_7 = arg1[1];
                                                                                                uint16_t r8_40 = *((rsi_7 - 2) + rdx_46);
                                                                                                
                                                                                                if (rdi_10 != 0)
                                                                                                    r8_40 = ((r8_40 >> 8) | (r8_40 << 8));
                                                                                                
                                                                                                if ((rsi_7 + 2) > r11_9)
                                                                                                    goto label_180013be5;
                                                                                                
                                                                                                arg1[1] += 2;
                                                                                                uint16_t rdx_47 = *((arg1[1] - 2) + rdx_46);
                                                                                                
                                                                                                if (rdi_10 != 0)
                                                                                                    rdx_47 = ((rdx_47 >> 8) | (rdx_47 << 8));
                                                                                                
                                                                                                uint16_t rax_162 = r9_22;
                                                                                                
                                                                                                if (r15_5 > r9_22)
                                                                                                    rax_162 = r15_5;
                                                                                                
                                                                                                uint16_t rcx_61 = r8_40;
                                                                                                
                                                                                                if (rax_162 > r8_40)
                                                                                                    rcx_61 = rax_162;
                                                                                                
                                                                                                r15_5 = rdx_47;
                                                                                                
                                                                                                if (rcx_61 > rdx_47)
                                                                                                    r15_5 = rcx_61;
                                                                                                
                                                                                                int64_t rcx_62 = *(arg2 + 8);
                                                                                                
                                                                                                if (rcx_62 != 0)
                                                                                                {
                                                                                                    int32_t r9_23 = var_260;
                                                                                                    *((rcx_62 + r10_21) + 4) = (r9_22 + r9_23);
                                                                                                    *((*(arg2 + 8) + r10_21) + 8) = (r8_40 + r9_23);
                                                                                                    *((*(arg2 + 8) + r10_21) + 0xc) = (rdx_47 + r9_23);
                                                                                                }
                                                                                                
                                                                                                var_240_1 += 1;
                                                                                                r12_6 += 1;
                                                                                                r10_21 += 0x14;
                                                                                                i_1 += 1;
                                                                                            } while (i_1 < *r13_6);
                                                                                        }
                                                                                        
                                                                                        *(r13_6 + 0x14) = r15_5;
                                                                                        int32_t rax_168 = arg1[1];
                                                                                        int32_t rcx_68 = (rax_168 & 0xfffffffc);
                                                                                        int32_t rax_169 = (rcx_68 + 4);
                                                                                        
                                                                                        if ((rax_168 & 3) <= 0)
                                                                                            rax_169 = rcx_68;
                                                                                        
                                                                                        arg1[1] = rax_169;
                                                                                        rcx_70 = (var_268_2 + 1);
                                                                                        var_268_2 = rcx_70;
                                                                                        r13_6 += 0x11c;
                                                                                    } while (rcx_70 < var_264_1);
                                                                                }
                                                                                
                                                                                void* rcx_71 = var_250;
                                                                                
                                                                                if (rcx_71 != 0)
                                                                                {
                                                                                    `eh vector vbase constructor iterator'(rcx_71, 0x11c, *(rcx_71 - 8), _guard_check_icall);
                                                                                    *(rcx_71 - 8);
                                                                                    sub_1800235a4((rcx_71 - 8));
                                                                                }
                                                                                
                                                                                result_1 = 1;
                                                                            }
                                                                            else if ((rdx_44 > 0 && sub_180001dd0(arg2, rdx_44) != 0))
                                                                            {
                                                                                int32_t i_2 = 0;
                                                                                
                                                                                if (*arg2 > 0)
                                                                                {
                                                                                    int32_t* rdx_45 = nullptr;
                                                                                    
                                                                                    do
                                                                                    {
                                                                                        *(rdx_45 + *(arg2 + 8)) = 3;
                                                                                        i_2 += 1;
                                                                                        rdx_45 = &rdx_45[5];
                                                                                    } while (i_2 < *arg2);
                                                                                }
                                                                                
                                                                                goto label_180013a05;
                                                                            }
                                                                        }
                                                                        
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                    label_180013be5:
                        result_1 = 0;
                        break;
                    }
                    
                label_180013bfc:
                    void var_220;
                    `eh vector vbase constructor iterator'(&var_220, 0x10, 0xa, _guard_check_icall);
                    result = result_1;
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_298));
    return result;
}

uint64_t sub_180013c40(int64_t* arg1, int32_t* arg2, int64_t arg3, int32_t arg4)
{
    int64_t var_118 = -2;
    void var_178;
    int64_t rax_1 = (__security_cookie ^ &var_178);
    uint64_t result;
    
    if (arg2 == 0)
    {
    labelid_f8:
        result = 0;
    }
    else
    {
        int64_t r11_1 = *arg1;
        
        if (r11_1 == 0)
        {
        labelid_f8:
            result = 0;
        }
        else
        {
            uint64_t rax_2 = arg1[1];
            int32_t rdi_1 = (rax_2 + 4);
            int32_t r9 = *(arg1 + 0xc);
            
            if (rdi_1 > r9)
            {
            label_1800145e7:
                result = 0;
            }
            else
            {
                int32_t r8 = *(rax_2 + r11_1);
                int32_t rsi_1 = arg1[2];
                
                if (rsi_1 != 0)
                    r8 = ((((r8 >> 0x18) | ((r8 >> 8) & 0xff00)) | ((r8 & 0xff00) << 8)) | (r8 << 0x18));
                
                if (r8 == 0)
                    arg1[1] = rdi_1;
                
                int32_t result_1 = 0;
                int32_t rcx_3 = 0;
                
                if (arg4 != 0)
                {
                    do
                    {
                        if ((arg1[1] + 4) > r9)
                            goto label_1800145e7_2;
                        
                        arg1[1] += 4;
                        rcx_3 += 1;
                    } while (rcx_3 < arg4);
                }
                
                if ((arg1[1] + 4) > r9)
                {
                label_1800145e7_1:
                    result = 0;
                }
                else
                {
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r9)
                    {
                    label_1800145e7_2:
                        result = 0;
                    }
                    else
                    {
                        arg1[1] += 4;
                        int32_t r8_4 = *((arg1[1] - 4) + r11_1);
                        int32_t var_144_1 = r8_4;
                        
                        if (rsi_1 != 0)
                            var_144_1 = ((((r8_4 >> 0x18) | ((r8_4 >> 8) & 0xff00)) | ((r8_4 & 0xff00) << 8)) | (r8_4 << 0x18));
                        
                        int32_t var_108;
                        sub_1800010c0(&var_108);
                        int64_t s;
                        __builtin_memset(&s, 0, 0x14);
                        int32_t r14_1 = 0;
                        int64_t i = *arg1;
                        int64_t r10_1 = 0;
                        
                        while (i != 0)
                        {
                            int32_t r8_9 = *(arg1 + 0xc);
                            
                            if ((arg1[1] + 4) > r8_9)
                                break;
                            
                            arg1[1] += 4;
                            int32_t r11_2 = arg1[1];
                            int32_t r9_1 = *((r11_2 - 4) + i);
                            int32_t rsi_2 = arg1[2];
                            
                            if (rsi_2 != 0)
                                r9_1 = ((((r9_1 >> 0x18) | ((r9_1 >> 8) & 0xff00)) | ((r9_1 & 0xff00) << 8)) | (r9_1 << 0x18));
                            
                            if ((r11_2 + 4) > r8_9)
                                break;
                            
                            arg1[1] += 4;
                            int32_t r15_1 = arg1[1];
                            int32_t r8_10 = *((r15_1 - 4) + i);
                            
                            if (rsi_2 != 0)
                                r8_10 = ((((r8_10 >> 0x18) | ((r8_10 >> 8) & 0xff00)) | ((r8_10 & 0xff00) << 8)) | (r8_10 << 0x18));
                            
                            if (r10_1 == 0)
                                r14_1 = r9_1;
                            
                            if (r8_10 != 0)
                                *(&s + (r10_1 << 2)) = (r8_10 + r11_2);
                            
                            r10_1 += 1;
                            
                            if (r10_1 >= 5)
                            {
                                int32_t var_104_1 = r14_1;
                                
                                if (i != 0)
                                {
                                    int32_t r8_14 = *(arg1 + 0xc);
                                    
                                    if ((r15_1 + 4) <= r8_14)
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) <= r8_14)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= r8_14)
                                            {
                                                arg1[1] += 4;
                                                int32_t r9_5 = arg1[1];
                                                int32_t r11_3 = *((r9_5 - 4) + i);
                                                int32_t var_148_1 = r11_3;
                                                int32_t r10_2 = arg1[2];
                                                
                                                if (r10_2 != 0)
                                                    var_148_1 = ((((r11_3 >> 0x18) | ((r11_3 >> 8) & 0xff00)) | ((r11_3 & 0xff00) << 8)) | (r11_3 << 0x18));
                                                
                                                if ((r9_5 + 4) <= r8_14)
                                                {
                                                    arg1[1] += 4;
                                                    int32_t rdx_10 = 3;
                                                    
                                                    if (data_1800306f0 == 0x374)
                                                        rdx_10 = 2;
                                                    
                                                    int32_t rcx_17 = 0;
                                                    
                                                    while ((arg1[1] + 4) <= *(arg1 + 0xc))
                                                    {
                                                        arg1[1] += 4;
                                                        rcx_17 += 1;
                                                        
                                                        if (rcx_17 >= rdx_10)
                                                        {
                                                            if ((arg1[1] + 4) <= r8_14)
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r9_6 = arg1[1];
                                                                
                                                                if ((r9_6 + 4) <= r8_14)
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t r8_15 = *((arg1[1] - 4) + i);
                                                                    
                                                                    if (r10_2 != 0)
                                                                        r8_15 = ((((r8_15 >> 0x18) | ((r8_15 >> 8) & 0xff00)) | ((r8_15 & 0xff00) << 8)) | (r8_15 << 0x18));
                                                                    
                                                                    int32_t rax_49 = (r9_6 + r8_15);
                                                                    
                                                                    if (r8_15 == 0)
                                                                        rax_49 = r8_15;
                                                                    
                                                                    int64_t var_134_1 = 0;
                                                                    int32_t var_138 = 0;
                                                                    int64_t var_124_1 = 0;
                                                                    int32_t var_128 = 0;
                                                                    
                                                                    if ((sub_18001d5c0(arg1, &var_138) != 0 && sub_18001d5c0(arg1, &var_128) != 0))
                                                                    {
                                                                        int32_t rax_52 = s;
                                                                        
                                                                        if (rax_52 != 0)
                                                                            arg1[1] = rax_52;
                                                                        
                                                                        int32_t r15_2 = 0;
                                                                        int32_t r9_7 = 0;
                                                                        
                                                                        if (r14_1 > 0)
                                                                        {
                                                                            int64_t r10_3 = *arg1;
                                                                            
                                                                            do
                                                                            {
                                                                                if (r10_3 == 0)
                                                                                    goto label_1800145dc;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_1800145dc;
                                                                                
                                                                                arg1[1] += 4;
                                                                                int32_t r8_19 = *((arg1[1] - 4) + r10_3);
                                                                                
                                                                                if (arg1[2] != 0)
                                                                                    r8_19 = ((((r8_19 >> 0x18) | ((r8_19 >> 8) & 0xff00)) | ((r8_19 & 0xff00) << 8)) | (r8_19 << 0x18));
                                                                                
                                                                                if (r9_7 == 0)
                                                                                    r15_2 = r8_19;
                                                                                
                                                                                r9_7 += 1;
                                                                            } while (r9_7 < r14_1);
                                                                        }
                                                                        
                                                                        int32_t rax_60 = *s[4];
                                                                        
                                                                        if (rax_60 != 0)
                                                                            arg1[1] = rax_60;
                                                                        
                                                                        int32_t r9_8 = 0;
                                                                        int64_t rsi_3 = r14_1;
                                                                        
                                                                        if (r14_1 > 0)
                                                                        {
                                                                            int64_t rdi_2 = *arg1;
                                                                            int64_t r11_8 = 0;
                                                                            void var_fc;
                                                                            void* r10_4 = &var_fc;
                                                                            
                                                                            do
                                                                            {
                                                                                if (rdi_2 == 0)
                                                                                    goto label_1800145dc;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_1800145dc;
                                                                                
                                                                                arg1[1] += 4;
                                                                                int32_t r8_23 = *((arg1[1] - 4) + rdi_2);
                                                                                
                                                                                if (arg1[2] != 0)
                                                                                    r8_23 = ((((r8_23 >> 0x18) | ((r8_23 >> 8) & 0xff00)) | ((r8_23 & 0xff00) << 8)) | (r8_23 << 0x18));
                                                                                
                                                                                if (r9_8 < var_108)
                                                                                    *r10_4 = r8_23;
                                                                                
                                                                                r9_8 += 1;
                                                                                r11_8 += 1;
                                                                                r10_4 += 0x10;
                                                                            } while (r11_8 < rsi_3);
                                                                        }
                                                                        
                                                                        int64_t var_50;
                                                                        int32_t rax_68 = var_50;
                                                                        
                                                                        if (rax_68 != 0)
                                                                            arg1[1] = rax_68;
                                                                        
                                                                        int32_t r9_9 = 0;
                                                                        
                                                                        if (r14_1 > 0)
                                                                        {
                                                                            int64_t rdi_3 = *arg1;
                                                                            int64_t r11_9 = 0;
                                                                            void var_f8;
                                                                            void* r10_5 = &var_f8;
                                                                            
                                                                            do
                                                                            {
                                                                                if (rdi_3 == 0)
                                                                                    goto label_1800145dc;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_1800145dc;
                                                                                
                                                                                arg1[1] += 4;
                                                                                int32_t r8_27 = *((arg1[1] - 4) + rdi_3);
                                                                                
                                                                                if (arg1[2] != 0)
                                                                                    r8_27 = ((((r8_27 >> 0x18) | ((r8_27 >> 8) & 0xff00)) | ((r8_27 & 0xff00) << 8)) | (r8_27 << 0x18));
                                                                                
                                                                                if (r9_9 < var_108)
                                                                                    *r10_5 = r8_27;
                                                                                
                                                                                r9_9 += 1;
                                                                                r11_9 += 1;
                                                                                r10_5 += 0x10;
                                                                            } while (r11_9 < rsi_3);
                                                                        }
                                                                        
                                                                        int32_t rax_76 = *var_50[4];
                                                                        
                                                                        if (rax_76 != 0)
                                                                            arg1[1] = rax_76;
                                                                        
                                                                        int32_t r9_10 = 0;
                                                                        
                                                                        if (r14_1 > 0)
                                                                        {
                                                                            int64_t rdi_4 = *arg1;
                                                                            int64_t r11_10 = 0;
                                                                            void var_f4;
                                                                            void* r10_6 = &var_f4;
                                                                            
                                                                            do
                                                                            {
                                                                                if (rdi_4 == 0)
                                                                                    goto label_1800145dc;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_1800145dc;
                                                                                
                                                                                arg1[1] += 4;
                                                                                int32_t r8_31 = *((arg1[1] - 4) + rdi_4);
                                                                                
                                                                                if (arg1[2] != 0)
                                                                                    r8_31 = ((((r8_31 >> 0x18) | ((r8_31 >> 8) & 0xff00)) | ((r8_31 & 0xff00) << 8)) | (r8_31 << 0x18));
                                                                                
                                                                                if (r9_10 < var_108)
                                                                                    *r10_6 = r8_31;
                                                                                
                                                                                r9_10 += 1;
                                                                                r11_10 += 1;
                                                                                r10_6 += 0x10;
                                                                            } while (r11_10 < rsi_3);
                                                                        }
                                                                        
                                                                        int32_t var_48;
                                                                        
                                                                        if (var_48 != 0)
                                                                            arg1[1] = var_48;
                                                                        
                                                                        int32_t rcx_35 = 0;
                                                                        
                                                                        if (r14_1 > 0)
                                                                        {
                                                                            do
                                                                            {
                                                                                if (*arg1 == 0)
                                                                                    goto label_1800145dc;
                                                                                
                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                    goto label_1800145dc;
                                                                                
                                                                                arg1[1] += 4;
                                                                                rcx_35 += 1;
                                                                            } while (rcx_35 < r14_1);
                                                                        }
                                                                        
                                                                        if (rax_49 != 0)
                                                                            arg1[1] = rax_49;
                                                                        
                                                                        int64_t r9_11 = *arg1;
                                                                        
                                                                        if (r9_11 != 0)
                                                                        {
                                                                            int32_t r8_35 = *(arg1 + 0xc);
                                                                            
                                                                            if ((arg1[1] + 4) <= r8_35)
                                                                            {
                                                                                arg1[1] += 4;
                                                                                
                                                                                if ((arg1[1] + 4) <= r8_35)
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) <= r8_35)
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        
                                                                                        if ((arg1[1] + 4) <= r8_35)
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            
                                                                                            if ((arg1[1] + 4) <= r8_35)
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                
                                                                                                if ((arg1[1] + 4) <= r8_35)
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) <= r8_35)
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        
                                                                                                        if ((arg1[1] + 4) <= r8_35)
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            
                                                                                                            if ((arg1[1] + 4) <= r8_35)
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                
                                                                                                                if ((arg1[1] + 4) <= r8_35)
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    
                                                                                                                    if ((arg1[1] + 4) <= r8_35)
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t r10_7 = arg1[1];
                                                                                                                        int32_t rsi_4 = *((r10_7 - 4) + r9_11);
                                                                                                                        int32_t r11_11 = arg1[2];
                                                                                                                        
                                                                                                                        if (r11_11 != 0)
                                                                                                                            rsi_4 = ((((rsi_4 >> 0x18) | ((rsi_4 >> 8) & 0xff00)) | ((rsi_4 & 0xff00) << 8)) | (rsi_4 << 0x18));
                                                                                                                        
                                                                                                                        if ((r10_7 + 4) <= r8_35)
                                                                                                                        {
                                                                                                                            arg1[1] += 4;
                                                                                                                            
                                                                                                                            if ((arg1[1] + 4) <= r8_35)
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                
                                                                                                                                if ((arg1[1] + 4) <= r8_35)
                                                                                                                                {
                                                                                                                                    arg1[1] += 4;
                                                                                                                                    int32_t r10_8 = arg1[1];
                                                                                                                                    int32_t rdi_5 = *((r10_8 - 4) + r9_11);
                                                                                                                                    
                                                                                                                                    if (r11_11 != 0)
                                                                                                                                        rdi_5 = ((((rdi_5 >> 0x18) | ((rdi_5 >> 8) & 0xff00)) | ((rdi_5 & 0xff00) << 8)) | (rdi_5 << 0x18));
                                                                                                                                    
                                                                                                                                    if ((r10_8 + 4) <= r8_35)
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        
                                                                                                                                        if ((arg1[1] + 4) <= r8_35)
                                                                                                                                        {
                                                                                                                                            arg1[1] += 4;
                                                                                                                                            
                                                                                                                                            if ((arg1[1] + 4) <= r8_35)
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                arg1[1] += 0x18;
                                                                                                                                                
                                                                                                                                                if (var_148_1 != 0)
                                                                                                                                                    arg1[1] = var_148_1;
                                                                                                                                                
                                                                                                                                                int32_t r9_12 = arg1[1];
                                                                                                                                                int32_t rax_129;
                                                                                                                                                
                                                                                                                                                if (r9_12 != 0)
                                                                                                                                                    rax_129 = sub_180005100(arg1, arg2, var_144_1, r9_12, r15_2, &var_108);
                                                                                                                                                
                                                                                                                                                if ((r9_12 == 0 || rax_129 != 0))
                                                                                                                                                {
                                                                                                                                                    if (rdi_5 != 0)
                                                                                                                                                        arg1[1] = rdi_5;
                                                                                                                                                    
                                                                                                                                                    uint32_t r15_4 = (rsi_4 / 3);
                                                                                                                                                    
                                                                                                                                                    if (r15_4 == 0)
                                                                                                                                                    {
                                                                                                                                                    label_1800144b7:
                                                                                                                                                        int32_t rsi_8 = 0;
                                                                                                                                                        
                                                                                                                                                        if (r15_4 != 0)
                                                                                                                                                        {
                                                                                                                                                            int64_t r10_9 = 0;
                                                                                                                                                            
                                                                                                                                                            do
                                                                                                                                                            {
                                                                                                                                                                int64_t rdx_32 = *arg1;
                                                                                                                                                                
                                                                                                                                                                if (rdx_32 == 0)
                                                                                                                                                                    goto label_1800145dc;
                                                                                                                                                                
                                                                                                                                                                int32_t r11_12 = *(arg1 + 0xc);
                                                                                                                                                                
                                                                                                                                                                if ((arg1[1] + 2) > r11_12)
                                                                                                                                                                    goto label_1800145dc;
                                                                                                                                                                
                                                                                                                                                                arg1[1] += 2;
                                                                                                                                                                int32_t r9_13 = arg1[1];
                                                                                                                                                                uint16_t r8_37 = *((r9_13 - 2) + rdx_32);
                                                                                                                                                                int32_t rdi_9 = arg1[2];
                                                                                                                                                                
                                                                                                                                                                if (rdi_9 != 0)
                                                                                                                                                                    r8_37 = ((r8_37 >> 8) | (r8_37 << 8));
                                                                                                                                                                
                                                                                                                                                                if ((r9_13 + 2) > r11_12)
                                                                                                                                                                    goto label_1800145dc;
                                                                                                                                                                
                                                                                                                                                                arg1[1] += 2;
                                                                                                                                                                int32_t r14_2 = arg1[1];
                                                                                                                                                                uint16_t r9_14 = *((r14_2 - 2) + rdx_32);
                                                                                                                                                                
                                                                                                                                                                if (rdi_9 != 0)
                                                                                                                                                                    r9_14 = ((r9_14 >> 8) | (r9_14 << 8));
                                                                                                                                                                
                                                                                                                                                                if ((r14_2 + 2) > r11_12)
                                                                                                                                                                    goto label_1800145dc;
                                                                                                                                                                
                                                                                                                                                                arg1[1] += 2;
                                                                                                                                                                uint16_t rdx_33 = *((arg1[1] - 2) + rdx_32);
                                                                                                                                                                
                                                                                                                                                                if (rdi_9 != 0)
                                                                                                                                                                    rdx_33 = ((rdx_33 >> 8) | (rdx_33 << 8));
                                                                                                                                                                
                                                                                                                                                                int64_t rcx_44 = *(arg2 + 8);
                                                                                                                                                                
                                                                                                                                                                if (rcx_44 != 0)
                                                                                                                                                                {
                                                                                                                                                                    *((rcx_44 + r10_9) + 4) = r8_37;
                                                                                                                                                                    *((*(arg2 + 8) + r10_9) + 8) = r9_14;
                                                                                                                                                                    *((*(arg2 + 8) + r10_9) + 0xc) = rdx_33;
                                                                                                                                                                }
                                                                                                                                                                
                                                                                                                                                                rsi_8 += 1;
                                                                                                                                                                r10_9 += 0x14;
                                                                                                                                                            } while (rsi_8 < r15_4);
                                                                                                                                                        }
                                                                                                                                                        
                                                                                                                                                        int32_t rax_147 = arg1[1];
                                                                                                                                                        int32_t rcx_48 = (rax_147 & 0xfffffffc);
                                                                                                                                                        int32_t rax_148 = (rcx_48 + 4);
                                                                                                                                                        
                                                                                                                                                        if ((rax_147 & 3) <= 0)
                                                                                                                                                            rax_148 = rcx_48;
                                                                                                                                                        
                                                                                                                                                        arg1[1] = rax_148;
                                                                                                                                                        result_1 = 1;
                                                                                                                                                    }
                                                                                                                                                    else if ((r15_4 > 0 && sub_180001dd0(arg2, r15_4) != 0))
                                                                                                                                                    {
                                                                                                                                                        int32_t j = 0;
                                                                                                                                                        
                                                                                                                                                        if (*arg2 > 0)
                                                                                                                                                        {
                                                                                                                                                            int32_t* rdx_31 = nullptr;
                                                                                                                                                            
                                                                                                                                                            do
                                                                                                                                                            {
                                                                                                                                                                *(rdx_31 + *(arg2 + 8)) = 3;
                                                                                                                                                                j += 1;
                                                                                                                                                                rdx_31 = &rdx_31[5];
                                                                                                                                                            } while (j < *arg2);
                                                                                                                                                        }
                                                                                                                                                        
                                                                                                                                                        goto label_1800144b7;
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            
                                                            break;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                break;
                            }
                        }
                        
                    label_1800145dc:
                        void var_100;
                        `eh vector vbase constructor iterator'(&var_100, 0x10, 0xa, _guard_check_icall);
                        result = result_1;
                    }
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_178));
    return result;
}

uint64_t sub_180014610(int64_t* arg1, int64_t arg2, int32_t arg3)
{
    void var_258;
    int64_t rax_1 = (__security_cookie ^ &var_258);
    uint64_t result;
    
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        void var_238;
        memset(&var_238, 0, 0x104);
        void var_128;
        memset(&var_128, 0, 0x104);
        int64_t r9_1 = *arg1;
        
        if (r9_1 == 0)
            result = 0;
        else
        {
            int32_t r8 = *(arg1 + 0xc);
            
            if ((arg3 + 4) > r8)
                result = 0;
            else
            {
                int32_t r11_1 = arg1[2];
                arg1[1] = (arg3 + 4);
                int32_t r10_1 = *(arg3 + r9_1);
                
                if (r11_1 != 0)
                    r10_1 = _bswap(r10_1);
                
                if ((arg3 + 8) > r8)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t rdx_1 = arg1[1];
                    int32_t rdi_1 = *((rdx_1 - 4) + r9_1);
                    
                    if (r11_1 != 0)
                        rdi_1 = _bswap(rdi_1);
                    
                    if ((rdx_1 + 4) > r8)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t r14_1 = arg1[1];
                        int32_t rsi_1 = *((r14_1 - 4) + r9_1);
                        
                        if (r11_1 != 0)
                            rsi_1 = _bswap(rsi_1);
                        
                        if ((r14_1 + 4) > r8)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t r9_2 = *((arg1[1] - 4) + r9_1);
                            
                            if (r11_1 != 0)
                                r9_2 = _bswap(r9_2);
                            
                            sub_180005050(arg1, r10_1, &var_238);
                            sub_180005050(arg1, rdi_1, &var_128);
                            int32_t rdi_2 = (r14_1 + r9_2);
                            
                            if (r9_2 == 0)
                                rdi_2 = r9_2;
                            
                            void* rax_10 = sub_180001a00(&data_1800306f0);
                            
                            if (rax_10 != 0)
                            {
                                void* rdx_4 = &var_238;
                                char i;
                                
                                do
                                {
                                    i = *rdx_4;
                                    *((rax_10 - &var_238) + rdx_4) = i;
                                    rdx_4 += 1;
                                } while (i != 0);
                                void* rdx_5 = &var_128;
                                char i_1;
                                
                                do
                                {
                                    i_1 = *rdx_5;
                                    *(((rax_10 - &var_128) + 0x104) + rdx_5) = i_1;
                                    rdx_5 += 1;
                                } while (i_1 != 0);
                                *(rax_10 + 0x514) = 0xffffffff;
                            }
                            
                            data_180030748 = 0;
                            sub_180014820(arg1, 0, rdi_2, rsi_1);
                            result = 1;
                        }
                    }
                }
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_258));
    return result;
}

int64_t sub_180014820(int64_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    void var_3e8;
    int64_t rax_1 = (__security_cookie ^ &var_3e8);
    int64_t result;
    
    if (((arg3 != 0 && arg3 >= 0x64) && arg3 < *(arg1 + 0xc)))
    {
        arg1[1] = arg3;
        int32_t rax_3 = (data_180030728 - 1);
        int32_t var_3ac_1 = 0;
        
        if (arg4 == 0)
        {
        label_180014c24:
            result = 1;
        }
        else
        {
            while (true)
            {
                void var_358;
                memset(&var_358, 0, 0x104);
                void var_248;
                memset(&var_248, 0, 0x104);
                void var_138;
                memset(&var_138, 0, 0x104);
                int64_t r9 = *arg1;
                
                if (r9 != 0)
                {
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= r8)
                    {
                        arg1[1] += 4;
                        int32_t r11_1 = arg1[1];
                        int32_t r10_1 = arg1[2];
                        int32_t rdx = *((r11_1 - 4) + r9);
                        
                        if (r10_1 != 0)
                            rdx = _bswap(rdx);
                        
                        if ((r11_1 + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r11_2 = arg1[1];
                            int32_t rbx_1 = *((r11_2 - 4) + r9);
                            
                            if (r10_1 != 0)
                                rbx_1 = _bswap(rbx_1);
                            
                            if ((r11_2 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t r9_1 = *((arg1[1] - 4) + r9);
                                
                                if (r10_1 != 0)
                                    r9_1 = _bswap(r9_1);
                                
                                sub_180005050(arg1, rdx, &var_358);
                                sub_180005050(arg1, rbx_1, &var_248);
                                sub_180005050(arg1, r9_1, &var_138);
                                int64_t var_38c_1 = 0;
                                int32_t var_390 = 0;
                                int64_t var_368_1 = 0;
                                int64_t var_370 = 0;
                                int64_t var_37c_1 = 0;
                                int32_t var_380 = 0;
                                
                                if (((sub_18001d5c0(arg1, &var_390) != 0 && sub_18001d710(arg1, &var_370) != 0) && (sub_18001d5c0(arg1, &var_380) != 0 && (*arg1 != 0 && (arg1[1] + 4) <= *(arg1 + 0xc)))))
                                {
                                    arg1[1] += 4;
                                    data_180030748 += 1;
                                    int64_t r8_4 = *arg1;
                                    
                                    if (r8_4 != 0)
                                    {
                                        int32_t rdx_6 = *(arg1 + 0xc);
                                        
                                        if ((arg1[1] + 4) <= rdx_6)
                                        {
                                            arg1[1] += 4;
                                            int32_t r10_2 = arg1[1];
                                            int32_t r9_2 = arg1[2];
                                            int32_t rax_20 = *((r10_2 - 4) + r8_4);
                                            int32_t var_3b4_1 = rax_20;
                                            
                                            if (r9_2 != 0)
                                                var_3b4_1 = _bswap(rax_20);
                                            
                                            if ((r10_2 + 4) <= rdx_6)
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_3 = arg1[1];
                                                int32_t rax_24 = *((r10_3 - 4) + r8_4);
                                                int32_t var_3b8_1 = rax_24;
                                                
                                                if (r9_2 != 0)
                                                    var_3b8_1 = _bswap(rax_24);
                                                
                                                if ((r10_3 + 4) <= rdx_6)
                                                {
                                                    arg1[1] += 4;
                                                    int32_t rax_27 = arg1[1];
                                                    
                                                    if ((rax_27 + 4) <= rdx_6)
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r10_4 = arg1[1];
                                                        int32_t rax_30 = *((r10_4 - 4) + r8_4);
                                                        int32_t var_3b0_1 = rax_30;
                                                        
                                                        if (r9_2 != 0)
                                                            var_3b0_1 = _bswap(rax_30);
                                                        
                                                        if ((r10_4 + 4) <= rdx_6)
                                                        {
                                                            arg1[1] += 4;
                                                            
                                                            if ((arg1[1] + 4) <= rdx_6)
                                                            {
                                                                arg1[1] += 4;
                                                                void* rax_35 = sub_180001a00(&data_1800306f0);
                                                                
                                                                if (rax_35 != 0)
                                                                {
                                                                    char* rdx_7 = &var_358;
                                                                    char i;
                                                                    
                                                                    do
                                                                    {
                                                                        i = *rdx_7;
                                                                        rdx_7[(rax_35 - &var_358)] = i;
                                                                        rdx_7 = &rdx_7[1];
                                                                    } while (i != 0);
                                                                    void* rcx_6 = &var_248;
                                                                    char i_1;
                                                                    
                                                                    do
                                                                    {
                                                                        i_1 = *rcx_6;
                                                                        *((rcx_6 + (rax_35 - &var_248)) + 0x104) = i_1;
                                                                        rcx_6 += 1;
                                                                    } while (i_1 != 0);
                                                                    void* rcx_7 = &var_138;
                                                                    char i_2;
                                                                    
                                                                    do
                                                                    {
                                                                        i_2 = *rcx_7;
                                                                        *((rcx_7 + (rax_35 - &var_138)) + 0x208) = i_2;
                                                                        rcx_7 += 1;
                                                                    } while (i_2 != 0);
                                                                    *(rax_35 + 0x520) = var_390;
                                                                    uint128_t zmm0_1 = var_370;
                                                                    *(rax_35 + 0x514) = rax_3;
                                                                    *(rax_35 + 0x538) = zmm0_1;
                                                                    *(rax_35 + 0x528) = *var_38c_1[4];
                                                                    *(rax_35 + 0x52c) = var_380;
                                                                    *(rax_35 + 0x534) = *var_37c_1[4];
                                                                }
                                                                
                                                                uint64_t r8_8 = (r10_2 + var_3b8_1);
                                                                int32_t rbx_2 = arg1[1];
                                                                
                                                                if (var_3b8_1 == 0)
                                                                    r8_8 = var_3b8_1;
                                                                
                                                                int64_t r8_9 = sub_180014820(arg1, (arg2 + 1), r8_8, var_3b4_1);
                                                                int32_t r9_5 = (rax_27 + var_3b0_1);
                                                                
                                                                if (var_3b0_1 == 0)
                                                                    r9_5 = var_3b0_1;
                                                                
                                                                sub_180014c60(arg1, rax_35, r8_9, r9_5);
                                                                arg1[1] = rbx_2;
                                                                int32_t rbx_4 = (var_3ac_1 + 1);
                                                                var_3ac_1 = rbx_4;
                                                                
                                                                if (rbx_4 >= arg4)
                                                                    goto label_180014c24;
                                                                
                                                                continue;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                
                result = 0;
                break;
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_3e8));
    return result;
}

int64_t sub_180014c60(int64_t* arg1, void* arg2, int64_t arg3, int32_t arg4)
{
    if ((arg4 != 0 && (arg4 >= 0x64 && arg4 < *(arg1 + 0xc))))
    {
        arg1[1] = arg4;
        data_180030748 += 1;
        int64_t r9 = *arg1;
        
        if (r9 == 0)
            return 0;
        
        int32_t r10_1 = *(arg1 + 0xc);
        uint64_t r8_1 = (arg1[1] + 4);
        
        if (r8_1 > r10_1)
            return 0;
        
        int32_t r11_1 = arg1[2];
        arg1[1] = r8_1;
        int32_t rdx = *((r8_1 - 4) + r9);
        
        if (r11_1 != 0)
            rdx = _bswap(rdx);
        
        if ((r8_1 + 4) > r10_1)
            return 0;
        
        arg1[1] += 4;
        int32_t rax_5 = *((arg1[1] - 4) + r9);
        
        if (r11_1 != 0)
            rax_5 = _bswap(rax_5);
        
        *(arg2 + 0x518) = rdx;
        int32_t r9_1 = (r8_1 + rax_5);
        int32_t rbx_1 = arg1[1];
        
        if (rax_5 == 0)
            r9_1 = rax_5;
        
        sub_180014d40(arg1, arg2, r8_1, r9_1, rdx);
        arg1[1] = rbx_1;
    }
    
    return 1;
}

uint64_t sub_180014d40(int64_t* arg1, int64_t arg2, int64_t arg3, int32_t arg4, int32_t arg5)
{
    void var_278;
    int64_t rax_1 = (__security_cookie ^ &var_278);
    uint64_t result;
    
    if (arg4 == 0)
        result = (arg4 + 1);
    else if (arg4 < 0x64)
        result = 1;
    else
    {
        int32_t rsi_1 = *(arg1 + 0xc);
        
        if (arg4 >= rsi_1)
            result = 1;
        else
        {
            arg1[1] = arg4;
            
            if (arg5 != 3)
                result = 1;
            else
            {
                void var_248;
                memset(&var_248, 0, 0x104);
                int64_t rdx = *arg1;
                
                if ((rdx == 0 || (arg4 + 4) > rsi_1))
                    result = 0;
                else
                {
                    int32_t r8 = arg1[2];
                    arg1[1] = (arg4 + 4);
                    int32_t r10_1 = *(arg4 + rdx);
                    
                    if (r8 != 0)
                        r10_1 = _bswap(r10_1);
                    
                    if ((arg4 + 8) > rsi_1)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t r9 = arg1[1];
                        int32_t rbx_2 = *((r9 - 4) + rdx);
                        
                        if (r8 != 0)
                            rbx_2 = _bswap(rbx_2);
                        
                        if ((r9 + 4) > rsi_1)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t r9_1 = *((arg1[1] - 4) + rdx);
                            
                            if (r8 != 0)
                                r9_1 = _bswap(r9_1);
                            
                            void var_138;
                            sub_180005050(arg1, r10_1, &var_138);
                            sub_180005050(arg1, rbx_2, &var_248);
                            sub_180005050(arg1, r9_1, &var_138);
                            int64_t r9_2 = *arg1;
                            
                            if (r9_2 == 0)
                                result = 0;
                            else
                            {
                                int32_t rcx_2 = *(arg1 + 0xc);
                                
                                if ((arg1[1] + 4) > rcx_2)
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t r10_2 = arg1[1];
                                    
                                    if ((r10_2 + 4) > rcx_2)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        uint64_t r8_4 = *((arg1[1] - 4) + r9_2);
                                        
                                        if (arg1[2] != 0)
                                            r8_4 = _bswap(r8_4);
                                        
                                        void* rcx_3 = &var_248;
                                        char i;
                                        
                                        do
                                        {
                                            i = *rcx_3;
                                            *(((arg2 - &var_248) + rcx_3) + 0x30c) = i;
                                            rcx_3 += 1;
                                        } while (i != 0);
                                        int32_t rbx_3 = arg1[1];
                                        int32_t r9_5 = (r10_2 + r8_4);
                                        
                                        if (r8_4 == 0)
                                            r9_5 = r8_4;
                                        
                                        sub_180009870(arg1, arg2, r8_4, r9_5);
                                        arg1[1] = rbx_3;
                                        result = 1;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_278));
    return result;
}

uint64_t sub_180014f10(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_158;
    int64_t rax_1 = (__security_cookie ^ &var_158);
    uint64_t result;
    
    if (arg3 != 0)
    {
        int32_t r9_1 = 0;
        arg1[1] = arg3;
        void var_138;
        
        if (arg2 == 0)
        {
        label_180014fc7:
            int32_t rsi_1 = 0;
            arg1[1] = arg3;
            
            if (arg2 == 0)
            {
            label_1800150b5:
                result = 1;
            }
            else
            {
                while (true)
                {
                    int64_t r9_2 = *arg1;
                    
                    if (r9_2 != 0)
                    {
                        int32_t i = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= i)
                        {
                            arg1[1] += 4;
                            
                            if ((arg1[1] + 4) <= i)
                            {
                                arg1[1] += 4;
                                int32_t r14_1 = arg1[1];
                                int32_t r10_2 = arg1[2];
                                uint64_t rdx_2 = *((r14_1 - 4) + r9_2);
                                
                                if (r10_2 != 0)
                                    rdx_2 = _bswap(rdx_2);
                                
                                if ((r14_1 + 4) <= i)
                                {
                                    arg1[1] += 4;
                                    int32_t rdi_1 = arg1[1];
                                    int32_t r11_1 = *((rdi_1 - 4) + r9_2);
                                    
                                    if (r10_2 != 0)
                                        r11_1 = _bswap(r11_1);
                                    
                                    if (rdx_2 > 0x64)
                                    {
                                        arg1[1] = rdx_2;
                                        rdx_2 = 0;
                                        
                                        while ((arg1[1] + 1) <= i)
                                        {
                                            arg1[1] += 1;
                                            rdx_2 += 1;
                                            char rax_19 = *((arg1[1] - 1) + r9_2);
                                            
                                            if (rax_19 == 0)
                                            {
                                                if (rdx_2 < 0x104)
                                                    *(&var_138 + rdx_2) = rax_19;
                                                
                                                arg1[1] = rdi_1;
                                                break;
                                            }
                                        }
                                    }
                                    
                                    int32_t rdi_2 = arg1[1];
                                    int32_t r8_2 = (r14_1 + r11_1);
                                    
                                    if (r11_1 == 0)
                                        r8_2 = r11_1;
                                    
                                    if (sub_1800150f0(arg1, rdx_2, r8_2) != 0)
                                    {
                                        rsi_1 += 1;
                                        arg1[1] = rdi_2;
                                        
                                        if (rsi_1 >= arg2)
                                            goto label_1800150b5;
                                        
                                        continue;
                                    }
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
        else
        {
            while (true)
            {
                int64_t rdx = *arg1;
                
                if (rdx != 0)
                {
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= r8)
                    {
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r10_1 = arg1[1];
                            int32_t rdx_1 = *((r10_1 - 4) + rdx);
                            
                            if (arg1[2] != 0)
                                rdx_1 = _bswap(rdx_1);
                            
                            if ((r10_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                sub_180005050(arg1, rdx_1, &var_138);
                                r9_1 += 1;
                                
                                if (r9_1 >= arg2)
                                    goto label_180014fc7;
                                
                                continue;
                            }
                        }
                    }
                }
                
                result = 0;
                break;
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_158));
    return result;
}

uint64_t sub_1800150f0(int64_t* arg1, int64_t arg2, int32_t arg3)
{
    void var_1f8;
    int64_t rax_1 = (__security_cookie ^ &var_1f8);
    uint64_t result;
    
    if (arg3 != 0)
    {
        int64_t rdx = *arg1;
        arg1[1] = arg3;
        int32_t r9_1;
        
        if (rdx != 0)
            r9_1 = *(arg1 + 0xc);
        
        if ((rdx == 0 || (arg3 + 4) > r9_1))
            result = 0;
        else
        {
            int32_t r10_1 = arg1[2];
            arg1[1] = (arg3 + 4);
            int32_t r14_1 = *(arg3 + rdx);
            
            if (r10_1 != 0)
                r14_1 = _bswap(r14_1);
            
            if ((arg3 + 8) > r9_1)
                result = 0;
            else
            {
                arg1[1] += 4;
                int32_t rdi_1 = *((arg1[1] - 4) + rdx);
                
                if (r10_1 != 0)
                    rdi_1 = _bswap(rdi_1);
                
                int128_t var_188;
                __builtin_memcpy(&var_188, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
                
                if (sub_18001d8d0(arg1, &var_188) == 0)
                    result = 0;
                else
                {
                    int64_t rdx_2 = *arg1;
                    
                    if (rdx_2 == 0)
                        result = 0;
                    else
                    {
                        int32_t r8_1 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) > r8_1)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t r11_1 = arg1[1];
                            int32_t r9_2 = arg1[2];
                            int32_t r10_2 = *((r11_1 - 4) + rdx_2);
                            
                            if (r9_2 != 0)
                                r10_2 = _bswap(r10_2);
                            
                            if ((r11_1 + 4) > r8_1)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r11_2 = arg1[1];
                                int32_t r12_1 = *((r11_2 - 4) + rdx_2);
                                
                                if (r9_2 != 0)
                                    r12_1 = _bswap(r12_1);
                                
                                int32_t var_1c8_1;
                                int32_t r11_3;
                                
                                if ((r11_2 + 4) <= r8_1)
                                {
                                    arg1[1] += 4;
                                    r11_3 = arg1[1];
                                    int32_t rax_14 = *((r11_3 - 4) + rdx_2);
                                    var_1c8_1 = rax_14;
                                    
                                    if (r9_2 != 0)
                                        var_1c8_1 = _bswap(rax_14);
                                }
                                
                                if (((r11_2 + 4) > r8_1 || (r11_3 + 4) > r8_1))
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t r11_4 = arg1[1];
                                    int32_t r15_1 = *((r11_4 - 4) + rdx_2);
                                    
                                    if (r9_2 != 0)
                                        r15_1 = _bswap(r15_1);
                                    
                                    if ((r11_4 + 4) > r8_1)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r11_5 = arg1[1];
                                        int32_t rax_20 = *((r11_5 - 4) + rdx_2);
                                        int32_t var_1c4_1 = rax_20;
                                        
                                        if (r9_2 != 0)
                                            var_1c4_1 = _bswap(rax_20);
                                        
                                        if ((r11_5 + 4) > r8_1)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] += 4;
                                            int32_t rax_23 = arg1[1];
                                            
                                            if ((rax_23 + 4) > r8_1)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r11_6 = arg1[1];
                                                int32_t rax_26 = *((r11_6 - 4) + rdx_2);
                                                int32_t var_1c0_1 = rax_26;
                                                
                                                if (r9_2 != 0)
                                                    var_1c0_1 = _bswap(rax_26);
                                                
                                                if ((r11_6 + 4) > r8_1)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r11_7 = arg1[1];
                                                    int32_t r13_1 = *((r11_7 - 4) + rdx_2);
                                                    
                                                    if (r9_2 != 0)
                                                        r13_1 = _bswap(r13_1);
                                                    
                                                    if ((r11_7 + 4) > r8_1)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r11_8 = arg1[1];
                                                        int32_t rsi_1 = *((r11_8 - 4) + rdx_2);
                                                        
                                                        if (r9_2 != 0)
                                                            rsi_1 = _bswap(rsi_1);
                                                        
                                                        if ((r11_8 + 4) > r8_1)
                                                        {
                                                        labelid_c:
                                                            result = 0;
                                                        }
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            
                                                            if ((arg1[1] + 4) > r8_1)
                                                            {
                                                            labelid_c:
                                                                result = 0;
                                                            }
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                void var_148;
                                                                sub_180005050(arg1, r10_2, &var_148);
                                                                int32_t r8_4 = ((arg3 + 4) + rdi_1);
                                                                
                                                                if (rdi_1 == 0)
                                                                    r8_4 = rdi_1;
                                                                
                                                                int32_t rcx_2 = (r11_2 + var_1c8_1);
                                                                
                                                                if (var_1c8_1 == 0)
                                                                    rcx_2 = var_1c8_1;
                                                                
                                                                int32_t rdx_5 = (r11_4 + var_1c4_1);
                                                                
                                                                if (var_1c4_1 == 0)
                                                                    rdx_5 = var_1c4_1;
                                                                
                                                                int32_t rdx_7 = (rax_23 + var_1c0_1);
                                                                
                                                                if (var_1c0_1 == 0)
                                                                    rdx_7 = var_1c0_1;
                                                                
                                                                int32_t rax_39 = (r11_7 + rsi_1);
                                                                
                                                                if (rsi_1 == 0)
                                                                    rax_39 = rsi_1;
                                                                
                                                                int32_t rdi_2 = 0;
                                                                
                                                                if (r8_4 != 0)
                                                                {
                                                                    uint32_t r14_2 = (r14_1 >> 4);
                                                                    int32_t rsi_2 = 0;
                                                                    arg1[1] = r8_4;
                                                                    
                                                                    if (r14_2 != 0)
                                                                    {
                                                                        do
                                                                        {
                                                                            __builtin_memcpy(&var_188, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
                                                                            
                                                                            if (sub_18001d8d0(arg1, &var_188) == 0)
                                                                                goto label_180015679_2;
                                                                            
                                                                            rsi_2 += 1;
                                                                        } while (rsi_2 < r14_2);
                                                                    }
                                                                }
                                                                
                                                                if (rcx_2 != 0)
                                                                {
                                                                    arg1[1] = rcx_2;
                                                                    int32_t r9_3 = 0;
                                                                    
                                                                    if (r12_1 != 0)
                                                                    {
                                                                        do
                                                                        {
                                                                            int64_t rdx_9 = *arg1;
                                                                            
                                                                            if (rdx_9 == 0)
                                                                                goto label_180015679_2;
                                                                            
                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                goto label_180015679_2;
                                                                            
                                                                            arg1[1] += 4;
                                                                            int32_t rdx_10 = *((arg1[1] - 4) + rdx_9);
                                                                            
                                                                            if (arg1[2] != 0)
                                                                                rdx_10 = _bswap(rdx_10);
                                                                            
                                                                            sub_180005050(arg1, rdx_10, &var_148);
                                                                            r9_3 += 1;
                                                                        } while (r9_3 < r12_1);
                                                                    }
                                                                }
                                                                
                                                                int32_t var_1b8;
                                                                
                                                                if (rdx_5 != 0)
                                                                {
                                                                    arg1[1] = rdx_5;
                                                                    int32_t r10_3 = 0;
                                                                    
                                                                    if (r15_1 != 0)
                                                                    {
                                                                        do
                                                                        {
                                                                            int64_t var_1b4_1 = 0;
                                                                            var_1b8 = 0;
                                                                            
                                                                            if (sub_18001d5c0(arg1, &var_1b8) == 0)
                                                                                goto label_180015679_2;
                                                                            
                                                                            r10_3 += 1;
                                                                        } while (r10_3 < r15_1);
                                                                    }
                                                                }
                                                                
                                                                if (rdx_7 == 0)
                                                                {
                                                                label_1800155d3:
                                                                    
                                                                    if (rax_39 != 0)
                                                                    {
                                                                        arg1[1] = rax_39;
                                                                        
                                                                        if (r13_1 != 0)
                                                                        {
                                                                            do
                                                                            {
                                                                                int64_t var_1b4_2 = 0;
                                                                                var_1b8 = 0;
                                                                                int64_t var_19c_1 = 0;
                                                                                int32_t var_1a0 = 0;
                                                                                
                                                                                if (sub_18001d5c0(arg1, &var_1b8) == 0)
                                                                                    goto label_180015679_2;
                                                                                
                                                                                if (sub_18001d5c0(arg1, &var_1a0) == 0)
                                                                                    goto label_180015679_2;
                                                                                
                                                                                rdi_2 += 1;
                                                                            } while (rdi_2 < r13_1);
                                                                        }
                                                                    }
                                                                    
                                                                    result = 1;
                                                                }
                                                                else
                                                                {
                                                                    int64_t r14_3 = *arg1;
                                                                    arg1[1] = rdx_7;
                                                                    
                                                                    if (r14_3 == 0)
                                                                    {
                                                                    label_180015679:
                                                                        result = 0;
                                                                    }
                                                                    else
                                                                    {
                                                                        int32_t r8_6 = *(arg1 + 0xc);
                                                                        
                                                                        if ((rdx_7 + 4) > r8_6)
                                                                        {
                                                                        label_180015679_1:
                                                                            result = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            int32_t r15_2 = arg1[2];
                                                                            arg1[1] = (rdx_7 + 4);
                                                                            int32_t rsi_3 = *(rdx_7 + r14_3);
                                                                            
                                                                            if (r15_2 != 0)
                                                                                rsi_3 = _bswap(rsi_3);
                                                                            
                                                                            if ((rdx_7 + 8) <= r8_6)
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t r9_4 = 0;
                                                                                int32_t r10_4 = 0;
                                                                                
                                                                                if (rsi_3 != 0)
                                                                                {
                                                                                    do
                                                                                    {
                                                                                        if ((arg1[1] + 4) > r8_6)
                                                                                            goto label_180015679_2;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                        int32_t r11_9 = arg1[1];
                                                                                        int32_t rdx_14 = *((r11_9 - 4) + r14_3);
                                                                                        
                                                                                        if (r15_2 != 0)
                                                                                            rdx_14 = _bswap(rdx_14);
                                                                                        
                                                                                        if ((r11_9 + 4) > r8_6)
                                                                                            goto label_180015679_2;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                        r9_4 += rdx_14;
                                                                                        r10_4 += 1;
                                                                                    } while (r10_4 < rsi_3);
                                                                                }
                                                                                
                                                                                int32_t rcx_6 = 0;
                                                                                
                                                                                if (r9_4 > 0)
                                                                                {
                                                                                    do
                                                                                    {
                                                                                        if ((arg1[1] + 4) > r8_6)
                                                                                            goto label_180015679_2;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                        
                                                                                        if ((arg1[1] + 4) > r8_6)
                                                                                            goto label_180015679_2;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                        rcx_6 += 1;
                                                                                    } while (rcx_6 < r9_4);
                                                                                }
                                                                                
                                                                                goto label_1800155d3;
                                                                            }
                                                                            
                                                                        label_180015679_2:
                                                                            result = 0;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_1f8));
    return result;
}

int64_t CvtStSymsToSz::CvtStSymsToSz(int64_t arg1)
{
    __builtin_memset(arg1, 0, 0x14);
    return arg1;
}

uint64_t sub_1800156b0(int64_t* arg1, void* arg2)
{
    void var_3f8;
    int64_t rax_1 = (__security_cookie ^ &var_3f8);
    int64_t r10 = *arg1;
    uint64_t result;
    
    if (r10 == 0)
        result = 0;
    else
    {
        int32_t rcx = *(arg1 + 0xc);
        int32_t r8_2 = (arg1[1] + 4);
        
        if (r8_2 > rcx)
            result = 0;
        else
        {
            arg1[1] = r8_2;
            
            if ((r8_2 + 4) > rcx)
                result = 0;
            else
            {
                arg1[1] = (r8_2 + 4);
                
                if ((r8_2 + 8) > rcx)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t rdx = arg1[1];
                    
                    if ((rdx + 4) > rcx)
                        result = 0;
                    else
                    {
                        arg1[1] = (rdx + 4);
                        int32_t rax_6 = *(arg2 + 8);
                        
                        if (rax_6 == 0)
                            result = 0;
                        else
                        {
                            arg1[1] = rax_6;
                            int32_t r8_4 = *(arg2 + 0x10);
                            
                            if ((rax_6 + 4) > rcx)
                                result = 0;
                            else
                            {
                                arg1[1] = (rax_6 + 4);
                                
                                if ((rax_6 + 8) > rcx)
                                    result = 0;
                                else
                                {
                                    arg1[1] = (rax_6 + 8);
                                    
                                    if ((rax_6 + 0xc) > rcx)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] = (rax_6 + 0xc);
                                        
                                        if ((rax_6 + 0x10) > rcx)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (rax_6 + 0x10);
                                            
                                            if ((rax_6 + 0x14) > rcx)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] = (rax_6 + 0x14);
                                                
                                                if ((rax_6 + 0x18) > rcx)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (rax_6 + 0x18);
                                                    
                                                    if ((rax_6 + 0x1c) > rcx)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] = (rax_6 + 0x1c);
                                                        
                                                        if ((rax_6 + 0x20) > rcx)
                                                            result = 0;
                                                        else
                                                        {
                                                            int32_t rax_13 = (rax_6 + 0x20);
                                                            arg1[1] = rax_13;
                                                            int32_t rdx_8 = 0;
                                                            
                                                            if ((r8_4 - 4) <= 0)
                                                            {
                                                            label_180015810:
                                                                int32_t rdi_1 = *(arg2 + 0x1c);
                                                                void lpMultiByteStr;
                                                                
                                                                if (rax_13 >= rdi_1)
                                                                {
                                                                label_1800158bf:
                                                                    int32_t rcx_3 = *(arg2 + 0x1c);
                                                                    int32_t rdi_2 = 0;
                                                                    int32_t rax_26 = arg1[1];
                                                                    int32_t rsi_1 = 0;
                                                                    
                                                                    if (rcx_3 != 0)
                                                                        rax_26 = rcx_3;
                                                                    
                                                                    int32_t result_1 = 1;
                                                                    arg1[1] = rax_26;
                                                                    int32_t rcx_4 = data_1800306f0;
                                                                    int64_t s;
                                                                    __builtin_memset(&s, 0, 0x50);
                                                                    
                                                                    if (rcx_4 == 0x30b)
                                                                    {
                                                                        int32_t rdx_10 = *(arg2 + 0x1c);
                                                                        
                                                                        if (rdx_10 == 0)
                                                                        {
                                                                        labelid_4:
                                                                            result_1 = 0;
                                                                        }
                                                                        else if (sub_1800160e0(arg1, rdx_10, &s) != 0)
                                                                        {
                                                                        label_180015aa9:
                                                                            int32_t rax_34 = *s[4];
                                                                            
                                                                            if (rax_34 != 0)
                                                                            {
                                                                                int32_t rsi_2 = s;
                                                                                arg1[1] = rax_34;
                                                                                
                                                                                if (rsi_2 != 0)
                                                                                {
                                                                                    do
                                                                                    {
                                                                                        int64_t r10_1 = *arg1;
                                                                                        
                                                                                        if (r10_1 == 0)
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        int32_t r8_14 = *(arg1 + 0xc);
                                                                                        
                                                                                        if ((arg1[1] + 4) > r8_14)
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                        int32_t r9_2 = arg1[1];
                                                                                        int32_t r11_1 = arg1[2];
                                                                                        int32_t rdx_17 = *((r9_2 - 4) + r10_1);
                                                                                        
                                                                                        if (r11_1 != 0)
                                                                                            rdx_17 = _bswap(rdx_17);
                                                                                        
                                                                                        if ((r9_2 + 4) > r8_14)
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        arg1[1] = (r9_2 + 4);
                                                                                        int32_t rax_39 = *(r9_2 + r10_1);
                                                                                        
                                                                                        if (r11_1 != 0)
                                                                                            rax_39 = _bswap(rax_39);
                                                                                        
                                                                                        if (r11_1 != 0)
                                                                                            rdx_17 = rax_39;
                                                                                        
                                                                                        if ((r9_2 + 8) > r8_14)
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                        int32_t rax_42 = (arg1[1] + 4);
                                                                                        
                                                                                        if (rax_42 > r8_14)
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        arg1[1] = rax_42;
                                                                                        
                                                                                        if ((rax_42 + 4) > r8_14)
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                        int32_t rax_45 = (arg1[1] + 4);
                                                                                        
                                                                                        if (rax_45 > r8_14)
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        arg1[1] = rax_45;
                                                                                        sub_180005050(arg1, rdx_17, &lpMultiByteStr);
                                                                                        rdi_2 += 1;
                                                                                    } while (rdi_2 < rsi_2);
                                                                                }
                                                                            }
                                                                            
                                                                            int64_t var_3c0;
                                                                            int32_t rax_46 = *var_3c0[4];
                                                                            
                                                                            if (rax_46 != 0)
                                                                            {
                                                                                int32_t rdx_18 = var_3c0;
                                                                                int32_t rcx_15 = 0;
                                                                                arg1[1] = rax_46;
                                                                                
                                                                                if (rdx_18 != 0)
                                                                                {
                                                                                    do
                                                                                    {
                                                                                        if (*arg1 == 0)
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        int32_t rax_48 = (arg1[1] + 2);
                                                                                        
                                                                                        if (rax_48 > *(arg1 + 0xc))
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        rcx_15 += 1;
                                                                                        arg1[1] = rax_48;
                                                                                    } while (rcx_15 < rdx_18);
                                                                                }
                                                                            }
                                                                            
                                                                            int64_t var_3b8;
                                                                            int32_t rax_49 = *var_3b8[4];
                                                                            int32_t rsi_3;
                                                                            int32_t r14_1;
                                                                            
                                                                            if (rax_49 != 0)
                                                                            {
                                                                                rsi_3 = 0;
                                                                                arg1[1] = rax_49;
                                                                                r14_1 = var_3b8;
                                                                            }
                                                                            
                                                                            void var_268;
                                                                            
                                                                            if ((rax_49 == 0 || r14_1 == 0))
                                                                            {
                                                                            label_180015cf4:
                                                                                int64_t var_3b0;
                                                                                int32_t rax_64 = *var_3b0[4];
                                                                                
                                                                                if (rax_64 == 0)
                                                                                {
                                                                                label_180015fdf:
                                                                                    rcx_4 = data_1800306f0;
                                                                                label_180015fe5:
                                                                                    int64_t var_3a0;
                                                                                    rdi_2 = var_3a0;
                                                                                    rsi_1 = *var_3a0[4];
                                                                                label_180015ff7:
                                                                                    
                                                                                    if (((rcx_4 != 0x362 && rcx_4 != 0x36d) && ((rcx_4 - 0x3b2) > 0x2c || !((TEST_BITQ(0x1080481c0101, (rcx_4 - 0x3b2)))))))
                                                                                        goto label_180016047;
                                                                                    
                                                                                    int64_t var_3a8;
                                                                                    
                                                                                    if (sub_1800198f0(arg1, var_3a8, *var_3a8[4]) == 0)
                                                                                    {
                                                                                    labelid_4:
                                                                                        result_1 = 0;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        rcx_4 = data_1800306f0;
                                                                                    label_180016047:
                                                                                        int32_t rax_103;
                                                                                        
                                                                                        if (((rcx_4 - 0x3b2) > 0x2c || !((TEST_BITQ(0x1080481c0101, (rcx_4 - 0x3b2))))))
                                                                                            rax_103 = sub_1800190d0(arg1, rdi_2, rsi_1);
                                                                                        else
                                                                                            rax_103 = sub_180019c40(arg1, rdi_2, rsi_1);
                                                                                        
                                                                                        int64_t var_398;
                                                                                        
                                                                                        if (rax_103 == 0)
                                                                                        {
                                                                                        labelid_4:
                                                                                            result_1 = 0;
                                                                                        }
                                                                                        else if (sub_180019f30(arg1, var_398, *var_398[4]) == 0)
                                                                                        {
                                                                                        labelid_4:
                                                                                            result_1 = 0;
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            int64_t var_390;
                                                                                            int32_t rax_105;
                                                                                            int64_t rdx_33;
                                                                                            rax_105 = sub_18001c9d0(arg1, var_390, *var_390[4]);
                                                                                            int64_t var_388;
                                                                                            
                                                                                            if (rax_105 == 0)
                                                                                            {
                                                                                            labelid_4:
                                                                                                result_1 = 0;
                                                                                            }
                                                                                            else if (sub_18001ac20(arg1, rdx_33, *var_388[4]) == 0)
                                                                                            {
                                                                                            labelid_4:
                                                                                                result_1 = 0;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    int32_t r12_1 = var_3b0;
                                                                                    arg1[1] = rax_64;
                                                                                    int32_t rax_65;
                                                                                    
                                                                                    if (r12_1 != 0)
                                                                                        rax_65 = sub_180001fd0(&data_1800306f0, r12_1);
                                                                                    
                                                                                    if ((r12_1 == 0 || rax_65 != 0))
                                                                                    {
                                                                                        int32_t r15_1 = 0;
                                                                                        
                                                                                        if (r12_1 == 0)
                                                                                            goto label_180015fdf;
                                                                                        
                                                                                        do
                                                                                        {
                                                                                            memset(&lpMultiByteStr, 0, 0x104);
                                                                                            int64_t r9_7 = *arg1;
                                                                                            int32_t rdi_5 = 0;
                                                                                            
                                                                                            if (r9_7 == 0)
                                                                                                goto label_1800160a4_2;
                                                                                            
                                                                                            int32_t rdx_22 = *(arg1 + 0xc);
                                                                                            
                                                                                            if ((arg1[1] + 4) > rdx_22)
                                                                                                goto label_1800160a4_2;
                                                                                            
                                                                                            arg1[1] += 4;
                                                                                            int32_t r10_3 = arg1[1];
                                                                                            int32_t r8_20 = arg1[2];
                                                                                            int32_t r11_3 = *((r10_3 - 4) + r9_7);
                                                                                            
                                                                                            if (r8_20 != 0)
                                                                                                r11_3 = _bswap(r11_3);
                                                                                            
                                                                                            if ((r10_3 + 4) > rdx_22)
                                                                                                goto label_1800160a4_2;
                                                                                            
                                                                                            arg1[1] = (r10_3 + 4);
                                                                                            int32_t rax_70 = *(r10_3 + r9_7);
                                                                                            
                                                                                            if (r8_20 != 0)
                                                                                                rax_70 = _bswap(rax_70);
                                                                                            
                                                                                            if (r8_20 != 0)
                                                                                                r11_3 = rax_70;
                                                                                            
                                                                                            if ((r10_3 + 8) > rdx_22)
                                                                                                goto label_1800160a4_2;
                                                                                            
                                                                                            arg1[1] += 4;
                                                                                            int32_t r10_5 = arg1[1];
                                                                                            int32_t r14_2 = *((r10_5 - 4) + r9_7);
                                                                                            
                                                                                            if (r8_20 != 0)
                                                                                                r14_2 = _bswap(r14_2);
                                                                                            
                                                                                            if ((r10_5 + 4) > rdx_22)
                                                                                                goto label_1800160a4_2;
                                                                                            
                                                                                            arg1[1] = (r10_5 + 4);
                                                                                            int32_t rax_74 = *(r10_5 + r9_7);
                                                                                            
                                                                                            if (r8_20 != 0)
                                                                                                rax_74 = _bswap(rax_74);
                                                                                            
                                                                                            if (r8_20 != 0)
                                                                                                r14_2 = rax_74;
                                                                                            
                                                                                            if ((r10_5 + 8) > rdx_22)
                                                                                                goto label_1800160a4_2;
                                                                                            
                                                                                            arg1[1] += 4;
                                                                                            int32_t r10_7 = arg1[1];
                                                                                            int32_t rsi_4 = *((r10_7 - 4) + r9_7);
                                                                                            
                                                                                            if (r8_20 != 0)
                                                                                                rsi_4 = _bswap(rsi_4);
                                                                                            
                                                                                            if ((r10_7 + 4) > rdx_22)
                                                                                                goto label_1800160a4_2;
                                                                                            
                                                                                            arg1[1] = (r10_7 + 4);
                                                                                            int32_t rax_78 = *(r10_7 + r9_7);
                                                                                            
                                                                                            if (r8_20 != 0)
                                                                                                rax_78 = _bswap(rax_78);
                                                                                            
                                                                                            if (r8_20 != 0)
                                                                                                rsi_4 = rax_78;
                                                                                            
                                                                                            int32_t rax_79 = data_1800306f0;
                                                                                            
                                                                                            if (rax_79 == 0x30b)
                                                                                            {
                                                                                                if ((r10_7 + 8) > rdx_22)
                                                                                                    goto label_1800160a4_2;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                int32_t r10_9 = arg1[1];
                                                                                                rdi_5 = *((r10_9 - 4) + r9_7);
                                                                                                
                                                                                                if (r8_20 != 0)
                                                                                                    rdi_5 = _bswap(rdi_5);
                                                                                                
                                                                                                if ((r10_9 + 4) > rdx_22)
                                                                                                    goto label_1800160a4_2;
                                                                                                
                                                                                                arg1[1] = (r10_9 + 4);
                                                                                                int32_t rax_83 = *(r10_9 + r9_7);
                                                                                                
                                                                                                if (r8_20 != 0)
                                                                                                    rax_83 = _bswap(rax_83);
                                                                                                
                                                                                                if (r8_20 != 0)
                                                                                                    rdi_5 = rax_83;
                                                                                                
                                                                                                if ((r10_9 + 8) > rdx_22)
                                                                                                    goto label_1800160a4_2;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                int32_t rax_86 = (arg1[1] + 4);
                                                                                                
                                                                                                if (rax_86 > rdx_22)
                                                                                                    goto label_1800160a4_2;
                                                                                                
                                                                                                arg1[1] = rax_86;
                                                                                                
                                                                                                if ((rax_86 + 4) > rdx_22)
                                                                                                    goto label_1800160a4_2;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                int32_t rax_89 = (arg1[1] + 4);
                                                                                                
                                                                                                if (rax_89 > rdx_22)
                                                                                                    goto label_1800160a4_2;
                                                                                                
                                                                                                arg1[1] = rax_89;
                                                                                                
                                                                                                if ((rax_89 + 4) > rdx_22)
                                                                                                    goto label_1800160a4_2;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                int32_t rax_92 = (arg1[1] + 4);
                                                                                                
                                                                                                if (rax_92 > rdx_22)
                                                                                                    goto label_1800160a4_2;
                                                                                                
                                                                                                arg1[1] = rax_92;
                                                                                            }
                                                                                            else if (rax_79 > 0x38f)
                                                                                            {
                                                                                                if ((r10_7 + 8) > rdx_22)
                                                                                                    goto label_1800160a4_2;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                int32_t r10_11 = arg1[1];
                                                                                                rdi_5 = *((r10_11 - 4) + r9_7);
                                                                                                
                                                                                                if (r8_20 != 0)
                                                                                                    rdi_5 = _bswap(rdi_5);
                                                                                                
                                                                                                if ((r10_11 + 4) > rdx_22)
                                                                                                    goto label_1800160a4_2;
                                                                                                
                                                                                                arg1[1] = (r10_11 + 4);
                                                                                                int32_t rax_97 = *(r10_11 + r9_7);
                                                                                                
                                                                                                if (r8_20 != 0)
                                                                                                    rax_97 = _bswap(rax_97);
                                                                                                
                                                                                                if (r8_20 != 0)
                                                                                                    rdi_5 = rax_97;
                                                                                            }
                                                                                            
                                                                                            sub_180005050(arg1, r11_3, &lpMultiByteStr);
                                                                                            sub_180005050(arg1, r14_2, &var_268);
                                                                                            void var_158;
                                                                                            sub_180005050(arg1, rsi_4, &var_158);
                                                                                            rcx_4 = data_1800306f0;
                                                                                            
                                                                                            if ((rcx_4 > 0x38f || rcx_4 == 0x30b))
                                                                                            {
                                                                                                sub_180005050(arg1, rdi_5, &var_158);
                                                                                                rcx_4 = data_1800306f0;
                                                                                            }
                                                                                            
                                                                                            int64_t rdx_27 = data_180030700;
                                                                                            
                                                                                            if (rdx_27 != 0)
                                                                                            {
                                                                                                MultiByteToWideChar(0, MB_PRECOMPOSED, &lpMultiByteStr, 0xffffffff, ((r15_1 * 0x208) + rdx_27), 0xff);
                                                                                                rcx_4 = data_1800306f0;
                                                                                            }
                                                                                            
                                                                                            r15_1 += 1;
                                                                                        } while (r15_1 < r12_1);
                                                                                        
                                                                                        goto label_180015fe5;
                                                                                    }
                                                                                    
                                                                                labelid_4:
                                                                                    result_1 = 0;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                int64_t i = *arg1;
                                                                                
                                                                                while (i != 0)
                                                                                {
                                                                                    int32_t r8_17 = *(arg1 + 0xc);
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_17)
                                                                                        break;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t r9_4 = arg1[1];
                                                                                    int32_t r11_2 = arg1[2];
                                                                                    int32_t r10_2 = *((r9_4 - 4) + i);
                                                                                    
                                                                                    if (r11_2 != 0)
                                                                                        r10_2 = _bswap(r10_2);
                                                                                    
                                                                                    if ((r9_4 + 4) > r8_17)
                                                                                        break;
                                                                                    
                                                                                    arg1[1] = (r9_4 + 4);
                                                                                    int32_t rax_54 = *(r9_4 + i);
                                                                                    
                                                                                    if (r11_2 != 0)
                                                                                        rax_54 = _bswap(rax_54);
                                                                                    
                                                                                    if (r11_2 != 0)
                                                                                        r10_2 = rax_54;
                                                                                    
                                                                                    if ((r9_4 + 8) > r8_17)
                                                                                        break;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t rdi_3 = arg1[1];
                                                                                    int32_t r9_6 = *((rdi_3 - 4) + i);
                                                                                    
                                                                                    if (r11_2 != 0)
                                                                                        r9_6 = _bswap(r9_6);
                                                                                    
                                                                                    if ((rdi_3 + 4) > r8_17)
                                                                                        break;
                                                                                    
                                                                                    arg1[1] = (rdi_3 + 4);
                                                                                    int32_t rax_58 = *(rdi_3 + i);
                                                                                    
                                                                                    if (r11_2 != 0)
                                                                                        rax_58 = _bswap(rax_58);
                                                                                    
                                                                                    if (r11_2 != 0)
                                                                                        r9_6 = rax_58;
                                                                                    
                                                                                    if ((rdi_3 + 8) > r8_17)
                                                                                        break;
                                                                                    
                                                                                    arg1[1] += 4;
                                                                                    int32_t rax_61 = (arg1[1] + 4);
                                                                                    
                                                                                    if (rax_61 > r8_17)
                                                                                        break;
                                                                                    
                                                                                    arg1[1] = rax_61;
                                                                                    sub_180005050(arg1, r10_2, &lpMultiByteStr);
                                                                                    sub_180005050(arg1, r9_6, &var_268);
                                                                                    i = *arg1;
                                                                                    int32_t rcx_17 = 0;
                                                                                    
                                                                                    while (true)
                                                                                    {
                                                                                        if (i == 0)
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                            goto label_1800160a4_2;
                                                                                        
                                                                                        arg1[1] += 4;
                                                                                        rcx_17 += 1;
                                                                                        
                                                                                        if (rcx_17 >= 0xa)
                                                                                        {
                                                                                            rsi_3 += 1;
                                                                                            
                                                                                            if (rsi_3 < r14_1)
                                                                                                break;
                                                                                            
                                                                                            goto label_180015cf4;
                                                                                        }
                                                                                    }
                                                                                }
                                                                                
                                                                            labelid_4:
                                                                                result_1 = 0;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                        labelid_4:
                                                                            result_1 = 0;
                                                                        }
                                                                    }
                                                                    else if (rcx_4 == 0x362)
                                                                    {
                                                                        int32_t rdx_11 = *(arg2 + 0x1c);
                                                                        
                                                                        if (rdx_11 == 0)
                                                                        {
                                                                        labelid_4:
                                                                            result_1 = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            if (sub_1800166c0(arg1, rdx_11, &s) != 0)
                                                                                goto label_180015aa9;
                                                                            
                                                                        labelid_4:
                                                                            result_1 = 0;
                                                                        }
                                                                    }
                                                                    else if (rcx_4 == 0x36d)
                                                                    {
                                                                        int32_t rdx_12 = *(arg2 + 0x1c);
                                                                        
                                                                        if (rdx_12 == 0)
                                                                        {
                                                                        labelid_4:
                                                                            result_1 = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            if (sub_180016cf0(arg1, rdx_12, &s) != 0)
                                                                                goto label_180015aa9;
                                                                            
                                                                        labelid_4:
                                                                            result_1 = 0;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        int32_t rax_31;
                                                                        
                                                                        if (((rcx_4 - 0x38f) <= 0x17 && (TEST_BITD(0x880081, (rcx_4 - 0x38f)))))
                                                                        {
                                                                            int32_t rdx_13 = *(arg2 + 0x1c);
                                                                            
                                                                            if (rdx_13 == 0)
                                                                            {
                                                                            labelid_4:
                                                                                result_1 = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                rax_31 = sub_1800172f0(arg1, rdx_13, &s);
                                                                            label_180015aa1:
                                                                                
                                                                                if (rax_31 != 0)
                                                                                    goto label_180015aa9;
                                                                                
                                                                            labelid_4:
                                                                                result_1 = 0;
                                                                            }
                                                                        }
                                                                        else if (rcx_4 != 0x3b0)
                                                                        {
                                                                            if ((rcx_4 == 0x3b2 || rcx_4 == 0x3ba))
                                                                            {
                                                                                rax_31 = sub_180018190(arg1, *(arg2 + 0x1c), &s);
                                                                                goto label_180015aa1;
                                                                            }
                                                                            
                                                                            if (((rcx_4 - 0x3c4) > 0x1a || !((TEST_BITD(0x4201207, (rcx_4 - 0x3c4))))))
                                                                                goto label_180015ff7;
                                                                            
                                                                            int32_t rdx_16 = *(arg2 + 0x1c);
                                                                            
                                                                            if (rdx_16 != 0)
                                                                            {
                                                                                rax_31 = sub_1800188d0(arg1, rdx_16, &s);
                                                                                goto label_180015aa1;
                                                                            }
                                                                            
                                                                        label_1800160a4:
                                                                            result_1 = 0;
                                                                        }
                                                                        else
                                                                        {
                                                                            int32_t rdx_14 = *(arg2 + 0x1c);
                                                                            
                                                                            if (rdx_14 == 0)
                                                                            {
                                                                            label_1800160a4_1:
                                                                                result_1 = 0;
                                                                            }
                                                                            else
                                                                            {
                                                                                if (sub_180017ab0(arg1, rdx_14, &s) != 0)
                                                                                    goto label_180015aa9;
                                                                                
                                                                            label_1800160a4_2:
                                                                                result_1 = 0;
                                                                            }
                                                                        }
                                                                    }
                                                                    
                                                                    result = result_1;
                                                                }
                                                                else
                                                                {
                                                                    while (true)
                                                                    {
                                                                        if ((&lpMultiByteStr == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
                                                                        {
                                                                        label_180015964:
                                                                            result = 0;
                                                                            break;
                                                                        }
                                                                        
                                                                        arg1[1] += 4;
                                                                        int32_t r9_1 = *((arg1[1] - 4) + r10);
                                                                        
                                                                        if (arg1[2] != 0)
                                                                            r9_1 = _bswap(r9_1);
                                                                        
                                                                        int32_t r8_6 = 0;
                                                                        int64_t rdx_9 = 0;
                                                                        
                                                                        if (r9_1 != 0)
                                                                        {
                                                                            do
                                                                            {
                                                                                if ((arg1[1] + 1) > *(arg1 + 0xc))
                                                                                    goto label_180015964;
                                                                                
                                                                                arg1[1] += 1;
                                                                                char rax_24 = *((arg1[1] - 1) + r10);
                                                                                
                                                                                if (rdx_9 < 0x104)
                                                                                    *(&lpMultiByteStr + rdx_9) = rax_24;
                                                                                
                                                                                if (rax_24 == 0)
                                                                                    break;
                                                                                
                                                                                r8_6 += 1;
                                                                                rdx_9 += 1;
                                                                            } while (r8_6 < r9_1);
                                                                        }
                                                                        
                                                                        if ((r9_1 == 0 || rdx_9 < 0x104))
                                                                            *(&lpMultiByteStr + rdx_9) = 0;
                                                                        
                                                                        int32_t rax_25 = arg1[1];
                                                                        int32_t rcx_2 = (rax_25 & 0xfffffffc);
                                                                        
                                                                        if ((rax_25 & 3) > 0)
                                                                            rcx_2 += 4;
                                                                        
                                                                        arg1[1] = rcx_2;
                                                                        
                                                                        if (rcx_2 >= rdi_1)
                                                                            goto label_1800158bf;
                                                                        
                                                                        continue;
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                while (true)
                                                                {
                                                                    if ((rax_13 + 4) <= rcx)
                                                                    {
                                                                        arg1[1] += 4;
                                                                        rax_13 = (arg1[1] + 4);
                                                                        
                                                                        if (rax_13 <= rcx)
                                                                        {
                                                                            rdx_8 += 1;
                                                                            arg1[1] = rax_13;
                                                                            
                                                                            if (rdx_8 >= (r8_4 - 4))
                                                                                goto label_180015810;
                                                                            
                                                                            continue;
                                                                        }
                                                                    }
                                                                    
                                                                    result = 0;
                                                                    break;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_3f8));
    return result;
}

int64_t sub_1800160e0(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_1a8;
    int64_t rax_1 = (__security_cookie ^ &var_1a8);
    int64_t r11 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if (r11 != 0)
    {
        int32_t rbx_1 = *(arg1 + 0xc);
        
        if ((arg2 + 4) <= rbx_1)
        {
            int32_t r8 = arg1[2];
            arg1[1] = (arg2 + 4);
            int32_t r9_1 = *(arg2 + r11);
            
            if (r8 != 0)
                r9_1 = _bswap(r9_1);
            
            if ((arg2 + 8) <= rbx_1)
            {
                arg1[1] = (arg2 + 8);
                int32_t rax_5 = *((arg2 + 4) + r11);
                
                if (r8 != 0)
                    rax_5 = _bswap(rax_5);
                
                if (r8 != 0)
                    r9_1 = rax_5;
                
                void var_158;
                sub_180005050(arg1, r9_1, &var_158);
                int64_t i = *arg1;
                int32_t rdx_1 = 0;
                
                while (i != 0)
                {
                    int32_t r8_2 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) > r8_2)
                        break;
                    
                    arg1[1] += 4;
                    int32_t rax_9 = (arg1[1] + 4);
                    
                    if (rax_9 > r8_2)
                        break;
                    
                    rdx_1 += 1;
                    arg1[1] = rax_9;
                    
                    if (rdx_1 >= 5)
                    {
                        int32_t rdx_2 = 0;
                        
                        while (true)
                        {
                            if (i == 0)
                                goto label_1800166ba;
                            
                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                goto label_1800166ba;
                            
                            arg1[1] += 4;
                            rdx_2 += 1;
                            int32_t rbx_2 = arg1[1];
                            
                            if (rdx_2 >= 0x10)
                            {
                                if (i == 0)
                                    break;
                                
                                int32_t r8_3 = *(arg1 + 0xc);
                                
                                if ((rbx_2 + 4) > r8_3)
                                    break;
                                
                                int32_t r11_1 = arg1[2];
                                arg1[1] = (rbx_2 + 4);
                                int32_t rax_14 = *(rbx_2 + i);
                                int32_t var_17c_1 = rax_14;
                                
                                if (r11_1 != 0)
                                    var_17c_1 = _bswap(rax_14);
                                
                                if ((rbx_2 + 8) > r8_3)
                                    break;
                                
                                arg1[1] += 4;
                                int32_t rsi_1 = arg1[1];
                                int32_t rax_18 = *((rsi_1 - 4) + i);
                                int32_t var_188_1 = rax_18;
                                
                                if (r11_1 != 0)
                                    var_188_1 = _bswap(rax_18);
                                
                                int32_t var_174_1;
                                
                                if ((rsi_1 + 4) <= r8_3)
                                {
                                    arg1[1] = (rsi_1 + 4);
                                    int32_t rax_22 = *(rsi_1 + i);
                                    var_174_1 = rax_22;
                                    
                                    if (r11_1 != 0)
                                        var_174_1 = _bswap(rax_22);
                                }
                                
                                if (((rsi_1 + 4) > r8_3 || (rsi_1 + 8) > r8_3))
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t r14_1 = arg1[1];
                                    int32_t rax_26 = *((r14_1 - 4) + i);
                                    int32_t var_184_1 = rax_26;
                                    
                                    if (r11_1 != 0)
                                        var_184_1 = _bswap(rax_26);
                                    
                                    if ((r14_1 + 4) > r8_3)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] = (r14_1 + 4);
                                        int32_t rax_30 = *(r14_1 + i);
                                        int32_t var_170_1 = rax_30;
                                        
                                        if (r11_1 != 0)
                                            var_170_1 = _bswap(rax_30);
                                        
                                        if ((r14_1 + 8) > r8_3)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] += 4;
                                            int32_t r10_2 = arg1[1];
                                            int32_t rax_34 = *((r10_2 - 4) + i);
                                            int32_t var_180_1 = rax_34;
                                            
                                            if (r11_1 != 0)
                                                var_180_1 = _bswap(rax_34);
                                            
                                            if ((r10_2 + 4) > r8_3)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] = (r10_2 + 4);
                                                
                                                if ((r10_2 + 8) > r8_3)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t rdx_3 = arg1[1];
                                                    
                                                    if ((rdx_3 + 4) > r8_3)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] = (rdx_3 + 4);
                                                        
                                                        if ((rdx_3 + 8) > r8_3)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r13_1 = arg1[1];
                                                            int32_t var_178_1;
                                                            
                                                            if ((r13_1 + 4) <= r8_3)
                                                            {
                                                                arg1[1] = (r13_1 + 4);
                                                                int32_t rax_42 = *(r13_1 + i);
                                                                var_178_1 = rax_42;
                                                                
                                                                if (r11_1 != 0)
                                                                    var_178_1 = _bswap(rax_42);
                                                            }
                                                            
                                                            if (((r13_1 + 4) > r8_3 || (r13_1 + 8) > r8_3))
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r10_4 = arg1[1];
                                                                int32_t r12_1 = *((r10_4 - 4) + i);
                                                                
                                                                if (r11_1 != 0)
                                                                    r12_1 = _bswap(r12_1);
                                                                
                                                                if ((r10_4 + 4) > r8_3)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (r10_4 + 4);
                                                                    
                                                                    if ((r10_4 + 8) > r8_3)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t r10_6 = arg1[1];
                                                                        
                                                                        if ((r10_6 + 4) > r8_3)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (r10_6 + 4);
                                                                            int32_t rax_50 = *(r10_6 + i);
                                                                            int32_t var_16c_1 = rax_50;
                                                                            
                                                                            if (r11_1 != 0)
                                                                                var_16c_1 = _bswap(rax_50);
                                                                            
                                                                            if ((r10_6 + 8) > r8_3)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t r10_8 = arg1[1];
                                                                                int32_t rbp_1 = *((r10_8 - 4) + i);
                                                                                
                                                                                if (r11_1 != 0)
                                                                                    rbp_1 = _bswap(rbp_1);
                                                                                
                                                                                if ((r10_8 + 4) > r8_3)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (r10_8 + 4);
                                                                                    
                                                                                    if ((r10_8 + 8) > r8_3)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t rdx_5 = arg1[1];
                                                                                        
                                                                                        if ((rdx_5 + 4) > r8_3)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (rdx_5 + 4);
                                                                                            
                                                                                            if ((rdx_5 + 8) > r8_3)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t rdx_7 = arg1[1];
                                                                                                
                                                                                                if ((rdx_7 + 4) > r8_3)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (rdx_7 + 4);
                                                                                                    
                                                                                                    if ((rdx_7 + 8) > r8_3)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t r15_1 = arg1[1];
                                                                                                        
                                                                                                        if ((r15_1 + 4) > r8_3)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (r15_1 + 4);
                                                                                                            int32_t rax_62 = *(r15_1 + i);
                                                                                                            int32_t var_168_1 = rax_62;
                                                                                                            
                                                                                                            if (r11_1 != 0)
                                                                                                                var_168_1 = _bswap(rax_62);
                                                                                                            
                                                                                                            if ((r15_1 + 8) > r8_3)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t r10_10 = arg1[1];
                                                                                                                int32_t r9_2 = *((r10_10 - 4) + i);
                                                                                                                
                                                                                                                if (r11_1 != 0)
                                                                                                                    r9_2 = _bswap(r9_2);
                                                                                                                
                                                                                                                if ((r10_10 + 4) > r8_3)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = (r10_10 + 4);
                                                                                                                    
                                                                                                                    if ((r10_10 + 8) > r8_3)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t rdx_9 = arg1[1];
                                                                                                                        
                                                                                                                        if ((rdx_9 + 4) > r8_3)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] = (rdx_9 + 4);
                                                                                                                            
                                                                                                                            if ((rdx_9 + 8) > r8_3)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rdx_11 = arg1[1];
                                                                                                                                
                                                                                                                                if ((rdx_11 + 4) > r8_3)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] = (rdx_11 + 4);
                                                                                                                                    
                                                                                                                                    if ((rdx_11 + 8) > r8_3)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        int32_t rdx_13 = arg1[1];
                                                                                                                                        
                                                                                                                                        if ((rdx_13 + 4) > r8_3)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] = (rdx_13 + 4);
                                                                                                                                            
                                                                                                                                            if ((rdx_13 + 8) > r8_3)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int32_t rdx_15 = arg1[1];
                                                                                                                                                
                                                                                                                                                if ((rdx_15 + 4) > r8_3)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] = (rdx_15 + 4);
                                                                                                                                                    
                                                                                                                                                    if ((rdx_15 + 8) > r8_3)
                                                                                                                                                        result = 0;
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                        int32_t rdx_17 = arg1[1];
                                                                                                                                                        
                                                                                                                                                        if ((rdx_17 + 4) > r8_3)
                                                                                                                                                            result = 0;
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] = (rdx_17 + 4);
                                                                                                                                                            
                                                                                                                                                            if ((rdx_17 + 8) > r8_3)
                                                                                                                                                                result = 0;
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                int32_t rdx_19 = var_188_1;
                                                                                                                                                                
                                                                                                                                                                if (rdx_19 != 0)
                                                                                                                                                                    rdx_19 += (rbx_2 + 4);
                                                                                                                                                                
                                                                                                                                                                if (r12_1 != 0)
                                                                                                                                                                    r12_1 += (r13_1 + 4);
                                                                                                                                                                
                                                                                                                                                                int32_t rcx = var_184_1;
                                                                                                                                                                
                                                                                                                                                                if (rcx != 0)
                                                                                                                                                                    rcx += (rsi_1 + 4);
                                                                                                                                                                
                                                                                                                                                                int32_t rax_78 = var_180_1;
                                                                                                                                                                
                                                                                                                                                                if (rax_78 != 0)
                                                                                                                                                                    rax_78 += (r14_1 + 4);
                                                                                                                                                                
                                                                                                                                                                if (rbp_1 != 0)
                                                                                                                                                                    rbp_1 += (r10_6 + 4);
                                                                                                                                                                
                                                                                                                                                                if (r9_2 != 0)
                                                                                                                                                                    r9_2 += (r15_1 + 4);
                                                                                                                                                                
                                                                                                                                                                *(arg3 + 0x1c) = rdx_19;
                                                                                                                                                                *(arg3 + 0x3c) = rax_78;
                                                                                                                                                                *(arg3 + 0x28) = 0;
                                                                                                                                                                *(arg3 + 0x40) = var_16c_1;
                                                                                                                                                                *(arg3 + 0x20) = var_178_1;
                                                                                                                                                                *(arg3 + 0x34) = rcx;
                                                                                                                                                                *(arg3 + 0x48) = var_168_1;
                                                                                                                                                                result = 1;
                                                                                                                                                                *(arg3 + 0x30) = var_174_1;
                                                                                                                                                                *(arg3 + 0x18) = var_17c_1;
                                                                                                                                                                *(arg3 + 0x24) = r12_1;
                                                                                                                                                                *(arg3 + 0x38) = var_170_1;
                                                                                                                                                                *(arg3 + 0x44) = rbp_1;
                                                                                                                                                                *(arg3 + 0x4c) = r9_2;
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                goto label_180016693;
                            }
                        }
                        
                        break;
                    }
                }
            }
        }
    }
    
label_1800166ba:
    result = 0;
label_180016693:
    __security_check_cookie((rax_1 ^ &var_1a8));
    return result;
}

int64_t sub_1800166c0(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_1a8;
    int64_t rax_1 = (__security_cookie ^ &var_1a8);
    int64_t r11 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if (r11 != 0)
    {
        int32_t rbx_1 = *(arg1 + 0xc);
        
        if ((arg2 + 4) <= rbx_1)
        {
            int32_t r8 = arg1[2];
            arg1[1] = (arg2 + 4);
            int32_t r9_1 = *(arg2 + r11);
            
            if (r8 != 0)
                r9_1 = _bswap(r9_1);
            
            if ((arg2 + 8) <= rbx_1)
            {
                arg1[1] = (arg2 + 8);
                int32_t rax_5 = *((arg2 + 4) + r11);
                
                if (r8 != 0)
                    rax_5 = _bswap(rax_5);
                
                if (r8 != 0)
                    r9_1 = rax_5;
                
                void var_158;
                sub_180005050(arg1, r9_1, &var_158);
                int64_t r9_2 = *arg1;
                int32_t rdx_1 = 0;
                
                while (true)
                {
                    if (r9_2 == 0)
                        goto label_180016cdd;
                    
                    int32_t r8_2 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) > r8_2)
                        goto label_180016cdd;
                    
                    arg1[1] += 4;
                    int32_t rax_9 = (arg1[1] + 4);
                    
                    if (rax_9 > r8_2)
                        goto label_180016cdd;
                    
                    rdx_1 += 1;
                    arg1[1] = rax_9;
                    
                    if (rdx_1 >= 5)
                    {
                        int32_t rdx_2 = data_1800306f0;
                        int32_t r8_3 = 0x15;
                        int32_t rdx_3;
                        
                        if (rdx_2 != 0x30b)
                        {
                            if (rdx_2 == 0x362)
                                r8_3 = 0x12;
                            
                            rdx_3 = 0;
                            
                            if (r8_3 > 0)
                                goto label_1800167e4;
                        }
                        else
                        {
                            rdx_3 = 0;
                            r8_3 = 0x10;
                        label_1800167e4:
                            
                            do
                            {
                                if (r9_2 == 0)
                                    goto label_180016cdd;
                                
                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                    goto label_180016cdd;
                                
                                arg1[1] += 4;
                                rdx_3 += 1;
                                rax_9 = arg1[1];
                            } while (rdx_3 < r8_3);
                        }
                        
                        if (r9_2 == 0)
                            break;
                        
                        int32_t r8_4 = *(arg1 + 0xc);
                        
                        if ((rax_9 + 4) > r8_4)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r10_2 = arg1[1];
                        int32_t r11_1 = arg1[2];
                        int32_t rax_14 = *((r10_2 - 4) + r9_2);
                        int32_t var_188_1 = rax_14;
                        
                        if (r11_1 != 0)
                            var_188_1 = _bswap(rax_14);
                        
                        if ((r10_2 + 4) > r8_4)
                            break;
                        
                        arg1[1] = (r10_2 + 4);
                        int32_t r13_1 = *(r10_2 + r9_2);
                        
                        if (r11_1 != 0)
                            r13_1 = _bswap(r13_1);
                        
                        if ((r10_2 + 8) > r8_4)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t rdx_4 = arg1[1];
                            
                            if ((rdx_4 + 4) > r8_4)
                                result = 0;
                            else
                            {
                                arg1[1] = (rdx_4 + 4);
                                
                                if ((rdx_4 + 8) > r8_4)
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t r10_4 = arg1[1];
                                    int32_t rax_22 = *((r10_4 - 4) + r9_2);
                                    int32_t var_184_1 = rax_22;
                                    
                                    if (r11_1 != 0)
                                        var_184_1 = _bswap(rax_22);
                                    
                                    if ((r10_4 + 4) > r8_4)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] = (r10_4 + 4);
                                        int32_t r12_1 = *(r10_4 + r9_2);
                                        
                                        if (r11_1 != 0)
                                            r12_1 = _bswap(r12_1);
                                        
                                        if ((r10_4 + 8) > r8_4)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] += 4;
                                            int32_t rdx_6 = arg1[1];
                                            
                                            if ((rdx_6 + 4) > r8_4)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] = (rdx_6 + 4);
                                                
                                                if ((rdx_6 + 8) > r8_4)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r10_6 = arg1[1];
                                                    int32_t rax_30 = *((r10_6 - 4) + r9_2);
                                                    int32_t var_180_1 = rax_30;
                                                    
                                                    if (r11_1 != 0)
                                                        var_180_1 = _bswap(rax_30);
                                                    
                                                    if ((r10_6 + 4) > r8_4)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] = (r10_6 + 4);
                                                        int32_t r14_1 = *(r10_6 + r9_2);
                                                        
                                                        if (r11_1 != 0)
                                                            r14_1 = _bswap(r14_1);
                                                        
                                                        if ((r10_6 + 8) > r8_4)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t rdx_8 = arg1[1];
                                                            
                                                            if ((rdx_8 + 4) > r8_4)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] = (rdx_8 + 4);
                                                                
                                                                if ((rdx_8 + 8) > r8_4)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t r10_8 = arg1[1];
                                                                    int32_t rax_38 = *((r10_8 - 4) + r9_2);
                                                                    int32_t var_17c_1 = rax_38;
                                                                    
                                                                    if (r11_1 != 0)
                                                                        var_17c_1 = _bswap(rax_38);
                                                                    
                                                                    if ((r10_8 + 4) > r8_4)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] = (r10_8 + 4);
                                                                        int32_t rbp_1 = *(r10_8 + r9_2);
                                                                        
                                                                        if (r11_1 != 0)
                                                                            rbp_1 = _bswap(rbp_1);
                                                                        
                                                                        if ((r10_8 + 8) > r8_4)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] += 4;
                                                                            int32_t rdx_10 = arg1[1];
                                                                            
                                                                            if ((rdx_10 + 4) > r8_4)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] = (rdx_10 + 4);
                                                                                
                                                                                if ((rdx_10 + 8) > r8_4)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    int32_t rdx_12 = arg1[1];
                                                                                    
                                                                                    if ((rdx_12 + 4) > r8_4)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] = (rdx_12 + 4);
                                                                                        
                                                                                        if ((rdx_12 + 8) > r8_4)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            int32_t rdx_14 = arg1[1];
                                                                                            
                                                                                            if ((rdx_14 + 4) > r8_4)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] = (rdx_14 + 4);
                                                                                                
                                                                                                if ((rdx_14 + 8) > r8_4)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    int32_t r10_10 = arg1[1];
                                                                                                    int32_t rax_50 = *((r10_10 - 4) + r9_2);
                                                                                                    int32_t var_178_1 = rax_50;
                                                                                                    
                                                                                                    if (r11_1 != 0)
                                                                                                        var_178_1 = _bswap(rax_50);
                                                                                                    
                                                                                                    if ((r10_10 + 4) > r8_4)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] = (r10_10 + 4);
                                                                                                        int32_t rsi_1 = *(r10_10 + r9_2);
                                                                                                        
                                                                                                        if (r11_1 != 0)
                                                                                                            rsi_1 = _bswap(rsi_1);
                                                                                                        
                                                                                                        if ((r10_10 + 8) > r8_4)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            int32_t rdx_16 = arg1[1];
                                                                                                            
                                                                                                            if ((rdx_16 + 4) > r8_4)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] = (rdx_16 + 4);
                                                                                                                
                                                                                                                if ((rdx_16 + 8) > r8_4)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    int32_t rdx_18 = arg1[1];
                                                                                                                    
                                                                                                                    if ((rdx_18 + 4) > r8_4)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] = (rdx_18 + 4);
                                                                                                                        
                                                                                                                        if ((rdx_18 + 8) > r8_4)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] += 4;
                                                                                                                            int32_t rdx_20 = arg1[1];
                                                                                                                            
                                                                                                                            if ((rdx_20 + 4) > r8_4)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] = (rdx_20 + 4);
                                                                                                                                
                                                                                                                                if ((rdx_20 + 8) > r8_4)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] += 4;
                                                                                                                                    int32_t rbx_2 = arg1[1];
                                                                                                                                    int32_t r15_1 = *((rbx_2 - 4) + r9_2);
                                                                                                                                    
                                                                                                                                    if (r11_1 != 0)
                                                                                                                                        r15_1 = _bswap(r15_1);
                                                                                                                                    
                                                                                                                                    if ((rbx_2 + 4) > r8_4)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] = (rbx_2 + 4);
                                                                                                                                        int32_t r10_12 = *(rbx_2 + r9_2);
                                                                                                                                        
                                                                                                                                        if (r11_1 != 0)
                                                                                                                                            r10_12 = _bswap(r10_12);
                                                                                                                                        
                                                                                                                                        if ((rbx_2 + 8) > r8_4)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] += 4;
                                                                                                                                            int32_t rdx_22 = arg1[1];
                                                                                                                                            
                                                                                                                                            if ((rdx_22 + 4) > r8_4)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] = (rdx_22 + 4);
                                                                                                                                                
                                                                                                                                                if ((rdx_22 + 8) > r8_4)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                    int32_t rdx_24 = arg1[1];
                                                                                                                                                    
                                                                                                                                                    if ((rdx_24 + 4) > r8_4)
                                                                                                                                                        result = 0;
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] = (rdx_24 + 4);
                                                                                                                                                        
                                                                                                                                                        if ((rdx_24 + 8) > r8_4)
                                                                                                                                                            result = 0;
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                            int32_t rdx_26 = arg1[1];
                                                                                                                                                            
                                                                                                                                                            if ((rdx_26 + 4) > r8_4)
                                                                                                                                                                result = 0;
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                                arg1[1] = (rdx_26 + 4);
                                                                                                                                                                
                                                                                                                                                                if ((rdx_26 + 8) > r8_4)
                                                                                                                                                                    result = 0;
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                    int32_t rdx_28 = arg1[1];
                                                                                                                                                                    
                                                                                                                                                                    if ((rdx_28 + 4) > r8_4)
                                                                                                                                                                        result = 0;
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                        arg1[1] = (rdx_28 + 4);
                                                                                                                                                                        
                                                                                                                                                                        if (r13_1 != 0)
                                                                                                                                                                            r13_1 += r10_2;
                                                                                                                                                                        
                                                                                                                                                                        if (r12_1 != 0)
                                                                                                                                                                            r12_1 += r10_4;
                                                                                                                                                                        
                                                                                                                                                                        if (r14_1 != 0)
                                                                                                                                                                            r14_1 += r10_6;
                                                                                                                                                                        
                                                                                                                                                                        if (rbp_1 != 0)
                                                                                                                                                                            rbp_1 += r10_8;
                                                                                                                                                                        
                                                                                                                                                                        if (rsi_1 != 0)
                                                                                                                                                                            rsi_1 += r10_10;
                                                                                                                                                                        
                                                                                                                                                                        if (r10_12 != 0)
                                                                                                                                                                            r10_12 += rbx_2;
                                                                                                                                                                        
                                                                                                                                                                        *(arg3 + 0x18) = var_188_1;
                                                                                                                                                                        *(arg3 + 0x28) = 0;
                                                                                                                                                                        *(arg3 + 0x20) = var_184_1;
                                                                                                                                                                        *(arg3 + 0x30) = var_180_1;
                                                                                                                                                                        *(arg3 + 0x38) = var_17c_1;
                                                                                                                                                                        *(arg3 + 0x40) = var_178_1;
                                                                                                                                                                        result = 1;
                                                                                                                                                                        *(arg3 + 0x1c) = r13_1;
                                                                                                                                                                        *(arg3 + 0x24) = r12_1;
                                                                                                                                                                        *(arg3 + 0x34) = r14_1;
                                                                                                                                                                        *(arg3 + 0x3c) = rbp_1;
                                                                                                                                                                        *(arg3 + 0x44) = rsi_1;
                                                                                                                                                                        *(arg3 + 0x48) = r15_1;
                                                                                                                                                                        *(arg3 + 0x4c) = r10_12;
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        goto label_180016cb6;
                    }
                }
            }
        }
    }
    
label_180016cdd:
    result = 0;
label_180016cb6:
    __security_check_cookie((rax_1 ^ &var_1a8));
    return result;
}

int64_t sub_180016cf0(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_1a8;
    int64_t rax_1 = (__security_cookie ^ &var_1a8);
    int64_t r11 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if (r11 != 0)
    {
        int32_t rbx_1 = *(arg1 + 0xc);
        
        if ((arg2 + 4) <= rbx_1)
        {
            int32_t r8 = arg1[2];
            arg1[1] = (arg2 + 4);
            int32_t r9_1 = *(arg2 + r11);
            
            if (r8 != 0)
                r9_1 = _bswap(r9_1);
            
            if ((arg2 + 8) <= rbx_1)
            {
                arg1[1] = (arg2 + 8);
                int32_t rax_5 = *((arg2 + 4) + r11);
                
                if (r8 != 0)
                    rax_5 = _bswap(rax_5);
                
                if (r8 != 0)
                    r9_1 = rax_5;
                
                void var_158;
                sub_180005050(arg1, r9_1, &var_158);
                int64_t r9_2 = *arg1;
                int32_t rdx_1 = 0;
                
                while (true)
                {
                    if (r9_2 == 0)
                        goto label_1800172de;
                    
                    int32_t r8_2 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) > r8_2)
                        goto label_1800172de;
                    
                    arg1[1] += 4;
                    int32_t rax_9 = (arg1[1] + 4);
                    
                    if (rax_9 > r8_2)
                        goto label_1800172de;
                    
                    rdx_1 += 1;
                    arg1[1] = rax_9;
                    
                    if (rdx_1 >= 5)
                    {
                        int32_t r8_3 = 0x15;
                        
                        if (data_1800306f0 == 0x30b)
                            r8_3 = 0x10;
                        
                        int32_t rdx_2 = 0;
                        
                        if (r8_3 > 0)
                        {
                            do
                            {
                                if (r9_2 == 0)
                                    goto label_1800172de;
                                
                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                    goto label_1800172de;
                                
                                arg1[1] += 4;
                                rdx_2 += 1;
                                rax_9 = arg1[1];
                            } while (rdx_2 < r8_3);
                        }
                        
                        if (r9_2 == 0)
                            break;
                        
                        int32_t r8_4 = *(arg1 + 0xc);
                        
                        if ((rax_9 + 4) > r8_4)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r10_2 = arg1[1];
                        int32_t r11_1 = arg1[2];
                        int32_t rax_14 = *((r10_2 - 4) + r9_2);
                        int32_t var_184_1 = rax_14;
                        
                        if (r11_1 != 0)
                            var_184_1 = _bswap(rax_14);
                        
                        if ((r10_2 + 4) > r8_4)
                            break;
                        
                        arg1[1] = (r10_2 + 4);
                        int32_t rax_18 = *(r10_2 + r9_2);
                        int32_t var_188_1 = rax_18;
                        
                        if (r11_1 != 0)
                            var_188_1 = _bswap(rax_18);
                        
                        if ((r10_2 + 8) > r8_4)
                            break;
                        
                        arg1[1] += 4;
                        int32_t rdx_3 = arg1[1];
                        
                        if ((rdx_3 + 4) > r8_4)
                            break;
                        
                        arg1[1] = (rdx_3 + 4);
                        
                        if ((rdx_3 + 8) > r8_4)
                            break;
                        
                        arg1[1] += 4;
                        int32_t r10_4 = arg1[1];
                        int32_t rax_24 = *((r10_4 - 4) + r9_2);
                        int32_t var_180_1 = rax_24;
                        
                        if (r11_1 != 0)
                            var_180_1 = _bswap(rax_24);
                        
                        if ((r10_4 + 4) > r8_4)
                            break;
                        
                        arg1[1] = (r10_4 + 4);
                        int32_t r12_1 = *(r10_4 + r9_2);
                        
                        if (r11_1 != 0)
                            r12_1 = _bswap(r12_1);
                        
                        if ((r10_4 + 8) > r8_4)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t r15_1 = arg1[1];
                            int32_t var_17c_1;
                            
                            if ((r15_1 + 4) <= r8_4)
                            {
                                arg1[1] = (r15_1 + 4);
                                int32_t rax_31 = *(r15_1 + r9_2);
                                var_17c_1 = rax_31;
                                
                                if (r11_1 != 0)
                                    var_17c_1 = _bswap(rax_31);
                            }
                            
                            if (((r15_1 + 4) > r8_4 || (r15_1 + 8) > r8_4))
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r10_6 = arg1[1];
                                int32_t r14_1 = *((r10_6 - 4) + r9_2);
                                
                                if (r11_1 != 0)
                                    r14_1 = _bswap(r14_1);
                                
                                if ((r10_6 + 4) > r8_4)
                                    result = 0;
                                else
                                {
                                    arg1[1] = (r10_6 + 4);
                                    
                                    if ((r10_6 + 8) > r8_4)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r10_8 = arg1[1];
                                        int32_t rax_38 = *((r10_8 - 4) + r9_2);
                                        int32_t var_178_1 = rax_38;
                                        
                                        if (r11_1 != 0)
                                            var_178_1 = _bswap(rax_38);
                                        
                                        if ((r10_8 + 4) > r8_4)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (r10_8 + 4);
                                            int32_t rbp_1 = *(r10_8 + r9_2);
                                            
                                            if (r11_1 != 0)
                                                rbp_1 = _bswap(rbp_1);
                                            
                                            if ((r10_8 + 8) > r8_4)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t rdx_5 = arg1[1];
                                                
                                                if ((rdx_5 + 4) > r8_4)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (rdx_5 + 4);
                                                    
                                                    if ((rdx_5 + 8) > r8_4)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t rdx_7 = arg1[1];
                                                        
                                                        if ((rdx_7 + 4) > r8_4)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] = (rdx_7 + 4);
                                                            
                                                            if ((rdx_7 + 8) > r8_4)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rdx_9 = arg1[1];
                                                                
                                                                if ((rdx_9 + 4) > r8_4)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (rdx_9 + 4);
                                                                    
                                                                    if ((rdx_9 + 8) > r8_4)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t r10_10 = arg1[1];
                                                                        int32_t rax_50 = *((r10_10 - 4) + r9_2);
                                                                        int32_t var_174_1 = rax_50;
                                                                        
                                                                        if (r11_1 != 0)
                                                                            var_174_1 = _bswap(rax_50);
                                                                        
                                                                        if ((r10_10 + 4) > r8_4)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (r10_10 + 4);
                                                                            int32_t rsi_1 = *(r10_10 + r9_2);
                                                                            
                                                                            if (r11_1 != 0)
                                                                                rsi_1 = _bswap(rsi_1);
                                                                            
                                                                            if ((r10_10 + 8) > r8_4)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t rdx_11 = arg1[1];
                                                                                
                                                                                if ((rdx_11 + 4) > r8_4)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (rdx_11 + 4);
                                                                                    
                                                                                    if ((rdx_11 + 8) > r8_4)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t rdx_13 = arg1[1];
                                                                                        
                                                                                        if ((rdx_13 + 4) > r8_4)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (rdx_13 + 4);
                                                                                            
                                                                                            if ((rdx_13 + 8) > r8_4)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t rdx_15 = arg1[1];
                                                                                                
                                                                                                if ((rdx_15 + 4) > r8_4)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (rdx_15 + 4);
                                                                                                    
                                                                                                    if ((rdx_15 + 8) > r8_4)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t rbx_2 = arg1[1];
                                                                                                        int32_t r13_1 = *((rbx_2 - 4) + r9_2);
                                                                                                        
                                                                                                        if (r11_1 != 0)
                                                                                                            r13_1 = _bswap(r13_1);
                                                                                                        
                                                                                                        if ((rbx_2 + 4) > r8_4)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (rbx_2 + 4);
                                                                                                            int32_t r10_12 = *(rbx_2 + r9_2);
                                                                                                            
                                                                                                            if (r11_1 != 0)
                                                                                                                r10_12 = _bswap(r10_12);
                                                                                                            
                                                                                                            if ((rbx_2 + 8) > r8_4)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t rdx_17 = arg1[1];
                                                                                                                
                                                                                                                if ((rdx_17 + 4) > r8_4)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = (rdx_17 + 4);
                                                                                                                    
                                                                                                                    if ((rdx_17 + 8) > r8_4)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t rdx_19 = arg1[1];
                                                                                                                        
                                                                                                                        if ((rdx_19 + 4) > r8_4)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] = (rdx_19 + 4);
                                                                                                                            
                                                                                                                            if ((rdx_19 + 8) > r8_4)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rdx_21 = arg1[1];
                                                                                                                                
                                                                                                                                if ((rdx_21 + 4) > r8_4)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] = (rdx_21 + 4);
                                                                                                                                    
                                                                                                                                    if ((rdx_21 + 8) > r8_4)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        int32_t rdx_23 = arg1[1];
                                                                                                                                        
                                                                                                                                        if ((rdx_23 + 4) > r8_4)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] = (rdx_23 + 4);
                                                                                                                                            int32_t rax_73 = var_188_1;
                                                                                                                                            
                                                                                                                                            if (rax_73 != 0)
                                                                                                                                                rax_73 += r10_2;
                                                                                                                                            
                                                                                                                                            if (r12_1 != 0)
                                                                                                                                                r12_1 += r10_4;
                                                                                                                                            
                                                                                                                                            if (r14_1 != 0)
                                                                                                                                                r14_1 += (r15_1 + 4);
                                                                                                                                            
                                                                                                                                            if (rbp_1 != 0)
                                                                                                                                                rbp_1 += r10_8;
                                                                                                                                            
                                                                                                                                            if (rsi_1 != 0)
                                                                                                                                                rsi_1 += r10_10;
                                                                                                                                            
                                                                                                                                            if (r10_12 != 0)
                                                                                                                                                r10_12 += rbx_2;
                                                                                                                                            
                                                                                                                                            *(arg3 + 0x1c) = rax_73;
                                                                                                                                            *(arg3 + 0x28) = 0;
                                                                                                                                            *(arg3 + 0x20) = var_180_1;
                                                                                                                                            *(arg3 + 0x30) = var_17c_1;
                                                                                                                                            *(arg3 + 0x38) = var_178_1;
                                                                                                                                            *(arg3 + 0x40) = var_174_1;
                                                                                                                                            result = 1;
                                                                                                                                            *(arg3 + 0x18) = var_184_1;
                                                                                                                                            *(arg3 + 0x24) = r12_1;
                                                                                                                                            *(arg3 + 0x34) = r14_1;
                                                                                                                                            *(arg3 + 0x3c) = rbp_1;
                                                                                                                                            *(arg3 + 0x44) = rsi_1;
                                                                                                                                            *(arg3 + 0x48) = r13_1;
                                                                                                                                            *(arg3 + 0x4c) = r10_12;
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        goto label_1800172b7;
                    }
                }
            }
        }
    }
    
label_1800172de:
    result = 0;
label_1800172b7:
    __security_check_cookie((rax_1 ^ &var_1a8));
    return result;
}

int64_t sub_1800172f0(int64_t* arg1, int32_t arg2, int32_t* arg3)
{
    void var_1c8;
    int64_t rax_1 = (__security_cookie ^ &var_1c8);
    int64_t r11 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if (r11 == 0)
    {
    label_180017a9f:
        result = 0;
    }
    else
    {
        int32_t rbx_1 = *(arg1 + 0xc);
        
        if ((arg2 + 4) > rbx_1)
        {
        label_180017a9f_1:
            result = 0;
        }
        else
        {
            int32_t r8 = arg1[2];
            arg1[1] = (arg2 + 4);
            int32_t r9_1 = *(arg2 + r11);
            
            if (r8 != 0)
                r9_1 = _bswap(r9_1);
            
            if ((arg2 + 8) > rbx_1)
            {
            label_180017a9f_2:
                result = 0;
            }
            else
            {
                arg1[1] = (arg2 + 8);
                int32_t rax_5 = *((arg2 + 4) + r11);
                
                if (r8 != 0)
                    rax_5 = _bswap(rax_5);
                
                if (r8 != 0)
                    r9_1 = rax_5;
                
                void var_158;
                sub_180005050(arg1, r9_1, &var_158);
                int64_t r10_2 = *arg1;
                int32_t r11_1 = 0;
                int32_t rdx_1 = 0;
                
                while (true)
                {
                    if (r10_2 == 0)
                        goto label_180017a9f_2;
                    
                    int32_t r8_2 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) > r8_2)
                        goto label_180017a9f_2;
                    
                    arg1[1] += 4;
                    int32_t rax_9 = (arg1[1] + 4);
                    
                    if (rax_9 > r8_2)
                        goto label_180017a9f_2;
                    
                    rdx_1 += 1;
                    arg1[1] = rax_9;
                    
                    if (rdx_1 >= 5)
                    {
                        int32_t rdx_2 = 0;
                        
                        while (true)
                        {
                            if ((r10_2 != 0 && (arg1[1] + 4) <= *(arg1 + 0xc)))
                            {
                                arg1[1] += 4;
                                rdx_2 += 1;
                                int32_t rdi_1 = arg1[1];
                                
                                if (rdx_2 < 9)
                                    continue;
                                else if (r10_2 != 0)
                                {
                                    int32_t r8_3 = *(arg1 + 0xc);
                                    
                                    if ((rdi_1 + 4) <= r8_3)
                                    {
                                        int32_t rbx_2 = arg1[2];
                                        arg1[1] = (rdi_1 + 4);
                                        int32_t rax_14 = *(rdi_1 + r10_2);
                                        int32_t var_190_1 = rax_14;
                                        
                                        if (rbx_2 != 0)
                                            var_190_1 = _bswap(rax_14);
                                        
                                        if ((rdi_1 + 8) <= r8_3)
                                        {
                                            arg1[1] += 4;
                                            int32_t r15_1 = arg1[1];
                                            int32_t rax_18 = *((r15_1 - 4) + r10_2);
                                            int32_t var_1a8_1 = rax_18;
                                            
                                            if (rbx_2 != 0)
                                                var_1a8_1 = _bswap(rax_18);
                                            
                                            if ((r15_1 + 4) <= r8_3)
                                            {
                                                arg1[1] = (r15_1 + 4);
                                                int32_t rax_22 = *(r15_1 + r10_2);
                                                int32_t var_18c_1 = rax_22;
                                                
                                                if (rbx_2 != 0)
                                                    var_18c_1 = _bswap(rax_22);
                                                
                                                if ((r15_1 + 8) <= r8_3)
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r9_2 = arg1[1];
                                                    int32_t rax_26 = *((r9_2 - 4) + r10_2);
                                                    int32_t var_1a4_1 = rax_26;
                                                    
                                                    if (rbx_2 != 0)
                                                        var_1a4_1 = _bswap(rax_26);
                                                    
                                                    while (true)
                                                    {
                                                        if ((r9_2 + 4) > r8_3)
                                                            goto label_180017a97;
                                                        
                                                        arg1[1] += 4;
                                                        r9_2 = (arg1[1] + 4);
                                                        
                                                        if (r9_2 > r8_3)
                                                            goto label_180017a97;
                                                        
                                                        r11_1 += 1;
                                                        arg1[1] = r9_2;
                                                        
                                                        if (r11_1 >= 4)
                                                        {
                                                            if ((r9_2 + 4) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t r9_4 = arg1[1];
                                                            int32_t rax_31 = *((r9_4 - 4) + r10_2);
                                                            int32_t var_188_1 = rax_31;
                                                            
                                                            if (rbx_2 != 0)
                                                                var_188_1 = _bswap(rax_31);
                                                            
                                                            if ((r9_4 + 4) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] = (r9_4 + 4);
                                                            int32_t rax_35 = *(r9_4 + r10_2);
                                                            int32_t var_1a0_1 = rax_35;
                                                            
                                                            if (rbx_2 != 0)
                                                                var_1a0_1 = _bswap(rax_35);
                                                            
                                                            if ((r9_4 + 8) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t r9_6 = arg1[1];
                                                            int32_t rax_39 = *((r9_6 - 4) + r10_2);
                                                            int32_t var_184_1 = rax_39;
                                                            
                                                            if (rbx_2 != 0)
                                                                var_184_1 = _bswap(rax_39);
                                                            
                                                            if ((r9_6 + 4) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] = (r9_6 + 4);
                                                            int32_t rax_43 = *(r9_6 + r10_2);
                                                            int32_t var_19c_1 = rax_43;
                                                            
                                                            if (rbx_2 != 0)
                                                                var_19c_1 = _bswap(rax_43);
                                                            
                                                            if ((r9_6 + 8) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t rdx_3 = arg1[1];
                                                            
                                                            if ((rdx_3 + 4) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] = (rdx_3 + 4);
                                                            
                                                            if ((rdx_3 + 8) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t r9_8 = arg1[1];
                                                            int32_t rax_49 = *((r9_8 - 4) + r10_2);
                                                            int32_t var_180_1 = rax_49;
                                                            
                                                            if (rbx_2 != 0)
                                                                var_180_1 = _bswap(rax_49);
                                                            
                                                            if ((r9_8 + 4) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] = (r9_8 + 4);
                                                            int32_t rax_53 = *(r9_8 + r10_2);
                                                            int32_t var_198_1 = rax_53;
                                                            
                                                            if (rbx_2 != 0)
                                                                var_198_1 = _bswap(rax_53);
                                                            
                                                            if ((r9_8 + 8) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t r9_10 = arg1[1];
                                                            int32_t rax_57 = *((r9_10 - 4) + r10_2);
                                                            int32_t var_17c_1 = rax_57;
                                                            
                                                            if (rbx_2 != 0)
                                                                var_17c_1 = _bswap(rax_57);
                                                            
                                                            if ((r9_10 + 4) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] = (r9_10 + 4);
                                                            int32_t rax_61 = *(r9_10 + r10_2);
                                                            int32_t var_194_1 = rax_61;
                                                            
                                                            if (rbx_2 != 0)
                                                                var_194_1 = _bswap(rax_61);
                                                            
                                                            if ((r9_10 + 8) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] += 4;
                                                            int32_t r9_12 = arg1[1];
                                                            int32_t rax_65 = *((r9_12 - 4) + r10_2);
                                                            int32_t var_178_1 = rax_65;
                                                            
                                                            if (rbx_2 != 0)
                                                                var_178_1 = _bswap(rax_65);
                                                            
                                                            if ((r9_12 + 4) > r8_3)
                                                                break;
                                                            
                                                            arg1[1] = (r9_12 + 4);
                                                            int32_t r13_1 = *(r9_12 + r10_2);
                                                            
                                                            if (rbx_2 != 0)
                                                                r13_1 = _bswap(r13_1);
                                                            
                                                            if ((r9_12 + 8) > r8_3)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rdx_5 = arg1[1];
                                                                
                                                                if ((rdx_5 + 4) > r8_3)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (rdx_5 + 4);
                                                                    
                                                                    if ((rdx_5 + 8) > r8_3)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t rdx_7 = arg1[1];
                                                                        
                                                                        if ((rdx_7 + 4) > r8_3)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (rdx_7 + 4);
                                                                            
                                                                            if ((rdx_7 + 8) > r8_3)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t rdx_9 = arg1[1];
                                                                                
                                                                                if ((rdx_9 + 4) > r8_3)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (rdx_9 + 4);
                                                                                    
                                                                                    if ((rdx_9 + 8) > r8_3)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t r9_14 = arg1[1];
                                                                                        int32_t rax_77 = *((r9_14 - 4) + r10_2);
                                                                                        int32_t var_174_1 = rax_77;
                                                                                        
                                                                                        if (rbx_2 != 0)
                                                                                            var_174_1 = _bswap(rax_77);
                                                                                        
                                                                                        if ((r9_14 + 4) > r8_3)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (r9_14 + 4);
                                                                                            int32_t rbp_1 = *(r9_14 + r10_2);
                                                                                            
                                                                                            if (rbx_2 != 0)
                                                                                                rbp_1 = _bswap(rbp_1);
                                                                                            
                                                                                            if ((r9_14 + 8) > r8_3)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t rdx_11 = arg1[1];
                                                                                                
                                                                                                if ((rdx_11 + 4) > r8_3)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (rdx_11 + 4);
                                                                                                    
                                                                                                    if ((rdx_11 + 8) > r8_3)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t rdx_13 = arg1[1];
                                                                                                        
                                                                                                        if ((rdx_13 + 4) > r8_3)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (rdx_13 + 4);
                                                                                                            
                                                                                                            if ((rdx_13 + 8) > r8_3)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t rdx_15 = arg1[1];
                                                                                                                
                                                                                                                if ((rdx_15 + 4) > r8_3)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = (rdx_15 + 4);
                                                                                                                    
                                                                                                                    if ((rdx_15 + 8) > r8_3)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t rdx_17 = arg1[1];
                                                                                                                        
                                                                                                                        if ((rdx_17 + 4) > r8_3)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] = (rdx_17 + 4);
                                                                                                                            
                                                                                                                            if ((rdx_17 + 8) > r8_3)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rdx_19 = arg1[1];
                                                                                                                                
                                                                                                                                if ((rdx_19 + 4) > r8_3)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] = (rdx_19 + 4);
                                                                                                                                    
                                                                                                                                    if ((rdx_19 + 8) > r8_3)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        int32_t rdx_21 = arg1[1];
                                                                                                                                        
                                                                                                                                        if ((rdx_21 + 4) > r8_3)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] = (rdx_21 + 4);
                                                                                                                                            
                                                                                                                                            if ((rdx_21 + 8) > r8_3)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int32_t r9_16 = arg1[1];
                                                                                                                                                int32_t r14_1 = *((r9_16 - 4) + r10_2);
                                                                                                                                                
                                                                                                                                                if (rbx_2 != 0)
                                                                                                                                                    r14_1 = _bswap(r14_1);
                                                                                                                                                
                                                                                                                                                if ((r9_16 + 4) > r8_3)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] = (r9_16 + 4);
                                                                                                                                                    int32_t r11_2 = *(r9_16 + r10_2);
                                                                                                                                                    
                                                                                                                                                    if (rbx_2 != 0)
                                                                                                                                                        r11_2 = _bswap(r11_2);
                                                                                                                                                    
                                                                                                                                                    if ((r9_16 + 8) > r8_3)
                                                                                                                                                        result = 0;
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                        int32_t rdx_23 = arg1[1];
                                                                                                                                                        
                                                                                                                                                        if ((rdx_23 + 4) > r8_3)
                                                                                                                                                            result = 0;
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] = (rdx_23 + 4);
                                                                                                                                                            
                                                                                                                                                            if ((rdx_23 + 8) > r8_3)
                                                                                                                                                                result = 0;
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                int32_t rdx_25 = arg1[1];
                                                                                                                                                                
                                                                                                                                                                if ((rdx_25 + 4) > r8_3)
                                                                                                                                                                    result = 0;
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                    arg1[1] = (rdx_25 + 4);
                                                                                                                                                                    
                                                                                                                                                                    if ((rdx_25 + 8) > r8_3)
                                                                                                                                                                        result = 0;
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                        int32_t rdx_27 = arg1[1];
                                                                                                                                                                        
                                                                                                                                                                        if ((rdx_27 + 4) > r8_3)
                                                                                                                                                                            result = 0;
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                            arg1[1] = (rdx_27 + 4);
                                                                                                                                                                            
                                                                                                                                                                            if ((rdx_27 + 8) > r8_3)
                                                                                                                                                                                result = 0;
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                                int32_t rdx_29 = arg1[1];
                                                                                                                                                                                
                                                                                                                                                                                if ((rdx_29 + 4) > r8_3)
                                                                                                                                                                                    result = 0;
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                    arg1[1] = (rdx_29 + 4);
                                                                                                                                                                                    
                                                                                                                                                                                    if ((rdx_29 + 8) > r8_3)
                                                                                                                                                                                        result = 0;
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                                        int32_t r9_18 = var_1a8_1;
                                                                                                                                                                                        
                                                                                                                                                                                        if (r9_18 != 0)
                                                                                                                                                                                            r9_18 += (rdi_1 + 4);
                                                                                                                                                                                        
                                                                                                                                                                                        int32_t r10_3 = var_1a4_1;
                                                                                                                                                                                        
                                                                                                                                                                                        if (r10_3 != 0)
                                                                                                                                                                                            r10_3 += (r15_1 + 4);
                                                                                                                                                                                        
                                                                                                                                                                                        int32_t r8_4 = var_1a0_1;
                                                                                                                                                                                        
                                                                                                                                                                                        if (r8_4 != 0)
                                                                                                                                                                                            r8_4 += r9_4;
                                                                                                                                                                                        
                                                                                                                                                                                        int32_t rdx_31 = var_19c_1;
                                                                                                                                                                                        
                                                                                                                                                                                        if (rdx_31 != 0)
                                                                                                                                                                                            rdx_31 += r9_6;
                                                                                                                                                                                        
                                                                                                                                                                                        int32_t rcx = var_198_1;
                                                                                                                                                                                        
                                                                                                                                                                                        if (rcx != 0)
                                                                                                                                                                                            rcx += r9_8;
                                                                                                                                                                                        
                                                                                                                                                                                        int32_t rax_106 = var_194_1;
                                                                                                                                                                                        
                                                                                                                                                                                        if (rax_106 != 0)
                                                                                                                                                                                            rax_106 += r9_10;
                                                                                                                                                                                        
                                                                                                                                                                                        if (r13_1 != 0)
                                                                                                                                                                                            r13_1 += r9_12;
                                                                                                                                                                                        
                                                                                                                                                                                        if (rbp_1 != 0)
                                                                                                                                                                                            rbp_1 += r9_14;
                                                                                                                                                                                        
                                                                                                                                                                                        if (r11_2 != 0)
                                                                                                                                                                                            r11_2 += r9_16;
                                                                                                                                                                                        
                                                                                                                                                                                        arg3[0xd] = rax_106;
                                                                                                                                                                                        arg3[1] = r9_18;
                                                                                                                                                                                        arg3[0xe] = var_178_1;
                                                                                                                                                                                        arg3[2] = var_18c_1;
                                                                                                                                                                                        arg3[5] = r8_4;
                                                                                                                                                                                        arg3[7] = rdx_31;
                                                                                                                                                                                        arg3[0xb] = rcx;
                                                                                                                                                                                        arg3[0x10] = var_174_1;
                                                                                                                                                                                        result = 1;
                                                                                                                                                                                        *arg3 = var_190_1;
                                                                                                                                                                                        arg3[3] = r10_3;
                                                                                                                                                                                        arg3[4] = var_188_1;
                                                                                                                                                                                        arg3[6] = var_184_1;
                                                                                                                                                                                        arg3[0xa] = var_180_1;
                                                                                                                                                                                        arg3[0xc] = var_17c_1;
                                                                                                                                                                                        arg3[0xf] = r13_1;
                                                                                                                                                                                        arg3[0x11] = rbp_1;
                                                                                                                                                                                        arg3[0x12] = r14_1;
                                                                                                                                                                                        arg3[0x13] = r11_2;
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            
                                                            goto label_180017a7c;
                                                        }
                                                    }
                                                }
                                            }
                                            
                                        label_180017a97:
                                            result = 0;
                                            break;
                                        }
                                    }
                                }
                            }
                            
                            result = 0;
                            break;
                        }
                        
                        break;
                    }
                }
            }
        }
    }
    
label_180017a7c:
    __security_check_cookie((rax_1 ^ &var_1c8));
    return result;
}

int64_t sub_180017ab0(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_1b8;
    int64_t rax_1 = (__security_cookie ^ &var_1b8);
    int64_t r11 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if (r11 != 0)
    {
        int32_t rbx_1 = *(arg1 + 0xc);
        
        if ((arg2 + 4) <= rbx_1)
        {
            int32_t r8 = arg1[2];
            arg1[1] = (arg2 + 4);
            int32_t r9_1 = *(arg2 + r11);
            
            if (r8 != 0)
                r9_1 = _bswap(r9_1);
            
            if ((arg2 + 8) <= rbx_1)
            {
                arg1[1] = (arg2 + 8);
                int32_t rax_5 = *((arg2 + 4) + r11);
                
                if (r8 != 0)
                    rax_5 = _bswap(rax_5);
                
                if (r8 != 0)
                    r9_1 = rax_5;
                
                void var_158;
                sub_180005050(arg1, r9_1, &var_158);
                int64_t i = *arg1;
                int32_t r9_2 = 0;
                int32_t rdx_1 = 0;
                
                while (i != 0)
                {
                    int32_t r8_2 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) > r8_2)
                        break;
                    
                    arg1[1] += 4;
                    int32_t rax_9 = (arg1[1] + 4);
                    
                    if (rax_9 > r8_2)
                        break;
                    
                    rdx_1 += 1;
                    arg1[1] = rax_9;
                    
                    if (rdx_1 >= 5)
                    {
                        while (true)
                        {
                            if (i == 0)
                                goto label_18001818c;
                            
                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                goto label_18001818c;
                            
                            arg1[1] += 4;
                            r9_2 += 1;
                            int32_t rbx_2 = arg1[1];
                            
                            if (r9_2 >= 0x15)
                            {
                                if (i == 0)
                                    break;
                                
                                int32_t r8_3 = *(arg1 + 0xc);
                                
                                if ((rbx_2 + 4) > r8_3)
                                    break;
                                
                                int32_t r11_1 = arg1[2];
                                arg1[1] = (rbx_2 + 4);
                                int32_t rax_14 = *(rbx_2 + i);
                                int32_t var_184_1 = rax_14;
                                
                                if (r11_1 != 0)
                                    var_184_1 = _bswap(rax_14);
                                
                                if ((rbx_2 + 8) > r8_3)
                                    break;
                                
                                arg1[1] += 4;
                                int32_t rbp_1 = arg1[1];
                                int32_t rax_18 = *((rbp_1 - 4) + i);
                                int32_t var_198_1 = rax_18;
                                
                                if (r11_1 != 0)
                                    var_198_1 = _bswap(rax_18);
                                
                                if ((rbp_1 + 4) > r8_3)
                                    result = 0;
                                else
                                {
                                    arg1[1] = (rbp_1 + 4);
                                    int32_t rax_22 = *(rbp_1 + i);
                                    int32_t var_180_1 = rax_22;
                                    
                                    if (r11_1 != 0)
                                        var_180_1 = _bswap(rax_22);
                                    
                                    if ((rbp_1 + 8) > r8_3)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r9_3 = arg1[1];
                                        int32_t rax_26 = *((r9_3 - 4) + i);
                                        int32_t var_194_1 = rax_26;
                                        
                                        if (r11_1 != 0)
                                            var_194_1 = _bswap(rax_26);
                                        
                                        if ((r9_3 + 4) > r8_3)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (r9_3 + 4);
                                            
                                            if ((r9_3 + 8) > r8_3)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t rdx_2 = arg1[1];
                                                
                                                if ((rdx_2 + 4) > r8_3)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (rdx_2 + 4);
                                                    
                                                    if ((rdx_2 + 8) > r8_3)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r9_5 = arg1[1];
                                                        
                                                        if ((r9_5 + 4) > r8_3)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] = (r9_5 + 4);
                                                            int32_t rax_34 = *(r9_5 + i);
                                                            int32_t var_17c_1 = rax_34;
                                                            
                                                            if (r11_1 != 0)
                                                                var_17c_1 = _bswap(rax_34);
                                                            
                                                            if ((r9_5 + 8) > r8_3)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r13_1 = arg1[1];
                                                                int32_t rax_38 = *((r13_1 - 4) + i);
                                                                int32_t var_190_1 = rax_38;
                                                                
                                                                if (r11_1 != 0)
                                                                    var_190_1 = _bswap(rax_38);
                                                                
                                                                if ((r13_1 + 4) > r8_3)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (r13_1 + 4);
                                                                    int32_t rax_42 = *(r13_1 + i);
                                                                    int32_t var_178_1 = rax_42;
                                                                    
                                                                    if (r11_1 != 0)
                                                                        var_178_1 = _bswap(rax_42);
                                                                    
                                                                    if ((r13_1 + 8) > r8_3)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t r9_7 = arg1[1];
                                                                        int32_t rax_46 = *((r9_7 - 4) + i);
                                                                        int32_t var_18c_1 = rax_46;
                                                                        
                                                                        if (r11_1 != 0)
                                                                            var_18c_1 = _bswap(rax_46);
                                                                        
                                                                        if ((r9_7 + 4) > r8_3)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (r9_7 + 4);
                                                                            int32_t rax_50 = *(r9_7 + i);
                                                                            int32_t var_174_1 = rax_50;
                                                                            
                                                                            if (r11_1 != 0)
                                                                                var_174_1 = _bswap(rax_50);
                                                                            
                                                                            if ((r9_7 + 8) > r8_3)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t r9_9 = arg1[1];
                                                                                int32_t rax_54 = *((r9_9 - 4) + i);
                                                                                int32_t var_188_1 = rax_54;
                                                                                
                                                                                if (r11_1 != 0)
                                                                                    var_188_1 = _bswap(rax_54);
                                                                                
                                                                                if ((r9_9 + 4) > r8_3)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (r9_9 + 4);
                                                                                    
                                                                                    if ((r9_9 + 8) > r8_3)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t rdx_4 = arg1[1];
                                                                                        
                                                                                        if ((rdx_4 + 4) > r8_3)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (rdx_4 + 4);
                                                                                            
                                                                                            if ((rdx_4 + 8) > r8_3)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t rdx_6 = arg1[1];
                                                                                                
                                                                                                if ((rdx_6 + 4) > r8_3)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (rdx_6 + 4);
                                                                                                    
                                                                                                    if ((rdx_6 + 8) > r8_3)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t r9_11 = arg1[1];
                                                                                                        
                                                                                                        if ((r9_11 + 4) > r8_3)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (r9_11 + 4);
                                                                                                            int32_t rax_64 = *(r9_11 + i);
                                                                                                            int32_t var_170_1 = rax_64;
                                                                                                            
                                                                                                            if (r11_1 != 0)
                                                                                                                var_170_1 = _bswap(rax_64);
                                                                                                            
                                                                                                            if ((r9_11 + 8) > r8_3)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t r9_13 = arg1[1];
                                                                                                                int32_t r15_1 = *((r9_13 - 4) + i);
                                                                                                                
                                                                                                                if (r11_1 != 0)
                                                                                                                    r15_1 = _bswap(r15_1);
                                                                                                                
                                                                                                                if ((r9_13 + 4) > r8_3)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] = (r9_13 + 4);
                                                                                                                    
                                                                                                                    if ((r9_13 + 8) > r8_3)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t rdx_8 = arg1[1];
                                                                                                                        
                                                                                                                        if ((rdx_8 + 4) > r8_3)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] = (rdx_8 + 4);
                                                                                                                            
                                                                                                                            if ((rdx_8 + 8) > r8_3)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                int32_t rdx_10 = arg1[1];
                                                                                                                                
                                                                                                                                if ((rdx_10 + 4) > r8_3)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] = (rdx_10 + 4);
                                                                                                                                    
                                                                                                                                    if ((rdx_10 + 8) > r8_3)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        int32_t rdx_12 = arg1[1];
                                                                                                                                        
                                                                                                                                        if ((rdx_12 + 4) > r8_3)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] = (rdx_12 + 4);
                                                                                                                                            
                                                                                                                                            if ((rdx_12 + 8) > r8_3)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int32_t rdx_14 = arg1[1];
                                                                                                                                                
                                                                                                                                                if ((rdx_14 + 4) > r8_3)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] = (rdx_14 + 4);
                                                                                                                                                    
                                                                                                                                                    if ((rdx_14 + 8) > r8_3)
                                                                                                                                                        result = 0;
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                        int32_t rdx_16 = arg1[1];
                                                                                                                                                        
                                                                                                                                                        if ((rdx_16 + 4) > r8_3)
                                                                                                                                                            result = 0;
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] = (rdx_16 + 4);
                                                                                                                                                            
                                                                                                                                                            if ((rdx_16 + 8) > r8_3)
                                                                                                                                                                result = 0;
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                int32_t r14_1 = arg1[1];
                                                                                                                                                                
                                                                                                                                                                if ((r14_1 + 4) > r8_3)
                                                                                                                                                                    result = 0;
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                    arg1[1] = (r14_1 + 4);
                                                                                                                                                                    int32_t r12_1 = *(r14_1 + i);
                                                                                                                                                                    
                                                                                                                                                                    if (r11_1 != 0)
                                                                                                                                                                        r12_1 = _bswap(r12_1);
                                                                                                                                                                    
                                                                                                                                                                    if ((r14_1 + 8) > r8_3)
                                                                                                                                                                        result = 0;
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                        int32_t rdi_1 = arg1[1];
                                                                                                                                                                        int32_t r9_15 = *((rdi_1 - 4) + i);
                                                                                                                                                                        
                                                                                                                                                                        if (r11_1 != 0)
                                                                                                                                                                            r9_15 = _bswap(r9_15);
                                                                                                                                                                        
                                                                                                                                                                        if ((rdi_1 + 4) > r8_3)
                                                                                                                                                                            result = 0;
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                            arg1[1] = (rdi_1 + 4);
                                                                                                                                                                            
                                                                                                                                                                            if ((rdi_1 + 8) > r8_3)
                                                                                                                                                                                result = 0;
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                                int32_t rdx_18 = arg1[1];
                                                                                                                                                                                
                                                                                                                                                                                if ((rdx_18 + 4) > r8_3)
                                                                                                                                                                                    result = 0;
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                    arg1[1] = (rdx_18 + 4);
                                                                                                                                                                                    
                                                                                                                                                                                    if ((rdx_18 + 8) > r8_3)
                                                                                                                                                                                        result = 0;
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                                        int32_t rdx_20 = arg1[1];
                                                                                                                                                                                        
                                                                                                                                                                                        if ((rdx_20 + 4) > r8_3)
                                                                                                                                                                                            result = 0;
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                            arg1[1] = (rdx_20 + 4);
                                                                                                                                                                                            
                                                                                                                                                                                            if ((rdx_20 + 8) > r8_3)
                                                                                                                                                                                                result = 0;
                                                                                                                                                                                            else
                                                                                                                                                                                            {
                                                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                                                int32_t rdx_22 = arg1[1];
                                                                                                                                                                                                
                                                                                                                                                                                                if ((rdx_22 + 4) > r8_3)
                                                                                                                                                                                                    result = 0;
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                    arg1[1] = (rdx_22 + 4);
                                                                                                                                                                                                    
                                                                                                                                                                                                    if ((rdx_22 + 8) > r8_3)
                                                                                                                                                                                                        result = 0;
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                                                        int32_t rdx_24 = arg1[1];
                                                                                                                                                                                                        
                                                                                                                                                                                                        if ((rdx_24 + 4) > r8_3)
                                                                                                                                                                                                            result = 0;
                                                                                                                                                                                                        else
                                                                                                                                                                                                        {
                                                                                                                                                                                                            int32_t r8_4 = var_198_1;
                                                                                                                                                                                                            arg1[1] = (rdx_24 + 4);
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (r8_4 != 0)
                                                                                                                                                                                                                r8_4 += (rbx_2 + 4);
                                                                                                                                                                                                            
                                                                                                                                                                                                            int32_t r10_2 = var_194_1;
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (r10_2 != 0)
                                                                                                                                                                                                                r10_2 += (rbp_1 + 4);
                                                                                                                                                                                                            
                                                                                                                                                                                                            int32_t rdx_25 = var_190_1;
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (rdx_25 != 0)
                                                                                                                                                                                                                rdx_25 += (r9_5 + 4);
                                                                                                                                                                                                            
                                                                                                                                                                                                            int32_t rcx = var_18c_1;
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (rcx != 0)
                                                                                                                                                                                                                rcx += (r13_1 + 4);
                                                                                                                                                                                                            
                                                                                                                                                                                                            int32_t rax_94 = var_188_1;
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (rax_94 != 0)
                                                                                                                                                                                                                rax_94 += (r9_7 + 4);
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (r15_1 != 0)
                                                                                                                                                                                                                r15_1 += (r9_11 + 4);
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (r9_15 != 0)
                                                                                                                                                                                                                r9_15 += (r14_1 + 4);
                                                                                                                                                                                                            
                                                                                                                                                                                                            *(arg3 + 0x14) = r8_4;
                                                                                                                                                                                                            *(arg3 + 0x3c) = rax_94;
                                                                                                                                                                                                            *(arg3 + 0x18) = var_180_1;
                                                                                                                                                                                                            *(arg3 + 0x2c) = rdx_25;
                                                                                                                                                                                                            *(arg3 + 0x34) = rcx;
                                                                                                                                                                                                            *(arg3 + 0x40) = var_170_1;
                                                                                                                                                                                                            result = 1;
                                                                                                                                                                                                            *(arg3 + 0x28) = var_17c_1;
                                                                                                                                                                                                            *(arg3 + 0x10) = var_184_1;
                                                                                                                                                                                                            *(arg3 + 0x1c) = r10_2;
                                                                                                                                                                                                            *(arg3 + 0x30) = var_178_1;
                                                                                                                                                                                                            *(arg3 + 0x38) = var_174_1;
                                                                                                                                                                                                            *(arg3 + 0x44) = r15_1;
                                                                                                                                                                                                            *(arg3 + 0x48) = r12_1;
                                                                                                                                                                                                            *(arg3 + 0x4c) = r9_15;
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                goto label_180018165;
                            }
                        }
                        
                        break;
                    }
                }
            }
        }
    }
    
label_18001818c:
    result = 0;
label_180018165:
    __security_check_cookie((rax_1 ^ &var_1b8));
    return result;
}

int64_t sub_180018190(int64_t* arg1, int32_t arg2, void* arg3)
{
    void var_1b8;
    int64_t rax_1 = (__security_cookie ^ &var_1b8);
    
    if (arg2 == 0)
    {
        __security_check_cookie((rax_1 ^ &var_1b8));
        return 0;
    }
    
    int64_t r10 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if (r10 != 0)
    {
        int32_t rbx_1 = *(arg1 + 0xc);
        
        if ((arg2 + 4) <= rbx_1)
        {
            int32_t r11_1 = arg1[2];
            arg1[1] = (arg2 + 4);
            int32_t r9_1 = *(arg2 + r10);
            
            if (r11_1 != 0)
                r9_1 = _bswap(r9_1);
            
            if ((arg2 + 8) <= rbx_1)
            {
                arg1[1] += 4;
                int32_t rax_7 = *((arg1[1] - 4) + r10);
                
                if (r11_1 != 0)
                    rax_7 = _bswap(rax_7);
                
                if (r11_1 != 0)
                    r9_1 = rax_7;
                
                void var_158;
                sub_180005050(arg1, r9_1, &var_158);
                int64_t i = *arg1;
                int32_t rdx_1 = 0;
                int32_t r8_2 = 0;
                
                while (i != 0)
                {
                    int32_t r10_1 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) > r10_1)
                        break;
                    
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r10_1)
                        break;
                    
                    arg1[1] += 4;
                    r8_2 += 1;
                    
                    if (r8_2 >= 5)
                    {
                        while (true)
                        {
                            if (i == 0)
                                goto label_1800188c3;
                            
                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                goto label_1800188c3;
                            
                            arg1[1] += 4;
                            rdx_1 += 1;
                            
                            if (rdx_1 >= 0x15)
                            {
                                if (i == 0)
                                    break;
                                
                                int32_t r8_3 = *(arg1 + 0xc);
                                
                                if ((arg1[1] + 4) > r8_3)
                                    break;
                                
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) > r8_3)
                                    break;
                                
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) > r8_3)
                                    break;
                                
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) > r8_3)
                                    break;
                                
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) > r8_3)
                                    break;
                                
                                arg1[1] += 4;
                                int32_t r11_2 = arg1[1];
                                int32_t r10_2 = arg1[2];
                                int32_t r12_1 = *((r11_2 - 4) + i);
                                
                                if (r10_2 != 0)
                                    r12_1 = _bswap(r12_1);
                                
                                if ((r11_2 + 4) > r8_3)
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t r11_3 = arg1[1];
                                    int32_t r15_1 = *((r11_3 - 4) + i);
                                    
                                    if (r10_2 != 0)
                                        r15_1 = _bswap(r15_1);
                                    
                                    if ((r11_3 + 4) > r8_3)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) > r8_3)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) > r8_3)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r11_4 = arg1[1];
                                                int32_t rax_33 = *((r11_4 - 4) + i);
                                                int32_t var_198_1 = rax_33;
                                                
                                                if (r10_2 != 0)
                                                    var_198_1 = _bswap(rax_33);
                                                
                                                if ((r11_4 + 4) > r8_3)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r11_5 = arg1[1];
                                                    int32_t r13_1 = *((r11_5 - 4) + i);
                                                    
                                                    if (r10_2 != 0)
                                                        r13_1 = _bswap(r13_1);
                                                    
                                                    if ((r11_5 + 4) > r8_3)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r11_6 = arg1[1];
                                                        int32_t rax_39 = *((r11_6 - 4) + i);
                                                        int32_t var_194_1 = rax_39;
                                                        
                                                        if (r10_2 != 0)
                                                            var_194_1 = _bswap(rax_39);
                                                        
                                                        if ((r11_6 + 4) > r8_3)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] += 4;
                                                            int32_t r11_7 = arg1[1];
                                                            int32_t rax_43 = *((r11_7 - 4) + i);
                                                            int32_t var_190_1 = rax_43;
                                                            
                                                            if (r10_2 != 0)
                                                                var_190_1 = _bswap(rax_43);
                                                            
                                                            if ((r11_7 + 4) > r8_3)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r11_8 = arg1[1];
                                                                int32_t rax_47 = *((r11_8 - 4) + i);
                                                                int32_t var_18c_1 = rax_47;
                                                                
                                                                if (r10_2 != 0)
                                                                    var_18c_1 = _bswap(rax_47);
                                                                
                                                                if ((r11_8 + 4) > r8_3)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t r11_9 = arg1[1];
                                                                    int32_t rax_51 = *((r11_9 - 4) + i);
                                                                    int32_t var_188_1 = rax_51;
                                                                    
                                                                    if (r10_2 != 0)
                                                                        var_188_1 = _bswap(rax_51);
                                                                    
                                                                    if ((r11_9 + 4) > r8_3)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t r11_10 = arg1[1];
                                                                        int32_t rax_55 = *((r11_10 - 4) + i);
                                                                        int32_t var_184_1 = rax_55;
                                                                        
                                                                        if (r10_2 != 0)
                                                                            var_184_1 = _bswap(rax_55);
                                                                        
                                                                        if ((r11_10 + 4) > r8_3)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] += 4;
                                                                            int32_t r11_11 = arg1[1];
                                                                            int32_t rax_59 = *((r11_11 - 4) + i);
                                                                            int32_t var_180_1 = rax_59;
                                                                            
                                                                            if (r10_2 != 0)
                                                                                var_180_1 = _bswap(rax_59);
                                                                            
                                                                            if ((r11_11 + 4) > r8_3)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                
                                                                                if ((arg1[1] + 4) > r8_3)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) > r8_3)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        
                                                                                        if ((arg1[1] + 4) > r8_3)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            
                                                                                            if ((arg1[1] + 4) > r8_3)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                
                                                                                                if ((arg1[1] + 4) > r8_3)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) > r8_3)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t r11_12 = arg1[1];
                                                                                                        int32_t rbp_1 = *((r11_12 - 4) + i);
                                                                                                        
                                                                                                        if (r10_2 != 0)
                                                                                                            rbp_1 = _bswap(rbp_1);
                                                                                                        
                                                                                                        if ((r11_12 + 4) > r8_3)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            int32_t r11_13 = arg1[1];
                                                                                                            int32_t rsi_1 = *((r11_13 - 4) + i);
                                                                                                            
                                                                                                            if (r10_2 != 0)
                                                                                                                rsi_1 = _bswap(rsi_1);
                                                                                                            
                                                                                                            if ((r11_13 + 4) > r8_3)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                
                                                                                                                if ((arg1[1] + 4) > r8_3)
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    
                                                                                                                    if ((arg1[1] + 4) > r8_3)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        
                                                                                                                        if ((arg1[1] + 4) > r8_3)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] += 4;
                                                                                                                            
                                                                                                                            if ((arg1[1] + 4) > r8_3)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                
                                                                                                                                if ((arg1[1] + 4) > r8_3)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] += 4;
                                                                                                                                    
                                                                                                                                    if ((arg1[1] + 4) > r8_3)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        
                                                                                                                                        if ((arg1[1] + 4) > r8_3)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] += 4;
                                                                                                                                            
                                                                                                                                            if ((arg1[1] + 4) > r8_3)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                
                                                                                                                                                if ((arg1[1] + 4) > r8_3)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                    
                                                                                                                                                    if ((arg1[1] + 4) > r8_3)
                                                                                                                                                        result = 0;
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                        
                                                                                                                                                        if ((arg1[1] + 4) > r8_3)
                                                                                                                                                            result = 0;
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                            
                                                                                                                                                            if ((arg1[1] + 4) > r8_3)
                                                                                                                                                                result = 0;
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                int32_t r14_1 = arg1[1];
                                                                                                                                                                int32_t rbx_2 = *((r14_1 - 4) + i);
                                                                                                                                                                
                                                                                                                                                                if (r10_2 != 0)
                                                                                                                                                                    rbx_2 = _bswap(rbx_2);
                                                                                                                                                                
                                                                                                                                                                if ((r14_1 + 4) > r8_3)
                                                                                                                                                                    result = 0;
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                    int32_t rdi_1 = arg1[1];
                                                                                                                                                                    int32_t r11_14 = *((rdi_1 - 4) + i);
                                                                                                                                                                    
                                                                                                                                                                    if (r10_2 != 0)
                                                                                                                                                                        r11_14 = _bswap(r11_14);
                                                                                                                                                                    
                                                                                                                                                                    if ((rdi_1 + 4) > r8_3)
                                                                                                                                                                        result = 0;
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                        
                                                                                                                                                                        if ((arg1[1] + 4) > r8_3)
                                                                                                                                                                            result = 0;
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                            
                                                                                                                                                                            if ((arg1[1] + 4) > r8_3)
                                                                                                                                                                                result = 0;
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                                
                                                                                                                                                                                if ((arg1[1] + 4) > r8_3)
                                                                                                                                                                                    result = 0;
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                                    
                                                                                                                                                                                    if ((arg1[1] + 4) > r8_3)
                                                                                                                                                                                        result = 0;
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                                        
                                                                                                                                                                                        if ((arg1[1] + 4) > r8_3)
                                                                                                                                                                                            result = 0;
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                                            
                                                                                                                                                                                            if ((arg1[1] + 4) > r8_3)
                                                                                                                                                                                                result = 0;
                                                                                                                                                                                            else
                                                                                                                                                                                            {
                                                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                                                
                                                                                                                                                                                                if ((arg1[1] + 4) > r8_3)
                                                                                                                                                                                                    result = 0;
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                                                    
                                                                                                                                                                                                    if ((arg1[1] + 4) > r8_3)
                                                                                                                                                                                                        result = 0;
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                                                        int32_t rax_123 = (r11_2 + r15_1);
                                                                                                                                                                                                        *(arg3 + 0x18) = r12_1;
                                                                                                                                                                                                        *(arg3 + 0x40) = rbp_1;
                                                                                                                                                                                                        
                                                                                                                                                                                                        if (r15_1 == 0)
                                                                                                                                                                                                            rax_123 = r15_1;
                                                                                                                                                                                                        
                                                                                                                                                                                                        *(arg3 + 0x48) = rbx_2;
                                                                                                                                                                                                        *(arg3 + 0x1c) = rax_123;
                                                                                                                                                                                                        *(arg3 + 0x20) = var_198_1;
                                                                                                                                                                                                        int32_t rax_126 = (r11_4 + r13_1);
                                                                                                                                                                                                        
                                                                                                                                                                                                        if (r13_1 == 0)
                                                                                                                                                                                                            rax_126 = r13_1;
                                                                                                                                                                                                        
                                                                                                                                                                                                        *(arg3 + 0x24) = rax_126;
                                                                                                                                                                                                        *(arg3 + 0x28) = var_194_1;
                                                                                                                                                                                                        int32_t rax_129 = (r11_6 + var_190_1);
                                                                                                                                                                                                        
                                                                                                                                                                                                        if (var_190_1 == 0)
                                                                                                                                                                                                            rax_129 = var_190_1;
                                                                                                                                                                                                        
                                                                                                                                                                                                        *(arg3 + 0x2c) = rax_129;
                                                                                                                                                                                                        *(arg3 + 0x30) = var_18c_1;
                                                                                                                                                                                                        int32_t rax_132 = (r11_8 + var_188_1);
                                                                                                                                                                                                        
                                                                                                                                                                                                        if (var_188_1 == 0)
                                                                                                                                                                                                            rax_132 = var_188_1;
                                                                                                                                                                                                        
                                                                                                                                                                                                        *(arg3 + 0x34) = rax_132;
                                                                                                                                                                                                        *(arg3 + 0x38) = var_184_1;
                                                                                                                                                                                                        int32_t rax_135 = (r11_10 + var_180_1);
                                                                                                                                                                                                        
                                                                                                                                                                                                        if (var_180_1 == 0)
                                                                                                                                                                                                            rax_135 = var_180_1;
                                                                                                                                                                                                        
                                                                                                                                                                                                        *(arg3 + 0x3c) = rax_135;
                                                                                                                                                                                                        int32_t rax_137 = (r11_12 + rsi_1);
                                                                                                                                                                                                        
                                                                                                                                                                                                        if (rsi_1 == 0)
                                                                                                                                                                                                            rax_137 = rsi_1;
                                                                                                                                                                                                        
                                                                                                                                                                                                        *(arg3 + 0x44) = rax_137;
                                                                                                                                                                                                        int32_t rax_138 = (r14_1 + r11_14);
                                                                                                                                                                                                        
                                                                                                                                                                                                        if (r11_14 == 0)
                                                                                                                                                                                                            rax_138 = r11_14;
                                                                                                                                                                                                        
                                                                                                                                                                                                        *(arg3 + 0x4c) = rax_138;
                                                                                                                                                                                                        result = 1;
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                goto label_18001889e;
                            }
                        }
                        
                        break;
                    }
                }
            }
        }
    }
    
label_1800188c3:
    result = 0;
label_18001889e:
    __security_check_cookie((rax_1 ^ &var_1b8));
    return result;
}

int64_t sub_1800188d0(int64_t* arg1, int32_t arg2, int32_t* arg3)
{
    void var_1c8;
    int64_t rax_1 = (__security_cookie ^ &var_1c8);
    int64_t r11 = *arg1;
    arg1[1] = arg2;
    int64_t result;
    
    if (r11 != 0)
    {
        int32_t rbx_1 = *(arg1 + 0xc);
        
        if ((arg2 + 4) <= rbx_1)
        {
            int32_t r8 = arg1[2];
            arg1[1] = (arg2 + 4);
            int32_t r9_1 = *(arg2 + r11);
            
            if (r8 != 0)
                r9_1 = _bswap(r9_1);
            
            if ((arg2 + 8) <= rbx_1)
            {
                arg1[1] = (arg2 + 8);
                int32_t rax_5 = *((arg2 + 4) + r11);
                
                if (r8 != 0)
                    rax_5 = _bswap(rax_5);
                
                if (r8 != 0)
                    r9_1 = rax_5;
                
                void var_158;
                sub_180005050(arg1, r9_1, &var_158);
                int64_t i = *arg1;
                int32_t r9_2 = 0;
                int32_t rdx_1 = 0;
                
                while (i != 0)
                {
                    int32_t r8_2 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) > r8_2)
                        break;
                    
                    arg1[1] += 4;
                    int32_t rax_9 = (arg1[1] + 4);
                    
                    if (rax_9 > r8_2)
                        break;
                    
                    rdx_1 += 1;
                    arg1[1] = rax_9;
                    
                    if (rdx_1 >= 5)
                    {
                        while (true)
                        {
                            if (i == 0)
                                goto label_1800190c2;
                            
                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                goto label_1800190c2;
                            
                            arg1[1] += 4;
                            r9_2 += 1;
                            int32_t rbx_2 = arg1[1];
                            
                            if (r9_2 >= 9)
                            {
                                if (i == 0)
                                    break;
                                
                                int32_t r8_3 = *(arg1 + 0xc);
                                
                                if ((rbx_2 + 4) > r8_3)
                                    break;
                                
                                int32_t r11_1 = arg1[2];
                                arg1[1] = (rbx_2 + 4);
                                int32_t rax_14 = *(rbx_2 + i);
                                int32_t var_190_1 = rax_14;
                                
                                if (r11_1 != 0)
                                    var_190_1 = _bswap(rax_14);
                                
                                if ((rbx_2 + 8) > r8_3)
                                    break;
                                
                                arg1[1] += 4;
                                int32_t rbp_1 = arg1[1];
                                int32_t rax_18 = *((rbp_1 - 4) + i);
                                int32_t var_1a8_1 = rax_18;
                                
                                if (r11_1 != 0)
                                    var_1a8_1 = _bswap(rax_18);
                                
                                if ((rbp_1 + 4) > r8_3)
                                    result = 0;
                                else
                                {
                                    arg1[1] = (rbp_1 + 4);
                                    int32_t rax_22 = *(rbp_1 + i);
                                    int32_t var_18c_1 = rax_22;
                                    
                                    if (r11_1 != 0)
                                        var_18c_1 = _bswap(rax_22);
                                    
                                    if ((rbp_1 + 8) > r8_3)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t r9_3 = arg1[1];
                                        int32_t rax_26 = *((r9_3 - 4) + i);
                                        int32_t var_1a4_1 = rax_26;
                                        
                                        if (r11_1 != 0)
                                            var_1a4_1 = _bswap(rax_26);
                                        
                                        if ((r9_3 + 4) > r8_3)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] = (r9_3 + 4);
                                            
                                            if ((r9_3 + 8) > r8_3)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t rdx_2 = arg1[1];
                                                
                                                if ((rdx_2 + 4) > r8_3)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] = (rdx_2 + 4);
                                                    
                                                    if ((rdx_2 + 8) > r8_3)
                                                        result = 0;
                                                    else
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t rdx_4 = arg1[1];
                                                        
                                                        if ((rdx_4 + 4) > r8_3)
                                                            result = 0;
                                                        else
                                                        {
                                                            arg1[1] = (rdx_4 + 4);
                                                            
                                                            if ((rdx_4 + 8) > r8_3)
                                                                result = 0;
                                                            else
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rdx_6 = arg1[1];
                                                                
                                                                if ((rdx_6 + 4) > r8_3)
                                                                    result = 0;
                                                                else
                                                                {
                                                                    arg1[1] = (rdx_6 + 4);
                                                                    
                                                                    if ((rdx_6 + 8) > r8_3)
                                                                        result = 0;
                                                                    else
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t rdx_8 = arg1[1];
                                                                        
                                                                        if ((rdx_8 + 4) > r8_3)
                                                                            result = 0;
                                                                        else
                                                                        {
                                                                            arg1[1] = (rdx_8 + 4);
                                                                            
                                                                            if ((rdx_8 + 8) > r8_3)
                                                                                result = 0;
                                                                            else
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t rdx_10 = arg1[1];
                                                                                
                                                                                if ((rdx_10 + 4) > r8_3)
                                                                                    result = 0;
                                                                                else
                                                                                {
                                                                                    arg1[1] = (rdx_10 + 4);
                                                                                    
                                                                                    if ((rdx_10 + 8) > r8_3)
                                                                                        result = 0;
                                                                                    else
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        int32_t rdx_12 = arg1[1];
                                                                                        
                                                                                        if ((rdx_12 + 4) > r8_3)
                                                                                            result = 0;
                                                                                        else
                                                                                        {
                                                                                            arg1[1] = (rdx_12 + 4);
                                                                                            
                                                                                            if ((rdx_12 + 8) > r8_3)
                                                                                                result = 0;
                                                                                            else
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                int32_t r14_1 = arg1[1];
                                                                                                
                                                                                                if ((r14_1 + 4) > r8_3)
                                                                                                    result = 0;
                                                                                                else
                                                                                                {
                                                                                                    arg1[1] = (r14_1 + 4);
                                                                                                    int32_t rax_44 = *(r14_1 + i);
                                                                                                    int32_t var_188_1 = rax_44;
                                                                                                    
                                                                                                    if (r11_1 != 0)
                                                                                                        var_188_1 = _bswap(rax_44);
                                                                                                    
                                                                                                    if ((r14_1 + 8) > r8_3)
                                                                                                        result = 0;
                                                                                                    else
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t r9_5 = arg1[1];
                                                                                                        int32_t rax_48 = *((r9_5 - 4) + i);
                                                                                                        int32_t var_1a0_1 = rax_48;
                                                                                                        
                                                                                                        if (r11_1 != 0)
                                                                                                            var_1a0_1 = _bswap(rax_48);
                                                                                                        
                                                                                                        if ((r9_5 + 4) > r8_3)
                                                                                                            result = 0;
                                                                                                        else
                                                                                                        {
                                                                                                            arg1[1] = (r9_5 + 4);
                                                                                                            
                                                                                                            if ((r9_5 + 8) > r8_3)
                                                                                                                result = 0;
                                                                                                            else
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                int32_t r13_1 = arg1[1];
                                                                                                                int32_t var_184_1;
                                                                                                                
                                                                                                                if ((r13_1 + 4) <= r8_3)
                                                                                                                {
                                                                                                                    arg1[1] = (r13_1 + 4);
                                                                                                                    int32_t rax_54 = *(r13_1 + i);
                                                                                                                    var_184_1 = rax_54;
                                                                                                                    
                                                                                                                    if (r11_1 != 0)
                                                                                                                        var_184_1 = _bswap(rax_54);
                                                                                                                }
                                                                                                                
                                                                                                                if (((r13_1 + 4) > r8_3 || (r13_1 + 8) > r8_3))
                                                                                                                    result = 0;
                                                                                                                else
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    int32_t r15_1 = arg1[1];
                                                                                                                    int32_t rax_58 = *((r15_1 - 4) + i);
                                                                                                                    int32_t var_19c_1 = rax_58;
                                                                                                                    
                                                                                                                    if (r11_1 != 0)
                                                                                                                        var_19c_1 = _bswap(rax_58);
                                                                                                                    
                                                                                                                    if ((r15_1 + 4) > r8_3)
                                                                                                                        result = 0;
                                                                                                                    else
                                                                                                                    {
                                                                                                                        arg1[1] = (r15_1 + 4);
                                                                                                                        int32_t rax_62 = *(r15_1 + i);
                                                                                                                        int32_t var_180_1 = rax_62;
                                                                                                                        
                                                                                                                        if (r11_1 != 0)
                                                                                                                            var_180_1 = _bswap(rax_62);
                                                                                                                        
                                                                                                                        if ((r15_1 + 8) > r8_3)
                                                                                                                            result = 0;
                                                                                                                        else
                                                                                                                        {
                                                                                                                            arg1[1] += 4;
                                                                                                                            int32_t r9_7 = arg1[1];
                                                                                                                            int32_t rax_66 = *((r9_7 - 4) + i);
                                                                                                                            int32_t var_198_1 = rax_66;
                                                                                                                            
                                                                                                                            if (r11_1 != 0)
                                                                                                                                var_198_1 = _bswap(rax_66);
                                                                                                                            
                                                                                                                            if ((r9_7 + 4) > r8_3)
                                                                                                                                result = 0;
                                                                                                                            else
                                                                                                                            {
                                                                                                                                arg1[1] = (r9_7 + 4);
                                                                                                                                int32_t rax_70 = *(r9_7 + i);
                                                                                                                                int32_t var_17c_1 = rax_70;
                                                                                                                                
                                                                                                                                if (r11_1 != 0)
                                                                                                                                    var_17c_1 = _bswap(rax_70);
                                                                                                                                
                                                                                                                                if ((r9_7 + 8) > r8_3)
                                                                                                                                    result = 0;
                                                                                                                                else
                                                                                                                                {
                                                                                                                                    arg1[1] += 4;
                                                                                                                                    int32_t r9_9 = arg1[1];
                                                                                                                                    int32_t rax_74 = *((r9_9 - 4) + i);
                                                                                                                                    int32_t var_194_1 = rax_74;
                                                                                                                                    
                                                                                                                                    if (r11_1 != 0)
                                                                                                                                        var_194_1 = _bswap(rax_74);
                                                                                                                                    
                                                                                                                                    if ((r9_9 + 4) > r8_3)
                                                                                                                                        result = 0;
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                        arg1[1] = (r9_9 + 4);
                                                                                                                                        int32_t rax_78 = *(r9_9 + i);
                                                                                                                                        int32_t var_178_1 = rax_78;
                                                                                                                                        
                                                                                                                                        if (r11_1 != 0)
                                                                                                                                            var_178_1 = _bswap(rax_78);
                                                                                                                                        
                                                                                                                                        if ((r9_9 + 8) > r8_3)
                                                                                                                                            result = 0;
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                            arg1[1] += 4;
                                                                                                                                            int32_t r9_11 = arg1[1];
                                                                                                                                            int32_t r12_1 = *((r9_11 - 4) + i);
                                                                                                                                            
                                                                                                                                            if (r11_1 != 0)
                                                                                                                                                r12_1 = _bswap(r12_1);
                                                                                                                                            
                                                                                                                                            if ((r9_11 + 4) > r8_3)
                                                                                                                                                result = 0;
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                                arg1[1] = (r9_11 + 4);
                                                                                                                                                
                                                                                                                                                if ((r9_11 + 8) > r8_3)
                                                                                                                                                    result = 0;
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                    int32_t rdx_14 = arg1[1];
                                                                                                                                                    
                                                                                                                                                    if ((rdx_14 + 4) > r8_3)
                                                                                                                                                        result = 0;
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                        arg1[1] = (rdx_14 + 4);
                                                                                                                                                        
                                                                                                                                                        if ((rdx_14 + 8) > r8_3)
                                                                                                                                                            result = 0;
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                            int32_t rdx_16 = arg1[1];
                                                                                                                                                            
                                                                                                                                                            if ((rdx_16 + 4) > r8_3)
                                                                                                                                                                result = 0;
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                                arg1[1] = (rdx_16 + 4);
                                                                                                                                                                
                                                                                                                                                                if ((rdx_16 + 8) > r8_3)
                                                                                                                                                                    result = 0;
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                    int32_t r9_13 = arg1[1];
                                                                                                                                                                    
                                                                                                                                                                    if ((r9_13 + 4) > r8_3)
                                                                                                                                                                        result = 0;
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                        arg1[1] = (r9_13 + 4);
                                                                                                                                                                        int32_t rax_90 = *(r9_13 + i);
                                                                                                                                                                        int32_t var_174_1 = rax_90;
                                                                                                                                                                        
                                                                                                                                                                        if (r11_1 != 0)
                                                                                                                                                                            var_174_1 = _bswap(rax_90);
                                                                                                                                                                        
                                                                                                                                                                        if ((r9_13 + 8) > r8_3)
                                                                                                                                                                            result = 0;
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                            int32_t r9_15 = arg1[1];
                                                                                                                                                                            int32_t rsi_1 = *((r9_15 - 4) + i);
                                                                                                                                                                            
                                                                                                                                                                            if (r11_1 != 0)
                                                                                                                                                                                rsi_1 = _bswap(rsi_1);
                                                                                                                                                                            
                                                                                                                                                                            if ((r9_15 + 4) > r8_3)
                                                                                                                                                                                result = 0;
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                                arg1[1] = (r9_15 + 4);
                                                                                                                                                                                
                                                                                                                                                                                if ((r9_15 + 8) > r8_3)
                                                                                                                                                                                    result = 0;
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                                    int32_t rdx_18 = arg1[1];
                                                                                                                                                                                    
                                                                                                                                                                                    if ((rdx_18 + 4) > r8_3)
                                                                                                                                                                                        result = 0;
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                        arg1[1] = (rdx_18 + 4);
                                                                                                                                                                                        
                                                                                                                                                                                        if ((rdx_18 + 8) > r8_3)
                                                                                                                                                                                            result = 0;
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                                            int32_t rdx_20 = arg1[1];
                                                                                                                                                                                            
                                                                                                                                                                                            if ((rdx_20 + 4) > r8_3)
                                                                                                                                                                                                result = 0;
                                                                                                                                                                                            else
                                                                                                                                                                                            {
                                                                                                                                                                                                arg1[1] = (rdx_20 + 4);
                                                                                                                                                                                                
                                                                                                                                                                                                if ((rdx_20 + 8) > r8_3)
                                                                                                                                                                                                    result = 0;
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                                                    int32_t rdx_22 = arg1[1];
                                                                                                                                                                                                    
                                                                                                                                                                                                    if ((rdx_22 + 4) > r8_3)
                                                                                                                                                                                                        result = 0;
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                        arg1[1] = (rdx_22 + 4);
                                                                                                                                                                                                        
                                                                                                                                                                                                        if ((rdx_22 + 8) > r8_3)
                                                                                                                                                                                                            result = 0;
                                                                                                                                                                                                        else
                                                                                                                                                                                                        {
                                                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                                                            int32_t rdx_24 = arg1[1];
                                                                                                                                                                                                            
                                                                                                                                                                                                            if ((rdx_24 + 4) > r8_3)
                                                                                                                                                                                                                result = 0;
                                                                                                                                                                                                            else
                                                                                                                                                                                                            {
                                                                                                                                                                                                                arg1[1] = (rdx_24 + 4);
                                                                                                                                                                                                                
                                                                                                                                                                                                                if ((rdx_24 + 8) > r8_3)
                                                                                                                                                                                                                    result = 0;
                                                                                                                                                                                                                else
                                                                                                                                                                                                                {
                                                                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                                                                    int32_t rdx_26 = arg1[1];
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if ((rdx_26 + 4) > r8_3)
                                                                                                                                                                                                                        result = 0;
                                                                                                                                                                                                                    else
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                        arg1[1] = (rdx_26 + 4);
                                                                                                                                                                                                                        
                                                                                                                                                                                                                        if ((rdx_26 + 8) > r8_3)
                                                                                                                                                                                                                            result = 0;
                                                                                                                                                                                                                        else
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                                                                            int32_t r9_17 = arg1[1];
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if ((r9_17 + 4) > r8_3)
                                                                                                                                                                                                                                result = 0;
                                                                                                                                                                                                                            else
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                arg1[1] = (r9_17 + 4);
                                                                                                                                                                                                                                int32_t rdx_28 = *(r9_17 + i);
                                                                                                                                                                                                                                
                                                                                                                                                                                                                                if (r11_1 != 0)
                                                                                                                                                                                                                                    rdx_28 = _bswap(rdx_28);
                                                                                                                                                                                                                                
                                                                                                                                                                                                                                if ((r9_17 + 8) > r8_3)
                                                                                                                                                                                                                                    result = 0;
                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                                                                                    int32_t rax_111 = *((arg1[1] - 4) + i);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    if (r11_1 != 0)
                                                                                                                                                                                                                                        rax_111 = _bswap(rax_111);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    if (var_1a8_1 != 0)
                                                                                                                                                                                                                                        var_1a8_1 += (rbx_2 + 4);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    int32_t rbx_4 = var_1a4_1;
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    if (rbx_4 != 0)
                                                                                                                                                                                                                                        rbx_4 += (rbp_1 + 4);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    int32_t r11_2 = var_1a0_1;
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    if (r11_2 != 0)
                                                                                                                                                                                                                                        r11_2 += (r14_1 + 4);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    int32_t r10_2 = var_19c_1;
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    if (r10_2 != 0)
                                                                                                                                                                                                                                        r10_2 += (r13_1 + 4);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    int32_t r8_4 = var_198_1;
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    if (r8_4 != 0)
                                                                                                                                                                                                                                        r8_4 += (r15_1 + 4);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    int32_t rcx_2 = var_194_1;
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    if (rcx_2 != 0)
                                                                                                                                                                                                                                        rcx_2 += (r9_7 + 4);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    if (r12_1 != 0)
                                                                                                                                                                                                                                        r12_1 += (r9_9 + 4);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    if (rsi_1 != 0)
                                                                                                                                                                                                                                        rsi_1 += (r9_13 + 4);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    if (rax_111 != 0)
                                                                                                                                                                                                                                        rax_111 += (r9_17 + 4);
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                    *arg3 = var_190_1;
                                                                                                                                                                                                                                    arg3[1] = var_1a8_1;
                                                                                                                                                                                                                                    arg3[2] = var_18c_1;
                                                                                                                                                                                                                                    arg3[6] = var_188_1;
                                                                                                                                                                                                                                    arg3[0xd] = rcx_2;
                                                                                                                                                                                                                                    arg3[8] = var_184_1;
                                                                                                                                                                                                                                    arg3[0xb] = r8_4;
                                                                                                                                                                                                                                    arg3[0xe] = var_178_1;
                                                                                                                                                                                                                                    arg3[0x13] = rax_111;
                                                                                                                                                                                                                                    result = 1;
                                                                                                                                                                                                                                    arg3[0xa] = var_180_1;
                                                                                                                                                                                                                                    arg3[3] = rbx_4;
                                                                                                                                                                                                                                    arg3[7] = r11_2;
                                                                                                                                                                                                                                    arg3[9] = r10_2;
                                                                                                                                                                                                                                    arg3[0xc] = var_17c_1;
                                                                                                                                                                                                                                    arg3[0xf] = r12_1;
                                                                                                                                                                                                                                    arg3[0x10] = var_174_1;
                                                                                                                                                                                                                                    arg3[0x11] = rsi_1;
                                                                                                                                                                                                                                    arg3[0x12] = rdx_28;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                
                                goto label_18001909b;
                            }
                        }
                        
                        break;
                    }
                }
            }
        }
    }
    
label_1800190c2:
    result = 0;
label_18001909b:
    __security_check_cookie((rax_1 ^ &var_1c8));
    return result;
}

int64_t sub_1800190d0(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_4b8;
    int64_t rax_1 = (__security_cookie ^ &var_4b8);
    int32_t result;
    
    if ((arg3 != 0 && arg2 != 0))
    {
        arg1[1] = arg3;
        result = sub_1800020d0(&data_1800306f0, arg2);
        
        if (result != 0)
        {
            int32_t i = 0;
            int32_t r14_1 = 0;
            void var_488;
            void var_378;
            void var_268;
            void var_158;
            
            if (arg2 == 0)
            {
            label_1800193de:
                int32_t r13_1 = 0;
                arg1[1] = arg3;
                
                if (arg2 > 0)
                {
                    do
                    {
                        int64_t r9_3 = *arg1;
                        int64_t rax_39 = ((r13_1 * 0x138) + data_180030710);
                        
                        if (r9_3 == 0)
                            goto label_1800196a4;
                        
                        int32_t r8_8 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        int32_t r10_2 = arg1[1];
                        int32_t rdx_7 = arg1[2];
                        int32_t r11_9 = *((r10_2 - 4) + r9_3);
                        
                        if (rdx_7 != 0)
                            r11_9 = _bswap(r11_9);
                        
                        if ((r10_2 + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        int32_t r10_3 = arg1[1];
                        int32_t rax_45 = *((r10_3 - 4) + r9_3);
                        
                        if (rdx_7 != 0)
                            rax_45 = _bswap(rax_45);
                        
                        if (rdx_7 != 0)
                            r11_9 = rax_45;
                        
                        if ((r10_3 + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        int32_t r10_4 = arg1[1];
                        int32_t rbp_2 = *((r10_4 - 4) + r9_3);
                        
                        if (rdx_7 != 0)
                            rbp_2 = _bswap(rbp_2);
                        
                        if ((r10_4 + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        int32_t r10_5 = arg1[1];
                        int32_t rax_50 = *((r10_5 - 4) + r9_3);
                        
                        if (rdx_7 != 0)
                            rax_50 = _bswap(rax_50);
                        
                        if (rdx_7 != 0)
                            rbp_2 = rax_50;
                        
                        if ((r10_5 + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        int32_t r10_6 = arg1[1];
                        int32_t rsi_2 = *((r10_6 - 4) + r9_3);
                        
                        if (rdx_7 != 0)
                            rsi_2 = _bswap(rsi_2);
                        
                        if ((r10_6 + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        int32_t r10_7 = arg1[1];
                        int32_t rax_55 = *((r10_7 - 4) + r9_3);
                        
                        if (rdx_7 != 0)
                            rax_55 = _bswap(rax_55);
                        
                        if (rdx_7 != 0)
                            rsi_2 = rax_55;
                        
                        if ((r10_7 + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        int32_t r10_8 = arg1[1];
                        int32_t rdi_2 = *((r10_8 - 4) + r9_3);
                        
                        if (rdx_7 != 0)
                            rdi_2 = _bswap(rdi_2);
                        
                        if ((r10_8 + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        int32_t r10_9 = arg1[1];
                        int32_t rax_60 = *((r10_9 - 4) + r9_3);
                        
                        if (rdx_7 != 0)
                            rax_60 = _bswap(rax_60);
                        
                        if (rdx_7 != 0)
                            rdi_2 = rax_60;
                        
                        if ((r10_9 + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        int32_t r12_1 = arg1[1];
                        int32_t r15_1 = *((r12_1 - 4) + r9_3);
                        
                        if (rdx_7 != 0)
                            r15_1 = _bswap(r15_1);
                        
                        if ((r12_1 + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        int32_t r10_10 = arg1[1];
                        int32_t r14_2 = *((r10_10 - 4) + r9_3);
                        
                        if (rdx_7 != 0)
                            r14_2 = _bswap(r14_2);
                        
                        if ((r10_10 + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > r8_8)
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        sub_180005050(arg1, r11_9, &var_158);
                        sub_180005050(arg1, rbp_2, &var_268);
                        sub_180005050(arg1, rsi_2, &var_378);
                        sub_180005050(arg1, rdi_2, &var_488);
                        int32_t rdx_12 = 7;
                        int32_t rax_71 = (data_1800306f0 - 0x38f);
                        
                        if ((rax_71 <= 0x17 && (TEST_BITD(0x880081, rax_71))))
                            rdx_12 = 5;
                        
                        int32_t rcx_5 = 0;
                        int32_t rdi_3;
                        
                        do
                        {
                            if (*arg1 == 0)
                                goto label_1800196a4;
                            
                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                goto label_1800196a4;
                            
                            arg1[1] += 4;
                            rcx_5 += 1;
                            rdi_3 = arg1[1];
                        } while (rcx_5 < rdx_12);
                        
                        int32_t r9_5 = (r12_1 + r14_2);
                        
                        if (r14_2 == 0)
                            r9_5 = r14_2;
                        
                        if (sub_1800196f0(arg1, rax_39, r15_1, r9_5) == 0)
                            goto label_1800196a4;
                        
                        r13_1 += 1;
                        arg1[1] = rdi_3;
                    } while (r13_1 < arg2);
                    
                    i = 0;
                }
                
                do
                {
                    if (*arg1 == 0)
                        goto label_1800196a4;
                    
                    if ((arg1[1] + 4) > *(arg1 + 0xc))
                        goto label_1800196a4;
                    
                    arg1[1] += 4;
                    i += 1;
                } while (i < 0x40);
                
                result = 1;
            }
            else
            {
                while (true)
                {
                    memset(&var_488, 0, 0x104);
                    int64_t r9_1 = *arg1;
                    
                    if (r9_1 == 0)
                        break;
                    
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r11_1 = arg1[1];
                    int32_t rdx = arg1[2];
                    int32_t r10_1 = *((r11_1 - 4) + r9_1);
                    
                    if (rdx != 0)
                        r10_1 = _bswap(r10_1);
                    
                    if ((r11_1 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r11_2 = arg1[1];
                    int32_t rax_7 = *((r11_2 - 4) + r9_1);
                    
                    if (rdx != 0)
                        rax_7 = _bswap(rax_7);
                    
                    if (rdx != 0)
                        r10_1 = rax_7;
                    
                    if ((r11_2 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r11_3 = arg1[1];
                    int32_t rbp_1 = *((r11_3 - 4) + r9_1);
                    
                    if (rdx != 0)
                        rbp_1 = _bswap(rbp_1);
                    
                    if ((r11_3 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r11_4 = arg1[1];
                    int32_t rax_12 = *((r11_4 - 4) + r9_1);
                    
                    if (rdx != 0)
                        rax_12 = _bswap(rax_12);
                    
                    if (rdx != 0)
                        rbp_1 = rax_12;
                    
                    if ((r11_4 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r11_5 = arg1[1];
                    int32_t rsi_1 = *((r11_5 - 4) + r9_1);
                    
                    if (rdx != 0)
                        rsi_1 = _bswap(rsi_1);
                    
                    if ((r11_5 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r11_6 = arg1[1];
                    int32_t rax_17 = *((r11_6 - 4) + r9_1);
                    
                    if (rdx != 0)
                        rax_17 = _bswap(rax_17);
                    
                    if (rdx != 0)
                        rsi_1 = rax_17;
                    
                    if ((r11_6 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r11_7 = arg1[1];
                    int32_t rdi_1 = *((r11_7 - 4) + r9_1);
                    
                    if (rdx != 0)
                        rdi_1 = _bswap(rdi_1);
                    
                    if ((r11_7 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    int32_t r11_8 = arg1[1];
                    int32_t rax_22 = *((r11_8 - 4) + r9_1);
                    
                    if (rdx != 0)
                        rax_22 = _bswap(rax_22);
                    
                    if (rdx != 0)
                        rdi_1 = rax_22;
                    
                    if ((r11_8 + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r8)
                        break;
                    
                    arg1[1] += 4;
                    sub_180005050(arg1, r10_1, &var_488);
                    sub_180005050(arg1, rbp_1, &var_378);
                    sub_180005050(arg1, rsi_1, &var_268);
                    sub_180005050(arg1, rdi_1, &var_158);
                    int32_t r9_2 = 7;
                    int32_t rax_33 = (data_1800306f0 - 0x38f);
                    
                    if ((rax_33 <= 0x17 && (TEST_BITD(0x880081, rax_33))))
                        r9_2 = 5;
                    
                    int32_t rcx_2 = 0;
                    
                    while (true)
                    {
                        if (*arg1 == 0)
                            goto label_1800196a4;
                        
                        if ((arg1[1] + 4) > *(arg1 + 0xc))
                            goto label_1800196a4;
                        
                        arg1[1] += 4;
                        rcx_2 += 1;
                        
                        if (rcx_2 >= r9_2)
                        {
                            void* r8_5 = data_180030710;
                            
                            if (r8_5 != 0)
                            {
                                void* rdx_6 = &var_488;
                                char* r8_7 = ((r8_5 + 0x34) + (r14_1 * 0x138));
                                char i_1;
                                
                                do
                                {
                                    i_1 = *rdx_6;
                                    rdx_6 += 1;
                                    *r8_7 = i_1;
                                    r8_7 = &r8_7[1];
                                } while (i_1 != 0);
                            }
                            
                            r14_1 += 1;
                            
                            if (r14_1 < arg2)
                                break;
                            
                            goto label_1800193de;
                        }
                    }
                }
                
            label_1800196a4:
                result = 0;
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_4b8));
    return result;
}

int64_t sub_1800196f0(int64_t* arg1, int64_t arg2, int32_t arg3, int32_t arg4)
{
    void var_258;
    int64_t rax_1 = (__security_cookie ^ &var_258);
    int64_t result;
    
    if (arg2 == 0)
        result = 0;
    else if ((arg4 != 0 && arg3 != 0))
    {
        int32_t rsi_1 = 0;
        arg1[1] = arg4;
        
        if (arg3 == 0)
        {
        label_1800198b1:
            result = 1;
        }
        else
        {
            while (true)
            {
                int64_t r9 = *arg1;
                
                if (r9 != 0)
                {
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= r8)
                    {
                        arg1[1] += 4;
                        int32_t rbx_1 = arg1[1];
                        int32_t r10_1 = arg1[2];
                        int32_t r11_1 = *((rbx_1 - 4) + r9);
                        
                        if (r10_1 != 0)
                            r11_1 = _bswap(r11_1);
                        
                        if ((rbx_1 + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t rbx_2 = arg1[1];
                            int32_t rax_7 = *((rbx_2 - 4) + r9);
                            
                            if (r10_1 != 0)
                                rax_7 = _bswap(rax_7);
                            
                            if (r10_1 != 0)
                                r11_1 = rax_7;
                            
                            if ((rbx_2 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t rdi_1 = arg1[1];
                                int32_t rbx_3 = *((rdi_1 - 4) + r9);
                                
                                if (r10_1 != 0)
                                    rbx_3 = _bswap(rbx_3);
                                
                                if ((rdi_1 + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    int32_t rdi_2 = arg1[1];
                                    int32_t rax_12 = *((rdi_2 - 4) + r9);
                                    
                                    if (r10_1 != 0)
                                        rax_12 = _bswap(rax_12);
                                    
                                    if (r10_1 != 0)
                                        rbx_3 = rax_12;
                                    
                                    if ((rdi_2 + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) <= r8)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= r8)
                                            {
                                                arg1[1] += 4;
                                                int32_t rdi_3 = arg1[1];
                                                
                                                if ((rdi_3 + 4) <= r8)
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r9_1 = *((arg1[1] - 4) + r9);
                                                    
                                                    if (r10_1 != 0)
                                                        r9_1 = _bswap(r9_1);
                                                    
                                                    void var_238;
                                                    sub_180005050(arg1, r11_1, &var_238);
                                                    void var_128;
                                                    sub_180005050(arg1, rbx_3, &var_128);
                                                    int32_t rax_21 = (rdi_3 + r9_1);
                                                    
                                                    if (r9_1 == 0)
                                                        rax_21 = r9_1;
                                                    
                                                    if (rax_21 != 0)
                                                    {
                                                        int32_t i = 0;
                                                        arg1[1] = rax_21;
                                                        
                                                        do
                                                        {
                                                            if (*arg1 == 0)
                                                                goto label_1800198e7;
                                                            
                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                goto label_1800198e7;
                                                            
                                                            arg1[1] += 4;
                                                            i += 1;
                                                        } while (i < 0x20);
                                                    }
                                                    
                                                    rsi_1 += 1;
                                                    arg1[1] = arg1[1];
                                                    
                                                    if (rsi_1 >= arg3)
                                                        goto label_1800198b1;
                                                    
                                                    continue;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                
            label_1800198e7:
                result = 0;
                break;
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_258));
    return result;
}

int64_t sub_1800198f0(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_498;
    int64_t rax_1 = (__security_cookie ^ &var_498);
    int32_t result;
    
    if ((arg3 != 0 && arg2 != 0))
    {
        arg1[1] = arg3;
        int32_t rax_2 = data_1800306f0;
        
        if ((rax_2 == 0x362 || rax_2 == 0x36d))
            result = sub_1800020d0(&data_1800306f0, arg2);
        
        if (((rax_2 != 0x362 && rax_2 != 0x36d) || result != 0))
        {
            int32_t r14_1 = 0;
            
            if (arg2 == 0)
            {
            label_180019bee:
                result = 1;
            }
            else
            {
                while (true)
                {
                    void var_478;
                    memset(&var_478, 0, 0x104);
                    int64_t r9_1 = *arg1;
                    
                    if (r9_1 != 0)
                    {
                        int32_t r8 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r11_1 = arg1[1];
                            int32_t rdx = arg1[2];
                            int32_t r10_1 = *((r11_1 - 4) + r9_1);
                            
                            if (rdx != 0)
                                r10_1 = _bswap(r10_1);
                            
                            if ((r11_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t r11_2 = arg1[1];
                                int32_t rax_8 = *((r11_2 - 4) + r9_1);
                                
                                if (rdx != 0)
                                    rax_8 = _bswap(rax_8);
                                
                                if (rdx != 0)
                                    r10_1 = rax_8;
                                
                                if ((r11_2 + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    int32_t r11_3 = arg1[1];
                                    int32_t rbp_1 = *((r11_3 - 4) + r9_1);
                                    
                                    if (rdx != 0)
                                        rbp_1 = _bswap(rbp_1);
                                    
                                    if ((r11_3 + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        int32_t r11_4 = arg1[1];
                                        int32_t rax_13 = *((r11_4 - 4) + r9_1);
                                        
                                        if (rdx != 0)
                                            rax_13 = _bswap(rax_13);
                                        
                                        if (rdx != 0)
                                            rbp_1 = rax_13;
                                        
                                        if ((r11_4 + 4) <= r8)
                                        {
                                            arg1[1] += 4;
                                            int32_t r11_5 = arg1[1];
                                            int32_t rsi_1 = *((r11_5 - 4) + r9_1);
                                            
                                            if (rdx != 0)
                                                rsi_1 = _bswap(rsi_1);
                                            
                                            if ((r11_5 + 4) <= r8)
                                            {
                                                arg1[1] += 4;
                                                int32_t r11_6 = arg1[1];
                                                int32_t rax_18 = *((r11_6 - 4) + r9_1);
                                                
                                                if (rdx != 0)
                                                    rax_18 = _bswap(rax_18);
                                                
                                                if (rdx != 0)
                                                    rsi_1 = rax_18;
                                                
                                                if ((r11_6 + 4) <= r8)
                                                {
                                                    arg1[1] += 4;
                                                    int32_t r11_7 = arg1[1];
                                                    int32_t rdi_1 = *((r11_7 - 4) + r9_1);
                                                    
                                                    if (rdx != 0)
                                                        rdi_1 = _bswap(rdi_1);
                                                    
                                                    if ((r11_7 + 4) <= r8)
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r11_8 = arg1[1];
                                                        int32_t rax_23 = *((r11_8 - 4) + r9_1);
                                                        
                                                        if (rdx != 0)
                                                            rax_23 = _bswap(rax_23);
                                                        
                                                        if (rdx != 0)
                                                            rdi_1 = rax_23;
                                                        
                                                        if ((r11_8 + 4) <= r8)
                                                        {
                                                            arg1[1] += 4;
                                                            
                                                            if ((arg1[1] + 4) <= r8)
                                                            {
                                                                arg1[1] += 4;
                                                                
                                                                if ((arg1[1] + 4) <= r8)
                                                                {
                                                                    arg1[1] += 4;
                                                                    
                                                                    if ((arg1[1] + 4) <= r8)
                                                                    {
                                                                        arg1[1] += 4;
                                                                        
                                                                        if ((arg1[1] + 4) <= r8)
                                                                        {
                                                                            arg1[1] += 4;
                                                                            
                                                                            if ((arg1[1] + 4) <= r8)
                                                                            {
                                                                                arg1[1] += 4;
                                                                                
                                                                                if (data_1800306f0 < 0x3c4)
                                                                                    goto label_180019b7a;
                                                                                
                                                                                if ((arg1[1] + 4) <= r8)
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) <= r8)
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                    label_180019b7a:
                                                                                        sub_180005050(arg1, r10_1, &var_478);
                                                                                        void var_368;
                                                                                        sub_180005050(arg1, rbp_1, &var_368);
                                                                                        void var_258;
                                                                                        sub_180005050(arg1, rsi_1, &var_258);
                                                                                        void var_148;
                                                                                        sub_180005050(arg1, rdi_1, &var_148);
                                                                                        void* r9_2 = data_180030710;
                                                                                        
                                                                                        if (r9_2 != 0)
                                                                                        {
                                                                                            void* rdx_5 = &var_478;
                                                                                            char* r8_6 = ((r9_2 + 0x34) + (r14_1 * 0x138));
                                                                                            char i;
                                                                                            
                                                                                            do
                                                                                            {
                                                                                                i = *rdx_5;
                                                                                                rdx_5 += 1;
                                                                                                *r8_6 = i;
                                                                                                r8_6 = &r8_6[1];
                                                                                            } while (i != 0);
                                                                                        }
                                                                                        
                                                                                        r14_1 += 1;
                                                                                        
                                                                                        if (r14_1 >= arg2)
                                                                                            goto label_180019bee;
                                                                                        
                                                                                        continue;
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_498));
    return result;
}

int64_t sub_180019c40(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_268;
    int64_t rax_1 = (__security_cookie ^ &var_268);
    int32_t result;
    
    if ((arg3 != 0 && arg2 != 0))
    {
        arg1[1] = arg3;
        result = sub_1800020d0(&data_1800306f0, arg2);
        
        if (result != 0)
        {
            int32_t rsi_1 = 0;
            
            if (arg2 == 0)
            {
            label_180019efc:
                result = 1;
            }
            else
            {
                while (true)
                {
                    void var_248;
                    memset(&var_248, 0, 0x104);
                    int64_t rdx = *arg1;
                    
                    if (rdx != 0)
                    {
                        int32_t r8 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r10_1 = arg1[1];
                            int32_t r9_1 = arg1[2];
                            int32_t r11_1 = *((r10_1 - 4) + rdx);
                            
                            if (r9_1 != 0)
                                r11_1 = _bswap(r11_1);
                            
                            if ((r10_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t r10_2 = arg1[1];
                                int32_t rax_7 = *((r10_2 - 4) + rdx);
                                
                                if (r9_1 != 0)
                                    rax_7 = _bswap(rax_7);
                                
                                if (r9_1 != 0)
                                    r11_1 = rax_7;
                                
                                if ((r10_2 + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    int32_t r10_3 = arg1[1];
                                    int32_t rdi_1 = *((r10_3 - 4) + rdx);
                                    
                                    if (r9_1 != 0)
                                        rdi_1 = _bswap(rdi_1);
                                    
                                    if ((r10_3 + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        int32_t r10_4 = arg1[1];
                                        int32_t rax_12 = *((r10_4 - 4) + rdx);
                                        
                                        if (r9_1 != 0)
                                            rax_12 = _bswap(rax_12);
                                        
                                        if (r9_1 != 0)
                                            rdi_1 = rax_12;
                                        
                                        if ((r10_4 + 4) <= r8)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= r8)
                                            {
                                                arg1[1] += 4;
                                                
                                                if ((arg1[1] + 4) <= r8)
                                                {
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) <= r8)
                                                    {
                                                        arg1[1] += 4;
                                                        
                                                        if ((arg1[1] + 4) <= r8)
                                                        {
                                                            arg1[1] += 4;
                                                            
                                                            if ((arg1[1] + 4) <= r8)
                                                            {
                                                                arg1[1] += 4;
                                                                
                                                                if ((arg1[1] + 4) <= r8)
                                                                {
                                                                    arg1[1] += 4;
                                                                    
                                                                    if ((arg1[1] + 4) <= r8)
                                                                    {
                                                                        arg1[1] += 4;
                                                                        
                                                                        if ((arg1[1] + 4) <= r8)
                                                                        {
                                                                            arg1[1] += 4;
                                                                            
                                                                            if ((arg1[1] + 4) <= r8)
                                                                            {
                                                                                arg1[1] += 4;
                                                                                
                                                                                if ((arg1[1] + 4) <= r8)
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) <= r8)
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        
                                                                                        if ((arg1[1] + 4) <= r8)
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            
                                                                                            if ((arg1[1] + 4) <= r8)
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                
                                                                                                if ((arg1[1] + 4) <= r8)
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) <= r8)
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        sub_180005050(arg1, r11_1, &var_248);
                                                                                                        void var_138;
                                                                                                        sub_180005050(arg1, rdi_1, &var_138);
                                                                                                        void* r9_2 = data_180030710;
                                                                                                        
                                                                                                        if (r9_2 != 0)
                                                                                                        {
                                                                                                            void* rdx_3 = &var_248;
                                                                                                            char* r8_4 = ((r9_2 + 0x34) + (rsi_1 * 0x138));
                                                                                                            char i;
                                                                                                            
                                                                                                            do
                                                                                                            {
                                                                                                                i = *rdx_3;
                                                                                                                rdx_3 += 1;
                                                                                                                *r8_4 = i;
                                                                                                                r8_4 = &r8_4[1];
                                                                                                            } while (i != 0);
                                                                                                        }
                                                                                                        
                                                                                                        rsi_1 += 1;
                                                                                                        
                                                                                                        if (rsi_1 >= arg2)
                                                                                                            goto label_180019efc;
                                                                                                        
                                                                                                        continue;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_268));
    return result;
}

int64_t sub_180019f30(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_288;
    int64_t rax_1 = (__security_cookie ^ &var_288);
    int32_t result;
    
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        
        if (arg2 != 0)
            result = sub_180001b50(&data_1800306f0, arg2);
        
        if ((arg2 == 0 || result != 0))
        {
            int32_t r13_1 = arg1[1];
            int32_t r15_1 = 0;
            int32_t rsi_1 = 0;
            void var_268;
            void var_158;
            
            if (arg2 == 0)
            {
            label_18001a14c:
                arg1[1] = r13_1;
                
                if (arg2 == 0)
                {
                label_18001a293:
                    result = 1;
                }
                else
                {
                    while (true)
                    {
                        int64_t r9_5 = *arg1;
                        int32_t* rbp_2 = ((r15_1 * 0x2f8) + data_180030720);
                        
                        if (r9_5 != 0)
                        {
                            int32_t rdx_7 = *(arg1 + 0xc);
                            
                            if ((r13_1 + 4) <= rdx_7)
                            {
                                int32_t r8_4 = arg1[2];
                                arg1[1] = (r13_1 + 4);
                                int32_t r10_2 = *(r13_1 + r9_5);
                                
                                if (r8_4 != 0)
                                    r10_2 = _bswap(r10_2);
                                
                                if ((r13_1 + 8) <= rdx_7)
                                {
                                    arg1[1] += 4;
                                    int32_t r11_3 = arg1[1];
                                    int32_t rax_21 = *((r11_3 - 4) + r9_5);
                                    
                                    if (r8_4 != 0)
                                        rax_21 = _bswap(rax_21);
                                    
                                    if (r8_4 != 0)
                                        r10_2 = rax_21;
                                    
                                    if ((r11_3 + 4) <= rdx_7)
                                    {
                                        arg1[1] += 4;
                                        int32_t r11_4 = arg1[1];
                                        int32_t rsi_2 = *((r11_4 - 4) + r9_5);
                                        
                                        if (r8_4 != 0)
                                            rsi_2 = _bswap(rsi_2);
                                        
                                        if ((r11_4 + 4) <= rdx_7)
                                        {
                                            arg1[1] += 4;
                                            int32_t r11_5 = arg1[1];
                                            int32_t rax_26 = *((r11_5 - 4) + r9_5);
                                            
                                            if (r8_4 != 0)
                                                rax_26 = _bswap(rax_26);
                                            
                                            if (r8_4 != 0)
                                                rsi_2 = rax_26;
                                            
                                            if ((r11_5 + 4) <= rdx_7)
                                            {
                                                arg1[1] += 4;
                                                int32_t r14_1 = arg1[1];
                                                
                                                if ((r14_1 + 4) <= rdx_7)
                                                {
                                                    arg1[1] += 4;
                                                    int32_t rdi_3 = *((arg1[1] - 4) + r9_5);
                                                    
                                                    if (r8_4 != 0)
                                                        rdi_3 = _bswap(rdi_3);
                                                    
                                                    sub_180005050(arg1, r10_2, &var_158);
                                                    int64_t r8_7 = sub_180005050(arg1, rsi_2, &var_268);
                                                    r13_1 = arg1[1];
                                                    int32_t r9_6 = (r14_1 + rdi_3);
                                                    
                                                    if (rdi_3 == 0)
                                                        r9_6 = rdi_3;
                                                    
                                                    if (sub_18001a2f0(arg1, rbp_2, r8_7, r9_6) != 0)
                                                    {
                                                        r15_1 += 1;
                                                        arg1[1] = r13_1;
                                                        
                                                        if (r15_1 >= arg2)
                                                            goto label_18001a293;
                                                        
                                                        continue;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        
                        result = 0;
                        break;
                    }
                }
            }
            else
            {
                while (true)
                {
                    memset(&var_268, 0, 0x104);
                    memset(&var_158, 0, 0x104);
                    int64_t r11_1 = *arg1;
                    
                    if (r11_1 != 0)
                    {
                        int32_t r8 = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r9_1 = arg1[1];
                            int32_t r10_1 = arg1[2];
                            int32_t rdx = *((r9_1 - 4) + r11_1);
                            
                            if (r10_1 != 0)
                                rdx = _bswap(rdx);
                            
                            if ((r9_1 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t r9_2 = arg1[1];
                                int32_t rax_7 = *((r9_2 - 4) + r11_1);
                                
                                if (r10_1 != 0)
                                    rax_7 = _bswap(rax_7);
                                
                                if (r10_1 != 0)
                                    rdx = rax_7;
                                
                                if ((r9_2 + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    int32_t rdi_1 = arg1[1];
                                    int32_t r9_3 = *((rdi_1 - 4) + r11_1);
                                    
                                    if (r10_1 != 0)
                                        r9_3 = _bswap(r9_3);
                                    
                                    if ((rdi_1 + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        int32_t rdi_2 = arg1[1];
                                        int32_t rax_12 = *((rdi_2 - 4) + r11_1);
                                        
                                        if (r10_1 != 0)
                                            rax_12 = _bswap(rax_12);
                                        
                                        if (r10_1 != 0)
                                            r9_3 = rax_12;
                                        
                                        if ((rdi_2 + 4) <= r8)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= r8)
                                            {
                                                arg1[1] += 4;
                                                sub_180005050(arg1, rdx, &var_268);
                                                sub_180005050(arg1, r9_3, &var_158);
                                                void* r9_4 = data_180030720;
                                                
                                                if (r9_4 != 0)
                                                {
                                                    int64_t r8_3 = (rsi_1 * 0x2f8);
                                                    void* rcx_3 = &var_268;
                                                    char* rdx_3 = ((r9_4 + 0xe8) + r8_3);
                                                    char i;
                                                    
                                                    do
                                                    {
                                                        i = *rcx_3;
                                                        rcx_3 += 1;
                                                        *rdx_3 = i;
                                                        rdx_3 = &rdx_3[1];
                                                    } while (i != 0);
                                                    void* rcx_4 = &var_158;
                                                    char* rdx_6 = ((data_180030720 + 0x1ec) + r8_3);
                                                    char i_1;
                                                    
                                                    do
                                                    {
                                                        i_1 = *rcx_4;
                                                        rcx_4 += 1;
                                                        *rdx_6 = i_1;
                                                        rdx_6 = &rdx_6[1];
                                                    } while (i_1 != 0);
                                                }
                                                
                                                rsi_1 += 1;
                                                
                                                if (rsi_1 >= arg2)
                                                    goto label_18001a14c;
                                                
                                                continue;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_288));
    return result;
}

uint64_t sub_18001a2f0(int64_t* arg1, int32_t* arg2, int64_t arg3, int32_t arg4)
{
    if (arg2 != 0)
    {
        if (arg4 == 0)
            return (arg4 + 1);
        
        arg1[1] = arg4;
        int32_t rax_3 = data_1800306f0;
        
        if (rax_3 == 0x30b)
        {
            int32_t rcx;
            rcx = sub_18001a460(arg1, arg2) != 0;
            return rcx;
        }
        
        if ((rax_3 == 0x362 || rax_3 == 0x36d))
        {
            int32_t rcx_2;
            rcx_2 = sub_180012ed0(arg1, arg2) != 0;
            return rcx_2;
        }
        
        int64_t r10_1 = *arg1;
        
        if (r10_1 != 0)
        {
            int32_t rdx = *(arg1 + 0xc);
            
            if ((arg4 + 4) <= rdx)
            {
                arg1[1] = (arg4 + 4);
                
                if ((arg4 + 6) <= rdx)
                {
                    arg1[1] += 2;
                    int32_t r9 = arg1[1];
                    int16_t r11_1 = *((r9 - 2) + r10_1);
                    
                    if (arg1[2] != 0)
                        r11_1 = (ROLW(r11_1, 8));
                    
                    if ((r9 + 2) <= rdx)
                    {
                        arg1[1] += 2;
                        
                        if ((arg1[1] + 4) <= rdx)
                        {
                            arg1[1] += 4;
                            int32_t rdi_1 = arg1[1];
                            int32_t r9_1 = *((rdi_1 - 4) + r10_1);
                            
                            if (arg1[2] != 0)
                                r9_1 = _bswap(r9_1);
                            
                            if ((rdi_1 + 4) <= rdx)
                            {
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) <= rdx)
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) <= rdx)
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) <= rdx)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= rdx)
                                            {
                                                arg1[1] += 4;
                                                int32_t rax_22 = arg1[1];
                                                
                                                if (r9_1 != 0)
                                                    rax_22 = r9_1;
                                                
                                                arg1[1] = rax_22;
                                                int32_t rcx_1;
                                                rcx_1 = sub_18001b7d0(arg1, arg2, arg3, r11_1) != 0;
                                                return rcx_1;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    return 0;
}

uint64_t sub_18001a460(int64_t* arg1, int32_t* arg2)
{
    int64_t var_110 = -2;
    void var_168;
    int64_t rax_1 = (__security_cookie ^ &var_168);
    uint64_t result;
    
    if (arg2 == 0)
        result = 0;
    else
    {
        int32_t result_1 = 0;
        int32_t var_138_1 = 0;
        int64_t r9_1 = *arg1;
        
        if (r9_1 == 0)
            result = 0;
        else
        {
            int32_t rax_3 = (arg1[1] + 4);
            int32_t r8_1 = *(arg1 + 0xc);
            
            if (rax_3 > r8_1)
                result = 0;
            else
            {
                arg1[1] = rax_3;
                
                if ((rax_3 + 4) > r8_1)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t r10_1 = arg1[1];
                    int32_t rdi_1 = *((r10_1 - 4) + r9_1);
                    int32_t var_134_1 = rdi_1;
                    int32_t r11_1 = arg1[2];
                    
                    if (r11_1 != 0)
                        var_134_1 = ((((rdi_1 >> 0x18) | ((rdi_1 >> 8) & 0xff00)) | ((rdi_1 & 0xff00) << 8)) | (rdi_1 << 0x18));
                    
                    if ((r10_1 + 4) > r8_1)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > r8_1)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            
                            if ((arg1[1] + 4) > r8_1)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r10_2 = arg1[1];
                                int32_t r8_2 = *((r10_2 - 4) + r9_1);
                                
                                if (r11_1 != 0)
                                    r8_2 = ((((r8_2 >> 0x18) | ((r8_2 >> 8) & 0xff00)) | ((r8_2 & 0xff00) << 8)) | (r8_2 << 0x18));
                                
                                int32_t rax_18 = (r10_2 + r8_2);
                                
                                if (r8_2 == 0)
                                    rax_18 = r8_2;
                                
                                int64_t var_11c_1 = 0;
                                int32_t var_120 = 0;
                                int64_t var_54_1 = 0;
                                int32_t s = 0;
                                
                                if (sub_18001d5c0(arg1, &var_120) == 0)
                                    result = 0;
                                else if (sub_18001d5c0(arg1, &s) == 0)
                                    result = 0;
                                else
                                {
                                    int32_t var_108;
                                    sub_1800010c0(&var_108);
                                    __builtin_memset(&s, 0, 0x14);
                                    int32_t rsi_1 = 0;
                                    int64_t i = *arg1;
                                    int64_t r9_2 = 0;
                                    
                                    while (i != 0)
                                    {
                                        int32_t rcx_9 = *(arg1 + 0xc);
                                        
                                        if ((arg1[1] + 4) > rcx_9)
                                            break;
                                        
                                        arg1[1] += 4;
                                        int32_t r10_3 = arg1[1];
                                        
                                        if ((r10_3 + 4) > rcx_9)
                                            break;
                                        
                                        arg1[1] += 4;
                                        int32_t r11_2 = arg1[1];
                                        int32_t r8_6 = *((r11_2 - 4) + i);
                                        
                                        if (arg1[2] != 0)
                                            r8_6 = ((((r8_6 >> 0x18) | ((r8_6 >> 8) & 0xff00)) | ((r8_6 & 0xff00) << 8)) | (r8_6 << 0x18));
                                        
                                        if (r9_2 == 0)
                                        {
                                            rsi_1 = (r9_2 + 5);
                                            var_138_1 = r8_6;
                                        }
                                        
                                        if (r8_6 != 0)
                                            &s[r9_2] = (r8_6 + r10_3);
                                        
                                        r9_2 += 1;
                                        
                                        if (r9_2 >= 5)
                                        {
                                            int32_t var_104_1 = rsi_1;
                                            
                                            if (i != 0)
                                            {
                                                int32_t r15_1 = *(arg1 + 0xc);
                                                
                                                if ((r11_2 + 4) <= r15_1)
                                                {
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) <= r15_1)
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r8_10 = arg1[1];
                                                        int32_t r9_3 = *((r8_10 - 4) + i);
                                                        int32_t r13_1 = arg1[2];
                                                        
                                                        if (r13_1 != 0)
                                                            r9_3 = ((((r9_3 >> 0x18) | ((r9_3 >> 8) & 0xff00)) | ((r9_3 & 0xff00) << 8)) | (r9_3 << 0x18));
                                                        
                                                        if ((r8_10 + 4) <= r15_1)
                                                        {
                                                            arg1[1] += 4;
                                                            
                                                            if ((arg1[1] + 4) <= r15_1)
                                                            {
                                                                arg1[1] += 4;
                                                                
                                                                if ((arg1[1] + 4) <= r15_1)
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t s_1 = s;
                                                                    
                                                                    if (s_1 != 0)
                                                                        arg1[1] = s_1;
                                                                    
                                                                    int32_t rcx_16 = 0;
                                                                    
                                                                    if (rsi_1 > 0)
                                                                    {
                                                                        do
                                                                        {
                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                goto label_18001abdd;
                                                                            
                                                                            arg1[1] += 4;
                                                                            rcx_16 += 1;
                                                                        } while (rcx_16 < rsi_1);
                                                                    }
                                                                    
                                                                    int32_t rax_43 = var_54_1;
                                                                    
                                                                    if (rax_43 != 0)
                                                                        arg1[1] = rax_43;
                                                                    
                                                                    int32_t r9_8 = 0;
                                                                    int64_t r14_1 = rsi_1;
                                                                    
                                                                    if (rsi_1 > 0)
                                                                    {
                                                                        int64_t r11_3 = 0;
                                                                        void var_fc;
                                                                        void* r10_4 = &var_fc;
                                                                        
                                                                        do
                                                                        {
                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                goto label_18001abdd;
                                                                            
                                                                            arg1[1] += 4;
                                                                            int32_t r8_11 = *((arg1[1] - 4) + i);
                                                                            
                                                                            if (r13_1 != 0)
                                                                                r8_11 = ((((r8_11 >> 0x18) | ((r8_11 >> 8) & 0xff00)) | ((r8_11 & 0xff00) << 8)) | (r8_11 << 0x18));
                                                                            
                                                                            if (r9_8 < var_108)
                                                                                *r10_4 = r8_11;
                                                                            
                                                                            r9_8 += 1;
                                                                            r11_3 += 1;
                                                                            r10_4 += 0x10;
                                                                        } while (r11_3 < r14_1);
                                                                    }
                                                                    
                                                                    int32_t rax_51 = *var_54_1[4];
                                                                    
                                                                    if (rax_51 != 0)
                                                                        arg1[1] = rax_51;
                                                                    
                                                                    int32_t r9_9 = 0;
                                                                    
                                                                    if (rsi_1 > 0)
                                                                    {
                                                                        int64_t r11_4 = 0;
                                                                        void var_f8;
                                                                        void* r10_5 = &var_f8;
                                                                        
                                                                        do
                                                                        {
                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                goto label_18001abdd;
                                                                            
                                                                            arg1[1] += 4;
                                                                            int32_t r8_15 = *((arg1[1] - 4) + i);
                                                                            
                                                                            if (r13_1 != 0)
                                                                                r8_15 = ((((r8_15 >> 0x18) | ((r8_15 >> 8) & 0xff00)) | ((r8_15 & 0xff00) << 8)) | (r8_15 << 0x18));
                                                                            
                                                                            if (r9_9 < var_108)
                                                                                *r10_5 = r8_15;
                                                                            
                                                                            r9_9 += 1;
                                                                            r11_4 += 1;
                                                                            r10_5 += 0x10;
                                                                        } while (r11_4 < r14_1);
                                                                    }
                                                                    
                                                                    int32_t var_4c;
                                                                    
                                                                    if (var_4c != 0)
                                                                        arg1[1] = var_4c;
                                                                    
                                                                    int32_t r9_10 = 0;
                                                                    
                                                                    if (rsi_1 > 0)
                                                                    {
                                                                        int64_t r11_5 = 0;
                                                                        void var_f4;
                                                                        void* r10_6 = &var_f4;
                                                                        
                                                                        do
                                                                        {
                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                goto label_18001abdd;
                                                                            
                                                                            arg1[1] += 4;
                                                                            int32_t r8_19 = *((arg1[1] - 4) + i);
                                                                            
                                                                            if (r13_1 != 0)
                                                                                r8_19 = ((((r8_19 >> 0x18) | ((r8_19 >> 8) & 0xff00)) | ((r8_19 & 0xff00) << 8)) | (r8_19 << 0x18));
                                                                            
                                                                            if (r9_10 < var_108)
                                                                                *r10_6 = r8_19;
                                                                            
                                                                            r9_10 += 1;
                                                                            r11_5 += 1;
                                                                            r10_6 += 0x10;
                                                                        } while (r11_5 < r14_1);
                                                                    }
                                                                    
                                                                    int32_t var_48;
                                                                    
                                                                    if (var_48 != 0)
                                                                        arg1[1] = var_48;
                                                                    
                                                                    int32_t rcx_26 = 0;
                                                                    
                                                                    if (rsi_1 > 0)
                                                                    {
                                                                        do
                                                                        {
                                                                            if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                goto label_18001abdd;
                                                                            
                                                                            arg1[1] += 4;
                                                                            rcx_26 += 1;
                                                                        } while (rcx_26 < rsi_1);
                                                                    }
                                                                    
                                                                    if ((arg1[1] + 4) <= r15_1)
                                                                    {
                                                                        arg1[1] += 4;
                                                                        
                                                                        if ((arg1[1] + 4) <= r15_1)
                                                                        {
                                                                            arg1[1] += 4;
                                                                            
                                                                            if (rax_18 != 0)
                                                                                arg1[1] = rax_18;
                                                                            
                                                                            if ((arg1[1] + 4) <= r15_1)
                                                                            {
                                                                                arg1[1] += 4;
                                                                                
                                                                                if ((arg1[1] + 4) <= r15_1)
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    
                                                                                    if ((arg1[1] + 4) <= r15_1)
                                                                                    {
                                                                                        arg1[1] += 4;
                                                                                        
                                                                                        if ((arg1[1] + 4) <= r15_1)
                                                                                        {
                                                                                            arg1[1] += 4;
                                                                                            int32_t rsi_2 = *((arg1[1] - 4) + i);
                                                                                            
                                                                                            if (r13_1 != 0)
                                                                                                rsi_2 = ((((rsi_2 >> 0x18) | ((rsi_2 >> 8) & 0xff00)) | ((rsi_2 & 0xff00) << 8)) | (rsi_2 << 0x18));
                                                                                            
                                                                                            if (r9_3 != 0xfffffffc)
                                                                                                arg1[1] = (r9_3 + 4);
                                                                                            
                                                                                            int32_t r9_11 = arg1[1];
                                                                                            int32_t rax_90;
                                                                                            
                                                                                            if (r9_11 != 0)
                                                                                                rax_90 = sub_180005100(arg1, arg2, var_134_1, r9_11, var_138_1, &var_108);
                                                                                            
                                                                                            if ((r9_11 == 0 || rax_90 != 0))
                                                                                            {
                                                                                                int64_t rdx_19 = *arg1;
                                                                                                
                                                                                                if (rdx_19 != 0)
                                                                                                {
                                                                                                    int32_t r10_7 = *(arg1 + 0xc);
                                                                                                    
                                                                                                    if ((arg1[1] + 4) <= r10_7)
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        int32_t r11_6 = arg1[1];
                                                                                                        int32_t r9_12 = *((r11_6 - 4) + rdx_19);
                                                                                                        
                                                                                                        if (arg1[2] != 0)
                                                                                                            r9_12 = ((((r9_12 << 0x18) | (r9_12 >> 0x18)) | ((r9_12 >> 8) & 0xff00)) | ((r9_12 & 0xff00) << 8));
                                                                                                        
                                                                                                        if (r9_12 != 0)
                                                                                                            goto label_18001aaaa;
                                                                                                        
                                                                                                        if ((r11_6 + 4) <= r10_7)
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                        label_18001aaaa:
                                                                                                            int32_t rax_96;
                                                                                                            
                                                                                                            if (rsi_2 != 0)
                                                                                                                rax_96 = sub_180001e80(arg2, rsi_2);
                                                                                                            
                                                                                                            if ((rsi_2 == 0 || rax_96 != 0))
                                                                                                            {
                                                                                                                int32_t r14_2 = 0;
                                                                                                                
                                                                                                                if (rsi_2 != 0)
                                                                                                                {
                                                                                                                    int64_t r10_8 = 0;
                                                                                                                    
                                                                                                                    do
                                                                                                                    {
                                                                                                                        int64_t rdx_23 = *arg1;
                                                                                                                        
                                                                                                                        if (rdx_23 == 0)
                                                                                                                            goto label_18001abdd;
                                                                                                                        
                                                                                                                        int32_t r11_7 = *(arg1 + 0xc);
                                                                                                                        
                                                                                                                        if ((arg1[1] + 2) > r11_7)
                                                                                                                            goto label_18001abdd;
                                                                                                                        
                                                                                                                        arg1[1] += 2;
                                                                                                                        int32_t r9_17 = arg1[1];
                                                                                                                        uint16_t r8_27 = *((r9_17 - 2) + rdx_23);
                                                                                                                        int32_t rdi_6 = arg1[2];
                                                                                                                        
                                                                                                                        if (rdi_6 != 0)
                                                                                                                            r8_27 = ((r8_27 >> 8) | (r8_27 << 8));
                                                                                                                        
                                                                                                                        if ((r9_17 + 2) > r11_7)
                                                                                                                            goto label_18001abdd;
                                                                                                                        
                                                                                                                        arg1[1] += 2;
                                                                                                                        int32_t r15_2 = arg1[1];
                                                                                                                        uint16_t r9_18 = *((r15_2 - 2) + rdx_23);
                                                                                                                        
                                                                                                                        if (rdi_6 != 0)
                                                                                                                            r9_18 = ((r9_18 >> 8) | (r9_18 << 8));
                                                                                                                        
                                                                                                                        if ((r15_2 + 2) > r11_7)
                                                                                                                            goto label_18001abdd;
                                                                                                                        
                                                                                                                        arg1[1] += 2;
                                                                                                                        uint16_t rdx_24 = *((arg1[1] - 2) + rdx_23);
                                                                                                                        
                                                                                                                        if (rdi_6 != 0)
                                                                                                                            rdx_24 = ((rdx_24 >> 8) | (rdx_24 << 8));
                                                                                                                        
                                                                                                                        int64_t rcx_35 = *(arg2 + 8);
                                                                                                                        
                                                                                                                        if (rcx_35 != 0)
                                                                                                                        {
                                                                                                                            *((rcx_35 + r10_8) + 4) = r8_27;
                                                                                                                            *((*(arg2 + 8) + r10_8) + 8) = r9_18;
                                                                                                                            *((*(arg2 + 8) + r10_8) + 0xc) = rdx_24;
                                                                                                                        }
                                                                                                                        
                                                                                                                        r14_2 += 1;
                                                                                                                        r10_8 += 0x14;
                                                                                                                    } while (r14_2 < rsi_2);
                                                                                                                }
                                                                                                                
                                                                                                                int32_t rax_111 = arg1[1];
                                                                                                                int32_t rcx_39 = (rax_111 & 0xfffffffc);
                                                                                                                int32_t rax_112 = (rcx_39 + 4);
                                                                                                                
                                                                                                                if ((rax_111 & 3) <= 0)
                                                                                                                    rax_112 = rcx_39;
                                                                                                                
                                                                                                                arg1[1] = rax_112;
                                                                                                                result_1 = 1;
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            
                                            break;
                                        }
                                    }
                                    
                                label_18001abdd:
                                    void var_100;
                                    `eh vector vbase constructor iterator'(&var_100, 0x10, 0xa, _guard_check_icall);
                                    result = result_1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_168));
    return result;
}

uint64_t sub_18001ac20(int64_t* arg1, int64_t arg2, int32_t arg3)
{
    void var_258;
    int64_t rax_1 = (__security_cookie ^ &var_258);
    uint64_t result;
    
    if (arg3 != 0)
    {
        arg1[1] = arg3;
        void var_238;
        memset(&var_238, 0, 0x104);
        void var_128;
        memset(&var_128, 0, 0x104);
        int64_t r9_1 = *arg1;
        
        if (r9_1 == 0)
            result = 0;
        else
        {
            int32_t rdx = *(arg1 + 0xc);
            
            if ((arg3 + 4) > rdx)
                result = 0;
            else
            {
                int32_t r8 = arg1[2];
                arg1[1] = (arg3 + 4);
                int32_t r10_1 = *(arg3 + r9_1);
                
                if (r8 != 0)
                    r10_1 = _bswap(r10_1);
                
                if ((arg3 + 8) > rdx)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t r11_2 = arg1[1];
                    int32_t rax_5 = *((r11_2 - 4) + r9_1);
                    
                    if (r8 != 0)
                        rax_5 = _bswap(rax_5);
                    
                    if (r8 != 0)
                        r10_1 = rax_5;
                    
                    if ((r11_2 + 4) > rdx)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t r11_3 = arg1[1];
                        int32_t rdi_1 = *((r11_3 - 4) + r9_1);
                        
                        if (r8 != 0)
                            rdi_1 = _bswap(rdi_1);
                        
                        if ((r11_3 + 4) > rdx)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t r11_4 = arg1[1];
                            int32_t rax_10 = *((r11_4 - 4) + r9_1);
                            
                            if (r8 != 0)
                                rax_10 = _bswap(rax_10);
                            
                            if (r8 != 0)
                                rdi_1 = rax_10;
                            
                            if ((r11_4 + 4) > rdx)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r14_1 = arg1[1];
                                int32_t rsi_1 = *((r14_1 - 4) + r9_1);
                                
                                if (r8 != 0)
                                    rsi_1 = _bswap(rsi_1);
                                
                                if ((r14_1 + 4) > rdx)
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t r9_2 = *((arg1[1] - 4) + r9_1);
                                    
                                    if (r8 != 0)
                                        r9_2 = _bswap(r9_2);
                                    
                                    sub_180005050(arg1, r10_1, &var_238);
                                    sub_180005050(arg1, rdi_1, &var_128);
                                    int32_t rdi_2 = (r14_1 + r9_2);
                                    
                                    if (r9_2 == 0)
                                        rdi_2 = r9_2;
                                    
                                    void* rax_16 = sub_180001a00(&data_1800306f0);
                                    
                                    if (rax_16 != 0)
                                    {
                                        void* rdx_3 = &var_238;
                                        char i;
                                        
                                        do
                                        {
                                            i = *rdx_3;
                                            *((rax_16 - &var_238) + rdx_3) = i;
                                            rdx_3 += 1;
                                        } while (i != 0);
                                        void* rdx_4 = &var_128;
                                        char i_1;
                                        
                                        do
                                        {
                                            i_1 = *rdx_4;
                                            *(((rax_16 - &var_128) + 0x104) + rdx_4) = i_1;
                                            rdx_4 += 1;
                                        } while (i_1 != 0);
                                        *(rax_16 + 0x514) = 0xffffffff;
                                    }
                                    
                                    data_180030748 = 0;
                                    sub_18001ae80(arg1, 0, rdi_2, rsi_1);
                                    result = 1;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_258));
    return result;
}

int64_t sub_18001ae80(int64_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    void var_3e8;
    int64_t rax_1 = (__security_cookie ^ &var_3e8);
    int64_t result;
    
    if (((arg3 != 0 && arg3 >= 0x64) && arg3 < *(arg1 + 0xc)))
    {
        arg1[1] = arg3;
        int32_t rax_3 = (data_180030728 - 1);
        int32_t var_3ac_1 = 0;
        
        if (arg4 == 0)
        {
        label_18001b304:
            result = 1;
        }
        else
        {
            while (true)
            {
                void var_358;
                memset(&var_358, 0, 0x104);
                void var_248;
                memset(&var_248, 0, 0x104);
                void var_138;
                memset(&var_138, 0, 0x104);
                int64_t rdx = *arg1;
                
                if (rdx != 0)
                {
                    int32_t r9 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= r9)
                    {
                        arg1[1] += 4;
                        int32_t r11_1 = arg1[1];
                        int32_t r8 = arg1[2];
                        int32_t r10_1 = *((r11_1 - 4) + rdx);
                        
                        if (r8 != 0)
                            r10_1 = _bswap(r10_1);
                        
                        if ((r11_1 + 4) <= r9)
                        {
                            arg1[1] += 4;
                            int32_t r11_2 = arg1[1];
                            int32_t rax_9 = *((r11_2 - 4) + rdx);
                            
                            if (r8 != 0)
                                rax_9 = _bswap(rax_9);
                            
                            if (r8 != 0)
                                r10_1 = rax_9;
                            
                            if ((r11_2 + 4) <= r9)
                            {
                                arg1[1] += 4;
                                int32_t r11_3 = arg1[1];
                                int32_t rbx_1 = *((r11_3 - 4) + rdx);
                                
                                if (r8 != 0)
                                    rbx_1 = _bswap(rbx_1);
                                
                                if ((r11_3 + 4) <= r9)
                                {
                                    arg1[1] += 4;
                                    int32_t r11_4 = arg1[1];
                                    int32_t rax_14 = *((r11_4 - 4) + rdx);
                                    
                                    if (r8 != 0)
                                        rax_14 = _bswap(rax_14);
                                    
                                    if (r8 != 0)
                                        rbx_1 = rax_14;
                                    
                                    if ((r11_4 + 4) <= r9)
                                    {
                                        arg1[1] += 4;
                                        int32_t r11_5 = arg1[1];
                                        int32_t rsi_1 = *((r11_5 - 4) + rdx);
                                        
                                        if (r8 != 0)
                                            rsi_1 = _bswap(rsi_1);
                                        
                                        if ((r11_5 + 4) <= r9)
                                        {
                                            arg1[1] += 4;
                                            int32_t rax_20 = *((arg1[1] - 4) + rdx);
                                            
                                            if (r8 != 0)
                                                rax_20 = _bswap(rax_20);
                                            
                                            if (r8 != 0)
                                                rsi_1 = rax_20;
                                            
                                            sub_180005050(arg1, r10_1, &var_358);
                                            sub_180005050(arg1, rbx_1, &var_248);
                                            sub_180005050(arg1, rsi_1, &var_138);
                                            int64_t var_38c_1 = 0;
                                            int32_t var_390 = 0;
                                            int64_t var_368_1 = 0;
                                            int64_t var_370 = 0;
                                            int64_t var_37c_1 = 0;
                                            int32_t var_380 = 0;
                                            
                                            if (((sub_18001d5c0(arg1, &var_390) != 0 && sub_18001d710(arg1, &var_370) != 0) && (sub_18001d5c0(arg1, &var_380) != 0 && *arg1 != 0)))
                                            {
                                                int32_t rcx_6 = *(arg1 + 0xc);
                                                
                                                if ((arg1[1] + 4) <= rcx_6)
                                                {
                                                    arg1[1] += 4;
                                                    
                                                    if ((arg1[1] + 4) <= rcx_6)
                                                    {
                                                        arg1[1] += 4;
                                                        data_180030748 += 1;
                                                        int64_t r8_4 = *arg1;
                                                        
                                                        if (r8_4 != 0)
                                                        {
                                                            int32_t rdx_7 = *(arg1 + 0xc);
                                                            
                                                            if ((arg1[1] + 4) <= rdx_7)
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t r10_2 = arg1[1];
                                                                int32_t r9_1 = arg1[2];
                                                                int32_t rax_31 = *((r10_2 - 4) + r8_4);
                                                                int32_t var_3b4_1 = rax_31;
                                                                
                                                                if (r9_1 != 0)
                                                                    var_3b4_1 = _bswap(rax_31);
                                                                
                                                                if ((r10_2 + 4) <= rdx_7)
                                                                {
                                                                    arg1[1] += 4;
                                                                    int32_t r10_3 = arg1[1];
                                                                    int32_t rax_35 = *((r10_3 - 4) + r8_4);
                                                                    int32_t var_3b8_1 = rax_35;
                                                                    
                                                                    if (r9_1 != 0)
                                                                        var_3b8_1 = _bswap(rax_35);
                                                                    
                                                                    if ((r10_3 + 4) <= rdx_7)
                                                                    {
                                                                        arg1[1] += 4;
                                                                        int32_t rax_38 = arg1[1];
                                                                        
                                                                        if ((rax_38 + 4) <= rdx_7)
                                                                        {
                                                                            arg1[1] += 4;
                                                                            int32_t r10_4 = arg1[1];
                                                                            int32_t rax_41 = *((r10_4 - 4) + r8_4);
                                                                            int32_t var_3b0_1 = rax_41;
                                                                            
                                                                            if (r9_1 != 0)
                                                                                var_3b0_1 = _bswap(rax_41);
                                                                            
                                                                            if ((r10_4 + 4) <= rdx_7)
                                                                            {
                                                                                arg1[1] += 4;
                                                                                
                                                                                if ((arg1[1] + 4) <= rdx_7)
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    void* rax_46 = sub_180001a00(&data_1800306f0);
                                                                                    
                                                                                    if (rax_46 != 0)
                                                                                    {
                                                                                        void* rdx_8 = &var_358;
                                                                                        char i;
                                                                                        
                                                                                        do
                                                                                        {
                                                                                            i = *rdx_8;
                                                                                            *((rax_46 - &var_358) + rdx_8) = i;
                                                                                            rdx_8 += 1;
                                                                                        } while (i != 0);
                                                                                        void* rcx_7 = &var_248;
                                                                                        char i_1;
                                                                                        
                                                                                        do
                                                                                        {
                                                                                            i_1 = *rcx_7;
                                                                                            *(((rax_46 - &var_248) + rcx_7) + 0x104) = i_1;
                                                                                            rcx_7 += 1;
                                                                                        } while (i_1 != 0);
                                                                                        void* rcx_8 = &var_138;
                                                                                        char i_2;
                                                                                        
                                                                                        do
                                                                                        {
                                                                                            i_2 = *rcx_8;
                                                                                            *(((rax_46 - &var_138) + rcx_8) + 0x208) = i_2;
                                                                                            rcx_8 += 1;
                                                                                        } while (i_2 != 0);
                                                                                        *(rax_46 + 0x520) = var_390;
                                                                                        uint128_t zmm0_1 = var_370;
                                                                                        *(rax_46 + 0x514) = rax_3;
                                                                                        *(rax_46 + 0x538) = zmm0_1;
                                                                                        *(rax_46 + 0x528) = *var_38c_1[4];
                                                                                        *(rax_46 + 0x52c) = var_380;
                                                                                        *(rax_46 + 0x534) = *var_37c_1[4];
                                                                                    }
                                                                                    
                                                                                    uint64_t r8_6 = (r10_2 + var_3b8_1);
                                                                                    int32_t rbx_2 = arg1[1];
                                                                                    
                                                                                    if (var_3b8_1 == 0)
                                                                                        r8_6 = var_3b8_1;
                                                                                    
                                                                                    int64_t r8_7 = sub_18001ae80(arg1, (arg2 + 1), r8_6, var_3b4_1);
                                                                                    int32_t r9_4 = (rax_38 + var_3b0_1);
                                                                                    
                                                                                    if (var_3b0_1 == 0)
                                                                                        r9_4 = var_3b0_1;
                                                                                    
                                                                                    sub_18001b340(arg1, rax_46, r8_7, r9_4);
                                                                                    arg1[1] = rbx_2;
                                                                                    int32_t rbx_4 = (var_3ac_1 + 1);
                                                                                    var_3ac_1 = rbx_4;
                                                                                    
                                                                                    if (rbx_4 >= arg4)
                                                                                        goto label_18001b304;
                                                                                    
                                                                                    continue;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                
                result = 0;
                break;
            }
        }
    }
    else
        result = 1;
    
    __security_check_cookie((rax_1 ^ &var_3e8));
    return result;
}

int64_t sub_18001b340(int64_t* arg1, void* arg2, int64_t arg3, int32_t arg4)
{
    if ((arg4 != 0 && (arg4 >= 0x64 && arg4 < *(arg1 + 0xc))))
    {
        arg1[1] = arg4;
        data_180030748 += 1;
        int64_t r9 = *arg1;
        
        if (r9 == 0)
            return 0;
        
        int32_t r10_1 = *(arg1 + 0xc);
        uint64_t r8_1 = (arg1[1] + 4);
        
        if (r8_1 > r10_1)
            return 0;
        
        int32_t r11_1 = arg1[2];
        arg1[1] = r8_1;
        int32_t rdx = *((r8_1 - 4) + r9);
        
        if (r11_1 != 0)
            rdx = _bswap(rdx);
        
        if ((r8_1 + 4) > r10_1)
            return 0;
        
        arg1[1] += 4;
        int32_t rax_5 = *((arg1[1] - 4) + r9);
        
        if (r11_1 != 0)
            rax_5 = _bswap(rax_5);
        
        *(arg2 + 0x518) = rdx;
        int32_t r9_1 = (r8_1 + rax_5);
        int32_t rbx_1 = arg1[1];
        
        if (rax_5 == 0)
            r9_1 = rax_5;
        
        sub_18001b420(arg1, arg2, r8_1, r9_1, rdx);
        arg1[1] = rbx_1;
    }
    
    return 1;
}

uint64_t sub_18001b420(int64_t* arg1, int64_t arg2, int64_t arg3, int32_t arg4, int32_t arg5)
{
    void var_278;
    int64_t rax_1 = (__security_cookie ^ &var_278);
    uint64_t result;
    
    if (arg4 == 0)
        result = (arg4 + 1);
    else if (arg4 < 0x64)
        result = 1;
    else
    {
        int32_t rsi_1 = *(arg1 + 0xc);
        
        if (arg4 >= rsi_1)
            result = 1;
        else
        {
            arg1[1] = arg4;
            
            if (arg5 != 3)
                result = 1;
            else
            {
                void var_248;
                memset(&var_248, 0, 0x104);
                int64_t r8 = *arg1;
                
                if ((r8 == 0 || (arg4 + 4) > rsi_1))
                    result = 0;
                else
                {
                    int32_t rdx = arg1[2];
                    arg1[1] = (arg4 + 4);
                    int32_t r10_1 = *(arg4 + r8);
                    
                    if (rdx != 0)
                        r10_1 = _bswap(r10_1);
                    
                    if ((arg4 + 8) > rsi_1)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t r9 = arg1[1];
                        int32_t rax_5 = *((r9 - 4) + r8);
                        
                        if (rdx != 0)
                            rax_5 = _bswap(rax_5);
                        
                        if (rdx != 0)
                            r10_1 = rax_5;
                        
                        if ((r9 + 4) > rsi_1)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t r11_1 = arg1[1];
                            int32_t r9_1 = *((r11_1 - 4) + r8);
                            
                            if (rdx != 0)
                                r9_1 = _bswap(r9_1);
                            
                            if ((r11_1 + 4) > rsi_1)
                                result = 0;
                            else
                            {
                                arg1[1] += 4;
                                int32_t r11_2 = arg1[1];
                                int32_t rax_10 = *((r11_2 - 4) + r8);
                                
                                if (rdx != 0)
                                    rax_10 = _bswap(rax_10);
                                
                                if (rdx != 0)
                                    r9_1 = rax_10;
                                
                                if ((r11_2 + 4) > rsi_1)
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    int32_t r11_3 = arg1[1];
                                    int32_t rbx_2 = *((r11_3 - 4) + r8);
                                    
                                    if (rdx != 0)
                                        rbx_2 = _bswap(rbx_2);
                                    
                                    if ((r11_3 + 4) > rsi_1)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        int32_t rax_16 = *((arg1[1] - 4) + r8);
                                        
                                        if (rdx != 0)
                                            rax_16 = _bswap(rax_16);
                                        
                                        if (rdx != 0)
                                            rbx_2 = rax_16;
                                        
                                        void var_138;
                                        sub_180005050(arg1, r10_1, &var_138);
                                        sub_180005050(arg1, r9_1, &var_248);
                                        sub_180005050(arg1, rbx_2, &var_138);
                                        int64_t r9_2 = *arg1;
                                        
                                        if (r9_2 == 0)
                                            result = 0;
                                        else
                                        {
                                            int32_t rcx_2 = *(arg1 + 0xc);
                                            
                                            if ((arg1[1] + 4) > rcx_2)
                                                result = 0;
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t r10_2 = arg1[1];
                                                
                                                if ((r10_2 + 4) > rcx_2)
                                                    result = 0;
                                                else
                                                {
                                                    arg1[1] += 4;
                                                    uint64_t r8_4 = *((arg1[1] - 4) + r9_2);
                                                    
                                                    if (arg1[2] != 0)
                                                        r8_4 = _bswap(r8_4);
                                                    
                                                    void* rcx_3 = &var_248;
                                                    char i;
                                                    
                                                    do
                                                    {
                                                        i = *rcx_3;
                                                        *(((arg2 - &var_248) + rcx_3) + 0x30c) = i;
                                                        rcx_3 += 1;
                                                    } while (i != 0);
                                                    int32_t rbx_3 = arg1[1];
                                                    int32_t r9_5 = (r10_2 + r8_4);
                                                    
                                                    if (r8_4 == 0)
                                                        r9_5 = r8_4;
                                                    
                                                    sub_18001b660(arg1, arg2, r8_4, r9_5);
                                                    arg1[1] = rbx_3;
                                                    result = 1;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_278));
    return result;
}

uint64_t sub_18001b660(int64_t* arg1, int64_t arg2, int64_t arg3, int32_t arg4)
{
    void var_268;
    int64_t rax_1 = (__security_cookie ^ &var_268);
    uint64_t result;
    
    if (arg4 == 0)
        result = (arg4 + 1);
    else if (arg4 < 0x64)
        result = 1;
    else
    {
        int32_t rsi_1 = *(arg1 + 0xc);
        
        if (arg4 >= rsi_1)
            result = 1;
        else
        {
            arg1[1] = arg4;
            void var_248;
            memset(&var_248, 0, 0x104);
            int64_t r10_1 = *arg1;
            
            if ((r10_1 == 0 || (arg4 + 4) > rsi_1))
                result = 0;
            else
            {
                int32_t r8 = arg1[2];
                arg1[1] = (arg4 + 4);
                int32_t rdx = *(arg4 + r10_1);
                
                if (r8 != 0)
                    rdx = _bswap(rdx);
                
                if ((arg4 + 8) > rsi_1)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t r9 = arg1[1];
                    int32_t rax_5 = *((r9 - 4) + r10_1);
                    
                    if (r8 != 0)
                        rax_5 = _bswap(rax_5);
                    
                    if (r8 != 0)
                        rdx = rax_5;
                    
                    if ((r9 + 4) > rsi_1)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t r11_1 = arg1[1];
                        int32_t r9_1 = *((r11_1 - 4) + r10_1);
                        
                        if (r8 != 0)
                            r9_1 = _bswap(r9_1);
                        
                        if ((r11_1 + 4) > rsi_1)
                            result = 0;
                        else
                        {
                            arg1[1] += 4;
                            int32_t rax_11 = *((arg1[1] - 4) + r10_1);
                            
                            if (r8 != 0)
                                rax_11 = _bswap(rax_11);
                            
                            if (r8 != 0)
                                r9_1 = rax_11;
                            
                            void var_138;
                            sub_180005050(arg1, rdx, &var_138);
                            sub_180005050(arg1, r9_1, &var_248);
                            void* rcx_2 = &var_248;
                            char i;
                            
                            do
                            {
                                i = *rcx_2;
                                *((rcx_2 + (arg2 - &var_248)) + 0x410) = i;
                                rcx_2 += 1;
                            } while (i != 0);
                            result = 1;
                        }
                    }
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_268));
    return result;
}

uint64_t sub_18001b7d0(int64_t* arg1, int32_t* arg2, int64_t arg3, int32_t arg4)
{
    int64_t var_518 = -2;
    void var_5a8;
    int64_t rax_1 = (__security_cookie ^ &var_5a8);
    int32_t* r12 = arg2;
    uint64_t result;
    
    if (arg2 == 0)
    {
    labelid_1bd:
        result = 0;
    }
    else
    {
        int64_t r11_1 = *arg1;
        
        if (r11_1 == 0)
        {
        labelid_1bd:
            result = 0;
        }
        else
        {
            uint64_t rax_2 = arg1[1];
            int32_t rdi_1 = (rax_2 + 4);
            int32_t r8 = *(arg1 + 0xc);
            
            if (rdi_1 > r8)
            {
            labelid_1bd:
                result = 0;
            }
            else
            {
                int32_t r9 = *(rax_2 + r11_1);
                int32_t rsi_1 = arg1[2];
                
                if (rsi_1 != 0)
                    r9 = ((((r9 >> 0x18) | ((r9 >> 8) & 0xff00)) | ((r9 & 0xff00) << 8)) | (r9 << 0x18));
                
                if (r9 == 0)
                    arg1[1] = rdi_1;
                
                int32_t result_1 = 0;
                int32_t rcx_3 = 0;
                
                if (arg4 != 0)
                {
                    do
                    {
                        if ((arg1[1] + 4) > r8)
                            goto label_18001c99d_2;
                        
                        arg1[1] += 4;
                        
                        if ((arg1[1] + 4) > r8)
                            goto label_18001c99d_2;
                        
                        arg1[1] += 4;
                        rcx_3 += 1;
                    } while (rcx_3 < arg4);
                }
                
                if ((arg1[1] + 4) > r8)
                {
                label_18001c99d:
                    result = 0;
                }
                else
                {
                    arg1[1] += 4;
                    
                    if ((arg1[1] + 4) > r8)
                    {
                    label_18001c99d_1:
                        result = 0;
                    }
                    else
                    {
                        arg1[1] += 4;
                        int32_t r9_4 = arg1[1];
                        int32_t r10_1 = *((r9_4 - 4) + r11_1);
                        int32_t var_560_1 = r10_1;
                        
                        if (rsi_1 != 0)
                            var_560_1 = ((((r10_1 >> 0x18) | ((r10_1 >> 8) & 0xff00)) | ((r10_1 & 0xff00) << 8)) | (r10_1 << 0x18));
                        
                        int32_t rax_18 = data_1800306f0;
                        
                        if ((rax_18 != 0x3d9 && rax_18 != 0x3de))
                            goto label_18001b950;
                        
                        if ((r9_4 + 4) > r8)
                        {
                        label_18001c99d_2:
                            result = 0;
                        }
                        else
                        {
                            arg1[1] += 4;
                        label_18001b950:
                            int32_t var_508;
                            sub_1800010c0(&var_508);
                            int64_t s;
                            __builtin_memset(&s, 0, 0x14);
                            int32_t r10_6 = 0;
                            int64_t i = *arg1;
                            int64_t r11_2 = 0;
                            void var_500;
                            
                            while (i != 0)
                            {
                                int32_t r8_1 = *(arg1 + 0xc);
                                
                                if ((arg1[1] + 4) > r8_1)
                                    break;
                                
                                arg1[1] += 4;
                                int32_t rsi_2 = arg1[1];
                                int32_t r9_5 = *((rsi_2 - 4) + i);
                                int32_t r14_1 = arg1[2];
                                
                                if (r14_1 != 0)
                                    r9_5 = ((((r9_5 >> 0x18) | ((r9_5 >> 8) & 0xff00)) | ((r9_5 & 0xff00) << 8)) | (r9_5 << 0x18));
                                
                                if ((rsi_2 + 4) > r8_1)
                                    break;
                                
                                arg1[1] += 4;
                                int32_t r15_1 = arg1[1];
                                int32_t r8_2 = *((r15_1 - 4) + i);
                                
                                if (r14_1 != 0)
                                    r8_2 = ((((r8_2 >> 0x18) | ((r8_2 >> 8) & 0xff00)) | ((r8_2 & 0xff00) << 8)) | (r8_2 << 0x18));
                                
                                if (r11_2 == 0)
                                    r10_6 = r9_5;
                                
                                if (r8_2 != 0)
                                    *(&s + (r11_2 << 2)) = (r8_2 + rsi_2);
                                
                                r11_2 += 1;
                                
                                if (r11_2 >= 5)
                                {
                                    int32_t var_504_1 = r10_6;
                                    
                                    if (i != 0)
                                    {
                                        int32_t r9_9 = *(arg1 + 0xc);
                                        
                                        if ((r15_1 + 4) <= r9_9)
                                        {
                                            arg1[1] += 4;
                                            
                                            if ((arg1[1] + 4) <= r9_9)
                                            {
                                                arg1[1] += 4;
                                                int32_t rax_35 = arg1[1];
                                                int32_t rcx_14 = data_1800306f0;
                                                
                                                if ((rcx_14 != 0x3d9 && rcx_14 != 0x3de))
                                                    goto label_18001ba9e;
                                                
                                                if ((rax_35 + 4) <= r9_9)
                                                {
                                                    arg1[1] += 4;
                                                    rax_35 = arg1[1];
                                                label_18001ba9e:
                                                    
                                                    if ((rax_35 + 4) <= r9_9)
                                                    {
                                                        arg1[1] += 4;
                                                        int32_t r8_6 = arg1[1];
                                                        int32_t rsi_3 = *((r8_6 - 4) + i);
                                                        int32_t var_568_1 = rsi_3;
                                                        int32_t r11_3 = arg1[2];
                                                        
                                                        if (r11_3 != 0)
                                                            var_568_1 = ((((rsi_3 >> 0x18) | ((rsi_3 >> 8) & 0xff00)) | ((rsi_3 & 0xff00) << 8)) | (rsi_3 << 0x18));
                                                        
                                                        if ((r8_6 + 4) <= r9_9)
                                                        {
                                                            arg1[1] += 4;
                                                            
                                                            if ((arg1[1] + 4) <= r9_9)
                                                            {
                                                                arg1[1] += 4;
                                                                int32_t rsi_8 = arg1[1];
                                                                int32_t r14_2 = *((rsi_8 - 4) + i);
                                                                int32_t var_554_1 = r14_2;
                                                                
                                                                if (r11_3 != 0)
                                                                    var_554_1 = (((((r14_2 & 0xff00) << 8) | (r14_2 << 0x18)) | (r14_2 >> 0x18)) | ((r14_2 >> 8) & 0xff00));
                                                                
                                                                if ((rsi_8 + 4) <= r9_9)
                                                                {
                                                                    arg1[1] += 4;
                                                                    uint32_t r8_9 = *((arg1[1] - 4) + i);
                                                                    uint32_t var_550_1 = r8_9;
                                                                    
                                                                    if (r11_3 != 0)
                                                                        var_550_1 = ((((r8_9 >> 0x18) | ((r8_9 >> 8) & 0xff00)) | ((r8_9 & 0xff00) << 8)) | (r8_9 << 0x18));
                                                                    
                                                                    int32_t rcx_24 = 0;
                                                                    
                                                                    while ((arg1[1] + 4) <= *(arg1 + 0xc))
                                                                    {
                                                                        arg1[1] += 4;
                                                                        rcx_24 += 1;
                                                                        
                                                                        if (rcx_24 >= 4)
                                                                        {
                                                                            if ((arg1[1] + 4) <= r9_9)
                                                                            {
                                                                                arg1[1] += 4;
                                                                                int32_t r8_14 = arg1[1];
                                                                                int32_t r14_8 = *((r8_14 - 4) + i);
                                                                                int32_t var_558_1 = r14_8;
                                                                                
                                                                                if (r11_3 != 0)
                                                                                {
                                                                                    r14_8 = ((((r14_8 >> 0x18) | ((r14_8 >> 8) & 0xff00)) | ((r14_8 & 0xff00) << 8)) | (r14_8 << 0x18));
                                                                                    var_558_1 = r14_8;
                                                                                }
                                                                                
                                                                                if ((r8_14 + 4) <= r9_9)
                                                                                {
                                                                                    arg1[1] += 4;
                                                                                    int32_t rsi_9 = *((arg1[1] - 4) + i);
                                                                                    
                                                                                    if (r11_3 != 0)
                                                                                        rsi_9 = ((((rsi_9 >> 0x18) | ((rsi_9 >> 8) & 0xff00)) | ((rsi_9 & 0xff00) << 8)) | (rsi_9 << 0x18));
                                                                                    
                                                                                    int32_t rsi_13 = (rsi_9 + r8_14);
                                                                                    int64_t var_544_1 = 0;
                                                                                    int32_t var_548 = 0;
                                                                                    int64_t var_52c_1 = 0;
                                                                                    int32_t var_530 = 0;
                                                                                    
                                                                                    if ((sub_18001d5c0(arg1, &var_548) != 0 && sub_18001d5c0(arg1, &var_530) != 0))
                                                                                    {
                                                                                        int32_t rax_69 = s;
                                                                                        
                                                                                        if (rax_69 != 0)
                                                                                            arg1[1] = rax_69;
                                                                                        
                                                                                        int32_t r15_2 = 0;
                                                                                        int32_t var_564_1 = 0;
                                                                                        int32_t r11_4 = 0;
                                                                                        
                                                                                        if (r10_6 != 0)
                                                                                        {
                                                                                            int64_t rdi_2 = *arg1;
                                                                                            int64_t r9_10 = 0;
                                                                                            
                                                                                            do
                                                                                            {
                                                                                                if (rdi_2 == 0)
                                                                                                    goto label_18001c992;
                                                                                                
                                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                    goto label_18001c992;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                int32_t r8_15 = *((arg1[1] - 4) + rdi_2);
                                                                                                
                                                                                                if (arg1[2] != 0)
                                                                                                    r8_15 = ((((r8_15 >> 0x18) | ((r8_15 >> 8) & 0xff00)) | ((r8_15 & 0xff00) << 8)) | (r8_15 << 0x18));
                                                                                                
                                                                                                if (r9_10 == 0)
                                                                                                    r15_2 = r8_15;
                                                                                                
                                                                                                var_564_1 = r15_2;
                                                                                                
                                                                                                if (r11_4 < var_508)
                                                                                                    *(&var_500 + (r9_10 * 0x10)) = r8_15;
                                                                                                
                                                                                                r11_4 += 1;
                                                                                                r9_10 += 1;
                                                                                            } while (r11_4 < r10_6);
                                                                                        }
                                                                                        
                                                                                        int32_t rax_79 = *s[4];
                                                                                        
                                                                                        if (rax_79 != 0)
                                                                                            arg1[1] = rax_79;
                                                                                        
                                                                                        int32_t r9_11 = 0;
                                                                                        
                                                                                        if (r10_6 != 0)
                                                                                        {
                                                                                            int64_t rdi_3 = *arg1;
                                                                                            void var_4fc;
                                                                                            void* r11_5 = &var_4fc;
                                                                                            
                                                                                            do
                                                                                            {
                                                                                                if (rdi_3 == 0)
                                                                                                    goto label_18001c992;
                                                                                                
                                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                    goto label_18001c992;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                int32_t r8_19 = *((arg1[1] - 4) + rdi_3);
                                                                                                
                                                                                                if (arg1[2] != 0)
                                                                                                    r8_19 = ((((r8_19 >> 0x18) | ((r8_19 >> 8) & 0xff00)) | ((r8_19 & 0xff00) << 8)) | (r8_19 << 0x18));
                                                                                                
                                                                                                if (r9_11 < var_508)
                                                                                                    *r11_5 = r8_19;
                                                                                                
                                                                                                r9_11 += 1;
                                                                                                r11_5 += 0x10;
                                                                                            } while (r9_11 < r10_6);
                                                                                        }
                                                                                        
                                                                                        int64_t var_450;
                                                                                        int32_t rax_87 = var_450;
                                                                                        
                                                                                        if (rax_87 != 0)
                                                                                            arg1[1] = rax_87;
                                                                                        
                                                                                        int32_t r9_12 = 0;
                                                                                        
                                                                                        if (r10_6 != 0)
                                                                                        {
                                                                                            int64_t rdi_4 = *arg1;
                                                                                            void var_4f8;
                                                                                            void* r11_6 = &var_4f8;
                                                                                            
                                                                                            do
                                                                                            {
                                                                                                if (rdi_4 == 0)
                                                                                                    goto label_18001c992;
                                                                                                
                                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                    goto label_18001c992;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                int32_t r8_23 = *((arg1[1] - 4) + rdi_4);
                                                                                                
                                                                                                if (arg1[2] != 0)
                                                                                                    r8_23 = ((((r8_23 >> 0x18) | ((r8_23 >> 8) & 0xff00)) | ((r8_23 & 0xff00) << 8)) | (r8_23 << 0x18));
                                                                                                
                                                                                                if (r9_12 < var_508)
                                                                                                    *r11_6 = r8_23;
                                                                                                
                                                                                                r9_12 += 1;
                                                                                                r11_6 += 0x10;
                                                                                            } while (r9_12 < r10_6);
                                                                                        }
                                                                                        
                                                                                        int32_t rax_95 = *var_450[4];
                                                                                        
                                                                                        if (rax_95 != 0)
                                                                                            arg1[1] = rax_95;
                                                                                        
                                                                                        int32_t r9_13 = 0;
                                                                                        
                                                                                        if (r10_6 != 0)
                                                                                        {
                                                                                            int64_t rdi_5 = *arg1;
                                                                                            void var_4f4;
                                                                                            void* r11_7 = &var_4f4;
                                                                                            
                                                                                            do
                                                                                            {
                                                                                                if (rdi_5 == 0)
                                                                                                    goto label_18001c992;
                                                                                                
                                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                    goto label_18001c992;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                int32_t r8_27 = *((arg1[1] - 4) + rdi_5);
                                                                                                
                                                                                                if (arg1[2] != 0)
                                                                                                    r8_27 = ((((r8_27 >> 0x18) | ((r8_27 >> 8) & 0xff00)) | ((r8_27 & 0xff00) << 8)) | (r8_27 << 0x18));
                                                                                                
                                                                                                if (r9_13 < var_508)
                                                                                                    *r11_7 = r8_27;
                                                                                                
                                                                                                r9_13 += 1;
                                                                                                r11_7 += 0x10;
                                                                                            } while (r9_13 < r10_6);
                                                                                        }
                                                                                        
                                                                                        int32_t var_448;
                                                                                        
                                                                                        if (var_448 != 0)
                                                                                            arg1[1] = var_448;
                                                                                        
                                                                                        int32_t rcx_45 = 0;
                                                                                        
                                                                                        if (r10_6 != 0)
                                                                                        {
                                                                                            do
                                                                                            {
                                                                                                if (*arg1 == 0)
                                                                                                    goto label_18001c992;
                                                                                                
                                                                                                if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                    goto label_18001c992;
                                                                                                
                                                                                                arg1[1] += 4;
                                                                                                rcx_45 += 1;
                                                                                            } while (rcx_45 < r10_6);
                                                                                        }
                                                                                        
                                                                                        if (rsi_13 != 0)
                                                                                            arg1[1] = rsi_13;
                                                                                        
                                                                                        int32_t var_588_1 = -0x7fffef50;
                                                                                        int32_t var_438;
                                                                                        `eh vector constructor iterator'(&var_438, 0x14, 0x32, CvtStSymsToSz::CvtStSymsToSz);
                                                                                        int32_t r15_3 = 0;
                                                                                        int32_t rax_106 = data_1800306f0;
                                                                                        int32_t var_434;
                                                                                        int32_t var_430;
                                                                                        int32_t var_42c;
                                                                                        
                                                                                        if ((rax_106 != 0x38f && rax_106 != 0x396))
                                                                                        {
                                                                                            int32_t var_55c_1 = 0;
                                                                                            
                                                                                            if (r14_8 != 0)
                                                                                            {
                                                                                                int64_t rdx_30 = *arg1;
                                                                                                var_548 = 0;
                                                                                                
                                                                                                while (true)
                                                                                                {
                                                                                                    if (rdx_30 == 0)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    int32_t r8_31 = *(arg1 + 0xc);
                                                                                                    
                                                                                                    if ((arg1[1] + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    int32_t rsi_14 = arg1[1];
                                                                                                    
                                                                                                    if ((rsi_14 + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    int32_t r10_7 = arg1[1];
                                                                                                    int32_t r9_14 = *((r10_7 - 4) + rdx_30);
                                                                                                    int32_t r11_8 = arg1[2];
                                                                                                    
                                                                                                    if (r11_8 != 0)
                                                                                                    {
                                                                                                        r9_14 = ((((r9_14 >> 0x18) | ((r9_14 >> 8) & 0xff00)) | ((r9_14 & 0xff00) << 8)) | (r9_14 << 0x18));
                                                                                                        rdx_30 = *arg1;
                                                                                                    }
                                                                                                    
                                                                                                    if ((r10_7 + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    int32_t rdi_6 = arg1[1];
                                                                                                    int32_t r12_1 = *((rdi_6 - 4) + rdx_30);
                                                                                                    
                                                                                                    if (r11_8 != 0)
                                                                                                    {
                                                                                                        r12_1 = ((((r12_1 >> 0x18) | ((r12_1 >> 8) & 0xff00)) | ((r12_1 & 0xff00) << 8)) | (r12_1 << 0x18));
                                                                                                        rdx_30 = *arg1;
                                                                                                    }
                                                                                                    
                                                                                                    int32_t rax_129 = (rsi_14 + r9_14);
                                                                                                    
                                                                                                    if (r9_14 == 0)
                                                                                                        rax_129 = r9_14;
                                                                                                    
                                                                                                    int32_t r10_8 = 0;
                                                                                                    
                                                                                                    if ((rdi_6 + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    int32_t r9_18 = arg1[1];
                                                                                                    int32_t rax_131 = data_1800306f0;
                                                                                                    
                                                                                                    if ((rax_131 == 0x3d9 || rax_131 == 0x3de))
                                                                                                    {
                                                                                                        if ((r9_18 + 4) > r8_31)
                                                                                                            goto label_18001c978;
                                                                                                        
                                                                                                        arg1[1] += 4;
                                                                                                        r9_18 = arg1[1];
                                                                                                        r10_8 = *((r9_18 - 4) + rdx_30);
                                                                                                        
                                                                                                        if (r11_8 != 0)
                                                                                                            r10_8 = ((((r10_8 >> 0x18) | ((r10_8 >> 8) & 0xff00)) | ((r10_8 & 0xff00) << 8)) | (r10_8 << 0x18));
                                                                                                    }
                                                                                                    
                                                                                                    if ((r9_18 + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    int32_t r9_19 = arg1[1];
                                                                                                    rdx_30 = *arg1;
                                                                                                    int32_t r15_4 = *((r9_19 - 4) + rdx_30);
                                                                                                    
                                                                                                    if (r11_8 != 0)
                                                                                                    {
                                                                                                        r15_4 = ((((r15_4 >> 0x18) | ((r15_4 >> 8) & 0xff00)) | ((r15_4 & 0xff00) << 8)) | (r15_4 << 0x18));
                                                                                                        rdx_30 = *arg1;
                                                                                                    }
                                                                                                    
                                                                                                    if ((r9_19 + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) > r8_31)
                                                                                                        goto label_18001c978;
                                                                                                    
                                                                                                    arg1[1] += 4;
                                                                                                    int32_t r13_1 = arg1[1];
                                                                                                    int32_t rax_145 = data_1800306f0;
                                                                                                    
                                                                                                    if ((rax_145 != 0x3d9 && rax_145 != 0x3de))
                                                                                                        goto label_18001c1d3;
                                                                                                    
                                                                                                    if ((r13_1 + 4) <= r8_31)
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        r13_1 = arg1[1];
                                                                                                    label_18001c1d3:
                                                                                                        
                                                                                                        if ((r13_1 + 4) <= r8_31)
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            int32_t r9_20 = arg1[1];
                                                                                                            int32_t rdi_7 = *((r9_20 - 4) + rdx_30);
                                                                                                            
                                                                                                            if (r11_8 != 0)
                                                                                                            {
                                                                                                                rdi_7 = ((((rdi_7 >> 0x18) | ((rdi_7 >> 8) & 0xff00)) | ((rdi_7 & 0xff00) << 8)) | (rdi_7 << 0x18));
                                                                                                                rdx_30 = *arg1;
                                                                                                            }
                                                                                                            
                                                                                                            if ((r9_20 + 4) <= r8_31)
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                
                                                                                                                if ((arg1[1] + 4) <= r8_31)
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    int32_t r9_21 = arg1[1];
                                                                                                                    int32_t rsi_15 = *((r9_21 - 4) + rdx_30);
                                                                                                                    
                                                                                                                    if (r11_8 != 0)
                                                                                                                    {
                                                                                                                        rsi_15 = ((((rsi_15 >> 0x18) | ((rsi_15 >> 8) & 0xff00)) | ((rsi_15 & 0xff00) << 8)) | (rsi_15 << 0x18));
                                                                                                                        rdx_30 = *arg1;
                                                                                                                    }
                                                                                                                    
                                                                                                                    if ((r9_21 + 4) <= r8_31)
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        int32_t r14_12 = arg1[1];
                                                                                                                        int32_t r9_22 = *((r14_12 - 4) + rdx_30);
                                                                                                                        
                                                                                                                        if (r11_8 != 0)
                                                                                                                        {
                                                                                                                            r9_22 = ((((r9_22 >> 0x18) | ((r9_22 >> 8) & 0xff00)) | ((r9_22 & 0xff00) << 8)) | (r9_22 << 0x18));
                                                                                                                            rdx_30 = *arg1;
                                                                                                                        }
                                                                                                                        
                                                                                                                        if ((r14_12 + 4) <= r8_31)
                                                                                                                        {
                                                                                                                            arg1[1] += 4;
                                                                                                                            
                                                                                                                            if ((arg1[1] + 4) <= r8_31)
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                
                                                                                                                                if ((arg1[1] + 4) <= r8_31)
                                                                                                                                {
                                                                                                                                    arg1[1] += 4;
                                                                                                                                    
                                                                                                                                    if ((arg1[1] + 4) <= r8_31)
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        
                                                                                                                                        if ((arg1[1] + 4) <= r8_31)
                                                                                                                                        {
                                                                                                                                            arg1[1] += 4;
                                                                                                                                            
                                                                                                                                            if ((arg1[1] + 4) <= r8_31)
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int64_t r8_32 = var_548;
                                                                                                                                                
                                                                                                                                                if (r8_32 < 0x32)
                                                                                                                                                {
                                                                                                                                                    int64_t rcx_68 = (r8_32 * 5);
                                                                                                                                                    &var_438[rcx_68] = r15_4;
                                                                                                                                                    &var_434[rcx_68] = rdi_7;
                                                                                                                                                    &var_430[rcx_68] = rsi_15;
                                                                                                                                                    &var_42c[rcx_68] = r9_22;
                                                                                                                                                    void var_428;
                                                                                                                                                    *(&var_428 + (rcx_68 << 2)) = r12_1;
                                                                                                                                                    int32_t rax_175 = data_1800306f0;
                                                                                                                                                    
                                                                                                                                                    if (((rax_175 == 0x3d9 || rax_175 == 0x3de) && r10_8 != 0))
                                                                                                                                                        &var_434[rcx_68] = ((rdi_7 + r13_1) + r10_8);
                                                                                                                                                }
                                                                                                                                                
                                                                                                                                                int32_t rax_179 = (var_55c_1 + 1);
                                                                                                                                                var_55c_1 = rax_179;
                                                                                                                                                var_548 = (r8_32 + 1);
                                                                                                                                                result_1 = 0;
                                                                                                                                                
                                                                                                                                                if (rax_179 < var_558_1)
                                                                                                                                                    continue;
                                                                                                                                                
                                                                                                                                                r15_3 = rax_129;
                                                                                                                                                r12 = arg2;
                                                                                                                                                break;
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    
                                                                                                    result_1 = 0;
                                                                                                    goto label_18001c978;
                                                                                                }
                                                                                            }
                                                                                            
                                                                                            goto label_18001c694;
                                                                                        }
                                                                                        
                                                                                        int64_t r9_26 = *arg1;
                                                                                        
                                                                                        if (r9_26 != 0)
                                                                                        {
                                                                                            int32_t r8_34 = *(arg1 + 0xc);
                                                                                            
                                                                                            if ((arg1[1] + 4) <= r8_34)
                                                                                            {
                                                                                                arg1[1] += 4;
                                                                                                
                                                                                                if ((arg1[1] + 4) <= r8_34)
                                                                                                {
                                                                                                    arg1[1] += 4;
                                                                                                    
                                                                                                    if ((arg1[1] + 4) <= r8_34)
                                                                                                    {
                                                                                                        arg1[1] += 4;
                                                                                                        
                                                                                                        if ((arg1[1] + 4) <= r8_34)
                                                                                                        {
                                                                                                            arg1[1] += 4;
                                                                                                            
                                                                                                            if ((arg1[1] + 4) <= r8_34)
                                                                                                            {
                                                                                                                arg1[1] += 4;
                                                                                                                
                                                                                                                if ((arg1[1] + 4) <= r8_34)
                                                                                                                {
                                                                                                                    arg1[1] += 4;
                                                                                                                    
                                                                                                                    if ((arg1[1] + 4) <= r8_34)
                                                                                                                    {
                                                                                                                        arg1[1] += 4;
                                                                                                                        
                                                                                                                        if ((arg1[1] + 4) <= r8_34)
                                                                                                                        {
                                                                                                                            arg1[1] += 4;
                                                                                                                            
                                                                                                                            if ((arg1[1] + 4) <= r8_34)
                                                                                                                            {
                                                                                                                                arg1[1] += 4;
                                                                                                                                
                                                                                                                                if ((arg1[1] + 4) <= r8_34)
                                                                                                                                {
                                                                                                                                    arg1[1] += 4;
                                                                                                                                    
                                                                                                                                    if ((arg1[1] + 4) <= r8_34)
                                                                                                                                    {
                                                                                                                                        arg1[1] += 4;
                                                                                                                                        
                                                                                                                                        if ((arg1[1] + 4) <= r8_34)
                                                                                                                                        {
                                                                                                                                            arg1[1] += 4;
                                                                                                                                            
                                                                                                                                            if ((arg1[1] + 4) <= r8_34)
                                                                                                                                            {
                                                                                                                                                arg1[1] += 4;
                                                                                                                                                int32_t r10_12 = arg1[1];
                                                                                                                                                int32_t rdi_11 = *((r10_12 - 4) + r9_26);
                                                                                                                                                int32_t rsi_19 = arg1[2];
                                                                                                                                                
                                                                                                                                                if (rsi_19 != 0)
                                                                                                                                                    rdi_11 = ((((rdi_11 >> 0x18) | ((rdi_11 >> 8) & 0xff00)) | ((rdi_11 & 0xff00) << 8)) | (rdi_11 << 0x18));
                                                                                                                                                
                                                                                                                                                if ((r10_12 + 4) <= r8_34)
                                                                                                                                                {
                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                    
                                                                                                                                                    if ((arg1[1] + 4) <= r8_34)
                                                                                                                                                    {
                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                        
                                                                                                                                                        if ((arg1[1] + 4) <= r8_34)
                                                                                                                                                        {
                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                            
                                                                                                                                                            if ((arg1[1] + 4) <= r8_34)
                                                                                                                                                            {
                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                int32_t r10_13 = arg1[1];
                                                                                                                                                                int32_t r11_9 = *((r10_13 - 4) + r9_26);
                                                                                                                                                                
                                                                                                                                                                if (rsi_19 != 0)
                                                                                                                                                                    r11_9 = ((((r11_9 >> 0x18) | ((r11_9 >> 8) & 0xff00)) | ((r11_9 & 0xff00) << 8)) | (r11_9 << 0x18));
                                                                                                                                                                
                                                                                                                                                                if ((r10_13 + 4) <= r8_34)
                                                                                                                                                                {
                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                    
                                                                                                                                                                    if ((arg1[1] + 4) <= r8_34)
                                                                                                                                                                    {
                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                        int32_t r14_13 = arg1[1];
                                                                                                                                                                        int32_t r10_14 = *((r14_13 - 4) + r9_26);
                                                                                                                                                                        
                                                                                                                                                                        if (rsi_19 != 0)
                                                                                                                                                                            r10_14 = ((((r10_14 >> 0x18) | ((r10_14 >> 8) & 0xff00)) | ((r10_14 & 0xff00) << 8)) | (r10_14 << 0x18));
                                                                                                                                                                        
                                                                                                                                                                        if ((r14_13 + 4) <= r8_34)
                                                                                                                                                                        {
                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                            int32_t r14_14 = arg1[1];
                                                                                                                                                                            int32_t r9_27 = *((r14_14 - 4) + r9_26);
                                                                                                                                                                            
                                                                                                                                                                            if (rsi_19 != 0)
                                                                                                                                                                                r9_27 = ((((r9_27 >> 0x18) | ((r9_27 >> 8) & 0xff00)) | ((r9_27 & 0xff00) << 8)) | (r9_27 << 0x18));
                                                                                                                                                                            
                                                                                                                                                                            if ((r14_14 + 4) <= r8_34)
                                                                                                                                                                            {
                                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                                
                                                                                                                                                                                if ((arg1[1] + 4) <= r8_34)
                                                                                                                                                                                {
                                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                                    
                                                                                                                                                                                    if ((arg1[1] + 4) <= r8_34)
                                                                                                                                                                                    {
                                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                                        
                                                                                                                                                                                        if ((arg1[1] + 4) <= r8_34)
                                                                                                                                                                                        {
                                                                                                                                                                                            arg1[1] += 4;
                                                                                                                                                                                            
                                                                                                                                                                                            if ((arg1[1] + 4) <= r8_34)
                                                                                                                                                                                            {
                                                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                                                
                                                                                                                                                                                                if ((arg1[1] + 4) <= r8_34)
                                                                                                                                                                                                {
                                                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                                                    var_438 = rdi_11;
                                                                                                                                                                                                    var_434 = r11_9;
                                                                                                                                                                                                    var_430 = r10_14;
                                                                                                                                                                                                    var_42c = r9_27;
                                                                                                                                                                                                label_18001c694:
                                                                                                                                                                                                    int32_t rcx_81 = 0;
                                                                                                                                                                                                    int64_t j = *arg1;
                                                                                                                                                                                                    
                                                                                                                                                                                                    while (j != 0)
                                                                                                                                                                                                    {
                                                                                                                                                                                                        if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        
                                                                                                                                                                                                        arg1[1] += 4;
                                                                                                                                                                                                        rcx_81 += 1;
                                                                                                                                                                                                        
                                                                                                                                                                                                        if (rcx_81 >= 6)
                                                                                                                                                                                                        {
                                                                                                                                                                                                            int32_t rdx_53 = 8;
                                                                                                                                                                                                            int32_t rax_246 = data_1800306f0;
                                                                                                                                                                                                            
                                                                                                                                                                                                            if ((rax_246 == 0x3d9 || rax_246 == 0x3de))
                                                                                                                                                                                                                rdx_53 = 0;
                                                                                                                                                                                                            
                                                                                                                                                                                                            int32_t rcx_82 = 0;
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (rdx_53 != 0)
                                                                                                                                                                                                            {
                                                                                                                                                                                                                do
                                                                                                                                                                                                                {
                                                                                                                                                                                                                    if (j == 0)
                                                                                                                                                                                                                        goto label_18001c978;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                                                                                                                                        goto label_18001c978;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                                                                    rcx_82 += 1;
                                                                                                                                                                                                                } while (rcx_82 < rdx_53);
                                                                                                                                                                                                                
                                                                                                                                                                                                                rax_246 = data_1800306f0;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            
                                                                                                                                                                                                            int32_t r15_8;
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (rax_246 == 0x3d9)
                                                                                                                                                                                                            {
                                                                                                                                                                                                                if (var_554_1 == 0)
                                                                                                                                                                                                                    goto label_18001c72b;
                                                                                                                                                                                                                
                                                                                                                                                                                                                r15_8 = var_568_1;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else if ((rax_246 != 0x3de || var_554_1 != 0))
                                                                                                                                                                                                                r15_8 = var_568_1;
                                                                                                                                                                                                            else
                                                                                                                                                                                                            {
                                                                                                                                                                                                            label_18001c72b:
                                                                                                                                                                                                                r15_8 = (r15_3 + 0x10);
                                                                                                                                                                                                                arg1[1] = r15_8;
                                                                                                                                                                                                                
                                                                                                                                                                                                                for (int32_t k = 0; k < 6; k += 1)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                    if (j == 0)
                                                                                                                                                                                                                        goto label_18001c978;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if ((arg1[1] + 4) > *(arg1 + 0xc))
                                                                                                                                                                                                                        goto label_18001c978;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    arg1[1] += 4;
                                                                                                                                                                                                                    int32_t r11_13 = arg1[1];
                                                                                                                                                                                                                    int32_t r8_35 = *((r11_13 - 4) + j);
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if (arg1[2] != 0)
                                                                                                                                                                                                                        r8_35 = ((((r8_35 >> 0x18) | ((r8_35 >> 8) & 0xff00)) | ((r8_35 & 0xff00) << 8)) | (r8_35 << 0x18));
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if (r8_35 > 0x18)
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                        r15_8 = (r11_13 - 4);
                                                                                                                                                                                                                        arg1[1] = r15_8;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            
                                                                                                                                                                                                            for (int32_t k_1 = arg1[1]; k_1 < r15_8; k_1 = arg1[1])
                                                                                                                                                                                                            {
                                                                                                                                                                                                                if (j == 0)
                                                                                                                                                                                                                    goto label_18001c978;
                                                                                                                                                                                                                
                                                                                                                                                                                                                if ((k_1 + 4) > *(arg1 + 0xc))
                                                                                                                                                                                                                    goto label_18001c978;
                                                                                                                                                                                                                
                                                                                                                                                                                                                arg1[1] += 4;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (r15_8 != 0)
                                                                                                                                                                                                                arg1[1] = r15_8;
                                                                                                                                                                                                            
                                                                                                                                                                                                            int32_t r9_31 = arg1[1];
                                                                                                                                                                                                            
                                                                                                                                                                                                            if (var_550_1 != 0)
                                                                                                                                                                                                            {
                                                                                                                                                                                                                if (sub_180005c80(arg1, r12, var_560_1, r9_31, var_564_1, &var_508, var_550_1) != 0)
                                                                                                                                                                                                                    goto label_18001c848;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else if (r9_31 == 0)
                                                                                                                                                                                                            {
                                                                                                                                                                                                            label_18001c848:
                                                                                                                                                                                                                int32_t rcx_88 = 0;
                                                                                                                                                                                                                int64_t k_2 = 0;
                                                                                                                                                                                                                void var_424;
                                                                                                                                                                                                                void* r8_41 = &var_424;
                                                                                                                                                                                                                
                                                                                                                                                                                                                do
                                                                                                                                                                                                                {
                                                                                                                                                                                                                    int32_t rdx_58 = *(r8_41 - 0x14);
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if (rdx_58 == 0)
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    rcx_88 += (rdx_58 / 3);
                                                                                                                                                                                                                    int32_t rdx_61 = *r8_41;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if (rdx_61 == 0)
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    rcx_88 += (rdx_61 / 3);
                                                                                                                                                                                                                    int32_t rdx_64 = *(r8_41 + 0x14);
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if (rdx_64 == 0)
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    rcx_88 += (rdx_64 / 3);
                                                                                                                                                                                                                    int32_t rdx_67 = *(r8_41 + 0x28);
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if (rdx_67 == 0)
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    rcx_88 += (rdx_67 / 3);
                                                                                                                                                                                                                    int32_t rdx_70 = *(r8_41 + 0x3c);
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if (rdx_70 == 0)
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    rcx_88 += (rdx_70 / 3);
                                                                                                                                                                                                                    k_2 += 5;
                                                                                                                                                                                                                    r8_41 += 0x64;
                                                                                                                                                                                                                } while (k_2 < 0x32);
                                                                                                                                                                                                                
                                                                                                                                                                                                                if (rcx_88 <= 0)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                label_18001c908:
                                                                                                                                                                                                                    r12[0x38] = 0;
                                                                                                                                                                                                                    int64_t rsi_20 = 0;
                                                                                                                                                                                                                    int32_t* rdi_15 = &var_438;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    while (true)
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                        if (*rdi_15 != 0)
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            int32_t rax_268;
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if (rdi_15[3] <= 0)
                                                                                                                                                                                                                                rax_268 = sub_180006250(arg1, r12, rdi_15);
                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                rax_268 = sub_180006420(arg1, r12, rdi_15);
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if (rax_268 == 0)
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            int32_t temp10_1;
                                                                                                                                                                                                                            int32_t temp11_1;
                                                                                                                                                                                                                            temp10_1 = HIGHD((0xaaaaaaab * *rdi_15));
                                                                                                                                                                                                                            temp11_1 = LOWD((0xaaaaaaab * *rdi_15));
                                                                                                                                                                                                                            r12[0x38] += (temp10_1 >> 1);
                                                                                                                                                                                                                            rsi_20 += 1;
                                                                                                                                                                                                                            rdi_15 = &rdi_15[5];
                                                                                                                                                                                                                            
                                                                                                                                                                                                                            if (rsi_20 < 0x32)
                                                                                                                                                                                                                                continue;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        
                                                                                                                                                                                                                        result_1 = 1;
                                                                                                                                                                                                                        break;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else if (sub_180001dd0(r12, rcx_88) != 0)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                    int32_t k_3 = 0;
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    if (*r12 > 0)
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                        int32_t* rdx_74 = nullptr;
                                                                                                                                                                                                                        
                                                                                                                                                                                                                        do
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                            *(rdx_74 + *(r12 + 8)) = 3;
                                                                                                                                                                                                                            k_3 += 1;
                                                                                                                                                                                                                            rdx_74 = &rdx_74[5];
                                                                                                                                                                                                                        } while (k_3 < *r12);
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    
                                                                                                                                                                                                                    goto label_18001c908;
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else if (sub_180005100(arg1, r12, var_560_1, r9_31, var_564_1, &var_508) != 0)
                                                                                                                                                                                                                goto label_18001c848;
                                                                                                                                                                                                            
                                                                                                                                                                                                            break;
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        
                                                                                    label_18001c978:
                                                                                        `eh vector vbase constructor iterator'(&var_438, 0x14, 0x32, _guard_check_icall);
                                                                                    }
                                                                                }
                                                                            }
                                                                            
                                                                            break;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    
                                    break;
                                }
                            }
                            
                        label_18001c992:
                            `eh vector vbase constructor iterator'(&var_500, 0x10, 0xa, _guard_check_icall);
                            result = result_1;
                        }
                    }
                }
            }
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_5a8));
    return result;
}

uint64_t sub_18001c9d0(int64_t* arg1, int32_t arg2, int32_t arg3)
{
    void var_268;
    int64_t rax_1 = (__security_cookie ^ &var_268);
    uint64_t result;
    
    if (arg3 != 0)
    {
        int32_t rsi_1 = 0;
        arg1[1] = arg3;
        void var_248;
        
        if (arg2 == 0)
        {
        label_18001cb22:
            int32_t r14_1 = 0;
            arg1[1] = arg3;
            
            if (arg2 == 0)
            {
            label_18001ccb1:
                result = 1;
            }
            else
            {
                while (true)
                {
                    int64_t r10_2 = *arg1;
                    
                    if (r10_2 != 0)
                    {
                        int32_t i = *(arg1 + 0xc);
                        
                        if ((arg1[1] + 4) <= i)
                        {
                            arg1[1] += 4;
                            int32_t r11_2 = arg1[1];
                            int32_t r8_3 = arg1[2];
                            uint64_t rdx_3 = *((r11_2 - 4) + r10_2);
                            
                            if (r8_3 != 0)
                                rdx_3 = _bswap(rdx_3);
                            
                            if ((r11_2 + 4) <= i)
                            {
                                arg1[1] += 4;
                                int32_t r11_3 = arg1[1];
                                int32_t rax_21 = *((r11_3 - 4) + r10_2);
                                
                                if (r8_3 != 0)
                                    rax_21 = _bswap(rax_21);
                                
                                if (r8_3 != 0)
                                    rdx_3 = rax_21;
                                
                                if ((r11_3 + 4) <= i)
                                {
                                    arg1[1] += 4;
                                    int32_t r11_4 = arg1[1];
                                    int32_t rdi_3 = *((r11_4 - 4) + r10_2);
                                    
                                    if (r8_3 != 0)
                                        rdi_3 = _bswap(rdi_3);
                                    
                                    if ((r11_4 + 4) <= i)
                                    {
                                        arg1[1] += 4;
                                        int32_t rbp_1 = arg1[1];
                                        int32_t rax_26 = *((rbp_1 - 4) + r10_2);
                                        
                                        if (r8_3 != 0)
                                            rax_26 = _bswap(rax_26);
                                        
                                        if (r8_3 != 0)
                                            rdi_3 = rax_26;
                                        
                                        if ((rbp_1 + 4) <= i)
                                        {
                                            arg1[1] += 4;
                                            int32_t r11_5 = arg1[1];
                                            int32_t rsi_2 = *((r11_5 - 4) + r10_2);
                                            
                                            if (r8_3 != 0)
                                                rsi_2 = _bswap(rsi_2);
                                            
                                            if ((r11_5 + 4) <= i)
                                            {
                                                arg1[1] += 4;
                                                int32_t r8_4 = arg1[1];
                                                
                                                if (rdx_3 > 0x64)
                                                {
                                                    arg1[1] = rdx_3;
                                                    rdx_3 = 0;
                                                    
                                                    while ((arg1[1] + 1) <= i)
                                                    {
                                                        arg1[1] += 1;
                                                        rdx_3 += 1;
                                                        char rax_34 = *((arg1[1] - 1) + r10_2);
                                                        
                                                        if (rax_34 == 0)
                                                        {
                                                            if (rdx_3 < 0x104)
                                                                *(&var_248 + rdx_3) = rax_34;
                                                            
                                                            arg1[1] = r8_4;
                                                            break;
                                                        }
                                                    }
                                                }
                                                
                                                if (rdi_3 > 0x64)
                                                {
                                                    int32_t r8_5 = arg1[1];
                                                    rdx_3 = 0;
                                                    arg1[1] = rdi_3;
                                                    
                                                    while ((arg1[1] + 1) <= i)
                                                    {
                                                        arg1[1] += 1;
                                                        rdx_3 += 1;
                                                        char rax_39 = *((arg1[1] - 1) + r10_2);
                                                        
                                                        if (rax_39 == 0)
                                                        {
                                                            if (rdx_3 < 0x104)
                                                                *(&var_248 + rdx_3) = rax_39;
                                                            
                                                            arg1[1] = r8_5;
                                                            break;
                                                        }
                                                    }
                                                }
                                                
                                                int32_t rdi_4 = arg1[1];
                                                
                                                if (sub_18001cd00(arg1, rdx_3, (rsi_2 + rbp_1)) != 0)
                                                {
                                                    r14_1 += 1;
                                                    arg1[1] = rdi_4;
                                                    
                                                    if (r14_1 >= arg2)
                                                        goto label_18001ccb1;
                                                    
                                                    continue;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    
                    result = 0;
                    break;
                }
            }
        }
        else
        {
            while (true)
            {
                int64_t rdx = *arg1;
                
                if (rdx != 0)
                {
                    int32_t r8 = *(arg1 + 0xc);
                    
                    if ((arg1[1] + 4) <= r8)
                    {
                        arg1[1] += 4;
                        int32_t r9_1 = arg1[1];
                        int32_t r11_1 = arg1[2];
                        int32_t r10_1 = *((r9_1 - 4) + rdx);
                        
                        if (r11_1 != 0)
                            r10_1 = _bswap(r10_1);
                        
                        if ((r9_1 + 4) <= r8)
                        {
                            arg1[1] += 4;
                            int32_t r9_2 = arg1[1];
                            int32_t rax_7 = *((r9_2 - 4) + rdx);
                            
                            if (r11_1 != 0)
                                rax_7 = _bswap(rax_7);
                            
                            if (r11_1 != 0)
                                r10_1 = rax_7;
                            
                            if ((r9_2 + 4) <= r8)
                            {
                                arg1[1] += 4;
                                int32_t rdi_1 = arg1[1];
                                int32_t r9_3 = *((rdi_1 - 4) + rdx);
                                
                                if (r11_1 != 0)
                                    r9_3 = _bswap(r9_3);
                                
                                if ((rdi_1 + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    int32_t rdi_2 = arg1[1];
                                    int32_t rax_12 = *((rdi_2 - 4) + rdx);
                                    
                                    if (r11_1 != 0)
                                        rax_12 = _bswap(rax_12);
                                    
                                    if (r11_1 != 0)
                                        r9_3 = rax_12;
                                    
                                    if ((rdi_2 + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) <= r8)
                                        {
                                            arg1[1] += 4;
                                            sub_180005050(arg1, r10_1, &var_248);
                                            void var_138;
                                            sub_180005050(arg1, r9_3, &var_138);
                                            rsi_1 += 1;
                                            
                                            if (rsi_1 >= arg2)
                                                goto label_18001cb22;
                                            
                                            continue;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                
                result = 0;
                break;
            }
        }
    }
    else
        result = (arg3 + 1);
    
    __security_check_cookie((rax_1 ^ &var_268));
    return result;
}

uint64_t sub_18001cd00(int64_t* arg1, int64_t arg2, int32_t arg3)
{
    if (arg3 == 0)
        return (arg3 + 1);
    
    arg1[1] = arg3;
    int32_t rax_1 = data_1800306f0;
    
    if ((rax_1 == 0x30b || (rax_1 == 0x362 || rax_1 == 0x36d)))
    {
        int32_t rcx_1;
        rcx_1 = sub_18001ce80(arg1, arg2, 0, arg3) != 0;
        return rcx_1;
    }
    
    int64_t r10 = *arg1;
    
    if (r10 != 0)
    {
        int32_t r8 = *(arg1 + 0xc);
        
        if ((arg3 + 4) <= r8)
        {
            arg1[1] = (arg3 + 4);
            
            if ((arg3 + 6) <= r8)
            {
                arg1[1] += 2;
                int32_t r9 = arg1[1];
                int32_t rbx = arg1[2];
                int16_t r11 = *((r9 - 2) + r10);
                
                if (rbx != 0)
                    r11 = (ROLW(r11, 8));
                
                if ((r9 + 2) > r8)
                    return 0;
                
                arg1[1] += 2;
                
                if ((arg1[1] + 4) <= r8)
                {
                    arg1[1] += 4;
                    int32_t rdi_1 = arg1[1];
                    int32_t r9_1 = *((rdi_1 - 4) + r10);
                    
                    if (rbx != 0)
                        r9_1 = _bswap(r9_1);
                    
                    if ((rdi_1 + 4) <= r8)
                    {
                        arg1[1] += 4;
                        int32_t rdi_2 = arg1[1];
                        int32_t rax_11 = *((rdi_2 - 4) + r10);
                        
                        if (rbx != 0)
                            rax_11 = _bswap(rax_11);
                        
                        if (rbx != 0)
                            r9_1 = rax_11;
                        
                        if ((rdi_2 + 4) <= r8)
                        {
                            arg1[1] += 4;
                            
                            if ((arg1[1] + 4) <= r8)
                            {
                                arg1[1] += 4;
                                
                                if ((arg1[1] + 4) <= r8)
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) <= r8)
                                    {
                                        arg1[1] += 4;
                                        int32_t rcx;
                                        rcx = sub_18001ce80(arg1, arg2, r11, r9_1) != 0;
                                        return rcx;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    return 0;
}

uint64_t sub_18001ce80(int64_t* arg1, int64_t arg2, int32_t arg3, int32_t arg4)
{
    void var_198;
    int64_t rax_1 = (__security_cookie ^ &var_198);
    uint64_t result;
    
    if (arg4 != 0)
    {
        arg1[1] = arg4;
        int32_t rcx = 0;
        
        if (arg3 == 0)
        {
        label_18001cef7:
            int64_t rdx_1 = *arg1;
            
            if (rdx_1 == 0)
                result = 0;
            else
            {
                int32_t r8 = *(arg1 + 0xc);
                
                if ((arg1[1] + 4) > r8)
                    result = 0;
                else
                {
                    arg1[1] += 4;
                    int32_t r9_1 = arg1[1];
                    int32_t r10_1 = arg1[2];
                    int32_t rsi_1 = *((r9_1 - 4) + rdx_1);
                    
                    if (r10_1 != 0)
                        rsi_1 = _bswap(rsi_1);
                    
                    if ((r9_1 + 4) > r8)
                        result = 0;
                    else
                    {
                        arg1[1] += 4;
                        int32_t rdi_1 = *((arg1[1] - 4) + rdx_1);
                        
                        if (r10_1 != 0)
                            rdi_1 = _bswap(rdi_1);
                        
                        int128_t var_178;
                        __builtin_memcpy(&var_178, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
                        int32_t rdi_2 = (rdi_1 + r9_1);
                        
                        if (sub_18001d8d0(arg1, &var_178) == 0)
                            result = 0;
                        else
                        {
                            int64_t r8_1 = *arg1;
                            
                            if (r8_1 == 0)
                                result = 0;
                            else
                            {
                                int32_t rdx_3 = *(arg1 + 0xc);
                                
                                if ((arg1[1] + 4) > rdx_3)
                                    result = 0;
                                else
                                {
                                    arg1[1] += 4;
                                    
                                    if ((arg1[1] + 4) > rdx_3)
                                        result = 0;
                                    else
                                    {
                                        arg1[1] += 4;
                                        
                                        if ((arg1[1] + 4) > rdx_3)
                                            result = 0;
                                        else
                                        {
                                            arg1[1] += 4;
                                            int32_t r10_2 = arg1[1];
                                            int32_t r9_2 = arg1[2];
                                            int32_t r14_1 = *((r10_2 - 4) + r8_1);
                                            
                                            if (r9_2 != 0)
                                                r14_1 = _bswap(r14_1);
                                            
                                            int32_t rbp_1;
                                            int32_t r11_1;
                                            
                                            if ((r10_2 + 4) <= rdx_3)
                                            {
                                                arg1[1] += 4;
                                                r11_1 = arg1[1];
                                                rbp_1 = *((r11_1 - 4) + r8_1);
                                                
                                                if (r9_2 != 0)
                                                    rbp_1 = _bswap(rbp_1);
                                            }
                                            
                                            if (((r10_2 + 4) > rdx_3 || (r11_1 + 4) > rdx_3))
                                            {
                                            label_18001d1e1:
                                                result = 0;
                                            }
                                            else
                                            {
                                                arg1[1] += 4;
                                                int32_t rax_25 = *((arg1[1] - 4) + r8_1);
                                                
                                                if (r9_2 != 0)
                                                    rax_25 = _bswap(rax_25);
                                                
                                                if (r9_2 != 0)
                                                    rbp_1 = rax_25;
                                                
                                                int32_t rbp_2 = (rbp_1 + r10_2);
                                                int32_t rcx_2 = 0;
                                                
                                                while (true)
                                                {
                                                    if ((arg1[1] + 4) > rdx_3)
                                                        goto label_18001d1e1;
                                                    
                                                    arg1[1] += 4;
                                                    rcx_2 += 1;
                                                    
                                                    if (rcx_2 >= 0x15)
                                                    {
                                                        if (rdi_2 != 0)
                                                        {
                                                            arg1[1] = rdi_2;
                                                            int32_t rdi_3 = 0;
                                                            uint32_t rsi_2 = (rsi_1 >> 4);
                                                            
                                                            if (rsi_2 != 0)
                                                            {
                                                                do
                                                                {
                                                                    __builtin_memcpy(&var_178, "\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x3f", 0x40);
                                                                    
                                                                    if (sub_18001d8d0(arg1, &var_178) == 0)
                                                                        goto label_18001d1e1;
                                                                    
                                                                    rdi_3 += 1;
                                                                } while (rdi_3 < rsi_2);
                                                            }
                                                        }
                                                        
                                                        if (rbp_2 != 0)
                                                        {
                                                            int32_t rsi_3 = 0;
                                                            arg1[1] = rbp_2;
                                                            
                                                            if (r14_1 != 0)
                                                            {
                                                                int64_t i = *arg1;
                                                                
                                                                do
                                                                {
                                                                    int32_t rdi_4 = arg1[1];
                                                                    
                                                                    if (i == 0)
                                                                        goto label_18001d1e1;
                                                                    
                                                                    int32_t r9_3 = *(arg1 + 0xc);
                                                                    
                                                                    if ((rdi_4 + 4) > r9_3)
                                                                        goto label_18001d1e1;
                                                                    
                                                                    arg1[1] += 4;
                                                                    int32_t r10_3 = arg1[1];
                                                                    int32_t r11_2 = arg1[2];
                                                                    int32_t rdx_5 = *((r10_3 - 4) + i);
                                                                    
                                                                    if (r11_2 != 0)
                                                                        rdx_5 = _bswap(rdx_5);
                                                                    
                                                                    if ((r10_3 + 4) > r9_3)
                                                                        goto label_18001d1e1;
                                                                    
                                                                    arg1[1] += 4;
                                                                    int32_t r9_4 = arg1[1];
                                                                    int32_t rax_33 = *((r9_4 - 4) + i);
                                                                    
                                                                    if (r11_2 != 0)
                                                                        rax_33 = _bswap(rax_33);
                                                                    
                                                                    if (r11_2 != 0)
                                                                        rdx_5 = rax_33;
                                                                    
                                                                    int32_t rax_34 = (rdx_5 + rdi_4);
                                                                    
                                                                    if (rax_34 > 0x64)
                                                                    {
                                                                        arg1[1] = rax_34;
                                                                        int64_t rdx_6 = 0;
                                                                        
                                                                        while (i != 0)
                                                                        {
                                                                            if ((arg1[1] + 1) > *(arg1 + 0xc))
                                                                                break;
                                                                            
                                                                            arg1[1] += 1;
                                                                            rdx_6 += 1;
                                                                            char rax_39 = *((arg1[1] - 1) + i);
                                                                            
                                                                            if (rax_39 == 0)
                                                                            {
                                                                                void var_138;
                                                                                
                                                                                if (rdx_6 < 0x104)
                                                                                    *(&var_138 + rdx_6) = rax_39;
                                                                                arg1[1] = r9_4;
                                                                                break;
                                                                            }
                                                                        }
                                                                    }
                                                                    
                                                                    rsi_3 += 1;
                                                                } while (rsi_3 < r14_1);
                                                            }
                                                        }
                                                        
                                                        result = 1;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        else
        {
            while (*arg1 != 0)
            {
                int32_t rdx = *(arg1 + 0xc);
                
                if ((arg1[1] + 4) > rdx)
                    break;
                
                arg1[1] += 4;
                
                if ((arg1[1] + 4) > rdx)
                    break;
                
                arg1[1] += 4;
                rcx += 1;
                
                if (rcx >= arg3)
                    goto label_18001cef7;
            }
            
            result = 0;
        }
    }
    else
        result = (arg4 + 1);
    
    __security_check_cookie((rax_1 ^ &var_198));
    return result;
}

int64_t sub_18001d1f0(wchar16* arg1, int64_t arg2)
{
    void var_258;
    int64_t rax_1 = (__security_cookie ^ &var_258);
    int64_t result;
    
    if (arg2 != 0)
    {
        int32_t var_226_1 = 0;
        wchar16 _Drive = 0;
        void _Dir;
        memset(&_Dir, 0, 0x200);
        _wsplitpath(arg1, &_Drive, &_Dir, nullptr, nullptr);
        wchar16* rcx_2 = &_Drive;
        wchar16 i;
        
        do
        {
            i = *rcx_2;
            *((arg2 - &_Drive) + rcx_2) = i;
            rcx_2 = &rcx_2[1];
        } while (i != 0);
        int64_t rcx_3 = (arg2 - 2);
        bool cond:0_1;
        
        do
        {
            cond:0_1 = *(rcx_3 + 2) != 0;
            rcx_3 += 2;
        } while (cond:0_1);
        int64_t rdx_3 = 0;
        int16_t i_1;
        
        do
        {
            i_1 = *(&_Dir + (rdx_3 << 1));
            *(rcx_3 + (rdx_3 << 1)) = i_1;
            rdx_3 += 1;
        } while (i_1 != 0);
        int64_t rax_2 = -1;
        int64_t rcx_4 = -1;
        
        do
            rcx_4 += 1;
         while (*(arg2 + (rcx_4 << 1)) != 0);
        
        if (rcx_4 != 0)
        {
            int64_t rcx_5 = -1;
            bool cond:1_1;
            
            do
            {
                cond:1_1 = *((arg2 + (rcx_5 << 1)) + 2) != 0;
                rcx_5 += 1;
            } while (cond:1_1);
            
            if (*((arg2 + (rcx_5 << 1)) - 2) != 0x5c)
            {
                bool cond:2_1;
                
                do
                {
                    cond:2_1 = *((arg2 + (rax_2 << 1)) + 2) != 0;
                    rax_2 += 1;
                } while (cond:2_1);
                
                if (*((arg2 + (rax_2 << 1)) - 2) != 0x2f)
                {
                    int32_t* rbx_1 = (arg2 - 2);
                    bool cond:3_1;
                    
                    do
                    {
                        cond:3_1 = *(rbx_1 + 2) != 0;
                        rbx_1 += 2;
                    } while (cond:3_1);
                    *rbx_1 = 0x5c;
                }
            }
        }
        
        result = 1;
    }
    else
        result = 0;
    
    __security_check_cookie((rax_1 ^ &var_258));
    return result;
}

int64_t sub_18001d360(HWND arg1, HWND arg2)
{
    void var_a8;
    int64_t rax_1 = (__security_cookie ^ &var_a8);
    int64_t result;
    
    if ((arg1 == 0 || arg2 == 0))
        result = 0;
    else
    {
        int32_t lpRect_1;
        GetWindowRect(arg1, &lpRect_1);
        int32_t var_50;
        int32_t r15_2 = (var_50 - lpRect_1);
        int32_t var_54;
        int32_t var_4c;
        int32_t rbp_2 = (var_4c - var_54);
        int32_t lpRect;
        GetWindowRect(arg2, &lpRect);
        int32_t var_60;
        int32_t rdi_2 = (var_60 - lpRect);
        HDC rax_2 = GetDC(arg1);
        int32_t rax_3 = GetDeviceCaps(rax_2, 8);
        int32_t rax_4 = GetDeviceCaps(rax_2, 0xa);
        ReleaseDC(arg1, rax_2);
        int32_t temp0_1;
        int32_t temp1_1;
        temp0_1 = HIGHD((rdi_2 - r15_2));
        temp1_1 = LOWD((rdi_2 - r15_2));
        int32_t rax_8 = ((temp1_1 - temp0_1) >> 1);
        int32_t X = (rax_8 + lpRect);
        
        if ((rax_8 + lpRect) < 0)
            X = 0;
        else if ((X + r15_2) > rax_3)
            X = (rax_3 - r15_2);
        
        int32_t var_64;
        int32_t var_5c;
        int32_t temp4_1;
        int32_t temp5_1;
        temp4_1 = HIGHD(((var_5c - var_64) - rbp_2));
        temp5_1 = LOWD(((var_5c - var_64) - rbp_2));
        int32_t rax_12 = ((temp5_1 - temp4_1) >> 1);
        int32_t Y = (rax_12 + var_64);
        
        if ((rax_12 + var_64) < 0)
            Y = 0;
        else if ((Y + rbp_2) > rax_4)
            Y = (rax_4 - rbp_2);
        
        result = SetWindowPos(arg1, nullptr, X, Y, 0, 0, 0x5);
    }
    
    __security_check_cookie((rax_1 ^ &var_a8));
    return result;
}

int64_t sub_18001d4e0(int64_t* arg1, int32_t* arg2)
{
    int64_t rdx = *arg1;
    
    if (rdx != 0)
    {
        int32_t rax_2 = (arg1[1] + 4);
        
        if (rax_2 <= *(arg1 + 0xc))
        {
            arg1[1] = rax_2;
            *arg2 = *((rax_2 - 4) + rdx);
            
            if (arg1[2] != 0)
            {
                int32_t rdx_1 = *((arg1[1] - 4) + *arg1);
                *arg2 = ((((rdx_1 & 0xff0000) | (rdx_1 >> 0x10)) >> 8) | (((rdx_1 & 0xff00) | (rdx_1 << 0x10)) << 8));
            }
            
            int64_t rdx_3 = *arg1;
            
            if ((rdx_3 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
            {
                arg2[1] = 0;
                return 0;
            }
            
            arg1[1] += 4;
            arg2[1] = *((arg1[1] - 4) + rdx_3);
            
            if (arg1[2] != 0)
            {
                int32_t rdx_4 = *((arg1[1] - 4) + *arg1);
                arg2[1] = ((((rdx_4 & 0xff0000) | (rdx_4 >> 0x10)) >> 8) | (((rdx_4 & 0xff00) | (rdx_4 << 0x10)) << 8));
            }
            
            return 1;
        }
    }
    
    *arg2 = 0;
    return 0;
}

int64_t sub_18001d5c0(int64_t* arg1, int32_t* arg2)
{
    int64_t rdx = *arg1;
    
    if (rdx != 0)
    {
        int32_t rax_2 = (arg1[1] + 4);
        
        if (rax_2 <= *(arg1 + 0xc))
        {
            arg1[1] = rax_2;
            *arg2 = *((rax_2 - 4) + rdx);
            
            if (arg1[2] != 0)
            {
                int32_t rdx_1 = *((arg1[1] - 4) + *arg1);
                *arg2 = ((((rdx_1 & 0xff0000) | (rdx_1 >> 0x10)) >> 8) | (((rdx_1 & 0xff00) | (rdx_1 << 0x10)) << 8));
            }
            
            int64_t rdx_3 = *arg1;
            
            if ((rdx_3 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
            {
                arg2[1] = 0;
                return 0;
            }
            
            arg1[1] += 4;
            arg2[1] = *((arg1[1] - 4) + rdx_3);
            
            if (arg1[2] != 0)
            {
                int32_t rdx_4 = *((arg1[1] - 4) + *arg1);
                arg2[1] = ((((rdx_4 & 0xff0000) | (rdx_4 >> 0x10)) >> 8) | (((rdx_4 & 0xff00) | (rdx_4 << 0x10)) << 8));
            }
            
            int64_t rdx_6 = *arg1;
            
            if ((rdx_6 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
            {
                arg2[2] = 0;
                return 0;
            }
            
            arg1[1] += 4;
            arg2[2] = *((arg1[1] - 4) + rdx_6);
            
            if (arg1[2] != 0)
            {
                int32_t rdx_7 = *((arg1[1] - 4) + *arg1);
                arg2[2] = ((((rdx_7 & 0xff0000) | (rdx_7 >> 0x10)) >> 8) | (((rdx_7 << 0x10) | (rdx_7 & 0xff00)) << 8));
            }
            
            return 1;
        }
    }
    
    *arg2 = 0;
    return 0;
}

int64_t sub_18001d710(int64_t* arg1, int32_t* arg2)
{
    int64_t rdx = *arg1;
    
    if (rdx != 0)
    {
        int32_t rax_2 = (arg1[1] + 4);
        
        if (rax_2 <= *(arg1 + 0xc))
        {
            arg1[1] = rax_2;
            *arg2 = *((rax_2 - 4) + rdx);
            
            if (arg1[2] != 0)
            {
                int32_t rdx_1 = *((arg1[1] - 4) + *arg1);
                *arg2 = ((((rdx_1 & 0xff0000) | (rdx_1 >> 0x10)) >> 8) | (((rdx_1 & 0xff00) | (rdx_1 << 0x10)) << 8));
            }
            
            int64_t rdx_3 = *arg1;
            
            if ((rdx_3 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
            {
                arg2[1] = 0;
                return 0;
            }
            
            arg1[1] += 4;
            arg2[1] = *((arg1[1] - 4) + rdx_3);
            
            if (arg1[2] != 0)
            {
                int32_t rdx_4 = *((arg1[1] - 4) + *arg1);
                arg2[1] = ((((rdx_4 & 0xff0000) | (rdx_4 >> 0x10)) >> 8) | (((rdx_4 & 0xff00) | (rdx_4 << 0x10)) << 8));
            }
            
            int64_t rdx_6 = *arg1;
            
            if ((rdx_6 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
            {
                arg2[2] = 0;
                return 0;
            }
            
            arg1[1] += 4;
            arg2[2] = *((arg1[1] - 4) + rdx_6);
            
            if (arg1[2] != 0)
            {
                int32_t rdx_7 = *((arg1[1] - 4) + *arg1);
                arg2[2] = ((((rdx_7 & 0xff0000) | (rdx_7 >> 0x10)) >> 8) | (((rdx_7 << 0x10) | (rdx_7 & 0xff00)) << 8));
            }
            
            int64_t rdx_9 = *arg1;
            
            if ((rdx_9 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
            {
                arg2[3] = 0;
                return 0;
            }
            
            arg1[1] += 4;
            arg2[3] = *((arg1[1] - 4) + rdx_9);
            
            if (arg1[2] != 0)
            {
                int32_t rdx_10 = *((arg1[1] - 4) + *arg1);
                arg2[3] = ((((rdx_10 & 0xff0000) | (rdx_10 >> 0x10)) >> 8) | (((rdx_10 << 0x10) | (rdx_10 & 0xff00)) << 8));
            }
            
            return 1;
        }
    }
    
    *arg2 = 0;
    return 0;
}

uint64_t sub_18001d8d0(int64_t* arg1, int32_t* arg2)
{
    int64_t rdx = *arg1;
    int32_t rax_2;
    
    if (rdx != 0)
        rax_2 = (arg1[1] + 4);
    
    if ((rdx != 0 && rax_2 <= *(arg1 + 0xc)))
    {
        arg1[1] = rax_2;
        *arg2 = *((rax_2 - 4) + rdx);
        
        if (arg1[2] != 0)
        {
            int32_t rdx_1 = *((arg1[1] - 4) + *arg1);
            *arg2 = ((((rdx_1 & 0xff0000) | (rdx_1 >> 0x10)) >> 8) | (((rdx_1 & 0xff00) | (rdx_1 << 0x10)) << 8));
        }
        
        int64_t rdx_3 = *arg1;
        
        if ((rdx_3 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
        {
            arg2[1] = 0;
            return 0;
        }
        
        arg1[1] += 4;
        arg2[1] = *((arg1[1] - 4) + rdx_3);
        
        if (arg1[2] != 0)
        {
            int32_t rdx_4 = *((arg1[1] - 4) + *arg1);
            arg2[1] = ((((rdx_4 & 0xff0000) | (rdx_4 >> 0x10)) >> 8) | (((rdx_4 & 0xff00) | (rdx_4 << 0x10)) << 8));
        }
        
        int64_t rdx_6 = *arg1;
        
        if ((rdx_6 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
        {
            arg2[2] = 0;
            return 0;
        }
        
        arg1[1] += 4;
        arg2[2] = *((arg1[1] - 4) + rdx_6);
        
        if (arg1[2] != 0)
        {
            int32_t rdx_7 = *((arg1[1] - 4) + *arg1);
            arg2[2] = ((((rdx_7 & 0xff0000) | (rdx_7 >> 0x10)) >> 8) | (((rdx_7 << 0x10) | (rdx_7 & 0xff00)) << 8));
        }
        
        int64_t rdx_9 = *arg1;
        
        if ((rdx_9 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
        {
            arg2[3] = 0;
            return 0;
        }
        
        arg1[1] += 4;
        arg2[3] = *((arg1[1] - 4) + rdx_9);
        
        if (arg1[2] != 0)
        {
            int32_t rdx_10 = *((arg1[1] - 4) + *arg1);
            arg2[3] = ((((rdx_10 & 0xff0000) | (rdx_10 >> 0x10)) >> 8) | (((rdx_10 << 0x10) | (rdx_10 & 0xff00)) << 8));
        }
        
        int64_t rdx_12 = *arg1;
        
        if ((rdx_12 == 0 || (arg1[1] + 4) > *(arg1 + 0xc)))
        {
            arg2[4] = 0;
            return 0;
        }
        
        arg1[1] += 4;
        arg2[4] = *((arg1[1] - 4) + rdx_12);
        
        if (arg1[2] != 0)
        {
            int32_t rdx_13 = *((arg1[1] - 4) + *arg1);
            arg2[4] = ((((rdx_13 & 0xff0000) | (rdx_13 >> 0x10)) >> 8) | (((rdx_13 << 0x10) | (rdx_13 & 0xff00)) << 8));
        }
        
        if (((((((sub_180006f20(arg1, &arg2[5]) != 0 && sub_180006f20(arg1, &arg2[6]) != 0) && sub_180006f20(arg1, &arg2[7]) != 0) && sub_180006f20(arg1, &arg2[8]) != 0) && (sub_180006f20(arg1, &arg2[9]) != 0 && sub_180006f20(arg1, &arg2[0xa]) != 0)) && (sub_180006f20(arg1, &arg2[0xb]) != 0 && sub_180006f20(arg1, &arg2[0xc]) != 0)) && (sub_180006f20(arg1, &arg2[0xd]) != 0 && sub_180006f20(arg1, &arg2[0xe]) != 0)))
        {
            int32_t rcx_46;
            rcx_46 = sub_180006f20(arg1, &arg2[0xf]) != 0;
            return rcx_46;
        }
    }
    else
        *arg2 = 0;
    
    return 0;
}

uint64_t sub_18001dbf0(int128_t* arg1, int64_t arg2, int64_t arg3)
{
    int64_t s;
    int64_t rax_1 = (__security_cookie ^ &s);
    __builtin_memset(&s, 0, 0x40);
    uint64_t result;
    
    for (int16_t i = 0; i < 4; i += 1)
    {
        int16_t j = 0;
        uint32_t r11_1 = (i << 2);
        
        do
        {
            uint32_t j_1 = j;
            int16_t k = 0;
            uint64_t rax_3 = (r11_1 + j_1);
            int128_t zmm1 = *(&s + (rax_3 << 2));
            
            do
            {
                uint64_t k_1 = k;
                k += 1;
                result = (r11_1 + k_1);
                int128_t zmm0;
                zmm0 = (*(arg3 + ((j_1 + (k_1 << 2)) << 2)) * *(arg2 + (result << 2)));
                zmm1 = (zmm1 + zmm0);
            } while (k < 4);
            
            j += 1;
            *(&s + (rax_3 << 2)) = zmm1;
        } while (j < 4);
    }
    
    *arg1 = s;
    int64_t var_58;
    arg1[1] = var_58;
    int64_t var_48;
    arg1[2] = var_48;
    int64_t var_38;
    arg1[3] = var_38;
    __security_check_cookie((rax_1 ^ &s));
    return result;
}

float sub_18001dd00(int32_t* arg1, float* arg2)
{
    float result = arg1[1];
    float zmm3 = arg1[2];
    *arg2 = ((1f - ((result + result) * result)) - ((zmm3 + zmm3) * zmm3));
    result = arg1[3];
    float zmm1 = *arg1;
    arg2[4] = (((zmm1 + zmm1) * arg1[1]) + ((result + result) * arg1[2]));
    float zmm2 = *arg1;
    result = arg1[3];
    arg2[8] = (((zmm2 + zmm2) * arg1[2]) - ((result + result) * arg1[1]));
    zmm1 = *arg1;
    result = arg1[3];
    arg2[1] = (((zmm1 + zmm1) * arg1[1]) - ((result + result) * arg1[2]));
    result = *arg1;
    zmm3 = arg1[2];
    arg2[5] = ((1f - ((result + result) * result)) - ((zmm3 + zmm3) * zmm3));
    zmm1 = arg1[1];
    result = arg1[3];
    arg2[9] = (((result + result) * *arg1) + ((zmm1 + zmm1) * arg1[2]));
    zmm2 = arg1[3];
    zmm1 = *arg1;
    arg2[2] = (((zmm1 + zmm1) * arg1[2]) + ((zmm2 + zmm2) * arg1[1]));
    result = arg1[3];
    zmm3 = arg1[1];
    arg2[6] = (((zmm3 + zmm3) * arg1[2]) - ((result + result) * *arg1));
    result = *arg1;
    zmm2 = arg1[1];
    zmm1 = ((result + result) * result);
    result = ((zmm2 + zmm2) * zmm2);
    arg2[3] = 0;
    arg2[7] = 0;
    *(arg2 + 0x2c) = 0;
    *(arg2 + 0x34) = 0;
    arg2[0xf] = 0x3f800000;
    arg2[0xa] = ((1f - zmm1) - result);
    return result;
}

int512_t sub_18001de90(int16_t arg1) __pure
{
    uint32_t rdx_1 = arg1;
    uint32_t rax_1 = (rdx_1 >> 0xf);
    int32_t rdx = (rdx_1 & 0x3ff);
    int32_t rcx_2 = ((rdx_1 >> 0xa) & 0x1f);
    int512_t result;
    
    if (rcx_2 == 0)
    {
        if (rdx == 0)
        {
            result = (rax_1 << 0x1f);
            return result;
        }
        
        do
        {
            rdx *= 2;
            rcx_2 -= 1;
        } while (!((TEST_BITD(rdx, 0xa))));
        
        rcx_2 += 1;
        rdx &= 0xfffffbff;
    }
    else if (rcx_2 == 0x1f)
    {
        if (rdx == 0)
        {
            result = ((rax_1 << 0x1f) | 0x7f800000);
            return result;
        }
        
        result = ((((rax_1 << 0x12) | rdx) | 0x3fc00) << 0xd);
        return result;
    }
    
    result = ((((rax_1 << 0x12) | rdx) << 0xd) | ((rcx_2 << 0x17) + 0x38000000));
    return result;
}

uint64_t sub_18001df30(int64_t arg1, int64_t arg2, wchar16* arg3, int512_t arg4 @ zmm1)
{
    void var_168;
    int64_t rax_1 = (__security_cookie ^ &var_168);
    void lpMultiByteStr;
    memset(&lpMultiByteStr, 0, 0x104);
    WideCharToMultiByte(0xfde9, 0, arg3, 0xffffffff, &lpMultiByteStr, 0x103, nullptr, nullptr);
    uint64_t result;
    int64_t rcx_2;
    result = sub_1800229e0(&lpMultiByteStr, arg4);
    int128_t* result_2 = result;
    
    if (result != 0)
    {
        int32_t result_1 = sub_18001dff0(rcx_2, arg2, arg3, result_2);
        unzClose(result_2);
        result = result_1;
    }
    
    __security_check_cookie((rax_1 ^ &var_168));
    return result;
}

uint64_t sub_18001dff0(int64_t arg1, int64_t arg2, wchar16* arg3, int128_t* arg4)
{
    int64_t var_d08 = -2;
    void var_d68;
    int64_t rax_1 = (__security_cookie ^ &var_d68);
    int64_t rsi = arg2;
    int64_t i_5;
    int32_t rax_2;
    int32_t result_1;
    
    if (((arg2 != 0 && arg3 != 0) && arg4 != 0))
    {
        result_1 = 0;
        i_5 = 0;
        int32_t var_cf8_1 = 0;
        rax_2 = unzGetGlobalInfo64(arg4, &i_5);
    }
    
    uint64_t result;
    
    if ((((arg2 == 0 || arg3 == 0) || arg4 == 0) || rax_2 != 0))
        result = 0;
    else
    {
        int32_t r15_1 = -1;
        void _FullPath;
        int512_t zmm0_1 = memset(&_FullPath, 0, 0x208);
        int64_t r12_1 = 0;
        int32_t rdi_1 = 0;
        int64_t i = i_5;
        void var_c88;
        int16_t _String1;
        wchar16 var_868;
        void var_668;
        
        if (i != 0)
        {
            do
            {
                void var_ce8;
                unzGetCurrentFileInfo64(arg4, &var_ce8, &var_668, 0x104, memset(&var_668, 0, 0x104), 0, 0, 0, 0);
                memset(&var_c88, 0, 0x208);
                MultiByteToWideChar(0xfde9, 0, &var_668, 0xffffffff, &var_c88, 0x103);
                int32_t rsi_1 = 0;
                int64_t rax_3 = -1;
                
                do
                    rax_3 += 1;
                 while (*(&var_c88 + (rax_3 << 1)) != 0);
                
                if (rax_3 > 0)
                {
                    int16_t rax_5 = *(&var_c88 + ((rax_3 - 1) << 1));
                    
                    if ((rax_5 == 0x5c || rax_5 == 0x2f))
                        rsi_1 = 1;
                }
                
                memset(&_String1, 0, 0x208);
                zmm0_1 = memset(&var_868, 0, 0x200);
                _wsplitpath(&var_c88, nullptr, nullptr, nullptr, &var_868);
                
                if (var_868 != 0x2e)
                    _String1 = 0;
                else
                {
                    int64_t rcx_9 = 0;
                    int16_t j;
                    
                    do
                    {
                        void var_866;
                        j = *(&var_866 + rcx_9);
                        *(&_String1 + rcx_9) = j;
                        rcx_9 += 2;
                    } while (j != 0);
                }
                
                if ((rsi_1 == 0 && _wcsicmp(&_String1, u"bdae") == 0))
                {
                    r15_1 = rdi_1;
                    int64_t var_cc8;
                    r12_1 = var_cc8;
                    int64_t rax_7 = 0;
                    int16_t j_1;
                    
                    do
                    {
                        j_1 = *(&var_c88 + rax_7);
                        *(&_FullPath + rax_7) = j_1;
                        rax_7 += 2;
                    } while (j_1 != 0);
                }
                
                rdi_1 += 1;
                i = i_5;
                
                if (rdi_1 < i)
                {
                    zmm0_1 = sub_180022920(arg4, zmm0_1);
                    i = i_5;
                }
            } while (rdi_1 < i);
            
            rsi = arg2;
        }
        
        if (r15_1 >= 0)
        {
            int64_t s_1 = sub_18001e410(zmm0_1, arg4, i, r15_1, r12_1);
            
            if (s_1 != 0)
            {
                void var_258;
                memset(&var_258, 0, 0x208);
                sub_18001d1f0(arg3, &var_258);
                memset(&_String1, 0, 0x208);
                memset(&var_868, 0, 0x200);
                memset(&var_668, 0, 0x200);
                _wsplitpath(&_FullPath, nullptr, nullptr, &var_868, &var_668);
                int64_t rcx_18 = 0;
                int16_t i_1;
                
                do
                {
                    i_1 = *(&var_868 + rcx_18);
                    *(&_String1 + rcx_18) = i_1;
                    rcx_18 += 2;
                } while (i_1 != 0);
                void var_a7a;
                void* rcx_19 = &var_a7a;
                
                do
                    rcx_19 += 2;
                 while (*rcx_19 != 0);
                
                int64_t rdx_4 = 0;
                int16_t i_2;
                
                do
                {
                    i_2 = *(&var_668 + (rdx_4 << 1));
                    *(rcx_19 + (rdx_4 << 1)) = i_2;
                    rdx_4 += 1;
                } while (i_2 != 0);
                memset(&var_c88, 0, 0x208);
                int64_t rcx_21 = 0;
                int16_t i_3;
                
                do
                {
                    i_3 = *(&var_258 + rcx_21);
                    *(&var_c88 + rcx_21) = i_3;
                    rcx_21 += 2;
                } while (i_3 != 0);
                void var_c8a;
                void* rcx_22 = &var_c8a;
                
                do
                    rcx_22 += 2;
                 while (*rcx_22 != 0);
                
                int64_t rdx_5 = 0;
                int16_t i_4;
                
                do
                {
                    i_4 = &_String1[rdx_5];
                    *(rcx_22 + (rdx_5 << 1)) = i_4;
                    rdx_5 += 1;
                } while (i_4 != 0);
                int64_t s;
                __builtin_memset(&s, 0, 0x14);
                
                if (r12_1 != 0)
                {
                    s = s_1;
                    int64_t var_d20;
                    *var_d20[4] = r12_1;
                    var_d20 = 0;
                    result_1 = sub_180003f40(&s, rsi, &var_c88);
                }
                
                sub_18002367c(s_1);
            }
        }
        
        result = result_1;
    }
    
    __security_check_cookie((rax_1 ^ &var_d68));
    return result;
}

int64_t sub_18001e410(int512_t arg1 @ zmm0, int128_t* arg2, int64_t arg3, int32_t arg4, int64_t arg5)
{
    if (arg2 != 0)
    {
        int32_t rax_2;
        int512_t zmm0;
        rax_2 = unzGoToFirstFile(arg2, arg1);
        
        if (rax_2 == 0)
        {
            int32_t rbx = 0;
            
            if (arg3 != 0)
            {
                while (arg4 != rbx)
                {
                    rbx += 1;
                    
                    if (rbx < arg3)
                        zmm0 = sub_180022920(arg2, zmm0);
                    
                    if (rbx >= arg3)
                        break;
                }
            }
            
            /* tailcall */
            return sub_18001e4a0(zmm0, arg2, arg5);
        }
    }
    
    return 0;
}

int64_t sub_18001e4a0(int512_t arg1 @ zmm0, int128_t* arg2, int64_t arg3)
{
    arg_10 = arg2;
    int64_t var_18 = -2;
    int32_t rsi = arg3;
    
    if ((arg2 != 0 && arg3 != 0))
    {
        if (unzOpenCurrentFile(arg2, arg1) == 0)
        {
            int64_t result = j_operator new(rsi);
            
            if (result == 0)
            {
                sub_180022770(arg2);
                return 0;
            }
            
            memset(result, 0, rsi);
            sub_1800230a0(arg2, result, rsi);
            sub_180022770(arg2);
            return result;
        }
        
        sub_180022770(arg2);
    }
    
    return 0;
}

uint64_t sub_18001e550(void* arg1, int32_t* arg2, int64_t arg3, int32_t* arg4)
{
    int32_t rbx = *arg2;
    int32_t r14 = 0;
    int32_t rsi = *arg4;
    void* r13 = arg1;
    void var_98;
    
    if (rbx == 0)
    {
        rbx = 1;
        r13 = &var_98;
    }
    else
        *arg2 = 0;
    
    int64_t var_88 = arg3;
    int64_t (* var_58)(int64_t arg1, int32_t arg2, int32_t arg3) = zcalloc;
    int64_t (* var_50)(int64_t arg1, int64_t arg2) = sub_180020370;
    int32_t var_80 = 0;
    int64_t var_68 = 0;
    int64_t var_48 = 0;
    int64_t** rax = zcalloc(0, 1, 0x1bf0);
    
    if (rax == 0)
        return 0xfffffffc;
    
    int64_t** var_60_1 = rax;
    *rax = &var_88;
    rax[8] = 0;
    rax[1] = 0x3f34;
    int32_t rax_2 = sub_18001e810(&var_88, 0xf);
    
    if (rax_2 != 0)
    {
        var_50(var_48, rax);
        var_60_1 = nullptr;
    }
    
    if (rax_2 != 0)
        return rax_2;
    
    int32_t rax_3 = 0;
    void* var_78_1 = r13;
    int32_t var_70_1 = 0;
    int32_t rax_6;
    
    while (true)
    {
        if (rax_3 == 0)
        {
            int32_t rax_4 = rbx;
            
            if (rbx > 0xffffffff)
                rax_4 = -1;
            
            var_70_1 = rax_4;
            rbx -= rax_4;
        }
        
        if (var_80 == 0)
        {
            int32_t rax_5 = rsi;
            
            if (rsi > 0xffffffff)
                rax_5 = -1;
            
            var_80 = rax_5;
            rsi -= rax_5;
        }
        
        rax_6 = sub_18001eb30(&var_88, 0);
        
        if (rax_6 != 0)
            break;
        
        rax_3 = var_70_1;
    }
    
    *arg4 -= (var_80 + rsi);
    int32_t var_6c;
    
    if (r13 != &var_98)
        *arg2 = var_6c;
    else if ((var_6c != 0 && rax_6 == 0xfffffffb))
        rbx = 1;
    
    if (var_58 != 0)
    {
        int64_t (* r8)(int64_t arg1, int64_t arg2) = var_50;
        
        if (r8 != 0)
        {
            int64_t** rdx_1 = var_60_1;
            
            if ((rdx_1 != 0 && (*rdx_1 == &var_88 && (rdx_1[1] - 0x3f34) <= 0x1f)))
            {
                int64_t rax_11 = rdx_1[8];
                
                if (rax_11 != 0)
                {
                    r8(var_48, rax_11);
                    r8 = var_50;
                    rdx_1 = var_60_1;
                }
                
                r8(var_48, rdx_1);
            }
        }
    }
    
    if (rax_6 != 1)
    {
        if (rax_6 != 2)
        {
            if (rax_6 == 0xfffffffb)
                r14 = (rax_6 + 2);
            
            if ((rax_6 != 0xfffffffb || var_70_1 == -(rbx)))
                r14 = rax_6;
        }
        else
            r14 = (rax_6 - 5);
    }
    
    return r14;
}

int64_t sub_18001e750(void* arg1)
{
    if ((arg1 != 0 && (*(arg1 + 0x30) != 0 && *(arg1 + 0x38) != 0)))
    {
        int64_t* rdx_1 = *(arg1 + 0x28);
        
        if ((rdx_1 != 0 && (*rdx_1 == arg1 && (rdx_1[1] - 0x3f34) <= 0x1f)))
        {
            *(rdx_1 + 0x24) = 0;
            *(arg1 + 0x1c) = 0;
            *(arg1 + 0xc) = 0;
            *(arg1 + 0x20) = 0;
            int32_t rax_3 = rdx_1[2];
            
            if (rax_3 != 0)
                *(arg1 + 0x4c) = (rax_3 & 1);
            
            rdx_1[1] = 0x3f34;
            rdx_1[0x11] = &rdx_1[0xaa];
            rdx_1[0xd] = &rdx_1[0xaa];
            rdx_1[0xc] = &rdx_1[0xaa];
            *(rdx_1 + 0x14) = 0;
            rdx_1[3] = 0xffffffff;
            *(rdx_1 + 0x1c) = 0x8000;
            rdx_1[5] = 0;
            rdx_1[9] = 0;
            rdx_1[0x37c] = 1;
            *(rdx_1 + 0x1be4) = 0xffffffff;
            return 0;
        }
    }
    
    return 0xfffffffe;
}

int64_t sub_18001e810(void* arg1, int32_t arg2)
{
    int32_t rdi = arg2;
    
    if ((arg1 != 0 && *(arg1 + 0x30) != 0))
    {
        int64_t r8_1 = *(arg1 + 0x38);
        
        if (r8_1 != 0)
        {
            int64_t* rsi_1 = *(arg1 + 0x28);
            
            if ((rsi_1 != 0 && (*rsi_1 == arg1 && (rsi_1[1] - 0x3f34) <= 0x1f)))
            {
                int32_t rbp_1;
                
                if (arg2 >= 0)
                {
                    rbp_1 = ((rdi >> 4) + 5);
                    
                    if (rdi < 0x30)
                        rdi &= 0xf;
                    
                    goto label_18001e89d;
                }
                
                if (arg2 >= 0xfffffff1)
                {
                    rbp_1 = 0;
                    rdi = -(rdi);
                label_18001e89d:
                    
                    if ((rdi == 0 || (rdi - 8) <= 7))
                    {
                        int64_t rdx = rsi_1[8];
                        
                        if ((rdx != 0 && rsi_1[6] != rdi))
                        {
                            r8_1(*(arg1 + 0x40), rdx);
                            rsi_1[8] = 0;
                        }
                        
                        rsi_1[2] = rbp_1;
                        rsi_1[6] = rdi;
                        
                        if ((*(arg1 + 0x30) != 0 && *(arg1 + 0x38) != 0))
                        {
                            int64_t* rcx_1 = *(arg1 + 0x28);
                            
                            if ((rcx_1 != 0 && (*rcx_1 == arg1 && (rcx_1[1] - 0x3f34) <= 0x1f)))
                            {
                                *(rcx_1 + 0x34) = 0;
                                *(rcx_1 + 0x3c) = 0;
                                return sub_18001e750(arg1);
                            }
                        }
                    }
                }
            }
        }
    }
    
    return 0xfffffffe;
}

uint64_t sub_18001e940(void* arg1, int32_t arg2, char* arg3, int32_t arg4)
{
    if ((arg3 == 0 || (*arg3 != 0x31 || arg4 != 0x58)))
        return 0xfffffffa;
    
    if (arg1 == 0)
        return (arg1 - 2);
    
    *(arg1 + 0x20) = 0;
    
    if (*(arg1 + 0x30) == 0)
    {
        *(arg1 + 0x40) = 0;
        *(arg1 + 0x30) = zcalloc;
    }
    
    if (*(arg1 + 0x38) == 0)
        *(arg1 + 0x38) = sub_180020370;
    
    void** rax_1 = *(arg1 + 0x30)(*(arg1 + 0x40), 1, 0x1bf0);
    
    if (rax_1 == 0)
        return (rax_1 - 4);
    
    *(arg1 + 0x28) = rax_1;
    *rax_1 = arg1;
    rax_1[8] = 0;
    rax_1[1] = 0x3f34;
    int32_t rax_3 = sub_18001e810(arg1, arg2);
    
    if (rax_3 != 0)
    {
        *(arg1 + 0x38)(*(arg1 + 0x40), rax_1);
        *(arg1 + 0x28) = 0;
    }
    
    return rax_3;
}

int64_t sub_18001ea30(void* arg1, int64_t arg2, int32_t arg3)
{
    void* rbx = *(arg1 + 0x28);
    uint64_t rbp = arg3;
    
    if (*(rbx + 0x40) == 0)
    {
        int64_t rax_1 = *(arg1 + 0x30)(*(arg1 + 0x40), (1 << *(rbx + 0x30)), 1);
        *(rbx + 0x40) = rax_1;
        
        if (rax_1 == 0)
            return 1;
    }
    
    if (*(rbx + 0x34) == 0)
    {
        *(rbx + 0x34) = (1 << *(rbx + 0x30));
        *(rbx + 0x38) = 0;
    }
    
    uint64_t rdi_2 = *(rbx + 0x34);
    int32_t rax_3;
    
    if (rbp < rdi_2)
    {
        uint32_t count = (rdi_2 - *(rbx + 0x3c));
        
        if (count > rbp)
            count = rbp;
        
        memcpy((*(rbx + 0x3c) + *(rbx + 0x40)), (arg2 - rbp), count);
        int32_t rbp_1 = (rbp - count);
        
        if (rbp == count)
        {
            *(rbx + 0x3c) += count;
            int32_t rax_4 = *(rbx + 0x3c);
            
            if (rax_4 == *(rbx + 0x34))
                rax_4 = 0;
            
            *(rbx + 0x3c) = rax_4;
            int32_t rax_5 = *(rbx + 0x38);
            
            if (rax_5 < *(rbx + 0x34))
                *(rbx + 0x38) = (rax_5 + count);
        }
        else
        {
            uint64_t r8_2 = rbp_1;
            memcpy(*(rbx + 0x40), (arg2 - r8_2), r8_2);
            rax_3 = *(rbx + 0x34);
            *(rbx + 0x3c) = rbp_1;
            *(rbx + 0x38) = rax_3;
        }
    }
    else
    {
        memcpy(*(rbx + 0x40), (arg2 - rdi_2), rdi_2);
        rax_3 = *(rbx + 0x34);
        *(rbx + 0x3c) = 0;
        *(rbx + 0x38) = rax_3;
    }
    return 0;
}

uint64_t sub_18001eb30(int64_t* arg1, int32_t arg2)
{
    int64_t* rdi = arg1;
    
    if ((arg1 != 0 && (arg1[6] != 0 && arg1[7] != 0)))
    {
        int64_t* r13_1 = arg1[5];
        
        if ((r13_1 != 0 && (*r13_1 == arg1 && ((r13_1[1] - 0x3f34) <= 0x1f && (arg1[2] != 0 && (*arg1 != 0 || arg1[1] == 0))))))
        {
            if (r13_1[1] == 0x3f3f)
                r13_1[1] = 0x3f40;
            
            uint32_t count_3 = arg1[3];
            uint32_t count_6 = count_3;
            char* r9 = arg1[2];
            int32_t rax_4 = (r13_1[1] - 0x3f34);
            uint32_t i_1 = arg1[1];
            char* r14 = *arg1;
            uint32_t r15 = r13_1[9];
            int32_t i = *(r13_1 + 0x4c);
            char* var_58 = r9;
            count_5 = count_3;
            uint32_t i_4 = i_1;
            uint32_t count_4 = count_6;
            arg_18 = 0;
            
            if (rax_4 <= 0x1e)
            {
                while (true)
                {
                    void* r8_1 = &r13_1[0xe];
                    char var_68;
                    int32_t rcx_40;
                    int32_t r12_4;
                    
                    switch (jump_table_180020274[rax_4])
                    {
                        case 0x1ec3c:
                        {
                            int32_t rdx = r13_1[2];
                            
                            if (rdx == 0)
                            {
                                r13_1[1] = 0x3f40;
                            label_18001ecc9:
                                rax_4 = (r13_1[1] - 0x3f34);
                                
                                if (rax_4 > 0x1e)
                                    break;
                                
                                count_6 = count_4;
                                continue;
                            }
                            
                            for (; i < 0x10; i += 8)
                            {
                                if (i_1 == 0)
                                    goto label_180020120;
                                
                                i_1 -= 1;
                                r15 += (*r14 << i);
                                r14 = &r14[1];
                            }
                            
                            if (((rdx & 2) != 0 && r15 == 0x8b1f))
                            {
                                if (r13_1[6] == 0)
                                    r13_1[6] = 0xf;
                                
                                r13_1[4] = 0;
                                var_68 = 0x8b1f;
                                r13_1[4] = sub_180021060(0, &var_68, 2);
                                r15 = 0;
                                i = 0;
                                r13_1[1] = 0x3f35;
                                count_3 = count_5;
                                goto label_18001ecc1;
                            }
                            
                            void* rax_10 = r13_1[5];
                            
                            if (rax_10 != 0)
                                *(rax_10 + 0x40) = 0xffffffff;
                            
                            uint32_t rcx_5;
                            int32_t temp2_1;
                            
                            if ((r13_1[2] & 1) != 0)
                            {
                                rcx_5 = ((r15 << 8) + (r15 >> 8));
                                int32_t temp3_1;
                                temp2_1 = HIGHD((0x8421085 * rcx_5));
                                temp3_1 = LOWD((0x8421085 * rcx_5));
                            }
                            
                            if (((r13_1[2] & 1) == 0 || rcx_5 != (((((rcx_5 - temp2_1) >> 1) + temp2_1) >> 4) * 0x1f)))
                            {
                                rdi[4] = "incorrect header check";
                                r13_1[1] = 0x3f51;
                                goto label_18001ecc9;
                            }
                            
                            if ((r15 & 0xf) != 8)
                                goto label_18001ed39;
                            
                            r15 u>>= 4;
                            i -= 4;
                            
                            if (r13_1[6] == 0)
                                r13_1[6] = ((r15 & 0xf) + 8);
                            
                            if ((((r15 & 0xf) + 8) > 0xf || ((r15 & 0xf) + 8) > r13_1[6]))
                            {
                                rdi[4] = "invalid window size";
                                r13_1[1] = 0x3f51;
                            }
                            else
                            {
                                *(r13_1 + 0x1c) = (1 << ((r15 & 0xf) + 8));
                                r13_1[3] = 0;
                                r13_1[4] = 1;
                                i = 0;
                                *(rdi + 0x4c) = 1;
                                r13_1[1] = ((!((r15 >> 8)) & 2) | 0x3f3d);
                                r15 = 0;
                            }
                            
                            goto label_18001ecc9;
                        }
                        case 0x1eddf:
                        {
                            if (i < 0x10)
                            {
                                while (i_1 != 0)
                                {
                                    i_1 -= 1;
                                    r15 += (*r14 << i);
                                    r14 = &r14[1];
                                    i += 8;
                                    
                                    if (i >= 0x10)
                                        goto label_18001ee04;
                                }
                                
                                r12_4 = arg_18;
                                rcx_40 = arg2;
                                goto label_18002012f;
                            }
                            
                        label_18001ee04:
                            r13_1[3] = r15;
                            
                            if (r15 != 8)
                            {
                            label_18001ed39:
                                rdi[4] = "unknown compression method";
                                r13_1[1] = 0x3f51;
                                goto label_18001ecc9;
                            }
                            
                            if ((r15 & 0xe000) != 0)
                            {
                                rdi[4] = "unknown header flags set";
                                r13_1[1] = 0x3f51;
                                goto label_18001ecc9;
                            }
                            
                            int32_t* rcx_10 = r13_1[5];
                            
                            if (rcx_10 != 0)
                                *rcx_10 = ((r15 >> 8) & 1);
                            
                            if (((r13_1[3] & 0x200) != 0 && (r13_1[2] & 4) != 0))
                            {
                                int32_t rcx_11 = r13_1[4];
                                var_68 = r15;
                                uint8_t var_67_1 = (r15 >> 8);
                                r13_1[4] = sub_180021060(rcx_11, &var_68, 2);
                            }
                            
                            r15 = 0;
                            r13_1[1] = 0x3f36;
                            i = 0;
                            goto label_18001ee92;
                        }
                        case 0x1ee8b:
                        {
                            if (i < 0x20)
                            {
                            label_18001ee92:
                                
                                while (i_1 != 0)
                                {
                                    i_1 -= 1;
                                    r15 += (*r14 << i);
                                    r14 = &r14[1];
                                    i += 8;
                                    
                                    if (i >= 0x20)
                                        goto label_18001eeb0;
                                }
                                
                                goto label_180020120;
                            }
                            
                        label_18001eeb0:
                            void* rax_29 = r13_1[5];
                            
                            if (rax_29 != 0)
                                *(rax_29 + 4) = r15;
                            
                            if (((r13_1[3] & 0x200) != 0 && (r13_1[2] & 4) != 0))
                            {
                                int32_t rcx_13 = r13_1[4];
                                var_68 = r15;
                                uint8_t var_67_2 = (r15 >> 8);
                                uint8_t var_66_1 = (r15 >> 0x10);
                                uint8_t var_65_1 = (r15 >> 0x18);
                                r13_1[4] = sub_180021060(rcx_13, &var_68, 4);
                            }
                            
                            r15 = 0;
                            r13_1[1] = 0x3f37;
                            i = 0;
                            goto label_18001ef1a;
                        }
                        case 0x1ef13:
                        {
                            if (i < 0x10)
                            {
                            label_18001ef1a:
                                
                                while (i_1 != 0)
                                {
                                    i_1 -= 1;
                                    r15 += (*r14 << i);
                                    r14 = &r14[1];
                                    i += 8;
                                    
                                    if (i >= 0x10)
                                        goto label_18001ef38;
                                }
                                
                                goto label_180020120;
                            }
                            
                        label_18001ef38:
                            void* rcx_15 = r13_1[5];
                            
                            if (rcx_15 != 0)
                            {
                                *(rcx_15 + 8) = r15;
                                *(r13_1[5] + 0xc) = (r15 >> 8);
                            }
                            
                            if (((r13_1[3] & 0x200) != 0 && (r13_1[2] & 4) != 0))
                            {
                                int32_t rcx_18 = r13_1[4];
                                var_68 = r15;
                                uint8_t var_67_3 = (r15 >> 8);
                                r13_1[4] = sub_180021060(rcx_18, &var_68, 2);
                            }
                            
                            r15 = 0;
                            r13_1[1] = 0x3f38;
                            i = 0;
                            goto label_18001ef9f;
                        }
                        case 0x1ef97:
                        {
                        label_18001ef9f:
                            
                            if ((r13_1[3] & 0x400) == 0)
                            {
                                void* rax_44 = r13_1[5];
                                
                                if (rax_44 != 0)
                                    *(rax_44 + 0x10) = 0;
                            }
                            else
                            {
                                for (; i < 0x10; i += 8)
                                {
                                    if (i_1 == 0)
                                        goto label_180020120;
                                    
                                    i_1 -= 1;
                                    r15 += (*r14 << i);
                                    r14 = &r14[1];
                                }
                                
                                void* rax_42 = r13_1[5];
                                r13_1[0xa] = r15;
                                
                                if (rax_42 != 0)
                                    *(rax_42 + 0x18) = r15;
                                
                                if (((r13_1[3] & 0x200) != 0 && (r13_1[2] & 4) != 0))
                                {
                                    int32_t rcx_20 = r13_1[4];
                                    var_68 = r15;
                                    uint8_t var_67_4 = (r15 >> 8);
                                    r13_1[4] = sub_180021060(rcx_20, &var_68, 2);
                                }
                                
                                r15 = 0;
                                i = 0;
                            }
                            
                            r13_1[1] = 0x3f39;
                        label_18001f030:
                            
                            if ((r13_1[3] & 0x400) != 0)
                            {
                                uint32_t rcx_21 = r13_1[0xa];
                                uint32_t rdi_1 = rcx_21;
                                
                                if (rcx_21 > i_1)
                                    rdi_1 = i_1;
                                
                                if (rdi_1 != 0)
                                {
                                    void* rax_45 = r13_1[5];
                                    
                                    if (rax_45 != 0)
                                    {
                                        int64_t r9_1 = *(rax_45 + 0x10);
                                        
                                        if (r9_1 != 0)
                                        {
                                            int32_t rdx_8 = (*(rax_45 + 0x18) - rcx_21);
                                            int32_t rcx_22 = *(rax_45 + 0x1c);
                                            
                                            if (rdx_8 < rcx_22)
                                            {
                                                uint32_t count;
                                                
                                                if ((rdi_1 + rdx_8) <= rcx_22)
                                                    count = rdi_1;
                                                else
                                                    count = (rcx_22 - rdx_8);
                                                
                                                memcpy((rdx_8 + r9_1), r14, count);
                                            }
                                        }
                                    }
                                    
                                    if (((r13_1[3] & 0x200) != 0 && (r13_1[2] & 4) != 0))
                                        r13_1[4] = sub_180021060(r13_1[4], r14, rdi_1);
                                    
                                    i_1 -= rdi_1;
                                    r14 = &r14[rdi_1];
                                    r13_1[0xa] -= rdi_1;
                                }
                            }
                            
                            if (((r13_1[3] & 0x400) != 0 && r13_1[0xa] != 0))
                                goto label_180020120;
                            
                            r13_1[0xa] = 0;
                            r13_1[1] = 0x3f3a;
                        label_18001f0ce:
                            
                            if ((r13_1[3] & 0x800) == 0)
                            {
                                void* rax_53 = r13_1[5];
                                
                                if (rax_53 != 0)
                                    *(rax_53 + 0x20) = 0;
                            }
                            else
                            {
                                if (i_1 == 0)
                                    goto label_180020120;
                                
                                int32_t rdi_2 = 0;
                                uint32_t r12_1;
                                
                                do
                                {
                                    uint64_t rax_49 = rdi_2;
                                    rdi_2 += 1;
                                    r12_1 = r14[rax_49];
                                    void* rax_50 = r13_1[5];
                                    
                                    if (rax_50 != 0)
                                    {
                                        int64_t rdx_11 = *(rax_50 + 0x20);
                                        
                                        if (rdx_11 != 0)
                                        {
                                            char* rcx_26 = r13_1[0xa];
                                            
                                            if (rcx_26 < *(rax_50 + 0x28))
                                            {
                                                rcx_26[rdx_11] = r12_1;
                                                r13_1[0xa] += 1;
                                            }
                                        }
                                    }
                                    
                                    if (r12_1 == 0)
                                        break;
                                } while (rdi_2 < i_1);
                                
                                if (((r13_1[3] & 0x200) != 0 && (r13_1[2] & 4) != 0))
                                    r13_1[4] = sub_180021060(r13_1[4], r14, rdi_2);
                                
                                i_1 -= rdi_2;
                                r14 = &r14[rdi_2];
                                
                                if (r12_1 != 0)
                                    goto label_180020120;
                            }
                            
                            r13_1[0xa] = 0;
                            r13_1[1] = 0x3f3b;
                        label_18001f16f:
                            
                            if ((r13_1[3] & 0x1000) == 0)
                            {
                                void* rax_58 = r13_1[5];
                                
                                if (rax_58 != 0)
                                    *(rax_58 + 0x30) = 0;
                            }
                            else
                            {
                                if (i_1 == 0)
                                    goto label_180020120;
                                
                                int32_t rdi_3 = 0;
                                uint32_t r12_2;
                                
                                do
                                {
                                    uint64_t rax_54 = rdi_3;
                                    rdi_3 += 1;
                                    r12_2 = r14[rax_54];
                                    void* rax_55 = r13_1[5];
                                    
                                    if (rax_55 != 0)
                                    {
                                        int64_t rdx_13 = *(rax_55 + 0x30);
                                        
                                        if (rdx_13 != 0)
                                        {
                                            char* rcx_28 = r13_1[0xa];
                                            
                                            if (rcx_28 < *(rax_55 + 0x38))
                                            {
                                                rcx_28[rdx_13] = r12_2;
                                                r13_1[0xa] += 1;
                                            }
                                        }
                                    }
                                    
                                    if (r12_2 == 0)
                                        break;
                                } while (rdi_3 < i_1);
                                
                                if (((r13_1[3] & 0x200) != 0 && (r13_1[2] & 4) != 0))
                                    r13_1[4] = sub_180021060(r13_1[4], r14, rdi_3);
                                
                                i_1 -= rdi_3;
                                r14 = &r14[rdi_3];
                                
                                if (r12_2 != 0)
                                    goto label_180020120;
                            }
                            
                            rdi = arg1;
                            r9 = var_58;
                            count_3 = count_5;
                            r13_1[1] = 0x3f3c;
                        label_18001f20f:
                            
                            if ((r13_1[3] & 0x200) != 0)
                            {
                                for (; i < 0x10; i += 8)
                                {
                                    if (i_1 == 0)
                                        goto label_180020120;
                                    
                                    i_1 -= 1;
                                    r15 += (*r14 << i);
                                    r14 = &r14[1];
                                }
                                
                                if (((r13_1[2] & 4) != 0 && r15 != r13_1[4]))
                                {
                                    rdi[4] = "header crc mismatch";
                                    r13_1[1] = 0x3f51;
                                    goto label_18001ecc9;
                                }
                                
                                r15 = 0;
                                i = 0;
                            }
                            
                            void* rcx_31 = r13_1[5];
                            
                            if (rcx_31 != 0)
                            {
                                *(rcx_31 + 0x3c) = ((r13_1[3] >> 9) & 1);
                                *(r13_1[5] + 0x40) = 1;
                            }
                            
                            r13_1[4] = 0;
                            *(rdi + 0x4c) = 0;
                            goto label_18001f298;
                        }
                        case 0x1f028:
                        {
                            goto label_18001f030;
                        }
                        case 0x1f0c6:
                        {
                            goto label_18001f0ce;
                        }
                        case 0x1f167:
                        {
                            goto label_18001f16f;
                        }
                        case 0x1f20f:
                        {
                            goto label_18001f20f;
                        }
                        case 0x1f2a5:
                        {
                            if (i < 0x20)
                            {
                                while (i_1 != 0)
                                {
                                    i_1 -= 1;
                                    r15 += (*r14 << i);
                                    r14 = &r14[1];
                                    i += 8;
                                    
                                    if (i >= 0x20)
                                        goto label_18001f2e1;
                                }
                                
                                goto label_180020120;
                            }
                            
                        label_18001f2e1:
                            i = 0;
                            int32_t rax_74 = ((((r15 >> 8) & 0xff00) + (((r15 & 0xff00) + (r15 << 0x10)) << 8)) + (r15 >> 0x18));
                            r15 = 0;
                            r13_1[4] = rax_74;
                            *(rdi + 0x4c) = rax_74;
                            r13_1[1] = 0x3f3e;
                        label_18001f30d:
                            
                            if (*(r13_1 + 0x14) == 0)
                            {
                                rdi[2] = r9;
                                rdi[3] = count_3;
                                *rdi = r14;
                                rdi[1] = i_1;
                                r13_1[9] = r15;
                                *(r13_1 + 0x4c) = i;
                                return 2;
                            }
                            
                            r13_1[4] = 1;
                            *(rdi + 0x4c) = 1;
                            r13_1[1] = 0x3f3f;
                        label_18001f335:
                            
                            if ((arg2 - 5) > 1)
                                goto label_18001f33e;
                            
                        label_180020120:
                            rcx_40 = arg2;
                        label_180020123:
                            r12_4 = arg_18;
                            goto label_18002012f;
                        }
                        case 0x1f30d:
                        {
                            goto label_18001f30d;
                        }
                        case 0x1f32f:
                        {
                            goto label_18001f335;
                        }
                        case 0x1f33e:
                        {
                        label_18001f33e:
                            
                            if (*(r13_1 + 0xc) != 0)
                            {
                                r13_1[1] = 0x3f4e;
                                int32_t rcx_38 = (i & 7);
                                r15 u>>= rcx_38;
                                i -= rcx_38;
                                goto label_18001ecc9;
                            }
                            
                            for (; i < 3; i += 8)
                            {
                                if (i_1 == 0)
                                    goto label_180020120;
                                
                                i_1 -= 1;
                                r15 += (*r14 << i);
                                r14 = &r14[1];
                            }
                            
                            uint32_t r15_10 = (r15 >> 1);
                            *(r13_1 + 0xc) = (r15 & 1);
                            int32_t rax_82 = (r15_10 & 3);
                            
                            if (rax_82 == 0)
                            {
                                r13_1[1] = 0x3f41;
                            label_18001f426:
                                r15 = (r15_10 >> 2);
                                i -= 3;
                                goto label_18001ecc9;
                            }
                            
                            if (rax_82 == 1)
                            {
                                rcx_40 = arg2;
                                r13_1[0xc] = &data_1800254e0;
                                r13_1[0xd] = &data_180025ce0;
                                *r8_1 = 9;
                                *(r13_1 + 0x74) = 5;
                                r13_1[1] = 0x3f47;
                                
                                if (rcx_40 != 6)
                                    goto label_18001f426;
                                
                                r15 = (r15_10 >> 2);
                                i -= 3;
                                goto label_180020123;
                            }
                            
                            if (rax_82 == 2)
                            {
                                r15 = (r15_10 >> 2);
                                i -= 3;
                                r13_1[1] = 0x3f44;
                                goto label_18001ecc9;
                            }
                            
                            if (rax_82 != 3)
                                goto label_18001f426;
                            
                            r15 = (r15_10 >> 2);
                            rdi[4] = "invalid block type";
                            i -= 3;
                            r13_1[1] = 0x3f51;
                            goto label_18001ecc9;
                        }
                        case 0x1f432:
                        {
                            int32_t rcx_42 = (i & 7);
                            r15 u>>= rcx_42;
                            
                            for (i -= rcx_42; i < 0x20; i += 8)
                            {
                                if (i_1 == 0)
                                    goto label_180020120;
                                
                                i_1 -= 1;
                                r15 += (*r14 << i);
                                r14 = &r14[1];
                            }
                            
                            uint32_t rcx_44 = r15;
                            
                            if (rcx_44 != (!(r15) >> 0x10))
                            {
                                rdi[4] = "invalid stored block lengths";
                                r13_1[1] = 0x3f51;
                                goto label_18001ecc9;
                            }
                            
                            r13_1[0xa] = rcx_44;
                            r15 = 0;
                            rcx_40 = arg2;
                            i = 0;
                            r13_1[1] = 0x3f42;
                            
                            if (rcx_40 == 6)
                                goto label_180020123;
                            
                            goto label_18001f4a7;
                        }
                        case 0x1f4a7:
                        {
                        label_18001f4a7:
                            r13_1[1] = 0x3f43;
                        label_18001f4af:
                            uint32_t count_1 = r13_1[0xa];
                            
                            if (count_1 == 0)
                            {
                            label_18001f298:
                                r13_1[1] = 0x3f3f;
                                goto label_18001ecc9;
                            }
                            
                            if (count_1 > i_1)
                                count_1 = i_1;
                            
                            if (count_1 > count_3)
                                count_1 = count_3;
                            
                            if (count_1 == 0)
                                goto label_180020120;
                            
                            uint64_t count_2 = count_1;
                            memcpy(r9, r14, count_1);
                            r14 = &r14[count_2];
                            count_3 = (count_5 - count_1);
                            r9 = &var_58[count_2];
                            count_5 = count_3;
                            rdi = arg1;
                            i_1 -= count_1;
                            r13_1[0xa] -= count_1;
                            var_58 = r9;
                            goto label_18001ecc9;
                        }
                        case 0x1f4af:
                        {
                            goto label_18001f4af;
                        }
                        case 0x1f50d:
                        {
                            for (; i < 0xe; i += 8)
                            {
                                if (i_1 == 0)
                                    goto label_180020120;
                                
                                i_1 -= 1;
                                r15 += (*r14 << i);
                                r14 = &r14[1];
                            }
                            
                            i -= 0xe;
                            uint32_t r15_11 = (r15 >> 5);
                            int32_t rcx_49 = ((r15 & 0x1f) + 0x101);
                            uint32_t r15_12 = (r15_11 >> 5);
                            *(r13_1 + 0x7c) = rcx_49;
                            r15 = (r15_12 >> 4);
                            r13_1[0x10] = ((r15_11 & 0x1f) + 1);
                            r13_1[0xf] = ((r15_12 & 0xf) + 4);
                            
                            if ((rcx_49 > 0x11e || ((r15_11 & 0x1f) + 1) > 0x1e))
                            {
                                rdi[4] = "too many length or distance symb…";
                                r13_1[1] = 0x3f51;
                                goto label_18001ecc9;
                            }
                            
                            *(r13_1 + 0x84) = 0;
                            r13_1[1] = 0x3f45;
                        label_18001f5a3:
                            
                            while (*(r13_1 + 0x84) < r13_1[0xf])
                            {
                                for (; i < 3; i += 8)
                                {
                                    if (i_1 == 0)
                                        goto label_180020120;
                                    
                                    i_1 -= 1;
                                    r15 += (*r14 << i);
                                    r14 = &r14[1];
                                }
                                
                                int16_t rcx_51 = (r15 & 7);
                                r15 u>>= 3;
                                i -= 3;
                                *((r13_1 + (*((*(r13_1 + 0x84) << 1) + 0x180025d60) << 1)) + 0x90) = rcx_51;
                                *(r13_1 + 0x84) += 1;
                            }
                            
                            while (*(r13_1 + 0x84) < 0x13)
                            {
                                *((r13_1 + (*((*(r13_1 + 0x84) << 1) + 0x180025d60) << 1)) + 0x90) = 0;
                                *(r13_1 + 0x84) += 1;
                            }
                            
                            *r8_1 = 7;
                            r13_1[0xc] = &r13_1[0xaa];
                            r13_1[0x11] = &r13_1[0xaa];
                            int32_t rax_105 = sub_180020660(0, &r13_1[0x12], 0x13, &r13_1[0x11], r8_1, &r13_1[0x62]);
                            count_3 = count_5;
                            arg_18 = rax_105;
                            
                            if (rax_105 != 0)
                            {
                                rdi[4] = "invalid code lengths set";
                                r13_1[1] = 0x3f51;
                                goto label_18001ecc1;
                            }
                            
                            *(r13_1 + 0x84) = 0;
                            r8_1 = &r13_1[0xe];
                            r13_1[1] = 0x3f46;
                        label_18001f6e8:
                            
                            if (*(r13_1 + 0x84) < (r13_1[0x10] + *(r13_1 + 0x7c)))
                            {
                                int32_t i_2;
                                
                                do
                                {
                                    int32_t rax_111 = *(r13_1[0xc] + ((((1 << *r8_1) - 1) & r15) << 2));
                                    int32_t var_60_1 = rax_111;
                                    
                                    while ((rax_111 >> 8) > i)
                                    {
                                        if (i_1 == 0)
                                            goto label_180020120;
                                        
                                        i_1 -= 1;
                                        r15 += (*r14 << i);
                                        r14 = &r14[1];
                                        i += 8;
                                        rax_111 = *(r13_1[0xc] + ((((1 << *r8_1) - 1) & r15) << 2));
                                        var_60_1 = rax_111;
                                    }
                                    
                                    uint16_t rdx_21 = (rax_111 >> 0x10);
                                    
                                    if (rdx_21 >= 0x10)
                                    {
                                        int32_t j_1;
                                        int16_t r8_7;
                                        
                                        if (rdx_21 != 0x10)
                                        {
                                            uint32_t r9_4 = *var_60_1[1];
                                            int32_t rax_126;
                                            
                                            if (*var_60_1[2] != 0x11)
                                            {
                                                for (; i < (r9_4 + 7); i += 8)
                                                {
                                                    if (i_1 == 0)
                                                        goto label_180020120;
                                                    
                                                    i_1 -= 1;
                                                    r15 += (*r14 << i);
                                                    r14 = &r14[1];
                                                }
                                                
                                                rax_126 = -7;
                                                uint32_t r15_14 = (r15 >> r9_4);
                                                j_1 = ((r15_14 & 0x7f) + 0xb);
                                                r15 = (r15_14 >> 7);
                                            }
                                            else
                                            {
                                                for (; i < (r9_4 + 3); i += 8)
                                                {
                                                    if (i_1 == 0)
                                                        goto label_180020120;
                                                    
                                                    i_1 -= 1;
                                                    r15 += (*r14 << i);
                                                    r14 = &r14[1];
                                                }
                                                
                                                rax_126 = -3;
                                                uint32_t r15_13 = (r15 >> r9_4);
                                                j_1 = ((r15_13 & 7) + 3);
                                                r15 = (r15_13 >> 3);
                                            }
                                            
                                            r8_7 = 0;
                                            i += (rax_126 - r9_4);
                                            goto label_18001f8b4;
                                        }
                                        
                                        for (; i < ((rax_111 >> 8) + 2); i += 8)
                                        {
                                            if (i_1 == 0)
                                                goto label_180020120;
                                            
                                            i_1 -= 1;
                                            r15 += (*r14 << i);
                                            r14 = &r14[1];
                                        }
                                        
                                        uint32_t rcx_67 = *var_60_1[1];
                                        int32_t rax_122 = *(r13_1 + 0x84);
                                        i -= rcx_67;
                                        r15 u>>= rcx_67;
                                        
                                        if (rax_122 == 0)
                                        {
                                        label_18001f932:
                                            rdi[4] = "invalid bit length repeat";
                                            r13_1[1] = 0x3f51;
                                            goto label_18001ecc1;
                                        }
                                        
                                        int32_t rdx_25 = (r15 & 3);
                                        r15 u>>= 2;
                                        j_1 = (rdx_25 + 3);
                                        i -= 2;
                                        r8_7 = *((r13_1 + ((rax_122 - 1) << 1)) + 0x90);
                                    label_18001f8b4:
                                        
                                        if ((*(r13_1 + 0x84) + j_1) > (r13_1[0x10] + *(r13_1 + 0x7c)))
                                            goto label_18001f932;
                                        
                                        int32_t j;
                                        
                                        do
                                        {
                                            *((r13_1 + (*(r13_1 + 0x84) << 1)) + 0x90) = r8_7;
                                            *(r13_1 + 0x84) += 1;
                                            i_2 = *(r13_1 + 0x84);
                                            j = j_1;
                                            j_1 -= 1;
                                        } while (j != 1);
                                        r8_1 = &r13_1[0xe];
                                    }
                                    else
                                    {
                                        uint32_t rcx_65 = (rax_111 >> 8);
                                        i -= rcx_65;
                                        r15 u>>= rcx_65;
                                        *((r13_1 + (*(r13_1 + 0x84) << 1)) + 0x90) = rdx_21;
                                        *(r13_1 + 0x84) += 1;
                                        i_2 = *(r13_1 + 0x84);
                                    }
                                } while (i_2 < (r13_1[0x10] + *(r13_1 + 0x7c)));
                            }
                            
                            if (r13_1[1] == 0x3f51)
                                goto label_18001ecc1;
                            
                            if (r13_1[0x52] == 0)
                            {
                                rdi[4] = "invalid code -- missing end-of-b…";
                                r13_1[1] = 0x3f51;
                            label_18001ecc1:
                                r9 = var_58;
                                goto label_18001ecc9;
                            }
                            
                            *r8_1 = 9;
                            r13_1[0x11] = &r13_1[0xaa];
                            int32_t r8_8 = *(r13_1 + 0x7c);
                            r13_1[0xc] = &r13_1[0xaa];
                            int32_t rax_136 = sub_180020660(1, &r13_1[0x12], r8_8, &r13_1[0x11], r8_1, &r13_1[0x62]);
                            arg_18 = rax_136;
                            char const* const rax_137;
                            
                            if (rax_136 != 0)
                            {
                                rax_137 = "invalid literal/lengths set";
                            label_18001f997:
                                rdi = arg1;
                                rdi[4] = rax_137;
                                r13_1[1] = 0x3f51;
                                count_3 = count_5;
                                goto label_18001ecc1;
                            }
                            
                            int32_t r8_9 = r13_1[0x10];
                            r13_1[0xd] = r13_1[0x11];
                            uint64_t rax_139 = *(r13_1 + 0x7c);
                            *(r13_1 + 0x74) = 6;
                            int32_t rax_140 = sub_180020660(2, (((rax_139 << 1) + 0x90) + r13_1), r8_9, &r13_1[0x11], (r13_1 + 0x74), &r13_1[0x62]);
                            arg_18 = rax_140;
                            r12_4 = rax_140;
                            
                            if (rax_140 != 0)
                            {
                                rax_137 = "invalid distances set";
                                goto label_18001f997;
                            }
                            
                            rcx_40 = arg2;
                            r13_1[1] = 0x3f47;
                            
                            if (rcx_40 == 6)
                                goto label_18002012f;
                            
                            rdi = arg1;
                            r8_1 = &r13_1[0xe];
                            r9 = var_58;
                            count_6 = count_4;
                            count_3 = count_5;
                        label_18001fa2f:
                            r13_1[1] = 0x3f48;
                        label_18001fa37:
                            
                            if ((i_1 >= 6 && count_3 >= 0x102))
                            {
                                rdi[2] = r9;
                                rdi[3] = count_3;
                                *rdi = r14;
                                rdi[1] = i_1;
                                r13_1[9] = r15;
                                *(r13_1 + 0x4c) = i;
                                sub_180020b70(rdi, count_6);
                                r9 = rdi[2];
                                count_3 = rdi[3];
                                r14 = *rdi;
                                i_1 = rdi[1];
                                r15 = r13_1[9];
                                i = *(r13_1 + 0x4c);
                                var_58 = r9;
                                count_5 = count_3;
                                
                                if (r13_1[1] == 0x3f3f)
                                    *(r13_1 + 0x1be4) = 0xffffffff;
                                
                                goto label_18001ecc9;
                            }
                            
                            int64_t r11_2 = r13_1[0xc];
                            int32_t rax_141 = (1 << *r8_1);
                            *(r13_1 + 0x1be4) = 0;
                            int32_t rax_143 = *(r11_2 + (((rax_141 - 1) & r15) << 2));
                            
                            while ((rax_143 >> 8) > i)
                            {
                                if (i_1 == 0)
                                    goto label_180020120;
                                
                                i_1 -= 1;
                                r15 += (*r14 << i);
                                r14 = &r14[1];
                                i += 8;
                                rax_143 = *(r13_1[0xc] + ((((1 << *r8_1) - 1) & r15) << 2));
                            }
                            
                            if ((rax_143 != 0 && (rax_143 & 0xf0) == 0))
                            {
                                uint8_t r10_2 = (rax_143 >> 8);
                                char rdx_35 = rax_143;
                                int32_t var_60_2 = rax_143;
                                rax_143 = *(r11_2 + ((((((1 << (rax_143 + r10_2)) - 1) & r15) >> r10_2) + (rax_143 >> 0x10)) << 2));
                                char r11_3 = *var_60_2[1];
                                
                                if (((rax_143 >> 8) + r10_2) > i)
                                {
                                    uint32_t r9_12;
                                    
                                    do
                                    {
                                        if (i_1 == 0)
                                            goto label_180020120;
                                        
                                        r15 += (*r14 << i);
                                        r9_12 = r11_3;
                                        i_1 -= 1;
                                        r14 = &r14[1];
                                        i += 8;
                                        rax_143 = *(r13_1[0xc] + ((((((1 << (rdx_35 + r9_12)) - 1) & r15) >> r9_12) + *var_60_2[2]) << 2));
                                    } while (((rax_143 >> 8) + r9_12) > i);
                                }
                                
                                uint32_t rcx_101 = r11_3;
                                r15 u>>= rcx_101;
                                i -= rcx_101;
                                *(r13_1 + 0x1be4) = rcx_101;
                            }
                            
                            uint32_t rcx_104 = (rax_143 >> 8);
                            *(r13_1 + 0x1be4) += rcx_104;
                            i -= rcx_104;
                            r15 u>>= rcx_104;
                            r13_1[0xa] = (rax_143 >> 0x10);
                            
                            if (rax_143 == 0)
                            {
                                r13_1[1] = 0x3f4d;
                                count_3 = count_5;
                                goto label_18001ecc1;
                            }
                            
                            if ((rax_143 & 0x20) != 0)
                            {
                                *(r13_1 + 0x1be4) = 0xffffffff;
                                r13_1[1] = 0x3f3f;
                                count_3 = count_5;
                                goto label_18001ecc1;
                            }
                            
                            if ((rax_143 & 0x40) != 0)
                            {
                                rdi[4] = "invalid literal/length code";
                                r13_1[1] = 0x3f51;
                                count_3 = count_5;
                                goto label_18001ecc1;
                            }
                            
                            r13_1[1] = 0x3f49;
                            r13_1[0xb] = (rax_143 & 0xf);
                        label_18001fc57:
                            int32_t rdx_36 = r13_1[0xb];
                            
                            if (rdx_36 != 0)
                            {
                                for (; i < rdx_36; i += 8)
                                {
                                    if (i_1 == 0)
                                        goto label_180020120;
                                    
                                    i_1 -= 1;
                                    r15 += (*r14 << i);
                                    r14 = &r14[1];
                                }
                                
                                char rcx_110 = rdx_36;
                                i -= rdx_36;
                                int32_t rax_158 = (((1 << rcx_110) - 1) & r15);
                                r15 u>>= rcx_110;
                                r13_1[0xa] += rax_158;
                                *(r13_1 + 0x1be4) += rdx_36;
                            }
                            
                            r13_1[0x37d] = r13_1[0xa];
                            r13_1[1] = 0x3f4a;
                            goto label_18001fcbc;
                        }
                        case 0x1f591:
                        {
                            goto label_18001f5a3;
                        }
                        case 0x1f6d6:
                        {
                            goto label_18001f6e8;
                        }
                        case 0x1fa2f:
                        {
                            goto label_18001fa2f;
                        }
                        case 0x1fa37:
                        {
                            goto label_18001fa37;
                        }
                        case 0x1fc57:
                        {
                            goto label_18001fc57;
                        }
                        case 0x1fcb3:
                        {
                        label_18001fcbc:
                            int64_t r11_4 = r13_1[0xd];
                            int32_t rax_162 = *(r11_4 + ((((1 << *(r13_1 + 0x74)) - 1) & r15) << 2));
                            
                            while ((rax_162 >> 8) > i)
                            {
                                if (i_1 == 0)
                                    goto label_180020120;
                                
                                i_1 -= 1;
                                r15 += (*r14 << i);
                                r14 = &r14[1];
                                i += 8;
                                rax_162 = *(r13_1[0xd] + ((((1 << *(r13_1 + 0x74)) - 1) & r15) << 2));
                            }
                            
                            if ((rax_162 & 0xf0) == 0)
                            {
                                uint8_t r10_5 = (rax_162 >> 8);
                                char rdx_37 = rax_162;
                                int32_t var_60_3 = rax_162;
                                rax_162 = *(r11_4 + ((((((1 << (rax_162 + r10_5)) - 1) & r15) >> r10_5) + (rax_162 >> 0x10)) << 2));
                                char r11_5 = *var_60_3[1];
                                
                                if (((rax_162 >> 8) + r10_5) > i)
                                {
                                    uint32_t r9_18;
                                    
                                    do
                                    {
                                        if (i_1 == 0)
                                            goto label_180020120;
                                        
                                        r15 += (*r14 << i);
                                        r9_18 = r11_5;
                                        i_1 -= 1;
                                        r14 = &r14[1];
                                        i += 8;
                                        rax_162 = *(r13_1[0xd] + ((((((1 << (rdx_37 + r9_18)) - 1) & r15) >> r9_18) + *var_60_3[2]) << 2));
                                    } while (((rax_162 >> 8) + r9_18) > i);
                                }
                                
                                uint32_t rcx_136 = r11_5;
                                r15 u>>= rcx_136;
                                i -= rcx_136;
                                *(r13_1 + 0x1be4) += rcx_136;
                            }
                            
                            r9 = var_58;
                            count_3 = count_5;
                            uint32_t rcx_139 = (rax_162 >> 8);
                            *(r13_1 + 0x1be4) += rcx_139;
                            i -= rcx_139;
                            r15 u>>= rcx_139;
                            
                            if ((rax_162 & 0x40) != 0)
                            {
                                rdi[4] = "invalid distance code";
                                r13_1[1] = 0x3f51;
                                goto label_18001ecc9;
                            }
                            
                            r13_1[1] = 0x3f4b;
                            *(r13_1 + 0x54) = (rax_162 >> 0x10);
                            r13_1[0xb] = (rax_162 & 0xf);
                        label_18001fe3d:
                            int32_t rdx_38 = r13_1[0xb];
                            
                            if (rdx_38 != 0)
                            {
                                for (; i < rdx_38; i += 8)
                                {
                                    if (i_1 == 0)
                                        goto label_180020120;
                                    
                                    i_1 -= 1;
                                    r15 += (*r14 << i);
                                    r14 = &r14[1];
                                }
                                
                                char rcx_145 = rdx_38;
                                i -= rdx_38;
                                int32_t rax_177 = (((1 << rcx_145) - 1) & r15);
                                r15 u>>= rcx_145;
                                *(r13_1 + 0x54) += rax_177;
                                *(r13_1 + 0x1be4) += rdx_38;
                            }
                            
                            count_6 = count_4;
                            r13_1[1] = 0x3f4c;
                            goto label_18001fe98;
                        }
                        case 0x1fe3d:
                        {
                            goto label_18001fe3d;
                        }
                        case 0x1fe98:
                        {
                        label_18001fe98:
                            
                            if (count_3 == 0)
                                goto label_180020120;
                            
                            uint64_t rcx_146 = *(r13_1 + 0x54);
                            uint32_t rax_179 = (count_6 - count_3);
                            uint32_t i_6;
                            uint32_t i_5;
                            void* rdx_42;
                            
                            if (rcx_146 <= rax_179)
                            {
                                i_6 = r13_1[0xa];
                                rdx_42 = (r9 - rcx_146);
                            label_18001ff06:
                                i_5 = i_6;
                            label_18001ff0b:
                                
                                if (i_5 > count_3)
                                    i_5 = count_3;
                                
                                count_3 -= i_5;
                                count_5 = count_3;
                                char* rdx_43 = (rdx_42 - r9);
                                r13_1[0xa] = (i_6 - i_5);
                                uint32_t i_3;
                                
                                do
                                {
                                    *r9 = *(rdx_43 + r9);
                                    r9 = &r9[1];
                                    i_3 = i_5;
                                    i_5 -= 1;
                                } while (i_3 != 1);
                                var_58 = r9;
                                
                                if (r13_1[0xa] == i_5)
                                    r13_1[1] = 0x3f48;
                            }
                            else
                            {
                                i_5 = (rcx_146 - rax_179);
                                
                                if ((i_5 <= r13_1[7] || r13_1[0x37c] == 0))
                                {
                                    int32_t rax_180 = *(r13_1 + 0x3c);
                                    uint64_t rdx_40;
                                    
                                    if (i_5 <= rax_180)
                                        rdx_40 = (rax_180 - i_5);
                                    else
                                    {
                                        i_5 -= rax_180;
                                        rdx_40 = (*(r13_1 + 0x34) - i_5);
                                    }
                                    
                                    rdx_42 = (rdx_40 + r13_1[8]);
                                    i_6 = r13_1[0xa];
                                    
                                    if (i_5 <= i_6)
                                        goto label_18001ff0b;
                                    
                                    goto label_18001ff06;
                                }
                                
                                rdi[4] = "invalid distance too far back";
                                r13_1[1] = 0x3f51;
                            }
                            goto label_18001ecc9;
                        }
                        case 0x1ff4b:
                        {
                            if (count_3 == 0)
                                goto label_180020120;
                            
                            *r9 = r13_1[0xa];
                            r9 = &r9[1];
                            count_3 -= 1;
                            var_58 = r9;
                            count_5 = count_3;
                            r13_1[1] = 0x3f48;
                            goto label_18001ecc9;
                        }
                        case 0x1ff77:
                        {
                            if (r13_1[2] == 0)
                                goto label_18002004a;
                            
                            for (; i < 0x20; i += 8)
                            {
                                if (i_1 == 0)
                                    goto label_180020120;
                                
                                i_1 -= 1;
                                r15 += (*r14 << i);
                                r14 = &r14[1];
                            }
                            
                            uint32_t rdx_44 = (count_6 - count_3);
                            *(rdi + 0x1c) += rdx_44;
                            *(r13_1 + 0x24) += rdx_44;
                            
                            if (((r13_1[2] & 4) != 0 && rdx_44 != 0))
                            {
                                int32_t rcx_148 = r13_1[4];
                                uint64_t r8_30 = rdx_44;
                                char* rdx_46 = (r9 - r8_30);
                                int32_t rax_187;
                                
                                if (r13_1[3] == 0)
                                    rax_187 = sub_180020380(rcx_148, rdx_46, r8_30);
                                else
                                    rax_187 = sub_180021060(rcx_148, rdx_46, r8_30);
                                
                                r9 = var_58;
                                count_3 = count_5;
                                r13_1[4] = rax_187;
                                *(rdi + 0x4c) = rax_187;
                            }
                            
                            count_4 = count_3;
                            uint32_t rcx_149;
                            
                            if ((r13_1[2] & 4) != 0)
                            {
                                rcx_149 = r15;
                                
                                if (r13_1[3] == 0)
                                    rcx_149 = (((((rcx_149 & 0xff00) + (r15 << 0x10)) << 8) + ((r15 >> 8) & 0xff00)) + (r15 >> 0x18));
                            }
                            
                            if (((r13_1[2] & 4) != 0 && rcx_149 != r13_1[4]))
                            {
                                rdi[4] = "incorrect data check";
                                r13_1[1] = 0x3f51;
                                goto label_18001ecc9;
                            }
                            
                            r15 = 0;
                            i = 0;
                        label_18002004a:
                            r13_1[1] = 0x3f4f;
                        label_180020052:
                            int32_t rdx_47 = r13_1[2];
                            
                            if ((rdx_47 == 0 || r13_1[3] == 0))
                                goto label_1800200f9;
                            
                            for (; i < 0x20; i += 8)
                            {
                                if (i_1 == 0)
                                    goto label_180020120;
                                
                                i_1 -= 1;
                                r15 += (*r14 << i);
                                r14 = &r14[1];
                            }
                            
                            if (((rdx_47 & 4) != 0 && r15 != *(r13_1 + 0x24)))
                            {
                                rdi[4] = "incorrect length check";
                                r13_1[1] = 0x3f51;
                                goto label_18001ecc9;
                            }
                            
                            r15 = 0;
                            i = 0;
                        label_1800200f9:
                            r13_1[1] = 0x3f50;
                        label_180020101:
                            rcx_40 = arg2;
                            r12_4 = 1;
                        label_18002012f:
                            arg1[2] = var_58;
                            arg1[3] = count_5;
                            *arg1 = r14;
                            arg1[1] = i_1;
                            bool cond:2_1 = *(r13_1 + 0x34) != 0;
                            *(r13_1 + 0x4c) = i;
                            r13_1[9] = r15;
                            
                            if (cond:2_1)
                            {
                            label_18002017b:
                                int32_t rax_201;
                                rax_201 = sub_18001ea30(arg1, arg1[2], (count_4 - arg1[3]));
                                
                                if (rax_201 == 0)
                                    goto label_180020196;
                                
                                r13_1[1] = 0x3f52;
                                return 0xfffffffc;
                            }
                            
                            if (count_4 != arg1[3])
                            {
                                int32_t rax_200 = r13_1[1];
                                
                                if ((rax_200 >= 0x3f51 || (rax_200 >= 0x3f4e && rcx_40 == 4)))
                                    goto label_180020196;
                                
                                goto label_18002017b;
                            }
                            
                        label_180020196:
                            int32_t rbx_2 = (count_4 - arg1[3]);
                            int32_t r10_8 = (i_4 - arg1[1]);
                            *(arg1 + 0xc) += r10_8;
                            *(arg1 + 0x1c) += rbx_2;
                            *(r13_1 + 0x24) += rbx_2;
                            
                            if (((r13_1[2] & 4) != 0 && rbx_2 != 0))
                            {
                                int32_t rcx_156 = r13_1[4];
                                uint64_t r8_33 = rbx_2;
                                char* rdx_50 = (arg1[2] - r8_33);
                                int32_t rax_202;
                                
                                if (r13_1[3] == 0)
                                    rax_202 = sub_180020380(rcx_156, rdx_50, r8_33);
                                else
                                    rax_202 = sub_180021060(rcx_156, rdx_50, r8_33);
                                
                                r13_1[4] = rax_202;
                                *(arg1 + 0x4c) = rax_202;
                            }
                            
                            int32_t rdx_51 = r13_1[1];
                            int32_t r8_34;
                            int32_t r9_19;
                            
                            if ((rdx_51 == 0x3f47 || rdx_51 == 0x3f42))
                            {
                                r8_34 = 0x100;
                                r9_19 = 0;
                            }
                            else
                            {
                                r9_19 = 0;
                                r8_34 = 0;
                            }
                            
                            if (rdx_51 == 0x3f3f)
                                r9_19 = 0x80;
                            
                            arg1[9] = ((r9_19 + (r8_34 + ((rcx_40 - rcx_40) & 0x40))) + *(r13_1 + 0x4c));
                            
                            if ((((r10_8 == 0 && rbx_2 == 0) || arg2 == 4) && r12_4 == 0))
                                r12_4 = -5;
                            
                            return r12_4;
                            break;
                        }
                        case 0x20052:
                        {
                            goto label_180020052;
                        }
                        case 0x20101:
                        {
                            goto label_180020101;
                        }
                        case 0x2010c:
                        {
                            rcx_40 = arg2;
                            r12_4 = -3;
                            goto label_18002012f;
                        }
                        case 0x2018c:
                        {
                            return 0xfffffffc;
                            break;
                        }
                    }
                }
            }
        }
    }
    
    return 0xfffffffe;
}

int64_t sub_1800202f0(void* arg1)
{
    if ((arg1 != 0 && *(arg1 + 0x30) != 0))
    {
        int64_t r8_1 = *(arg1 + 0x38);
        
        if (r8_1 != 0)
        {
            int64_t* rcx = *(arg1 + 0x28);
            
            if ((rcx != 0 && (*rcx == arg1 && (rcx[1] - 0x3f34) <= 0x1f)))
            {
                int64_t rdx = rcx[8];
                
                if (rdx != 0)
                    r8_1(*(arg1 + 0x40), rdx);
                
                *(arg1 + 0x38)(*(arg1 + 0x40), *(arg1 + 0x28));
                *(arg1 + 0x28) = 0;
                return 0;
            }
        }
    }
    
    return 0xfffffffe;
}

int64_t zcalloc(int64_t arg1, int32_t arg2, int32_t arg3)
{
    /* tailcall */
    return malloc((arg2 * arg3));
}

int64_t sub_180020370(int64_t arg1, int64_t arg2)
{
    /* tailcall */
    return free(arg2);
}

uint64_t sub_180020380(int32_t arg1, char* arg2, int64_t arg3)
{
    char* r10 = arg2;
    uint32_t r9 = (arg1 >> 0x10);
    uint32_t rcx = arg1;
    
    if (arg3 == 1)
    {
        uint32_t rcx_1 = (rcx + *arg2);
        uint32_t rdx = (rcx_1 - 0xfff1);
        
        if (rcx_1 < 0xfff1)
            rdx = rcx_1;
        
        uint32_t r9_1 = (r9 + rdx);
        uint32_t rax_2 = (r9_1 - 0xfff1);
        
        if (r9_1 < 0xfff1)
            rax_2 = r9_1;
        
        return ((rax_2 << 0x10) | rdx);
    }
    
    if (arg2 == 0)
        return &arg2[1];
    
    if (arg3 < 0x10)
    {
        if (arg3 != 0)
        {
            int64_t i;
            
            do
            {
                uint32_t rax_6 = *r10;
                r10 = &r10[1];
                rcx += rax_6;
                r9 += rcx;
                i = arg3;
                arg3 -= 1;
            } while (i != 1);
        }
        
        uint32_t r8 = (rcx - 0xfff1);
        
        if (rcx < 0xfff1)
            r8 = rcx;
        
        return (((((r9 / 0xfff1) * 0xf) + r9) << 0x10) | r8);
    }
    
    if (arg3 >= 0x15b0)
    {
        uint64_t i_5 = (arg3 / 0x15b0);
        arg3 = (arg3 % 0x15b0);
        uint64_t i_1;
        
        do
        {
            int32_t j_1 = 0x15b;
            int32_t j;
            
            do
            {
                uint32_t rcx_2 = (rcx + *r10);
                uint32_t rcx_3 = (rcx_2 + r10[1]);
                uint32_t rcx_4 = (rcx_3 + r10[2]);
                uint32_t rcx_5 = (rcx_4 + r10[3]);
                uint32_t rcx_6 = (rcx_5 + r10[4]);
                uint32_t rcx_7 = (rcx_6 + r10[5]);
                uint32_t rcx_8 = (rcx_7 + r10[6]);
                uint32_t rcx_9 = (rcx_8 + r10[7]);
                uint32_t rcx_10 = (rcx_9 + r10[8]);
                uint32_t rcx_11 = (rcx_10 + r10[9]);
                uint32_t rcx_12 = (rcx_11 + r10[0xa]);
                uint32_t rcx_13 = (rcx_12 + r10[0xb]);
                uint32_t rcx_14 = (rcx_13 + r10[0xc]);
                uint32_t rcx_15 = (rcx_14 + r10[0xd]);
                uint32_t rcx_16 = (rcx_15 + r10[0xe]);
                uint32_t rax_28 = r10[0xf];
                r10 = &r10[0x10];
                rcx = (rcx_16 + rax_28);
                r9 = ((((((((((((((((r9 + rcx_2) + rcx_3) + rcx_4) + rcx_5) + rcx_6) + rcx_7) + rcx_8) + rcx_9) + rcx_10) + rcx_11) + rcx_12) + rcx_13) + rcx_14) + rcx_15) + rcx_16) + rcx);
                j = j_1;
                j_1 -= 1;
            } while (j != 1);
            rcx += ((rcx / 0xfff1) * 0xffff000f);
            r9 += ((r9 / 0xfff1) * 0xffff000f);
            i_1 = i_5;
            i_5 -= 1;
        } while (i_1 != 1);
    }
    
    if (arg3 != 0)
    {
        if (arg3 >= 0x10)
        {
            uint64_t i_4 = (arg3 >> 4);
            arg3 -= (i_4 * 0x10);
            uint64_t i_2;
            
            do
            {
                uint32_t rcx_17 = (rcx + *r10);
                uint32_t rcx_18 = (rcx_17 + r10[1]);
                uint32_t rcx_19 = (rcx_18 + r10[2]);
                uint32_t rcx_20 = (rcx_19 + r10[3]);
                uint32_t rcx_21 = (rcx_20 + r10[4]);
                uint32_t rcx_22 = (rcx_21 + r10[5]);
                uint32_t rcx_23 = (rcx_22 + r10[6]);
                uint32_t rcx_24 = (rcx_23 + r10[7]);
                uint32_t rcx_25 = (rcx_24 + r10[8]);
                uint32_t rcx_26 = (rcx_25 + r10[9]);
                uint32_t rcx_27 = (rcx_26 + r10[0xa]);
                uint32_t rcx_28 = (rcx_27 + r10[0xb]);
                uint32_t rcx_29 = (rcx_28 + r10[0xc]);
                uint32_t rcx_30 = (rcx_29 + r10[0xd]);
                uint32_t rcx_31 = (rcx_30 + r10[0xe]);
                uint32_t rax_47 = r10[0xf];
                r10 = &r10[0x10];
                rcx = (rcx_31 + rax_47);
                r9 = ((((((((((((((((r9 + rcx_17) + rcx_18) + rcx_19) + rcx_20) + rcx_21) + rcx_22) + rcx_23) + rcx_24) + rcx_25) + rcx_26) + rcx_27) + rcx_28) + rcx_29) + rcx_30) + rcx_31) + rcx);
                i_2 = i_4;
                i_4 -= 1;
            } while (i_2 != 1);
        }
        
        if (arg3 != 0)
        {
            int64_t i_3;
            
            do
            {
                uint32_t rax_48 = *r10;
                r10 = &r10[1];
                rcx += rax_48;
                r9 += rcx;
                i_3 = arg3;
                arg3 -= 1;
            } while (i_3 != 1);
        }
        
        rcx += ((rcx / 0xfff1) * 0xffff000f);
        r9 += ((r9 / 0xfff1) * 0xffff000f);
    }
    
    return ((r9 << 0x10) | rcx);
}

int64_t sub_180020660(int32_t arg1, int16_t* arg2, int32_t arg3, int64_t* arg4, int32_t* arg5, void* arg6)
{
    void var_f8;
    int64_t rax_1 = (__security_cookie ^ &var_f8);
    uint64_t i_9 = arg3;
    void var_88;
    
    for (int32_t i = 0; i <= 0xf; )
    {
        uint64_t rax_3 = (i * 2);
        
        if (rax_3 >= 0x20)
        {
            _lockexit();
            breakpoint();
        }
        
        i += 1;
        *(&var_88 + rax_3) = 0;
    }
    
    if (i_9 != 0)
    {
        int16_t* rcx = arg2;
        uint64_t i_6 = i_9;
        uint64_t i_1;
        
        do
        {
            uint64_t rax_4 = *rcx;
            rcx = &rcx[1];
            *(&var_88 + (rax_4 << 1)) += 1;
            i_1 = i_6;
            i_6 -= 1;
        } while (i_1 != 1);
    }
    
    uint32_t i_8 = *arg5;
    int32_t rdx = 0xd;
    uint32_t i_2;
    int32_t r15_1;
    
    for (i_2 = 0xf; i_2 >= 1; )
    {
        r15_1 = -1;
        
        if (*(&var_88 + (i_2 << 1)) != 0)
            break;
        
        if (*(&var_88 + ((rdx + 1) << 1)) != 0)
        {
            i_2 -= 1;
            break;
        }
        
        if (*(&var_88 + (rdx << 1)) != 0)
        {
            i_2 -= 2;
            break;
        }
        
        if (*(&var_88 + ((rdx - 1) << 1)) != 0)
        {
            i_2 -= 3;
            break;
        }
        
        if (*(&var_88 + ((rdx - 2) << 1)) != 0)
        {
            i_2 -= 4;
            break;
        }
        
        i_2 -= 5;
        rdx -= 5;
    }
    
    if (i_8 > i_2)
        i_8 = i_2;
    
    int64_t result;
    
    if (i_2 != 0)
    {
        uint32_t i_11 = 1;
        void var_86;
        
        if (i_2 > 1)
        {
            void* rax_10 = &var_86;
            
            while (*rax_10 == 0)
            {
                i_11 += 1;
                rax_10 += 2;
                
                if (i_11 >= i_2)
                    break;
            }
        }
        
        int32_t i_3 = 1;
        int32_t r8_1 = 1;
        
        if (i_8 < i_11)
            i_8 = i_11;
        
        do
        {
            int32_t r8_2 = (r8_1 * 2);
            uint32_t rcx_5 = *(&var_88 + (i_3 << 1));
            r8_1 = (r8_2 - rcx_5);
            
            if ((r8_2 - rcx_5) < 0)
                goto label_180020b57;
            
            i_3 += 1;
        } while (i_3 <= 0xf);
        
        if ((r8_1 <= 0 || (arg1 != 0 && i_2 == 1)))
        {
            int16_t var_66 = 0;
            int64_t rcx_6 = 0;
            int64_t i_7 = 0xe;
            int64_t i_4;
            
            do
            {
                void var_64;
                *(&var_64 + rcx_6) = (*(&var_86 + rcx_6) + *(&var_66 + rcx_6));
                rcx_6 += 2;
                i_4 = i_7;
                i_7 -= 1;
            } while (i_4 != 1);
            int32_t i_5 = 0;
            
            if (i_9 != 0)
            {
                int16_t* rdx_1 = arg2;
                
                do
                {
                    int16_t rax_13 = *rdx_1;
                    
                    if (rax_13 != 0)
                    {
                        void var_68;
                        *(arg6 + (*(&var_68 + (rax_13 << 1)) << 1)) = i_5;
                        uint64_t rax_15 = *rdx_1;
                        *(&var_68 + (rax_15 << 1)) += 1;
                    }
                    
                    i_5 += 1;
                    rdx_1 = &rdx_1[1];
                } while (i_5 < i_9);
            }
            
            void* const var_b8_1;
            void* const var_b0_1;
            int32_t rdx_2;
            
            if (arg1 == 0)
            {
                var_b8_1 = arg6;
                rdx_2 = 0x14;
                var_b0_1 = arg6;
            }
            else if (arg1 == 1)
            {
                rdx_2 = 0x101;
                var_b0_1 = &data_180025e10;
                var_b8_1 = &data_180025dd0;
            }
            else
            {
                rdx_2 = 0;
                var_b0_1 = &data_180025e50;
                var_b8_1 = &data_180025d90;
            }
            
            int64_t r12_1 = *arg4;
            uint64_t rsi_1 = (1 << i_8);
            int32_t rbx = 0;
            int32_t var_cc_1 = 0;
            uint64_t r8_3 = 0;
            uint32_t i_12 = 0;
            char rdi_1 = 0;
            int32_t var_d4_1 = rdx_2;
            int32_t r13_1 = rsi_1;
            int32_t rax_16 = (rsi_1 - 1);
            
            if (arg1 == 1)
            {
                if (rsi_1 <= 0x354)
                    goto label_18002096b;
                
            label_180020938:
                result = 1;
            }
            else if ((arg1 != 2 || rsi_1 <= 0x250))
            {
            label_18002096b:
                
                while (true)
                {
                    int32_t var_d8;
                    *var_d8[1] = (i_11 - rdi_1);
                    uint32_t rcx_10 = *(arg6 + (r8_3 << 1));
                    
                    if ((rcx_10 + 1) >= rdx_2)
                    {
                        int16_t rax_23;
                        
                        if (rcx_10 < rdx_2)
                        {
                            var_d8 = 0x60;
                            rax_23 = 0;
                        }
                        else
                        {
                            char* rcx_12 = ((rcx_10 - rdx_2) * 2);
                            var_d8 = *(rcx_12 + var_b8_1);
                            rax_23 = *(rcx_12 + var_b0_1);
                        }
                        
                        *var_d8[2] = rax_23;
                    }
                    else
                    {
                        var_d8 = 0;
                        *var_d8[2] = rcx_10;
                    }
                    
                    int32_t r8_4 = rsi_1;
                    int32_t r10 = (1 << (i_11 - rdi_1));
                    uint64_t rdx_5 = ((rbx >> rdi_1) + rsi_1);
                    int32_t temp3_1;
                    
                    do
                    {
                        rdx_5 = (rdx_5 - r10);
                        *(r12_1 + (rdx_5 << 2)) = var_d8;
                        temp3_1 = r8_4;
                        r8_4 -= r10;
                    } while (temp3_1 != r10);
                    int32_t rdx_6 = (1 << (i_11 - 1));
                    
                    while ((rbx & rdx_6) != 0)
                        rdx_6 u>>= 1;
                    
                    if (rdx_6 == 0)
                        rbx = 0;
                    else
                        rbx = ((rbx & (rdx_6 - 1)) + rdx_6);
                    
                    r8_3 = (var_cc_1 + 1);
                    uint64_t i_13 = i_11;
                    var_cc_1 = r8_3;
                    int16_t temp4_1 = *(&var_88 + (i_13 << 1));
                    *(&var_88 + (i_13 << 1)) -= 1;
                    
                    if (temp4_1 == 1)
                    {
                        if (i_11 == i_2)
                        {
                            if (rbx != 0)
                            {
                                *var_d8[2] = 0;
                                i_11 -= rdi_1;
                                var_d8 = 0x40;
                                *var_d8[1] = i_11;
                                *(r12_1 + (rbx << 2)) = 0x40;
                            }
                            
                            *arg4 += (r13_1 << 2);
                            *arg5 = i_8;
                            break;
                        }
                        
                        i_11 = arg2[*(arg6 + (r8_3 << 1))];
                    }
                    
                    rdx_2 = var_d4_1;
                    
                    if (i_11 > i_8)
                    {
                        uint64_t rdi_3 = (rax_16 & rbx);
                        
                        if (rdi_3 != r15_1)
                        {
                            uint32_t i_10 = i_12;
                            r12_1 += (rsi_1 << 2);
                            
                            if (i_10 == 0)
                                i_10 = i_8;
                            
                            uint32_t r10_3 = (i_11 - i_10);
                            i_12 = i_10;
                            uint64_t r8_6 = (i_10 + r10_3);
                            int32_t rdx_7 = (1 << r10_3);
                            
                            while (r8_6 < i_2)
                            {
                                int32_t rdx_8 = (rdx_7 - *(&var_88 + (r8_6 << 1)));
                                
                                if (rdx_8 <= 0)
                                    break;
                                
                                r10_3 += 1;
                                r8_6 = (r8_6 + 1);
                                rdx_7 = (rdx_8 * 2);
                            }
                            
                            rsi_1 = (1 << r10_3);
                            r13_1 += rsi_1;
                            bool cond:2_1;
                            
                            if (arg1 == 1)
                            {
                                cond:2_1 = r13_1 > 0x354;
                            label_180020ad6:
                                
                                if (cond:2_1)
                                    goto label_180020938_1;
                            }
                            else if (arg1 == 2)
                            {
                                cond:2_1 = r13_1 > 0x250;
                                goto label_180020ad6;
                            }
                            char* rdx_9 = (rdi_3 << 2);
                            r15_1 = rdi_3;
                            rdx_9[*arg4] = r10_3;
                            rdx_9[(*arg4 + 1)] = i_8;
                            int64_t rcx_23 = *arg4;
                            r8_3 = var_cc_1;
                            *((rcx_23 + rdx_9) + 2) = ((r12_1 - rcx_23) >> 2);
                            rdx_2 = var_d4_1;
                        }
                        
                        rdi_1 = i_12;
                    }
                }
                
                result = 0;
            }
            else
            {
            label_180020938_1:
                result = 1;
            }
        }
        else
        {
        label_180020b57:
            result = 0xffffffff;
        }
    }
    else
    {
        int32_t var_d8_1 = 0x140;
        **arg4 = 0x140;
        *arg4 += 4;
        **arg4 = 0x140;
        *arg4 += 4;
        *arg5 = 1;
        result = 0;
    }
    
    __security_check_cookie((rax_1 ^ &var_f8));
    return result;
}

int64_t sub_180020b70(int64_t* arg1, int32_t arg2)
{
    void* r12 = arg1[5];
    int32_t r9 = arg1[3];
    char* r8 = arg1[2];
    char* rdi = *arg1;
    int32_t rcx = r8;
    int64_t r10 = *(r12 + 0x60);
    int64_t rsi = *(r12 + 0x68);
    void* r13_2 = &rdi[(arg1[1] - 5)];
    int32_t i_10 = *(r12 + 0x3c);
    void* r15_1 = &r8[(r9 - 0x101)];
    uint32_t rbx = *(r12 + 0x48);
    int32_t r11 = *(r12 + 0x4c);
    int64_t var_70 = r10;
    int32_t rax_1 = *(r12 + 0x34);
    int32_t rax_2 = *(r12 + 0x38);
    void* rax_3 = *(r12 + 0x40);
    int32_t rdx_2 = ((1 << *(r12 + 0x70)) - 1);
    int32_t rax_5 = ((1 << *(r12 + 0x74)) - 1);
    int64_t var_68 = rsi;
    int32_t var_78 = rdx_2;
    int64_t* rdx_10;
    
    while (true)
    {
        if (r11 < 0xf)
        {
            uint32_t rbx_1 = (rbx + (*rdi << r11));
            uint32_t rax_9 = (rdi[1] << (r11 + 8));
            rdi = &rdi[2];
            rbx = (rbx_1 + rax_9);
            r11 += 0x10;
        }
        
        uint64_t rcx_7 = (rdx_2 & rbx);
        uint32_t rdx_3 = *(r10 + (rcx_7 << 2));
        void* r9_1 = (r10 + (rcx_7 << 2));
        uint32_t rcx_8 = *((r10 + (rcx_7 << 2)) + 1);
        rbx u>>= rcx_8;
        r11 -= rcx_8;
        
        if (rdx_3 == 0)
        {
        label_180020ca7:
            *r8 = *(r9_1 + 2);
            r8 = &r8[1];
        }
        else
        {
            while (true)
            {
                if ((rdx_3 & 0x10) != 0)
                {
                    uint32_t i = *(r9_1 + 2);
                    int32_t rdx_4 = (rdx_3 & 0xf);
                    
                    if (rdx_4 != 0)
                    {
                        if (r11 < rdx_4)
                        {
                            uint32_t rax_16 = (*rdi << r11);
                            rdi = &rdi[1];
                            rbx += rax_16;
                            r11 += 8;
                        }
                        
                        char rcx_15 = rdx_4;
                        int32_t rax_19 = (((1 << rcx_15) - 1) & rbx);
                        rbx u>>= rcx_15;
                        i += rax_19;
                        r11 -= rdx_4;
                    }
                    
                    if (r11 < 0xf)
                    {
                        uint32_t rbx_2 = (rbx + (*rdi << r11));
                        uint32_t rax_23 = (rdi[1] << (r11 + 8));
                        rdi = &rdi[2];
                        rbx = (rbx_2 + rax_23);
                        r11 += 0x10;
                    }
                    
                    uint64_t rcx_19 = (rax_5 & rbx);
                    uint32_t rdx_5 = *(rsi + (rcx_19 << 2));
                    void* r9_2 = (rsi + (rcx_19 << 2));
                    uint32_t rcx_20 = *((rsi + (rcx_19 << 2)) + 1);
                    rbx u>>= rcx_20;
                    r11 -= rcx_20;
                    char const* const rax_54;
                    
                    if ((rdx_5 & 0x10) != 0)
                    {
                    label_180020d6b:
                        int32_t rdx_6 = (rdx_5 & 0xf);
                        
                        if (r11 < rdx_6)
                        {
                            uint32_t rax_29 = (*rdi << r11);
                            rdi = &rdi[1];
                            rbx += rax_29;
                            r11 += 8;
                            
                            if (r11 < rdx_6)
                            {
                                uint32_t rax_31 = (*rdi << r11);
                                rdi = &rdi[1];
                                rbx += rax_31;
                                r11 += 8;
                            }
                        }
                        
                        char rcx_28 = rdx_6;
                        r11 -= rdx_6;
                        int32_t rax_34 = (((1 << rcx_28) - 1) & rbx);
                        rbx u>>= rcx_28;
                        int32_t rsi_2 = (*(r9_2 + 2) + rax_34);
                        int32_t rax_36 = (r8 - (rcx - (arg2 - r9)));
                        
                        if (rsi_2 <= rax_36)
                        {
                            void* rcx_32 = (r8 - rsi_2);
                            
                            do
                            {
                                char rax_49 = *rcx_32;
                                rcx_32 += 3;
                                *r8 = rax_49;
                                i -= 3;
                                r8[1] = *(rcx_32 - 2);
                                r8[2] = *(rcx_32 - 1);
                                r8 = &r8[3];
                            } while (i > 2);
                            
                            if (i == 0)
                                goto label_180020f82;
                            
                            rsi = var_68;
                            *r8 = *rcx_32;
                            r8 = &r8[1];
                            r10 = var_70;
                            
                            if (i > 1)
                            {
                                *r8 = *(rcx_32 + 1);
                                r8 = &r8[1];
                            }
                            
                            break;
                        }
                        
                        int32_t i_6 = (rsi_2 - rax_36);
                        
                        if ((i_6 <= rax_2 || *(r12 + 0x1be0) == 0))
                        {
                            void* r9_5;
                            
                            if (i_10 != 0)
                            {
                                uint64_t r9_7 = (i_10 - i_6);
                                
                                if (i_10 >= i_6)
                                {
                                    r9_5 = (r9_7 + rax_3);
                                    
                                    if (i_6 < i)
                                    {
                                        i -= i_6;
                                        int32_t i_1;
                                        
                                        do
                                        {
                                            char rax_40 = *r9_5;
                                            r9_5 += 1;
                                            *r8 = rax_40;
                                            r8 = &r8[1];
                                            i_1 = i_6;
                                            i_6 -= 1;
                                        } while (i_1 != 1);
                                        r9_5 = (r8 - rsi_2);
                                    }
                                }
                                else
                                {
                                    int32_t i_7 = (i_6 - i_10);
                                    r9_5 = ((r9_7 + rax_1) + rax_3);
                                    
                                    if (i_7 < i)
                                    {
                                        i -= i_7;
                                        char* r9_9 = (r9_5 - r8);
                                        int32_t i_2;
                                        
                                        do
                                        {
                                            *r8 = *(r9_9 + r8);
                                            r8 = &r8[1];
                                            i_2 = i_7;
                                            i_7 -= 1;
                                        } while (i_2 != 1);
                                        r9_5 = rax_3;
                                        
                                        if (i_10 < i)
                                        {
                                            int32_t i_8 = i_10;
                                            i -= i_10;
                                            int32_t i_3;
                                            
                                            do
                                            {
                                                char rax_39 = *r9_5;
                                                r9_5 += 1;
                                                *r8 = rax_39;
                                                r8 = &r8[1];
                                                i_3 = i_8;
                                                i_8 -= 1;
                                            } while (i_3 != 1);
                                            r9_5 = (r8 - rsi_2);
                                        }
                                    }
                                }
                            }
                            else
                            {
                                r9_5 = ((rax_1 - i_6) + rax_3);
                                
                                if (i_6 < i)
                                {
                                    i -= i_6;
                                    int32_t i_4;
                                    
                                    do
                                    {
                                        char rax_37 = *r9_5;
                                        r9_5 += 1;
                                        *r8 = rax_37;
                                        r8 = &r8[1];
                                        i_4 = i_6;
                                        i_6 -= 1;
                                    } while (i_4 != 1);
                                    r9_5 = (r8 - rsi_2);
                                }
                            }
                            
                            if (i > 2)
                            {
                                uint64_t i_9 = (((i - 3) / 3) + 1);
                                uint64_t i_5;
                                
                                do
                                {
                                    i -= 3;
                                    *r8 = *r9_5;
                                    r8[1] = *(r9_5 + 1);
                                    char rax_45 = *(r9_5 + 2);
                                    r9_5 += 3;
                                    r8[2] = rax_45;
                                    r8 = &r8[3];
                                    i_5 = i_9;
                                    i_9 -= 1;
                                } while (i_5 != 1);
                            }
                            
                            if (i == 0)
                            {
                            label_180020f82:
                                rsi = var_68;
                                r10 = var_70;
                                break;
                            }
                            
                            rsi = var_68;
                            *r8 = *r9_5;
                            r8 = &r8[1];
                            r10 = var_70;
                            
                            if (i > 1)
                            {
                                *r8 = *(r9_5 + 1);
                                r8 = &r8[1];
                            }
                            
                            break;
                        }
                        
                        rax_54 = "invalid distance too far back";
                    }
                    else
                    {
                        while ((rdx_5 & 0x40) == 0)
                        {
                            uint64_t rcx_24 = ((((1 << rdx_5) - 1) & rbx) + *(r9_2 + 2));
                            rdx_5 = *(rsi + (rcx_24 << 2));
                            r9_2 = (rsi + (rcx_24 << 2));
                            uint32_t rcx_25 = *((rsi + (rcx_24 << 2)) + 1);
                            rbx u>>= rcx_25;
                            r11 -= rcx_25;
                            
                            if ((rdx_5 & 0x10) != 0)
                                goto label_180020d6b;
                        }
                        
                        rax_54 = "invalid distance code";
                    }
                    
                    rdx_10 = arg1;
                    rdx_10[4] = rax_54;
                    *(r12 + 8) = 0x3f51;
                    goto label_180020ffe;
                }
                
                if ((rdx_3 & 0x40) != 0)
                {
                    rdx_10 = arg1;
                    
                    if ((rdx_3 & 0x20) == 0)
                    {
                        rdx_10[4] = "invalid literal/length code";
                        *(r12 + 8) = 0x3f51;
                    }
                    else
                        *(r12 + 8) = 0x3f3f;
                    
                    goto label_180020ffe;
                }
                
                uint64_t rcx_12 = ((((1 << rdx_3) - 1) & rbx) + *(r9_1 + 2));
                rdx_3 = *(r10 + (rcx_12 << 2));
                r9_1 = (r10 + (rcx_12 << 2));
                uint32_t rcx_13 = *((r10 + (rcx_12 << 2)) + 1);
                rbx u>>= rcx_13;
                r11 -= rcx_13;
                
                if (rdx_3 == 0)
                    goto label_180020ca7;
            }
        }
        
        if (rdi >= r13_2)
            break;
        
        if (r8 >= r15_1)
            break;
        
        rdx_2 = var_78;
    }
    
    rdx_10 = arg1;
label_180020ffe:
    rdx_10[2] = r8;
    uint64_t rcx_34 = (r11 >> 3);
    void* rdi_1 = (rdi - rcx_34);
    *rdx_10 = rdi_1;
    int32_t r11_1 = (r11 - (rcx_34 << 3));
    rdx_10[1] = ((r13_2 - rdi_1) + 5);
    rdx_10[3] = ((r15_1 - r8) + 0x101);
    *(r12 + 0x48) = (rbx & ((1 << r11_1) - 1));
    *(r12 + 0x4c) = r11_1;
    return ((r15_1 - r8) + 0x101);
}

uint64_t sub_180021060(int32_t arg1, char* arg2, int64_t arg3)
{
    int64_t i_4 = arg3;
    char* r11 = arg2;
    
    if (arg2 == 0)
        return 0;
    
    int32_t r9_1 = !(arg1);
    
    if (arg3 >= 0x17)
    {
        while ((r11 & 3) != 0)
        {
            char rcx_1 = (*r11 ^ r9_1);
            r11 = &r11[1];
            r9_1 = (*((rcx_1 << 2) + 0x180025e90) ^ (r9_1 >> 8));
            int64_t i_6 = i_4;
            i_4 -= 1;
            
            if (i_6 == 1)
                break;
        }
        
        int32_t rdi_1 = 0;
        int32_t rbp_1 = 0;
        int32_t r14_1 = 0;
        int32_t r15_1 = 0;
        uint64_t rcx_3 = (i_4 / 0x14);
        i_4 = (i_4 % 0x14);
        i_3 = (rcx_3 - 1);
        
        if (rcx_3 != 1)
        {
            int64_t i;
            
            do
            {
                int32_t rax_8 = (*r11 ^ r9_1);
                int32_t rdx_3 = (*(r11 + 8) ^ rbp_1);
                int32_t r10_2 = (*(r11 + 0x10) ^ r15_1);
                int32_t rcx_6 = (*(r11 + 4) ^ rdi_1);
                int32_t r8_1 = (*(r11 + 0xc) ^ r14_1);
                r9_1 = *((rax_8 << 2) + 0x180026690);
                rdi_1 = *((rcx_6 << 2) + 0x180026690);
                rbp_1 = *((rdx_3 << 2) + 0x180026690);
                r14_1 = *((r8_1 << 2) + 0x180026690);
                int64_t r10_3 = 0x100;
                r15_1 = *((r10_2 << 2) + 0x180026690);
                uint64_t rbx_1 = 1;
                
                do
                {
                    char rax_16 = (rbx_1 << 3);
                    rbx_1 = (rbx_1 + 1);
                    r9_1 ^= *((((rax_8 >> rax_16) + r10_3) << 2) + 0x180026690);
                    rdi_1 ^= *((((rcx_6 >> rax_16) + r10_3) << 2) + 0x180026690);
                    rbp_1 ^= *((((rdx_3 >> rax_16) + r10_3) << 2) + 0x180026690);
                    r14_1 ^= *((((r8_1 >> rax_16) + r10_3) << 2) + 0x180026690);
                    int64_t rcx_15 = ((r10_2 >> rax_16) + r10_3);
                    r10_3 += 0x100;
                    r15_1 ^= *((rcx_15 << 2) + 0x180026690);
                } while (rbx_1 < 4);
                
                i = i_3;
                i_3 -= 1;
                r11 = &r11[0x14];
            } while (i != 1);
        }
        
        int32_t rdx_9 = (*r11 ^ r9_1);
        int32_t r8_4 = (*((rdx_9 << 2) + 0x180025e90) ^ (rdx_9 >> 8));
        int32_t rdx_12 = (*((r8_4 << 2) + 0x180025e90) ^ (r8_4 >> 8));
        int32_t r8_7 = (*((rdx_12 << 2) + 0x180025e90) ^ (rdx_12 >> 8));
        int32_t r8_11 = ((*(r11 + 4) ^ (*((r8_7 << 2) + 0x180025e90) ^ (r8_7 >> 8))) ^ rdi_1);
        int32_t rdx_15 = (*((r8_11 << 2) + 0x180025e90) ^ (r8_11 >> 8));
        int32_t r8_14 = (*((rdx_15 << 2) + 0x180025e90) ^ (rdx_15 >> 8));
        int32_t rdx_18 = (*((r8_14 << 2) + 0x180025e90) ^ (r8_14 >> 8));
        int32_t r8_18 = ((*(r11 + 8) ^ (*((rdx_18 << 2) + 0x180025e90) ^ (rdx_18 >> 8))) ^ rbp_1);
        int32_t rdx_21 = (*((r8_18 << 2) + 0x180025e90) ^ (r8_18 >> 8));
        int32_t r8_21 = (*((rdx_21 << 2) + 0x180025e90) ^ (rdx_21 >> 8));
        int32_t rdx_24 = (*((r8_21 << 2) + 0x180025e90) ^ (r8_21 >> 8));
        int32_t r8_25 = ((*(r11 + 0xc) ^ (*((rdx_24 << 2) + 0x180025e90) ^ (rdx_24 >> 8))) ^ r14_1);
        int32_t rdx_27 = (*((r8_25 << 2) + 0x180025e90) ^ (r8_25 >> 8));
        int32_t r8_28 = (*((rdx_27 << 2) + 0x180025e90) ^ (rdx_27 >> 8));
        int32_t rdx_30 = (*((r8_28 << 2) + 0x180025e90) ^ (r8_28 >> 8));
        int32_t r8_32 = ((*(r11 + 0x10) ^ (*((rdx_30 << 2) + 0x180025e90) ^ (rdx_30 >> 8))) ^ r15_1);
        int32_t rdx_33 = (*((r8_32 << 2) + 0x180025e90) ^ (r8_32 >> 8));
        int32_t r8_35 = (*((rdx_33 << 2) + 0x180025e90) ^ (rdx_33 >> 8));
        int32_t rdx_36 = (*((r8_35 << 2) + 0x180025e90) ^ (r8_35 >> 8));
        r9_1 = (*((rdx_36 << 2) + 0x180025e90) ^ (rdx_36 >> 8));
        r11 = &r11[0x14];
    }
    
    if (i_4 >= 8)
    {
        uint64_t i_5 = (i_4 >> 3);
        i_4 -= (i_5 * 8);
        uint64_t i_1;
        
        do
        {
            int32_t rdx_39 = (*(((*r11 ^ r9_1) << 2) + 0x180025e90) ^ (r9_1 >> 8));
            int32_t r8_38 = (*(((r11[1] ^ rdx_39) << 2) + 0x180025e90) ^ (rdx_39 >> 8));
            int32_t rdx_42 = (*(((r11[2] ^ r8_38) << 2) + 0x180025e90) ^ (r8_38 >> 8));
            int32_t r8_41 = (*(((r11[3] ^ rdx_42) << 2) + 0x180025e90) ^ (rdx_42 >> 8));
            int32_t rdx_45 = (*(((r11[4] ^ r8_41) << 2) + 0x180025e90) ^ (r8_41 >> 8));
            int32_t r8_44 = (*(((r11[5] ^ rdx_45) << 2) + 0x180025e90) ^ (rdx_45 >> 8));
            uint64_t rax_49 = (r11[6] ^ r8_44);
            char rcx_50 = r11[7];
            r11 = &r11[8];
            int32_t rdx_48 = (*((rax_49 << 2) + 0x180025e90) ^ (r8_44 >> 8));
            r9_1 = (*(((rcx_50 ^ rdx_48) << 2) + 0x180025e90) ^ (rdx_48 >> 8));
            i_1 = i_5;
            i_5 -= 1;
        } while (i_1 != 1);
    }
    
    if (i_4 != 0)
    {
        int64_t i_2;
        
        do
        {
            char rcx_52 = *r11;
            r11 = &r11[1];
            r9_1 = (*(((rcx_52 ^ r9_1) << 2) + 0x180025e90) ^ (r9_1 >> 8));
            i_2 = i_4;
            i_4 -= 1;
        } while (i_2 != 1);
    }
    
    return !(r9_1);
}

int64_t sub_180021570(int32_t arg1, char* arg2, int32_t arg3)
{
    /* tailcall */
    return sub_180021060(arg1, arg2, arg3);
}

uint64_t sub_180021580(char* arg1, void* arg2, int32_t arg3, int32_t arg4)
{
    void var_a8;
    int64_t rax_1 = (__security_cookie ^ &var_a8);
    int128_t zmm0 = data_180028ec0;
    int128_t zmm1 = data_180028e90;
    void* r14_1 = &arg1[arg3];
    void* rbp_1 = (arg4 + arg2);
    int32_t var_88 = 0;
    int32_t var_84 = 1;
    char* rdx = arg1;
    int32_t var_80 = 2;
    void* rbx = arg2;
    int32_t var_7c = 1;
    int64_t var_78 = 0x400000004;
    int64_t var_70 = 0x400000004;
    int128_t var_68 = zmm0;
    int128_t var_58 = zmm1;
    uint64_t result;
    
    if (arg4 != 0)
    {
        while (true)
        {
            uint32_t rax_2 = *rdx;
            rdx = &rdx[1];
            void* rdi_2 = (rax_2 >> 4);
            
            if (rdi_2 != 0xf)
            {
            label_18002168c:
                void* r9_1 = (rdi_2 + rbx);
                int16_t* rcx_1;
                
                if (r9_1 <= (rbp_1 - 0xc))
                    rcx_1 = (rdi_2 + rdx);
                
                if ((r9_1 <= (rbp_1 - 0xc) && rcx_1 <= (r14_1 - 8)))
                {
                    void* rdx_1 = (rdx - rbx);
                    
                    do
                    {
                        *rbx = *(rdx_1 + rbx);
                        rbx += 8;
                    } while (rbx < r9_1);
                    
                    uint64_t rdi_3 = *rcx_1;
                    rdx = &rcx_1[1];
                    void* r8_2 = (r9_1 - rdi_3);
                    
                    if (r8_2 >= arg2)
                    {
                        uint64_t r10_2 = (rax_2 & 0xf);
                        *r9_1 = rdi_3;
                        
                        if (r10_2 != 0xf)
                        {
                        label_18002172d:
                            void* r9_2 = (r9_1 + (r10_2 + 4));
                            void* r8_4;
                            
                            if (rdi_3 >= 8)
                            {
                                r8_4 = (r8_2 + 8);
                                *r9_1 = *r8_2;
                            }
                            else
                            {
                                *r9_1 = *r8_2;
                                *(r9_1 + 1) = *(r8_2 + 1);
                                *(r9_1 + 2) = *(r8_2 + 2);
                                *(r9_1 + 3) = *(r8_2 + 3);
                                void* r8_3 = (r8_2 + &var_88[rdi_3]);
                                *(r9_1 + 4) = *r8_3;
                                r8_4 = (r8_3 - *(&var_68 + (rdi_3 << 2)));
                            }
                            
                            void* i_1 = (r9_1 + 8);
                            
                            if (r9_2 <= (rbp_1 - 0xc))
                            {
                                *i_1 = *r8_4;
                                
                                if ((r10_2 + 4) > 0x10)
                                {
                                    void* rcx_3 = (i_1 + 8);
                                    void* r8_5 = (r8_4 - rcx_3);
                                    
                                    do
                                    {
                                        *rcx_3 = *((r8_5 + rcx_3) + 8);
                                        rcx_3 += 8;
                                    } while (rcx_3 < r9_2);
                                }
                                
                                rbx = r9_2;
                                continue;
                            }
                            else if (r9_2 <= (rbp_1 - 5))
                            {
                                if (i_1 < (rbp_1 - 7))
                                {
                                    void* i = i_1;
                                    
                                    do
                                    {
                                        *i = *((r8_4 - i_1) + i);
                                        i += 8;
                                    } while (i < (rbp_1 - 7));
                                    
                                    void* rax_20 = ((rbp_1 - 7) - i_1);
                                    i_1 = (rbp_1 - 7);
                                    r8_4 += rax_20;
                                }
                                
                                if (i_1 >= r9_2)
                                {
                                    rbx = r9_2;
                                    continue;
                                }
                                
                                do
                                {
                                    char rax_21 = *r8_4;
                                    r8_4 += 1;
                                    *i_1 = rax_21;
                                    i_1 += 1;
                                } while (i_1 < r9_2);
                                
                                rbx = r9_2;
                                continue;
                            }
                        }
                        else
                        {
                            uint64_t r11_1;
                            
                            do
                            {
                                r11_1 = *rdx;
                                rdx = &rdx[1];
                                
                                if (rdx > (r14_1 - 5))
                                    goto label_18002183d;
                                
                                r10_2 += r11_1;
                            } while (r11_1 == 0xff);
                            
                            if ((r9_1 + r10_2) >= r9_1)
                                goto label_18002172d;
                        }
                    }
                }
                else if (((rdi_2 + rdx) == r14_1 && r9_1 <= rbp_1))
                {
                    memcpy(rbx, rdx, rdi_2);
                    result = (rbx + (rdi_2 - arg2));
                    break;
                }
            }
            else
            {
                int32_t rax_3;
                int32_t rcx;
                
                do
                {
                    uint64_t r8 = *rdx;
                    rdi_2 += r8;
                    rdx = &rdx[1];
                    rcx = rdx < (r14_1 - 0xf);
                    rax_3 = r8 == 0xff;
                } while ((rax_3 & rcx) != 0);
                
                if (((rdi_2 + rbx) >= rbx && (rdi_2 + rdx) >= rdx))
                    goto label_18002168c;
            }
            
        label_18002183d:
            result = ((arg1 - rdx) - 1);
            break;
        }
    }
    else if ((arg3 != 1 || *arg1 != arg4))
        result = 0xffffffff;
    else
        result = 0;
    
    __security_check_cookie((rax_1 ^ &var_a8));
    return result;
}

uint64_t unz64local_CheckCurrentFileCoherencyHeader(void* arg1, int32_t* arg2, int64_t* arg3, int32_t* arg4, int512_t arg5 @ zmm0)
{
    int32_t rbx = 0;
    *arg2 = 0;
    *arg3 = 0;
    *arg4 = 0;
    
    if (sub_180023380(arg5, *(arg1 + 0x60), (*(arg1 + 0x78) + *(arg1 + 0x108)), 0) != 0)
        return 0xffffffff;
    
    if (sub_180022450(arg1, *(arg1 + 0x60), &arg_8) != 0)
        rbx = -1;
    else if (arg_8 != 0x4034b50)
        rbx = -0x67;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &arg_8) != 0)
        rbx = -1;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &arg_10) != 0)
        rbx = -1;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &arg_8) != 0)
        rbx = -1;
    else if (rbx == 0)
    {
        int32_t rax_6 = *(arg1 + 0xbc);
        
        if (((arg_8 != rax_6 || (rax_6 & 0xfffffff3) != 0) || rax_6 == 4))
            rbx = -0x67;
    }
    
    if (sub_180022450(arg1, *(arg1 + 0x60), &arg_8) != 0)
        rbx = -1;
    
    int32_t rax_8 = sub_180022450(arg1, *(arg1 + 0x60), &arg_8);
    char rbp = arg_10;
    
    if (rax_8 != 0)
        rbx = -1;
    else if ((rbx == 0 && (arg_8 != *(arg1 + 0xc4) && (rbp & 8) == 0)))
        rbx = -0x67;
    
    if (sub_180022450(arg1, *(arg1 + 0x60), &arg_8) == 0)
    {
        uint64_t rax_11 = arg_8;
        
        if ((rax_11 != 0xffffffff && (rbx == 0 && (rax_11 != *(arg1 + 0xc8) && (rbp & 8) == 0))))
            rbx = -0x67;
    }
    else
        rbx = -1;
    
    if (sub_180022450(arg1, *(arg1 + 0x60), &arg_8) == 0)
    {
        uint64_t rax_13 = arg_8;
        
        if ((rax_13 != 0xffffffff && (rbx == 0 && (rax_13 != *(arg1 + 0xd0) && (rbp & 8) == 0))))
            rbx = -0x67;
    }
    else
        rbx = -1;
    
    int32_t rax_14 = sub_1800226a0(arg1, *(arg1 + 0x60), &arg_8);
    uint64_t rbp_1 = arg_8;
    
    if (rax_14 != 0)
        rbx = -1;
    else if ((rbx == 0 && rbp_1 != *(arg1 + 0xd8)))
        rbx = -0x67;
    
    *arg2 += rbp_1;
    int32_t rax_15 = sub_1800226a0(arg1, *(arg1 + 0x60), &arg_8);
    uint32_t rcx_10 = arg_8;
    
    if (rax_15 != 0)
        rbx = -1;
    
    *arg3 = ((rbp_1 + 0x1e) + *(arg1 + 0x108));
    *arg4 = rcx_10;
    *arg2 += rcx_10;
    return rbx;
}

int64_t unz64local_DosDateToTmuDate(int64_t arg1, int32_t* arg2)
{
    uint64_t r8 = (arg1 >> 0x10);
    arg2[3] = (r8 & 0x1f);
    arg2[4] = (((r8 >> 5) & 0xf) - 1);
    arg2[5] = (((r8 >> 9) & 0x7f) + 0x7bc);
    arg2[2] = ((arg1 >> 0xb) & 0x1f);
    int32_t result = ((arg1 >> 5) & 0x3f);
    arg2[1] = result;
    *arg2 = ((arg1 & 0x1f) * 2);
    return result;
}

uint64_t sub_180021af0(void* arg1, int128_t* arg2, int64_t* arg3, int64_t arg4, int512_t arg5 @ zmm0, int32_t arg6, int64_t arg7, int32_t arg8, int64_t arg9, uint32_t arg10)
{
    int32_t i = 0;
    int128_t* r13 = arg2;
    
    if (arg1 == 0)
        return (arg1 - 0x66);
    
    int32_t rdi;
    
    if (sub_180023380(arg5, *(arg1 + 0x60), (*(arg1 + 0x88) + *(arg1 + 0x78)), 0) == 0)
    {
        if (sub_180022450(arg1, *(arg1 + 0x60), &arg_8) == 0)
        {
            rdi = 0;
            
            if (arg_8 != 0x2014b50)
                rdi = -0x67;
        }
        else
            rdi = -1;
    }
    else
        rdi = -1;
    
    int128_t var_b8;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &var_b8) != 0)
        rdi = -1;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &*var_b8[4]) != 0)
        rdi = -1;
    
    void var_b0;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &var_b0) != 0)
        rdi = -1;
    
    void var_ac;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &var_ac) != 0)
        rdi = -1;
    
    int32_t var_a8;
    
    if (sub_180022450(arg1, *(arg1 + 0x60), &var_a8) != 0)
        rdi = -1;
    
    int128_t var_78;
    unz64local_DosDateToTmuDate(var_a8, &var_78);
    void var_a4;
    
    if (sub_180022450(arg1, *(arg1 + 0x60), &var_a4) != 0)
        rdi = -1;
    
    int32_t rax_9 = sub_180022450(arg1, *(arg1 + 0x60), &arg_8);
    int64_t rdx_10 = *(arg1 + 0x60);
    
    if (rax_9 != 0)
        rdi = -1;
    
    uint64_t var_a0 = arg_8;
    int32_t rax_11 = sub_180022450(arg1, rdx_10, &arg_8);
    int64_t rdx_11 = *(arg1 + 0x60);
    
    if (rax_11 != 0)
        rdi = -1;
    
    uint64_t var_98 = arg_8;
    int32_t var_90;
    
    if (sub_1800226a0(arg1, rdx_11, &var_90) != 0)
        rdi = -1;
    
    int32_t var_8c;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &var_8c) != 0)
        rdi = -1;
    
    int32_t var_88;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &var_88) != 0)
        rdi = -1;
    
    int32_t var_84;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &var_84) != 0)
        rdi = -1;
    
    void var_80;
    
    if (sub_1800226a0(arg1, *(arg1 + 0x60), &var_80) != 0)
        rdi = -1;
    
    void var_7c;
    
    if (sub_180022450(arg1, *(arg1 + 0x60), &var_7c) != 0)
        rdi = -1;
    
    int32_t rax_19 = sub_180022450(arg1, *(arg1 + 0x60), &arg_8);
    uint64_t r15 = var_90;
    
    if (rax_19 != 0)
        rdi = -1;
    
    int64_t rbx = arg_8;
    int64_t var_c0 = rbx;
    uint64_t r14_2;
    uint32_t r15_1;
    
    if (rdi != 0)
    {
        r14_2 = var_8c;
        r15_1 = (r15 + r14_2);
    }
    else
    {
        if (arg4 != 0)
        {
            int32_t r14_1;
            
            if (r15 >= arg6)
                r14_1 = arg6;
            else
            {
                *(r15 + arg4) = 0;
                r14_1 = r15;
            }
            
            if (((r15 != 0 && arg6 != 0) && *(arg1 + 8)(*(arg1 + 0x38), *(arg1 + 0x60), arg4, r14_1) != r14_1))
                rdi = -1;
            
            r15 = (r15 - r14_1);
        }
        
        if ((arg4 != 0 && rdi != 0))
        {
            r14_2 = var_8c;
            r15_1 = (r15 + r14_2);
        }
        else
        {
            int64_t rdx_20 = arg7;
            
            if (rdx_20 == 0)
            {
                r14_2 = var_8c;
                r15_1 = (r15 + r14_2);
            }
            else
            {
                r14_2 = var_8c;
                uint64_t rcx_19 = arg8;
                arg_8 = r14_2;
                
                if (r14_2 >= rcx_19)
                    arg_8 = rcx_19;
                
                if (r15 != 0)
                {
                    rcx_19 = arg8;
                    rdx_20 = arg7;
                    
                    if (sub_180023380(arg1, *(arg1 + 0x60), r15, 1) != 0)
                        rdi = -1;
                    else
                        r15 = 0;
                }
                
                if ((r14_2 == 0 || rcx_19 == 0))
                    r15_1 = (r15 + (r14_2 - arg_8));
                else
                {
                    int32_t rax_22 = *(arg1 + 8)(*(arg1 + 0x38), *(arg1 + 0x60), rdx_20, arg_8);
                    int64_t rcx_22 = arg_8;
                    
                    if (rax_22 != rcx_22)
                        rdi = -1;
                    
                    r15_1 = (r15 + (r14_2 - rcx_22));
                }
            }
        }
    }
    
    if (rdi == 0)
    {
        if (r14_2 == 0)
        {
        label_180021f3e:
            int64_t rcx_33 = arg9;
            
            if (rcx_33 == 0)
            {
            label_180021fc0:
                
                if (r13 != 0)
                {
                    uint128_t zmm1 = var_a8;
                    *r13 = var_b8;
                    int128_t zmm0 = var_98;
                    r13[1] = zmm1;
                    zmm1 = var_88;
                    r13[2] = zmm0;
                    zmm0 = var_78;
                    r13[3] = zmm1;
                    r13[4] = zmm0;
                    int64_t var_68;
                    r13[5] = var_68;
                }
                
                if (arg3 != 0)
                    *arg3 = rbx;
            }
            else
            {
                uint64_t r14_3 = var_88;
                
                if (r14_3 >= arg10)
                    arg_8 = arg10;
                else
                {
                    *(r14_3 + rcx_33) = 0;
                    arg_8 = r14_3;
                }
                
                if (r15_1 != 0)
                {
                    rcx_33 = arg9;
                    
                    if (sub_180023380(arg1, *(arg1 + 0x60), r15_1, 1) != 0)
                        rdi = -1;
                }
                
                if ((r14_3 == 0 || arg10 == 0))
                {
                label_180021fb9:
                    
                    if (rdi == 0)
                        goto label_180021fc0;
                }
                else
                {
                    if (*(arg1 + 8)(*(arg1 + 0x38), *(arg1 + 0x60), rcx_33, arg_8) == arg_8)
                        goto label_180021fb9;
                    
                    rdi = -1;
                }
            }
        }
        else
        {
            uint32_t temp0_1 = r15_1;
            r15_1 -= r14_2;
            arg_8 = r15_1;
            
            if (temp0_1 != r14_2)
            {
                if (sub_180023380(arg1, *(arg1 + 0x60), r15_1, (rdi + 1)) != 0)
                    rdi = -1;
                else
                {
                    r15_1 = 0;
                    arg_8 = 0;
                }
            }
            
            if (r14_2 != 0)
            {
                do
                {
                    uint32_t var_c4;
                    
                    if (sub_1800226a0(arg1, *(arg1 + 0x60), &var_c4) != 0)
                        rdi = -1;
                    
                    uint32_t var_c8;
                    int32_t rax_30 = sub_1800226a0(arg1, *(arg1 + 0x60), &var_c8);
                    uint64_t r13_1 = var_c8;
                    
                    if (rax_30 != 0)
                        rdi = -1;
                    
                    if (var_c4 != 1)
                    {
                        if (sub_180023380(arg1, *(arg1 + 0x60), r13_1, 1) != 0)
                            rdi = -1;
                    }
                    else
                    {
                        if (var_98 == 0xffffffff)
                        {
                            int32_t rax_31 = sub_180022520(arg1, *(arg1 + 0x60), &var_98);
                            r14_2 = var_8c;
                            
                            if (rax_31 != 0)
                                rdi = -1;
                        }
                        
                        if (var_a0 == 0xffffffff)
                        {
                            int32_t rax_32 = sub_180022520(arg1, *(arg1 + 0x60), &var_a0);
                            r14_2 = var_8c;
                            
                            if (rax_32 != 0)
                                rdi = -1;
                        }
                        
                        if (rbx == 0xffffffff)
                        {
                            int32_t rax_33 = sub_180022520(arg1, *(arg1 + 0x60), &var_c0);
                            rbx = var_c0;
                            
                            if (rax_33 != 0)
                                rdi = -1;
                        }
                        
                        void var_58;
                        
                        if ((var_84 == 0xffffffff && sub_180022450(arg1, *(arg1 + 0x60), &var_58) != 0))
                            rdi = -1;
                    }
                    
                    i = ((i + 4) + r13_1);
                } while (i < r14_2);
                
                r15_1 = arg_8;
                r13 = arg2;
            }
            
            if (rdi == 0)
                goto label_180021f3e;
        }
    }
    
    return rdi;
}

int64_t sub_180022040(void* arg1, int64_t arg2, int512_t arg3 @ zmm0, int512_t arg4 @ zmm1)
{
    int64_t r12 = 0;
    uint64_t r14 = 0xffff;
    
    if (sub_180023380(arg3, arg4, 0, 2) != 0)
        return 0;
    
    uint64_t rax_2 = sub_1800233b0(arg1, arg2);
    
    if (rax_2 < 0xffff)
        r14 = rax_2;
    
    int64_t rax_3 = malloc(0x404);
    
    if (rax_3 == 0)
        return rax_3;
    
    uint64_t rbp = 4;
    
    if (4 < r14)
    {
        do
        {
            bool cond:1_1 = (rbp + 0x400) > r14;
            rbp += 0x400;
            
            if (cond:1_1)
                rbp = r14;
            
            uint64_t rsi_2 = (rax_2 - rbp);
            int32_t rdi_1;
            
            if ((rax_2 - rsi_2) <= 0x404)
                rdi_1 = (rax_2 - rsi_2);
            else
                rdi_1 = 0x404;
            
            if (sub_180023380(arg1, arg2, rsi_2, 0) != 0)
                break;
            
            if (*(arg1 + 8)(*(arg1 + 0x38), arg2, rax_3, rdi_1) != rdi_1)
                break;
            
            int32_t i_1 = (rdi_1 - 3);
            int64_t i = i_1;
            
            if (i_1 > 0)
            {
                do
                {
                    i -= 1;
                    i_1 -= 1;
                    
                    if ((*(i + rax_3) == 0x50 && (*((i + rax_3) + 1) == 0x4b && (*((i + rax_3) + 2) == 5 && *((i + rax_3) + 3) == 6))))
                    {
                        int64_t i_2 = i_1;
                        r12 = (i_2 + rsi_2);
                        
                        if (i_2 != -(rsi_2))
                            goto label_180022195;
                        
                        goto label_18002217f;
                    }
                } while (i > 0);
            }
            
        label_18002217f:
        } while (rbp < r14);
    }
    
label_180022195:
    free(rax_3);
    return r12;
}

int64_t sub_1800221c0(void* arg1, int64_t arg2, int512_t arg3 @ zmm0, int512_t arg4 @ zmm1)
{
    uint64_t r12 = 0xffff;
    int64_t r13 = 0;
    
    if (sub_180023380(arg3, arg4, 0, 2) != 0)
        return 0;
    
    uint64_t rax_2 = sub_1800233b0(arg1, arg2);
    arg_18 = rax_2;
    uint64_t rdi = rax_2;
    
    if (rax_2 < 0xffff)
        r12 = rax_2;
    
    int64_t rax_3 = malloc(0x404);
    
    if (rax_3 != 0)
    {
        uint64_t rbp_1 = 4;
        
        if (4 < r12)
        {
            do
            {
                bool cond:1_1 = (rbp_1 + 0x400) > r12;
                rbp_1 += 0x400;
                
                if (cond:1_1)
                    rbp_1 = r12;
                
                uint64_t rsi_2 = (rdi - rbp_1);
                int32_t rdi_1;
                
                if ((rdi - rsi_2) <= 0x404)
                    rdi_1 = (rdi - rsi_2);
                else
                    rdi_1 = 0x404;
                
                if (sub_180023380(arg1, arg2, rsi_2, 0) != 0)
                    break;
                
                if (*(arg1 + 8)(*(arg1 + 0x38), arg2, rax_3, rdi_1) != rdi_1)
                    break;
                
                int32_t rcx_3 = (rdi_1 - 3);
                int64_t rax_9 = rcx_3;
                
                if (rcx_3 > 0)
                {
                    while (true)
                    {
                        rax_9 -= 1;
                        rcx_3 -= 1;
                        
                        if ((*(rax_9 + rax_3) == 0x50 && (*((rax_9 + rax_3) + 1) == 0x4b && (*((rax_9 + rax_3) + 2) == 6 && *((rax_9 + rax_3) + 3) == 7))))
                            break;
                        
                        if (rax_9 <= 0)
                            goto label_1800222e1;
                    }
                    
                    int64_t r13_1 = rcx_3;
                    r13 = (r13_1 + rsi_2);
                    
                    if (r13_1 != -(rsi_2))
                        break;
                }
                
            label_1800222e1:
                rdi = arg_18;
            } while (rbp_1 < r12);
        }
        
        free(rax_3);
        
        if (((r13 != 0 && sub_180023380(arg1, arg2, r13, 0) == 0) && sub_180022450(arg1, arg2, &arg_18) == 0))
        {
            int32_t rax_12 = sub_180022450(arg1, arg2, &arg_18);
            
            if ((((rax_12 == 0 && arg_18 == rax_12) && sub_180022520(arg1, arg2, &result_1) == 0) && (sub_180022450(arg1, arg2, &arg_18) == 0 && arg_18 == 1)))
            {
                int64_t result = result_1;
                
                if ((sub_180023380(arg1, arg2, result, 0) == 0 && sub_180022450(arg1, arg2, &arg_18) == 0))
                {
                    if (arg_18 != 0x6064b50)
                        return 0;
                    
                    return result;
                }
            }
        }
    }
    
    return 0;
}

uint64_t unz64local_getByte(void* arg1, int64_t arg2, uint32_t* arg3)
{
    if (*(arg1 + 8)(*(arg1 + 0x38), arg2, &arg_8, 1) == 1)
    {
        *arg3 = arg_8;
        return 0;
    }
    
    int32_t rax_3 = *(arg1 + 0x30)(*(arg1 + 0x38), arg2);
    int32_t rax_4 = -(rax_3);
    return (rax_4 - rax_4);
}

uint64_t sub_180022450(void* arg1, int64_t arg2, uint32_t* arg3)
{
    arg_20 = 0;
    int32_t rax = unz64local_getByte(arg1, arg2, &arg_20);
    uint32_t r10 = arg_20;
    uint32_t rbx = r10;
    int32_t r9 = rax;
    
    if (rax == 0)
    {
        int32_t rax_1 = unz64local_getByte(arg1, arg2, &arg_20);
        r10 = arg_20;
        r9 = rax_1;
    }
    
    uint32_t rbx_1 = (rbx | (r10 << 8));
    
    if (r9 == 0)
    {
        int32_t rax_4 = unz64local_getByte(arg1, arg2, &arg_20);
        r10 = arg_20;
        r9 = rax_4;
    }
    
    if (r9 != 0)
        *arg3 = 0;
    else
    {
        int32_t rax_5 = unz64local_getByte(arg1, arg2, &arg_20);
        r9 = rax_5;
        
        if (rax_5 != 0)
            *arg3 = 0;
        else
            *arg3 = ((arg_20 << 0x18) + (rbx_1 | (r10 << 0x10)));
    }
    
    return r9;
}

uint64_t sub_180022520(void* arg1, int64_t arg2, int64_t* arg3)
{
    arg_20 = 0;
    int32_t rax = unz64local_getByte(arg1, arg2, &arg_20);
    int64_t r10 = arg_20;
    int32_t r9 = rax;
    int64_t rbx = r10;
    
    if (rax == 0)
    {
        int32_t rax_1 = unz64local_getByte(arg1, arg2, &arg_20);
        r10 = arg_20;
        r9 = rax_1;
    }
    
    int64_t rbx_1 = (rbx | (r10 << 8));
    
    if (r9 == 0)
    {
        int32_t rax_4 = unz64local_getByte(arg1, arg2, &arg_20);
        r10 = arg_20;
        r9 = rax_4;
    }
    
    int64_t rbx_2 = (rbx_1 | (r10 << 0x10));
    
    if (r9 == 0)
    {
        int32_t rax_7 = unz64local_getByte(arg1, arg2, &arg_20);
        r10 = arg_20;
        r9 = rax_7;
    }
    
    int64_t rbx_3 = (rbx_2 | (r10 << 0x18));
    
    if (r9 == 0)
    {
        int32_t rax_10 = unz64local_getByte(arg1, arg2, &arg_20);
        r10 = arg_20;
        r9 = rax_10;
    }
    
    int64_t rbx_4 = (rbx_3 | (r10 << 0x20));
    
    if (r9 == 0)
    {
        int32_t rax_13 = unz64local_getByte(arg1, arg2, &arg_20);
        r10 = arg_20;
        r9 = rax_13;
    }
    
    int64_t rbx_5 = (rbx_4 | (r10 << 0x28));
    
    if (r9 == 0)
    {
        int32_t rax_16 = unz64local_getByte(arg1, arg2, &arg_20);
        r10 = arg_20;
        r9 = rax_16;
    }
    
    if (r9 != 0)
        *arg3 = 0;
    else
    {
        int32_t rax_19 = unz64local_getByte(arg1, arg2, &arg_20);
        r9 = rax_19;
        
        if (rax_19 != 0)
            *arg3 = 0;
        else
            *arg3 = ((arg_20 << 0x38) | (rbx_5 | (r10 << 0x30)));
    }
    
    return r9;
}

uint64_t sub_1800226a0(void* arg1, int64_t arg2, uint32_t* arg3)
{
    arg_20 = 0;
    int32_t rax = unz64local_getByte(arg1, arg2, &arg_20);
    uint32_t rbp = arg_20;
    int32_t r9 = rax;
    int32_t rax_1;
    
    if (rax == 0)
    {
        rax_1 = unz64local_getByte(arg1, arg2, &arg_20);
        r9 = rax_1;
    }
    
    if ((rax != 0 || rax_1 != 0))
        *arg3 = 0;
    else
        *arg3 = ((arg_20 << 8) | rbp);
    
    return r9;
}

uint64_t unzClose(void* arg1)
{
    if (arg1 == 0)
        return (arg1 - 0x66);
    
    if (*(arg1 + 0x110) != 0)
        sub_180022770(arg1);
    
    *(arg1 + 0x28)(*(arg1 + 0x38), *(arg1 + 0x60));
    free(arg1);
    return 0;
}

uint64_t sub_180022770(void* arg1)
{
    int32_t rdi = 0;
    
    if (arg1 == 0)
        return (arg1 - 0x66);
    
    int64_t* rbx = *(arg1 + 0x110);
    
    if (rbx == 0)
        return (rbx - 0x66);
    
    if ((rbx[0x14] == 0 && (rbx[0x23] == 0 && rbx[0x12] != *(rbx + 0x94))))
        rdi = -0x69;
    
    int64_t rcx = *rbx;
    
    if (rcx != 0)
        free(rcx);
    
    bool cond:0 = rbx[0xd] != 8;
    *rbx = 0;
    
    if (!(cond:0))
        sub_1800202f0(&rbx[1]);
    
    rbx[0xd] = 0;
    free(rbx);
    *(arg1 + 0x110) = 0;
    return rdi;
}

uint64_t unzGetCurrentFileInfo64(void* arg1, int128_t* arg2, int64_t arg3, int32_t arg4, int512_t arg5 @ zmm0, int64_t arg6, int32_t arg7, int64_t arg8, uint32_t arg9)
{
    return sub_180021af0(arg1, arg2, nullptr, arg3, arg5, arg4, arg6, arg7, arg8, arg9);
}

int64_t unzGetGlobalInfo64(void* arg1, int128_t* arg2)
{
    if (arg1 == 0)
        return 0xffffff9a;
    
    *arg2 = *(arg1 + 0x68);
    return 0;
}

int64_t unzGoToFirstFile(void* arg1, int512_t arg2 @ zmm0)
{
    if (arg1 == 0)
        return (arg1 - 0x66);
    
    *(arg1 + 0x88) = *(arg1 + 0xa8);
    *(arg1 + 0x80) = 0;
    int32_t result = sub_180021af0(arg1, (arg1 + 0xb0), (arg1 + 0x108), 0, arg2, 0, 0, 0, 0, 0);
    int64_t rbx;
    rbx = result == 0;
    *(arg1 + 0x90) = rbx;
    return result;
}

uint64_t sub_180022920(void* arg1, int512_t arg2 @ zmm0)
{
    if (arg1 == 0)
        return (arg1 - 0x66);
    
    if (*(arg1 + 0x90) != 0)
    {
        int64_t rcx = *(arg1 + 0x68);
        
        if ((rcx == 0xffff || (*(arg1 + 0x80) + 1) != rcx))
        {
            int32_t rcx_2 = (*(arg1 + 0xe0) + *(arg1 + 0xdc));
            int32_t rax_6 = (*(arg1 + 0xd8) + 0x2e);
            *(arg1 + 0x80) += 1;
            *(arg1 + 0x88) += (rax_6 + rcx_2);
            int32_t result = sub_180021af0(arg1, (arg1 + 0xb0), (arg1 + 0x108), 0, arg2, 0, 0, 0, 0, 0);
            int64_t rbx;
            rbx = result == 0;
            *(arg1 + 0x90) = rbx;
            return result;
        }
    }
    
    return 0xffffff9c;
}

int64_t sub_1800229e0(int64_t arg1, int512_t arg2 @ zmm1)
{
    /* tailcall */
    return sub_180022c90(arg1, nullptr, arg2);
}

uint64_t unzOpenCurrentFile(int128_t* arg1, int512_t arg2 @ zmm0)
{
    return sub_180022a10(arg1, nullptr, nullptr, 0, arg2, 0);
}

uint64_t sub_180022a10(int128_t* arg1, int32_t* arg2, int32_t* arg3, int32_t arg4, int512_t arg5 @ zmm0, int64_t arg6)
{
    if ((arg6 != 0 || (arg1 == 0 || arg1[9] == 0)))
        return 0xffffff9a;
    
    if (arg1[0x11] != 0)
        sub_180022770(arg1);
    
    int32_t var_28;
    int64_t var_20;
    
    if (unz64local_CheckCurrentFileCoherencyHeader(arg1, &var_28, &var_20, &arg6, arg5) != 0)
        return 0xffffff99;
    
    int64_t* rax_3 = malloc(0x120);
    
    if (rax_3 == 0)
        return &rax_3[-0xd];
    
    int64_t rax_5 = malloc(0x4000);
    rax_3[0xe] = var_20;
    rax_3[0xf] = arg6;
    *rax_3 = rax_5;
    rax_3[0x10] = 0;
    rax_3[0x23] = arg4;
    
    if (rax_5 == 0)
    {
        free(rax_3);
        return 0xffffff98;
    }
    
    rax_3[0xd] = 0;
    
    if (arg2 != 0)
        *arg2 = *(arg1 + 0xbc);
    
    if (arg3 != 0)
    {
        *arg3 = 6;
        int32_t rax_8 = (*(arg1 + 0xb8) & 6);
        
        if (rax_8 == 2)
            *arg3 = 9;
        else if (rax_8 == 4)
            *arg3 = 2;
        else if (rax_8 == 6)
            *arg3 = 1;
    }
    
    *(rax_3 + 0x94) = *(arg1 + 0xc4);
    rax_3[0x12] = 0;
    rax_3[0x11] = 0;
    rax_3[0x21] = *(arg1 + 0xbc);
    rax_3[0x20] = arg1[6];
    *(rax_3 + 0xa8) = *arg1;
    *(rax_3 + 0xb8) = arg1[1];
    *(rax_3 + 0xc8) = arg1[2];
    *(rax_3 + 0xd8) = arg1[3];
    *(rax_3 + 0xe8) = arg1[4];
    rax_3[0x1f] = arg1[5];
    rax_3[0x22] = *(arg1 + 0x78);
    *(rax_3 + 0x24) = 0;
    int32_t rax_13 = *(arg1 + 0xbc);
    
    if ((rax_13 == 0xc && arg4 == 0))
        rax_3[0x23] = 1;
    else if ((rax_13 == 8 && arg4 == 0))
    {
        __builtin_memset(&rax_3[7], 0, 0x18);
        rax_3[1] = 0;
        rax_3[2] = 0;
        int32_t rax_16 = sub_18001e940(&rax_3[1], (rax_13 - 0x17), "1.2.13", (rax_13 + 0x50));
        
        if (rax_16 != 0)
        {
            free(rax_3);
            return rax_16;
        }
        
        rax_3[0xd] = 8;
    }
    
    uint64_t rcx_4 = var_28;
    rax_3[0x13] = *(arg1 + 0xc8);
    rax_3[0x14] = arg1[0xd];
    rax_3[0xc] = ((rcx_4 + 0x1e) + *(arg1 + 0x108));
    rax_3[2] = 0;
    arg1[0x11] = rax_3;
    *(arg1 + 0x118) = 0;
    return 0;
}

int128_t* sub_180022c90(int64_t arg1, int128_t* arg2, int512_t arg3 @ zmm1)
{
    void var_198;
    int64_t rax_1 = (__security_cookie ^ &var_198);
    int64_t var_108 = 0;
    int64_t var_110 = 0;
    int128_t var_158;
    int128_t var_138;
    int128_t var_128;
    
    if (arg2 != 0)
    {
        arg3 = arg2[1];
        var_158 = *arg2;
        int128_t var_148_1 = arg3;
        arg3 = arg2[3];
        var_138 = arg2[2];
        var_128 = arg3;
        arg3 = arg2[5];
        int128_t var_118_1 = arg2[4];
        int64_t var_108_1 = arg3;
    }
    else
        fill_fopen64_filefunc(&var_158);
    
    int32_t r8;
    int32_t var_100 = r8;
    int128_t* result;
    int512_t zmm0_1;
    result = call_zopen64(&var_158, arg1, 5);
    
    if (result != 0)
    {
        int64_t rax_2;
        int512_t zmm0_2;
        rax_2 = sub_1800221c0(&var_158, result, zmm0_1, arg3);
        int64_t rsi_1 = rax_2;
        int128_t* rcx_3 = &var_158;
        uint64_t var_b8;
        uint64_t var_b0;
        int32_t rax_14;
        int32_t rbx_1;
        int512_t zmm0_3;
        uint32_t var_178;
        uint32_t var_170;
        uint32_t var_168;
        uint64_t var_f0;
        uint32_t var_e8;
        
        if (rax_2 == 0)
        {
            int64_t rax_15 = sub_180022040(rcx_3, result, zmm0_2, arg3);
            int32_t var_3c_2 = 0;
            rbx_1 = 0;
            rsi_1 = rax_15;
            
            if (rax_15 == 0)
                rbx_1 = -1;
            
            int32_t rax_16;
            rax_16 = sub_180023380(&var_158, result, rax_15, 0);
            
            if (rax_16 != 0)
                rbx_1 = -1;
            
            if (sub_180022450(&var_158, result, &var_178) != 0)
                rbx_1 = -1;
            
            if (sub_1800226a0(&var_158, result, &var_168) != 0)
                rbx_1 = -1;
            
            if (sub_1800226a0(&var_158, result, &var_170) != 0)
                rbx_1 = -1;
            
            if (sub_1800226a0(&var_158, result, &var_178) != 0)
                rbx_1 = -1;
            
            var_f0 = var_178;
            
            if (sub_1800226a0(&var_158, result, &var_178) != 0)
                rbx_1 = -1;
            
            if (((var_178 != var_f0 || var_170 != 0) || var_168 != 0))
                rbx_1 = -0x67;
            
            if (sub_180022450(&var_158, result, &var_178) != 0)
                rbx_1 = -1;
            
            var_b8 = var_178;
            
            if (sub_180022450(&var_158, result, &var_178) != 0)
                rbx_1 = -1;
            
            var_b0 = var_178;
            rax_14 = sub_1800226a0(&var_158, result, &var_e8);
        }
        else
        {
            int32_t var_3c_1 = 1;
            int32_t rax_3;
            rax_3 = sub_180023380(rcx_3, result, rax_2, 0);
            rbx_1 = 0;
            
            if (rax_3 != 0)
                rbx_1 = -1;
            
            if (sub_180022450(&var_158, result, &var_178) != 0)
                rbx_1 = -1;
            
            if (sub_180022520(&var_158, result, &var_168) != 0)
                rbx_1 = -1;
            
            if (sub_1800226a0(&var_158, result, &var_168) != 0)
                rbx_1 = -1;
            
            if (sub_1800226a0(&var_158, result, &var_168) != 0)
                rbx_1 = -1;
            
            if (sub_180022450(&var_158, result, &var_168) != 0)
                rbx_1 = -1;
            
            if (sub_180022450(&var_158, result, &var_170) != 0)
                rbx_1 = -1;
            
            if (sub_180022520(&var_158, result, &var_f0) != 0)
                rbx_1 = -1;
            
            if (sub_180022520(&var_158, result, &var_178) != 0)
                rbx_1 = -1;
            
            if (((var_178 != var_f0 || var_170 != 0) || var_168 != 0))
                rbx_1 = -0x67;
            
            if (sub_180022520(&var_158, result, &var_b8) != 0)
                rbx_1 = -1;
            
            rax_14 = sub_180022520(&var_158, result, &var_b0);
            var_e8 = 0;
        }
        uint64_t rcx_23 = var_b0;
        uint64_t rdx_22 = var_b8;
        
        if (rax_14 != 0)
            rbx_1 = -1;
        
        if ((rsi_1 < (rcx_23 + rdx_22) || rbx_1 != 0))
        {
            *var_138[8](*var_128[8], result);
            result = nullptr;
        }
        else
        {
            int64_t var_c0_1 = rsi_1;
            int64_t var_48_1 = 0;
            int32_t var_40_1 = 0;
            int64_t var_e0_1 = ((rsi_1 - rcx_23) - rdx_22);
            int128_t* result_1 = malloc(0x120);
            
            if (result_1 != 0)
            {
                int128_t* result_2 = result_1;
                int128_t* rcx_24 = &var_158;
                int64_t i_1 = 2;
                int64_t i;
                
                do
                {
                    result_2 = &result_2[8];
                    zmm0_3 = *rcx_24;
                    rcx_24 = &rcx_24[8];
                    result_2[-8] = zmm0_3;
                    arg3 = rcx_24[-7];
                    result_2[-7] = arg3;
                    zmm0_3 = rcx_24[-6];
                    result_2[-6] = zmm0_3;
                    arg3 = rcx_24[-5];
                    result_2[-5] = arg3;
                    zmm0_3 = rcx_24[-4];
                    result_2[-4] = zmm0_3;
                    arg3 = rcx_24[-3];
                    result_2[-3] = arg3;
                    zmm0_3 = rcx_24[-2];
                    result_2[-2] = zmm0_3;
                    arg3 = rcx_24[-1];
                    result_2[-1] = arg3;
                    i = i_1;
                    i_1 -= 1;
                } while (i != 1);
                zmm0_3 = *rcx_24;
                *result_2 = zmm0_3;
                arg3 = rcx_24[1];
                result_2[1] = arg3;
                unzGoToFirstFile(result_1, zmm0_3);
            }
            
            result = result_1;
        }
    }
    
    __security_check_cookie((rax_1 ^ &var_198));
    return result;
}

uint64_t sub_1800230a0(void* arg1, int64_t arg2, int32_t arg3)
{
    int32_t r12 = 0;
    
    if (arg1 == 0)
        return (arg1 - 0x66);
    
    int64_t* rbx = *(arg1 + 0x110);
    
    if (rbx == 0)
        return (rbx - 0x66);
    
    if (*rbx == 0)
        return 0xffffff9c;
    
    if (arg3 == 0)
        return 0;
    
    uint64_t rcx = arg3;
    rbx[3] = arg2;
    rbx[4] = arg3;
    
    if ((rcx > rbx[0x14] && rbx[0x23] == 0))
        rbx[4] = rbx[0x14];
    
    int32_t rdx = rbx[2];
    
    if ((rcx > (rdx + rbx[0x13]) && rbx[0x23] != 0))
        rbx[4] = (rbx[0x13] + rdx);
    
    while (rbx[4] > 0)
    {
        if (rbx[2] == 0)
        {
            int64_t rax_8 = rbx[0x13];
            
            if (rax_8 != 0)
            {
                int32_t rdi_1 = 0x4000;
                
                if (rax_8 < 0x4000)
                {
                    rdi_1 = rax_8;
                    
                    if (rax_8 == 0)
                        return 0;
                }
                
                int32_t rax_9 = sub_180023380(&rbx[0x15], rbx[0x20], (rbx[0x22] + rbx[0xc]), 0);
                int32_t rax_10;
                
                if (rax_9 == 0)
                    rax_10 = rbx[0x16](rbx[0x1c], rbx[0x20], *rbx, rdi_1);
                
                if ((rax_9 != 0 || rax_10 != rdi_1))
                    return 0xffffffff;
                
                uint64_t rax_11 = rdi_1;
                rbx[0xc] += rax_11;
                rbx[0x13] -= rax_11;
                rbx[1] = *rbx;
                rbx[2] = rdi_1;
            }
        }
        
        int32_t rax_13 = rbx[0x21];
        
        if ((rax_13 == 0 || rbx[0x23] != 0))
        {
            int32_t i_2 = rbx[2];
            
            if ((i_2 == 0 && rbx[0x13] == 0))
                break;
            
            if (rbx[4] < i_2)
                i_2 = rbx[4];
            
            if (i_2 != 0)
            {
                int64_t rdx_4 = 0;
                uint64_t i_1 = i_2;
                uint64_t i;
                
                do
                {
                    rdx_4 += 1;
                    *((rdx_4 + rbx[3]) - 1) = *((rdx_4 + rbx[1]) - 1);
                    i = i_1;
                    i_1 -= 1;
                } while (i != 1);
            }
            
            char* rdx_5 = rbx[3];
            int32_t rcx_8 = rbx[0x12];
            uint64_t i_3 = i_2;
            rbx[0x11] += i_3;
            int32_t rax_19 = sub_180021570(rcx_8, rdx_5, i_2);
            rbx[0x14] -= i_3;
            rbx[2] -= i_2;
            rbx[4] -= i_2;
            rbx[3] += i_3;
            rbx[1] += i_3;
            *(rbx + 0x24) += i_2;
            r12 += i_2;
            rbx[0x12] = rax_19;
        }
        else if (rax_13 != 0xc)
        {
            uint64_t r14_1 = *(rbx + 0x24);
            char* r15_1 = rbx[3];
            int32_t rax_14 = sub_18001eb30(&rbx[1], 2);
            int32_t rbp_1 = rax_14;
            
            if ((rax_14 >= 0 && rbx[5] != 0))
                rbp_1 = -3;
            
            int32_t rsi_1 = *(rbx + 0x24);
            int32_t rcx_6 = rbx[0x12];
            uint64_t rdi_3 = (rsi_1 - r14_1);
            rbx[0x11] += rdi_3;
            int32_t rax_15 = sub_180021570(rcx_6, r15_1, rdi_3);
            rbx[0x14] -= rdi_3;
            r12 += (rsi_1 - r14_1);
            rbx[0x12] = rax_15;
            
            if (rbp_1 == 1)
                break;
            
            if (rbp_1 != 0)
                return rbp_1;
        }
    }
    
    return r12;
}

int64_t call_zopen64(int64_t* arg1)
{
    int64_t r9 = *arg1;
    arg1[7];
    
    if (r9 == 0)
        /* jump -> *(arg1 + 0x40) */
    
    /* jump -> r9 */
}

int64_t sub_180023380(void* arg1, int64_t, int64_t arg3)
{
    int64_t rax_2 = *(arg1 + 0x20);
    
    if (rax_2 != 0)
    {
        *(arg1 + 0x38);
        /* jump -> rax_2 */
    }
    
    if (arg3 != arg3)
        return 0xffffffff;
    
    *(arg1 + 0x38);
    /* jump -> *(arg1 + 0x50) */
}

uint64_t sub_1800233b0(void* arg1)
{
    if (*(arg1 + 0x20) != 0)
        /* jump -> *(arg1 + 0x18) */
    
    int32_t rax_1 = *(arg1 + 0x48)(*(arg1 + 0x38));
    
    if (rax_1 != 0xffffffff)
        return rax_1;
    
    return -1;
}

void fill_fopen64_filefunc(int64_t (** arg1)(int64_t arg1, char* arg2, char arg3))
{
    arg1[7] = 0;
    *arg1 = fopen64_file_func;
    arg1[1] = fread_file_func;
    arg1[2] = fwrite_file_func;
    arg1[3] = sub_180023540;
    arg1[4] = sub_1800234e0;
    arg1[5] = &data_1800233f0;
    arg1[6] = &data_180023400;
}

int64_t fopen64_file_func(int64_t arg1, char* arg2, char arg3)
{
    void* const rdx;
    
    if ((arg3 & 3) == 1)
        rdx = &data_180025354;
    else if ((arg3 & 4) == 0)
    {
        rdx = &data_18002535c;
        
        if ((arg3 & 8) == 0)
            rdx = nullptr;
    }
    else
        rdx = &data_180025358;
    
    if ((arg2 != 0 && rdx != 0))
        /* tailcall */
        return fopen(arg2, rdx);
    
    return 0;
}

int64_t fread_file_func(int64_t arg1, FILE* arg2, int64_t arg3, int32_t arg4)
{
    /* tailcall */
    return fread(arg3, 1, arg4, arg2);
}

uint64_t sub_1800234e0(int64_t arg1, FILE* arg2, int64_t arg3, int32_t arg4)
{
    int32_t rbx = 0;
    int32_t _Origin;
    
    if (arg4 == 0)
        _Origin = 0;
    else if (arg4 == 1)
        _Origin = 1;
    else
    {
        if (arg4 != 2)
            return 0xffffffff;
        
        _Origin = 2;
    }
    
    if (_fseeki64(arg2, arg3, _Origin) != 0)
        rbx = -1;
    
    return rbx;
}

int64_t sub_180023540(int64_t arg1, FILE* arg2)
{
    /* tailcall */
    return _ftelli64(arg2);
}

int64_t fwrite_file_func(int64_t arg1, FILE* arg2, int64_t arg3, int32_t arg4)
{
    /* tailcall */
    return fwrite(arg3, 1, arg4, arg2);
}

void __security_check_cookie(int64_t arg1)
{
    if (arg1 == __security_cookie)
    {
        int64_t rcx = (ROLQ(arg1, 0x10));
        
        if ((rcx & 0xffff) == 0)
            return;
        
        arg1 = (RORQ(rcx, 0x10));
    }
    
    /* tailcall */
    return __report_gsfailure(arg1);
}

void sub_1800235a4(void* _Block)
{
    /* tailcall */
    return sub_18002367c(_Block);
}

int64_t `eh vector vbase constructor iterator'(int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4)
{
    arg_20 = arg4;
    result_2 = arg3;
    arg_10 = arg2;
    int64_t result_1 = arg3;
    char var_38 = 0;
    int64_t rdi_2 = ((arg2 * arg3) + arg1);
    arg_8 = rdi_2;
    int64_t result;
    
    while (true)
    {
        result = result_1;
        result_1 -= 1;
        result_2 = result_1;
        
        if (result == 0)
            break;
        
        rdi_2 -= arg2;
        arg_8 = rdi_2;
        j__guard_check_icall();
        arg4(rdi_2);
    }
    
    char var_38_1 = 1;
    return result;
}

void __ArrayUnwind(int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4)
{
    arg_8 = arg1;
    int64_t rdi = arg1;
    int64_t rbx = 0;
    
    while (true)
    {
        int64_t var_40_1 = rbx;
        
        if (rbx == arg3)
            break;
        
        rdi -= arg2;
        arg_8 = rdi;
        j__guard_check_icall();
        arg4(rdi);
        rbx += 1;
    }
}

void sub_18002367c(void* _Block)
{
    /* tailcall */
    return sub_18002417c(_Block);
}

int64_t j_operator new(uint64_t arg1)
{
    /* tailcall */
    return operator new(arg1);
}

void `eh vector constructor iterator'(int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4)
{
    arg_10 = arg2;
    arg_8 = arg1;
    int64_t rdi = arg1;
    int64_t rbx = 0;
    int64_t var_20 = 0;
    char var_28 = 0;
    
    while (rbx != arg3)
    {
        j__guard_check_icall();
        arg4(rdi);
        rdi += arg2;
        arg_8 = rdi;
        rbx += 1;
        int64_t var_20_1 = rbx;
    }
    
    char var_28_1 = 1;
}

int64_t __scrt_acquire_startup_lock()
{
    int64_t result;
    
    if (sub_180024398() == 0)
    {
    label_18002372a:
        result = 0;
    }
    else
    {
        TEB* gsbase;
        void* StackBase = gsbase->NtTib.Self->NtTib.StackBase;
        
        do
        {
            result = 0;
            bool z_1;
            
            if (0 == data_1800300e8)
            {
                data_1800300e8 = StackBase;
                z_1 = true;
            }
            else
            {
                result = data_1800300e8;
                z_1 = false;
            }
            
            if (z_1)
                goto label_18002372a;
        } while (StackBase != result);
        
        result = 1;
    }
    
    return result;
}

errno_t __scrt_dllmain_after_initialize_c()
{
    errno_t result;
    
    if (sub_180024398() == 0)
    {
        if (_configure_narrow_argv(_crt_argv_unexpanded_arguments) == 0)
        {
            _initialize_narrow_environment();
            result = 1;
        }
        else
            result = 0;
    }
    else
    {
        int64_t xcr0;
        __isa_available_init(xcr0);
        result = 1;
    }
    
    return result;
}

bool __scrt_dllmain_before_initialize_c()
{
    return __scrt_initialize_onexit_tables(0) != 0;
}

int64_t __scrt_dllmain_crt_thread_attach()
{
    if ((sub_1800248f0() != 0 && sub_1800248f0() != 0))
        return 1;
    
    return 0;
}

int64_t __scrt_dllmain_crt_thread_detach()
{
    int64_t result;
    result = 1;
    return result;
}

int64_t __scrt_dllmain_exception_filter(int64_t arg1, int32_t arg2, int64_t arg3, int64_t arg4, uint32_t arg5, struct _EXCEPTION_POINTERS* arg6)
{
    if ((sub_180024398() == 0 && arg2 == 1))
    {
        j__guard_check_icall();
        arg4(arg1, 0, arg3);
    }
    
    /* tailcall */
    return _seh_filter_dll(arg5, arg6);
}

int64_t __scrt_dllmain_uninitialize_c()
{
    if (sub_180024398() != 0)
        /* tailcall */
        return _execute_onexit_table(&data_1800300f0);
    
    sub_1800248f4();
    return _cexit();
}

int64_t __scrt_dllmain_uninitialize_critical()
{
    /* tailcall */
    return sub_1800248f0();
}

int64_t __scrt_initialize_crt(int32_t arg1)
{
    char rax = data_180030120;
    
    if (arg1 == 0)
        rax = 1;
    
    data_180030120 = rax;
    int64_t xcr0;
    __isa_available_init(xcr0);
    
    if ((sub_1800248f0() != 0 && sub_1800248f0() != 0))
        return 1;
    
    return 0;
}

int32_t __scrt_initialize_onexit_tables(int32_t arg1)
{
    if (arg1 > 1)
    {
        __scrt_fastfail(5);
        breakpoint();
    }
    
    int32_t result;
    
    if ((sub_180024398() == 0 || arg1 != 0))
    {
        uint64_t __security_cookie_1 = __security_cookie;
        result = 1;
        int64_t r8_2 = ((RORQ(-1, (0x40 - (__security_cookie_1 & 0x3f)))) ^ __security_cookie_1);
        int64_t var_20_1 = r8_2;
        *data_1800300f0 = r8_2;
        int64_t var_20_2 = r8_2;
        data_180030100 = r8_2;
        data_180030108 = r8_2;
        data_180030118 = r8_2;
    }
    else if (_initialize_onexit_table(&data_1800300f0) == 0)
        result = _initialize_onexit_table(&data_180030108) == 0;
    else
        result = 0;
    
    return result;
}

uint64_t __scrt_is_nonwritable_in_current_image(int64_t arg1)
{
    struct Section_Header* const rdx_1 = &__section_headers;
    
    while (true)
    {
        struct Section_Header* const var_18_1 = rdx_1;
        
        if (rdx_1 == &data_180000340)
        {
            rdx_1 = nullptr;
            break;
        }
        
        uint64_t virtualAddress = rdx_1->virtualAddress;
        
        if (((arg1 - &__dos_header) >= virtualAddress && (arg1 - &__dos_header) < (rdx_1->virtualSize + virtualAddress)))
            break;
        
        rdx_1 = &rdx_1[1];
    }
    
    uint64_t result;
    
    if (rdx_1 == 0)
        result = 0;
    else if (rdx_1->characteristics >= 0)
        result = 1;
    else
        result = 0;
    
    return result;
}

int64_t __scrt_release_startup_lock(char arg1)
{
    int64_t rbx;
    rbx = arg1;
    int32_t result = sub_180024398();
    
    if ((result != 0 && rbx == 0))
    {
        data_1800300e8;
        data_1800300e8 = 0;
    }
    
    return result;
}

int64_t __scrt_uninitialize_crt(char arg1, char arg2)
{
    int64_t rbx;
    rbx = arg1;
    data_180030120;
    int64_t result;
    result = 1;
    return result;
}

_onexit_t_1 _onexit(_onexit_t_1 arg1)
{
    uint64_t __security_cookie_1 = __security_cookie;
    int32_t rax;
    
    if ((RORQ((__security_cookie_1 ^ data_1800300f0), (__security_cookie_1 & 0x3f))) != -1)
        rax = _register_onexit_function(&data_1800300f0, arg1);
    else
        rax = _crt_atexit(arg1);
    
    if (rax == 0)
        return arg1;
    
    return nullptr;
}

uint64_t atexit(_onexit_t_1 arg1)
{
    _onexit_t_1 rax = _onexit(arg1);
    int32_t rax_1 = -(rax);
    return (-((rax_1 - rax_1)) - 1);
}

uint64_t dllmain_crt_dispatch(int64_t arg1, int32_t arg2, int64_t arg3)
{
    if (arg2 == 0)
    {
        arg1 = arg3 != 0;
        /* tailcall */
        return dllmain_crt_process_detach(arg1);
    }
    
    if (arg2 == 1)
        /* tailcall */
        return sub_180023b28(arg1, arg3);
    
    char rax_1;
    
    if (arg2 == 2)
        rax_1 = __scrt_dllmain_crt_thread_attach();
    else
    {
        if (arg2 != 3)
            return 1;
        
        rax_1 = __scrt_dllmain_crt_thread_detach();
    }
    
    return rax_1;
}

int64_t sub_180023b28(int64_t arg1, int64_t arg2)
{
    if (__scrt_initialize_crt(0) != 0)
    {
        char rax_1 = __scrt_acquire_startup_lock();
        int64_t rbx;
        rbx = rax_1;
        arg_18 = rax_1;
        int64_t rdi;
        rdi = 1;
        
        if (data_1800300e0 != 0)
            __scrt_fastfail(7);
        
        data_1800300e0 = 1;
        
        if (__scrt_dllmain_before_initialize_c() != 0)
        {
            sub_1800245fc();
            atexit(sub_180024648);
            sub_1800245bc();
            atexit(sub_1800245cc);
            __scrt_initialize_default_local_stdio_options();
            
            if ((_initterm_e(&data_1800252d0, &data_1800252d8) == 0 && __scrt_dllmain_after_initialize_c() != 0))
            {
                _initterm(&data_1800252b0, &data_1800252c8);
                data_1800300e0 = 2;
                rdi = 0;
            }
        }
        
        __scrt_release_startup_lock(rbx);
        
        if (rdi == 0)
        {
            if ((data_180030960 != 0 && __scrt_is_nonwritable_in_current_image(&data_180030960) != 0))
            {
                int64_t rbx_1 = data_180030960;
                j__guard_check_icall();
                rbx_1(arg1, 2, arg2);
            }
            
            data_180030124 += 1;
            return 1;
        }
    }
    
    return 0;
}

uint64_t dllmain_crt_process_detach(char arg1)
{
    int64_t rsi;
    rsi = arg1;
    int32_t rax = data_180030124;
    
    if (rax <= 0)
        return 0;
    
    data_180030124 = (rax - 1);
    char rax_3 = __scrt_acquire_startup_lock();
    int64_t rdi;
    rdi = rax_3;
    arg_10 = rax_3;
    
    if (data_1800300e0 != 2)
        __scrt_fastfail(7);
    
    __scrt_dllmain_uninitialize_c();
    data_1800300e0 = 0;
    __scrt_dllmain_uninitialize_critical();
    __scrt_release_startup_lock(rdi);
    int32_t rbx;
    rbx = __scrt_uninitialize_crt(rsi, 0) != 0;
    return rbx;
}

uint64_t dllmain_dispatch(HMODULE arg1, int32_t arg2, int64_t arg3)
{
    arg_18 = arg3;
    arg_10 = arg2;
    arg_8 = arg1;
    
    if ((arg2 == 0 && data_180030124 <= arg2))
        return 0;
    
    int32_t rbx_1;
    
    if ((arg2 - 1) > 1)
    {
    label_180023d47:
        DllMain(arg1, arg2);
        rbx_1 = 1;
        int32_t var_28_3 = 1;
        
        if ((arg2 == 0 || arg2 == 3))
        {
            int32_t rax_4 = dllmain_crt_dispatch(arg1, arg2, arg3);
            rbx_1 = rax_4;
            int32_t var_28_4 = rax_4;
            
            if (rax_4 != 0)
            {
                int32_t rax_5 = dllmain_raw(arg1, arg2, arg3);
                rbx_1 = rax_5;
                int32_t var_28_5 = rax_5;
            }
        }
    }
    else
    {
        int32_t rax_2 = dllmain_raw(arg1, arg2, arg3);
        rbx_1 = rax_2;
        int32_t var_28_1 = rax_2;
        
        if (rax_2 != 0)
        {
            int32_t rax_3 = dllmain_crt_dispatch(arg1, arg2, arg3);
            rbx_1 = rax_3;
            int32_t var_28_2 = rax_3;
            
            if (rax_3 != 0)
                goto label_180023d47;
        }
    }
    
    return rbx_1;
}

int64_t dllmain_raw(int64_t arg1, int32_t arg2, int64_t arg3)
{
    return 1;
}

int64_t _start(HMODULE arg1, int32_t arg2, int64_t arg3)
{
    if (arg2 == 1)
        __security_init_cookie();
    
    /* tailcall */
    return dllmain_dispatch(arg1, arg2, arg3);
}

int64_t __raise_securityfailure(EXCEPTION_POINTERS* arg1)
{
    SetUnhandledExceptionFilter(nullptr);
    UnhandledExceptionFilter(arg1);
    /* tailcall */
    return TerminateProcess(GetCurrentProcess(), 0xc0000409);
}

void __report_gsfailure(uint64_t stack_cookie) __noreturn
{
    stack_cookie_1 = stack_cookie;
    
    if (IsProcessorFeaturePresent(PF_FASTFAIL_AVAILABLE) != 0)
        trap(0xd);
    
    capture_previous_context(&data_1800301d0);
    data_1800302c8 = __return_addr;
    data_180030268 = &stack_cookie_1;
    data_180030140 = data_1800302c8;
    data_180030250 = stack_cookie_1;
    data_180030130 = 0xc0000409;
    data_180030134 = 1;
    data_180030148 = 1;
    data_180030150 = 2;
    uint64_t __security_cookie_1 = __security_cookie;
    int64_t var_10 = data_180030010;
    __raise_securityfailure(&data_180025368);
}

int64_t _lockexit()
{
    return __report_securityfailure(8);
}

int64_t __report_securityfailure(int32_t arg1)
{
    arg_8 = arg1;
    
    if (IsProcessorFeaturePresent(PF_FASTFAIL_AVAILABLE) != 0)
        trap(0xd);
    
    capture_current_context(&data_1800301d0);
    data_1800302c8 = __return_addr;
    data_180030268 = &arg_8;
    data_180030140 = data_1800302c8;
    data_180030130 = 0xc0000409;
    data_180030134 = 1;
    data_180030148 = 1;
    data_180030150 = arg_8;
    return __raise_securityfailure(&data_180025368);
}

IMAGE_RUNTIME_FUNCTION_ENTRY* capture_current_context(CONTEXT* arg1)
{
    RtlCaptureContext(arg1);
    uint64_t Rip = arg1->Rip;
    IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionEntry = RtlLookupFunctionEntry(Rip, &ImageBase, nullptr);
    
    if (FunctionEntry == 0)
        return FunctionEntry;
    
    return RtlVirtualUnwind(UNW_FLAG_NHANDLER, ImageBase, Rip, FunctionEntry, arg1, &HandlerData, &EstablisherFrame, nullptr);
}

IMAGE_RUNTIME_FUNCTION_ENTRY* capture_previous_context(CONTEXT* arg1)
{
    RtlCaptureContext(arg1);
    uint64_t Rip = arg1->Rip;
    IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionEntry;
    
    for (int32_t i = 0; i < 2; i += 1)
    {
        FunctionEntry = RtlLookupFunctionEntry(Rip, &ImageBase, nullptr);
        
        if (FunctionEntry == 0)
            break;
        
        FunctionEntry = RtlVirtualUnwind(UNW_FLAG_NHANDLER, ImageBase, Rip, FunctionEntry, arg1, &HandlerData, &EstablisherFrame, nullptr);
    }
    
    return FunctionEntry;
}

int64_t __GSHandlerCheck(int64_t arg1, int64_t arg2, int64_t arg3, void* arg4)
{
    __GSHandlerCheckCommon(arg2, arg4, *(arg4 + 0x38));
    return 1;
}

int64_t __GSHandlerCheckCommon(int64_t arg1, void* arg2, int32_t* arg3)
{
    int64_t r9 = arg1;
    int64_t r10 = arg1;
    
    if ((*arg3 & 4) != 0)
        r10 = ((arg3[1] + arg1) & -(arg3[2]));
    
    void* rcx_2 = (*(*(arg2 + 0x10) + 8) + *(arg2 + 8));
    
    if ((*(rcx_2 + 3) & 0xf) != 0)
        r9 += (*(rcx_2 + 3) & 0xfffffff0);
    
    /* tailcall */
    return __security_check_cookie((r9 ^ *((*arg3 & 0xfffffff8) + r10)));
}

void sub_18002417c(void* _Block)
{
    /* tailcall */
    return free(_Block);
}

int64_t j__guard_check_icall()
{
    /* tailcall */
    return _guard_check_icall();
}

int64_t operator new(uint64_t arg1)
{
    uint64_t _Size = arg1;
    
    while (true)
    {
        int64_t result = malloc(arg1);
        
        if (result != 0)
            return result;
        
        if (_callnewh(_Size) == 0)
            break;
        
        arg1 = _Size;
    }
    
    if (_Size == -1)
    {
        __scrt_throw_std_bad_alloc();
        /* no return */
    }
    
    stdext::threads::_Throw_lock_error();
    /* no return */
}

int64_t __isa_available_init(int64_t arg1 @ xcr0)
{
    char var_20 = 0;
    data_18003001c = 2;
    int32_t temp0;
    temp0 = __cpuid(0, 0);
    data_180030018 = 1;
    int32_t r8_2 = data_1800306a0;
    int32_t temp0_1;
    temp0_1 = __cpuid(1, 0);
    int32_t var_18 = temp0_1;
    int32_t temp2;
    int32_t var_10 = temp2;
    int32_t temp1;
    int32_t var_14 = temp1;
    int32_t temp3;
    int32_t var_c = temp3;
    
    if ((((temp3 ^ 0x49656e69) | (temp2 ^ 0x6c65746e)) | (temp1 ^ 0x756e6547)) == 0)
    {
        data_180030020 = -1;
        r8_2 |= 4;
        int32_t rax_2 = (temp0_1 & 0xfff3ff0);
        data_1800306a0 = r8_2;
        
        if (((rax_2 == 0x106c0 || rax_2 == 0x20660) || rax_2 == 0x20670))
        {
            r8_2 |= 1;
            data_1800306a0 = r8_2;
        }
        else
        {
            uint64_t rax_3 = (rax_2 - 0x30650);
            
            if ((rax_3 <= 0x20 && (TEST_BITQ(0x100010001, rax_3))))
            {
                r8_2 |= 1;
                data_1800306a0 = r8_2;
            }
        }
    }
    
    if (((((temp1 ^ 0x68747541) | (temp3 ^ 0x69746e65)) | (temp2 ^ 0x444d4163)) == 0 && (temp0_1 & 0xff00f00) >= 0x600f00))
    {
        r8_2 |= 4;
        data_1800306a0 = r8_2;
    }
    
    int32_t var_28 = temp3;
    int32_t var_24 = temp2;
    
    if (temp0 >= 7)
    {
        int32_t temp0_2;
        temp0_2 = __cpuid(7, 0);
        int32_t var_18_1 = temp0_2;
        int32_t var_14_1 = temp1;
        int32_t var_10_1 = temp2;
        int32_t var_c_1 = temp3;
        var_20 = temp1;
        
        if ((TEST_BITD(temp1, 9)))
            data_1800306a0 = (r8_2 | 2);
    }
    
    if ((TEST_BITD(temp2, 0x14)))
    {
        data_180030018 = 2;
        data_18003001c = 6;
        
        if (((TEST_BITD(temp2, 0x1b)) && (TEST_BITD(temp2, 0x1c))))
        {
            int32_t temp0_3;
            temp0_3 = _xgetbv(0, arg1);
            
            if ((((temp0_3 << 0x20) | temp1) & 6) == 6)
            {
                int32_t rax_8 = (data_18003001c | 8);
                data_180030018 = 3;
                data_18003001c = rax_8;
                
                if ((var_20 & 0x20) != 0)
                {
                    data_180030018 = 5;
                    data_18003001c = (rax_8 | 0x20);
                }
            }
        }
    }
    
    return 0;
}

int64_t sub_180024390() __pure
{
    return 1;
}

int64_t sub_180024398()
{
    int64_t result;
    result = data_180030030 != 0;
    return result;
}

int32_t __scrt_fastfail(int32_t arg1)
{
    if (IsProcessorFeaturePresent(PF_FASTFAIL_AVAILABLE) != 0)
        trap(0xd);
    
    data_1800306a4 = 0;
    void ContextRecord;
    memset(&ContextRecord, 0, 0x4d0);
    RtlCaptureContext(&ContextRecord);
    uint64_t ControlPc;
    IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionEntry = RtlLookupFunctionEntry(ControlPc, &ImageBase, nullptr);
    
    if (FunctionEntry != 0)
        RtlVirtualUnwind(UNW_FLAG_NHANDLER, ImageBase, ControlPc, FunctionEntry, &ContextRecord, &HandlerData, &EstablisherFrame, nullptr);
    
    void* const __return_addr_2 = __return_addr;
    int64_t* var_440 = &__saved_rbx;
    int32_t var_578;
    memset(&var_578, 0, 0x98);
    void* const __return_addr_1 = __return_addr;
    var_578 = 0x40000015;
    int32_t var_574 = 1;
    bool cond:0 = IsDebuggerPresent() == 1;
    int32_t* ExceptionInfo = &var_578;
    uint64_t rbx_1;
    rbx_1 = cond:0;
    void* var_580 = &ContextRecord;
    SetUnhandledExceptionFilter(nullptr);
    int32_t result = UnhandledExceptionFilter(&ExceptionInfo);
    
    if (result == 0)
    {
        char temp0_1 = rbx_1;
        rbx_1 = -(rbx_1);
        result = (result - result);
        data_1800306a4 &= result;
    }
    
    return result;
}

uint64_t __security_init_cookie()
{
    lpSystemTimeAsFileTime = 0;
    uint64_t __security_cookie_1 = __security_cookie;
    
    if (__security_cookie_1 == 0x2b992ddfa232)
    {
        GetSystemTimeAsFileTime(&lpSystemTimeAsFileTime);
        lpSystemTimeAsFileTime_1 = lpSystemTimeAsFileTime;
        uint64_t rax_2 = GetCurrentThreadId();
        lpSystemTimeAsFileTime_1 ^= rax_2;
        uint64_t rax_4 = GetCurrentProcessId();
        lpSystemTimeAsFileTime_1 ^= rax_4;
        QueryPerformanceCounter(&lpPerformanceCount);
        __security_cookie_1 = (((((lpPerformanceCount << 0x20) ^ lpPerformanceCount) ^ lpSystemTimeAsFileTime_1) ^ &lpSystemTimeAsFileTime_1) & 0xffffffffffff);
        
        if (__security_cookie_1 == 0x2b992ddfa232)
            __security_cookie_1 = 0x2b992ddfa233;
        
        __security_cookie = __security_cookie_1;
    }
    
    uint64_t result = !(__security_cookie_1);
    data_180030010 = result;
    return result;
}

int64_t DllMain(HMODULE arg1, int32_t arg2)
{
    if (arg2 == 1)
        DisableThreadLibraryCalls(arg1);
    
    return 1;
}

int64_t sub_1800245bc()
{
    /* tailcall */
    return InitializeSListHead(&data_1800306b0);
}

int64_t sub_1800245cc()
{
    /* tailcall */
    return __std_type_info_destroy_list(&data_1800306b0);
}

int64_t __scrt_initialize_default_local_stdio_options()
{
    data_1800306c0 |= 4;
    data_180030958 |= 2;
    return &data_180030958;
}

int64_t sub_1800245f4() __pure
{
    return &data_180030960;
}

void sub_1800245fc()
{
    for (void* const i = &data_180029700; i < &data_180029700; i += 8)
    {
        int64_t rdi_1 = *i;
        
        if (rdi_1 != 0)
        {
            j__guard_check_icall();
            rdi_1(rdi_1);
        }
    }
}

void sub_180024648()
{
    for (void* const i = &data_180029710; i < &data_180029710; i += 8)
    {
        int64_t rdi_1 = *i;
        
        if (rdi_1 != 0)
        {
            j__guard_check_icall();
            rdi_1(rdi_1);
        }
    }
}

void*** std::__non_rtti_object::__non_rtti_object(void*** arg1, void* arg2)
{
    *arg1 = &data_180025380;
    arg1[1] = 0;
    arg1[2] = 0;
    __std_exception_copy((arg2 + 8), &arg1[1]);
    *arg1 = &data_1800253b0;
    return arg1;
}

void*** std::bad_exception::bad_exception(void*** arg1)
{
    arg1[2] = 0;
    arg1[1] = "bad allocation";
    *arg1 = &data_1800253b0;
    return arg1;
}

void*** Concurrency::invalid_link_target::invalid_link_target(void*** arg1, void* arg2)
{
    *arg1 = &data_180025380;
    arg1[1] = 0;
    arg1[2] = 0;
    __std_exception_copy((arg2 + 8), &arg1[1]);
    *arg1 = &data_1800253d8;
    return arg1;
}

void*** std::bad_cast::bad_cast(void*** arg1)
{
    arg1[2] = 0;
    arg1[1] = "bad array new length";
    *arg1 = &data_1800253d8;
    return arg1;
}

void*** Concurrency::invalid_multiple_scheduling::invalid_multiple_scheduling(void*** arg1, void* arg2)
{
    *arg1 = &data_180025380;
    arg1[1] = 0;
    arg1[2] = 0;
    __std_exception_copy((arg2 + 8), &arg1[1]);
    return arg1;
}

int64_t Concurrency::invalid_oversubscribe_operation::~invalid_oversubscribe_operation(void*** arg1)
{
    *arg1 = &data_180025380;
    /* tailcall */
    return __std_exception_destroy(&arg1[1]);
}

void*** std::bad_typeid::`scalar deleting destructor'(void*** arg1, char arg2)
{
    *arg1 = &data_180025380;
    __std_exception_destroy(&arg1[1]);
    
    if ((arg2 & 1) != 0)
        sub_18002367c(arg1);
    
    return arg1;
}

void stdext::threads::_Throw_lock_error() __noreturn
{
    void pExceptionObject;
    std::bad_exception::bad_exception(&pExceptionObject);
    _CxxThrowException(&pExceptionObject, &data_18002ee08);
    /* no return */
}

void __scrt_throw_std_bad_alloc() __noreturn
{
    void pExceptionObject;
    std::bad_cast::bad_cast(&pExceptionObject);
    _CxxThrowException(&pExceptionObject, &data_18002ee90);
    /* no return */
}

void*** type_info::`scalar deleting destructor'(void*** arg1, char arg2)
{
    *arg1 = &data_180025408;
    
    if ((arg2 & 1) != 0)
        sub_18002367c(arg1);
    
    return arg1;
}

void __std_terminate() __noreturn
{
    /* tailcall */
    return __std_terminate();
}

enum _EXCEPTION_DISPOSITION __C_specific_handler(struct _EXCEPTION_RECORD* ExceptionRecord, void* EstablisherFrame, struct _CONTEXT* ContextRecord, struct _DISPATCHER_CONTEXT* DispatcherContext)
{
    /* tailcall */
    return __C_specific_handler(ExceptionRecord, EstablisherFrame, ContextRecord, DispatcherContext);
}

int64_t memset(void* dest, int32_t c, uint64_t count)
{
    /* tailcall */
    return memset(dest, c, count);
}

void __std_type_info_destroy_list(struct __type_info_node* root_node)
{
    /* tailcall */
    return __std_type_info_destroy_list(root_node);
}

void __std_exception_copy(struct __std_exception_data* from, struct __std_exception_data* to)
{
    /* tailcall */
    return __std_exception_copy(from, to);
}

void __std_exception_destroy(struct __std_exception_data* data)
{
    /* tailcall */
    return __std_exception_destroy(data);
}

void _CxxThrowException(void* pExceptionObject, struct _s__ThrowInfo* pThrowInfo) __noreturn
{
    /* tailcall */
    return _CxxThrowException(pExceptionObject, pThrowInfo);
}

void free(void* _Block)
{
    /* tailcall */
    return free(_Block);
}

int64_t malloc(uint64_t _Size)
{
    /* tailcall */
    return malloc(_Size);
}

void terminate() __noreturn
{
    /* tailcall */
    return terminate();
}

int32_t _seh_filter_dll(uint32_t _ExceptionNum, struct _EXCEPTION_POINTERS* _ExceptionPtr)
{
    /* tailcall */
    return _seh_filter_dll(_ExceptionNum, _ExceptionPtr);
}

errno_t _configure_narrow_argv(enum _crt_argv_mode mode)
{
    /* tailcall */
    return _configure_narrow_argv(mode);
}

int32_t _initialize_narrow_environment()
{
    /* tailcall */
    return _initialize_narrow_environment();
}

int32_t _initialize_onexit_table(struct _onexit_table_t* _Table)
{
    /* tailcall */
    return _initialize_onexit_table(_Table);
}

int32_t _register_onexit_function(struct _onexit_table_t* _Table, _onexit_t_1 _Function)
{
    /* tailcall */
    return _register_onexit_function(_Table, _Function);
}

int32_t _execute_onexit_table(struct _onexit_table_t* _Table)
{
    /* tailcall */
    return _execute_onexit_table(_Table);
}

int32_t _crt_atexit(_PVFV _Function)
{
    /* tailcall */
    return _crt_atexit(_Function);
}

void _cexit()
{
    /* tailcall */
    return _cexit();
}

void _initterm(_PVFV* _First, _PVFV* _Last)
{
    /* tailcall */
    return _initterm(_First, _Last);
}

int32_t _initterm_e(_PIFV* _First, _PIFV* _Last)
{
    /* tailcall */
    return _initterm_e(_First, _Last);
}

int32_t _callnewh(uint64_t _Size)
{
    /* tailcall */
    return _callnewh(_Size);
}

BOOL IsProcessorFeaturePresent(enum PROCESSOR_FEATURE_ID ProcessorFeature)
{
    /* tailcall */
    return IsProcessorFeaturePresent(ProcessorFeature);
}

int64_t sub_1800248f0() __pure
{
    int64_t result;
    result = 1;
    return result;
}

int64_t sub_1800248f4() __pure
{
    return 0;
}

char __GSHandlerCheck_EH4(struct EHExceptionRecord* arg1, uint64_t arg2, struct _CONTEXT* arg3, struct _xDISPATCHER_CONTEXT* arg4)
{
    void* HandlerData = arg4->HandlerData;
    __GSHandlerCheckCommon(arg2, arg4, (HandlerData + 4));
    char result = (arg1->ExceptionFlags & 0x66);
    
    if ((*(HandlerData + 4) & (-(((HandlerData + 4) - (HandlerData + 4))) + 1)) == 0)
        return result;
    
    return __CxxFrameHandler3(arg1, arg2, arg3, arg4);
}

enum _EXCEPTION_DISPOSITION __CxxFrameHandler3(struct EHExceptionRecord* pExcept, uint64_t RN, struct _CONTEXT* pContext, struct _xDISPATCHER_CONTEXT* pDC)
{
    /* tailcall */
    return __CxxFrameHandler3(pExcept, RN, pContext, pDC);
}

int64_t memcpy(void* dest, void const* src, uint32_t count)
{
    /* tailcall */
    return memcpy(dest, src, count);
}

double sqrt(double _X)
{
    /* tailcall */
    return sqrt(_X);
}

int64_t _guard_dispatch_icall_nop(int64_t arg1 @ rax)
{
    /* jump -> arg1 */
}

int64_t ?catch$0@?0???$_Resetp@V__ExceptionPtr@@P6AXPEAV1@@ZV?$_DebugMallocator@H@@@?$shared_ptr@V__ExceptionPtr@@@std@@AEAAXPEAV__ExceptionPtr@@P6AX0@ZV?$_DebugMallocator@H@@@Z@4HA() __pure
{
    int64_t rdx;
    arg_10 = rdx;
    return &data_180001676;
}

int64_t sub_1800249d0(int64_t arg1, void* arg2)
{
    *(arg2 + 0x70);
    *(arg2 + 0x70);
    return sub_1800235a4(*(arg2 + 0x78));
}

int64_t Concurrency::details::_UnrealizedChore::_UnstructuredChoreWrapper::catch$2::catch$2() __pure
{
    int64_t rdx;
    arg_10 = rdx;
    return &data_1800017fd;
}

int64_t sub_180024a30(int64_t arg1, void* arg2)
{
    *(arg2 + 0x60);
    *(arg2 + 0x60);
    return sub_1800235a4(*(arg2 + 0x68));
}

int64_t sub_180024a70(int64_t arg1, void* arg2)
{
    *(arg2 + 0x70);
    *(arg2 + 0x70);
    return sub_1800235a4(*(arg2 + 0x78));
}

int64_t Concurrency::details::_TaskCollection::_Schedule::catch$0::catch$0() __pure
{
    int64_t rdx;
    arg_10 = rdx;
    return &data_180001bee;
}

int64_t sub_180024ad0(int64_t arg1, void* arg2)
{
    *(arg2 + 0x70);
    *(arg2 + 0x70);
    return sub_1800235a4(*(arg2 + 0x78));
}

int64_t Concurrency::details::_UnrealizedChore::_UnstructuredChoreWrapper::catch$0::catch$0() __pure
{
    int64_t rdx;
    arg_10 = rdx;
    return &data_180001e6d;
}

int64_t sub_180024b30(int64_t arg1, void* arg2)
{
    *(arg2 + 0x70);
    *(arg2 + 0x70);
    return sub_1800235a4(*(arg2 + 0x78));
}

int64_t Concurrency::details::UMSFreeVirtualProcessorRoot::Activate::catch$0::catch$0() __pure
{
    int64_t rdx;
    arg_10 = rdx;
    return &data_180001fb1;
}

int64_t sub_180024b90(int64_t arg1, void* arg2)
{
    *(arg2 + 0x70);
    *(arg2 + 0x70);
    return sub_1800235a4(*(arg2 + 0x78));
}

int64_t Concurrency::details::_Task_impl_base::_ScheduleTask::catch$0::catch$0() __pure
{
    int64_t rdx;
    arg_10 = rdx;
    return &data_1800020b4;
}

int64_t sub_180024bf0(int64_t arg1, void* arg2)
{
    *(arg2 + 0x80);
    *(arg2 + 0x80);
    return sub_1800235a4(*(arg2 + 0x88));
}

int64_t Concurrency::details::_Task_impl_base::_ScheduleTask::catch$1::catch$1() __pure
{
    int64_t rdx;
    arg_10 = rdx;
    return &data_180002205;
}

int64_t Concurrency::details::WorkQueue::Steal::dtor$0::dtor$0(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_1800025e0((arg2 + 0x30));
}

int64_t sub_180024c60(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_1800025e0((arg2 + 0x340));
}

int64_t std::num_put<wchar_t,class std::ostreambuf_iterator<wchar_t,struct std::char_traits<wchar_t> > >::_Fput::dtor$0::dtor$0(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_1800025e0((arg2 + 0x30));
}

int64_t Concurrency::details::SchedulerBase::ResetDefaultSchedulerPolicy::dtor$0::dtor$0(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_1800025e0((arg2 + 0x50));
}

int64_t Concurrency::details::_ScheduleFuncWithAutoInline::dtor$0::dtor$0(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_1800025e0((arg2 + 0x50));
}

int64_t Concurrency::task_completion_event<uint8_t>::set::dtor$0::dtor$0(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_180003c30((arg2 + 0x38));
}

int64_t std::money_get<uint16_t,class std::istreambuf_iterator<uint16_t,struct std::char_traits<uint16_t> > >::_Getmfld::dtor$4::dtor$4(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_1800025e0((arg2 + 0x80));
}

int64_t Concurrency::details::_AsyncTaskCollection::_ScheduleWithAutoInline::dtor$0::dtor$0(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_180003be0((arg2 + 0x50));
}

int64_t std::money_get<uint16_t,class std::istreambuf_iterator<uint16_t,struct std::char_traits<uint16_t> > >::_Getmfld::dtor$0::dtor$0(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_1800025e0((arg2 + 0x80));
}

int64_t Concurrency::details::_Originator::_send<enum Concurrency::agent_status>::dtor$2::dtor$2(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_180003c30((arg2 + 0x20));
}

int64_t std::money_put<uint16_t,class std::ostreambuf_iterator<uint16_t,struct std::char_traits<uint16_t> > >::_Putmfld::dtor$1::dtor$1(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_1800025e0((arg2 + 0x80));
}

int64_t Concurrency::task_completion_event<class std::shared_ptr<struct Concurrency::details::_ExceptionHolder>,uint8_t>::_StoreException<class std::shared_ptr<struct Concurrency::details::_ExceptionHolder> >::dtor$1::dtor$1(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_180003af0((arg2 + 0x38));
}

int64_t <lambda_508dc996854572947a45292d62928d80>::operator()::dtor$0::dtor$0(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_180003ba0((arg2 + 0x28));
}

int64_t std::num_get<uint16_t,class std::istreambuf_iterator<uint16_t,struct std::char_traits<uint16_t> > >::_Getffld::dtor$0::dtor$0(int64_t arg1, int64_t arg2)
{
    /* tailcall */
    return sub_1800011c0((arg2 + 0x80));
}

int64_t std::basic_ios<char,struct std::char_traits<char> >::init::dtor$0::dtor$0(int64_t arg1, int64_t arg2)
{
    /* tailcall */
    return sub_1800011c0((arg2 + 0x40));
}

int64_t std::num_get<char,class std::istreambuf_iterator<char,struct std::char_traits<char> > >::do_get::dtor$4::dtor$4(int64_t arg1, int64_t arg2)
{
    /* tailcall */
    return sub_1800011c0((arg2 + 0x70));
}

int64_t std::money_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put::dtor$0::dtor$0(int64_t arg1, int64_t arg2)
{
    /* tailcall */
    return sub_1800011c0((arg2 + 0x70));
}

int64_t sub_180024d4c(int64_t arg1, void* arg2)
{
    *(arg2 + 0x38);
    *(arg2 + 0x38);
    return sub_1800235a4(*(arg2 + 0x58));
}

int64_t std::time_put<uint16_t,class std::ostreambuf_iterator<uint16_t,struct std::char_traits<uint16_t> > >::do_put::dtor$0::dtor$0(int64_t arg1, int64_t arg2)
{
    /* tailcall */
    return sub_1800011c0((arg2 + 0x60));
}

int64_t Concurrency::task_completion_event<struct std::pair<uint8_t,class Concurrency::details::_CancellationTokenState* __ptr64> >::set::dtor$1::dtor$1(int64_t arg1, int64_t arg2)
{
    /* tailcall */
    return sub_1800011c0((arg2 + 0xa0));
}

int64_t sub_180024dac(int64_t arg1, int64_t arg2)
{
    return `eh vector vbase constructor iterator'((arg2 + 0x170), 0x14, 0x32, _guard_check_icall);
}

int64_t std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput::dtor$2::dtor$2(int64_t arg1, void* arg2)
{
    /* tailcall */
    return sub_180003c30((arg2 + 0x40));
}

int64_t sub_180024df0(int64_t arg1, void* arg2)
{
    arg_10 = arg2;
    sub_180022770(*(arg2 + 0x48));
    return &data_18001e530;
}

void `eh vector vbase constructor iterator'::fin$0::fin$0(int64_t arg1, void* arg2)
{
    if (*(arg2 + 0x20) == 0)
        __ArrayUnwind(*(arg2 + 0x60), *(arg2 + 0x68), *(arg2 + 0x70), *(arg2 + 0x78));
}

uint64_t __ArrayUnwind::filt$0::filt$0(int64_t arg1, void* arg2)
{
    *(arg2 + 0x40) = arg1;
    *(arg2 + 0x30) = arg1;
    *(arg2 + 0x38) = **(arg2 + 0x30);
    
    if (**(arg2 + 0x38) != 0xe06d7363)
    {
        *(arg2 + 0x20) = 0;
        return *(arg2 + 0x20);
    }
    
    terminate();
    /* no return */
}

void `eh vector constructor iterator'::fin$0::fin$0(int64_t arg1, void* arg2)
{
    if (*(arg2 + 0x20) == 0)
        __ArrayUnwind(*(arg2 + 0x50), *(arg2 + 0x58), *(arg2 + 0x28), *(arg2 + 0x70));
}

uint64_t __scrt_is_nonwritable_in_current_image$filt$0(int64_t* arg1)
{
    int32_t rcx;
    rcx = **arg1 == 0xc0000005;
    return rcx;
}

int64_t dllmain_crt_process_attach::fin$0::fin$0(char arg1, void* arg2)
{
    /* tailcall */
    return __scrt_release_startup_lock(*(arg2 + 0x40));
}

int64_t dllmain_crt_process_detach::fin$0::fin$0(int64_t arg1, void* arg2)
{
    __scrt_dllmain_uninitialize_critical();
    /* tailcall */
    return __scrt_release_startup_lock(*(arg2 + 0x38));
}

int64_t dllmain_dispatch::filt$0::filt$0(int64_t* arg1, void* arg2)
{
    return __scrt_dllmain_exception_filter(*(arg2 + 0x60), *(arg2 + 0x68), *(arg2 + 0x70), dllmain_crt_dispatch, **arg1, arg1);
}

int64_t sub_180024f30()
{
    int64_t result = sub_1800024d0();
    int64_t rcx = data_1800306d8;
    
    if (rcx != 0)
    {
        result = sub_18002367c(rcx);
        rcx = 0;
        data_1800306d8 = 0;
    }
    
    data_1800306e0 = 0;
    
    if (rcx != 0)
    {
        result = sub_18002367c(rcx);
        data_1800306d8 = 0;
    }
    
    data_1800306e0 = 0;
    return result;
}

int64_t j_sub_1800024d0()
{
    /* tailcall */
    return sub_1800024d0();
}

